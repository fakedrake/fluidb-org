#include <array>

#include <string>

#include <codegen.hh>
class Record14 {
 public:
  Record14(unsigned __sortElem0, unsigned __sortElem1) : sortElem0(__sortElem0), sortElem1(__sortElem1)
  {
  }
  Record14() 
  {
  }
  std::string show() const{
    std::stringstream o;
    o << sortElem0 << " | " << sortElem1;
    return o.str();
  }
  bool operator <(const Record14& otherRec) const{
    return (otherRec.sortElem0 < sortElem0 && otherRec.sortElem1 < sortElem1);
  }
  bool operator ==(const Record14& otherRec) const{
    return (otherRec.sortElem0 == sortElem0 && otherRec.sortElem1 == sortElem1);
  }
  bool operator !=(const Record14& otherRec) const{
    return (otherRec.sortElem0 != sortElem0 || otherRec.sortElem1 != sortElem1);
  }
  unsigned sortElem0;
  unsigned sortElem1;
 private:
};


class Record1 {
 public:
  Record1(unsigned __sym__0__7577655604576576020, fluidb_string<18> __sym__0___45_2957579613704386588, fluidb_string<9> __sym__0__3873855183530032714, fluidb_string<9> __sym__0___45_5414786619423294939, unsigned __sym__0__5557137180551786739, unsigned __sym__0___45_6042740597378878507, fluidb_string<7> __sym__0___45_5833642980832303428, unsigned __sym__0___45_5108599129385010601, unsigned __sym__0__6596363747273139740, unsigned __sym__0___45_3780820615727466252, unsigned __sym__0___45_5733022218377332670, unsigned __sym__0___45_1101619184546797307, fluidb_string<15> __sym__0__5315661629871309616, fluidb_string<2> __sym__0__1548970624774688888, fluidb_string<2> __sym__0__3082040486510970809, fluidb_string<2> __sym__0___45_3773548088295367727, fluidb_string<2> __sym__0__2425475927764529115, unsigned __sym__0__3550854697533762172, fluidb_string<18> __sym__0___45_2428002636247423964, fluidb_string<40> __sym__0__2537603616087343230, fluidb_string<11> __sym__0___45_5133924085204218680, fluidb_string<15> __sym__0__1411885469038113506, fluidb_string<13> __sym__0___45_4336521243533294241, fluidb_string<15> __sym__0___45_2416233287424533084, fluidb_string<21> __sym__0___45_8608893297661193168, unsigned __sym__0__6600743152885821739, fluidb_string<25> __sym__0__8327451819077700100, fluidb_string<40> __sym__0__6397198241134363110, fluidb_string<16> __sym__0___45_5337640715365439464, fluidb_string<16> __sym__0__6843344685518481994, fluidb_string<13> __sym__0___45_281035451017513097, fluidb_string<15> __sym__0__978963012373614724, unsigned __sym__0___45_138255197005962184, int __sym__0__8723886903896913538, unsigned __sym__0___45_6396778144419774102, unsigned __sym__0__4345290193888622188, unsigned __sym__0__4748858544164465891, unsigned __sym__0___45_2013870166617871634, fluidb_string<21> __sym__0__4486213189679553123, unsigned __sym__0__2044116807841453321, fluidb_string<10> __sym__0__5619260977463858154, unsigned __sym__0___45_8920615137005718662, double __sym__0__2992813735709491256, unsigned __sym__0___45_4738111187081458162, double __sym__0__7342994916058425376, unsigned __sym__0___45_102160816985196364, unsigned __sym__0__1283865848515870159, double __sym__0___45_6653948180198187699, fluidb_string<13> __sym__0__1838544743518506357) : sym__0__7577655604576576020(__sym__0__7577655604576576020), sym__0___45_2957579613704386588(__sym__0___45_2957579613704386588), sym__0__3873855183530032714(__sym__0__3873855183530032714), sym__0___45_5414786619423294939(__sym__0___45_5414786619423294939), sym__0__5557137180551786739(__sym__0__5557137180551786739), sym__0___45_6042740597378878507(__sym__0___45_6042740597378878507), sym__0___45_5833642980832303428(__sym__0___45_5833642980832303428), sym__0___45_5108599129385010601(__sym__0___45_5108599129385010601), sym__0__6596363747273139740(__sym__0__6596363747273139740), sym__0___45_3780820615727466252(__sym__0___45_3780820615727466252), sym__0___45_5733022218377332670(__sym__0___45_5733022218377332670), sym__0___45_1101619184546797307(__sym__0___45_1101619184546797307), sym__0__5315661629871309616(__sym__0__5315661629871309616), sym__0__1548970624774688888(__sym__0__1548970624774688888), sym__0__3082040486510970809(__sym__0__3082040486510970809), sym__0___45_3773548088295367727(__sym__0___45_3773548088295367727), sym__0__2425475927764529115(__sym__0__2425475927764529115), sym__0__3550854697533762172(__sym__0__3550854697533762172), sym__0___45_2428002636247423964(__sym__0___45_2428002636247423964), sym__0__2537603616087343230(__sym__0__2537603616087343230), sym__0___45_5133924085204218680(__sym__0___45_5133924085204218680), sym__0__1411885469038113506(__sym__0__1411885469038113506), sym__0___45_4336521243533294241(__sym__0___45_4336521243533294241), sym__0___45_2416233287424533084(__sym__0___45_2416233287424533084), sym__0___45_8608893297661193168(__sym__0___45_8608893297661193168), sym__0__6600743152885821739(__sym__0__6600743152885821739), sym__0__8327451819077700100(__sym__0__8327451819077700100), sym__0__6397198241134363110(__sym__0__6397198241134363110), sym__0___45_5337640715365439464(__sym__0___45_5337640715365439464), sym__0__6843344685518481994(__sym__0__6843344685518481994), sym__0___45_281035451017513097(__sym__0___45_281035451017513097), sym__0__978963012373614724(__sym__0__978963012373614724), sym__0___45_138255197005962184(__sym__0___45_138255197005962184), sym__0__8723886903896913538(__sym__0__8723886903896913538), sym__0___45_6396778144419774102(__sym__0___45_6396778144419774102), sym__0__4345290193888622188(__sym__0__4345290193888622188), sym__0__4748858544164465891(__sym__0__4748858544164465891), sym__0___45_2013870166617871634(__sym__0___45_2013870166617871634), sym__0__4486213189679553123(__sym__0__4486213189679553123), sym__0__2044116807841453321(__sym__0__2044116807841453321), sym__0__5619260977463858154(__sym__0__5619260977463858154), sym__0___45_8920615137005718662(__sym__0___45_8920615137005718662), sym__0__2992813735709491256(__sym__0__2992813735709491256), sym__0___45_4738111187081458162(__sym__0___45_4738111187081458162), sym__0__7342994916058425376(__sym__0__7342994916058425376), sym__0___45_102160816985196364(__sym__0___45_102160816985196364), sym__0__1283865848515870159(__sym__0__1283865848515870159), sym__0___45_6653948180198187699(__sym__0___45_6653948180198187699), sym__0__1838544743518506357(__sym__0__1838544743518506357)
  {
  }
  Record1() 
  {
  }
  std::string show() const{
    std::stringstream o;
    o << sym__0__7577655604576576020 << " | " << arrToString(sym__0___45_2957579613704386588) << " | " << arrToString(sym__0__3873855183530032714) << " | " << arrToString(sym__0___45_5414786619423294939) << " | " << sym__0__5557137180551786739 << " | " << sym__0___45_6042740597378878507 << " | " << arrToString(sym__0___45_5833642980832303428) << " | " << sym__0___45_5108599129385010601 << " | " << sym__0__6596363747273139740 << " | " << sym__0___45_3780820615727466252 << " | " << sym__0___45_5733022218377332670 << " | " << sym__0___45_1101619184546797307 << " | " << arrToString(sym__0__5315661629871309616) << " | " << arrToString(sym__0__1548970624774688888) << " | " << arrToString(sym__0__3082040486510970809) << " | " << arrToString(sym__0___45_3773548088295367727) << " | " << arrToString(sym__0__2425475927764529115) << " | " << sym__0__3550854697533762172 << " | " << arrToString(sym__0___45_2428002636247423964) << " | " << arrToString(sym__0__2537603616087343230) << " | " << arrToString(sym__0___45_5133924085204218680) << " | " << arrToString(sym__0__1411885469038113506) << " | " << arrToString(sym__0___45_4336521243533294241) << " | " << arrToString(sym__0___45_2416233287424533084) << " | " << arrToString(sym__0___45_8608893297661193168) << " | " << sym__0__6600743152885821739 << " | " << arrToString(sym__0__8327451819077700100) << " | " << arrToString(sym__0__6397198241134363110) << " | " << arrToString(sym__0___45_5337640715365439464) << " | " << arrToString(sym__0__6843344685518481994) << " | " << arrToString(sym__0___45_281035451017513097) << " | " << arrToString(sym__0__978963012373614724) << " | " << sym__0___45_138255197005962184 << " | " << sym__0__8723886903896913538 << " | " << sym__0___45_6396778144419774102 << " | " << sym__0__4345290193888622188 << " | " << sym__0__4748858544164465891 << " | " << sym__0___45_2013870166617871634 << " | " << arrToString(sym__0__4486213189679553123) << " | " << sym__0__2044116807841453321 << " | " << arrToString(sym__0__5619260977463858154) << " | " << sym__0___45_8920615137005718662 << " | " << sym__0__2992813735709491256 << " | " << sym__0___45_4738111187081458162 << " | " << sym__0__7342994916058425376 << " | " << sym__0___45_102160816985196364 << " | " << sym__0__1283865848515870159 << " | " << sym__0___45_6653948180198187699 << " | " << arrToString(sym__0__1838544743518506357);
    return o.str();
  }
  bool operator <(const Record1& otherRec) const{
    return (otherRec.sym__0__7577655604576576020 < sym__0__7577655604576576020 && (otherRec.sym__0___45_2957579613704386588 < sym__0___45_2957579613704386588 && (otherRec.sym__0__3873855183530032714 < sym__0__3873855183530032714 && (otherRec.sym__0___45_5414786619423294939 < sym__0___45_5414786619423294939 && (otherRec.sym__0__5557137180551786739 < sym__0__5557137180551786739 && (otherRec.sym__0___45_6042740597378878507 < sym__0___45_6042740597378878507 && (otherRec.sym__0___45_5833642980832303428 < sym__0___45_5833642980832303428 && (otherRec.sym__0___45_5108599129385010601 < sym__0___45_5108599129385010601 && (otherRec.sym__0__6596363747273139740 < sym__0__6596363747273139740 && (otherRec.sym__0___45_3780820615727466252 < sym__0___45_3780820615727466252 && (otherRec.sym__0___45_5733022218377332670 < sym__0___45_5733022218377332670 && (otherRec.sym__0___45_1101619184546797307 < sym__0___45_1101619184546797307 && (otherRec.sym__0__5315661629871309616 < sym__0__5315661629871309616 && (otherRec.sym__0__1548970624774688888 < sym__0__1548970624774688888 && (otherRec.sym__0__3082040486510970809 < sym__0__3082040486510970809 && (otherRec.sym__0___45_3773548088295367727 < sym__0___45_3773548088295367727 && (otherRec.sym__0__2425475927764529115 < sym__0__2425475927764529115 && (otherRec.sym__0__3550854697533762172 < sym__0__3550854697533762172 && (otherRec.sym__0___45_2428002636247423964 < sym__0___45_2428002636247423964 && (otherRec.sym__0__2537603616087343230 < sym__0__2537603616087343230 && (otherRec.sym__0___45_5133924085204218680 < sym__0___45_5133924085204218680 && (otherRec.sym__0__1411885469038113506 < sym__0__1411885469038113506 && (otherRec.sym__0___45_4336521243533294241 < sym__0___45_4336521243533294241 && (otherRec.sym__0___45_2416233287424533084 < sym__0___45_2416233287424533084 && (otherRec.sym__0___45_8608893297661193168 < sym__0___45_8608893297661193168 && (otherRec.sym__0__6600743152885821739 < sym__0__6600743152885821739 && (otherRec.sym__0__8327451819077700100 < sym__0__8327451819077700100 && (otherRec.sym__0__6397198241134363110 < sym__0__6397198241134363110 && (otherRec.sym__0___45_5337640715365439464 < sym__0___45_5337640715365439464 && (otherRec.sym__0__6843344685518481994 < sym__0__6843344685518481994 && (otherRec.sym__0___45_281035451017513097 < sym__0___45_281035451017513097 && (otherRec.sym__0__978963012373614724 < sym__0__978963012373614724 && (otherRec.sym__0___45_138255197005962184 < sym__0___45_138255197005962184 && (otherRec.sym__0__8723886903896913538 < sym__0__8723886903896913538 && (otherRec.sym__0___45_6396778144419774102 < sym__0___45_6396778144419774102 && (otherRec.sym__0__4345290193888622188 < sym__0__4345290193888622188 && (otherRec.sym__0__4748858544164465891 < sym__0__4748858544164465891 && (otherRec.sym__0___45_2013870166617871634 < sym__0___45_2013870166617871634 && (otherRec.sym__0__4486213189679553123 < sym__0__4486213189679553123 && (otherRec.sym__0__2044116807841453321 < sym__0__2044116807841453321 && (otherRec.sym__0__5619260977463858154 < sym__0__5619260977463858154 && (otherRec.sym__0___45_8920615137005718662 < sym__0___45_8920615137005718662 && (otherRec.sym__0__2992813735709491256 < sym__0__2992813735709491256 && (otherRec.sym__0___45_4738111187081458162 < sym__0___45_4738111187081458162 && (otherRec.sym__0__7342994916058425376 < sym__0__7342994916058425376 && (otherRec.sym__0___45_102160816985196364 < sym__0___45_102160816985196364 && (otherRec.sym__0__1283865848515870159 < sym__0__1283865848515870159 && (otherRec.sym__0___45_6653948180198187699 < sym__0___45_6653948180198187699 && otherRec.sym__0__1838544743518506357 < sym__0__1838544743518506357))))))))))))))))))))))))))))))))))))))))))))))));
  }
  bool operator ==(const Record1& otherRec) const{
    return (otherRec.sym__0__7577655604576576020 == sym__0__7577655604576576020 && (otherRec.sym__0___45_2957579613704386588 == sym__0___45_2957579613704386588 && (otherRec.sym__0__3873855183530032714 == sym__0__3873855183530032714 && (otherRec.sym__0___45_5414786619423294939 == sym__0___45_5414786619423294939 && (otherRec.sym__0__5557137180551786739 == sym__0__5557137180551786739 && (otherRec.sym__0___45_6042740597378878507 == sym__0___45_6042740597378878507 && (otherRec.sym__0___45_5833642980832303428 == sym__0___45_5833642980832303428 && (otherRec.sym__0___45_5108599129385010601 == sym__0___45_5108599129385010601 && (otherRec.sym__0__6596363747273139740 == sym__0__6596363747273139740 && (otherRec.sym__0___45_3780820615727466252 == sym__0___45_3780820615727466252 && (otherRec.sym__0___45_5733022218377332670 == sym__0___45_5733022218377332670 && (otherRec.sym__0___45_1101619184546797307 == sym__0___45_1101619184546797307 && (otherRec.sym__0__5315661629871309616 == sym__0__5315661629871309616 && (otherRec.sym__0__1548970624774688888 == sym__0__1548970624774688888 && (otherRec.sym__0__3082040486510970809 == sym__0__3082040486510970809 && (otherRec.sym__0___45_3773548088295367727 == sym__0___45_3773548088295367727 && (otherRec.sym__0__2425475927764529115 == sym__0__2425475927764529115 && (otherRec.sym__0__3550854697533762172 == sym__0__3550854697533762172 && (otherRec.sym__0___45_2428002636247423964 == sym__0___45_2428002636247423964 && (otherRec.sym__0__2537603616087343230 == sym__0__2537603616087343230 && (otherRec.sym__0___45_5133924085204218680 == sym__0___45_5133924085204218680 && (otherRec.sym__0__1411885469038113506 == sym__0__1411885469038113506 && (otherRec.sym__0___45_4336521243533294241 == sym__0___45_4336521243533294241 && (otherRec.sym__0___45_2416233287424533084 == sym__0___45_2416233287424533084 && (otherRec.sym__0___45_8608893297661193168 == sym__0___45_8608893297661193168 && (otherRec.sym__0__6600743152885821739 == sym__0__6600743152885821739 && (otherRec.sym__0__8327451819077700100 == sym__0__8327451819077700100 && (otherRec.sym__0__6397198241134363110 == sym__0__6397198241134363110 && (otherRec.sym__0___45_5337640715365439464 == sym__0___45_5337640715365439464 && (otherRec.sym__0__6843344685518481994 == sym__0__6843344685518481994 && (otherRec.sym__0___45_281035451017513097 == sym__0___45_281035451017513097 && (otherRec.sym__0__978963012373614724 == sym__0__978963012373614724 && (otherRec.sym__0___45_138255197005962184 == sym__0___45_138255197005962184 && (otherRec.sym__0__8723886903896913538 == sym__0__8723886903896913538 && (otherRec.sym__0___45_6396778144419774102 == sym__0___45_6396778144419774102 && (otherRec.sym__0__4345290193888622188 == sym__0__4345290193888622188 && (otherRec.sym__0__4748858544164465891 == sym__0__4748858544164465891 && (otherRec.sym__0___45_2013870166617871634 == sym__0___45_2013870166617871634 && (otherRec.sym__0__4486213189679553123 == sym__0__4486213189679553123 && (otherRec.sym__0__2044116807841453321 == sym__0__2044116807841453321 && (otherRec.sym__0__5619260977463858154 == sym__0__5619260977463858154 && (otherRec.sym__0___45_8920615137005718662 == sym__0___45_8920615137005718662 && (otherRec.sym__0__2992813735709491256 == sym__0__2992813735709491256 && (otherRec.sym__0___45_4738111187081458162 == sym__0___45_4738111187081458162 && (otherRec.sym__0__7342994916058425376 == sym__0__7342994916058425376 && (otherRec.sym__0___45_102160816985196364 == sym__0___45_102160816985196364 && (otherRec.sym__0__1283865848515870159 == sym__0__1283865848515870159 && (otherRec.sym__0___45_6653948180198187699 == sym__0___45_6653948180198187699 && otherRec.sym__0__1838544743518506357 == sym__0__1838544743518506357))))))))))))))))))))))))))))))))))))))))))))))));
  }
  bool operator !=(const Record1& otherRec) const{
    return (otherRec.sym__0__7577655604576576020 != sym__0__7577655604576576020 || (otherRec.sym__0___45_2957579613704386588 != sym__0___45_2957579613704386588 || (otherRec.sym__0__3873855183530032714 != sym__0__3873855183530032714 || (otherRec.sym__0___45_5414786619423294939 != sym__0___45_5414786619423294939 || (otherRec.sym__0__5557137180551786739 != sym__0__5557137180551786739 || (otherRec.sym__0___45_6042740597378878507 != sym__0___45_6042740597378878507 || (otherRec.sym__0___45_5833642980832303428 != sym__0___45_5833642980832303428 || (otherRec.sym__0___45_5108599129385010601 != sym__0___45_5108599129385010601 || (otherRec.sym__0__6596363747273139740 != sym__0__6596363747273139740 || (otherRec.sym__0___45_3780820615727466252 != sym__0___45_3780820615727466252 || (otherRec.sym__0___45_5733022218377332670 != sym__0___45_5733022218377332670 || (otherRec.sym__0___45_1101619184546797307 != sym__0___45_1101619184546797307 || (otherRec.sym__0__5315661629871309616 != sym__0__5315661629871309616 || (otherRec.sym__0__1548970624774688888 != sym__0__1548970624774688888 || (otherRec.sym__0__3082040486510970809 != sym__0__3082040486510970809 || (otherRec.sym__0___45_3773548088295367727 != sym__0___45_3773548088295367727 || (otherRec.sym__0__2425475927764529115 != sym__0__2425475927764529115 || (otherRec.sym__0__3550854697533762172 != sym__0__3550854697533762172 || (otherRec.sym__0___45_2428002636247423964 != sym__0___45_2428002636247423964 || (otherRec.sym__0__2537603616087343230 != sym__0__2537603616087343230 || (otherRec.sym__0___45_5133924085204218680 != sym__0___45_5133924085204218680 || (otherRec.sym__0__1411885469038113506 != sym__0__1411885469038113506 || (otherRec.sym__0___45_4336521243533294241 != sym__0___45_4336521243533294241 || (otherRec.sym__0___45_2416233287424533084 != sym__0___45_2416233287424533084 || (otherRec.sym__0___45_8608893297661193168 != sym__0___45_8608893297661193168 || (otherRec.sym__0__6600743152885821739 != sym__0__6600743152885821739 || (otherRec.sym__0__8327451819077700100 != sym__0__8327451819077700100 || (otherRec.sym__0__6397198241134363110 != sym__0__6397198241134363110 || (otherRec.sym__0___45_5337640715365439464 != sym__0___45_5337640715365439464 || (otherRec.sym__0__6843344685518481994 != sym__0__6843344685518481994 || (otherRec.sym__0___45_281035451017513097 != sym__0___45_281035451017513097 || (otherRec.sym__0__978963012373614724 != sym__0__978963012373614724 || (otherRec.sym__0___45_138255197005962184 != sym__0___45_138255197005962184 || (otherRec.sym__0__8723886903896913538 != sym__0__8723886903896913538 || (otherRec.sym__0___45_6396778144419774102 != sym__0___45_6396778144419774102 || (otherRec.sym__0__4345290193888622188 != sym__0__4345290193888622188 || (otherRec.sym__0__4748858544164465891 != sym__0__4748858544164465891 || (otherRec.sym__0___45_2013870166617871634 != sym__0___45_2013870166617871634 || (otherRec.sym__0__4486213189679553123 != sym__0__4486213189679553123 || (otherRec.sym__0__2044116807841453321 != sym__0__2044116807841453321 || (otherRec.sym__0__5619260977463858154 != sym__0__5619260977463858154 || (otherRec.sym__0___45_8920615137005718662 != sym__0___45_8920615137005718662 || (otherRec.sym__0__2992813735709491256 != sym__0__2992813735709491256 || (otherRec.sym__0___45_4738111187081458162 != sym__0___45_4738111187081458162 || (otherRec.sym__0__7342994916058425376 != sym__0__7342994916058425376 || (otherRec.sym__0___45_102160816985196364 != sym__0___45_102160816985196364 || (otherRec.sym__0__1283865848515870159 != sym__0__1283865848515870159 || (otherRec.sym__0___45_6653948180198187699 != sym__0___45_6653948180198187699 || otherRec.sym__0__1838544743518506357 != sym__0__1838544743518506357))))))))))))))))))))))))))))))))))))))))))))))));
  }
  unsigned sym__0__7577655604576576020;
  fluidb_string<18> sym__0___45_2957579613704386588;
  fluidb_string<9> sym__0__3873855183530032714;
  fluidb_string<9> sym__0___45_5414786619423294939;
  unsigned sym__0__5557137180551786739;
  unsigned sym__0___45_6042740597378878507;
  fluidb_string<7> sym__0___45_5833642980832303428;
  unsigned sym__0___45_5108599129385010601;
  unsigned sym__0__6596363747273139740;
  unsigned sym__0___45_3780820615727466252;
  unsigned sym__0___45_5733022218377332670;
  unsigned sym__0___45_1101619184546797307;
  fluidb_string<15> sym__0__5315661629871309616;
  fluidb_string<2> sym__0__1548970624774688888;
  fluidb_string<2> sym__0__3082040486510970809;
  fluidb_string<2> sym__0___45_3773548088295367727;
  fluidb_string<2> sym__0__2425475927764529115;
  unsigned sym__0__3550854697533762172;
  fluidb_string<18> sym__0___45_2428002636247423964;
  fluidb_string<40> sym__0__2537603616087343230;
  fluidb_string<11> sym__0___45_5133924085204218680;
  fluidb_string<15> sym__0__1411885469038113506;
  fluidb_string<13> sym__0___45_4336521243533294241;
  fluidb_string<15> sym__0___45_2416233287424533084;
  fluidb_string<21> sym__0___45_8608893297661193168;
  unsigned sym__0__6600743152885821739;
  fluidb_string<25> sym__0__8327451819077700100;
  fluidb_string<40> sym__0__6397198241134363110;
  fluidb_string<16> sym__0___45_5337640715365439464;
  fluidb_string<16> sym__0__6843344685518481994;
  fluidb_string<13> sym__0___45_281035451017513097;
  fluidb_string<15> sym__0__978963012373614724;
  unsigned sym__0___45_138255197005962184;
  int sym__0__8723886903896913538;
  unsigned sym__0___45_6396778144419774102;
  unsigned sym__0__4345290193888622188;
  unsigned sym__0__4748858544164465891;
  unsigned sym__0___45_2013870166617871634;
  fluidb_string<21> sym__0__4486213189679553123;
  unsigned sym__0__2044116807841453321;
  fluidb_string<10> sym__0__5619260977463858154;
  unsigned sym__0___45_8920615137005718662;
  double sym__0__2992813735709491256;
  unsigned sym__0___45_4738111187081458162;
  double sym__0__7342994916058425376;
  unsigned sym__0___45_102160816985196364;
  unsigned sym__0__1283865848515870159;
  double sym__0___45_6653948180198187699;
  fluidb_string<13> sym__0__1838544743518506357;
 private:
};


class Record11 {
 public:
  Record11(fluidb_string<15> __sortElem0, fluidb_string<16> __sortElem1, unsigned __sortElem2) : sortElem0(__sortElem0), sortElem1(__sortElem1), sortElem2(__sortElem2)
  {
  }
  Record11() 
  {
  }
  std::string show() const{
    std::stringstream o;
    o << arrToString(sortElem0) << " | " << arrToString(sortElem1) << " | " << sortElem2;
    return o.str();
  }
  bool operator <(const Record11& otherRec) const{
    return (otherRec.sortElem0 < sortElem0 && (otherRec.sortElem1 < sortElem1 && otherRec.sortElem2 < sortElem2));
  }
  bool operator ==(const Record11& otherRec) const{
    return (otherRec.sortElem0 == sortElem0 && (otherRec.sortElem1 == sortElem1 && otherRec.sortElem2 == sortElem2));
  }
  bool operator !=(const Record11& otherRec) const{
    return (otherRec.sortElem0 != sortElem0 || (otherRec.sortElem1 != sortElem1 || otherRec.sortElem2 != sortElem2));
  }
  fluidb_string<15> sortElem0;
  fluidb_string<16> sortElem1;
  unsigned sortElem2;
 private:
};


class Record4 {
 public:
  Record4(fluidb_string<15> __sym__0__8864604906085372164, fluidb_string<16> __sym__0___45_210177651946202244, unsigned __sym__0___45_2870988783450377285, unsigned __sym__0___45_8595554158775151949) : sym__0__8864604906085372164(__sym__0__8864604906085372164), sym__0___45_210177651946202244(__sym__0___45_210177651946202244), sym__0___45_2870988783450377285(__sym__0___45_2870988783450377285), sym__0___45_8595554158775151949(__sym__0___45_8595554158775151949)
  {
  }
  Record4() 
  {
  }
  std::string show() const{
    std::stringstream o;
    o << arrToString(sym__0__8864604906085372164) << " | " << arrToString(sym__0___45_210177651946202244) << " | " << sym__0___45_2870988783450377285 << " | " << sym__0___45_8595554158775151949;
    return o.str();
  }
  bool operator <(const Record4& otherRec) const{
    return (otherRec.sym__0__8864604906085372164 < sym__0__8864604906085372164 && (otherRec.sym__0___45_210177651946202244 < sym__0___45_210177651946202244 && (otherRec.sym__0___45_2870988783450377285 < sym__0___45_2870988783450377285 && otherRec.sym__0___45_8595554158775151949 < sym__0___45_8595554158775151949)));
  }
  bool operator ==(const Record4& otherRec) const{
    return (otherRec.sym__0__8864604906085372164 == sym__0__8864604906085372164 && (otherRec.sym__0___45_210177651946202244 == sym__0___45_210177651946202244 && (otherRec.sym__0___45_2870988783450377285 == sym__0___45_2870988783450377285 && otherRec.sym__0___45_8595554158775151949 == sym__0___45_8595554158775151949)));
  }
  bool operator !=(const Record4& otherRec) const{
    return (otherRec.sym__0__8864604906085372164 != sym__0__8864604906085372164 || (otherRec.sym__0___45_210177651946202244 != sym__0___45_210177651946202244 || (otherRec.sym__0___45_2870988783450377285 != sym__0___45_2870988783450377285 || otherRec.sym__0___45_8595554158775151949 != sym__0___45_8595554158775151949)));
  }
  fluidb_string<15> sym__0__8864604906085372164;
  fluidb_string<16> sym__0___45_210177651946202244;
  unsigned sym__0___45_2870988783450377285;
  unsigned sym__0___45_8595554158775151949;
 private:
};


class Record6 {
 public:
  Record6(unsigned __sym__0___45_4691800274046664138, fluidb_string<18> __sym__0__5385891723806289446, fluidb_string<9> __sym__0__1892889587368581992, fluidb_string<9> __sym__0___45_8090381435565983229, unsigned __sym__0___45_2887238403378764427, unsigned __sym__0__6265252820201895827, fluidb_string<7> __sym__0__3622921935238533006, unsigned __sym__0__8097027447982939065, unsigned __sym__0__5823650239681947694, unsigned __sym__0___45_810990994407163818, unsigned __sym__0__4309636997880444784, unsigned __sym__0___45_1677786510966031837, fluidb_string<15> __sym__0___45_8844188260728260990, fluidb_string<2> __sym__0__4062333159766941562, fluidb_string<2> __sym__0__1963951776663830103, fluidb_string<2> __sym__0___45_3295027973390173633, fluidb_string<2> __sym__0__1580587742491941773, unsigned __sym__0__1036609136946816462, fluidb_string<18> __sym__0___45_1496891159040185370, fluidb_string<40> __sym__0___45_516687168307649076, fluidb_string<11> __sym__0___45_8826298017021943574, fluidb_string<15> __sym__0___45_4595321853941955376, fluidb_string<13> __sym__0__7185892854338941105, fluidb_string<15> __sym__0__4550001706105210726, fluidb_string<21> __sym__0___45_2610483358697858174, unsigned __sym__0___45_9183464255297383875, fluidb_string<25> __sym__0___45_8363344675326727930, fluidb_string<40> __sym__0__6494291207494929956, fluidb_string<16> __sym__0___45_3750092641805908006, fluidb_string<16> __sym__0__1528809880997670760, fluidb_string<13> __sym__0___45_220369887750207591, fluidb_string<15> __sym__0___45_724122223893020794, unsigned __sym__0__2372035799753352890, int __sym__0___45_8750473076158315728, unsigned __sym__0___45_5876960592182796984, unsigned __sym__0___45_3166330364604294690, unsigned __sym__0__4863578943113536581, unsigned __sym__0___45_3083711454390311588, fluidb_string<21> __sym__0__482048049617558469, unsigned __sym__0___45_3991422289368413497, fluidb_string<10> __sym__0___45_7903742392414935096, unsigned __sym__0___45_2273431051769217928, double __sym__0___45_360728523760837958, unsigned __sym__0__1845284332479501628, double __sym__0__163937504765675410, unsigned __sym__0__1572485749814613910, unsigned __sym__0___45_3949776094580525311, double __sym__0___45_6332680418179860965, fluidb_string<13> __sym__0__8489428250482206963) : sym__0___45_4691800274046664138(__sym__0___45_4691800274046664138), sym__0__5385891723806289446(__sym__0__5385891723806289446), sym__0__1892889587368581992(__sym__0__1892889587368581992), sym__0___45_8090381435565983229(__sym__0___45_8090381435565983229), sym__0___45_2887238403378764427(__sym__0___45_2887238403378764427), sym__0__6265252820201895827(__sym__0__6265252820201895827), sym__0__3622921935238533006(__sym__0__3622921935238533006), sym__0__8097027447982939065(__sym__0__8097027447982939065), sym__0__5823650239681947694(__sym__0__5823650239681947694), sym__0___45_810990994407163818(__sym__0___45_810990994407163818), sym__0__4309636997880444784(__sym__0__4309636997880444784), sym__0___45_1677786510966031837(__sym__0___45_1677786510966031837), sym__0___45_8844188260728260990(__sym__0___45_8844188260728260990), sym__0__4062333159766941562(__sym__0__4062333159766941562), sym__0__1963951776663830103(__sym__0__1963951776663830103), sym__0___45_3295027973390173633(__sym__0___45_3295027973390173633), sym__0__1580587742491941773(__sym__0__1580587742491941773), sym__0__1036609136946816462(__sym__0__1036609136946816462), sym__0___45_1496891159040185370(__sym__0___45_1496891159040185370), sym__0___45_516687168307649076(__sym__0___45_516687168307649076), sym__0___45_8826298017021943574(__sym__0___45_8826298017021943574), sym__0___45_4595321853941955376(__sym__0___45_4595321853941955376), sym__0__7185892854338941105(__sym__0__7185892854338941105), sym__0__4550001706105210726(__sym__0__4550001706105210726), sym__0___45_2610483358697858174(__sym__0___45_2610483358697858174), sym__0___45_9183464255297383875(__sym__0___45_9183464255297383875), sym__0___45_8363344675326727930(__sym__0___45_8363344675326727930), sym__0__6494291207494929956(__sym__0__6494291207494929956), sym__0___45_3750092641805908006(__sym__0___45_3750092641805908006), sym__0__1528809880997670760(__sym__0__1528809880997670760), sym__0___45_220369887750207591(__sym__0___45_220369887750207591), sym__0___45_724122223893020794(__sym__0___45_724122223893020794), sym__0__2372035799753352890(__sym__0__2372035799753352890), sym__0___45_8750473076158315728(__sym__0___45_8750473076158315728), sym__0___45_5876960592182796984(__sym__0___45_5876960592182796984), sym__0___45_3166330364604294690(__sym__0___45_3166330364604294690), sym__0__4863578943113536581(__sym__0__4863578943113536581), sym__0___45_3083711454390311588(__sym__0___45_3083711454390311588), sym__0__482048049617558469(__sym__0__482048049617558469), sym__0___45_3991422289368413497(__sym__0___45_3991422289368413497), sym__0___45_7903742392414935096(__sym__0___45_7903742392414935096), sym__0___45_2273431051769217928(__sym__0___45_2273431051769217928), sym__0___45_360728523760837958(__sym__0___45_360728523760837958), sym__0__1845284332479501628(__sym__0__1845284332479501628), sym__0__163937504765675410(__sym__0__163937504765675410), sym__0__1572485749814613910(__sym__0__1572485749814613910), sym__0___45_3949776094580525311(__sym__0___45_3949776094580525311), sym__0___45_6332680418179860965(__sym__0___45_6332680418179860965), sym__0__8489428250482206963(__sym__0__8489428250482206963)
  {
  }
  Record6() 
  {
  }
  std::string show() const{
    std::stringstream o;
    o << sym__0___45_4691800274046664138 << " | " << arrToString(sym__0__5385891723806289446) << " | " << arrToString(sym__0__1892889587368581992) << " | " << arrToString(sym__0___45_8090381435565983229) << " | " << sym__0___45_2887238403378764427 << " | " << sym__0__6265252820201895827 << " | " << arrToString(sym__0__3622921935238533006) << " | " << sym__0__8097027447982939065 << " | " << sym__0__5823650239681947694 << " | " << sym__0___45_810990994407163818 << " | " << sym__0__4309636997880444784 << " | " << sym__0___45_1677786510966031837 << " | " << arrToString(sym__0___45_8844188260728260990) << " | " << arrToString(sym__0__4062333159766941562) << " | " << arrToString(sym__0__1963951776663830103) << " | " << arrToString(sym__0___45_3295027973390173633) << " | " << arrToString(sym__0__1580587742491941773) << " | " << sym__0__1036609136946816462 << " | " << arrToString(sym__0___45_1496891159040185370) << " | " << arrToString(sym__0___45_516687168307649076) << " | " << arrToString(sym__0___45_8826298017021943574) << " | " << arrToString(sym__0___45_4595321853941955376) << " | " << arrToString(sym__0__7185892854338941105) << " | " << arrToString(sym__0__4550001706105210726) << " | " << arrToString(sym__0___45_2610483358697858174) << " | " << sym__0___45_9183464255297383875 << " | " << arrToString(sym__0___45_8363344675326727930) << " | " << arrToString(sym__0__6494291207494929956) << " | " << arrToString(sym__0___45_3750092641805908006) << " | " << arrToString(sym__0__1528809880997670760) << " | " << arrToString(sym__0___45_220369887750207591) << " | " << arrToString(sym__0___45_724122223893020794) << " | " << sym__0__2372035799753352890 << " | " << sym__0___45_8750473076158315728 << " | " << sym__0___45_5876960592182796984 << " | " << sym__0___45_3166330364604294690 << " | " << sym__0__4863578943113536581 << " | " << sym__0___45_3083711454390311588 << " | " << arrToString(sym__0__482048049617558469) << " | " << sym__0___45_3991422289368413497 << " | " << arrToString(sym__0___45_7903742392414935096) << " | " << sym__0___45_2273431051769217928 << " | " << sym__0___45_360728523760837958 << " | " << sym__0__1845284332479501628 << " | " << sym__0__163937504765675410 << " | " << sym__0__1572485749814613910 << " | " << sym__0___45_3949776094580525311 << " | " << sym__0___45_6332680418179860965 << " | " << arrToString(sym__0__8489428250482206963);
    return o.str();
  }
  bool operator <(const Record6& otherRec) const{
    return (otherRec.sym__0___45_4691800274046664138 < sym__0___45_4691800274046664138 && (otherRec.sym__0__5385891723806289446 < sym__0__5385891723806289446 && (otherRec.sym__0__1892889587368581992 < sym__0__1892889587368581992 && (otherRec.sym__0___45_8090381435565983229 < sym__0___45_8090381435565983229 && (otherRec.sym__0___45_2887238403378764427 < sym__0___45_2887238403378764427 && (otherRec.sym__0__6265252820201895827 < sym__0__6265252820201895827 && (otherRec.sym__0__3622921935238533006 < sym__0__3622921935238533006 && (otherRec.sym__0__8097027447982939065 < sym__0__8097027447982939065 && (otherRec.sym__0__5823650239681947694 < sym__0__5823650239681947694 && (otherRec.sym__0___45_810990994407163818 < sym__0___45_810990994407163818 && (otherRec.sym__0__4309636997880444784 < sym__0__4309636997880444784 && (otherRec.sym__0___45_1677786510966031837 < sym__0___45_1677786510966031837 && (otherRec.sym__0___45_8844188260728260990 < sym__0___45_8844188260728260990 && (otherRec.sym__0__4062333159766941562 < sym__0__4062333159766941562 && (otherRec.sym__0__1963951776663830103 < sym__0__1963951776663830103 && (otherRec.sym__0___45_3295027973390173633 < sym__0___45_3295027973390173633 && (otherRec.sym__0__1580587742491941773 < sym__0__1580587742491941773 && (otherRec.sym__0__1036609136946816462 < sym__0__1036609136946816462 && (otherRec.sym__0___45_1496891159040185370 < sym__0___45_1496891159040185370 && (otherRec.sym__0___45_516687168307649076 < sym__0___45_516687168307649076 && (otherRec.sym__0___45_8826298017021943574 < sym__0___45_8826298017021943574 && (otherRec.sym__0___45_4595321853941955376 < sym__0___45_4595321853941955376 && (otherRec.sym__0__7185892854338941105 < sym__0__7185892854338941105 && (otherRec.sym__0__4550001706105210726 < sym__0__4550001706105210726 && (otherRec.sym__0___45_2610483358697858174 < sym__0___45_2610483358697858174 && (otherRec.sym__0___45_9183464255297383875 < sym__0___45_9183464255297383875 && (otherRec.sym__0___45_8363344675326727930 < sym__0___45_8363344675326727930 && (otherRec.sym__0__6494291207494929956 < sym__0__6494291207494929956 && (otherRec.sym__0___45_3750092641805908006 < sym__0___45_3750092641805908006 && (otherRec.sym__0__1528809880997670760 < sym__0__1528809880997670760 && (otherRec.sym__0___45_220369887750207591 < sym__0___45_220369887750207591 && (otherRec.sym__0___45_724122223893020794 < sym__0___45_724122223893020794 && (otherRec.sym__0__2372035799753352890 < sym__0__2372035799753352890 && (otherRec.sym__0___45_8750473076158315728 < sym__0___45_8750473076158315728 && (otherRec.sym__0___45_5876960592182796984 < sym__0___45_5876960592182796984 && (otherRec.sym__0___45_3166330364604294690 < sym__0___45_3166330364604294690 && (otherRec.sym__0__4863578943113536581 < sym__0__4863578943113536581 && (otherRec.sym__0___45_3083711454390311588 < sym__0___45_3083711454390311588 && (otherRec.sym__0__482048049617558469 < sym__0__482048049617558469 && (otherRec.sym__0___45_3991422289368413497 < sym__0___45_3991422289368413497 && (otherRec.sym__0___45_7903742392414935096 < sym__0___45_7903742392414935096 && (otherRec.sym__0___45_2273431051769217928 < sym__0___45_2273431051769217928 && (otherRec.sym__0___45_360728523760837958 < sym__0___45_360728523760837958 && (otherRec.sym__0__1845284332479501628 < sym__0__1845284332479501628 && (otherRec.sym__0__163937504765675410 < sym__0__163937504765675410 && (otherRec.sym__0__1572485749814613910 < sym__0__1572485749814613910 && (otherRec.sym__0___45_3949776094580525311 < sym__0___45_3949776094580525311 && (otherRec.sym__0___45_6332680418179860965 < sym__0___45_6332680418179860965 && otherRec.sym__0__8489428250482206963 < sym__0__8489428250482206963))))))))))))))))))))))))))))))))))))))))))))))));
  }
  bool operator ==(const Record6& otherRec) const{
    return (otherRec.sym__0___45_4691800274046664138 == sym__0___45_4691800274046664138 && (otherRec.sym__0__5385891723806289446 == sym__0__5385891723806289446 && (otherRec.sym__0__1892889587368581992 == sym__0__1892889587368581992 && (otherRec.sym__0___45_8090381435565983229 == sym__0___45_8090381435565983229 && (otherRec.sym__0___45_2887238403378764427 == sym__0___45_2887238403378764427 && (otherRec.sym__0__6265252820201895827 == sym__0__6265252820201895827 && (otherRec.sym__0__3622921935238533006 == sym__0__3622921935238533006 && (otherRec.sym__0__8097027447982939065 == sym__0__8097027447982939065 && (otherRec.sym__0__5823650239681947694 == sym__0__5823650239681947694 && (otherRec.sym__0___45_810990994407163818 == sym__0___45_810990994407163818 && (otherRec.sym__0__4309636997880444784 == sym__0__4309636997880444784 && (otherRec.sym__0___45_1677786510966031837 == sym__0___45_1677786510966031837 && (otherRec.sym__0___45_8844188260728260990 == sym__0___45_8844188260728260990 && (otherRec.sym__0__4062333159766941562 == sym__0__4062333159766941562 && (otherRec.sym__0__1963951776663830103 == sym__0__1963951776663830103 && (otherRec.sym__0___45_3295027973390173633 == sym__0___45_3295027973390173633 && (otherRec.sym__0__1580587742491941773 == sym__0__1580587742491941773 && (otherRec.sym__0__1036609136946816462 == sym__0__1036609136946816462 && (otherRec.sym__0___45_1496891159040185370 == sym__0___45_1496891159040185370 && (otherRec.sym__0___45_516687168307649076 == sym__0___45_516687168307649076 && (otherRec.sym__0___45_8826298017021943574 == sym__0___45_8826298017021943574 && (otherRec.sym__0___45_4595321853941955376 == sym__0___45_4595321853941955376 && (otherRec.sym__0__7185892854338941105 == sym__0__7185892854338941105 && (otherRec.sym__0__4550001706105210726 == sym__0__4550001706105210726 && (otherRec.sym__0___45_2610483358697858174 == sym__0___45_2610483358697858174 && (otherRec.sym__0___45_9183464255297383875 == sym__0___45_9183464255297383875 && (otherRec.sym__0___45_8363344675326727930 == sym__0___45_8363344675326727930 && (otherRec.sym__0__6494291207494929956 == sym__0__6494291207494929956 && (otherRec.sym__0___45_3750092641805908006 == sym__0___45_3750092641805908006 && (otherRec.sym__0__1528809880997670760 == sym__0__1528809880997670760 && (otherRec.sym__0___45_220369887750207591 == sym__0___45_220369887750207591 && (otherRec.sym__0___45_724122223893020794 == sym__0___45_724122223893020794 && (otherRec.sym__0__2372035799753352890 == sym__0__2372035799753352890 && (otherRec.sym__0___45_8750473076158315728 == sym__0___45_8750473076158315728 && (otherRec.sym__0___45_5876960592182796984 == sym__0___45_5876960592182796984 && (otherRec.sym__0___45_3166330364604294690 == sym__0___45_3166330364604294690 && (otherRec.sym__0__4863578943113536581 == sym__0__4863578943113536581 && (otherRec.sym__0___45_3083711454390311588 == sym__0___45_3083711454390311588 && (otherRec.sym__0__482048049617558469 == sym__0__482048049617558469 && (otherRec.sym__0___45_3991422289368413497 == sym__0___45_3991422289368413497 && (otherRec.sym__0___45_7903742392414935096 == sym__0___45_7903742392414935096 && (otherRec.sym__0___45_2273431051769217928 == sym__0___45_2273431051769217928 && (otherRec.sym__0___45_360728523760837958 == sym__0___45_360728523760837958 && (otherRec.sym__0__1845284332479501628 == sym__0__1845284332479501628 && (otherRec.sym__0__163937504765675410 == sym__0__163937504765675410 && (otherRec.sym__0__1572485749814613910 == sym__0__1572485749814613910 && (otherRec.sym__0___45_3949776094580525311 == sym__0___45_3949776094580525311 && (otherRec.sym__0___45_6332680418179860965 == sym__0___45_6332680418179860965 && otherRec.sym__0__8489428250482206963 == sym__0__8489428250482206963))))))))))))))))))))))))))))))))))))))))))))))));
  }
  bool operator !=(const Record6& otherRec) const{
    return (otherRec.sym__0___45_4691800274046664138 != sym__0___45_4691800274046664138 || (otherRec.sym__0__5385891723806289446 != sym__0__5385891723806289446 || (otherRec.sym__0__1892889587368581992 != sym__0__1892889587368581992 || (otherRec.sym__0___45_8090381435565983229 != sym__0___45_8090381435565983229 || (otherRec.sym__0___45_2887238403378764427 != sym__0___45_2887238403378764427 || (otherRec.sym__0__6265252820201895827 != sym__0__6265252820201895827 || (otherRec.sym__0__3622921935238533006 != sym__0__3622921935238533006 || (otherRec.sym__0__8097027447982939065 != sym__0__8097027447982939065 || (otherRec.sym__0__5823650239681947694 != sym__0__5823650239681947694 || (otherRec.sym__0___45_810990994407163818 != sym__0___45_810990994407163818 || (otherRec.sym__0__4309636997880444784 != sym__0__4309636997880444784 || (otherRec.sym__0___45_1677786510966031837 != sym__0___45_1677786510966031837 || (otherRec.sym__0___45_8844188260728260990 != sym__0___45_8844188260728260990 || (otherRec.sym__0__4062333159766941562 != sym__0__4062333159766941562 || (otherRec.sym__0__1963951776663830103 != sym__0__1963951776663830103 || (otherRec.sym__0___45_3295027973390173633 != sym__0___45_3295027973390173633 || (otherRec.sym__0__1580587742491941773 != sym__0__1580587742491941773 || (otherRec.sym__0__1036609136946816462 != sym__0__1036609136946816462 || (otherRec.sym__0___45_1496891159040185370 != sym__0___45_1496891159040185370 || (otherRec.sym__0___45_516687168307649076 != sym__0___45_516687168307649076 || (otherRec.sym__0___45_8826298017021943574 != sym__0___45_8826298017021943574 || (otherRec.sym__0___45_4595321853941955376 != sym__0___45_4595321853941955376 || (otherRec.sym__0__7185892854338941105 != sym__0__7185892854338941105 || (otherRec.sym__0__4550001706105210726 != sym__0__4550001706105210726 || (otherRec.sym__0___45_2610483358697858174 != sym__0___45_2610483358697858174 || (otherRec.sym__0___45_9183464255297383875 != sym__0___45_9183464255297383875 || (otherRec.sym__0___45_8363344675326727930 != sym__0___45_8363344675326727930 || (otherRec.sym__0__6494291207494929956 != sym__0__6494291207494929956 || (otherRec.sym__0___45_3750092641805908006 != sym__0___45_3750092641805908006 || (otherRec.sym__0__1528809880997670760 != sym__0__1528809880997670760 || (otherRec.sym__0___45_220369887750207591 != sym__0___45_220369887750207591 || (otherRec.sym__0___45_724122223893020794 != sym__0___45_724122223893020794 || (otherRec.sym__0__2372035799753352890 != sym__0__2372035799753352890 || (otherRec.sym__0___45_8750473076158315728 != sym__0___45_8750473076158315728 || (otherRec.sym__0___45_5876960592182796984 != sym__0___45_5876960592182796984 || (otherRec.sym__0___45_3166330364604294690 != sym__0___45_3166330364604294690 || (otherRec.sym__0__4863578943113536581 != sym__0__4863578943113536581 || (otherRec.sym__0___45_3083711454390311588 != sym__0___45_3083711454390311588 || (otherRec.sym__0__482048049617558469 != sym__0__482048049617558469 || (otherRec.sym__0___45_3991422289368413497 != sym__0___45_3991422289368413497 || (otherRec.sym__0___45_7903742392414935096 != sym__0___45_7903742392414935096 || (otherRec.sym__0___45_2273431051769217928 != sym__0___45_2273431051769217928 || (otherRec.sym__0___45_360728523760837958 != sym__0___45_360728523760837958 || (otherRec.sym__0__1845284332479501628 != sym__0__1845284332479501628 || (otherRec.sym__0__163937504765675410 != sym__0__163937504765675410 || (otherRec.sym__0__1572485749814613910 != sym__0__1572485749814613910 || (otherRec.sym__0___45_3949776094580525311 != sym__0___45_3949776094580525311 || (otherRec.sym__0___45_6332680418179860965 != sym__0___45_6332680418179860965 || otherRec.sym__0__8489428250482206963 != sym__0__8489428250482206963))))))))))))))))))))))))))))))))))))))))))))))));
  }
  unsigned sym__0___45_4691800274046664138;
  fluidb_string<18> sym__0__5385891723806289446;
  fluidb_string<9> sym__0__1892889587368581992;
  fluidb_string<9> sym__0___45_8090381435565983229;
  unsigned sym__0___45_2887238403378764427;
  unsigned sym__0__6265252820201895827;
  fluidb_string<7> sym__0__3622921935238533006;
  unsigned sym__0__8097027447982939065;
  unsigned sym__0__5823650239681947694;
  unsigned sym__0___45_810990994407163818;
  unsigned sym__0__4309636997880444784;
  unsigned sym__0___45_1677786510966031837;
  fluidb_string<15> sym__0___45_8844188260728260990;
  fluidb_string<2> sym__0__4062333159766941562;
  fluidb_string<2> sym__0__1963951776663830103;
  fluidb_string<2> sym__0___45_3295027973390173633;
  fluidb_string<2> sym__0__1580587742491941773;
  unsigned sym__0__1036609136946816462;
  fluidb_string<18> sym__0___45_1496891159040185370;
  fluidb_string<40> sym__0___45_516687168307649076;
  fluidb_string<11> sym__0___45_8826298017021943574;
  fluidb_string<15> sym__0___45_4595321853941955376;
  fluidb_string<13> sym__0__7185892854338941105;
  fluidb_string<15> sym__0__4550001706105210726;
  fluidb_string<21> sym__0___45_2610483358697858174;
  unsigned sym__0___45_9183464255297383875;
  fluidb_string<25> sym__0___45_8363344675326727930;
  fluidb_string<40> sym__0__6494291207494929956;
  fluidb_string<16> sym__0___45_3750092641805908006;
  fluidb_string<16> sym__0__1528809880997670760;
  fluidb_string<13> sym__0___45_220369887750207591;
  fluidb_string<15> sym__0___45_724122223893020794;
  unsigned sym__0__2372035799753352890;
  int sym__0___45_8750473076158315728;
  unsigned sym__0___45_5876960592182796984;
  unsigned sym__0___45_3166330364604294690;
  unsigned sym__0__4863578943113536581;
  unsigned sym__0___45_3083711454390311588;
  fluidb_string<21> sym__0__482048049617558469;
  unsigned sym__0___45_3991422289368413497;
  fluidb_string<10> sym__0___45_7903742392414935096;
  unsigned sym__0___45_2273431051769217928;
  double sym__0___45_360728523760837958;
  unsigned sym__0__1845284332479501628;
  double sym__0__163937504765675410;
  unsigned sym__0__1572485749814613910;
  unsigned sym__0___45_3949776094580525311;
  double sym__0___45_6332680418179860965;
  fluidb_string<13> sym__0__8489428250482206963;
 private:
};


class CallableClass10 {
 public:
  Record4 operator()(const Record6& record3) {
    return Record4(vAggrFirst5(record3.sym__0___45_4595321853941955376), vAggrFirst7(record3.sym__0__1528809880997670760), vAggrFirst8(record3.sym__0___45_2887238403378764427), vAggrSum9(record3.sym__0__1572485749814613910));
  }
  typedef Record4 Codomain;
  typedef Record6 Domain0;
 private:
  AggrFirst<fluidb_string<15>> vAggrFirst5;
  AggrFirst<fluidb_string<16>> vAggrFirst7;
  AggrFirst<unsigned> vAggrFirst8;
  AggrSum<unsigned> vAggrSum9;
};


class CallableClass2 {
 public:
  bool operator()(const Record1& record0) {
    return (((like(record0.sym__0___45_4336521243533294241, "ASIA") && (record0.sym__0__5557137180551786739 >= 1992)) && (record0.sym__0__5557137180551786739 <= 1997)) && like(record0.sym__0___45_281035451017513097, "ASIA"));
  }
  typedef bool Codomain;
  typedef Record1 Domain0;
 private:
};


class CallableClass15 {
 public:
  Record14 operator()(const Record4& record13) {
    return Record14(record13.sym__0___45_2870988783450377285, (-(record13.sym__0___45_8595554158775151949)));
  }
  typedef Record14 Codomain;
  typedef Record4 Domain0;
 private:
};


class CallableClass12 {
 public:
  Record11 operator()(const Record6& record3) {
    return Record11(record3.sym__0___45_4595321853941955376, record3.sym__0__1528809880997670760, record3.sym__0___45_2887238403378764427);
  }
  typedef Record11 Codomain;
  typedef Record6 Domain0;
 private:
};






int main() {
  // ForwardTrigger: (Just 
  //   (Right 
  //     [
  //      QSel 
  //         (P2 
  //           PAnd 
  //           (P2 
  //             PAnd 
  //             (P2 
  //               PAnd 
  //               (P0 
  //                 (R2 RLike 
  //                     (R0 (E0 (ESym "c_region"))) 
  //                     (R0 (E0 (EString "ASIA"))))) 
  //               (P0 
  //                 (R2 RGe (R0 (E0 (ESym "d_year"))) (R0 (E0 (EInt 1992)))))) 
  //             (P0 
  //               (R2 RLe (R0 (E0 (ESym "d_year"))) (R0 (E0 (EInt 1997)))))) 
  //           (P0 
  //             (R2 RLike 
  //                 (R0 (E0 (ESym "s_region"))) 
  //                 (R0 (E0 (EString "ASIA"))))))
  std::cout << "ForwardTrigger: (Just \n  (Right \n    [\n     QSel \n        (P2 \n          PAnd \n          (P2 \n            PAnd \n            (P2 \n              PAnd \n              (P0 \n                (R2 RLike \n                    (R0 (E0 (ESym \"c_region\"))) \n                    (R0 (E0 (EString \"ASIA\"))))) \n              (P0 \n                (R2 RGe (R0 (E0 (ESym \"d_year\"))) (R0 (E0 (EInt 1992)))))) \n            (P0 \n              (R2 RLe (R0 (E0 (ESym \"d_year\"))) (R0 (E0 (EInt 1997)))))) \n          (P0 \n            (R2 RLike \n                (R0 (E0 (ESym \"s_region\"))) \n                (R0 (E0 (EString \"ASIA\"))))))\n    ]))" << std::endl;
  {
    auto operation = mkSelect<CallableClass2>(Just<const std::string>("/tmp/fluidb_store/data163.dat"), Just<const std::string>("/tmp/fluidb_store/data164.dat"), "/tmp/fluidb_store/data159.dat");
    operation.run();
    operation.print_output(10);
  }
  // ForwardTrigger: (Just 
  //   (Right 
  //     [
  //      QGroup 
  //         [(ESym "c_nation",E0 (NAggr AggrFirst (E0 (ESym "c_nation")))),
  //          (ESym "s_nation",E0 (NAggr AggrFirst (E0 (ESym "s_nation")))),
  //          (ESym "d_year",E0 (NAggr AggrFirst (E0 (ESym "d_year")))),
  //          (ESym "revenue",E0 (NAggr AggrSum (E0 (ESym "lo_revenue"))))] 
  //         [E0 (ESym "c_nation"),E0 (ESym "s_nation"),E0 (ESym "d_year")]
  std::cout << "ForwardTrigger: (Just \n  (Right \n    [\n     QGroup \n        [(ESym \"c_nation\",E0 (NAggr AggrFirst (E0 (ESym \"c_nation\")))),\n         (ESym \"s_nation\",E0 (NAggr AggrFirst (E0 (ESym \"s_nation\")))),\n         (ESym \"d_year\",E0 (NAggr AggrFirst (E0 (ESym \"d_year\")))),\n         (ESym \"revenue\",E0 (NAggr AggrSum (E0 (ESym \"lo_revenue\"))))] \n        [E0 (ESym \"c_nation\"),E0 (ESym \"s_nation\"),E0 (ESym \"d_year\")]\n    ]))" << std::endl;
  {
    auto operation = mkAggregation<CallableClass10, CallableClass12>(Just<const std::string>("/tmp/fluidb_store/data203.dat"), Just<const std::string>("/tmp/fluidb_store/data163.dat"), "/tmp/fluidb_store/data163.dat");
    operation.run();
    operation.print_output(10);
  }
  // ForwardTrigger: (Just 
  std::cout << "ForwardTrigger: (Just \n  (Right [QSort [E0 (ESym \"d_year\"),E1 ENeg (E0 (ESym \"revenue\"))]]))" << std::endl;
  {
    auto operation = mkSort<CallableClass15>(Just<const std::string>("/tmp/fluidb_store/data204.dat"), Just<const std::string>("/tmp/fluidb_store/data203.dat"), "/tmp/fluidb_store/data203.dat");
    operation.run();
    operation.print_output(10);
  }
  return 0;
}
