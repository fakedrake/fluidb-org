#include <array>

#include <string>

#include <codegen.hh>
class Record28 {
 public:
  Record28(unsigned __sortElem0, fluidb_string<10> __sortElem1) : sortElem0(__sortElem0), sortElem1(__sortElem1)
  {
  }
  Record28() 
  {
  }
  std::string show() const{
    std::stringstream o;
    o << sortElem0 << " | " << arrToString(sortElem1);
    return o.str();
  }
  bool operator <(const Record28& otherRec) const{
    return (otherRec.sortElem0 < sortElem0 && otherRec.sortElem1 < sortElem1);
  }
  bool operator ==(const Record28& otherRec) const{
    return (otherRec.sortElem0 == sortElem0 && otherRec.sortElem1 == sortElem1);
  }
  bool operator !=(const Record28& otherRec) const{
    return (otherRec.sortElem0 != sortElem0 || otherRec.sortElem1 != sortElem1);
  }
  unsigned sortElem0;
  fluidb_string<10> sortElem1;
 private:
};


class Record12 {
 public:
  Record12(unsigned __sym__0__3749202613835539516, fluidb_string<25> __sym__0__3853910811136206439, fluidb_string<40> __sym__0___45_4812439514081860187, fluidb_string<16> __sym__0__8141341990593755227, fluidb_string<16> __sym__0___45_1677497998823335159, fluidb_string<13> __sym__0__7067889907208718136, fluidb_string<15> __sym__0__2063264474794950631, unsigned __sym__0___45_2406203400319404933, int __sym__0__9081834897704197137, unsigned __sym__0___45_8323320223000960471, unsigned __sym__0___45_8331347243081162497, unsigned __sym__0___45_2390083838583420092, unsigned __sym__0__2912236000029059069, fluidb_string<21> __sym__0__3653370686033553860, unsigned __sym__0__5936012595412334150, fluidb_string<10> __sym__0___45_1816837998167001175, unsigned __sym__0__7545091206599238681, double __sym__0___45_1424559208137584517, unsigned __sym__0__6395144509512964253, double __sym__0__9182535146594246451, unsigned __sym__0__280815916194286583, unsigned __sym__0__2540705042138486592, double __sym__0__8281520224814360410, fluidb_string<13> __sym__0__3059107448055216658, unsigned __sym__0__5947624015539765847, fluidb_string<18> __sym__0___45_9066590480537882041, fluidb_string<9> __sym__0___45_5447174107187519735, fluidb_string<9> __sym__0___45_3420603495949690014, unsigned __sym__0___45_9004707282254064716, unsigned __sym__0___45_4063231403699784718, fluidb_string<7> __sym__0___45_1843583846408941393, unsigned __sym__0__3878271002552174104, unsigned __sym__0__6118668371652612367, unsigned __sym__0___45_2229254424656099401, unsigned __sym__0___45_7776418238460988847, unsigned __sym__0__4886447806562354754, fluidb_string<15> __sym__0___45_4567805851496469981, fluidb_string<2> __sym__0___45_7971780566155543493, fluidb_string<2> __sym__0__1382282970499677142, fluidb_string<2> __sym__0__5011297957218063582, fluidb_string<2> __sym__0___45_3550325263493409460, unsigned __sym__0__6529948146205169113, fluidb_string<55> __sym__0__6661097005291578729, fluidb_string<25> __sym__0___45_7469900952409713322, fluidb_string<7> __sym__0___45_8598458868422699732, fluidb_string<10> __sym__0___45_6414117357071051226, fluidb_string<11> __sym__0__4421059099170388330, fluidb_string<25> __sym__0___45_108714048876090312, unsigned __sym__0__5441078539661244851, fluidb_string<10> __sym__0___45_8326498932109471738) : sym__0__3749202613835539516(__sym__0__3749202613835539516), sym__0__3853910811136206439(__sym__0__3853910811136206439), sym__0___45_4812439514081860187(__sym__0___45_4812439514081860187), sym__0__8141341990593755227(__sym__0__8141341990593755227), sym__0___45_1677497998823335159(__sym__0___45_1677497998823335159), sym__0__7067889907208718136(__sym__0__7067889907208718136), sym__0__2063264474794950631(__sym__0__2063264474794950631), sym__0___45_2406203400319404933(__sym__0___45_2406203400319404933), sym__0__9081834897704197137(__sym__0__9081834897704197137), sym__0___45_8323320223000960471(__sym__0___45_8323320223000960471), sym__0___45_8331347243081162497(__sym__0___45_8331347243081162497), sym__0___45_2390083838583420092(__sym__0___45_2390083838583420092), sym__0__2912236000029059069(__sym__0__2912236000029059069), sym__0__3653370686033553860(__sym__0__3653370686033553860), sym__0__5936012595412334150(__sym__0__5936012595412334150), sym__0___45_1816837998167001175(__sym__0___45_1816837998167001175), sym__0__7545091206599238681(__sym__0__7545091206599238681), sym__0___45_1424559208137584517(__sym__0___45_1424559208137584517), sym__0__6395144509512964253(__sym__0__6395144509512964253), sym__0__9182535146594246451(__sym__0__9182535146594246451), sym__0__280815916194286583(__sym__0__280815916194286583), sym__0__2540705042138486592(__sym__0__2540705042138486592), sym__0__8281520224814360410(__sym__0__8281520224814360410), sym__0__3059107448055216658(__sym__0__3059107448055216658), sym__0__5947624015539765847(__sym__0__5947624015539765847), sym__0___45_9066590480537882041(__sym__0___45_9066590480537882041), sym__0___45_5447174107187519735(__sym__0___45_5447174107187519735), sym__0___45_3420603495949690014(__sym__0___45_3420603495949690014), sym__0___45_9004707282254064716(__sym__0___45_9004707282254064716), sym__0___45_4063231403699784718(__sym__0___45_4063231403699784718), sym__0___45_1843583846408941393(__sym__0___45_1843583846408941393), sym__0__3878271002552174104(__sym__0__3878271002552174104), sym__0__6118668371652612367(__sym__0__6118668371652612367), sym__0___45_2229254424656099401(__sym__0___45_2229254424656099401), sym__0___45_7776418238460988847(__sym__0___45_7776418238460988847), sym__0__4886447806562354754(__sym__0__4886447806562354754), sym__0___45_4567805851496469981(__sym__0___45_4567805851496469981), sym__0___45_7971780566155543493(__sym__0___45_7971780566155543493), sym__0__1382282970499677142(__sym__0__1382282970499677142), sym__0__5011297957218063582(__sym__0__5011297957218063582), sym__0___45_3550325263493409460(__sym__0___45_3550325263493409460), sym__0__6529948146205169113(__sym__0__6529948146205169113), sym__0__6661097005291578729(__sym__0__6661097005291578729), sym__0___45_7469900952409713322(__sym__0___45_7469900952409713322), sym__0___45_8598458868422699732(__sym__0___45_8598458868422699732), sym__0___45_6414117357071051226(__sym__0___45_6414117357071051226), sym__0__4421059099170388330(__sym__0__4421059099170388330), sym__0___45_108714048876090312(__sym__0___45_108714048876090312), sym__0__5441078539661244851(__sym__0__5441078539661244851), sym__0___45_8326498932109471738(__sym__0___45_8326498932109471738)
  {
  }
  Record12() 
  {
  }
  std::string show() const{
    std::stringstream o;
    o << sym__0__3749202613835539516 << " | " << arrToString(sym__0__3853910811136206439) << " | " << arrToString(sym__0___45_4812439514081860187) << " | " << arrToString(sym__0__8141341990593755227) << " | " << arrToString(sym__0___45_1677497998823335159) << " | " << arrToString(sym__0__7067889907208718136) << " | " << arrToString(sym__0__2063264474794950631) << " | " << sym__0___45_2406203400319404933 << " | " << sym__0__9081834897704197137 << " | " << sym__0___45_8323320223000960471 << " | " << sym__0___45_8331347243081162497 << " | " << sym__0___45_2390083838583420092 << " | " << sym__0__2912236000029059069 << " | " << arrToString(sym__0__3653370686033553860) << " | " << sym__0__5936012595412334150 << " | " << arrToString(sym__0___45_1816837998167001175) << " | " << sym__0__7545091206599238681 << " | " << sym__0___45_1424559208137584517 << " | " << sym__0__6395144509512964253 << " | " << sym__0__9182535146594246451 << " | " << sym__0__280815916194286583 << " | " << sym__0__2540705042138486592 << " | " << sym__0__8281520224814360410 << " | " << arrToString(sym__0__3059107448055216658) << " | " << sym__0__5947624015539765847 << " | " << arrToString(sym__0___45_9066590480537882041) << " | " << arrToString(sym__0___45_5447174107187519735) << " | " << arrToString(sym__0___45_3420603495949690014) << " | " << sym__0___45_9004707282254064716 << " | " << sym__0___45_4063231403699784718 << " | " << arrToString(sym__0___45_1843583846408941393) << " | " << sym__0__3878271002552174104 << " | " << sym__0__6118668371652612367 << " | " << sym__0___45_2229254424656099401 << " | " << sym__0___45_7776418238460988847 << " | " << sym__0__4886447806562354754 << " | " << arrToString(sym__0___45_4567805851496469981) << " | " << arrToString(sym__0___45_7971780566155543493) << " | " << arrToString(sym__0__1382282970499677142) << " | " << arrToString(sym__0__5011297957218063582) << " | " << arrToString(sym__0___45_3550325263493409460) << " | " << sym__0__6529948146205169113 << " | " << arrToString(sym__0__6661097005291578729) << " | " << arrToString(sym__0___45_7469900952409713322) << " | " << arrToString(sym__0___45_8598458868422699732) << " | " << arrToString(sym__0___45_6414117357071051226) << " | " << arrToString(sym__0__4421059099170388330) << " | " << arrToString(sym__0___45_108714048876090312) << " | " << sym__0__5441078539661244851 << " | " << arrToString(sym__0___45_8326498932109471738);
    return o.str();
  }
  bool operator <(const Record12& otherRec) const{
    return (otherRec.sym__0__3749202613835539516 < sym__0__3749202613835539516 && (otherRec.sym__0__3853910811136206439 < sym__0__3853910811136206439 && (otherRec.sym__0___45_4812439514081860187 < sym__0___45_4812439514081860187 && (otherRec.sym__0__8141341990593755227 < sym__0__8141341990593755227 && (otherRec.sym__0___45_1677497998823335159 < sym__0___45_1677497998823335159 && (otherRec.sym__0__7067889907208718136 < sym__0__7067889907208718136 && (otherRec.sym__0__2063264474794950631 < sym__0__2063264474794950631 && (otherRec.sym__0___45_2406203400319404933 < sym__0___45_2406203400319404933 && (otherRec.sym__0__9081834897704197137 < sym__0__9081834897704197137 && (otherRec.sym__0___45_8323320223000960471 < sym__0___45_8323320223000960471 && (otherRec.sym__0___45_8331347243081162497 < sym__0___45_8331347243081162497 && (otherRec.sym__0___45_2390083838583420092 < sym__0___45_2390083838583420092 && (otherRec.sym__0__2912236000029059069 < sym__0__2912236000029059069 && (otherRec.sym__0__3653370686033553860 < sym__0__3653370686033553860 && (otherRec.sym__0__5936012595412334150 < sym__0__5936012595412334150 && (otherRec.sym__0___45_1816837998167001175 < sym__0___45_1816837998167001175 && (otherRec.sym__0__7545091206599238681 < sym__0__7545091206599238681 && (otherRec.sym__0___45_1424559208137584517 < sym__0___45_1424559208137584517 && (otherRec.sym__0__6395144509512964253 < sym__0__6395144509512964253 && (otherRec.sym__0__9182535146594246451 < sym__0__9182535146594246451 && (otherRec.sym__0__280815916194286583 < sym__0__280815916194286583 && (otherRec.sym__0__2540705042138486592 < sym__0__2540705042138486592 && (otherRec.sym__0__8281520224814360410 < sym__0__8281520224814360410 && (otherRec.sym__0__3059107448055216658 < sym__0__3059107448055216658 && (otherRec.sym__0__5947624015539765847 < sym__0__5947624015539765847 && (otherRec.sym__0___45_9066590480537882041 < sym__0___45_9066590480537882041 && (otherRec.sym__0___45_5447174107187519735 < sym__0___45_5447174107187519735 && (otherRec.sym__0___45_3420603495949690014 < sym__0___45_3420603495949690014 && (otherRec.sym__0___45_9004707282254064716 < sym__0___45_9004707282254064716 && (otherRec.sym__0___45_4063231403699784718 < sym__0___45_4063231403699784718 && (otherRec.sym__0___45_1843583846408941393 < sym__0___45_1843583846408941393 && (otherRec.sym__0__3878271002552174104 < sym__0__3878271002552174104 && (otherRec.sym__0__6118668371652612367 < sym__0__6118668371652612367 && (otherRec.sym__0___45_2229254424656099401 < sym__0___45_2229254424656099401 && (otherRec.sym__0___45_7776418238460988847 < sym__0___45_7776418238460988847 && (otherRec.sym__0__4886447806562354754 < sym__0__4886447806562354754 && (otherRec.sym__0___45_4567805851496469981 < sym__0___45_4567805851496469981 && (otherRec.sym__0___45_7971780566155543493 < sym__0___45_7971780566155543493 && (otherRec.sym__0__1382282970499677142 < sym__0__1382282970499677142 && (otherRec.sym__0__5011297957218063582 < sym__0__5011297957218063582 && (otherRec.sym__0___45_3550325263493409460 < sym__0___45_3550325263493409460 && (otherRec.sym__0__6529948146205169113 < sym__0__6529948146205169113 && (otherRec.sym__0__6661097005291578729 < sym__0__6661097005291578729 && (otherRec.sym__0___45_7469900952409713322 < sym__0___45_7469900952409713322 && (otherRec.sym__0___45_8598458868422699732 < sym__0___45_8598458868422699732 && (otherRec.sym__0___45_6414117357071051226 < sym__0___45_6414117357071051226 && (otherRec.sym__0__4421059099170388330 < sym__0__4421059099170388330 && (otherRec.sym__0___45_108714048876090312 < sym__0___45_108714048876090312 && (otherRec.sym__0__5441078539661244851 < sym__0__5441078539661244851 && otherRec.sym__0___45_8326498932109471738 < sym__0___45_8326498932109471738)))))))))))))))))))))))))))))))))))))))))))))))));
  }
  bool operator ==(const Record12& otherRec) const{
    return (otherRec.sym__0__3749202613835539516 == sym__0__3749202613835539516 && (otherRec.sym__0__3853910811136206439 == sym__0__3853910811136206439 && (otherRec.sym__0___45_4812439514081860187 == sym__0___45_4812439514081860187 && (otherRec.sym__0__8141341990593755227 == sym__0__8141341990593755227 && (otherRec.sym__0___45_1677497998823335159 == sym__0___45_1677497998823335159 && (otherRec.sym__0__7067889907208718136 == sym__0__7067889907208718136 && (otherRec.sym__0__2063264474794950631 == sym__0__2063264474794950631 && (otherRec.sym__0___45_2406203400319404933 == sym__0___45_2406203400319404933 && (otherRec.sym__0__9081834897704197137 == sym__0__9081834897704197137 && (otherRec.sym__0___45_8323320223000960471 == sym__0___45_8323320223000960471 && (otherRec.sym__0___45_8331347243081162497 == sym__0___45_8331347243081162497 && (otherRec.sym__0___45_2390083838583420092 == sym__0___45_2390083838583420092 && (otherRec.sym__0__2912236000029059069 == sym__0__2912236000029059069 && (otherRec.sym__0__3653370686033553860 == sym__0__3653370686033553860 && (otherRec.sym__0__5936012595412334150 == sym__0__5936012595412334150 && (otherRec.sym__0___45_1816837998167001175 == sym__0___45_1816837998167001175 && (otherRec.sym__0__7545091206599238681 == sym__0__7545091206599238681 && (otherRec.sym__0___45_1424559208137584517 == sym__0___45_1424559208137584517 && (otherRec.sym__0__6395144509512964253 == sym__0__6395144509512964253 && (otherRec.sym__0__9182535146594246451 == sym__0__9182535146594246451 && (otherRec.sym__0__280815916194286583 == sym__0__280815916194286583 && (otherRec.sym__0__2540705042138486592 == sym__0__2540705042138486592 && (otherRec.sym__0__8281520224814360410 == sym__0__8281520224814360410 && (otherRec.sym__0__3059107448055216658 == sym__0__3059107448055216658 && (otherRec.sym__0__5947624015539765847 == sym__0__5947624015539765847 && (otherRec.sym__0___45_9066590480537882041 == sym__0___45_9066590480537882041 && (otherRec.sym__0___45_5447174107187519735 == sym__0___45_5447174107187519735 && (otherRec.sym__0___45_3420603495949690014 == sym__0___45_3420603495949690014 && (otherRec.sym__0___45_9004707282254064716 == sym__0___45_9004707282254064716 && (otherRec.sym__0___45_4063231403699784718 == sym__0___45_4063231403699784718 && (otherRec.sym__0___45_1843583846408941393 == sym__0___45_1843583846408941393 && (otherRec.sym__0__3878271002552174104 == sym__0__3878271002552174104 && (otherRec.sym__0__6118668371652612367 == sym__0__6118668371652612367 && (otherRec.sym__0___45_2229254424656099401 == sym__0___45_2229254424656099401 && (otherRec.sym__0___45_7776418238460988847 == sym__0___45_7776418238460988847 && (otherRec.sym__0__4886447806562354754 == sym__0__4886447806562354754 && (otherRec.sym__0___45_4567805851496469981 == sym__0___45_4567805851496469981 && (otherRec.sym__0___45_7971780566155543493 == sym__0___45_7971780566155543493 && (otherRec.sym__0__1382282970499677142 == sym__0__1382282970499677142 && (otherRec.sym__0__5011297957218063582 == sym__0__5011297957218063582 && (otherRec.sym__0___45_3550325263493409460 == sym__0___45_3550325263493409460 && (otherRec.sym__0__6529948146205169113 == sym__0__6529948146205169113 && (otherRec.sym__0__6661097005291578729 == sym__0__6661097005291578729 && (otherRec.sym__0___45_7469900952409713322 == sym__0___45_7469900952409713322 && (otherRec.sym__0___45_8598458868422699732 == sym__0___45_8598458868422699732 && (otherRec.sym__0___45_6414117357071051226 == sym__0___45_6414117357071051226 && (otherRec.sym__0__4421059099170388330 == sym__0__4421059099170388330 && (otherRec.sym__0___45_108714048876090312 == sym__0___45_108714048876090312 && (otherRec.sym__0__5441078539661244851 == sym__0__5441078539661244851 && otherRec.sym__0___45_8326498932109471738 == sym__0___45_8326498932109471738)))))))))))))))))))))))))))))))))))))))))))))))));
  }
  bool operator !=(const Record12& otherRec) const{
    return (otherRec.sym__0__3749202613835539516 != sym__0__3749202613835539516 || (otherRec.sym__0__3853910811136206439 != sym__0__3853910811136206439 || (otherRec.sym__0___45_4812439514081860187 != sym__0___45_4812439514081860187 || (otherRec.sym__0__8141341990593755227 != sym__0__8141341990593755227 || (otherRec.sym__0___45_1677497998823335159 != sym__0___45_1677497998823335159 || (otherRec.sym__0__7067889907208718136 != sym__0__7067889907208718136 || (otherRec.sym__0__2063264474794950631 != sym__0__2063264474794950631 || (otherRec.sym__0___45_2406203400319404933 != sym__0___45_2406203400319404933 || (otherRec.sym__0__9081834897704197137 != sym__0__9081834897704197137 || (otherRec.sym__0___45_8323320223000960471 != sym__0___45_8323320223000960471 || (otherRec.sym__0___45_8331347243081162497 != sym__0___45_8331347243081162497 || (otherRec.sym__0___45_2390083838583420092 != sym__0___45_2390083838583420092 || (otherRec.sym__0__2912236000029059069 != sym__0__2912236000029059069 || (otherRec.sym__0__3653370686033553860 != sym__0__3653370686033553860 || (otherRec.sym__0__5936012595412334150 != sym__0__5936012595412334150 || (otherRec.sym__0___45_1816837998167001175 != sym__0___45_1816837998167001175 || (otherRec.sym__0__7545091206599238681 != sym__0__7545091206599238681 || (otherRec.sym__0___45_1424559208137584517 != sym__0___45_1424559208137584517 || (otherRec.sym__0__6395144509512964253 != sym__0__6395144509512964253 || (otherRec.sym__0__9182535146594246451 != sym__0__9182535146594246451 || (otherRec.sym__0__280815916194286583 != sym__0__280815916194286583 || (otherRec.sym__0__2540705042138486592 != sym__0__2540705042138486592 || (otherRec.sym__0__8281520224814360410 != sym__0__8281520224814360410 || (otherRec.sym__0__3059107448055216658 != sym__0__3059107448055216658 || (otherRec.sym__0__5947624015539765847 != sym__0__5947624015539765847 || (otherRec.sym__0___45_9066590480537882041 != sym__0___45_9066590480537882041 || (otherRec.sym__0___45_5447174107187519735 != sym__0___45_5447174107187519735 || (otherRec.sym__0___45_3420603495949690014 != sym__0___45_3420603495949690014 || (otherRec.sym__0___45_9004707282254064716 != sym__0___45_9004707282254064716 || (otherRec.sym__0___45_4063231403699784718 != sym__0___45_4063231403699784718 || (otherRec.sym__0___45_1843583846408941393 != sym__0___45_1843583846408941393 || (otherRec.sym__0__3878271002552174104 != sym__0__3878271002552174104 || (otherRec.sym__0__6118668371652612367 != sym__0__6118668371652612367 || (otherRec.sym__0___45_2229254424656099401 != sym__0___45_2229254424656099401 || (otherRec.sym__0___45_7776418238460988847 != sym__0___45_7776418238460988847 || (otherRec.sym__0__4886447806562354754 != sym__0__4886447806562354754 || (otherRec.sym__0___45_4567805851496469981 != sym__0___45_4567805851496469981 || (otherRec.sym__0___45_7971780566155543493 != sym__0___45_7971780566155543493 || (otherRec.sym__0__1382282970499677142 != sym__0__1382282970499677142 || (otherRec.sym__0__5011297957218063582 != sym__0__5011297957218063582 || (otherRec.sym__0___45_3550325263493409460 != sym__0___45_3550325263493409460 || (otherRec.sym__0__6529948146205169113 != sym__0__6529948146205169113 || (otherRec.sym__0__6661097005291578729 != sym__0__6661097005291578729 || (otherRec.sym__0___45_7469900952409713322 != sym__0___45_7469900952409713322 || (otherRec.sym__0___45_8598458868422699732 != sym__0___45_8598458868422699732 || (otherRec.sym__0___45_6414117357071051226 != sym__0___45_6414117357071051226 || (otherRec.sym__0__4421059099170388330 != sym__0__4421059099170388330 || (otherRec.sym__0___45_108714048876090312 != sym__0___45_108714048876090312 || (otherRec.sym__0__5441078539661244851 != sym__0__5441078539661244851 || otherRec.sym__0___45_8326498932109471738 != sym__0___45_8326498932109471738)))))))))))))))))))))))))))))))))))))))))))))))));
  }
  unsigned sym__0__3749202613835539516;
  fluidb_string<25> sym__0__3853910811136206439;
  fluidb_string<40> sym__0___45_4812439514081860187;
  fluidb_string<16> sym__0__8141341990593755227;
  fluidb_string<16> sym__0___45_1677497998823335159;
  fluidb_string<13> sym__0__7067889907208718136;
  fluidb_string<15> sym__0__2063264474794950631;
  unsigned sym__0___45_2406203400319404933;
  int sym__0__9081834897704197137;
  unsigned sym__0___45_8323320223000960471;
  unsigned sym__0___45_8331347243081162497;
  unsigned sym__0___45_2390083838583420092;
  unsigned sym__0__2912236000029059069;
  fluidb_string<21> sym__0__3653370686033553860;
  unsigned sym__0__5936012595412334150;
  fluidb_string<10> sym__0___45_1816837998167001175;
  unsigned sym__0__7545091206599238681;
  double sym__0___45_1424559208137584517;
  unsigned sym__0__6395144509512964253;
  double sym__0__9182535146594246451;
  unsigned sym__0__280815916194286583;
  unsigned sym__0__2540705042138486592;
  double sym__0__8281520224814360410;
  fluidb_string<13> sym__0__3059107448055216658;
  unsigned sym__0__5947624015539765847;
  fluidb_string<18> sym__0___45_9066590480537882041;
  fluidb_string<9> sym__0___45_5447174107187519735;
  fluidb_string<9> sym__0___45_3420603495949690014;
  unsigned sym__0___45_9004707282254064716;
  unsigned sym__0___45_4063231403699784718;
  fluidb_string<7> sym__0___45_1843583846408941393;
  unsigned sym__0__3878271002552174104;
  unsigned sym__0__6118668371652612367;
  unsigned sym__0___45_2229254424656099401;
  unsigned sym__0___45_7776418238460988847;
  unsigned sym__0__4886447806562354754;
  fluidb_string<15> sym__0___45_4567805851496469981;
  fluidb_string<2> sym__0___45_7971780566155543493;
  fluidb_string<2> sym__0__1382282970499677142;
  fluidb_string<2> sym__0__5011297957218063582;
  fluidb_string<2> sym__0___45_3550325263493409460;
  unsigned sym__0__6529948146205169113;
  fluidb_string<55> sym__0__6661097005291578729;
  fluidb_string<25> sym__0___45_7469900952409713322;
  fluidb_string<7> sym__0___45_8598458868422699732;
  fluidb_string<10> sym__0___45_6414117357071051226;
  fluidb_string<11> sym__0__4421059099170388330;
  fluidb_string<25> sym__0___45_108714048876090312;
  unsigned sym__0__5441078539661244851;
  fluidb_string<10> sym__0___45_8326498932109471738;
 private:
};


class Record4 {
 public:
  Record4(unsigned __sym__0__7178003535380331304, fluidb_string<55> __sym__0___45_7020257275696364520, fluidb_string<25> __sym__0___45_6307179734719967033, fluidb_string<7> __sym__0__4568304886257136061, fluidb_string<10> __sym__0___45_6291097039630000265, fluidb_string<11> __sym__0__551327770031967739, fluidb_string<25> __sym__0__3827696365022297353, unsigned __sym__0___45_1779543743759935870, fluidb_string<10> __sym__0__3752090135924368535) : sym__0__7178003535380331304(__sym__0__7178003535380331304), sym__0___45_7020257275696364520(__sym__0___45_7020257275696364520), sym__0___45_6307179734719967033(__sym__0___45_6307179734719967033), sym__0__4568304886257136061(__sym__0__4568304886257136061), sym__0___45_6291097039630000265(__sym__0___45_6291097039630000265), sym__0__551327770031967739(__sym__0__551327770031967739), sym__0__3827696365022297353(__sym__0__3827696365022297353), sym__0___45_1779543743759935870(__sym__0___45_1779543743759935870), sym__0__3752090135924368535(__sym__0__3752090135924368535)
  {
  }
  Record4() 
  {
  }
  std::string show() const{
    std::stringstream o;
    o << sym__0__7178003535380331304 << " | " << arrToString(sym__0___45_7020257275696364520) << " | " << arrToString(sym__0___45_6307179734719967033) << " | " << arrToString(sym__0__4568304886257136061) << " | " << arrToString(sym__0___45_6291097039630000265) << " | " << arrToString(sym__0__551327770031967739) << " | " << arrToString(sym__0__3827696365022297353) << " | " << sym__0___45_1779543743759935870 << " | " << arrToString(sym__0__3752090135924368535);
    return o.str();
  }
  bool operator <(const Record4& otherRec) const{
    return (otherRec.sym__0__7178003535380331304 < sym__0__7178003535380331304 && (otherRec.sym__0___45_7020257275696364520 < sym__0___45_7020257275696364520 && (otherRec.sym__0___45_6307179734719967033 < sym__0___45_6307179734719967033 && (otherRec.sym__0__4568304886257136061 < sym__0__4568304886257136061 && (otherRec.sym__0___45_6291097039630000265 < sym__0___45_6291097039630000265 && (otherRec.sym__0__551327770031967739 < sym__0__551327770031967739 && (otherRec.sym__0__3827696365022297353 < sym__0__3827696365022297353 && (otherRec.sym__0___45_1779543743759935870 < sym__0___45_1779543743759935870 && otherRec.sym__0__3752090135924368535 < sym__0__3752090135924368535))))))));
  }
  bool operator ==(const Record4& otherRec) const{
    return (otherRec.sym__0__7178003535380331304 == sym__0__7178003535380331304 && (otherRec.sym__0___45_7020257275696364520 == sym__0___45_7020257275696364520 && (otherRec.sym__0___45_6307179734719967033 == sym__0___45_6307179734719967033 && (otherRec.sym__0__4568304886257136061 == sym__0__4568304886257136061 && (otherRec.sym__0___45_6291097039630000265 == sym__0___45_6291097039630000265 && (otherRec.sym__0__551327770031967739 == sym__0__551327770031967739 && (otherRec.sym__0__3827696365022297353 == sym__0__3827696365022297353 && (otherRec.sym__0___45_1779543743759935870 == sym__0___45_1779543743759935870 && otherRec.sym__0__3752090135924368535 == sym__0__3752090135924368535))))))));
  }
  bool operator !=(const Record4& otherRec) const{
    return (otherRec.sym__0__7178003535380331304 != sym__0__7178003535380331304 || (otherRec.sym__0___45_7020257275696364520 != sym__0___45_7020257275696364520 || (otherRec.sym__0___45_6307179734719967033 != sym__0___45_6307179734719967033 || (otherRec.sym__0__4568304886257136061 != sym__0__4568304886257136061 || (otherRec.sym__0___45_6291097039630000265 != sym__0___45_6291097039630000265 || (otherRec.sym__0__551327770031967739 != sym__0__551327770031967739 || (otherRec.sym__0__3827696365022297353 != sym__0__3827696365022297353 || (otherRec.sym__0___45_1779543743759935870 != sym__0___45_1779543743759935870 || otherRec.sym__0__3752090135924368535 != sym__0__3752090135924368535))))))));
  }
  unsigned sym__0__7178003535380331304;
  fluidb_string<55> sym__0___45_7020257275696364520;
  fluidb_string<25> sym__0___45_6307179734719967033;
  fluidb_string<7> sym__0__4568304886257136061;
  fluidb_string<10> sym__0___45_6291097039630000265;
  fluidb_string<11> sym__0__551327770031967739;
  fluidb_string<25> sym__0__3827696365022297353;
  unsigned sym__0___45_1779543743759935870;
  fluidb_string<10> sym__0__3752090135924368535;
 private:
};


class Record2 {
 public:
  Record2(unsigned __sym__0__7069852625741277438, fluidb_string<25> __sym__0___45_2139184416220787303, fluidb_string<40> __sym__0__6834910062454089307, fluidb_string<16> __sym__0___45_673637979750308955, fluidb_string<16> __sym__0__7353040165187485943, fluidb_string<13> __sym__0___45_3600959643487303198, fluidb_string<15> __sym__0__1586920362281366553, unsigned __sym__0___45_565293263947163771, int __sym__0___45_843396218047479825, unsigned __sym__0___45_6341950231013217833, unsigned __sym__0__1045058483100812033, unsigned __sym__0__3789297121224398166, unsigned __sym__0__7633871876750507011, fluidb_string<21> __sym__0___45_1913197190575800618, unsigned __sym__0__5022607639284586068, fluidb_string<10> __sym__0___45_4537203481097655209, unsigned __sym__0___45_4177776814409117721, double __sym__0___45_1641792039791357051, unsigned __sym__0__9155042948135519075, double __sym__0___45_1524873931413302067, unsigned __sym__0__5123726051002722313, unsigned __sym__0___45_3964194374284396198, double __sym__0___45_3323287974231174848, fluidb_string<13> __sym__0___45_7635081431606838648, unsigned __sym__0__3374832300737452457, fluidb_string<18> __sym__0___45_2738400311900405319, fluidb_string<9> __sym__0__922566035134170359, fluidb_string<9> __sym__0___45_4970177704815948360, unsigned __sym__0__1953889797750115686, unsigned __sym__0__7036968840507665704, fluidb_string<7> __sym__0__2424422746197752657, unsigned __sym__0___45_899504608738992510, unsigned __sym__0__2199101055335955185, unsigned __sym__0__8162945309743176777, unsigned __sym__0__5658677538842948015, unsigned __sym__0___45_1804682623039322536, fluidb_string<15> __sym__0___45_4150473036734596643, fluidb_string<2> __sym__0___45_1494825655055665211, fluidb_string<2> __sym__0__7243345290037361860, fluidb_string<2> __sym__0___45_5621333005798540324, fluidb_string<2> __sym__0___45_6906996774260360338, unsigned __sym__0___45_6223982643952099801, fluidb_string<55> __sym__0___45_4582877986939568489, fluidb_string<25> __sym__0__8952063493441915716, fluidb_string<7> __sym__0___45_1824395327270788210, fluidb_string<10> __sym__0___45_4574956228592531724, fluidb_string<11> __sym__0___45_3583563823835889744, fluidb_string<25> __sym__0__1035932931239708898, unsigned __sym__0__2873925968864442957, fluidb_string<10> __sym__0___45_6275854556107336556) : sym__0__7069852625741277438(__sym__0__7069852625741277438), sym__0___45_2139184416220787303(__sym__0___45_2139184416220787303), sym__0__6834910062454089307(__sym__0__6834910062454089307), sym__0___45_673637979750308955(__sym__0___45_673637979750308955), sym__0__7353040165187485943(__sym__0__7353040165187485943), sym__0___45_3600959643487303198(__sym__0___45_3600959643487303198), sym__0__1586920362281366553(__sym__0__1586920362281366553), sym__0___45_565293263947163771(__sym__0___45_565293263947163771), sym__0___45_843396218047479825(__sym__0___45_843396218047479825), sym__0___45_6341950231013217833(__sym__0___45_6341950231013217833), sym__0__1045058483100812033(__sym__0__1045058483100812033), sym__0__3789297121224398166(__sym__0__3789297121224398166), sym__0__7633871876750507011(__sym__0__7633871876750507011), sym__0___45_1913197190575800618(__sym__0___45_1913197190575800618), sym__0__5022607639284586068(__sym__0__5022607639284586068), sym__0___45_4537203481097655209(__sym__0___45_4537203481097655209), sym__0___45_4177776814409117721(__sym__0___45_4177776814409117721), sym__0___45_1641792039791357051(__sym__0___45_1641792039791357051), sym__0__9155042948135519075(__sym__0__9155042948135519075), sym__0___45_1524873931413302067(__sym__0___45_1524873931413302067), sym__0__5123726051002722313(__sym__0__5123726051002722313), sym__0___45_3964194374284396198(__sym__0___45_3964194374284396198), sym__0___45_3323287974231174848(__sym__0___45_3323287974231174848), sym__0___45_7635081431606838648(__sym__0___45_7635081431606838648), sym__0__3374832300737452457(__sym__0__3374832300737452457), sym__0___45_2738400311900405319(__sym__0___45_2738400311900405319), sym__0__922566035134170359(__sym__0__922566035134170359), sym__0___45_4970177704815948360(__sym__0___45_4970177704815948360), sym__0__1953889797750115686(__sym__0__1953889797750115686), sym__0__7036968840507665704(__sym__0__7036968840507665704), sym__0__2424422746197752657(__sym__0__2424422746197752657), sym__0___45_899504608738992510(__sym__0___45_899504608738992510), sym__0__2199101055335955185(__sym__0__2199101055335955185), sym__0__8162945309743176777(__sym__0__8162945309743176777), sym__0__5658677538842948015(__sym__0__5658677538842948015), sym__0___45_1804682623039322536(__sym__0___45_1804682623039322536), sym__0___45_4150473036734596643(__sym__0___45_4150473036734596643), sym__0___45_1494825655055665211(__sym__0___45_1494825655055665211), sym__0__7243345290037361860(__sym__0__7243345290037361860), sym__0___45_5621333005798540324(__sym__0___45_5621333005798540324), sym__0___45_6906996774260360338(__sym__0___45_6906996774260360338), sym__0___45_6223982643952099801(__sym__0___45_6223982643952099801), sym__0___45_4582877986939568489(__sym__0___45_4582877986939568489), sym__0__8952063493441915716(__sym__0__8952063493441915716), sym__0___45_1824395327270788210(__sym__0___45_1824395327270788210), sym__0___45_4574956228592531724(__sym__0___45_4574956228592531724), sym__0___45_3583563823835889744(__sym__0___45_3583563823835889744), sym__0__1035932931239708898(__sym__0__1035932931239708898), sym__0__2873925968864442957(__sym__0__2873925968864442957), sym__0___45_6275854556107336556(__sym__0___45_6275854556107336556)
  {
  }
  Record2() 
  {
  }
  std::string show() const{
    std::stringstream o;
    o << sym__0__7069852625741277438 << " | " << arrToString(sym__0___45_2139184416220787303) << " | " << arrToString(sym__0__6834910062454089307) << " | " << arrToString(sym__0___45_673637979750308955) << " | " << arrToString(sym__0__7353040165187485943) << " | " << arrToString(sym__0___45_3600959643487303198) << " | " << arrToString(sym__0__1586920362281366553) << " | " << sym__0___45_565293263947163771 << " | " << sym__0___45_843396218047479825 << " | " << sym__0___45_6341950231013217833 << " | " << sym__0__1045058483100812033 << " | " << sym__0__3789297121224398166 << " | " << sym__0__7633871876750507011 << " | " << arrToString(sym__0___45_1913197190575800618) << " | " << sym__0__5022607639284586068 << " | " << arrToString(sym__0___45_4537203481097655209) << " | " << sym__0___45_4177776814409117721 << " | " << sym__0___45_1641792039791357051 << " | " << sym__0__9155042948135519075 << " | " << sym__0___45_1524873931413302067 << " | " << sym__0__5123726051002722313 << " | " << sym__0___45_3964194374284396198 << " | " << sym__0___45_3323287974231174848 << " | " << arrToString(sym__0___45_7635081431606838648) << " | " << sym__0__3374832300737452457 << " | " << arrToString(sym__0___45_2738400311900405319) << " | " << arrToString(sym__0__922566035134170359) << " | " << arrToString(sym__0___45_4970177704815948360) << " | " << sym__0__1953889797750115686 << " | " << sym__0__7036968840507665704 << " | " << arrToString(sym__0__2424422746197752657) << " | " << sym__0___45_899504608738992510 << " | " << sym__0__2199101055335955185 << " | " << sym__0__8162945309743176777 << " | " << sym__0__5658677538842948015 << " | " << sym__0___45_1804682623039322536 << " | " << arrToString(sym__0___45_4150473036734596643) << " | " << arrToString(sym__0___45_1494825655055665211) << " | " << arrToString(sym__0__7243345290037361860) << " | " << arrToString(sym__0___45_5621333005798540324) << " | " << arrToString(sym__0___45_6906996774260360338) << " | " << sym__0___45_6223982643952099801 << " | " << arrToString(sym__0___45_4582877986939568489) << " | " << arrToString(sym__0__8952063493441915716) << " | " << arrToString(sym__0___45_1824395327270788210) << " | " << arrToString(sym__0___45_4574956228592531724) << " | " << arrToString(sym__0___45_3583563823835889744) << " | " << arrToString(sym__0__1035932931239708898) << " | " << sym__0__2873925968864442957 << " | " << arrToString(sym__0___45_6275854556107336556);
    return o.str();
  }
  bool operator <(const Record2& otherRec) const{
    return (otherRec.sym__0__7069852625741277438 < sym__0__7069852625741277438 && (otherRec.sym__0___45_2139184416220787303 < sym__0___45_2139184416220787303 && (otherRec.sym__0__6834910062454089307 < sym__0__6834910062454089307 && (otherRec.sym__0___45_673637979750308955 < sym__0___45_673637979750308955 && (otherRec.sym__0__7353040165187485943 < sym__0__7353040165187485943 && (otherRec.sym__0___45_3600959643487303198 < sym__0___45_3600959643487303198 && (otherRec.sym__0__1586920362281366553 < sym__0__1586920362281366553 && (otherRec.sym__0___45_565293263947163771 < sym__0___45_565293263947163771 && (otherRec.sym__0___45_843396218047479825 < sym__0___45_843396218047479825 && (otherRec.sym__0___45_6341950231013217833 < sym__0___45_6341950231013217833 && (otherRec.sym__0__1045058483100812033 < sym__0__1045058483100812033 && (otherRec.sym__0__3789297121224398166 < sym__0__3789297121224398166 && (otherRec.sym__0__7633871876750507011 < sym__0__7633871876750507011 && (otherRec.sym__0___45_1913197190575800618 < sym__0___45_1913197190575800618 && (otherRec.sym__0__5022607639284586068 < sym__0__5022607639284586068 && (otherRec.sym__0___45_4537203481097655209 < sym__0___45_4537203481097655209 && (otherRec.sym__0___45_4177776814409117721 < sym__0___45_4177776814409117721 && (otherRec.sym__0___45_1641792039791357051 < sym__0___45_1641792039791357051 && (otherRec.sym__0__9155042948135519075 < sym__0__9155042948135519075 && (otherRec.sym__0___45_1524873931413302067 < sym__0___45_1524873931413302067 && (otherRec.sym__0__5123726051002722313 < sym__0__5123726051002722313 && (otherRec.sym__0___45_3964194374284396198 < sym__0___45_3964194374284396198 && (otherRec.sym__0___45_3323287974231174848 < sym__0___45_3323287974231174848 && (otherRec.sym__0___45_7635081431606838648 < sym__0___45_7635081431606838648 && (otherRec.sym__0__3374832300737452457 < sym__0__3374832300737452457 && (otherRec.sym__0___45_2738400311900405319 < sym__0___45_2738400311900405319 && (otherRec.sym__0__922566035134170359 < sym__0__922566035134170359 && (otherRec.sym__0___45_4970177704815948360 < sym__0___45_4970177704815948360 && (otherRec.sym__0__1953889797750115686 < sym__0__1953889797750115686 && (otherRec.sym__0__7036968840507665704 < sym__0__7036968840507665704 && (otherRec.sym__0__2424422746197752657 < sym__0__2424422746197752657 && (otherRec.sym__0___45_899504608738992510 < sym__0___45_899504608738992510 && (otherRec.sym__0__2199101055335955185 < sym__0__2199101055335955185 && (otherRec.sym__0__8162945309743176777 < sym__0__8162945309743176777 && (otherRec.sym__0__5658677538842948015 < sym__0__5658677538842948015 && (otherRec.sym__0___45_1804682623039322536 < sym__0___45_1804682623039322536 && (otherRec.sym__0___45_4150473036734596643 < sym__0___45_4150473036734596643 && (otherRec.sym__0___45_1494825655055665211 < sym__0___45_1494825655055665211 && (otherRec.sym__0__7243345290037361860 < sym__0__7243345290037361860 && (otherRec.sym__0___45_5621333005798540324 < sym__0___45_5621333005798540324 && (otherRec.sym__0___45_6906996774260360338 < sym__0___45_6906996774260360338 && (otherRec.sym__0___45_6223982643952099801 < sym__0___45_6223982643952099801 && (otherRec.sym__0___45_4582877986939568489 < sym__0___45_4582877986939568489 && (otherRec.sym__0__8952063493441915716 < sym__0__8952063493441915716 && (otherRec.sym__0___45_1824395327270788210 < sym__0___45_1824395327270788210 && (otherRec.sym__0___45_4574956228592531724 < sym__0___45_4574956228592531724 && (otherRec.sym__0___45_3583563823835889744 < sym__0___45_3583563823835889744 && (otherRec.sym__0__1035932931239708898 < sym__0__1035932931239708898 && (otherRec.sym__0__2873925968864442957 < sym__0__2873925968864442957 && otherRec.sym__0___45_6275854556107336556 < sym__0___45_6275854556107336556)))))))))))))))))))))))))))))))))))))))))))))))));
  }
  bool operator ==(const Record2& otherRec) const{
    return (otherRec.sym__0__7069852625741277438 == sym__0__7069852625741277438 && (otherRec.sym__0___45_2139184416220787303 == sym__0___45_2139184416220787303 && (otherRec.sym__0__6834910062454089307 == sym__0__6834910062454089307 && (otherRec.sym__0___45_673637979750308955 == sym__0___45_673637979750308955 && (otherRec.sym__0__7353040165187485943 == sym__0__7353040165187485943 && (otherRec.sym__0___45_3600959643487303198 == sym__0___45_3600959643487303198 && (otherRec.sym__0__1586920362281366553 == sym__0__1586920362281366553 && (otherRec.sym__0___45_565293263947163771 == sym__0___45_565293263947163771 && (otherRec.sym__0___45_843396218047479825 == sym__0___45_843396218047479825 && (otherRec.sym__0___45_6341950231013217833 == sym__0___45_6341950231013217833 && (otherRec.sym__0__1045058483100812033 == sym__0__1045058483100812033 && (otherRec.sym__0__3789297121224398166 == sym__0__3789297121224398166 && (otherRec.sym__0__7633871876750507011 == sym__0__7633871876750507011 && (otherRec.sym__0___45_1913197190575800618 == sym__0___45_1913197190575800618 && (otherRec.sym__0__5022607639284586068 == sym__0__5022607639284586068 && (otherRec.sym__0___45_4537203481097655209 == sym__0___45_4537203481097655209 && (otherRec.sym__0___45_4177776814409117721 == sym__0___45_4177776814409117721 && (otherRec.sym__0___45_1641792039791357051 == sym__0___45_1641792039791357051 && (otherRec.sym__0__9155042948135519075 == sym__0__9155042948135519075 && (otherRec.sym__0___45_1524873931413302067 == sym__0___45_1524873931413302067 && (otherRec.sym__0__5123726051002722313 == sym__0__5123726051002722313 && (otherRec.sym__0___45_3964194374284396198 == sym__0___45_3964194374284396198 && (otherRec.sym__0___45_3323287974231174848 == sym__0___45_3323287974231174848 && (otherRec.sym__0___45_7635081431606838648 == sym__0___45_7635081431606838648 && (otherRec.sym__0__3374832300737452457 == sym__0__3374832300737452457 && (otherRec.sym__0___45_2738400311900405319 == sym__0___45_2738400311900405319 && (otherRec.sym__0__922566035134170359 == sym__0__922566035134170359 && (otherRec.sym__0___45_4970177704815948360 == sym__0___45_4970177704815948360 && (otherRec.sym__0__1953889797750115686 == sym__0__1953889797750115686 && (otherRec.sym__0__7036968840507665704 == sym__0__7036968840507665704 && (otherRec.sym__0__2424422746197752657 == sym__0__2424422746197752657 && (otherRec.sym__0___45_899504608738992510 == sym__0___45_899504608738992510 && (otherRec.sym__0__2199101055335955185 == sym__0__2199101055335955185 && (otherRec.sym__0__8162945309743176777 == sym__0__8162945309743176777 && (otherRec.sym__0__5658677538842948015 == sym__0__5658677538842948015 && (otherRec.sym__0___45_1804682623039322536 == sym__0___45_1804682623039322536 && (otherRec.sym__0___45_4150473036734596643 == sym__0___45_4150473036734596643 && (otherRec.sym__0___45_1494825655055665211 == sym__0___45_1494825655055665211 && (otherRec.sym__0__7243345290037361860 == sym__0__7243345290037361860 && (otherRec.sym__0___45_5621333005798540324 == sym__0___45_5621333005798540324 && (otherRec.sym__0___45_6906996774260360338 == sym__0___45_6906996774260360338 && (otherRec.sym__0___45_6223982643952099801 == sym__0___45_6223982643952099801 && (otherRec.sym__0___45_4582877986939568489 == sym__0___45_4582877986939568489 && (otherRec.sym__0__8952063493441915716 == sym__0__8952063493441915716 && (otherRec.sym__0___45_1824395327270788210 == sym__0___45_1824395327270788210 && (otherRec.sym__0___45_4574956228592531724 == sym__0___45_4574956228592531724 && (otherRec.sym__0___45_3583563823835889744 == sym__0___45_3583563823835889744 && (otherRec.sym__0__1035932931239708898 == sym__0__1035932931239708898 && (otherRec.sym__0__2873925968864442957 == sym__0__2873925968864442957 && otherRec.sym__0___45_6275854556107336556 == sym__0___45_6275854556107336556)))))))))))))))))))))))))))))))))))))))))))))))));
  }
  bool operator !=(const Record2& otherRec) const{
    return (otherRec.sym__0__7069852625741277438 != sym__0__7069852625741277438 || (otherRec.sym__0___45_2139184416220787303 != sym__0___45_2139184416220787303 || (otherRec.sym__0__6834910062454089307 != sym__0__6834910062454089307 || (otherRec.sym__0___45_673637979750308955 != sym__0___45_673637979750308955 || (otherRec.sym__0__7353040165187485943 != sym__0__7353040165187485943 || (otherRec.sym__0___45_3600959643487303198 != sym__0___45_3600959643487303198 || (otherRec.sym__0__1586920362281366553 != sym__0__1586920362281366553 || (otherRec.sym__0___45_565293263947163771 != sym__0___45_565293263947163771 || (otherRec.sym__0___45_843396218047479825 != sym__0___45_843396218047479825 || (otherRec.sym__0___45_6341950231013217833 != sym__0___45_6341950231013217833 || (otherRec.sym__0__1045058483100812033 != sym__0__1045058483100812033 || (otherRec.sym__0__3789297121224398166 != sym__0__3789297121224398166 || (otherRec.sym__0__7633871876750507011 != sym__0__7633871876750507011 || (otherRec.sym__0___45_1913197190575800618 != sym__0___45_1913197190575800618 || (otherRec.sym__0__5022607639284586068 != sym__0__5022607639284586068 || (otherRec.sym__0___45_4537203481097655209 != sym__0___45_4537203481097655209 || (otherRec.sym__0___45_4177776814409117721 != sym__0___45_4177776814409117721 || (otherRec.sym__0___45_1641792039791357051 != sym__0___45_1641792039791357051 || (otherRec.sym__0__9155042948135519075 != sym__0__9155042948135519075 || (otherRec.sym__0___45_1524873931413302067 != sym__0___45_1524873931413302067 || (otherRec.sym__0__5123726051002722313 != sym__0__5123726051002722313 || (otherRec.sym__0___45_3964194374284396198 != sym__0___45_3964194374284396198 || (otherRec.sym__0___45_3323287974231174848 != sym__0___45_3323287974231174848 || (otherRec.sym__0___45_7635081431606838648 != sym__0___45_7635081431606838648 || (otherRec.sym__0__3374832300737452457 != sym__0__3374832300737452457 || (otherRec.sym__0___45_2738400311900405319 != sym__0___45_2738400311900405319 || (otherRec.sym__0__922566035134170359 != sym__0__922566035134170359 || (otherRec.sym__0___45_4970177704815948360 != sym__0___45_4970177704815948360 || (otherRec.sym__0__1953889797750115686 != sym__0__1953889797750115686 || (otherRec.sym__0__7036968840507665704 != sym__0__7036968840507665704 || (otherRec.sym__0__2424422746197752657 != sym__0__2424422746197752657 || (otherRec.sym__0___45_899504608738992510 != sym__0___45_899504608738992510 || (otherRec.sym__0__2199101055335955185 != sym__0__2199101055335955185 || (otherRec.sym__0__8162945309743176777 != sym__0__8162945309743176777 || (otherRec.sym__0__5658677538842948015 != sym__0__5658677538842948015 || (otherRec.sym__0___45_1804682623039322536 != sym__0___45_1804682623039322536 || (otherRec.sym__0___45_4150473036734596643 != sym__0___45_4150473036734596643 || (otherRec.sym__0___45_1494825655055665211 != sym__0___45_1494825655055665211 || (otherRec.sym__0__7243345290037361860 != sym__0__7243345290037361860 || (otherRec.sym__0___45_5621333005798540324 != sym__0___45_5621333005798540324 || (otherRec.sym__0___45_6906996774260360338 != sym__0___45_6906996774260360338 || (otherRec.sym__0___45_6223982643952099801 != sym__0___45_6223982643952099801 || (otherRec.sym__0___45_4582877986939568489 != sym__0___45_4582877986939568489 || (otherRec.sym__0__8952063493441915716 != sym__0__8952063493441915716 || (otherRec.sym__0___45_1824395327270788210 != sym__0___45_1824395327270788210 || (otherRec.sym__0___45_4574956228592531724 != sym__0___45_4574956228592531724 || (otherRec.sym__0___45_3583563823835889744 != sym__0___45_3583563823835889744 || (otherRec.sym__0__1035932931239708898 != sym__0__1035932931239708898 || (otherRec.sym__0__2873925968864442957 != sym__0__2873925968864442957 || otherRec.sym__0___45_6275854556107336556 != sym__0___45_6275854556107336556)))))))))))))))))))))))))))))))))))))))))))))))));
  }
  unsigned sym__0__7069852625741277438;
  fluidb_string<25> sym__0___45_2139184416220787303;
  fluidb_string<40> sym__0__6834910062454089307;
  fluidb_string<16> sym__0___45_673637979750308955;
  fluidb_string<16> sym__0__7353040165187485943;
  fluidb_string<13> sym__0___45_3600959643487303198;
  fluidb_string<15> sym__0__1586920362281366553;
  unsigned sym__0___45_565293263947163771;
  int sym__0___45_843396218047479825;
  unsigned sym__0___45_6341950231013217833;
  unsigned sym__0__1045058483100812033;
  unsigned sym__0__3789297121224398166;
  unsigned sym__0__7633871876750507011;
  fluidb_string<21> sym__0___45_1913197190575800618;
  unsigned sym__0__5022607639284586068;
  fluidb_string<10> sym__0___45_4537203481097655209;
  unsigned sym__0___45_4177776814409117721;
  double sym__0___45_1641792039791357051;
  unsigned sym__0__9155042948135519075;
  double sym__0___45_1524873931413302067;
  unsigned sym__0__5123726051002722313;
  unsigned sym__0___45_3964194374284396198;
  double sym__0___45_3323287974231174848;
  fluidb_string<13> sym__0___45_7635081431606838648;
  unsigned sym__0__3374832300737452457;
  fluidb_string<18> sym__0___45_2738400311900405319;
  fluidb_string<9> sym__0__922566035134170359;
  fluidb_string<9> sym__0___45_4970177704815948360;
  unsigned sym__0__1953889797750115686;
  unsigned sym__0__7036968840507665704;
  fluidb_string<7> sym__0__2424422746197752657;
  unsigned sym__0___45_899504608738992510;
  unsigned sym__0__2199101055335955185;
  unsigned sym__0__8162945309743176777;
  unsigned sym__0__5658677538842948015;
  unsigned sym__0___45_1804682623039322536;
  fluidb_string<15> sym__0___45_4150473036734596643;
  fluidb_string<2> sym__0___45_1494825655055665211;
  fluidb_string<2> sym__0__7243345290037361860;
  fluidb_string<2> sym__0___45_5621333005798540324;
  fluidb_string<2> sym__0___45_6906996774260360338;
  unsigned sym__0___45_6223982643952099801;
  fluidb_string<55> sym__0___45_4582877986939568489;
  fluidb_string<25> sym__0__8952063493441915716;
  fluidb_string<7> sym__0___45_1824395327270788210;
  fluidb_string<10> sym__0___45_4574956228592531724;
  fluidb_string<11> sym__0___45_3583563823835889744;
  fluidb_string<25> sym__0__1035932931239708898;
  unsigned sym__0__2873925968864442957;
  fluidb_string<10> sym__0___45_6275854556107336556;
 private:
};


class Record14 {
 public:
  Record14(unsigned __sortElem0) : sortElem0(__sortElem0)
  {
  }
  Record14() 
  {
  }
  std::string show() const{
    std::stringstream o;
    o << sortElem0;
    return o.str();
  }
  bool operator <(const Record14& otherRec) const{
    return otherRec.sortElem0 < sortElem0;
  }
  bool operator ==(const Record14& otherRec) const{
    return otherRec.sortElem0 == sortElem0;
  }
  bool operator !=(const Record14& otherRec) const{
    return otherRec.sortElem0 != sortElem0;
  }
  unsigned sortElem0;
 private:
};


class Record11 {
 public:
  Record11(unsigned __sym__0___45_5182087624132196707, fluidb_string<25> __sym__0___45_1125733209087237322, fluidb_string<40> __sym__0___45_4972797425225002076, fluidb_string<16> __sym__0__2318854370595574362, fluidb_string<16> __sym__0___45_4041623608412761896, fluidb_string<13> __sym__0___45_3735786698084808711, fluidb_string<15> __sym__0__7384252796126420662, unsigned __sym__0___45_2043653876463228102, int __sym__0__2838774847530135056, unsigned __sym__0__6525564334754176696, unsigned __sym__0__8499987716798155358, unsigned __sym__0___45_6915660615674064043, unsigned __sym__0___45_8326786075612268884, fluidb_string<21> __sym__0___45_6075665051587255339, unsigned __sym__0___45_1350382245670239329, fluidb_string<10> __sym__0__2109402343114077240, unsigned __sym__0__6215935326665719112, double __sym__0__2820217628767326010, unsigned __sym__0__5445672276260318348, double __sym__0__3697656138623911458, unsigned __sym__0__1653175989217608742, unsigned __sym__0___45_3743776918383637103, double __sym__0__2919710110324225859, fluidb_string<13> __sym__0__1749379276187346475, unsigned __sym__0___45_4706300880382947898, fluidb_string<18> __sym__0___45_8488664643470695338, fluidb_string<9> __sym__0___45_8168358588491690792, fluidb_string<9> __sym__0__3492822237187130715, unsigned __sym__0___45_5327203452744863771, unsigned __sym__0___45_3191486480184313013, fluidb_string<7> __sym__0__8273133299368630830, unsigned __sym__0__5374892212332880793, unsigned __sym__0__4657424385215848526, unsigned __sym__0___45_3458973470967037338, unsigned __sym__0___45_8815963362114542896, unsigned __sym__0___45_1032706391051161733, fluidb_string<15> __sym__0__2933689304969494962, fluidb_string<2> __sym__0__7834336576245077370, fluidb_string<2> __sym__0___45_4475634397818667505, fluidb_string<2> __sym__0__3226357619497947495, fluidb_string<2> __sym__0__2465797272458765197) : sym__0___45_5182087624132196707(__sym__0___45_5182087624132196707), sym__0___45_1125733209087237322(__sym__0___45_1125733209087237322), sym__0___45_4972797425225002076(__sym__0___45_4972797425225002076), sym__0__2318854370595574362(__sym__0__2318854370595574362), sym__0___45_4041623608412761896(__sym__0___45_4041623608412761896), sym__0___45_3735786698084808711(__sym__0___45_3735786698084808711), sym__0__7384252796126420662(__sym__0__7384252796126420662), sym__0___45_2043653876463228102(__sym__0___45_2043653876463228102), sym__0__2838774847530135056(__sym__0__2838774847530135056), sym__0__6525564334754176696(__sym__0__6525564334754176696), sym__0__8499987716798155358(__sym__0__8499987716798155358), sym__0___45_6915660615674064043(__sym__0___45_6915660615674064043), sym__0___45_8326786075612268884(__sym__0___45_8326786075612268884), sym__0___45_6075665051587255339(__sym__0___45_6075665051587255339), sym__0___45_1350382245670239329(__sym__0___45_1350382245670239329), sym__0__2109402343114077240(__sym__0__2109402343114077240), sym__0__6215935326665719112(__sym__0__6215935326665719112), sym__0__2820217628767326010(__sym__0__2820217628767326010), sym__0__5445672276260318348(__sym__0__5445672276260318348), sym__0__3697656138623911458(__sym__0__3697656138623911458), sym__0__1653175989217608742(__sym__0__1653175989217608742), sym__0___45_3743776918383637103(__sym__0___45_3743776918383637103), sym__0__2919710110324225859(__sym__0__2919710110324225859), sym__0__1749379276187346475(__sym__0__1749379276187346475), sym__0___45_4706300880382947898(__sym__0___45_4706300880382947898), sym__0___45_8488664643470695338(__sym__0___45_8488664643470695338), sym__0___45_8168358588491690792(__sym__0___45_8168358588491690792), sym__0__3492822237187130715(__sym__0__3492822237187130715), sym__0___45_5327203452744863771(__sym__0___45_5327203452744863771), sym__0___45_3191486480184313013(__sym__0___45_3191486480184313013), sym__0__8273133299368630830(__sym__0__8273133299368630830), sym__0__5374892212332880793(__sym__0__5374892212332880793), sym__0__4657424385215848526(__sym__0__4657424385215848526), sym__0___45_3458973470967037338(__sym__0___45_3458973470967037338), sym__0___45_8815963362114542896(__sym__0___45_8815963362114542896), sym__0___45_1032706391051161733(__sym__0___45_1032706391051161733), sym__0__2933689304969494962(__sym__0__2933689304969494962), sym__0__7834336576245077370(__sym__0__7834336576245077370), sym__0___45_4475634397818667505(__sym__0___45_4475634397818667505), sym__0__3226357619497947495(__sym__0__3226357619497947495), sym__0__2465797272458765197(__sym__0__2465797272458765197)
  {
  }
  Record11() 
  {
  }
  std::string show() const{
    std::stringstream o;
    o << sym__0___45_5182087624132196707 << " | " << arrToString(sym__0___45_1125733209087237322) << " | " << arrToString(sym__0___45_4972797425225002076) << " | " << arrToString(sym__0__2318854370595574362) << " | " << arrToString(sym__0___45_4041623608412761896) << " | " << arrToString(sym__0___45_3735786698084808711) << " | " << arrToString(sym__0__7384252796126420662) << " | " << sym__0___45_2043653876463228102 << " | " << sym__0__2838774847530135056 << " | " << sym__0__6525564334754176696 << " | " << sym__0__8499987716798155358 << " | " << sym__0___45_6915660615674064043 << " | " << sym__0___45_8326786075612268884 << " | " << arrToString(sym__0___45_6075665051587255339) << " | " << sym__0___45_1350382245670239329 << " | " << arrToString(sym__0__2109402343114077240) << " | " << sym__0__6215935326665719112 << " | " << sym__0__2820217628767326010 << " | " << sym__0__5445672276260318348 << " | " << sym__0__3697656138623911458 << " | " << sym__0__1653175989217608742 << " | " << sym__0___45_3743776918383637103 << " | " << sym__0__2919710110324225859 << " | " << arrToString(sym__0__1749379276187346475) << " | " << sym__0___45_4706300880382947898 << " | " << arrToString(sym__0___45_8488664643470695338) << " | " << arrToString(sym__0___45_8168358588491690792) << " | " << arrToString(sym__0__3492822237187130715) << " | " << sym__0___45_5327203452744863771 << " | " << sym__0___45_3191486480184313013 << " | " << arrToString(sym__0__8273133299368630830) << " | " << sym__0__5374892212332880793 << " | " << sym__0__4657424385215848526 << " | " << sym__0___45_3458973470967037338 << " | " << sym__0___45_8815963362114542896 << " | " << sym__0___45_1032706391051161733 << " | " << arrToString(sym__0__2933689304969494962) << " | " << arrToString(sym__0__7834336576245077370) << " | " << arrToString(sym__0___45_4475634397818667505) << " | " << arrToString(sym__0__3226357619497947495) << " | " << arrToString(sym__0__2465797272458765197);
    return o.str();
  }
  bool operator <(const Record11& otherRec) const{
    return (otherRec.sym__0___45_5182087624132196707 < sym__0___45_5182087624132196707 && (otherRec.sym__0___45_1125733209087237322 < sym__0___45_1125733209087237322 && (otherRec.sym__0___45_4972797425225002076 < sym__0___45_4972797425225002076 && (otherRec.sym__0__2318854370595574362 < sym__0__2318854370595574362 && (otherRec.sym__0___45_4041623608412761896 < sym__0___45_4041623608412761896 && (otherRec.sym__0___45_3735786698084808711 < sym__0___45_3735786698084808711 && (otherRec.sym__0__7384252796126420662 < sym__0__7384252796126420662 && (otherRec.sym__0___45_2043653876463228102 < sym__0___45_2043653876463228102 && (otherRec.sym__0__2838774847530135056 < sym__0__2838774847530135056 && (otherRec.sym__0__6525564334754176696 < sym__0__6525564334754176696 && (otherRec.sym__0__8499987716798155358 < sym__0__8499987716798155358 && (otherRec.sym__0___45_6915660615674064043 < sym__0___45_6915660615674064043 && (otherRec.sym__0___45_8326786075612268884 < sym__0___45_8326786075612268884 && (otherRec.sym__0___45_6075665051587255339 < sym__0___45_6075665051587255339 && (otherRec.sym__0___45_1350382245670239329 < sym__0___45_1350382245670239329 && (otherRec.sym__0__2109402343114077240 < sym__0__2109402343114077240 && (otherRec.sym__0__6215935326665719112 < sym__0__6215935326665719112 && (otherRec.sym__0__2820217628767326010 < sym__0__2820217628767326010 && (otherRec.sym__0__5445672276260318348 < sym__0__5445672276260318348 && (otherRec.sym__0__3697656138623911458 < sym__0__3697656138623911458 && (otherRec.sym__0__1653175989217608742 < sym__0__1653175989217608742 && (otherRec.sym__0___45_3743776918383637103 < sym__0___45_3743776918383637103 && (otherRec.sym__0__2919710110324225859 < sym__0__2919710110324225859 && (otherRec.sym__0__1749379276187346475 < sym__0__1749379276187346475 && (otherRec.sym__0___45_4706300880382947898 < sym__0___45_4706300880382947898 && (otherRec.sym__0___45_8488664643470695338 < sym__0___45_8488664643470695338 && (otherRec.sym__0___45_8168358588491690792 < sym__0___45_8168358588491690792 && (otherRec.sym__0__3492822237187130715 < sym__0__3492822237187130715 && (otherRec.sym__0___45_5327203452744863771 < sym__0___45_5327203452744863771 && (otherRec.sym__0___45_3191486480184313013 < sym__0___45_3191486480184313013 && (otherRec.sym__0__8273133299368630830 < sym__0__8273133299368630830 && (otherRec.sym__0__5374892212332880793 < sym__0__5374892212332880793 && (otherRec.sym__0__4657424385215848526 < sym__0__4657424385215848526 && (otherRec.sym__0___45_3458973470967037338 < sym__0___45_3458973470967037338 && (otherRec.sym__0___45_8815963362114542896 < sym__0___45_8815963362114542896 && (otherRec.sym__0___45_1032706391051161733 < sym__0___45_1032706391051161733 && (otherRec.sym__0__2933689304969494962 < sym__0__2933689304969494962 && (otherRec.sym__0__7834336576245077370 < sym__0__7834336576245077370 && (otherRec.sym__0___45_4475634397818667505 < sym__0___45_4475634397818667505 && (otherRec.sym__0__3226357619497947495 < sym__0__3226357619497947495 && otherRec.sym__0__2465797272458765197 < sym__0__2465797272458765197))))))))))))))))))))))))))))))))))))))));
  }
  bool operator ==(const Record11& otherRec) const{
    return (otherRec.sym__0___45_5182087624132196707 == sym__0___45_5182087624132196707 && (otherRec.sym__0___45_1125733209087237322 == sym__0___45_1125733209087237322 && (otherRec.sym__0___45_4972797425225002076 == sym__0___45_4972797425225002076 && (otherRec.sym__0__2318854370595574362 == sym__0__2318854370595574362 && (otherRec.sym__0___45_4041623608412761896 == sym__0___45_4041623608412761896 && (otherRec.sym__0___45_3735786698084808711 == sym__0___45_3735786698084808711 && (otherRec.sym__0__7384252796126420662 == sym__0__7384252796126420662 && (otherRec.sym__0___45_2043653876463228102 == sym__0___45_2043653876463228102 && (otherRec.sym__0__2838774847530135056 == sym__0__2838774847530135056 && (otherRec.sym__0__6525564334754176696 == sym__0__6525564334754176696 && (otherRec.sym__0__8499987716798155358 == sym__0__8499987716798155358 && (otherRec.sym__0___45_6915660615674064043 == sym__0___45_6915660615674064043 && (otherRec.sym__0___45_8326786075612268884 == sym__0___45_8326786075612268884 && (otherRec.sym__0___45_6075665051587255339 == sym__0___45_6075665051587255339 && (otherRec.sym__0___45_1350382245670239329 == sym__0___45_1350382245670239329 && (otherRec.sym__0__2109402343114077240 == sym__0__2109402343114077240 && (otherRec.sym__0__6215935326665719112 == sym__0__6215935326665719112 && (otherRec.sym__0__2820217628767326010 == sym__0__2820217628767326010 && (otherRec.sym__0__5445672276260318348 == sym__0__5445672276260318348 && (otherRec.sym__0__3697656138623911458 == sym__0__3697656138623911458 && (otherRec.sym__0__1653175989217608742 == sym__0__1653175989217608742 && (otherRec.sym__0___45_3743776918383637103 == sym__0___45_3743776918383637103 && (otherRec.sym__0__2919710110324225859 == sym__0__2919710110324225859 && (otherRec.sym__0__1749379276187346475 == sym__0__1749379276187346475 && (otherRec.sym__0___45_4706300880382947898 == sym__0___45_4706300880382947898 && (otherRec.sym__0___45_8488664643470695338 == sym__0___45_8488664643470695338 && (otherRec.sym__0___45_8168358588491690792 == sym__0___45_8168358588491690792 && (otherRec.sym__0__3492822237187130715 == sym__0__3492822237187130715 && (otherRec.sym__0___45_5327203452744863771 == sym__0___45_5327203452744863771 && (otherRec.sym__0___45_3191486480184313013 == sym__0___45_3191486480184313013 && (otherRec.sym__0__8273133299368630830 == sym__0__8273133299368630830 && (otherRec.sym__0__5374892212332880793 == sym__0__5374892212332880793 && (otherRec.sym__0__4657424385215848526 == sym__0__4657424385215848526 && (otherRec.sym__0___45_3458973470967037338 == sym__0___45_3458973470967037338 && (otherRec.sym__0___45_8815963362114542896 == sym__0___45_8815963362114542896 && (otherRec.sym__0___45_1032706391051161733 == sym__0___45_1032706391051161733 && (otherRec.sym__0__2933689304969494962 == sym__0__2933689304969494962 && (otherRec.sym__0__7834336576245077370 == sym__0__7834336576245077370 && (otherRec.sym__0___45_4475634397818667505 == sym__0___45_4475634397818667505 && (otherRec.sym__0__3226357619497947495 == sym__0__3226357619497947495 && otherRec.sym__0__2465797272458765197 == sym__0__2465797272458765197))))))))))))))))))))))))))))))))))))))));
  }
  bool operator !=(const Record11& otherRec) const{
    return (otherRec.sym__0___45_5182087624132196707 != sym__0___45_5182087624132196707 || (otherRec.sym__0___45_1125733209087237322 != sym__0___45_1125733209087237322 || (otherRec.sym__0___45_4972797425225002076 != sym__0___45_4972797425225002076 || (otherRec.sym__0__2318854370595574362 != sym__0__2318854370595574362 || (otherRec.sym__0___45_4041623608412761896 != sym__0___45_4041623608412761896 || (otherRec.sym__0___45_3735786698084808711 != sym__0___45_3735786698084808711 || (otherRec.sym__0__7384252796126420662 != sym__0__7384252796126420662 || (otherRec.sym__0___45_2043653876463228102 != sym__0___45_2043653876463228102 || (otherRec.sym__0__2838774847530135056 != sym__0__2838774847530135056 || (otherRec.sym__0__6525564334754176696 != sym__0__6525564334754176696 || (otherRec.sym__0__8499987716798155358 != sym__0__8499987716798155358 || (otherRec.sym__0___45_6915660615674064043 != sym__0___45_6915660615674064043 || (otherRec.sym__0___45_8326786075612268884 != sym__0___45_8326786075612268884 || (otherRec.sym__0___45_6075665051587255339 != sym__0___45_6075665051587255339 || (otherRec.sym__0___45_1350382245670239329 != sym__0___45_1350382245670239329 || (otherRec.sym__0__2109402343114077240 != sym__0__2109402343114077240 || (otherRec.sym__0__6215935326665719112 != sym__0__6215935326665719112 || (otherRec.sym__0__2820217628767326010 != sym__0__2820217628767326010 || (otherRec.sym__0__5445672276260318348 != sym__0__5445672276260318348 || (otherRec.sym__0__3697656138623911458 != sym__0__3697656138623911458 || (otherRec.sym__0__1653175989217608742 != sym__0__1653175989217608742 || (otherRec.sym__0___45_3743776918383637103 != sym__0___45_3743776918383637103 || (otherRec.sym__0__2919710110324225859 != sym__0__2919710110324225859 || (otherRec.sym__0__1749379276187346475 != sym__0__1749379276187346475 || (otherRec.sym__0___45_4706300880382947898 != sym__0___45_4706300880382947898 || (otherRec.sym__0___45_8488664643470695338 != sym__0___45_8488664643470695338 || (otherRec.sym__0___45_8168358588491690792 != sym__0___45_8168358588491690792 || (otherRec.sym__0__3492822237187130715 != sym__0__3492822237187130715 || (otherRec.sym__0___45_5327203452744863771 != sym__0___45_5327203452744863771 || (otherRec.sym__0___45_3191486480184313013 != sym__0___45_3191486480184313013 || (otherRec.sym__0__8273133299368630830 != sym__0__8273133299368630830 || (otherRec.sym__0__5374892212332880793 != sym__0__5374892212332880793 || (otherRec.sym__0__4657424385215848526 != sym__0__4657424385215848526 || (otherRec.sym__0___45_3458973470967037338 != sym__0___45_3458973470967037338 || (otherRec.sym__0___45_8815963362114542896 != sym__0___45_8815963362114542896 || (otherRec.sym__0___45_1032706391051161733 != sym__0___45_1032706391051161733 || (otherRec.sym__0__2933689304969494962 != sym__0__2933689304969494962 || (otherRec.sym__0__7834336576245077370 != sym__0__7834336576245077370 || (otherRec.sym__0___45_4475634397818667505 != sym__0___45_4475634397818667505 || (otherRec.sym__0__3226357619497947495 != sym__0__3226357619497947495 || otherRec.sym__0__2465797272458765197 != sym__0__2465797272458765197))))))))))))))))))))))))))))))))))))))));
  }
  unsigned sym__0___45_5182087624132196707;
  fluidb_string<25> sym__0___45_1125733209087237322;
  fluidb_string<40> sym__0___45_4972797425225002076;
  fluidb_string<16> sym__0__2318854370595574362;
  fluidb_string<16> sym__0___45_4041623608412761896;
  fluidb_string<13> sym__0___45_3735786698084808711;
  fluidb_string<15> sym__0__7384252796126420662;
  unsigned sym__0___45_2043653876463228102;
  int sym__0__2838774847530135056;
  unsigned sym__0__6525564334754176696;
  unsigned sym__0__8499987716798155358;
  unsigned sym__0___45_6915660615674064043;
  unsigned sym__0___45_8326786075612268884;
  fluidb_string<21> sym__0___45_6075665051587255339;
  unsigned sym__0___45_1350382245670239329;
  fluidb_string<10> sym__0__2109402343114077240;
  unsigned sym__0__6215935326665719112;
  double sym__0__2820217628767326010;
  unsigned sym__0__5445672276260318348;
  double sym__0__3697656138623911458;
  unsigned sym__0__1653175989217608742;
  unsigned sym__0___45_3743776918383637103;
  double sym__0__2919710110324225859;
  fluidb_string<13> sym__0__1749379276187346475;
  unsigned sym__0___45_4706300880382947898;
  fluidb_string<18> sym__0___45_8488664643470695338;
  fluidb_string<9> sym__0___45_8168358588491690792;
  fluidb_string<9> sym__0__3492822237187130715;
  unsigned sym__0___45_5327203452744863771;
  unsigned sym__0___45_3191486480184313013;
  fluidb_string<7> sym__0__8273133299368630830;
  unsigned sym__0__5374892212332880793;
  unsigned sym__0__4657424385215848526;
  unsigned sym__0___45_3458973470967037338;
  unsigned sym__0___45_8815963362114542896;
  unsigned sym__0___45_1032706391051161733;
  fluidb_string<15> sym__0__2933689304969494962;
  fluidb_string<2> sym__0__7834336576245077370;
  fluidb_string<2> sym__0___45_4475634397818667505;
  fluidb_string<2> sym__0__3226357619497947495;
  fluidb_string<2> sym__0__2465797272458765197;
 private:
};


class Record22 {
 public:
  Record22(unsigned __sym__0__5779451790266707509, unsigned __sym__0___45_7150856907437622963, fluidb_string<10> __sym__0___45_996409509835512161) : sym__0__5779451790266707509(__sym__0__5779451790266707509), sym__0___45_7150856907437622963(__sym__0___45_7150856907437622963), sym__0___45_996409509835512161(__sym__0___45_996409509835512161)
  {
  }
  Record22() 
  {
  }
  std::string show() const{
    std::stringstream o;
    o << sym__0__5779451790266707509 << " | " << sym__0___45_7150856907437622963 << " | " << arrToString(sym__0___45_996409509835512161);
    return o.str();
  }
  bool operator <(const Record22& otherRec) const{
    return (otherRec.sym__0__5779451790266707509 < sym__0__5779451790266707509 && (otherRec.sym__0___45_7150856907437622963 < sym__0___45_7150856907437622963 && otherRec.sym__0___45_996409509835512161 < sym__0___45_996409509835512161));
  }
  bool operator ==(const Record22& otherRec) const{
    return (otherRec.sym__0__5779451790266707509 == sym__0__5779451790266707509 && (otherRec.sym__0___45_7150856907437622963 == sym__0___45_7150856907437622963 && otherRec.sym__0___45_996409509835512161 == sym__0___45_996409509835512161));
  }
  bool operator !=(const Record22& otherRec) const{
    return (otherRec.sym__0__5779451790266707509 != sym__0__5779451790266707509 || (otherRec.sym__0___45_7150856907437622963 != sym__0___45_7150856907437622963 || otherRec.sym__0___45_996409509835512161 != sym__0___45_996409509835512161));
  }
  unsigned sym__0__5779451790266707509;
  unsigned sym__0___45_7150856907437622963;
  fluidb_string<10> sym__0___45_996409509835512161;
 private:
};


class Record1 {
 public:
  Record1(unsigned __sym__0__1700144450823265023, fluidb_string<25> __sym__0__642977477037249040, fluidb_string<40> __sym__0___45_4128377972278795822, fluidb_string<16> __sym__0___45_5088627304821687252, fluidb_string<16> __sym__0___45_4948625537612330786, fluidb_string<13> __sym__0___45_9194700948435084701, fluidb_string<15> __sym__0___45_2335925802980201584, unsigned __sym__0__8952961796666569484, int __sym__0___45_764958528451264714, unsigned __sym__0___45_1817156327375219010, unsigned __sym__0___45_2837638767689209768, unsigned __sym__0___45_2981394887932269865, unsigned __sym__0___45_3207638480786881318, fluidb_string<21> __sym__0___45_2706668038305292969, unsigned __sym__0___45_5698288034649371459, fluidb_string<10> __sym__0___45_4860327901106131906, unsigned __sym__0__4990602831923261550, double __sym__0__1941197998689785612, unsigned __sym__0__8920978217467339962, double __sym__0__2290947992840979092, unsigned __sym__0__7968803792053807648, unsigned __sym__0___45_648214588708582661, double __sym__0__5240005983315163865, fluidb_string<13> __sym__0__8676547963641831009, unsigned __sym__0__7098358135655077312, fluidb_string<18> __sym__0___45_3236172823121798352, fluidb_string<9> __sym__0__209296758379513054, fluidb_string<9> __sym__0__990102210371531505, unsigned __sym__0__6731021262741660999, unsigned __sym__0__43383544609224961, fluidb_string<7> __sym__0___45_1451536826369255544, unsigned __sym__0___45_3626731045154418301, unsigned __sym__0__6266038698953764136, unsigned __sym__0___45_3178257250902948896, unsigned __sym__0___45_1707432467122892938, unsigned __sym__0__6803837608073687569, fluidb_string<15> __sym__0__3019318186977723140, fluidb_string<2> __sym__0___45_3182244727465674548, fluidb_string<2> __sym__0__6970778392668530317, fluidb_string<2> __sym__0__1291675427782851845, fluidb_string<2> __sym__0___45_7095393819436573425) : sym__0__1700144450823265023(__sym__0__1700144450823265023), sym__0__642977477037249040(__sym__0__642977477037249040), sym__0___45_4128377972278795822(__sym__0___45_4128377972278795822), sym__0___45_5088627304821687252(__sym__0___45_5088627304821687252), sym__0___45_4948625537612330786(__sym__0___45_4948625537612330786), sym__0___45_9194700948435084701(__sym__0___45_9194700948435084701), sym__0___45_2335925802980201584(__sym__0___45_2335925802980201584), sym__0__8952961796666569484(__sym__0__8952961796666569484), sym__0___45_764958528451264714(__sym__0___45_764958528451264714), sym__0___45_1817156327375219010(__sym__0___45_1817156327375219010), sym__0___45_2837638767689209768(__sym__0___45_2837638767689209768), sym__0___45_2981394887932269865(__sym__0___45_2981394887932269865), sym__0___45_3207638480786881318(__sym__0___45_3207638480786881318), sym__0___45_2706668038305292969(__sym__0___45_2706668038305292969), sym__0___45_5698288034649371459(__sym__0___45_5698288034649371459), sym__0___45_4860327901106131906(__sym__0___45_4860327901106131906), sym__0__4990602831923261550(__sym__0__4990602831923261550), sym__0__1941197998689785612(__sym__0__1941197998689785612), sym__0__8920978217467339962(__sym__0__8920978217467339962), sym__0__2290947992840979092(__sym__0__2290947992840979092), sym__0__7968803792053807648(__sym__0__7968803792053807648), sym__0___45_648214588708582661(__sym__0___45_648214588708582661), sym__0__5240005983315163865(__sym__0__5240005983315163865), sym__0__8676547963641831009(__sym__0__8676547963641831009), sym__0__7098358135655077312(__sym__0__7098358135655077312), sym__0___45_3236172823121798352(__sym__0___45_3236172823121798352), sym__0__209296758379513054(__sym__0__209296758379513054), sym__0__990102210371531505(__sym__0__990102210371531505), sym__0__6731021262741660999(__sym__0__6731021262741660999), sym__0__43383544609224961(__sym__0__43383544609224961), sym__0___45_1451536826369255544(__sym__0___45_1451536826369255544), sym__0___45_3626731045154418301(__sym__0___45_3626731045154418301), sym__0__6266038698953764136(__sym__0__6266038698953764136), sym__0___45_3178257250902948896(__sym__0___45_3178257250902948896), sym__0___45_1707432467122892938(__sym__0___45_1707432467122892938), sym__0__6803837608073687569(__sym__0__6803837608073687569), sym__0__3019318186977723140(__sym__0__3019318186977723140), sym__0___45_3182244727465674548(__sym__0___45_3182244727465674548), sym__0__6970778392668530317(__sym__0__6970778392668530317), sym__0__1291675427782851845(__sym__0__1291675427782851845), sym__0___45_7095393819436573425(__sym__0___45_7095393819436573425)
  {
  }
  Record1() 
  {
  }
  std::string show() const{
    std::stringstream o;
    o << sym__0__1700144450823265023 << " | " << arrToString(sym__0__642977477037249040) << " | " << arrToString(sym__0___45_4128377972278795822) << " | " << arrToString(sym__0___45_5088627304821687252) << " | " << arrToString(sym__0___45_4948625537612330786) << " | " << arrToString(sym__0___45_9194700948435084701) << " | " << arrToString(sym__0___45_2335925802980201584) << " | " << sym__0__8952961796666569484 << " | " << sym__0___45_764958528451264714 << " | " << sym__0___45_1817156327375219010 << " | " << sym__0___45_2837638767689209768 << " | " << sym__0___45_2981394887932269865 << " | " << sym__0___45_3207638480786881318 << " | " << arrToString(sym__0___45_2706668038305292969) << " | " << sym__0___45_5698288034649371459 << " | " << arrToString(sym__0___45_4860327901106131906) << " | " << sym__0__4990602831923261550 << " | " << sym__0__1941197998689785612 << " | " << sym__0__8920978217467339962 << " | " << sym__0__2290947992840979092 << " | " << sym__0__7968803792053807648 << " | " << sym__0___45_648214588708582661 << " | " << sym__0__5240005983315163865 << " | " << arrToString(sym__0__8676547963641831009) << " | " << sym__0__7098358135655077312 << " | " << arrToString(sym__0___45_3236172823121798352) << " | " << arrToString(sym__0__209296758379513054) << " | " << arrToString(sym__0__990102210371531505) << " | " << sym__0__6731021262741660999 << " | " << sym__0__43383544609224961 << " | " << arrToString(sym__0___45_1451536826369255544) << " | " << sym__0___45_3626731045154418301 << " | " << sym__0__6266038698953764136 << " | " << sym__0___45_3178257250902948896 << " | " << sym__0___45_1707432467122892938 << " | " << sym__0__6803837608073687569 << " | " << arrToString(sym__0__3019318186977723140) << " | " << arrToString(sym__0___45_3182244727465674548) << " | " << arrToString(sym__0__6970778392668530317) << " | " << arrToString(sym__0__1291675427782851845) << " | " << arrToString(sym__0___45_7095393819436573425);
    return o.str();
  }
  bool operator <(const Record1& otherRec) const{
    return (otherRec.sym__0__1700144450823265023 < sym__0__1700144450823265023 && (otherRec.sym__0__642977477037249040 < sym__0__642977477037249040 && (otherRec.sym__0___45_4128377972278795822 < sym__0___45_4128377972278795822 && (otherRec.sym__0___45_5088627304821687252 < sym__0___45_5088627304821687252 && (otherRec.sym__0___45_4948625537612330786 < sym__0___45_4948625537612330786 && (otherRec.sym__0___45_9194700948435084701 < sym__0___45_9194700948435084701 && (otherRec.sym__0___45_2335925802980201584 < sym__0___45_2335925802980201584 && (otherRec.sym__0__8952961796666569484 < sym__0__8952961796666569484 && (otherRec.sym__0___45_764958528451264714 < sym__0___45_764958528451264714 && (otherRec.sym__0___45_1817156327375219010 < sym__0___45_1817156327375219010 && (otherRec.sym__0___45_2837638767689209768 < sym__0___45_2837638767689209768 && (otherRec.sym__0___45_2981394887932269865 < sym__0___45_2981394887932269865 && (otherRec.sym__0___45_3207638480786881318 < sym__0___45_3207638480786881318 && (otherRec.sym__0___45_2706668038305292969 < sym__0___45_2706668038305292969 && (otherRec.sym__0___45_5698288034649371459 < sym__0___45_5698288034649371459 && (otherRec.sym__0___45_4860327901106131906 < sym__0___45_4860327901106131906 && (otherRec.sym__0__4990602831923261550 < sym__0__4990602831923261550 && (otherRec.sym__0__1941197998689785612 < sym__0__1941197998689785612 && (otherRec.sym__0__8920978217467339962 < sym__0__8920978217467339962 && (otherRec.sym__0__2290947992840979092 < sym__0__2290947992840979092 && (otherRec.sym__0__7968803792053807648 < sym__0__7968803792053807648 && (otherRec.sym__0___45_648214588708582661 < sym__0___45_648214588708582661 && (otherRec.sym__0__5240005983315163865 < sym__0__5240005983315163865 && (otherRec.sym__0__8676547963641831009 < sym__0__8676547963641831009 && (otherRec.sym__0__7098358135655077312 < sym__0__7098358135655077312 && (otherRec.sym__0___45_3236172823121798352 < sym__0___45_3236172823121798352 && (otherRec.sym__0__209296758379513054 < sym__0__209296758379513054 && (otherRec.sym__0__990102210371531505 < sym__0__990102210371531505 && (otherRec.sym__0__6731021262741660999 < sym__0__6731021262741660999 && (otherRec.sym__0__43383544609224961 < sym__0__43383544609224961 && (otherRec.sym__0___45_1451536826369255544 < sym__0___45_1451536826369255544 && (otherRec.sym__0___45_3626731045154418301 < sym__0___45_3626731045154418301 && (otherRec.sym__0__6266038698953764136 < sym__0__6266038698953764136 && (otherRec.sym__0___45_3178257250902948896 < sym__0___45_3178257250902948896 && (otherRec.sym__0___45_1707432467122892938 < sym__0___45_1707432467122892938 && (otherRec.sym__0__6803837608073687569 < sym__0__6803837608073687569 && (otherRec.sym__0__3019318186977723140 < sym__0__3019318186977723140 && (otherRec.sym__0___45_3182244727465674548 < sym__0___45_3182244727465674548 && (otherRec.sym__0__6970778392668530317 < sym__0__6970778392668530317 && (otherRec.sym__0__1291675427782851845 < sym__0__1291675427782851845 && otherRec.sym__0___45_7095393819436573425 < sym__0___45_7095393819436573425))))))))))))))))))))))))))))))))))))))));
  }
  bool operator ==(const Record1& otherRec) const{
    return (otherRec.sym__0__1700144450823265023 == sym__0__1700144450823265023 && (otherRec.sym__0__642977477037249040 == sym__0__642977477037249040 && (otherRec.sym__0___45_4128377972278795822 == sym__0___45_4128377972278795822 && (otherRec.sym__0___45_5088627304821687252 == sym__0___45_5088627304821687252 && (otherRec.sym__0___45_4948625537612330786 == sym__0___45_4948625537612330786 && (otherRec.sym__0___45_9194700948435084701 == sym__0___45_9194700948435084701 && (otherRec.sym__0___45_2335925802980201584 == sym__0___45_2335925802980201584 && (otherRec.sym__0__8952961796666569484 == sym__0__8952961796666569484 && (otherRec.sym__0___45_764958528451264714 == sym__0___45_764958528451264714 && (otherRec.sym__0___45_1817156327375219010 == sym__0___45_1817156327375219010 && (otherRec.sym__0___45_2837638767689209768 == sym__0___45_2837638767689209768 && (otherRec.sym__0___45_2981394887932269865 == sym__0___45_2981394887932269865 && (otherRec.sym__0___45_3207638480786881318 == sym__0___45_3207638480786881318 && (otherRec.sym__0___45_2706668038305292969 == sym__0___45_2706668038305292969 && (otherRec.sym__0___45_5698288034649371459 == sym__0___45_5698288034649371459 && (otherRec.sym__0___45_4860327901106131906 == sym__0___45_4860327901106131906 && (otherRec.sym__0__4990602831923261550 == sym__0__4990602831923261550 && (otherRec.sym__0__1941197998689785612 == sym__0__1941197998689785612 && (otherRec.sym__0__8920978217467339962 == sym__0__8920978217467339962 && (otherRec.sym__0__2290947992840979092 == sym__0__2290947992840979092 && (otherRec.sym__0__7968803792053807648 == sym__0__7968803792053807648 && (otherRec.sym__0___45_648214588708582661 == sym__0___45_648214588708582661 && (otherRec.sym__0__5240005983315163865 == sym__0__5240005983315163865 && (otherRec.sym__0__8676547963641831009 == sym__0__8676547963641831009 && (otherRec.sym__0__7098358135655077312 == sym__0__7098358135655077312 && (otherRec.sym__0___45_3236172823121798352 == sym__0___45_3236172823121798352 && (otherRec.sym__0__209296758379513054 == sym__0__209296758379513054 && (otherRec.sym__0__990102210371531505 == sym__0__990102210371531505 && (otherRec.sym__0__6731021262741660999 == sym__0__6731021262741660999 && (otherRec.sym__0__43383544609224961 == sym__0__43383544609224961 && (otherRec.sym__0___45_1451536826369255544 == sym__0___45_1451536826369255544 && (otherRec.sym__0___45_3626731045154418301 == sym__0___45_3626731045154418301 && (otherRec.sym__0__6266038698953764136 == sym__0__6266038698953764136 && (otherRec.sym__0___45_3178257250902948896 == sym__0___45_3178257250902948896 && (otherRec.sym__0___45_1707432467122892938 == sym__0___45_1707432467122892938 && (otherRec.sym__0__6803837608073687569 == sym__0__6803837608073687569 && (otherRec.sym__0__3019318186977723140 == sym__0__3019318186977723140 && (otherRec.sym__0___45_3182244727465674548 == sym__0___45_3182244727465674548 && (otherRec.sym__0__6970778392668530317 == sym__0__6970778392668530317 && (otherRec.sym__0__1291675427782851845 == sym__0__1291675427782851845 && otherRec.sym__0___45_7095393819436573425 == sym__0___45_7095393819436573425))))))))))))))))))))))))))))))))))))))));
  }
  bool operator !=(const Record1& otherRec) const{
    return (otherRec.sym__0__1700144450823265023 != sym__0__1700144450823265023 || (otherRec.sym__0__642977477037249040 != sym__0__642977477037249040 || (otherRec.sym__0___45_4128377972278795822 != sym__0___45_4128377972278795822 || (otherRec.sym__0___45_5088627304821687252 != sym__0___45_5088627304821687252 || (otherRec.sym__0___45_4948625537612330786 != sym__0___45_4948625537612330786 || (otherRec.sym__0___45_9194700948435084701 != sym__0___45_9194700948435084701 || (otherRec.sym__0___45_2335925802980201584 != sym__0___45_2335925802980201584 || (otherRec.sym__0__8952961796666569484 != sym__0__8952961796666569484 || (otherRec.sym__0___45_764958528451264714 != sym__0___45_764958528451264714 || (otherRec.sym__0___45_1817156327375219010 != sym__0___45_1817156327375219010 || (otherRec.sym__0___45_2837638767689209768 != sym__0___45_2837638767689209768 || (otherRec.sym__0___45_2981394887932269865 != sym__0___45_2981394887932269865 || (otherRec.sym__0___45_3207638480786881318 != sym__0___45_3207638480786881318 || (otherRec.sym__0___45_2706668038305292969 != sym__0___45_2706668038305292969 || (otherRec.sym__0___45_5698288034649371459 != sym__0___45_5698288034649371459 || (otherRec.sym__0___45_4860327901106131906 != sym__0___45_4860327901106131906 || (otherRec.sym__0__4990602831923261550 != sym__0__4990602831923261550 || (otherRec.sym__0__1941197998689785612 != sym__0__1941197998689785612 || (otherRec.sym__0__8920978217467339962 != sym__0__8920978217467339962 || (otherRec.sym__0__2290947992840979092 != sym__0__2290947992840979092 || (otherRec.sym__0__7968803792053807648 != sym__0__7968803792053807648 || (otherRec.sym__0___45_648214588708582661 != sym__0___45_648214588708582661 || (otherRec.sym__0__5240005983315163865 != sym__0__5240005983315163865 || (otherRec.sym__0__8676547963641831009 != sym__0__8676547963641831009 || (otherRec.sym__0__7098358135655077312 != sym__0__7098358135655077312 || (otherRec.sym__0___45_3236172823121798352 != sym__0___45_3236172823121798352 || (otherRec.sym__0__209296758379513054 != sym__0__209296758379513054 || (otherRec.sym__0__990102210371531505 != sym__0__990102210371531505 || (otherRec.sym__0__6731021262741660999 != sym__0__6731021262741660999 || (otherRec.sym__0__43383544609224961 != sym__0__43383544609224961 || (otherRec.sym__0___45_1451536826369255544 != sym__0___45_1451536826369255544 || (otherRec.sym__0___45_3626731045154418301 != sym__0___45_3626731045154418301 || (otherRec.sym__0__6266038698953764136 != sym__0__6266038698953764136 || (otherRec.sym__0___45_3178257250902948896 != sym__0___45_3178257250902948896 || (otherRec.sym__0___45_1707432467122892938 != sym__0___45_1707432467122892938 || (otherRec.sym__0__6803837608073687569 != sym__0__6803837608073687569 || (otherRec.sym__0__3019318186977723140 != sym__0__3019318186977723140 || (otherRec.sym__0___45_3182244727465674548 != sym__0___45_3182244727465674548 || (otherRec.sym__0__6970778392668530317 != sym__0__6970778392668530317 || (otherRec.sym__0__1291675427782851845 != sym__0__1291675427782851845 || otherRec.sym__0___45_7095393819436573425 != sym__0___45_7095393819436573425))))))))))))))))))))))))))))))))))))))));
  }
  unsigned sym__0__1700144450823265023;
  fluidb_string<25> sym__0__642977477037249040;
  fluidb_string<40> sym__0___45_4128377972278795822;
  fluidb_string<16> sym__0___45_5088627304821687252;
  fluidb_string<16> sym__0___45_4948625537612330786;
  fluidb_string<13> sym__0___45_9194700948435084701;
  fluidb_string<15> sym__0___45_2335925802980201584;
  unsigned sym__0__8952961796666569484;
  int sym__0___45_764958528451264714;
  unsigned sym__0___45_1817156327375219010;
  unsigned sym__0___45_2837638767689209768;
  unsigned sym__0___45_2981394887932269865;
  unsigned sym__0___45_3207638480786881318;
  fluidb_string<21> sym__0___45_2706668038305292969;
  unsigned sym__0___45_5698288034649371459;
  fluidb_string<10> sym__0___45_4860327901106131906;
  unsigned sym__0__4990602831923261550;
  double sym__0__1941197998689785612;
  unsigned sym__0__8920978217467339962;
  double sym__0__2290947992840979092;
  unsigned sym__0__7968803792053807648;
  unsigned sym__0___45_648214588708582661;
  double sym__0__5240005983315163865;
  fluidb_string<13> sym__0__8676547963641831009;
  unsigned sym__0__7098358135655077312;
  fluidb_string<18> sym__0___45_3236172823121798352;
  fluidb_string<9> sym__0__209296758379513054;
  fluidb_string<9> sym__0__990102210371531505;
  unsigned sym__0__6731021262741660999;
  unsigned sym__0__43383544609224961;
  fluidb_string<7> sym__0___45_1451536826369255544;
  unsigned sym__0___45_3626731045154418301;
  unsigned sym__0__6266038698953764136;
  unsigned sym__0___45_3178257250902948896;
  unsigned sym__0___45_1707432467122892938;
  unsigned sym__0__6803837608073687569;
  fluidb_string<15> sym__0__3019318186977723140;
  fluidb_string<2> sym__0___45_3182244727465674548;
  fluidb_string<2> sym__0__6970778392668530317;
  fluidb_string<2> sym__0__1291675427782851845;
  fluidb_string<2> sym__0___45_7095393819436573425;
 private:
};


class Record7 {
 public:
  Record7(unsigned __sym__0__2102316481828394123, fluidb_string<25> __sym__0__1780257040091145452, fluidb_string<40> __sym__0__3109939911660640430, fluidb_string<16> __sym__0___45_2175199227983174320, fluidb_string<16> __sym__0__2274992661292194562, fluidb_string<13> __sym__0___45_52536403880094569, fluidb_string<15> __sym__0__8474116574285927276, unsigned __sym__0__1835503384076924528, int __sym__0__586412267723269786, unsigned __sym__0__1353367320182642978, unsigned __sym__0___45_6351222752813626636, unsigned __sym__0___45_805067702695824989, unsigned __sym__0__914509637812701046, fluidb_string<21> __sym__0__7895450651221174051, unsigned __sym__0__5942285589324576545, fluidb_string<10> __sym__0__3979382234526804898, unsigned __sym__0___45_6103522369909819246, double __sym__0__1873148039180761712, unsigned __sym__0__1430551526674366102, double __sym__0__1048818672001592248, unsigned __sym__0__5723353836447658492, unsigned __sym__0___45_2233273278156881105, double __sym__0___45_1120880788595637835, fluidb_string<13> __sym__0___45_6361490230660137987, unsigned __sym__0___45_7131249874638266788, fluidb_string<18> __sym__0__7265729621635359692, fluidb_string<9> __sym__0___45_2986035740159621374, fluidb_string<9> __sym__0__5081664509798388941, unsigned __sym__0___45_8518596434939314413, unsigned __sym__0__1988221653138390749, fluidb_string<7> __sym__0___45_8801377200944175068, unsigned __sym__0___45_4634183629139578121, unsigned __sym__0__806472603637564420, unsigned __sym__0__1725829484083430844, unsigned __sym__0___45_5279274827282678566, unsigned __sym__0___45_9129247388617675603, fluidb_string<15> __sym__0__1232225844204183080, fluidb_string<2> __sym__0__9184663680502119984, fluidb_string<2> __sym__0___45_9023997483659527503, fluidb_string<2> __sym__0___45_1026604631201554135, fluidb_string<2> __sym__0___45_7189754320372197989) : sym__0__2102316481828394123(__sym__0__2102316481828394123), sym__0__1780257040091145452(__sym__0__1780257040091145452), sym__0__3109939911660640430(__sym__0__3109939911660640430), sym__0___45_2175199227983174320(__sym__0___45_2175199227983174320), sym__0__2274992661292194562(__sym__0__2274992661292194562), sym__0___45_52536403880094569(__sym__0___45_52536403880094569), sym__0__8474116574285927276(__sym__0__8474116574285927276), sym__0__1835503384076924528(__sym__0__1835503384076924528), sym__0__586412267723269786(__sym__0__586412267723269786), sym__0__1353367320182642978(__sym__0__1353367320182642978), sym__0___45_6351222752813626636(__sym__0___45_6351222752813626636), sym__0___45_805067702695824989(__sym__0___45_805067702695824989), sym__0__914509637812701046(__sym__0__914509637812701046), sym__0__7895450651221174051(__sym__0__7895450651221174051), sym__0__5942285589324576545(__sym__0__5942285589324576545), sym__0__3979382234526804898(__sym__0__3979382234526804898), sym__0___45_6103522369909819246(__sym__0___45_6103522369909819246), sym__0__1873148039180761712(__sym__0__1873148039180761712), sym__0__1430551526674366102(__sym__0__1430551526674366102), sym__0__1048818672001592248(__sym__0__1048818672001592248), sym__0__5723353836447658492(__sym__0__5723353836447658492), sym__0___45_2233273278156881105(__sym__0___45_2233273278156881105), sym__0___45_1120880788595637835(__sym__0___45_1120880788595637835), sym__0___45_6361490230660137987(__sym__0___45_6361490230660137987), sym__0___45_7131249874638266788(__sym__0___45_7131249874638266788), sym__0__7265729621635359692(__sym__0__7265729621635359692), sym__0___45_2986035740159621374(__sym__0___45_2986035740159621374), sym__0__5081664509798388941(__sym__0__5081664509798388941), sym__0___45_8518596434939314413(__sym__0___45_8518596434939314413), sym__0__1988221653138390749(__sym__0__1988221653138390749), sym__0___45_8801377200944175068(__sym__0___45_8801377200944175068), sym__0___45_4634183629139578121(__sym__0___45_4634183629139578121), sym__0__806472603637564420(__sym__0__806472603637564420), sym__0__1725829484083430844(__sym__0__1725829484083430844), sym__0___45_5279274827282678566(__sym__0___45_5279274827282678566), sym__0___45_9129247388617675603(__sym__0___45_9129247388617675603), sym__0__1232225844204183080(__sym__0__1232225844204183080), sym__0__9184663680502119984(__sym__0__9184663680502119984), sym__0___45_9023997483659527503(__sym__0___45_9023997483659527503), sym__0___45_1026604631201554135(__sym__0___45_1026604631201554135), sym__0___45_7189754320372197989(__sym__0___45_7189754320372197989)
  {
  }
  Record7() 
  {
  }
  std::string show() const{
    std::stringstream o;
    o << sym__0__2102316481828394123 << " | " << arrToString(sym__0__1780257040091145452) << " | " << arrToString(sym__0__3109939911660640430) << " | " << arrToString(sym__0___45_2175199227983174320) << " | " << arrToString(sym__0__2274992661292194562) << " | " << arrToString(sym__0___45_52536403880094569) << " | " << arrToString(sym__0__8474116574285927276) << " | " << sym__0__1835503384076924528 << " | " << sym__0__586412267723269786 << " | " << sym__0__1353367320182642978 << " | " << sym__0___45_6351222752813626636 << " | " << sym__0___45_805067702695824989 << " | " << sym__0__914509637812701046 << " | " << arrToString(sym__0__7895450651221174051) << " | " << sym__0__5942285589324576545 << " | " << arrToString(sym__0__3979382234526804898) << " | " << sym__0___45_6103522369909819246 << " | " << sym__0__1873148039180761712 << " | " << sym__0__1430551526674366102 << " | " << sym__0__1048818672001592248 << " | " << sym__0__5723353836447658492 << " | " << sym__0___45_2233273278156881105 << " | " << sym__0___45_1120880788595637835 << " | " << arrToString(sym__0___45_6361490230660137987) << " | " << sym__0___45_7131249874638266788 << " | " << arrToString(sym__0__7265729621635359692) << " | " << arrToString(sym__0___45_2986035740159621374) << " | " << arrToString(sym__0__5081664509798388941) << " | " << sym__0___45_8518596434939314413 << " | " << sym__0__1988221653138390749 << " | " << arrToString(sym__0___45_8801377200944175068) << " | " << sym__0___45_4634183629139578121 << " | " << sym__0__806472603637564420 << " | " << sym__0__1725829484083430844 << " | " << sym__0___45_5279274827282678566 << " | " << sym__0___45_9129247388617675603 << " | " << arrToString(sym__0__1232225844204183080) << " | " << arrToString(sym__0__9184663680502119984) << " | " << arrToString(sym__0___45_9023997483659527503) << " | " << arrToString(sym__0___45_1026604631201554135) << " | " << arrToString(sym__0___45_7189754320372197989);
    return o.str();
  }
  bool operator <(const Record7& otherRec) const{
    return (otherRec.sym__0__2102316481828394123 < sym__0__2102316481828394123 && (otherRec.sym__0__1780257040091145452 < sym__0__1780257040091145452 && (otherRec.sym__0__3109939911660640430 < sym__0__3109939911660640430 && (otherRec.sym__0___45_2175199227983174320 < sym__0___45_2175199227983174320 && (otherRec.sym__0__2274992661292194562 < sym__0__2274992661292194562 && (otherRec.sym__0___45_52536403880094569 < sym__0___45_52536403880094569 && (otherRec.sym__0__8474116574285927276 < sym__0__8474116574285927276 && (otherRec.sym__0__1835503384076924528 < sym__0__1835503384076924528 && (otherRec.sym__0__586412267723269786 < sym__0__586412267723269786 && (otherRec.sym__0__1353367320182642978 < sym__0__1353367320182642978 && (otherRec.sym__0___45_6351222752813626636 < sym__0___45_6351222752813626636 && (otherRec.sym__0___45_805067702695824989 < sym__0___45_805067702695824989 && (otherRec.sym__0__914509637812701046 < sym__0__914509637812701046 && (otherRec.sym__0__7895450651221174051 < sym__0__7895450651221174051 && (otherRec.sym__0__5942285589324576545 < sym__0__5942285589324576545 && (otherRec.sym__0__3979382234526804898 < sym__0__3979382234526804898 && (otherRec.sym__0___45_6103522369909819246 < sym__0___45_6103522369909819246 && (otherRec.sym__0__1873148039180761712 < sym__0__1873148039180761712 && (otherRec.sym__0__1430551526674366102 < sym__0__1430551526674366102 && (otherRec.sym__0__1048818672001592248 < sym__0__1048818672001592248 && (otherRec.sym__0__5723353836447658492 < sym__0__5723353836447658492 && (otherRec.sym__0___45_2233273278156881105 < sym__0___45_2233273278156881105 && (otherRec.sym__0___45_1120880788595637835 < sym__0___45_1120880788595637835 && (otherRec.sym__0___45_6361490230660137987 < sym__0___45_6361490230660137987 && (otherRec.sym__0___45_7131249874638266788 < sym__0___45_7131249874638266788 && (otherRec.sym__0__7265729621635359692 < sym__0__7265729621635359692 && (otherRec.sym__0___45_2986035740159621374 < sym__0___45_2986035740159621374 && (otherRec.sym__0__5081664509798388941 < sym__0__5081664509798388941 && (otherRec.sym__0___45_8518596434939314413 < sym__0___45_8518596434939314413 && (otherRec.sym__0__1988221653138390749 < sym__0__1988221653138390749 && (otherRec.sym__0___45_8801377200944175068 < sym__0___45_8801377200944175068 && (otherRec.sym__0___45_4634183629139578121 < sym__0___45_4634183629139578121 && (otherRec.sym__0__806472603637564420 < sym__0__806472603637564420 && (otherRec.sym__0__1725829484083430844 < sym__0__1725829484083430844 && (otherRec.sym__0___45_5279274827282678566 < sym__0___45_5279274827282678566 && (otherRec.sym__0___45_9129247388617675603 < sym__0___45_9129247388617675603 && (otherRec.sym__0__1232225844204183080 < sym__0__1232225844204183080 && (otherRec.sym__0__9184663680502119984 < sym__0__9184663680502119984 && (otherRec.sym__0___45_9023997483659527503 < sym__0___45_9023997483659527503 && (otherRec.sym__0___45_1026604631201554135 < sym__0___45_1026604631201554135 && otherRec.sym__0___45_7189754320372197989 < sym__0___45_7189754320372197989))))))))))))))))))))))))))))))))))))))));
  }
  bool operator ==(const Record7& otherRec) const{
    return (otherRec.sym__0__2102316481828394123 == sym__0__2102316481828394123 && (otherRec.sym__0__1780257040091145452 == sym__0__1780257040091145452 && (otherRec.sym__0__3109939911660640430 == sym__0__3109939911660640430 && (otherRec.sym__0___45_2175199227983174320 == sym__0___45_2175199227983174320 && (otherRec.sym__0__2274992661292194562 == sym__0__2274992661292194562 && (otherRec.sym__0___45_52536403880094569 == sym__0___45_52536403880094569 && (otherRec.sym__0__8474116574285927276 == sym__0__8474116574285927276 && (otherRec.sym__0__1835503384076924528 == sym__0__1835503384076924528 && (otherRec.sym__0__586412267723269786 == sym__0__586412267723269786 && (otherRec.sym__0__1353367320182642978 == sym__0__1353367320182642978 && (otherRec.sym__0___45_6351222752813626636 == sym__0___45_6351222752813626636 && (otherRec.sym__0___45_805067702695824989 == sym__0___45_805067702695824989 && (otherRec.sym__0__914509637812701046 == sym__0__914509637812701046 && (otherRec.sym__0__7895450651221174051 == sym__0__7895450651221174051 && (otherRec.sym__0__5942285589324576545 == sym__0__5942285589324576545 && (otherRec.sym__0__3979382234526804898 == sym__0__3979382234526804898 && (otherRec.sym__0___45_6103522369909819246 == sym__0___45_6103522369909819246 && (otherRec.sym__0__1873148039180761712 == sym__0__1873148039180761712 && (otherRec.sym__0__1430551526674366102 == sym__0__1430551526674366102 && (otherRec.sym__0__1048818672001592248 == sym__0__1048818672001592248 && (otherRec.sym__0__5723353836447658492 == sym__0__5723353836447658492 && (otherRec.sym__0___45_2233273278156881105 == sym__0___45_2233273278156881105 && (otherRec.sym__0___45_1120880788595637835 == sym__0___45_1120880788595637835 && (otherRec.sym__0___45_6361490230660137987 == sym__0___45_6361490230660137987 && (otherRec.sym__0___45_7131249874638266788 == sym__0___45_7131249874638266788 && (otherRec.sym__0__7265729621635359692 == sym__0__7265729621635359692 && (otherRec.sym__0___45_2986035740159621374 == sym__0___45_2986035740159621374 && (otherRec.sym__0__5081664509798388941 == sym__0__5081664509798388941 && (otherRec.sym__0___45_8518596434939314413 == sym__0___45_8518596434939314413 && (otherRec.sym__0__1988221653138390749 == sym__0__1988221653138390749 && (otherRec.sym__0___45_8801377200944175068 == sym__0___45_8801377200944175068 && (otherRec.sym__0___45_4634183629139578121 == sym__0___45_4634183629139578121 && (otherRec.sym__0__806472603637564420 == sym__0__806472603637564420 && (otherRec.sym__0__1725829484083430844 == sym__0__1725829484083430844 && (otherRec.sym__0___45_5279274827282678566 == sym__0___45_5279274827282678566 && (otherRec.sym__0___45_9129247388617675603 == sym__0___45_9129247388617675603 && (otherRec.sym__0__1232225844204183080 == sym__0__1232225844204183080 && (otherRec.sym__0__9184663680502119984 == sym__0__9184663680502119984 && (otherRec.sym__0___45_9023997483659527503 == sym__0___45_9023997483659527503 && (otherRec.sym__0___45_1026604631201554135 == sym__0___45_1026604631201554135 && otherRec.sym__0___45_7189754320372197989 == sym__0___45_7189754320372197989))))))))))))))))))))))))))))))))))))))));
  }
  bool operator !=(const Record7& otherRec) const{
    return (otherRec.sym__0__2102316481828394123 != sym__0__2102316481828394123 || (otherRec.sym__0__1780257040091145452 != sym__0__1780257040091145452 || (otherRec.sym__0__3109939911660640430 != sym__0__3109939911660640430 || (otherRec.sym__0___45_2175199227983174320 != sym__0___45_2175199227983174320 || (otherRec.sym__0__2274992661292194562 != sym__0__2274992661292194562 || (otherRec.sym__0___45_52536403880094569 != sym__0___45_52536403880094569 || (otherRec.sym__0__8474116574285927276 != sym__0__8474116574285927276 || (otherRec.sym__0__1835503384076924528 != sym__0__1835503384076924528 || (otherRec.sym__0__586412267723269786 != sym__0__586412267723269786 || (otherRec.sym__0__1353367320182642978 != sym__0__1353367320182642978 || (otherRec.sym__0___45_6351222752813626636 != sym__0___45_6351222752813626636 || (otherRec.sym__0___45_805067702695824989 != sym__0___45_805067702695824989 || (otherRec.sym__0__914509637812701046 != sym__0__914509637812701046 || (otherRec.sym__0__7895450651221174051 != sym__0__7895450651221174051 || (otherRec.sym__0__5942285589324576545 != sym__0__5942285589324576545 || (otherRec.sym__0__3979382234526804898 != sym__0__3979382234526804898 || (otherRec.sym__0___45_6103522369909819246 != sym__0___45_6103522369909819246 || (otherRec.sym__0__1873148039180761712 != sym__0__1873148039180761712 || (otherRec.sym__0__1430551526674366102 != sym__0__1430551526674366102 || (otherRec.sym__0__1048818672001592248 != sym__0__1048818672001592248 || (otherRec.sym__0__5723353836447658492 != sym__0__5723353836447658492 || (otherRec.sym__0___45_2233273278156881105 != sym__0___45_2233273278156881105 || (otherRec.sym__0___45_1120880788595637835 != sym__0___45_1120880788595637835 || (otherRec.sym__0___45_6361490230660137987 != sym__0___45_6361490230660137987 || (otherRec.sym__0___45_7131249874638266788 != sym__0___45_7131249874638266788 || (otherRec.sym__0__7265729621635359692 != sym__0__7265729621635359692 || (otherRec.sym__0___45_2986035740159621374 != sym__0___45_2986035740159621374 || (otherRec.sym__0__5081664509798388941 != sym__0__5081664509798388941 || (otherRec.sym__0___45_8518596434939314413 != sym__0___45_8518596434939314413 || (otherRec.sym__0__1988221653138390749 != sym__0__1988221653138390749 || (otherRec.sym__0___45_8801377200944175068 != sym__0___45_8801377200944175068 || (otherRec.sym__0___45_4634183629139578121 != sym__0___45_4634183629139578121 || (otherRec.sym__0__806472603637564420 != sym__0__806472603637564420 || (otherRec.sym__0__1725829484083430844 != sym__0__1725829484083430844 || (otherRec.sym__0___45_5279274827282678566 != sym__0___45_5279274827282678566 || (otherRec.sym__0___45_9129247388617675603 != sym__0___45_9129247388617675603 || (otherRec.sym__0__1232225844204183080 != sym__0__1232225844204183080 || (otherRec.sym__0__9184663680502119984 != sym__0__9184663680502119984 || (otherRec.sym__0___45_9023997483659527503 != sym__0___45_9023997483659527503 || (otherRec.sym__0___45_1026604631201554135 != sym__0___45_1026604631201554135 || otherRec.sym__0___45_7189754320372197989 != sym__0___45_7189754320372197989))))))))))))))))))))))))))))))))))))))));
  }
  unsigned sym__0__2102316481828394123;
  fluidb_string<25> sym__0__1780257040091145452;
  fluidb_string<40> sym__0__3109939911660640430;
  fluidb_string<16> sym__0___45_2175199227983174320;
  fluidb_string<16> sym__0__2274992661292194562;
  fluidb_string<13> sym__0___45_52536403880094569;
  fluidb_string<15> sym__0__8474116574285927276;
  unsigned sym__0__1835503384076924528;
  int sym__0__586412267723269786;
  unsigned sym__0__1353367320182642978;
  unsigned sym__0___45_6351222752813626636;
  unsigned sym__0___45_805067702695824989;
  unsigned sym__0__914509637812701046;
  fluidb_string<21> sym__0__7895450651221174051;
  unsigned sym__0__5942285589324576545;
  fluidb_string<10> sym__0__3979382234526804898;
  unsigned sym__0___45_6103522369909819246;
  double sym__0__1873148039180761712;
  unsigned sym__0__1430551526674366102;
  double sym__0__1048818672001592248;
  unsigned sym__0__5723353836447658492;
  unsigned sym__0___45_2233273278156881105;
  double sym__0___45_1120880788595637835;
  fluidb_string<13> sym__0___45_6361490230660137987;
  unsigned sym__0___45_7131249874638266788;
  fluidb_string<18> sym__0__7265729621635359692;
  fluidb_string<9> sym__0___45_2986035740159621374;
  fluidb_string<9> sym__0__5081664509798388941;
  unsigned sym__0___45_8518596434939314413;
  unsigned sym__0__1988221653138390749;
  fluidb_string<7> sym__0___45_8801377200944175068;
  unsigned sym__0___45_4634183629139578121;
  unsigned sym__0__806472603637564420;
  unsigned sym__0__1725829484083430844;
  unsigned sym__0___45_5279274827282678566;
  unsigned sym__0___45_9129247388617675603;
  fluidb_string<15> sym__0__1232225844204183080;
  fluidb_string<2> sym__0__9184663680502119984;
  fluidb_string<2> sym__0___45_9023997483659527503;
  fluidb_string<2> sym__0___45_1026604631201554135;
  fluidb_string<2> sym__0___45_7189754320372197989;
 private:
};


class Record24 {
 public:
  Record24(unsigned __sym__0___45_9062977367914427397, fluidb_string<25> __sym__0___45_2529420040722706896, fluidb_string<40> __sym__0__574837602909090142, fluidb_string<16> __sym__0__593663438043378012, fluidb_string<16> __sym__0___45_3887971984962307750, fluidb_string<13> __sym__0__5823252983849143071, fluidb_string<15> __sym__0___45_106394867614362960, unsigned __sym__0__6714030146677542844, int __sym__0__2887490991825418322, unsigned __sym__0__1712165930429801146, unsigned __sym__0___45_2770072266723735208, unsigned __sym__0___45_6459836926625833613, unsigned __sym__0__7430011083678934790, fluidb_string<21> __sym__0__8650139153845624051, unsigned __sym__0___45_2149426645220855235, fluidb_string<10> __sym__0___45_6782049901239695046, unsigned __sym__0__7592147203193979498, double __sym__0__4252747565219064764, unsigned __sym__0__7984101336509792358, double __sym__0___45_4696990900813234940, unsigned __sym__0___45_333127918406099392, unsigned __sym__0__1682335219184206071, double __sym__0___45_1968041223374194423, fluidb_string<13> __sym__0__7319886423946863313, unsigned __sym__0__5809761575032387040, fluidb_string<18> __sym__0__7089670065349420496, fluidb_string<9> __sym__0__6799464548088745306, fluidb_string<9> __sym__0__3432841002905483105, unsigned __sym__0__7494859993398015587, unsigned __sym__0___45_9206223202625852687, fluidb_string<7> __sym__0___45_7058002245744215800, unsigned __sym__0___45_6336476145267172161, unsigned __sym__0___45_394010879145796312, unsigned __sym__0__481431924301037312, unsigned __sym__0__5264647155959307922, unsigned __sym__0___45_6635260509808465407, fluidb_string<15> __sym__0__6067010566108174452, fluidb_string<2> __sym__0___45_4481069348252575620, fluidb_string<2> __sym__0__3235793487446917133, fluidb_string<2> __sym__0__4996330425147081765, fluidb_string<2> __sym__0___45_8340418653084059381, unsigned __sym__0__8129013918067253034, fluidb_string<55> __sym__0___45_7293426445565610246, fluidb_string<25> __sym__0__8820012445037342349, fluidb_string<7> __sym__0__6863506390321881387, fluidb_string<10> __sym__0___45_4545874988123414947, fluidb_string<11> __sym__0__1243206733405227801, fluidb_string<25> __sym__0__1972712326009675807, unsigned __sym__0__7671879331830055556, fluidb_string<10> __sym__0___45_6494031878969548547) : sym__0___45_9062977367914427397(__sym__0___45_9062977367914427397), sym__0___45_2529420040722706896(__sym__0___45_2529420040722706896), sym__0__574837602909090142(__sym__0__574837602909090142), sym__0__593663438043378012(__sym__0__593663438043378012), sym__0___45_3887971984962307750(__sym__0___45_3887971984962307750), sym__0__5823252983849143071(__sym__0__5823252983849143071), sym__0___45_106394867614362960(__sym__0___45_106394867614362960), sym__0__6714030146677542844(__sym__0__6714030146677542844), sym__0__2887490991825418322(__sym__0__2887490991825418322), sym__0__1712165930429801146(__sym__0__1712165930429801146), sym__0___45_2770072266723735208(__sym__0___45_2770072266723735208), sym__0___45_6459836926625833613(__sym__0___45_6459836926625833613), sym__0__7430011083678934790(__sym__0__7430011083678934790), sym__0__8650139153845624051(__sym__0__8650139153845624051), sym__0___45_2149426645220855235(__sym__0___45_2149426645220855235), sym__0___45_6782049901239695046(__sym__0___45_6782049901239695046), sym__0__7592147203193979498(__sym__0__7592147203193979498), sym__0__4252747565219064764(__sym__0__4252747565219064764), sym__0__7984101336509792358(__sym__0__7984101336509792358), sym__0___45_4696990900813234940(__sym__0___45_4696990900813234940), sym__0___45_333127918406099392(__sym__0___45_333127918406099392), sym__0__1682335219184206071(__sym__0__1682335219184206071), sym__0___45_1968041223374194423(__sym__0___45_1968041223374194423), sym__0__7319886423946863313(__sym__0__7319886423946863313), sym__0__5809761575032387040(__sym__0__5809761575032387040), sym__0__7089670065349420496(__sym__0__7089670065349420496), sym__0__6799464548088745306(__sym__0__6799464548088745306), sym__0__3432841002905483105(__sym__0__3432841002905483105), sym__0__7494859993398015587(__sym__0__7494859993398015587), sym__0___45_9206223202625852687(__sym__0___45_9206223202625852687), sym__0___45_7058002245744215800(__sym__0___45_7058002245744215800), sym__0___45_6336476145267172161(__sym__0___45_6336476145267172161), sym__0___45_394010879145796312(__sym__0___45_394010879145796312), sym__0__481431924301037312(__sym__0__481431924301037312), sym__0__5264647155959307922(__sym__0__5264647155959307922), sym__0___45_6635260509808465407(__sym__0___45_6635260509808465407), sym__0__6067010566108174452(__sym__0__6067010566108174452), sym__0___45_4481069348252575620(__sym__0___45_4481069348252575620), sym__0__3235793487446917133(__sym__0__3235793487446917133), sym__0__4996330425147081765(__sym__0__4996330425147081765), sym__0___45_8340418653084059381(__sym__0___45_8340418653084059381), sym__0__8129013918067253034(__sym__0__8129013918067253034), sym__0___45_7293426445565610246(__sym__0___45_7293426445565610246), sym__0__8820012445037342349(__sym__0__8820012445037342349), sym__0__6863506390321881387(__sym__0__6863506390321881387), sym__0___45_4545874988123414947(__sym__0___45_4545874988123414947), sym__0__1243206733405227801(__sym__0__1243206733405227801), sym__0__1972712326009675807(__sym__0__1972712326009675807), sym__0__7671879331830055556(__sym__0__7671879331830055556), sym__0___45_6494031878969548547(__sym__0___45_6494031878969548547)
  {
  }
  Record24() 
  {
  }
  std::string show() const{
    std::stringstream o;
    o << sym__0___45_9062977367914427397 << " | " << arrToString(sym__0___45_2529420040722706896) << " | " << arrToString(sym__0__574837602909090142) << " | " << arrToString(sym__0__593663438043378012) << " | " << arrToString(sym__0___45_3887971984962307750) << " | " << arrToString(sym__0__5823252983849143071) << " | " << arrToString(sym__0___45_106394867614362960) << " | " << sym__0__6714030146677542844 << " | " << sym__0__2887490991825418322 << " | " << sym__0__1712165930429801146 << " | " << sym__0___45_2770072266723735208 << " | " << sym__0___45_6459836926625833613 << " | " << sym__0__7430011083678934790 << " | " << arrToString(sym__0__8650139153845624051) << " | " << sym__0___45_2149426645220855235 << " | " << arrToString(sym__0___45_6782049901239695046) << " | " << sym__0__7592147203193979498 << " | " << sym__0__4252747565219064764 << " | " << sym__0__7984101336509792358 << " | " << sym__0___45_4696990900813234940 << " | " << sym__0___45_333127918406099392 << " | " << sym__0__1682335219184206071 << " | " << sym__0___45_1968041223374194423 << " | " << arrToString(sym__0__7319886423946863313) << " | " << sym__0__5809761575032387040 << " | " << arrToString(sym__0__7089670065349420496) << " | " << arrToString(sym__0__6799464548088745306) << " | " << arrToString(sym__0__3432841002905483105) << " | " << sym__0__7494859993398015587 << " | " << sym__0___45_9206223202625852687 << " | " << arrToString(sym__0___45_7058002245744215800) << " | " << sym__0___45_6336476145267172161 << " | " << sym__0___45_394010879145796312 << " | " << sym__0__481431924301037312 << " | " << sym__0__5264647155959307922 << " | " << sym__0___45_6635260509808465407 << " | " << arrToString(sym__0__6067010566108174452) << " | " << arrToString(sym__0___45_4481069348252575620) << " | " << arrToString(sym__0__3235793487446917133) << " | " << arrToString(sym__0__4996330425147081765) << " | " << arrToString(sym__0___45_8340418653084059381) << " | " << sym__0__8129013918067253034 << " | " << arrToString(sym__0___45_7293426445565610246) << " | " << arrToString(sym__0__8820012445037342349) << " | " << arrToString(sym__0__6863506390321881387) << " | " << arrToString(sym__0___45_4545874988123414947) << " | " << arrToString(sym__0__1243206733405227801) << " | " << arrToString(sym__0__1972712326009675807) << " | " << sym__0__7671879331830055556 << " | " << arrToString(sym__0___45_6494031878969548547);
    return o.str();
  }
  bool operator <(const Record24& otherRec) const{
    return (otherRec.sym__0___45_9062977367914427397 < sym__0___45_9062977367914427397 && (otherRec.sym__0___45_2529420040722706896 < sym__0___45_2529420040722706896 && (otherRec.sym__0__574837602909090142 < sym__0__574837602909090142 && (otherRec.sym__0__593663438043378012 < sym__0__593663438043378012 && (otherRec.sym__0___45_3887971984962307750 < sym__0___45_3887971984962307750 && (otherRec.sym__0__5823252983849143071 < sym__0__5823252983849143071 && (otherRec.sym__0___45_106394867614362960 < sym__0___45_106394867614362960 && (otherRec.sym__0__6714030146677542844 < sym__0__6714030146677542844 && (otherRec.sym__0__2887490991825418322 < sym__0__2887490991825418322 && (otherRec.sym__0__1712165930429801146 < sym__0__1712165930429801146 && (otherRec.sym__0___45_2770072266723735208 < sym__0___45_2770072266723735208 && (otherRec.sym__0___45_6459836926625833613 < sym__0___45_6459836926625833613 && (otherRec.sym__0__7430011083678934790 < sym__0__7430011083678934790 && (otherRec.sym__0__8650139153845624051 < sym__0__8650139153845624051 && (otherRec.sym__0___45_2149426645220855235 < sym__0___45_2149426645220855235 && (otherRec.sym__0___45_6782049901239695046 < sym__0___45_6782049901239695046 && (otherRec.sym__0__7592147203193979498 < sym__0__7592147203193979498 && (otherRec.sym__0__4252747565219064764 < sym__0__4252747565219064764 && (otherRec.sym__0__7984101336509792358 < sym__0__7984101336509792358 && (otherRec.sym__0___45_4696990900813234940 < sym__0___45_4696990900813234940 && (otherRec.sym__0___45_333127918406099392 < sym__0___45_333127918406099392 && (otherRec.sym__0__1682335219184206071 < sym__0__1682335219184206071 && (otherRec.sym__0___45_1968041223374194423 < sym__0___45_1968041223374194423 && (otherRec.sym__0__7319886423946863313 < sym__0__7319886423946863313 && (otherRec.sym__0__5809761575032387040 < sym__0__5809761575032387040 && (otherRec.sym__0__7089670065349420496 < sym__0__7089670065349420496 && (otherRec.sym__0__6799464548088745306 < sym__0__6799464548088745306 && (otherRec.sym__0__3432841002905483105 < sym__0__3432841002905483105 && (otherRec.sym__0__7494859993398015587 < sym__0__7494859993398015587 && (otherRec.sym__0___45_9206223202625852687 < sym__0___45_9206223202625852687 && (otherRec.sym__0___45_7058002245744215800 < sym__0___45_7058002245744215800 && (otherRec.sym__0___45_6336476145267172161 < sym__0___45_6336476145267172161 && (otherRec.sym__0___45_394010879145796312 < sym__0___45_394010879145796312 && (otherRec.sym__0__481431924301037312 < sym__0__481431924301037312 && (otherRec.sym__0__5264647155959307922 < sym__0__5264647155959307922 && (otherRec.sym__0___45_6635260509808465407 < sym__0___45_6635260509808465407 && (otherRec.sym__0__6067010566108174452 < sym__0__6067010566108174452 && (otherRec.sym__0___45_4481069348252575620 < sym__0___45_4481069348252575620 && (otherRec.sym__0__3235793487446917133 < sym__0__3235793487446917133 && (otherRec.sym__0__4996330425147081765 < sym__0__4996330425147081765 && (otherRec.sym__0___45_8340418653084059381 < sym__0___45_8340418653084059381 && (otherRec.sym__0__8129013918067253034 < sym__0__8129013918067253034 && (otherRec.sym__0___45_7293426445565610246 < sym__0___45_7293426445565610246 && (otherRec.sym__0__8820012445037342349 < sym__0__8820012445037342349 && (otherRec.sym__0__6863506390321881387 < sym__0__6863506390321881387 && (otherRec.sym__0___45_4545874988123414947 < sym__0___45_4545874988123414947 && (otherRec.sym__0__1243206733405227801 < sym__0__1243206733405227801 && (otherRec.sym__0__1972712326009675807 < sym__0__1972712326009675807 && (otherRec.sym__0__7671879331830055556 < sym__0__7671879331830055556 && otherRec.sym__0___45_6494031878969548547 < sym__0___45_6494031878969548547)))))))))))))))))))))))))))))))))))))))))))))))));
  }
  bool operator ==(const Record24& otherRec) const{
    return (otherRec.sym__0___45_9062977367914427397 == sym__0___45_9062977367914427397 && (otherRec.sym__0___45_2529420040722706896 == sym__0___45_2529420040722706896 && (otherRec.sym__0__574837602909090142 == sym__0__574837602909090142 && (otherRec.sym__0__593663438043378012 == sym__0__593663438043378012 && (otherRec.sym__0___45_3887971984962307750 == sym__0___45_3887971984962307750 && (otherRec.sym__0__5823252983849143071 == sym__0__5823252983849143071 && (otherRec.sym__0___45_106394867614362960 == sym__0___45_106394867614362960 && (otherRec.sym__0__6714030146677542844 == sym__0__6714030146677542844 && (otherRec.sym__0__2887490991825418322 == sym__0__2887490991825418322 && (otherRec.sym__0__1712165930429801146 == sym__0__1712165930429801146 && (otherRec.sym__0___45_2770072266723735208 == sym__0___45_2770072266723735208 && (otherRec.sym__0___45_6459836926625833613 == sym__0___45_6459836926625833613 && (otherRec.sym__0__7430011083678934790 == sym__0__7430011083678934790 && (otherRec.sym__0__8650139153845624051 == sym__0__8650139153845624051 && (otherRec.sym__0___45_2149426645220855235 == sym__0___45_2149426645220855235 && (otherRec.sym__0___45_6782049901239695046 == sym__0___45_6782049901239695046 && (otherRec.sym__0__7592147203193979498 == sym__0__7592147203193979498 && (otherRec.sym__0__4252747565219064764 == sym__0__4252747565219064764 && (otherRec.sym__0__7984101336509792358 == sym__0__7984101336509792358 && (otherRec.sym__0___45_4696990900813234940 == sym__0___45_4696990900813234940 && (otherRec.sym__0___45_333127918406099392 == sym__0___45_333127918406099392 && (otherRec.sym__0__1682335219184206071 == sym__0__1682335219184206071 && (otherRec.sym__0___45_1968041223374194423 == sym__0___45_1968041223374194423 && (otherRec.sym__0__7319886423946863313 == sym__0__7319886423946863313 && (otherRec.sym__0__5809761575032387040 == sym__0__5809761575032387040 && (otherRec.sym__0__7089670065349420496 == sym__0__7089670065349420496 && (otherRec.sym__0__6799464548088745306 == sym__0__6799464548088745306 && (otherRec.sym__0__3432841002905483105 == sym__0__3432841002905483105 && (otherRec.sym__0__7494859993398015587 == sym__0__7494859993398015587 && (otherRec.sym__0___45_9206223202625852687 == sym__0___45_9206223202625852687 && (otherRec.sym__0___45_7058002245744215800 == sym__0___45_7058002245744215800 && (otherRec.sym__0___45_6336476145267172161 == sym__0___45_6336476145267172161 && (otherRec.sym__0___45_394010879145796312 == sym__0___45_394010879145796312 && (otherRec.sym__0__481431924301037312 == sym__0__481431924301037312 && (otherRec.sym__0__5264647155959307922 == sym__0__5264647155959307922 && (otherRec.sym__0___45_6635260509808465407 == sym__0___45_6635260509808465407 && (otherRec.sym__0__6067010566108174452 == sym__0__6067010566108174452 && (otherRec.sym__0___45_4481069348252575620 == sym__0___45_4481069348252575620 && (otherRec.sym__0__3235793487446917133 == sym__0__3235793487446917133 && (otherRec.sym__0__4996330425147081765 == sym__0__4996330425147081765 && (otherRec.sym__0___45_8340418653084059381 == sym__0___45_8340418653084059381 && (otherRec.sym__0__8129013918067253034 == sym__0__8129013918067253034 && (otherRec.sym__0___45_7293426445565610246 == sym__0___45_7293426445565610246 && (otherRec.sym__0__8820012445037342349 == sym__0__8820012445037342349 && (otherRec.sym__0__6863506390321881387 == sym__0__6863506390321881387 && (otherRec.sym__0___45_4545874988123414947 == sym__0___45_4545874988123414947 && (otherRec.sym__0__1243206733405227801 == sym__0__1243206733405227801 && (otherRec.sym__0__1972712326009675807 == sym__0__1972712326009675807 && (otherRec.sym__0__7671879331830055556 == sym__0__7671879331830055556 && otherRec.sym__0___45_6494031878969548547 == sym__0___45_6494031878969548547)))))))))))))))))))))))))))))))))))))))))))))))));
  }
  bool operator !=(const Record24& otherRec) const{
    return (otherRec.sym__0___45_9062977367914427397 != sym__0___45_9062977367914427397 || (otherRec.sym__0___45_2529420040722706896 != sym__0___45_2529420040722706896 || (otherRec.sym__0__574837602909090142 != sym__0__574837602909090142 || (otherRec.sym__0__593663438043378012 != sym__0__593663438043378012 || (otherRec.sym__0___45_3887971984962307750 != sym__0___45_3887971984962307750 || (otherRec.sym__0__5823252983849143071 != sym__0__5823252983849143071 || (otherRec.sym__0___45_106394867614362960 != sym__0___45_106394867614362960 || (otherRec.sym__0__6714030146677542844 != sym__0__6714030146677542844 || (otherRec.sym__0__2887490991825418322 != sym__0__2887490991825418322 || (otherRec.sym__0__1712165930429801146 != sym__0__1712165930429801146 || (otherRec.sym__0___45_2770072266723735208 != sym__0___45_2770072266723735208 || (otherRec.sym__0___45_6459836926625833613 != sym__0___45_6459836926625833613 || (otherRec.sym__0__7430011083678934790 != sym__0__7430011083678934790 || (otherRec.sym__0__8650139153845624051 != sym__0__8650139153845624051 || (otherRec.sym__0___45_2149426645220855235 != sym__0___45_2149426645220855235 || (otherRec.sym__0___45_6782049901239695046 != sym__0___45_6782049901239695046 || (otherRec.sym__0__7592147203193979498 != sym__0__7592147203193979498 || (otherRec.sym__0__4252747565219064764 != sym__0__4252747565219064764 || (otherRec.sym__0__7984101336509792358 != sym__0__7984101336509792358 || (otherRec.sym__0___45_4696990900813234940 != sym__0___45_4696990900813234940 || (otherRec.sym__0___45_333127918406099392 != sym__0___45_333127918406099392 || (otherRec.sym__0__1682335219184206071 != sym__0__1682335219184206071 || (otherRec.sym__0___45_1968041223374194423 != sym__0___45_1968041223374194423 || (otherRec.sym__0__7319886423946863313 != sym__0__7319886423946863313 || (otherRec.sym__0__5809761575032387040 != sym__0__5809761575032387040 || (otherRec.sym__0__7089670065349420496 != sym__0__7089670065349420496 || (otherRec.sym__0__6799464548088745306 != sym__0__6799464548088745306 || (otherRec.sym__0__3432841002905483105 != sym__0__3432841002905483105 || (otherRec.sym__0__7494859993398015587 != sym__0__7494859993398015587 || (otherRec.sym__0___45_9206223202625852687 != sym__0___45_9206223202625852687 || (otherRec.sym__0___45_7058002245744215800 != sym__0___45_7058002245744215800 || (otherRec.sym__0___45_6336476145267172161 != sym__0___45_6336476145267172161 || (otherRec.sym__0___45_394010879145796312 != sym__0___45_394010879145796312 || (otherRec.sym__0__481431924301037312 != sym__0__481431924301037312 || (otherRec.sym__0__5264647155959307922 != sym__0__5264647155959307922 || (otherRec.sym__0___45_6635260509808465407 != sym__0___45_6635260509808465407 || (otherRec.sym__0__6067010566108174452 != sym__0__6067010566108174452 || (otherRec.sym__0___45_4481069348252575620 != sym__0___45_4481069348252575620 || (otherRec.sym__0__3235793487446917133 != sym__0__3235793487446917133 || (otherRec.sym__0__4996330425147081765 != sym__0__4996330425147081765 || (otherRec.sym__0___45_8340418653084059381 != sym__0___45_8340418653084059381 || (otherRec.sym__0__8129013918067253034 != sym__0__8129013918067253034 || (otherRec.sym__0___45_7293426445565610246 != sym__0___45_7293426445565610246 || (otherRec.sym__0__8820012445037342349 != sym__0__8820012445037342349 || (otherRec.sym__0__6863506390321881387 != sym__0__6863506390321881387 || (otherRec.sym__0___45_4545874988123414947 != sym__0___45_4545874988123414947 || (otherRec.sym__0__1243206733405227801 != sym__0__1243206733405227801 || (otherRec.sym__0__1972712326009675807 != sym__0__1972712326009675807 || (otherRec.sym__0__7671879331830055556 != sym__0__7671879331830055556 || otherRec.sym__0___45_6494031878969548547 != sym__0___45_6494031878969548547)))))))))))))))))))))))))))))))))))))))))))))))));
  }
  unsigned sym__0___45_9062977367914427397;
  fluidb_string<25> sym__0___45_2529420040722706896;
  fluidb_string<40> sym__0__574837602909090142;
  fluidb_string<16> sym__0__593663438043378012;
  fluidb_string<16> sym__0___45_3887971984962307750;
  fluidb_string<13> sym__0__5823252983849143071;
  fluidb_string<15> sym__0___45_106394867614362960;
  unsigned sym__0__6714030146677542844;
  int sym__0__2887490991825418322;
  unsigned sym__0__1712165930429801146;
  unsigned sym__0___45_2770072266723735208;
  unsigned sym__0___45_6459836926625833613;
  unsigned sym__0__7430011083678934790;
  fluidb_string<21> sym__0__8650139153845624051;
  unsigned sym__0___45_2149426645220855235;
  fluidb_string<10> sym__0___45_6782049901239695046;
  unsigned sym__0__7592147203193979498;
  double sym__0__4252747565219064764;
  unsigned sym__0__7984101336509792358;
  double sym__0___45_4696990900813234940;
  unsigned sym__0___45_333127918406099392;
  unsigned sym__0__1682335219184206071;
  double sym__0___45_1968041223374194423;
  fluidb_string<13> sym__0__7319886423946863313;
  unsigned sym__0__5809761575032387040;
  fluidb_string<18> sym__0__7089670065349420496;
  fluidb_string<9> sym__0__6799464548088745306;
  fluidb_string<9> sym__0__3432841002905483105;
  unsigned sym__0__7494859993398015587;
  unsigned sym__0___45_9206223202625852687;
  fluidb_string<7> sym__0___45_7058002245744215800;
  unsigned sym__0___45_6336476145267172161;
  unsigned sym__0___45_394010879145796312;
  unsigned sym__0__481431924301037312;
  unsigned sym__0__5264647155959307922;
  unsigned sym__0___45_6635260509808465407;
  fluidb_string<15> sym__0__6067010566108174452;
  fluidb_string<2> sym__0___45_4481069348252575620;
  fluidb_string<2> sym__0__3235793487446917133;
  fluidb_string<2> sym__0__4996330425147081765;
  fluidb_string<2> sym__0___45_8340418653084059381;
  unsigned sym__0__8129013918067253034;
  fluidb_string<55> sym__0___45_7293426445565610246;
  fluidb_string<25> sym__0__8820012445037342349;
  fluidb_string<7> sym__0__6863506390321881387;
  fluidb_string<10> sym__0___45_4545874988123414947;
  fluidb_string<11> sym__0__1243206733405227801;
  fluidb_string<25> sym__0__1972712326009675807;
  unsigned sym__0__7671879331830055556;
  fluidb_string<10> sym__0___45_6494031878969548547;
 private:
};


class CallableClass16 {
 public:
  Record14 operator()(const Record11& record15) {
    return Record14(record15.sym__0__8499987716798155358);
  }
  typedef Record14 Codomain;
  typedef Record11 Domain0;
 private:
};


class CallableClass8 {
 public:
  bool operator()(const Record7& record6) {
    return like(record6.sym__0___45_52536403880094569, "EUROPE");
  }
  typedef bool Codomain;
  typedef Record7 Domain0;
 private:
};


class CallableClass20 {
 public:
  bool operator()(const Record12& record19) {
    return like(record19.sym__0___45_6414117357071051226, "MFGR#2221");
  }
  typedef bool Codomain;
  typedef Record12 Domain0;
 private:
};


class CallableClass13 {
 public:
  Record12 operator()(const Record11& record9, const Record4& record10) {
    return Record12(record9.sym__0___45_5182087624132196707, record9.sym__0___45_1125733209087237322, record9.sym__0___45_4972797425225002076, record9.sym__0__2318854370595574362, record9.sym__0___45_4041623608412761896, record9.sym__0___45_3735786698084808711, record9.sym__0__7384252796126420662, record9.sym__0___45_2043653876463228102, record9.sym__0__2838774847530135056, record9.sym__0__6525564334754176696, record9.sym__0__8499987716798155358, record9.sym__0___45_6915660615674064043, record9.sym__0___45_8326786075612268884, record9.sym__0___45_6075665051587255339, record9.sym__0___45_1350382245670239329, record9.sym__0__2109402343114077240, record9.sym__0__6215935326665719112, record9.sym__0__2820217628767326010, record9.sym__0__5445672276260318348, record9.sym__0__3697656138623911458, record9.sym__0__1653175989217608742, record9.sym__0___45_3743776918383637103, record9.sym__0__2919710110324225859, record9.sym__0__1749379276187346475, record9.sym__0___45_4706300880382947898, record9.sym__0___45_8488664643470695338, record9.sym__0___45_8168358588491690792, record9.sym__0__3492822237187130715, record9.sym__0___45_5327203452744863771, record9.sym__0___45_3191486480184313013, record9.sym__0__8273133299368630830, record9.sym__0__5374892212332880793, record9.sym__0__4657424385215848526, record9.sym__0___45_3458973470967037338, record9.sym__0___45_8815963362114542896, record9.sym__0___45_1032706391051161733, record9.sym__0__2933689304969494962, record9.sym__0__7834336576245077370, record9.sym__0___45_4475634397818667505, record9.sym__0__3226357619497947495, record9.sym__0__2465797272458765197, record10.sym__0__7178003535380331304, record10.sym__0___45_7020257275696364520, record10.sym__0___45_6307179734719967033, record10.sym__0__4568304886257136061, record10.sym__0___45_6291097039630000265, record10.sym__0__551327770031967739, record10.sym__0__3827696365022297353, record10.sym__0___45_1779543743759935870, record10.sym__0__3752090135924368535);
  }
  typedef Record12 Codomain;
  typedef Record11 Domain0;
  typedef Record4 Domain1;
 private:
};


class CallableClass3 {
 public:
  Record1 operator()(const Record2& record0) {
    return Record1(record0.sym__0__7069852625741277438, record0.sym__0___45_2139184416220787303, record0.sym__0__6834910062454089307, record0.sym__0___45_673637979750308955, record0.sym__0__7353040165187485943, record0.sym__0___45_3600959643487303198, record0.sym__0__1586920362281366553, record0.sym__0___45_565293263947163771, record0.sym__0___45_843396218047479825, record0.sym__0___45_6341950231013217833, record0.sym__0__1045058483100812033, record0.sym__0__3789297121224398166, record0.sym__0__7633871876750507011, record0.sym__0___45_1913197190575800618, record0.sym__0__5022607639284586068, record0.sym__0___45_4537203481097655209, record0.sym__0___45_4177776814409117721, record0.sym__0___45_1641792039791357051, record0.sym__0__9155042948135519075, record0.sym__0___45_1524873931413302067, record0.sym__0__5123726051002722313, record0.sym__0___45_3964194374284396198, record0.sym__0___45_3323287974231174848, record0.sym__0___45_7635081431606838648, record0.sym__0__3374832300737452457, record0.sym__0___45_2738400311900405319, record0.sym__0__922566035134170359, record0.sym__0___45_4970177704815948360, record0.sym__0__1953889797750115686, record0.sym__0__7036968840507665704, record0.sym__0__2424422746197752657, record0.sym__0___45_899504608738992510, record0.sym__0__2199101055335955185, record0.sym__0__8162945309743176777, record0.sym__0__5658677538842948015, record0.sym__0___45_1804682623039322536, record0.sym__0___45_4150473036734596643, record0.sym__0___45_1494825655055665211, record0.sym__0__7243345290037361860, record0.sym__0___45_5621333005798540324, record0.sym__0___45_6906996774260360338);
  }
  typedef Record1 Codomain;
  typedef Record2 Domain0;
 private:
};


class CallableClass31 {
 public:
  Record28 operator()(const Record22& record30) {
    return Record28(record30.sym__0___45_7150856907437622963, record30.sym__0___45_996409509835512161);
  }
  typedef Record28 Codomain;
  typedef Record22 Domain0;
 private:
};


class CallableClass29 {
 public:
  Record28 operator()(const Record24& record21) {
    return Record28(record21.sym__0__7494859993398015587, record21.sym__0___45_4545874988123414947);
  }
  typedef Record28 Codomain;
  typedef Record24 Domain0;
 private:
};


class CallableClass18 {
 public:
  Record14 operator()(const Record4& record17) {
    return Record14(record17.sym__0__7178003535380331304);
  }
  typedef Record14 Codomain;
  typedef Record4 Domain0;
 private:
};


class CallableClass27 {
 public:
  Record22 operator()(const Record24& record21) {
    return Record22(vAggrSum23(record21.sym__0___45_333127918406099392), vAggrFirst25(record21.sym__0__7494859993398015587), vAggrFirst26(record21.sym__0___45_4545874988123414947));
  }
  typedef Record22 Codomain;
  typedef Record24 Domain0;
 private:
  AggrSum<unsigned> vAggrSum23;
  AggrFirst<unsigned> vAggrFirst25;
  AggrFirst<fluidb_string<10>> vAggrFirst26;
};


class CallableClass5 {
 public:
  Record4 operator()(const Record2& record0) {
    return Record4(record0.sym__0___45_6223982643952099801, record0.sym__0___45_4582877986939568489, record0.sym__0__8952063493441915716, record0.sym__0___45_1824395327270788210, record0.sym__0___45_4574956228592531724, record0.sym__0___45_3583563823835889744, record0.sym__0__1035932931239708898, record0.sym__0__2873925968864442957, record0.sym__0___45_6275854556107336556);
  }
  typedef Record4 Codomain;
  typedef Record2 Domain0;
 private:
};






int main() {
  // ReverseTrigger: (Just 
  //   (Left 
  //     [
  //      QJoin 
  //         (P0 
  //           (R2 REq 
  //               (R0 (E0 (ESym "lo_partkey"))) 
  //               (R0 (E0 (ESym "p_partkey")))))
  std::cout << "ReverseTrigger: (Just \n  (Left \n    [\n     QJoin \n        (P0 \n          (R2 REq \n              (R0 (E0 (ESym \"lo_partkey\"))) \n              (R0 (E0 (ESym \"p_partkey\")))))\n    ]))" << std::endl;
  {
    auto operation = mkUnJoin<CallableClass3, CallableClass5>(Just("/tmp/fluidb_store/data109.dat"), Nothing(), Just("/tmp/fluidb_store/data110.dat"), Nothing(), Just("/tmp/fluidb_store/data2.dat"));
    operation.run();
    operation.print_output(10);
  }
  // Delete: (Q1 
  //   (QSort [E0 (ESym "d_year"),E0 (ESym "p_brand1")]) 
  //   (Q1 
  //     (QGroup 
  //       [(ESym "tmpSym0",E0 (NAggr AggrSum (E0 (ESym "lo_revenue")))),
  //        (ESym "d_year",E0 (NAggr AggrFirst (E0 (ESym "d_year")))),
  //        (ESym "p_brand1",E0 (NAggr AggrFirst (E0 (ESym "p_brand1"))))] 
  //       [E0 (ESym "d_year"),E0 (ESym "p_brand1")]) 
  //     (S 
  //       (P2 
  //         PAnd 
  //         (P2 
  //           PAnd 
  //           (P0 
  //             (R2 RLike 
  //                 (R0 (E0 (ESym "s_region"))) 
  //                 (R0 (E0 (EString "ASIA"))))) 
  //           (P0 
  //             (R2 RLe 
  //                 (R0 (E0 (EString "MFGR#2221"))) 
  //                 (R0 (E0 (ESym "p_brand1")))))) 
  //         (P0 
  //           (R2 RLe 
  //               (R0 (E0 (ESym "p_brand1"))) 
  //               (R0 (E0 (EString "MFGR#2228")))))) 
  //       (J 
  //         (P0 
  //           (R2 REq 
  //               (R0 (E0 (ESym "lo_partkey"))) 
  //               (R0 (E0 (ESym "p_partkey"))))) 
  //         (J 
  //           (P0 
  //             (R2 REq 
  //                 (R0 (E0 (ESym "lo_orderdate"))) 
  //                 (R0 (E0 (ESym "d_datekey"))))) 
  //           (J 
  //             (P0 
  //               (R2 REq 
  //                   (R0 (E0 (ESym "lo_suppkey"))) 
  //                   (R0 (E0 (ESym "s_suppkey"))))) 
  //             (Q0 (TSymbol "supplier")) 
  //             (Q0 (TSymbol "lineorder"))) 
  //           (Q0 (TSymbol "date"))) 
  std::cout << "Delete: (Q1 \n  (QSort [E0 (ESym \"d_year\"),E0 (ESym \"p_brand1\")]) \n  (Q1 \n    (QGroup \n      [(ESym \"tmpSym0\",E0 (NAggr AggrSum (E0 (ESym \"lo_revenue\")))),\n       (ESym \"d_year\",E0 (NAggr AggrFirst (E0 (ESym \"d_year\")))),\n       (ESym \"p_brand1\",E0 (NAggr AggrFirst (E0 (ESym \"p_brand1\"))))] \n      [E0 (ESym \"d_year\"),E0 (ESym \"p_brand1\")]) \n    (S \n      (P2 \n        PAnd \n        (P2 \n          PAnd \n          (P0 \n            (R2 RLike \n                (R0 (E0 (ESym \"s_region\"))) \n                (R0 (E0 (EString \"ASIA\"))))) \n          (P0 \n            (R2 RLe \n                (R0 (E0 (EString \"MFGR#2221\"))) \n                (R0 (E0 (ESym \"p_brand1\")))))) \n        (P0 \n          (R2 RLe \n              (R0 (E0 (ESym \"p_brand1\"))) \n              (R0 (E0 (EString \"MFGR#2228\")))))) \n      (J \n        (P0 \n          (R2 REq \n              (R0 (E0 (ESym \"lo_partkey\"))) \n              (R0 (E0 (ESym \"p_partkey\"))))) \n        (J \n          (P0 \n            (R2 REq \n                (R0 (E0 (ESym \"lo_orderdate\"))) \n                (R0 (E0 (ESym \"d_datekey\"))))) \n          (J \n            (P0 \n              (R2 REq \n                  (R0 (E0 (ESym \"lo_suppkey\"))) \n                  (R0 (E0 (ESym \"s_suppkey\"))))) \n            (Q0 (TSymbol \"supplier\")) \n            (Q0 (TSymbol \"lineorder\"))) \n          (Q0 (TSymbol \"date\"))) \n        (Q0 (TSymbol \"part\"))))))" << std::endl;
  deleteFile("/tmp/fluidb_store/data119.dat");
  // Delete: (Q1 
  //   (QGroup 
  //     [(ESym "tmpSym0",E0 (NAggr AggrSum (E0 (ESym "lo_revenue")))),
  //      (ESym "d_year",E0 (NAggr AggrFirst (E0 (ESym "d_year")))),
  //      (ESym "p_brand1",E0 (NAggr AggrFirst (E0 (ESym "p_brand1"))))] 
  //     [E0 (ESym "d_year"),E0 (ESym "p_brand1")]) 
  //   (S 
  //     (P2 
  //       PAnd 
  //       (P2 
  //         PAnd 
  //         (P0 
  //           (R2 RLike 
  //               (R0 (E0 (ESym "s_region"))) 
  //               (R0 (E0 (EString "ASIA"))))) 
  //         (P0 
  //           (R2 RLe 
  //               (R0 (E0 (EString "MFGR#2221"))) 
  //               (R0 (E0 (ESym "p_brand1")))))) 
  //       (P0 
  //         (R2 RLe 
  //             (R0 (E0 (ESym "p_brand1"))) 
  //             (R0 (E0 (EString "MFGR#2228")))))) 
  //     (J 
  //       (P0 
  //         (R2 REq 
  //             (R0 (E0 (ESym "lo_partkey"))) 
  //             (R0 (E0 (ESym "p_partkey"))))) 
  //       (J 
  //         (P0 
  //           (R2 REq 
  //               (R0 (E0 (ESym "lo_orderdate"))) 
  //               (R0 (E0 (ESym "d_datekey"))))) 
  //         (J 
  //           (P0 
  //             (R2 REq 
  //                 (R0 (E0 (ESym "lo_suppkey"))) 
  //                 (R0 (E0 (ESym "s_suppkey"))))) 
  //           (Q0 (TSymbol "supplier")) 
  //           (Q0 (TSymbol "lineorder"))) 
  //         (Q0 (TSymbol "date"))) 
  std::cout << "Delete: (Q1 \n  (QGroup \n    [(ESym \"tmpSym0\",E0 (NAggr AggrSum (E0 (ESym \"lo_revenue\")))),\n     (ESym \"d_year\",E0 (NAggr AggrFirst (E0 (ESym \"d_year\")))),\n     (ESym \"p_brand1\",E0 (NAggr AggrFirst (E0 (ESym \"p_brand1\"))))] \n    [E0 (ESym \"d_year\"),E0 (ESym \"p_brand1\")]) \n  (S \n    (P2 \n      PAnd \n      (P2 \n        PAnd \n        (P0 \n          (R2 RLike \n              (R0 (E0 (ESym \"s_region\"))) \n              (R0 (E0 (EString \"ASIA\"))))) \n        (P0 \n          (R2 RLe \n              (R0 (E0 (EString \"MFGR#2221\"))) \n              (R0 (E0 (ESym \"p_brand1\")))))) \n      (P0 \n        (R2 RLe \n            (R0 (E0 (ESym \"p_brand1\"))) \n            (R0 (E0 (EString \"MFGR#2228\")))))) \n    (J \n      (P0 \n        (R2 REq \n            (R0 (E0 (ESym \"lo_partkey\"))) \n            (R0 (E0 (ESym \"p_partkey\"))))) \n      (J \n        (P0 \n          (R2 REq \n              (R0 (E0 (ESym \"lo_orderdate\"))) \n              (R0 (E0 (ESym \"d_datekey\"))))) \n        (J \n          (P0 \n            (R2 REq \n                (R0 (E0 (ESym \"lo_suppkey\"))) \n                (R0 (E0 (ESym \"s_suppkey\"))))) \n          (Q0 (TSymbol \"supplier\")) \n          (Q0 (TSymbol \"lineorder\"))) \n        (Q0 (TSymbol \"date\"))) \n      (Q0 (TSymbol \"part\")))))" << std::endl;
  deleteFile("/tmp/fluidb_store/data118.dat");
  // Delete: (S 
  //   (P2 
  //     PAnd 
  //     (P2 
  //       PAnd 
  //       (P0 
  //         (R2 RLike 
  //             (R0 (E0 (ESym "s_region"))) 
  //             (R0 (E0 (EString "ASIA"))))) 
  //       (P0 
  //         (R2 RLe 
  //             (R0 (E0 (EString "MFGR#2221"))) 
  //             (R0 (E0 (ESym "p_brand1")))))) 
  //     (P0 
  //       (R2 RLe 
  //           (R0 (E0 (ESym "p_brand1"))) 
  //           (R0 (E0 (EString "MFGR#2228")))))) 
  //   (J 
  //     (P0 
  //       (R2 REq 
  //           (R0 (E0 (ESym "lo_partkey"))) 
  //           (R0 (E0 (ESym "p_partkey"))))) 
  //     (J 
  //       (P0 
  //         (R2 REq 
  //             (R0 (E0 (ESym "lo_orderdate"))) 
  //             (R0 (E0 (ESym "d_datekey"))))) 
  //       (J 
  //         (P0 
  //           (R2 REq 
  //               (R0 (E0 (ESym "lo_suppkey"))) 
  //               (R0 (E0 (ESym "s_suppkey"))))) 
  //         (Q0 (TSymbol "supplier")) 
  //         (Q0 (TSymbol "lineorder"))) 
  //       (Q0 (TSymbol "date"))) 
  std::cout << "Delete: (S \n  (P2 \n    PAnd \n    (P2 \n      PAnd \n      (P0 \n        (R2 RLike \n            (R0 (E0 (ESym \"s_region\"))) \n            (R0 (E0 (EString \"ASIA\"))))) \n      (P0 \n        (R2 RLe \n            (R0 (E0 (EString \"MFGR#2221\"))) \n            (R0 (E0 (ESym \"p_brand1\")))))) \n    (P0 \n      (R2 RLe \n          (R0 (E0 (ESym \"p_brand1\"))) \n          (R0 (E0 (EString \"MFGR#2228\")))))) \n  (J \n    (P0 \n      (R2 REq \n          (R0 (E0 (ESym \"lo_partkey\"))) \n          (R0 (E0 (ESym \"p_partkey\"))))) \n    (J \n      (P0 \n        (R2 REq \n            (R0 (E0 (ESym \"lo_orderdate\"))) \n            (R0 (E0 (ESym \"d_datekey\"))))) \n      (J \n        (P0 \n          (R2 REq \n              (R0 (E0 (ESym \"lo_suppkey\"))) \n              (R0 (E0 (ESym \"s_suppkey\"))))) \n        (Q0 (TSymbol \"supplier\")) \n        (Q0 (TSymbol \"lineorder\"))) \n      (Q0 (TSymbol \"date\"))) \n    (Q0 (TSymbol \"part\"))))" << std::endl;
  deleteFile("/tmp/fluidb_store/data92.dat");
  // Delete: (S 
  //   (P1 
  //     PNot 
  //     (P2 
  //       PAnd 
  //       (P0 
  //         (R2 RLe 
  //             (R0 (E0 (EString "MFGR#2221"))) 
  //             (R0 (E0 (ESym "p_brand1"))))) 
  //       (P0 
  //         (R2 RLe 
  //             (R0 (E0 (ESym "p_brand1"))) 
  //             (R0 (E0 (EString "MFGR#2228"))))))) 
  //   (J 
  //     (P0 
  //       (R2 REq 
  //           (R0 (E0 (ESym "lo_partkey"))) 
  //           (R0 (E0 (ESym "p_partkey"))))) 
  //     (S 
  //       (P0 
  //         (R2 RLike 
  //             (R0 (E0 (ESym "s_region"))) 
  //             (R0 (E0 (EString "ASIA"))))) 
  //       (J 
  //         (P0 
  //           (R2 REq 
  //               (R0 (E0 (ESym "lo_orderdate"))) 
  //               (R0 (E0 (ESym "d_datekey"))))) 
  //         (J 
  //           (P0 
  //             (R2 REq 
  //                 (R0 (E0 (ESym "lo_suppkey"))) 
  //                 (R0 (E0 (ESym "s_suppkey"))))) 
  //           (Q0 (TSymbol "supplier")) 
  //           (Q0 (TSymbol "lineorder"))) 
  //         (Q0 (TSymbol "date")))) 
  std::cout << "Delete: (S \n  (P1 \n    PNot \n    (P2 \n      PAnd \n      (P0 \n        (R2 RLe \n            (R0 (E0 (EString \"MFGR#2221\"))) \n            (R0 (E0 (ESym \"p_brand1\"))))) \n      (P0 \n        (R2 RLe \n            (R0 (E0 (ESym \"p_brand1\"))) \n            (R0 (E0 (EString \"MFGR#2228\"))))))) \n  (J \n    (P0 \n      (R2 REq \n          (R0 (E0 (ESym \"lo_partkey\"))) \n          (R0 (E0 (ESym \"p_partkey\"))))) \n    (S \n      (P0 \n        (R2 RLike \n            (R0 (E0 (ESym \"s_region\"))) \n            (R0 (E0 (EString \"ASIA\"))))) \n      (J \n        (P0 \n          (R2 REq \n              (R0 (E0 (ESym \"lo_orderdate\"))) \n              (R0 (E0 (ESym \"d_datekey\"))))) \n        (J \n          (P0 \n            (R2 REq \n                (R0 (E0 (ESym \"lo_suppkey\"))) \n                (R0 (E0 (ESym \"s_suppkey\"))))) \n          (Q0 (TSymbol \"supplier\")) \n          (Q0 (TSymbol \"lineorder\"))) \n        (Q0 (TSymbol \"date\")))) \n    (Q0 (TSymbol \"part\"))))" << std::endl;
  deleteFile("/tmp/fluidb_store/data113.dat");
  // ForwardTrigger: (Just 
  //   (Right 
  //     [
  //      QSel 
  //         (P0 
  //           (R2 RLike 
  //               (R0 (E0 (ESym "s_region"))) 
  //               (R0 (E0 (EString "EUROPE")))))
  std::cout << "ForwardTrigger: (Just \n  (Right \n    [\n     QSel \n        (P0 \n          (R2 RLike \n              (R0 (E0 (ESym \"s_region\"))) \n              (R0 (E0 (EString \"EUROPE\")))))\n    ]))" << std::endl;
  {
    auto operation = mkSelect<CallableClass8>(Just<const std::string>("/tmp/fluidb_store/data122.dat"), Just<const std::string>("/tmp/fluidb_store/data123.dat"), "/tmp/fluidb_store/data41.dat");
    operation.run();
    operation.print_output(10);
  }
  // Delete: (S 
  //   (P1 
  //     PNot 
  //     (P0 
  //       (R2 RLike 
  //           (R0 (E0 (ESym "s_region"))) 
  //           (R0 (E0 (EString "EUROPE")))))) 
  //   (J 
  //     (P0 
  //       (R2 REq 
  //           (R0 (E0 (ESym "lo_orderdate"))) 
  //           (R0 (E0 (ESym "d_datekey"))))) 
  //     (J 
  //       (P0 
  //         (R2 REq 
  //             (R0 (E0 (ESym "lo_suppkey"))) 
  //             (R0 (E0 (ESym "s_suppkey"))))) 
  //       (Q0 (TSymbol "supplier")) 
  //       (Q0 (TSymbol "lineorder"))) 
  std::cout << "Delete: (S \n  (P1 \n    PNot \n    (P0 \n      (R2 RLike \n          (R0 (E0 (ESym \"s_region\"))) \n          (R0 (E0 (EString \"EUROPE\")))))) \n  (J \n    (P0 \n      (R2 REq \n          (R0 (E0 (ESym \"lo_orderdate\"))) \n          (R0 (E0 (ESym \"d_datekey\"))))) \n    (J \n      (P0 \n        (R2 REq \n            (R0 (E0 (ESym \"lo_suppkey\"))) \n            (R0 (E0 (ESym \"s_suppkey\"))))) \n      (Q0 (TSymbol \"supplier\")) \n      (Q0 (TSymbol \"lineorder\"))) \n    (Q0 (TSymbol \"date\"))))" << std::endl;
  deleteFile("/tmp/fluidb_store/data123.dat");
  // Delete: (Q2 
  //   (QRightAntijoin 
  //     (P0 
  //       (R2 REq 
  //           (R0 (E0 (ESym "lo_partkey"))) 
  //           (R0 (E0 (ESym "p_partkey")))))) 
  //   (J 
  //     (P0 
  //       (R2 REq 
  //           (R0 (E0 (ESym "lo_orderdate"))) 
  //           (R0 (E0 (ESym "d_datekey"))))) 
  //     (S 
  //       (P0 
  //         (R2 RLike 
  //             (R0 (E0 (ESym "s_region"))) 
  //             (R0 (E0 (EString "ASIA"))))) 
  //       (J 
  //         (P0 
  //           (R2 REq 
  //               (R0 (E0 (ESym "lo_suppkey"))) 
  //               (R0 (E0 (ESym "s_suppkey"))))) 
  //         (Q0 (TSymbol "supplier")) 
  //         (Q0 (TSymbol "lineorder")))) 
  //     (Q0 (TSymbol "date"))) 
  std::cout << "Delete: (Q2 \n  (QRightAntijoin \n    (P0 \n      (R2 REq \n          (R0 (E0 (ESym \"lo_partkey\"))) \n          (R0 (E0 (ESym \"p_partkey\")))))) \n  (J \n    (P0 \n      (R2 REq \n          (R0 (E0 (ESym \"lo_orderdate\"))) \n          (R0 (E0 (ESym \"d_datekey\"))))) \n    (S \n      (P0 \n        (R2 RLike \n            (R0 (E0 (ESym \"s_region\"))) \n            (R0 (E0 (EString \"ASIA\"))))) \n      (J \n        (P0 \n          (R2 REq \n              (R0 (E0 (ESym \"lo_suppkey\"))) \n              (R0 (E0 (ESym \"s_suppkey\"))))) \n        (Q0 (TSymbol \"supplier\")) \n        (Q0 (TSymbol \"lineorder\")))) \n    (Q0 (TSymbol \"date\"))) \n  (Q0 (TSymbol \"part\")))" << std::endl;
  deleteFile("/tmp/fluidb_store/data110.dat");
  // Delete: (J 
  //   (P0 
  //     (R2 REq (R0 (E0 (ESym "lo_partkey"))) (R0 (E0 (ESym "p_partkey"))))) 
  //   (J 
  //     (P0 
  //       (R2 REq 
  //           (R0 (E0 (ESym "lo_orderdate"))) 
  //           (R0 (E0 (ESym "d_datekey"))))) 
  //     (S 
  //       (P0 
  //         (R2 RLike 
  //             (R0 (E0 (ESym "s_region"))) 
  //             (R0 (E0 (EString "ASIA"))))) 
  //       (J 
  //         (P0 
  //           (R2 REq 
  //               (R0 (E0 (ESym "lo_suppkey"))) 
  //               (R0 (E0 (ESym "s_suppkey"))))) 
  //         (Q0 (TSymbol "supplier")) 
  //         (Q0 (TSymbol "lineorder")))) 
  //     (Q0 (TSymbol "date"))) 
  std::cout << "Delete: (J \n  (P0 \n    (R2 REq (R0 (E0 (ESym \"lo_partkey\"))) (R0 (E0 (ESym \"p_partkey\"))))) \n  (J \n    (P0 \n      (R2 REq \n          (R0 (E0 (ESym \"lo_orderdate\"))) \n          (R0 (E0 (ESym \"d_datekey\"))))) \n    (S \n      (P0 \n        (R2 RLike \n            (R0 (E0 (ESym \"s_region\"))) \n            (R0 (E0 (EString \"ASIA\"))))) \n      (J \n        (P0 \n          (R2 REq \n              (R0 (E0 (ESym \"lo_suppkey\"))) \n              (R0 (E0 (ESym \"s_suppkey\"))))) \n        (Q0 (TSymbol \"supplier\")) \n        (Q0 (TSymbol \"lineorder\")))) \n    (Q0 (TSymbol \"date\"))) \n  (Q0 (TSymbol \"part\")))" << std::endl;
  deleteFile("/tmp/fluidb_store/data109.dat");
  // ForwardTrigger: (Just 
  //   (Left 
  //     [
  //      QJoin 
  //         (P0 
  //           (R2 REq 
  //               (R0 (E0 (ESym "lo_partkey"))) 
  //               (R0 (E0 (ESym "p_partkey")))))
  std::cout << "ForwardTrigger: (Just \n  (Left \n    [\n     QJoin \n        (P0 \n          (R2 REq \n              (R0 (E0 (ESym \"lo_partkey\"))) \n              (R0 (E0 (ESym \"p_partkey\")))))\n    ]))" << std::endl;
  {
    auto operation = mkEquiJoin<CallableClass16, CallableClass18, CallableClass13>(Just<const std::string>("/tmp/fluidb_store/data137.dat"), Just<const std::string>("/tmp/fluidb_store/data136.dat"), Just<const std::string>("/tmp/fluidb_store/data138.dat"), "/tmp/fluidb_store/data122.dat", "/tmp/fluidb_store/data2.dat");
    operation.run();
    operation.print_output(10);
  }
  // Delete: (Q2 
  //   (QLeftAntijoin 
  //     (P0 
  //       (R2 REq 
  //           (R0 (E0 (ESym "lo_partkey"))) 
  //           (R0 (E0 (ESym "p_partkey")))))) 
  //   (J 
  //     (P0 
  //       (R2 REq 
  //           (R0 (E0 (ESym "lo_orderdate"))) 
  //           (R0 (E0 (ESym "d_datekey"))))) 
  //     (S 
  //       (P0 
  //         (R2 RLike 
  //             (R0 (E0 (ESym "s_region"))) 
  //             (R0 (E0 (EString "EUROPE"))))) 
  //       (J 
  //         (P0 
  //           (R2 REq 
  //               (R0 (E0 (ESym "lo_suppkey"))) 
  //               (R0 (E0 (ESym "s_suppkey"))))) 
  //         (Q0 (TSymbol "supplier")) 
  //         (Q0 (TSymbol "lineorder")))) 
  //     (Q0 (TSymbol "date"))) 
  std::cout << "Delete: (Q2 \n  (QLeftAntijoin \n    (P0 \n      (R2 REq \n          (R0 (E0 (ESym \"lo_partkey\"))) \n          (R0 (E0 (ESym \"p_partkey\")))))) \n  (J \n    (P0 \n      (R2 REq \n          (R0 (E0 (ESym \"lo_orderdate\"))) \n          (R0 (E0 (ESym \"d_datekey\"))))) \n    (S \n      (P0 \n        (R2 RLike \n            (R0 (E0 (ESym \"s_region\"))) \n            (R0 (E0 (EString \"EUROPE\"))))) \n      (J \n        (P0 \n          (R2 REq \n              (R0 (E0 (ESym \"lo_suppkey\"))) \n              (R0 (E0 (ESym \"s_suppkey\"))))) \n        (Q0 (TSymbol \"supplier\")) \n        (Q0 (TSymbol \"lineorder\")))) \n    (Q0 (TSymbol \"date\"))) \n  (Q0 (TSymbol \"part\")))" << std::endl;
  deleteFile("/tmp/fluidb_store/data136.dat");
  std::cout << "Delete: (Q0 (TSymbol \"part\"))" << std::endl;
  deleteFile("/tmp/fluidb_store/data2.dat");
  // Delete: (S 
  //   (P0 
  //     (R2 RLike (R0 (E0 (ESym "s_region"))) (R0 (E0 (EString "EUROPE"))))) 
  //   (J 
  //     (P0 
  //       (R2 REq 
  //           (R0 (E0 (ESym "lo_orderdate"))) 
  //           (R0 (E0 (ESym "d_datekey"))))) 
  //     (J 
  //       (P0 
  //         (R2 REq 
  //             (R0 (E0 (ESym "lo_suppkey"))) 
  //             (R0 (E0 (ESym "s_suppkey"))))) 
  //       (Q0 (TSymbol "supplier")) 
  //       (Q0 (TSymbol "lineorder"))) 
  std::cout << "Delete: (S \n  (P0 \n    (R2 RLike (R0 (E0 (ESym \"s_region\"))) (R0 (E0 (EString \"EUROPE\"))))) \n  (J \n    (P0 \n      (R2 REq \n          (R0 (E0 (ESym \"lo_orderdate\"))) \n          (R0 (E0 (ESym \"d_datekey\"))))) \n    (J \n      (P0 \n        (R2 REq \n            (R0 (E0 (ESym \"lo_suppkey\"))) \n            (R0 (E0 (ESym \"s_suppkey\"))))) \n      (Q0 (TSymbol \"supplier\")) \n      (Q0 (TSymbol \"lineorder\"))) \n    (Q0 (TSymbol \"date\"))))" << std::endl;
  deleteFile("/tmp/fluidb_store/data122.dat");
  // ForwardTrigger: (Just 
  //   (Right 
  //     [
  //      QSel 
  //         (P0 
  //           (R2 RLike 
  //               (R0 (E0 (ESym "p_brand1"))) 
  //               (R0 (E0 (EString "MFGR#2221")))))
  std::cout << "ForwardTrigger: (Just \n  (Right \n    [\n     QSel \n        (P0 \n          (R2 RLike \n              (R0 (E0 (ESym \"p_brand1\"))) \n              (R0 (E0 (EString \"MFGR#2221\")))))\n    ]))" << std::endl;
  {
    auto operation = mkSelect<CallableClass20>(Just<const std::string>("/tmp/fluidb_store/data120.dat"), Just<const std::string>("/tmp/fluidb_store/data141.dat"), "/tmp/fluidb_store/data137.dat");
    operation.run();
    operation.print_output(10);
  }
  // ForwardTrigger: (Just 
  //   (Right 
  //     [
  //      QGroup 
  //         [(ESym "tmpSym0",E0 (NAggr AggrSum (E0 (ESym "lo_revenue")))),
  //          (ESym "d_year",E0 (NAggr AggrFirst (E0 (ESym "d_year")))),
  //          (ESym "p_brand1",E0 (NAggr AggrFirst (E0 (ESym "p_brand1"))))] 
  //         [E0 (ESym "d_year"),E0 (ESym "p_brand1")]
  std::cout << "ForwardTrigger: (Just \n  (Right \n    [\n     QGroup \n        [(ESym \"tmpSym0\",E0 (NAggr AggrSum (E0 (ESym \"lo_revenue\")))),\n         (ESym \"d_year\",E0 (NAggr AggrFirst (E0 (ESym \"d_year\")))),\n         (ESym \"p_brand1\",E0 (NAggr AggrFirst (E0 (ESym \"p_brand1\"))))] \n        [E0 (ESym \"d_year\"),E0 (ESym \"p_brand1\")]\n    ]))" << std::endl;
  {
    auto operation = mkAggregation<CallableClass27, CallableClass29>(Just<const std::string>("/tmp/fluidb_store/data146.dat"), Just<const std::string>("/tmp/fluidb_store/data120.dat"), "/tmp/fluidb_store/data120.dat");
    operation.run();
    operation.print_output(10);
  }
  std::cout << "ForwardTrigger: (Just (Right [QSort [E0 (ESym \"d_year\"),E0 (ESym \"p_brand1\")]]))" << std::endl;
  {
    auto operation = mkSort<CallableClass31>(Just<const std::string>("/tmp/fluidb_store/data147.dat"), Just<const std::string>("/tmp/fluidb_store/data146.dat"), "/tmp/fluidb_store/data146.dat");
    operation.run();
    operation.print_output(10);
  }
  report_counters();
  return 0;
}
