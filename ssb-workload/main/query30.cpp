#include <array>

#include <string>

#include <codegen.hh>
class Record28 {
 public:
  Record28(unsigned __sortElem0, fluidb_string<10> __sortElem1) : sortElem0(__sortElem0), sortElem1(__sortElem1)
  {
  }
  Record28() 
  {
  }
  std::string show() const{
    std::stringstream o;
    o << sortElem0 << " | " << arrToString(sortElem1);
    return o.str();
  }
  bool operator <(const Record28& otherRec) const{
    return (otherRec.sortElem0 < sortElem0 && otherRec.sortElem1 < sortElem1);
  }
  bool operator ==(const Record28& otherRec) const{
    return (otherRec.sortElem0 == sortElem0 && otherRec.sortElem1 == sortElem1);
  }
  bool operator !=(const Record28& otherRec) const{
    return (otherRec.sortElem0 != sortElem0 || otherRec.sortElem1 != sortElem1);
  }
  unsigned sortElem0;
  fluidb_string<10> sortElem1;
 private:
};


class Record2 {
 public:
  Record2(unsigned __sym__0___45_5856119524029611077, fluidb_string<25> __sym__0___45_6117756446690137488, fluidb_string<40> __sym__0___45_1224041454770943330, fluidb_string<16> __sym__0__3812587929888833564, fluidb_string<16> __sym__0___45_8008422244145826406, fluidb_string<13> __sym__0___45_4939322251048870433, fluidb_string<15> __sym__0__9053752194642805744, unsigned __sym__0__7640136232660398972, int __sym__0__3289943100803186450, unsigned __sym__0___45_5627701903624601606, unsigned __sym__0___45_863299618022773480, unsigned __sym__0__8136723066761439923, unsigned __sym__0___45_8900710125615980474, fluidb_string<21> __sym__0__3462758906763983155, unsigned __sym__0__3593248492832864765, fluidb_string<10> __sym__0__570789152911192442, unsigned __sym__0___45_898962213167368918, double __sym__0__8374566300773412732, unsigned __sym__0__3427059227198728358, double __sym__0___45_6183981215901482044, unsigned __sym__0__5401582859916018176, unsigned __sym__0___45_5742182270645980233, double __sym__0___45_6866160564727197111, fluidb_string<13> __sym__0__5391279297800068881, unsigned __sym__0__6547894395141806496, fluidb_string<18> __sym__0___45_3537255481618975984, fluidb_string<9> __sym__0___45_489602595012032102, fluidb_string<9> __sym__0___45_4289355322834357343, unsigned __sym__0__3088708723790424355, unsigned __sym__0__7661335306996867761, fluidb_string<7> __sym__0__5988258660856233160, unsigned __sym__0__9055435109332708863, unsigned __sym__0___45_8293017417291819416, unsigned __sym__0__6710199602869345088, unsigned __sym__0___45_6808136983507392814, unsigned __sym__0__4732268644213463873, fluidb_string<15> __sym__0___45_9054202570868277068, fluidb_string<2> __sym__0___45_2078724704519105348, fluidb_string<2> __sym__0__1821380049868269517, fluidb_string<2> __sym__0__9082608366399799653, fluidb_string<2> __sym__0__3719923678451811915, unsigned __sym__0___45_4532026337430972310, fluidb_string<55> __sym__0__5967878085860026810, fluidb_string<25> __sym__0__4437551601976402253, fluidb_string<7> __sym__0___45_8824352318197405717, fluidb_string<10> __sym__0__462272293144630813, fluidb_string<11> __sym__0__6951672169272331993, fluidb_string<25> __sym__0__8001753553028231903, unsigned __sym__0__7959165797094177348, fluidb_string<10> __sym__0__3796606591825283389) : sym__0___45_5856119524029611077(__sym__0___45_5856119524029611077), sym__0___45_6117756446690137488(__sym__0___45_6117756446690137488), sym__0___45_1224041454770943330(__sym__0___45_1224041454770943330), sym__0__3812587929888833564(__sym__0__3812587929888833564), sym__0___45_8008422244145826406(__sym__0___45_8008422244145826406), sym__0___45_4939322251048870433(__sym__0___45_4939322251048870433), sym__0__9053752194642805744(__sym__0__9053752194642805744), sym__0__7640136232660398972(__sym__0__7640136232660398972), sym__0__3289943100803186450(__sym__0__3289943100803186450), sym__0___45_5627701903624601606(__sym__0___45_5627701903624601606), sym__0___45_863299618022773480(__sym__0___45_863299618022773480), sym__0__8136723066761439923(__sym__0__8136723066761439923), sym__0___45_8900710125615980474(__sym__0___45_8900710125615980474), sym__0__3462758906763983155(__sym__0__3462758906763983155), sym__0__3593248492832864765(__sym__0__3593248492832864765), sym__0__570789152911192442(__sym__0__570789152911192442), sym__0___45_898962213167368918(__sym__0___45_898962213167368918), sym__0__8374566300773412732(__sym__0__8374566300773412732), sym__0__3427059227198728358(__sym__0__3427059227198728358), sym__0___45_6183981215901482044(__sym__0___45_6183981215901482044), sym__0__5401582859916018176(__sym__0__5401582859916018176), sym__0___45_5742182270645980233(__sym__0___45_5742182270645980233), sym__0___45_6866160564727197111(__sym__0___45_6866160564727197111), sym__0__5391279297800068881(__sym__0__5391279297800068881), sym__0__6547894395141806496(__sym__0__6547894395141806496), sym__0___45_3537255481618975984(__sym__0___45_3537255481618975984), sym__0___45_489602595012032102(__sym__0___45_489602595012032102), sym__0___45_4289355322834357343(__sym__0___45_4289355322834357343), sym__0__3088708723790424355(__sym__0__3088708723790424355), sym__0__7661335306996867761(__sym__0__7661335306996867761), sym__0__5988258660856233160(__sym__0__5988258660856233160), sym__0__9055435109332708863(__sym__0__9055435109332708863), sym__0___45_8293017417291819416(__sym__0___45_8293017417291819416), sym__0__6710199602869345088(__sym__0__6710199602869345088), sym__0___45_6808136983507392814(__sym__0___45_6808136983507392814), sym__0__4732268644213463873(__sym__0__4732268644213463873), sym__0___45_9054202570868277068(__sym__0___45_9054202570868277068), sym__0___45_2078724704519105348(__sym__0___45_2078724704519105348), sym__0__1821380049868269517(__sym__0__1821380049868269517), sym__0__9082608366399799653(__sym__0__9082608366399799653), sym__0__3719923678451811915(__sym__0__3719923678451811915), sym__0___45_4532026337430972310(__sym__0___45_4532026337430972310), sym__0__5967878085860026810(__sym__0__5967878085860026810), sym__0__4437551601976402253(__sym__0__4437551601976402253), sym__0___45_8824352318197405717(__sym__0___45_8824352318197405717), sym__0__462272293144630813(__sym__0__462272293144630813), sym__0__6951672169272331993(__sym__0__6951672169272331993), sym__0__8001753553028231903(__sym__0__8001753553028231903), sym__0__7959165797094177348(__sym__0__7959165797094177348), sym__0__3796606591825283389(__sym__0__3796606591825283389)
  {
  }
  Record2() 
  {
  }
  std::string show() const{
    std::stringstream o;
    o << sym__0___45_5856119524029611077 << " | " << arrToString(sym__0___45_6117756446690137488) << " | " << arrToString(sym__0___45_1224041454770943330) << " | " << arrToString(sym__0__3812587929888833564) << " | " << arrToString(sym__0___45_8008422244145826406) << " | " << arrToString(sym__0___45_4939322251048870433) << " | " << arrToString(sym__0__9053752194642805744) << " | " << sym__0__7640136232660398972 << " | " << sym__0__3289943100803186450 << " | " << sym__0___45_5627701903624601606 << " | " << sym__0___45_863299618022773480 << " | " << sym__0__8136723066761439923 << " | " << sym__0___45_8900710125615980474 << " | " << arrToString(sym__0__3462758906763983155) << " | " << sym__0__3593248492832864765 << " | " << arrToString(sym__0__570789152911192442) << " | " << sym__0___45_898962213167368918 << " | " << sym__0__8374566300773412732 << " | " << sym__0__3427059227198728358 << " | " << sym__0___45_6183981215901482044 << " | " << sym__0__5401582859916018176 << " | " << sym__0___45_5742182270645980233 << " | " << sym__0___45_6866160564727197111 << " | " << arrToString(sym__0__5391279297800068881) << " | " << sym__0__6547894395141806496 << " | " << arrToString(sym__0___45_3537255481618975984) << " | " << arrToString(sym__0___45_489602595012032102) << " | " << arrToString(sym__0___45_4289355322834357343) << " | " << sym__0__3088708723790424355 << " | " << sym__0__7661335306996867761 << " | " << arrToString(sym__0__5988258660856233160) << " | " << sym__0__9055435109332708863 << " | " << sym__0___45_8293017417291819416 << " | " << sym__0__6710199602869345088 << " | " << sym__0___45_6808136983507392814 << " | " << sym__0__4732268644213463873 << " | " << arrToString(sym__0___45_9054202570868277068) << " | " << arrToString(sym__0___45_2078724704519105348) << " | " << arrToString(sym__0__1821380049868269517) << " | " << arrToString(sym__0__9082608366399799653) << " | " << arrToString(sym__0__3719923678451811915) << " | " << sym__0___45_4532026337430972310 << " | " << arrToString(sym__0__5967878085860026810) << " | " << arrToString(sym__0__4437551601976402253) << " | " << arrToString(sym__0___45_8824352318197405717) << " | " << arrToString(sym__0__462272293144630813) << " | " << arrToString(sym__0__6951672169272331993) << " | " << arrToString(sym__0__8001753553028231903) << " | " << sym__0__7959165797094177348 << " | " << arrToString(sym__0__3796606591825283389);
    return o.str();
  }
  bool operator <(const Record2& otherRec) const{
    return (otherRec.sym__0___45_5856119524029611077 < sym__0___45_5856119524029611077 && (otherRec.sym__0___45_6117756446690137488 < sym__0___45_6117756446690137488 && (otherRec.sym__0___45_1224041454770943330 < sym__0___45_1224041454770943330 && (otherRec.sym__0__3812587929888833564 < sym__0__3812587929888833564 && (otherRec.sym__0___45_8008422244145826406 < sym__0___45_8008422244145826406 && (otherRec.sym__0___45_4939322251048870433 < sym__0___45_4939322251048870433 && (otherRec.sym__0__9053752194642805744 < sym__0__9053752194642805744 && (otherRec.sym__0__7640136232660398972 < sym__0__7640136232660398972 && (otherRec.sym__0__3289943100803186450 < sym__0__3289943100803186450 && (otherRec.sym__0___45_5627701903624601606 < sym__0___45_5627701903624601606 && (otherRec.sym__0___45_863299618022773480 < sym__0___45_863299618022773480 && (otherRec.sym__0__8136723066761439923 < sym__0__8136723066761439923 && (otherRec.sym__0___45_8900710125615980474 < sym__0___45_8900710125615980474 && (otherRec.sym__0__3462758906763983155 < sym__0__3462758906763983155 && (otherRec.sym__0__3593248492832864765 < sym__0__3593248492832864765 && (otherRec.sym__0__570789152911192442 < sym__0__570789152911192442 && (otherRec.sym__0___45_898962213167368918 < sym__0___45_898962213167368918 && (otherRec.sym__0__8374566300773412732 < sym__0__8374566300773412732 && (otherRec.sym__0__3427059227198728358 < sym__0__3427059227198728358 && (otherRec.sym__0___45_6183981215901482044 < sym__0___45_6183981215901482044 && (otherRec.sym__0__5401582859916018176 < sym__0__5401582859916018176 && (otherRec.sym__0___45_5742182270645980233 < sym__0___45_5742182270645980233 && (otherRec.sym__0___45_6866160564727197111 < sym__0___45_6866160564727197111 && (otherRec.sym__0__5391279297800068881 < sym__0__5391279297800068881 && (otherRec.sym__0__6547894395141806496 < sym__0__6547894395141806496 && (otherRec.sym__0___45_3537255481618975984 < sym__0___45_3537255481618975984 && (otherRec.sym__0___45_489602595012032102 < sym__0___45_489602595012032102 && (otherRec.sym__0___45_4289355322834357343 < sym__0___45_4289355322834357343 && (otherRec.sym__0__3088708723790424355 < sym__0__3088708723790424355 && (otherRec.sym__0__7661335306996867761 < sym__0__7661335306996867761 && (otherRec.sym__0__5988258660856233160 < sym__0__5988258660856233160 && (otherRec.sym__0__9055435109332708863 < sym__0__9055435109332708863 && (otherRec.sym__0___45_8293017417291819416 < sym__0___45_8293017417291819416 && (otherRec.sym__0__6710199602869345088 < sym__0__6710199602869345088 && (otherRec.sym__0___45_6808136983507392814 < sym__0___45_6808136983507392814 && (otherRec.sym__0__4732268644213463873 < sym__0__4732268644213463873 && (otherRec.sym__0___45_9054202570868277068 < sym__0___45_9054202570868277068 && (otherRec.sym__0___45_2078724704519105348 < sym__0___45_2078724704519105348 && (otherRec.sym__0__1821380049868269517 < sym__0__1821380049868269517 && (otherRec.sym__0__9082608366399799653 < sym__0__9082608366399799653 && (otherRec.sym__0__3719923678451811915 < sym__0__3719923678451811915 && (otherRec.sym__0___45_4532026337430972310 < sym__0___45_4532026337430972310 && (otherRec.sym__0__5967878085860026810 < sym__0__5967878085860026810 && (otherRec.sym__0__4437551601976402253 < sym__0__4437551601976402253 && (otherRec.sym__0___45_8824352318197405717 < sym__0___45_8824352318197405717 && (otherRec.sym__0__462272293144630813 < sym__0__462272293144630813 && (otherRec.sym__0__6951672169272331993 < sym__0__6951672169272331993 && (otherRec.sym__0__8001753553028231903 < sym__0__8001753553028231903 && (otherRec.sym__0__7959165797094177348 < sym__0__7959165797094177348 && otherRec.sym__0__3796606591825283389 < sym__0__3796606591825283389)))))))))))))))))))))))))))))))))))))))))))))))));
  }
  bool operator ==(const Record2& otherRec) const{
    return (otherRec.sym__0___45_5856119524029611077 == sym__0___45_5856119524029611077 && (otherRec.sym__0___45_6117756446690137488 == sym__0___45_6117756446690137488 && (otherRec.sym__0___45_1224041454770943330 == sym__0___45_1224041454770943330 && (otherRec.sym__0__3812587929888833564 == sym__0__3812587929888833564 && (otherRec.sym__0___45_8008422244145826406 == sym__0___45_8008422244145826406 && (otherRec.sym__0___45_4939322251048870433 == sym__0___45_4939322251048870433 && (otherRec.sym__0__9053752194642805744 == sym__0__9053752194642805744 && (otherRec.sym__0__7640136232660398972 == sym__0__7640136232660398972 && (otherRec.sym__0__3289943100803186450 == sym__0__3289943100803186450 && (otherRec.sym__0___45_5627701903624601606 == sym__0___45_5627701903624601606 && (otherRec.sym__0___45_863299618022773480 == sym__0___45_863299618022773480 && (otherRec.sym__0__8136723066761439923 == sym__0__8136723066761439923 && (otherRec.sym__0___45_8900710125615980474 == sym__0___45_8900710125615980474 && (otherRec.sym__0__3462758906763983155 == sym__0__3462758906763983155 && (otherRec.sym__0__3593248492832864765 == sym__0__3593248492832864765 && (otherRec.sym__0__570789152911192442 == sym__0__570789152911192442 && (otherRec.sym__0___45_898962213167368918 == sym__0___45_898962213167368918 && (otherRec.sym__0__8374566300773412732 == sym__0__8374566300773412732 && (otherRec.sym__0__3427059227198728358 == sym__0__3427059227198728358 && (otherRec.sym__0___45_6183981215901482044 == sym__0___45_6183981215901482044 && (otherRec.sym__0__5401582859916018176 == sym__0__5401582859916018176 && (otherRec.sym__0___45_5742182270645980233 == sym__0___45_5742182270645980233 && (otherRec.sym__0___45_6866160564727197111 == sym__0___45_6866160564727197111 && (otherRec.sym__0__5391279297800068881 == sym__0__5391279297800068881 && (otherRec.sym__0__6547894395141806496 == sym__0__6547894395141806496 && (otherRec.sym__0___45_3537255481618975984 == sym__0___45_3537255481618975984 && (otherRec.sym__0___45_489602595012032102 == sym__0___45_489602595012032102 && (otherRec.sym__0___45_4289355322834357343 == sym__0___45_4289355322834357343 && (otherRec.sym__0__3088708723790424355 == sym__0__3088708723790424355 && (otherRec.sym__0__7661335306996867761 == sym__0__7661335306996867761 && (otherRec.sym__0__5988258660856233160 == sym__0__5988258660856233160 && (otherRec.sym__0__9055435109332708863 == sym__0__9055435109332708863 && (otherRec.sym__0___45_8293017417291819416 == sym__0___45_8293017417291819416 && (otherRec.sym__0__6710199602869345088 == sym__0__6710199602869345088 && (otherRec.sym__0___45_6808136983507392814 == sym__0___45_6808136983507392814 && (otherRec.sym__0__4732268644213463873 == sym__0__4732268644213463873 && (otherRec.sym__0___45_9054202570868277068 == sym__0___45_9054202570868277068 && (otherRec.sym__0___45_2078724704519105348 == sym__0___45_2078724704519105348 && (otherRec.sym__0__1821380049868269517 == sym__0__1821380049868269517 && (otherRec.sym__0__9082608366399799653 == sym__0__9082608366399799653 && (otherRec.sym__0__3719923678451811915 == sym__0__3719923678451811915 && (otherRec.sym__0___45_4532026337430972310 == sym__0___45_4532026337430972310 && (otherRec.sym__0__5967878085860026810 == sym__0__5967878085860026810 && (otherRec.sym__0__4437551601976402253 == sym__0__4437551601976402253 && (otherRec.sym__0___45_8824352318197405717 == sym__0___45_8824352318197405717 && (otherRec.sym__0__462272293144630813 == sym__0__462272293144630813 && (otherRec.sym__0__6951672169272331993 == sym__0__6951672169272331993 && (otherRec.sym__0__8001753553028231903 == sym__0__8001753553028231903 && (otherRec.sym__0__7959165797094177348 == sym__0__7959165797094177348 && otherRec.sym__0__3796606591825283389 == sym__0__3796606591825283389)))))))))))))))))))))))))))))))))))))))))))))))));
  }
  bool operator !=(const Record2& otherRec) const{
    return (otherRec.sym__0___45_5856119524029611077 != sym__0___45_5856119524029611077 || (otherRec.sym__0___45_6117756446690137488 != sym__0___45_6117756446690137488 || (otherRec.sym__0___45_1224041454770943330 != sym__0___45_1224041454770943330 || (otherRec.sym__0__3812587929888833564 != sym__0__3812587929888833564 || (otherRec.sym__0___45_8008422244145826406 != sym__0___45_8008422244145826406 || (otherRec.sym__0___45_4939322251048870433 != sym__0___45_4939322251048870433 || (otherRec.sym__0__9053752194642805744 != sym__0__9053752194642805744 || (otherRec.sym__0__7640136232660398972 != sym__0__7640136232660398972 || (otherRec.sym__0__3289943100803186450 != sym__0__3289943100803186450 || (otherRec.sym__0___45_5627701903624601606 != sym__0___45_5627701903624601606 || (otherRec.sym__0___45_863299618022773480 != sym__0___45_863299618022773480 || (otherRec.sym__0__8136723066761439923 != sym__0__8136723066761439923 || (otherRec.sym__0___45_8900710125615980474 != sym__0___45_8900710125615980474 || (otherRec.sym__0__3462758906763983155 != sym__0__3462758906763983155 || (otherRec.sym__0__3593248492832864765 != sym__0__3593248492832864765 || (otherRec.sym__0__570789152911192442 != sym__0__570789152911192442 || (otherRec.sym__0___45_898962213167368918 != sym__0___45_898962213167368918 || (otherRec.sym__0__8374566300773412732 != sym__0__8374566300773412732 || (otherRec.sym__0__3427059227198728358 != sym__0__3427059227198728358 || (otherRec.sym__0___45_6183981215901482044 != sym__0___45_6183981215901482044 || (otherRec.sym__0__5401582859916018176 != sym__0__5401582859916018176 || (otherRec.sym__0___45_5742182270645980233 != sym__0___45_5742182270645980233 || (otherRec.sym__0___45_6866160564727197111 != sym__0___45_6866160564727197111 || (otherRec.sym__0__5391279297800068881 != sym__0__5391279297800068881 || (otherRec.sym__0__6547894395141806496 != sym__0__6547894395141806496 || (otherRec.sym__0___45_3537255481618975984 != sym__0___45_3537255481618975984 || (otherRec.sym__0___45_489602595012032102 != sym__0___45_489602595012032102 || (otherRec.sym__0___45_4289355322834357343 != sym__0___45_4289355322834357343 || (otherRec.sym__0__3088708723790424355 != sym__0__3088708723790424355 || (otherRec.sym__0__7661335306996867761 != sym__0__7661335306996867761 || (otherRec.sym__0__5988258660856233160 != sym__0__5988258660856233160 || (otherRec.sym__0__9055435109332708863 != sym__0__9055435109332708863 || (otherRec.sym__0___45_8293017417291819416 != sym__0___45_8293017417291819416 || (otherRec.sym__0__6710199602869345088 != sym__0__6710199602869345088 || (otherRec.sym__0___45_6808136983507392814 != sym__0___45_6808136983507392814 || (otherRec.sym__0__4732268644213463873 != sym__0__4732268644213463873 || (otherRec.sym__0___45_9054202570868277068 != sym__0___45_9054202570868277068 || (otherRec.sym__0___45_2078724704519105348 != sym__0___45_2078724704519105348 || (otherRec.sym__0__1821380049868269517 != sym__0__1821380049868269517 || (otherRec.sym__0__9082608366399799653 != sym__0__9082608366399799653 || (otherRec.sym__0__3719923678451811915 != sym__0__3719923678451811915 || (otherRec.sym__0___45_4532026337430972310 != sym__0___45_4532026337430972310 || (otherRec.sym__0__5967878085860026810 != sym__0__5967878085860026810 || (otherRec.sym__0__4437551601976402253 != sym__0__4437551601976402253 || (otherRec.sym__0___45_8824352318197405717 != sym__0___45_8824352318197405717 || (otherRec.sym__0__462272293144630813 != sym__0__462272293144630813 || (otherRec.sym__0__6951672169272331993 != sym__0__6951672169272331993 || (otherRec.sym__0__8001753553028231903 != sym__0__8001753553028231903 || (otherRec.sym__0__7959165797094177348 != sym__0__7959165797094177348 || otherRec.sym__0__3796606591825283389 != sym__0__3796606591825283389)))))))))))))))))))))))))))))))))))))))))))))))));
  }
  unsigned sym__0___45_5856119524029611077;
  fluidb_string<25> sym__0___45_6117756446690137488;
  fluidb_string<40> sym__0___45_1224041454770943330;
  fluidb_string<16> sym__0__3812587929888833564;
  fluidb_string<16> sym__0___45_8008422244145826406;
  fluidb_string<13> sym__0___45_4939322251048870433;
  fluidb_string<15> sym__0__9053752194642805744;
  unsigned sym__0__7640136232660398972;
  int sym__0__3289943100803186450;
  unsigned sym__0___45_5627701903624601606;
  unsigned sym__0___45_863299618022773480;
  unsigned sym__0__8136723066761439923;
  unsigned sym__0___45_8900710125615980474;
  fluidb_string<21> sym__0__3462758906763983155;
  unsigned sym__0__3593248492832864765;
  fluidb_string<10> sym__0__570789152911192442;
  unsigned sym__0___45_898962213167368918;
  double sym__0__8374566300773412732;
  unsigned sym__0__3427059227198728358;
  double sym__0___45_6183981215901482044;
  unsigned sym__0__5401582859916018176;
  unsigned sym__0___45_5742182270645980233;
  double sym__0___45_6866160564727197111;
  fluidb_string<13> sym__0__5391279297800068881;
  unsigned sym__0__6547894395141806496;
  fluidb_string<18> sym__0___45_3537255481618975984;
  fluidb_string<9> sym__0___45_489602595012032102;
  fluidb_string<9> sym__0___45_4289355322834357343;
  unsigned sym__0__3088708723790424355;
  unsigned sym__0__7661335306996867761;
  fluidb_string<7> sym__0__5988258660856233160;
  unsigned sym__0__9055435109332708863;
  unsigned sym__0___45_8293017417291819416;
  unsigned sym__0__6710199602869345088;
  unsigned sym__0___45_6808136983507392814;
  unsigned sym__0__4732268644213463873;
  fluidb_string<15> sym__0___45_9054202570868277068;
  fluidb_string<2> sym__0___45_2078724704519105348;
  fluidb_string<2> sym__0__1821380049868269517;
  fluidb_string<2> sym__0__9082608366399799653;
  fluidb_string<2> sym__0__3719923678451811915;
  unsigned sym__0___45_4532026337430972310;
  fluidb_string<55> sym__0__5967878085860026810;
  fluidb_string<25> sym__0__4437551601976402253;
  fluidb_string<7> sym__0___45_8824352318197405717;
  fluidb_string<10> sym__0__462272293144630813;
  fluidb_string<11> sym__0__6951672169272331993;
  fluidb_string<25> sym__0__8001753553028231903;
  unsigned sym__0__7959165797094177348;
  fluidb_string<10> sym__0__3796606591825283389;
 private:
};


class Record4 {
 public:
  Record4(unsigned __sym__0__7178003535380331304, fluidb_string<55> __sym__0___45_7020257275696364520, fluidb_string<25> __sym__0___45_6307179734719967033, fluidb_string<7> __sym__0__4568304886257136061, fluidb_string<10> __sym__0___45_6291097039630000265, fluidb_string<11> __sym__0__551327770031967739, fluidb_string<25> __sym__0__3827696365022297353, unsigned __sym__0___45_1779543743759935870, fluidb_string<10> __sym__0__3752090135924368535) : sym__0__7178003535380331304(__sym__0__7178003535380331304), sym__0___45_7020257275696364520(__sym__0___45_7020257275696364520), sym__0___45_6307179734719967033(__sym__0___45_6307179734719967033), sym__0__4568304886257136061(__sym__0__4568304886257136061), sym__0___45_6291097039630000265(__sym__0___45_6291097039630000265), sym__0__551327770031967739(__sym__0__551327770031967739), sym__0__3827696365022297353(__sym__0__3827696365022297353), sym__0___45_1779543743759935870(__sym__0___45_1779543743759935870), sym__0__3752090135924368535(__sym__0__3752090135924368535)
  {
  }
  Record4() 
  {
  }
  std::string show() const{
    std::stringstream o;
    o << sym__0__7178003535380331304 << " | " << arrToString(sym__0___45_7020257275696364520) << " | " << arrToString(sym__0___45_6307179734719967033) << " | " << arrToString(sym__0__4568304886257136061) << " | " << arrToString(sym__0___45_6291097039630000265) << " | " << arrToString(sym__0__551327770031967739) << " | " << arrToString(sym__0__3827696365022297353) << " | " << sym__0___45_1779543743759935870 << " | " << arrToString(sym__0__3752090135924368535);
    return o.str();
  }
  bool operator <(const Record4& otherRec) const{
    return (otherRec.sym__0__7178003535380331304 < sym__0__7178003535380331304 && (otherRec.sym__0___45_7020257275696364520 < sym__0___45_7020257275696364520 && (otherRec.sym__0___45_6307179734719967033 < sym__0___45_6307179734719967033 && (otherRec.sym__0__4568304886257136061 < sym__0__4568304886257136061 && (otherRec.sym__0___45_6291097039630000265 < sym__0___45_6291097039630000265 && (otherRec.sym__0__551327770031967739 < sym__0__551327770031967739 && (otherRec.sym__0__3827696365022297353 < sym__0__3827696365022297353 && (otherRec.sym__0___45_1779543743759935870 < sym__0___45_1779543743759935870 && otherRec.sym__0__3752090135924368535 < sym__0__3752090135924368535))))))));
  }
  bool operator ==(const Record4& otherRec) const{
    return (otherRec.sym__0__7178003535380331304 == sym__0__7178003535380331304 && (otherRec.sym__0___45_7020257275696364520 == sym__0___45_7020257275696364520 && (otherRec.sym__0___45_6307179734719967033 == sym__0___45_6307179734719967033 && (otherRec.sym__0__4568304886257136061 == sym__0__4568304886257136061 && (otherRec.sym__0___45_6291097039630000265 == sym__0___45_6291097039630000265 && (otherRec.sym__0__551327770031967739 == sym__0__551327770031967739 && (otherRec.sym__0__3827696365022297353 == sym__0__3827696365022297353 && (otherRec.sym__0___45_1779543743759935870 == sym__0___45_1779543743759935870 && otherRec.sym__0__3752090135924368535 == sym__0__3752090135924368535))))))));
  }
  bool operator !=(const Record4& otherRec) const{
    return (otherRec.sym__0__7178003535380331304 != sym__0__7178003535380331304 || (otherRec.sym__0___45_7020257275696364520 != sym__0___45_7020257275696364520 || (otherRec.sym__0___45_6307179734719967033 != sym__0___45_6307179734719967033 || (otherRec.sym__0__4568304886257136061 != sym__0__4568304886257136061 || (otherRec.sym__0___45_6291097039630000265 != sym__0___45_6291097039630000265 || (otherRec.sym__0__551327770031967739 != sym__0__551327770031967739 || (otherRec.sym__0__3827696365022297353 != sym__0__3827696365022297353 || (otherRec.sym__0___45_1779543743759935870 != sym__0___45_1779543743759935870 || otherRec.sym__0__3752090135924368535 != sym__0__3752090135924368535))))))));
  }
  unsigned sym__0__7178003535380331304;
  fluidb_string<55> sym__0___45_7020257275696364520;
  fluidb_string<25> sym__0___45_6307179734719967033;
  fluidb_string<7> sym__0__4568304886257136061;
  fluidb_string<10> sym__0___45_6291097039630000265;
  fluidb_string<11> sym__0__551327770031967739;
  fluidb_string<25> sym__0__3827696365022297353;
  unsigned sym__0___45_1779543743759935870;
  fluidb_string<10> sym__0__3752090135924368535;
 private:
};


class Record12 {
 public:
  Record12(unsigned __sym__0__7069852625741277438, fluidb_string<25> __sym__0___45_2139184416220787303, fluidb_string<40> __sym__0__6834910062454089307, fluidb_string<16> __sym__0___45_673637979750308955, fluidb_string<16> __sym__0__7353040165187485943, fluidb_string<13> __sym__0___45_3600959643487303198, fluidb_string<15> __sym__0__1586920362281366553, unsigned __sym__0___45_565293263947163771, int __sym__0___45_843396218047479825, unsigned __sym__0___45_6341950231013217833, unsigned __sym__0__1045058483100812033, unsigned __sym__0__3789297121224398166, unsigned __sym__0__7633871876750507011, fluidb_string<21> __sym__0___45_1913197190575800618, unsigned __sym__0__5022607639284586068, fluidb_string<10> __sym__0___45_4537203481097655209, unsigned __sym__0___45_4177776814409117721, double __sym__0___45_1641792039791357051, unsigned __sym__0__9155042948135519075, double __sym__0___45_1524873931413302067, unsigned __sym__0__5123726051002722313, unsigned __sym__0___45_3964194374284396198, double __sym__0___45_3323287974231174848, fluidb_string<13> __sym__0___45_7635081431606838648, unsigned __sym__0__3374832300737452457, fluidb_string<18> __sym__0___45_2738400311900405319, fluidb_string<9> __sym__0__922566035134170359, fluidb_string<9> __sym__0___45_4970177704815948360, unsigned __sym__0__1953889797750115686, unsigned __sym__0__7036968840507665704, fluidb_string<7> __sym__0__2424422746197752657, unsigned __sym__0___45_899504608738992510, unsigned __sym__0__2199101055335955185, unsigned __sym__0__8162945309743176777, unsigned __sym__0__5658677538842948015, unsigned __sym__0___45_1804682623039322536, fluidb_string<15> __sym__0___45_4150473036734596643, fluidb_string<2> __sym__0___45_1494825655055665211, fluidb_string<2> __sym__0__7243345290037361860, fluidb_string<2> __sym__0___45_5621333005798540324, fluidb_string<2> __sym__0___45_6906996774260360338, unsigned __sym__0___45_6223982643952099801, fluidb_string<55> __sym__0___45_4582877986939568489, fluidb_string<25> __sym__0__8952063493441915716, fluidb_string<7> __sym__0___45_1824395327270788210, fluidb_string<10> __sym__0___45_4574956228592531724, fluidb_string<11> __sym__0___45_3583563823835889744, fluidb_string<25> __sym__0__1035932931239708898, unsigned __sym__0__2873925968864442957, fluidb_string<10> __sym__0___45_6275854556107336556) : sym__0__7069852625741277438(__sym__0__7069852625741277438), sym__0___45_2139184416220787303(__sym__0___45_2139184416220787303), sym__0__6834910062454089307(__sym__0__6834910062454089307), sym__0___45_673637979750308955(__sym__0___45_673637979750308955), sym__0__7353040165187485943(__sym__0__7353040165187485943), sym__0___45_3600959643487303198(__sym__0___45_3600959643487303198), sym__0__1586920362281366553(__sym__0__1586920362281366553), sym__0___45_565293263947163771(__sym__0___45_565293263947163771), sym__0___45_843396218047479825(__sym__0___45_843396218047479825), sym__0___45_6341950231013217833(__sym__0___45_6341950231013217833), sym__0__1045058483100812033(__sym__0__1045058483100812033), sym__0__3789297121224398166(__sym__0__3789297121224398166), sym__0__7633871876750507011(__sym__0__7633871876750507011), sym__0___45_1913197190575800618(__sym__0___45_1913197190575800618), sym__0__5022607639284586068(__sym__0__5022607639284586068), sym__0___45_4537203481097655209(__sym__0___45_4537203481097655209), sym__0___45_4177776814409117721(__sym__0___45_4177776814409117721), sym__0___45_1641792039791357051(__sym__0___45_1641792039791357051), sym__0__9155042948135519075(__sym__0__9155042948135519075), sym__0___45_1524873931413302067(__sym__0___45_1524873931413302067), sym__0__5123726051002722313(__sym__0__5123726051002722313), sym__0___45_3964194374284396198(__sym__0___45_3964194374284396198), sym__0___45_3323287974231174848(__sym__0___45_3323287974231174848), sym__0___45_7635081431606838648(__sym__0___45_7635081431606838648), sym__0__3374832300737452457(__sym__0__3374832300737452457), sym__0___45_2738400311900405319(__sym__0___45_2738400311900405319), sym__0__922566035134170359(__sym__0__922566035134170359), sym__0___45_4970177704815948360(__sym__0___45_4970177704815948360), sym__0__1953889797750115686(__sym__0__1953889797750115686), sym__0__7036968840507665704(__sym__0__7036968840507665704), sym__0__2424422746197752657(__sym__0__2424422746197752657), sym__0___45_899504608738992510(__sym__0___45_899504608738992510), sym__0__2199101055335955185(__sym__0__2199101055335955185), sym__0__8162945309743176777(__sym__0__8162945309743176777), sym__0__5658677538842948015(__sym__0__5658677538842948015), sym__0___45_1804682623039322536(__sym__0___45_1804682623039322536), sym__0___45_4150473036734596643(__sym__0___45_4150473036734596643), sym__0___45_1494825655055665211(__sym__0___45_1494825655055665211), sym__0__7243345290037361860(__sym__0__7243345290037361860), sym__0___45_5621333005798540324(__sym__0___45_5621333005798540324), sym__0___45_6906996774260360338(__sym__0___45_6906996774260360338), sym__0___45_6223982643952099801(__sym__0___45_6223982643952099801), sym__0___45_4582877986939568489(__sym__0___45_4582877986939568489), sym__0__8952063493441915716(__sym__0__8952063493441915716), sym__0___45_1824395327270788210(__sym__0___45_1824395327270788210), sym__0___45_4574956228592531724(__sym__0___45_4574956228592531724), sym__0___45_3583563823835889744(__sym__0___45_3583563823835889744), sym__0__1035932931239708898(__sym__0__1035932931239708898), sym__0__2873925968864442957(__sym__0__2873925968864442957), sym__0___45_6275854556107336556(__sym__0___45_6275854556107336556)
  {
  }
  Record12() 
  {
  }
  std::string show() const{
    std::stringstream o;
    o << sym__0__7069852625741277438 << " | " << arrToString(sym__0___45_2139184416220787303) << " | " << arrToString(sym__0__6834910062454089307) << " | " << arrToString(sym__0___45_673637979750308955) << " | " << arrToString(sym__0__7353040165187485943) << " | " << arrToString(sym__0___45_3600959643487303198) << " | " << arrToString(sym__0__1586920362281366553) << " | " << sym__0___45_565293263947163771 << " | " << sym__0___45_843396218047479825 << " | " << sym__0___45_6341950231013217833 << " | " << sym__0__1045058483100812033 << " | " << sym__0__3789297121224398166 << " | " << sym__0__7633871876750507011 << " | " << arrToString(sym__0___45_1913197190575800618) << " | " << sym__0__5022607639284586068 << " | " << arrToString(sym__0___45_4537203481097655209) << " | " << sym__0___45_4177776814409117721 << " | " << sym__0___45_1641792039791357051 << " | " << sym__0__9155042948135519075 << " | " << sym__0___45_1524873931413302067 << " | " << sym__0__5123726051002722313 << " | " << sym__0___45_3964194374284396198 << " | " << sym__0___45_3323287974231174848 << " | " << arrToString(sym__0___45_7635081431606838648) << " | " << sym__0__3374832300737452457 << " | " << arrToString(sym__0___45_2738400311900405319) << " | " << arrToString(sym__0__922566035134170359) << " | " << arrToString(sym__0___45_4970177704815948360) << " | " << sym__0__1953889797750115686 << " | " << sym__0__7036968840507665704 << " | " << arrToString(sym__0__2424422746197752657) << " | " << sym__0___45_899504608738992510 << " | " << sym__0__2199101055335955185 << " | " << sym__0__8162945309743176777 << " | " << sym__0__5658677538842948015 << " | " << sym__0___45_1804682623039322536 << " | " << arrToString(sym__0___45_4150473036734596643) << " | " << arrToString(sym__0___45_1494825655055665211) << " | " << arrToString(sym__0__7243345290037361860) << " | " << arrToString(sym__0___45_5621333005798540324) << " | " << arrToString(sym__0___45_6906996774260360338) << " | " << sym__0___45_6223982643952099801 << " | " << arrToString(sym__0___45_4582877986939568489) << " | " << arrToString(sym__0__8952063493441915716) << " | " << arrToString(sym__0___45_1824395327270788210) << " | " << arrToString(sym__0___45_4574956228592531724) << " | " << arrToString(sym__0___45_3583563823835889744) << " | " << arrToString(sym__0__1035932931239708898) << " | " << sym__0__2873925968864442957 << " | " << arrToString(sym__0___45_6275854556107336556);
    return o.str();
  }
  bool operator <(const Record12& otherRec) const{
    return (otherRec.sym__0__7069852625741277438 < sym__0__7069852625741277438 && (otherRec.sym__0___45_2139184416220787303 < sym__0___45_2139184416220787303 && (otherRec.sym__0__6834910062454089307 < sym__0__6834910062454089307 && (otherRec.sym__0___45_673637979750308955 < sym__0___45_673637979750308955 && (otherRec.sym__0__7353040165187485943 < sym__0__7353040165187485943 && (otherRec.sym__0___45_3600959643487303198 < sym__0___45_3600959643487303198 && (otherRec.sym__0__1586920362281366553 < sym__0__1586920362281366553 && (otherRec.sym__0___45_565293263947163771 < sym__0___45_565293263947163771 && (otherRec.sym__0___45_843396218047479825 < sym__0___45_843396218047479825 && (otherRec.sym__0___45_6341950231013217833 < sym__0___45_6341950231013217833 && (otherRec.sym__0__1045058483100812033 < sym__0__1045058483100812033 && (otherRec.sym__0__3789297121224398166 < sym__0__3789297121224398166 && (otherRec.sym__0__7633871876750507011 < sym__0__7633871876750507011 && (otherRec.sym__0___45_1913197190575800618 < sym__0___45_1913197190575800618 && (otherRec.sym__0__5022607639284586068 < sym__0__5022607639284586068 && (otherRec.sym__0___45_4537203481097655209 < sym__0___45_4537203481097655209 && (otherRec.sym__0___45_4177776814409117721 < sym__0___45_4177776814409117721 && (otherRec.sym__0___45_1641792039791357051 < sym__0___45_1641792039791357051 && (otherRec.sym__0__9155042948135519075 < sym__0__9155042948135519075 && (otherRec.sym__0___45_1524873931413302067 < sym__0___45_1524873931413302067 && (otherRec.sym__0__5123726051002722313 < sym__0__5123726051002722313 && (otherRec.sym__0___45_3964194374284396198 < sym__0___45_3964194374284396198 && (otherRec.sym__0___45_3323287974231174848 < sym__0___45_3323287974231174848 && (otherRec.sym__0___45_7635081431606838648 < sym__0___45_7635081431606838648 && (otherRec.sym__0__3374832300737452457 < sym__0__3374832300737452457 && (otherRec.sym__0___45_2738400311900405319 < sym__0___45_2738400311900405319 && (otherRec.sym__0__922566035134170359 < sym__0__922566035134170359 && (otherRec.sym__0___45_4970177704815948360 < sym__0___45_4970177704815948360 && (otherRec.sym__0__1953889797750115686 < sym__0__1953889797750115686 && (otherRec.sym__0__7036968840507665704 < sym__0__7036968840507665704 && (otherRec.sym__0__2424422746197752657 < sym__0__2424422746197752657 && (otherRec.sym__0___45_899504608738992510 < sym__0___45_899504608738992510 && (otherRec.sym__0__2199101055335955185 < sym__0__2199101055335955185 && (otherRec.sym__0__8162945309743176777 < sym__0__8162945309743176777 && (otherRec.sym__0__5658677538842948015 < sym__0__5658677538842948015 && (otherRec.sym__0___45_1804682623039322536 < sym__0___45_1804682623039322536 && (otherRec.sym__0___45_4150473036734596643 < sym__0___45_4150473036734596643 && (otherRec.sym__0___45_1494825655055665211 < sym__0___45_1494825655055665211 && (otherRec.sym__0__7243345290037361860 < sym__0__7243345290037361860 && (otherRec.sym__0___45_5621333005798540324 < sym__0___45_5621333005798540324 && (otherRec.sym__0___45_6906996774260360338 < sym__0___45_6906996774260360338 && (otherRec.sym__0___45_6223982643952099801 < sym__0___45_6223982643952099801 && (otherRec.sym__0___45_4582877986939568489 < sym__0___45_4582877986939568489 && (otherRec.sym__0__8952063493441915716 < sym__0__8952063493441915716 && (otherRec.sym__0___45_1824395327270788210 < sym__0___45_1824395327270788210 && (otherRec.sym__0___45_4574956228592531724 < sym__0___45_4574956228592531724 && (otherRec.sym__0___45_3583563823835889744 < sym__0___45_3583563823835889744 && (otherRec.sym__0__1035932931239708898 < sym__0__1035932931239708898 && (otherRec.sym__0__2873925968864442957 < sym__0__2873925968864442957 && otherRec.sym__0___45_6275854556107336556 < sym__0___45_6275854556107336556)))))))))))))))))))))))))))))))))))))))))))))))));
  }
  bool operator ==(const Record12& otherRec) const{
    return (otherRec.sym__0__7069852625741277438 == sym__0__7069852625741277438 && (otherRec.sym__0___45_2139184416220787303 == sym__0___45_2139184416220787303 && (otherRec.sym__0__6834910062454089307 == sym__0__6834910062454089307 && (otherRec.sym__0___45_673637979750308955 == sym__0___45_673637979750308955 && (otherRec.sym__0__7353040165187485943 == sym__0__7353040165187485943 && (otherRec.sym__0___45_3600959643487303198 == sym__0___45_3600959643487303198 && (otherRec.sym__0__1586920362281366553 == sym__0__1586920362281366553 && (otherRec.sym__0___45_565293263947163771 == sym__0___45_565293263947163771 && (otherRec.sym__0___45_843396218047479825 == sym__0___45_843396218047479825 && (otherRec.sym__0___45_6341950231013217833 == sym__0___45_6341950231013217833 && (otherRec.sym__0__1045058483100812033 == sym__0__1045058483100812033 && (otherRec.sym__0__3789297121224398166 == sym__0__3789297121224398166 && (otherRec.sym__0__7633871876750507011 == sym__0__7633871876750507011 && (otherRec.sym__0___45_1913197190575800618 == sym__0___45_1913197190575800618 && (otherRec.sym__0__5022607639284586068 == sym__0__5022607639284586068 && (otherRec.sym__0___45_4537203481097655209 == sym__0___45_4537203481097655209 && (otherRec.sym__0___45_4177776814409117721 == sym__0___45_4177776814409117721 && (otherRec.sym__0___45_1641792039791357051 == sym__0___45_1641792039791357051 && (otherRec.sym__0__9155042948135519075 == sym__0__9155042948135519075 && (otherRec.sym__0___45_1524873931413302067 == sym__0___45_1524873931413302067 && (otherRec.sym__0__5123726051002722313 == sym__0__5123726051002722313 && (otherRec.sym__0___45_3964194374284396198 == sym__0___45_3964194374284396198 && (otherRec.sym__0___45_3323287974231174848 == sym__0___45_3323287974231174848 && (otherRec.sym__0___45_7635081431606838648 == sym__0___45_7635081431606838648 && (otherRec.sym__0__3374832300737452457 == sym__0__3374832300737452457 && (otherRec.sym__0___45_2738400311900405319 == sym__0___45_2738400311900405319 && (otherRec.sym__0__922566035134170359 == sym__0__922566035134170359 && (otherRec.sym__0___45_4970177704815948360 == sym__0___45_4970177704815948360 && (otherRec.sym__0__1953889797750115686 == sym__0__1953889797750115686 && (otherRec.sym__0__7036968840507665704 == sym__0__7036968840507665704 && (otherRec.sym__0__2424422746197752657 == sym__0__2424422746197752657 && (otherRec.sym__0___45_899504608738992510 == sym__0___45_899504608738992510 && (otherRec.sym__0__2199101055335955185 == sym__0__2199101055335955185 && (otherRec.sym__0__8162945309743176777 == sym__0__8162945309743176777 && (otherRec.sym__0__5658677538842948015 == sym__0__5658677538842948015 && (otherRec.sym__0___45_1804682623039322536 == sym__0___45_1804682623039322536 && (otherRec.sym__0___45_4150473036734596643 == sym__0___45_4150473036734596643 && (otherRec.sym__0___45_1494825655055665211 == sym__0___45_1494825655055665211 && (otherRec.sym__0__7243345290037361860 == sym__0__7243345290037361860 && (otherRec.sym__0___45_5621333005798540324 == sym__0___45_5621333005798540324 && (otherRec.sym__0___45_6906996774260360338 == sym__0___45_6906996774260360338 && (otherRec.sym__0___45_6223982643952099801 == sym__0___45_6223982643952099801 && (otherRec.sym__0___45_4582877986939568489 == sym__0___45_4582877986939568489 && (otherRec.sym__0__8952063493441915716 == sym__0__8952063493441915716 && (otherRec.sym__0___45_1824395327270788210 == sym__0___45_1824395327270788210 && (otherRec.sym__0___45_4574956228592531724 == sym__0___45_4574956228592531724 && (otherRec.sym__0___45_3583563823835889744 == sym__0___45_3583563823835889744 && (otherRec.sym__0__1035932931239708898 == sym__0__1035932931239708898 && (otherRec.sym__0__2873925968864442957 == sym__0__2873925968864442957 && otherRec.sym__0___45_6275854556107336556 == sym__0___45_6275854556107336556)))))))))))))))))))))))))))))))))))))))))))))))));
  }
  bool operator !=(const Record12& otherRec) const{
    return (otherRec.sym__0__7069852625741277438 != sym__0__7069852625741277438 || (otherRec.sym__0___45_2139184416220787303 != sym__0___45_2139184416220787303 || (otherRec.sym__0__6834910062454089307 != sym__0__6834910062454089307 || (otherRec.sym__0___45_673637979750308955 != sym__0___45_673637979750308955 || (otherRec.sym__0__7353040165187485943 != sym__0__7353040165187485943 || (otherRec.sym__0___45_3600959643487303198 != sym__0___45_3600959643487303198 || (otherRec.sym__0__1586920362281366553 != sym__0__1586920362281366553 || (otherRec.sym__0___45_565293263947163771 != sym__0___45_565293263947163771 || (otherRec.sym__0___45_843396218047479825 != sym__0___45_843396218047479825 || (otherRec.sym__0___45_6341950231013217833 != sym__0___45_6341950231013217833 || (otherRec.sym__0__1045058483100812033 != sym__0__1045058483100812033 || (otherRec.sym__0__3789297121224398166 != sym__0__3789297121224398166 || (otherRec.sym__0__7633871876750507011 != sym__0__7633871876750507011 || (otherRec.sym__0___45_1913197190575800618 != sym__0___45_1913197190575800618 || (otherRec.sym__0__5022607639284586068 != sym__0__5022607639284586068 || (otherRec.sym__0___45_4537203481097655209 != sym__0___45_4537203481097655209 || (otherRec.sym__0___45_4177776814409117721 != sym__0___45_4177776814409117721 || (otherRec.sym__0___45_1641792039791357051 != sym__0___45_1641792039791357051 || (otherRec.sym__0__9155042948135519075 != sym__0__9155042948135519075 || (otherRec.sym__0___45_1524873931413302067 != sym__0___45_1524873931413302067 || (otherRec.sym__0__5123726051002722313 != sym__0__5123726051002722313 || (otherRec.sym__0___45_3964194374284396198 != sym__0___45_3964194374284396198 || (otherRec.sym__0___45_3323287974231174848 != sym__0___45_3323287974231174848 || (otherRec.sym__0___45_7635081431606838648 != sym__0___45_7635081431606838648 || (otherRec.sym__0__3374832300737452457 != sym__0__3374832300737452457 || (otherRec.sym__0___45_2738400311900405319 != sym__0___45_2738400311900405319 || (otherRec.sym__0__922566035134170359 != sym__0__922566035134170359 || (otherRec.sym__0___45_4970177704815948360 != sym__0___45_4970177704815948360 || (otherRec.sym__0__1953889797750115686 != sym__0__1953889797750115686 || (otherRec.sym__0__7036968840507665704 != sym__0__7036968840507665704 || (otherRec.sym__0__2424422746197752657 != sym__0__2424422746197752657 || (otherRec.sym__0___45_899504608738992510 != sym__0___45_899504608738992510 || (otherRec.sym__0__2199101055335955185 != sym__0__2199101055335955185 || (otherRec.sym__0__8162945309743176777 != sym__0__8162945309743176777 || (otherRec.sym__0__5658677538842948015 != sym__0__5658677538842948015 || (otherRec.sym__0___45_1804682623039322536 != sym__0___45_1804682623039322536 || (otherRec.sym__0___45_4150473036734596643 != sym__0___45_4150473036734596643 || (otherRec.sym__0___45_1494825655055665211 != sym__0___45_1494825655055665211 || (otherRec.sym__0__7243345290037361860 != sym__0__7243345290037361860 || (otherRec.sym__0___45_5621333005798540324 != sym__0___45_5621333005798540324 || (otherRec.sym__0___45_6906996774260360338 != sym__0___45_6906996774260360338 || (otherRec.sym__0___45_6223982643952099801 != sym__0___45_6223982643952099801 || (otherRec.sym__0___45_4582877986939568489 != sym__0___45_4582877986939568489 || (otherRec.sym__0__8952063493441915716 != sym__0__8952063493441915716 || (otherRec.sym__0___45_1824395327270788210 != sym__0___45_1824395327270788210 || (otherRec.sym__0___45_4574956228592531724 != sym__0___45_4574956228592531724 || (otherRec.sym__0___45_3583563823835889744 != sym__0___45_3583563823835889744 || (otherRec.sym__0__1035932931239708898 != sym__0__1035932931239708898 || (otherRec.sym__0__2873925968864442957 != sym__0__2873925968864442957 || otherRec.sym__0___45_6275854556107336556 != sym__0___45_6275854556107336556)))))))))))))))))))))))))))))))))))))))))))))))));
  }
  unsigned sym__0__7069852625741277438;
  fluidb_string<25> sym__0___45_2139184416220787303;
  fluidb_string<40> sym__0__6834910062454089307;
  fluidb_string<16> sym__0___45_673637979750308955;
  fluidb_string<16> sym__0__7353040165187485943;
  fluidb_string<13> sym__0___45_3600959643487303198;
  fluidb_string<15> sym__0__1586920362281366553;
  unsigned sym__0___45_565293263947163771;
  int sym__0___45_843396218047479825;
  unsigned sym__0___45_6341950231013217833;
  unsigned sym__0__1045058483100812033;
  unsigned sym__0__3789297121224398166;
  unsigned sym__0__7633871876750507011;
  fluidb_string<21> sym__0___45_1913197190575800618;
  unsigned sym__0__5022607639284586068;
  fluidb_string<10> sym__0___45_4537203481097655209;
  unsigned sym__0___45_4177776814409117721;
  double sym__0___45_1641792039791357051;
  unsigned sym__0__9155042948135519075;
  double sym__0___45_1524873931413302067;
  unsigned sym__0__5123726051002722313;
  unsigned sym__0___45_3964194374284396198;
  double sym__0___45_3323287974231174848;
  fluidb_string<13> sym__0___45_7635081431606838648;
  unsigned sym__0__3374832300737452457;
  fluidb_string<18> sym__0___45_2738400311900405319;
  fluidb_string<9> sym__0__922566035134170359;
  fluidb_string<9> sym__0___45_4970177704815948360;
  unsigned sym__0__1953889797750115686;
  unsigned sym__0__7036968840507665704;
  fluidb_string<7> sym__0__2424422746197752657;
  unsigned sym__0___45_899504608738992510;
  unsigned sym__0__2199101055335955185;
  unsigned sym__0__8162945309743176777;
  unsigned sym__0__5658677538842948015;
  unsigned sym__0___45_1804682623039322536;
  fluidb_string<15> sym__0___45_4150473036734596643;
  fluidb_string<2> sym__0___45_1494825655055665211;
  fluidb_string<2> sym__0__7243345290037361860;
  fluidb_string<2> sym__0___45_5621333005798540324;
  fluidb_string<2> sym__0___45_6906996774260360338;
  unsigned sym__0___45_6223982643952099801;
  fluidb_string<55> sym__0___45_4582877986939568489;
  fluidb_string<25> sym__0__8952063493441915716;
  fluidb_string<7> sym__0___45_1824395327270788210;
  fluidb_string<10> sym__0___45_4574956228592531724;
  fluidb_string<11> sym__0___45_3583563823835889744;
  fluidb_string<25> sym__0__1035932931239708898;
  unsigned sym__0__2873925968864442957;
  fluidb_string<10> sym__0___45_6275854556107336556;
 private:
};


class Record14 {
 public:
  Record14(unsigned __sortElem0) : sortElem0(__sortElem0)
  {
  }
  Record14() 
  {
  }
  std::string show() const{
    std::stringstream o;
    o << sortElem0;
    return o.str();
  }
  bool operator <(const Record14& otherRec) const{
    return otherRec.sortElem0 < sortElem0;
  }
  bool operator ==(const Record14& otherRec) const{
    return otherRec.sortElem0 == sortElem0;
  }
  bool operator !=(const Record14& otherRec) const{
    return otherRec.sortElem0 != sortElem0;
  }
  unsigned sortElem0;
 private:
};


class Record11 {
 public:
  Record11(unsigned __sym__0__1700144450823265023, fluidb_string<25> __sym__0__642977477037249040, fluidb_string<40> __sym__0___45_4128377972278795822, fluidb_string<16> __sym__0___45_5088627304821687252, fluidb_string<16> __sym__0___45_4948625537612330786, fluidb_string<13> __sym__0___45_9194700948435084701, fluidb_string<15> __sym__0___45_2335925802980201584, unsigned __sym__0__8952961796666569484, int __sym__0___45_764958528451264714, unsigned __sym__0___45_1817156327375219010, unsigned __sym__0___45_2837638767689209768, unsigned __sym__0___45_2981394887932269865, unsigned __sym__0___45_3207638480786881318, fluidb_string<21> __sym__0___45_2706668038305292969, unsigned __sym__0___45_5698288034649371459, fluidb_string<10> __sym__0___45_4860327901106131906, unsigned __sym__0__4990602831923261550, double __sym__0__1941197998689785612, unsigned __sym__0__8920978217467339962, double __sym__0__2290947992840979092, unsigned __sym__0__7968803792053807648, unsigned __sym__0___45_648214588708582661, double __sym__0__5240005983315163865, fluidb_string<13> __sym__0__8676547963641831009, unsigned __sym__0__7098358135655077312, fluidb_string<18> __sym__0___45_3236172823121798352, fluidb_string<9> __sym__0__209296758379513054, fluidb_string<9> __sym__0__990102210371531505, unsigned __sym__0__6731021262741660999, unsigned __sym__0__43383544609224961, fluidb_string<7> __sym__0___45_1451536826369255544, unsigned __sym__0___45_3626731045154418301, unsigned __sym__0__6266038698953764136, unsigned __sym__0___45_3178257250902948896, unsigned __sym__0___45_1707432467122892938, unsigned __sym__0__6803837608073687569, fluidb_string<15> __sym__0__3019318186977723140, fluidb_string<2> __sym__0___45_3182244727465674548, fluidb_string<2> __sym__0__6970778392668530317, fluidb_string<2> __sym__0__1291675427782851845, fluidb_string<2> __sym__0___45_7095393819436573425) : sym__0__1700144450823265023(__sym__0__1700144450823265023), sym__0__642977477037249040(__sym__0__642977477037249040), sym__0___45_4128377972278795822(__sym__0___45_4128377972278795822), sym__0___45_5088627304821687252(__sym__0___45_5088627304821687252), sym__0___45_4948625537612330786(__sym__0___45_4948625537612330786), sym__0___45_9194700948435084701(__sym__0___45_9194700948435084701), sym__0___45_2335925802980201584(__sym__0___45_2335925802980201584), sym__0__8952961796666569484(__sym__0__8952961796666569484), sym__0___45_764958528451264714(__sym__0___45_764958528451264714), sym__0___45_1817156327375219010(__sym__0___45_1817156327375219010), sym__0___45_2837638767689209768(__sym__0___45_2837638767689209768), sym__0___45_2981394887932269865(__sym__0___45_2981394887932269865), sym__0___45_3207638480786881318(__sym__0___45_3207638480786881318), sym__0___45_2706668038305292969(__sym__0___45_2706668038305292969), sym__0___45_5698288034649371459(__sym__0___45_5698288034649371459), sym__0___45_4860327901106131906(__sym__0___45_4860327901106131906), sym__0__4990602831923261550(__sym__0__4990602831923261550), sym__0__1941197998689785612(__sym__0__1941197998689785612), sym__0__8920978217467339962(__sym__0__8920978217467339962), sym__0__2290947992840979092(__sym__0__2290947992840979092), sym__0__7968803792053807648(__sym__0__7968803792053807648), sym__0___45_648214588708582661(__sym__0___45_648214588708582661), sym__0__5240005983315163865(__sym__0__5240005983315163865), sym__0__8676547963641831009(__sym__0__8676547963641831009), sym__0__7098358135655077312(__sym__0__7098358135655077312), sym__0___45_3236172823121798352(__sym__0___45_3236172823121798352), sym__0__209296758379513054(__sym__0__209296758379513054), sym__0__990102210371531505(__sym__0__990102210371531505), sym__0__6731021262741660999(__sym__0__6731021262741660999), sym__0__43383544609224961(__sym__0__43383544609224961), sym__0___45_1451536826369255544(__sym__0___45_1451536826369255544), sym__0___45_3626731045154418301(__sym__0___45_3626731045154418301), sym__0__6266038698953764136(__sym__0__6266038698953764136), sym__0___45_3178257250902948896(__sym__0___45_3178257250902948896), sym__0___45_1707432467122892938(__sym__0___45_1707432467122892938), sym__0__6803837608073687569(__sym__0__6803837608073687569), sym__0__3019318186977723140(__sym__0__3019318186977723140), sym__0___45_3182244727465674548(__sym__0___45_3182244727465674548), sym__0__6970778392668530317(__sym__0__6970778392668530317), sym__0__1291675427782851845(__sym__0__1291675427782851845), sym__0___45_7095393819436573425(__sym__0___45_7095393819436573425)
  {
  }
  Record11() 
  {
  }
  std::string show() const{
    std::stringstream o;
    o << sym__0__1700144450823265023 << " | " << arrToString(sym__0__642977477037249040) << " | " << arrToString(sym__0___45_4128377972278795822) << " | " << arrToString(sym__0___45_5088627304821687252) << " | " << arrToString(sym__0___45_4948625537612330786) << " | " << arrToString(sym__0___45_9194700948435084701) << " | " << arrToString(sym__0___45_2335925802980201584) << " | " << sym__0__8952961796666569484 << " | " << sym__0___45_764958528451264714 << " | " << sym__0___45_1817156327375219010 << " | " << sym__0___45_2837638767689209768 << " | " << sym__0___45_2981394887932269865 << " | " << sym__0___45_3207638480786881318 << " | " << arrToString(sym__0___45_2706668038305292969) << " | " << sym__0___45_5698288034649371459 << " | " << arrToString(sym__0___45_4860327901106131906) << " | " << sym__0__4990602831923261550 << " | " << sym__0__1941197998689785612 << " | " << sym__0__8920978217467339962 << " | " << sym__0__2290947992840979092 << " | " << sym__0__7968803792053807648 << " | " << sym__0___45_648214588708582661 << " | " << sym__0__5240005983315163865 << " | " << arrToString(sym__0__8676547963641831009) << " | " << sym__0__7098358135655077312 << " | " << arrToString(sym__0___45_3236172823121798352) << " | " << arrToString(sym__0__209296758379513054) << " | " << arrToString(sym__0__990102210371531505) << " | " << sym__0__6731021262741660999 << " | " << sym__0__43383544609224961 << " | " << arrToString(sym__0___45_1451536826369255544) << " | " << sym__0___45_3626731045154418301 << " | " << sym__0__6266038698953764136 << " | " << sym__0___45_3178257250902948896 << " | " << sym__0___45_1707432467122892938 << " | " << sym__0__6803837608073687569 << " | " << arrToString(sym__0__3019318186977723140) << " | " << arrToString(sym__0___45_3182244727465674548) << " | " << arrToString(sym__0__6970778392668530317) << " | " << arrToString(sym__0__1291675427782851845) << " | " << arrToString(sym__0___45_7095393819436573425);
    return o.str();
  }
  bool operator <(const Record11& otherRec) const{
    return (otherRec.sym__0__1700144450823265023 < sym__0__1700144450823265023 && (otherRec.sym__0__642977477037249040 < sym__0__642977477037249040 && (otherRec.sym__0___45_4128377972278795822 < sym__0___45_4128377972278795822 && (otherRec.sym__0___45_5088627304821687252 < sym__0___45_5088627304821687252 && (otherRec.sym__0___45_4948625537612330786 < sym__0___45_4948625537612330786 && (otherRec.sym__0___45_9194700948435084701 < sym__0___45_9194700948435084701 && (otherRec.sym__0___45_2335925802980201584 < sym__0___45_2335925802980201584 && (otherRec.sym__0__8952961796666569484 < sym__0__8952961796666569484 && (otherRec.sym__0___45_764958528451264714 < sym__0___45_764958528451264714 && (otherRec.sym__0___45_1817156327375219010 < sym__0___45_1817156327375219010 && (otherRec.sym__0___45_2837638767689209768 < sym__0___45_2837638767689209768 && (otherRec.sym__0___45_2981394887932269865 < sym__0___45_2981394887932269865 && (otherRec.sym__0___45_3207638480786881318 < sym__0___45_3207638480786881318 && (otherRec.sym__0___45_2706668038305292969 < sym__0___45_2706668038305292969 && (otherRec.sym__0___45_5698288034649371459 < sym__0___45_5698288034649371459 && (otherRec.sym__0___45_4860327901106131906 < sym__0___45_4860327901106131906 && (otherRec.sym__0__4990602831923261550 < sym__0__4990602831923261550 && (otherRec.sym__0__1941197998689785612 < sym__0__1941197998689785612 && (otherRec.sym__0__8920978217467339962 < sym__0__8920978217467339962 && (otherRec.sym__0__2290947992840979092 < sym__0__2290947992840979092 && (otherRec.sym__0__7968803792053807648 < sym__0__7968803792053807648 && (otherRec.sym__0___45_648214588708582661 < sym__0___45_648214588708582661 && (otherRec.sym__0__5240005983315163865 < sym__0__5240005983315163865 && (otherRec.sym__0__8676547963641831009 < sym__0__8676547963641831009 && (otherRec.sym__0__7098358135655077312 < sym__0__7098358135655077312 && (otherRec.sym__0___45_3236172823121798352 < sym__0___45_3236172823121798352 && (otherRec.sym__0__209296758379513054 < sym__0__209296758379513054 && (otherRec.sym__0__990102210371531505 < sym__0__990102210371531505 && (otherRec.sym__0__6731021262741660999 < sym__0__6731021262741660999 && (otherRec.sym__0__43383544609224961 < sym__0__43383544609224961 && (otherRec.sym__0___45_1451536826369255544 < sym__0___45_1451536826369255544 && (otherRec.sym__0___45_3626731045154418301 < sym__0___45_3626731045154418301 && (otherRec.sym__0__6266038698953764136 < sym__0__6266038698953764136 && (otherRec.sym__0___45_3178257250902948896 < sym__0___45_3178257250902948896 && (otherRec.sym__0___45_1707432467122892938 < sym__0___45_1707432467122892938 && (otherRec.sym__0__6803837608073687569 < sym__0__6803837608073687569 && (otherRec.sym__0__3019318186977723140 < sym__0__3019318186977723140 && (otherRec.sym__0___45_3182244727465674548 < sym__0___45_3182244727465674548 && (otherRec.sym__0__6970778392668530317 < sym__0__6970778392668530317 && (otherRec.sym__0__1291675427782851845 < sym__0__1291675427782851845 && otherRec.sym__0___45_7095393819436573425 < sym__0___45_7095393819436573425))))))))))))))))))))))))))))))))))))))));
  }
  bool operator ==(const Record11& otherRec) const{
    return (otherRec.sym__0__1700144450823265023 == sym__0__1700144450823265023 && (otherRec.sym__0__642977477037249040 == sym__0__642977477037249040 && (otherRec.sym__0___45_4128377972278795822 == sym__0___45_4128377972278795822 && (otherRec.sym__0___45_5088627304821687252 == sym__0___45_5088627304821687252 && (otherRec.sym__0___45_4948625537612330786 == sym__0___45_4948625537612330786 && (otherRec.sym__0___45_9194700948435084701 == sym__0___45_9194700948435084701 && (otherRec.sym__0___45_2335925802980201584 == sym__0___45_2335925802980201584 && (otherRec.sym__0__8952961796666569484 == sym__0__8952961796666569484 && (otherRec.sym__0___45_764958528451264714 == sym__0___45_764958528451264714 && (otherRec.sym__0___45_1817156327375219010 == sym__0___45_1817156327375219010 && (otherRec.sym__0___45_2837638767689209768 == sym__0___45_2837638767689209768 && (otherRec.sym__0___45_2981394887932269865 == sym__0___45_2981394887932269865 && (otherRec.sym__0___45_3207638480786881318 == sym__0___45_3207638480786881318 && (otherRec.sym__0___45_2706668038305292969 == sym__0___45_2706668038305292969 && (otherRec.sym__0___45_5698288034649371459 == sym__0___45_5698288034649371459 && (otherRec.sym__0___45_4860327901106131906 == sym__0___45_4860327901106131906 && (otherRec.sym__0__4990602831923261550 == sym__0__4990602831923261550 && (otherRec.sym__0__1941197998689785612 == sym__0__1941197998689785612 && (otherRec.sym__0__8920978217467339962 == sym__0__8920978217467339962 && (otherRec.sym__0__2290947992840979092 == sym__0__2290947992840979092 && (otherRec.sym__0__7968803792053807648 == sym__0__7968803792053807648 && (otherRec.sym__0___45_648214588708582661 == sym__0___45_648214588708582661 && (otherRec.sym__0__5240005983315163865 == sym__0__5240005983315163865 && (otherRec.sym__0__8676547963641831009 == sym__0__8676547963641831009 && (otherRec.sym__0__7098358135655077312 == sym__0__7098358135655077312 && (otherRec.sym__0___45_3236172823121798352 == sym__0___45_3236172823121798352 && (otherRec.sym__0__209296758379513054 == sym__0__209296758379513054 && (otherRec.sym__0__990102210371531505 == sym__0__990102210371531505 && (otherRec.sym__0__6731021262741660999 == sym__0__6731021262741660999 && (otherRec.sym__0__43383544609224961 == sym__0__43383544609224961 && (otherRec.sym__0___45_1451536826369255544 == sym__0___45_1451536826369255544 && (otherRec.sym__0___45_3626731045154418301 == sym__0___45_3626731045154418301 && (otherRec.sym__0__6266038698953764136 == sym__0__6266038698953764136 && (otherRec.sym__0___45_3178257250902948896 == sym__0___45_3178257250902948896 && (otherRec.sym__0___45_1707432467122892938 == sym__0___45_1707432467122892938 && (otherRec.sym__0__6803837608073687569 == sym__0__6803837608073687569 && (otherRec.sym__0__3019318186977723140 == sym__0__3019318186977723140 && (otherRec.sym__0___45_3182244727465674548 == sym__0___45_3182244727465674548 && (otherRec.sym__0__6970778392668530317 == sym__0__6970778392668530317 && (otherRec.sym__0__1291675427782851845 == sym__0__1291675427782851845 && otherRec.sym__0___45_7095393819436573425 == sym__0___45_7095393819436573425))))))))))))))))))))))))))))))))))))))));
  }
  bool operator !=(const Record11& otherRec) const{
    return (otherRec.sym__0__1700144450823265023 != sym__0__1700144450823265023 || (otherRec.sym__0__642977477037249040 != sym__0__642977477037249040 || (otherRec.sym__0___45_4128377972278795822 != sym__0___45_4128377972278795822 || (otherRec.sym__0___45_5088627304821687252 != sym__0___45_5088627304821687252 || (otherRec.sym__0___45_4948625537612330786 != sym__0___45_4948625537612330786 || (otherRec.sym__0___45_9194700948435084701 != sym__0___45_9194700948435084701 || (otherRec.sym__0___45_2335925802980201584 != sym__0___45_2335925802980201584 || (otherRec.sym__0__8952961796666569484 != sym__0__8952961796666569484 || (otherRec.sym__0___45_764958528451264714 != sym__0___45_764958528451264714 || (otherRec.sym__0___45_1817156327375219010 != sym__0___45_1817156327375219010 || (otherRec.sym__0___45_2837638767689209768 != sym__0___45_2837638767689209768 || (otherRec.sym__0___45_2981394887932269865 != sym__0___45_2981394887932269865 || (otherRec.sym__0___45_3207638480786881318 != sym__0___45_3207638480786881318 || (otherRec.sym__0___45_2706668038305292969 != sym__0___45_2706668038305292969 || (otherRec.sym__0___45_5698288034649371459 != sym__0___45_5698288034649371459 || (otherRec.sym__0___45_4860327901106131906 != sym__0___45_4860327901106131906 || (otherRec.sym__0__4990602831923261550 != sym__0__4990602831923261550 || (otherRec.sym__0__1941197998689785612 != sym__0__1941197998689785612 || (otherRec.sym__0__8920978217467339962 != sym__0__8920978217467339962 || (otherRec.sym__0__2290947992840979092 != sym__0__2290947992840979092 || (otherRec.sym__0__7968803792053807648 != sym__0__7968803792053807648 || (otherRec.sym__0___45_648214588708582661 != sym__0___45_648214588708582661 || (otherRec.sym__0__5240005983315163865 != sym__0__5240005983315163865 || (otherRec.sym__0__8676547963641831009 != sym__0__8676547963641831009 || (otherRec.sym__0__7098358135655077312 != sym__0__7098358135655077312 || (otherRec.sym__0___45_3236172823121798352 != sym__0___45_3236172823121798352 || (otherRec.sym__0__209296758379513054 != sym__0__209296758379513054 || (otherRec.sym__0__990102210371531505 != sym__0__990102210371531505 || (otherRec.sym__0__6731021262741660999 != sym__0__6731021262741660999 || (otherRec.sym__0__43383544609224961 != sym__0__43383544609224961 || (otherRec.sym__0___45_1451536826369255544 != sym__0___45_1451536826369255544 || (otherRec.sym__0___45_3626731045154418301 != sym__0___45_3626731045154418301 || (otherRec.sym__0__6266038698953764136 != sym__0__6266038698953764136 || (otherRec.sym__0___45_3178257250902948896 != sym__0___45_3178257250902948896 || (otherRec.sym__0___45_1707432467122892938 != sym__0___45_1707432467122892938 || (otherRec.sym__0__6803837608073687569 != sym__0__6803837608073687569 || (otherRec.sym__0__3019318186977723140 != sym__0__3019318186977723140 || (otherRec.sym__0___45_3182244727465674548 != sym__0___45_3182244727465674548 || (otherRec.sym__0__6970778392668530317 != sym__0__6970778392668530317 || (otherRec.sym__0__1291675427782851845 != sym__0__1291675427782851845 || otherRec.sym__0___45_7095393819436573425 != sym__0___45_7095393819436573425))))))))))))))))))))))))))))))))))))))));
  }
  unsigned sym__0__1700144450823265023;
  fluidb_string<25> sym__0__642977477037249040;
  fluidb_string<40> sym__0___45_4128377972278795822;
  fluidb_string<16> sym__0___45_5088627304821687252;
  fluidb_string<16> sym__0___45_4948625537612330786;
  fluidb_string<13> sym__0___45_9194700948435084701;
  fluidb_string<15> sym__0___45_2335925802980201584;
  unsigned sym__0__8952961796666569484;
  int sym__0___45_764958528451264714;
  unsigned sym__0___45_1817156327375219010;
  unsigned sym__0___45_2837638767689209768;
  unsigned sym__0___45_2981394887932269865;
  unsigned sym__0___45_3207638480786881318;
  fluidb_string<21> sym__0___45_2706668038305292969;
  unsigned sym__0___45_5698288034649371459;
  fluidb_string<10> sym__0___45_4860327901106131906;
  unsigned sym__0__4990602831923261550;
  double sym__0__1941197998689785612;
  unsigned sym__0__8920978217467339962;
  double sym__0__2290947992840979092;
  unsigned sym__0__7968803792053807648;
  unsigned sym__0___45_648214588708582661;
  double sym__0__5240005983315163865;
  fluidb_string<13> sym__0__8676547963641831009;
  unsigned sym__0__7098358135655077312;
  fluidb_string<18> sym__0___45_3236172823121798352;
  fluidb_string<9> sym__0__209296758379513054;
  fluidb_string<9> sym__0__990102210371531505;
  unsigned sym__0__6731021262741660999;
  unsigned sym__0__43383544609224961;
  fluidb_string<7> sym__0___45_1451536826369255544;
  unsigned sym__0___45_3626731045154418301;
  unsigned sym__0__6266038698953764136;
  unsigned sym__0___45_3178257250902948896;
  unsigned sym__0___45_1707432467122892938;
  unsigned sym__0__6803837608073687569;
  fluidb_string<15> sym__0__3019318186977723140;
  fluidb_string<2> sym__0___45_3182244727465674548;
  fluidb_string<2> sym__0__6970778392668530317;
  fluidb_string<2> sym__0__1291675427782851845;
  fluidb_string<2> sym__0___45_7095393819436573425;
 private:
};


class Record22 {
 public:
  Record22(unsigned __sym__0___45_5902979780714219327, unsigned __sym__0___45_2114395819171341319, fluidb_string<10> __sym__0__8560746496208341995) : sym__0___45_5902979780714219327(__sym__0___45_5902979780714219327), sym__0___45_2114395819171341319(__sym__0___45_2114395819171341319), sym__0__8560746496208341995(__sym__0__8560746496208341995)
  {
  }
  Record22() 
  {
  }
  std::string show() const{
    std::stringstream o;
    o << sym__0___45_5902979780714219327 << " | " << sym__0___45_2114395819171341319 << " | " << arrToString(sym__0__8560746496208341995);
    return o.str();
  }
  bool operator <(const Record22& otherRec) const{
    return (otherRec.sym__0___45_5902979780714219327 < sym__0___45_5902979780714219327 && (otherRec.sym__0___45_2114395819171341319 < sym__0___45_2114395819171341319 && otherRec.sym__0__8560746496208341995 < sym__0__8560746496208341995));
  }
  bool operator ==(const Record22& otherRec) const{
    return (otherRec.sym__0___45_5902979780714219327 == sym__0___45_5902979780714219327 && (otherRec.sym__0___45_2114395819171341319 == sym__0___45_2114395819171341319 && otherRec.sym__0__8560746496208341995 == sym__0__8560746496208341995));
  }
  bool operator !=(const Record22& otherRec) const{
    return (otherRec.sym__0___45_5902979780714219327 != sym__0___45_5902979780714219327 || (otherRec.sym__0___45_2114395819171341319 != sym__0___45_2114395819171341319 || otherRec.sym__0__8560746496208341995 != sym__0__8560746496208341995));
  }
  unsigned sym__0___45_5902979780714219327;
  unsigned sym__0___45_2114395819171341319;
  fluidb_string<10> sym__0__8560746496208341995;
 private:
};


class Record24 {
 public:
  Record24(unsigned __sym__0__4141812305157790681, fluidb_string<25> __sym__0___45_5159284013671774530, fluidb_string<40> __sym__0__5929335199040604944, fluidb_string<16> __sym__0__8980268860843798410, fluidb_string<16> __sym__0__7438201141129884556, fluidb_string<13> __sym__0__299964735226913069, fluidb_string<15> __sym__0___45_274153224962620866, unsigned __sym__0___45_1704737576651497046, int __sym__0___45_5364431335747194636, unsigned __sym__0___45_6670480666790360404, unsigned __sym__0__1035059097189397270, unsigned __sym__0___45_236567292019976639, unsigned __sym__0___45_4342072045869091480, fluidb_string<21> __sym__0___45_48356416147601727, unsigned __sym__0___45_3530069934999759345, fluidb_string<10> __sym__0___45_21272610088483796, unsigned __sym__0__8564866222464334588, double __sym__0___45_744165813648595542, unsigned __sym__0__482146207611652104, double __sym__0___45_2183093135728676926, unsigned __sym__0___45_1874278765651523026, unsigned __sym__0___45_7594691263183254603, double __sym__0__3632680852047490635, fluidb_string<13> __sym__0___45_7823346196563635997, unsigned __sym__0__5619860144531125902, fluidb_string<18> __sym__0__5610665202265100958, fluidb_string<9> __sym__0___45_9075663471338639476, fluidb_string<9> __sym__0__4691788782750567507, unsigned __sym__0__7928058280817873233, unsigned __sym__0__6668222264524417219, fluidb_string<7> __sym__0__2297426772070097766, unsigned __sym__0__3416485698032376717, unsigned __sym__0___45_1989902664282570938, unsigned __sym__0___45_8900398421048301202, unsigned __sym__0___45_3190388615181087052, unsigned __sym__0__617043931306359219, fluidb_string<15> __sym__0___45_6132208035988097838, fluidb_string<2> __sym__0___45_7131498866425802518, fluidb_string<2> __sym__0__3212189690086512703, fluidb_string<2> __sym__0___45_4551279862702652409, fluidb_string<2> __sym__0__6400252650127444553, unsigned __sym__0__8989200694518734396, fluidb_string<55> __sym__0__1879639780622030444, fluidb_string<25> __sym__0__4679788483318910399, fluidb_string<7> __sym__0___45_1519325191444557143, fluidb_string<10> __sym__0__8808022150768814575, fluidb_string<11> __sym__0__1615907806695898299, fluidb_string<25> __sym__0__7902426149900564525, unsigned __sym__0__7538375850658612802, fluidb_string<10> __sym__0__2838506290652474191) : sym__0__4141812305157790681(__sym__0__4141812305157790681), sym__0___45_5159284013671774530(__sym__0___45_5159284013671774530), sym__0__5929335199040604944(__sym__0__5929335199040604944), sym__0__8980268860843798410(__sym__0__8980268860843798410), sym__0__7438201141129884556(__sym__0__7438201141129884556), sym__0__299964735226913069(__sym__0__299964735226913069), sym__0___45_274153224962620866(__sym__0___45_274153224962620866), sym__0___45_1704737576651497046(__sym__0___45_1704737576651497046), sym__0___45_5364431335747194636(__sym__0___45_5364431335747194636), sym__0___45_6670480666790360404(__sym__0___45_6670480666790360404), sym__0__1035059097189397270(__sym__0__1035059097189397270), sym__0___45_236567292019976639(__sym__0___45_236567292019976639), sym__0___45_4342072045869091480(__sym__0___45_4342072045869091480), sym__0___45_48356416147601727(__sym__0___45_48356416147601727), sym__0___45_3530069934999759345(__sym__0___45_3530069934999759345), sym__0___45_21272610088483796(__sym__0___45_21272610088483796), sym__0__8564866222464334588(__sym__0__8564866222464334588), sym__0___45_744165813648595542(__sym__0___45_744165813648595542), sym__0__482146207611652104(__sym__0__482146207611652104), sym__0___45_2183093135728676926(__sym__0___45_2183093135728676926), sym__0___45_1874278765651523026(__sym__0___45_1874278765651523026), sym__0___45_7594691263183254603(__sym__0___45_7594691263183254603), sym__0__3632680852047490635(__sym__0__3632680852047490635), sym__0___45_7823346196563635997(__sym__0___45_7823346196563635997), sym__0__5619860144531125902(__sym__0__5619860144531125902), sym__0__5610665202265100958(__sym__0__5610665202265100958), sym__0___45_9075663471338639476(__sym__0___45_9075663471338639476), sym__0__4691788782750567507(__sym__0__4691788782750567507), sym__0__7928058280817873233(__sym__0__7928058280817873233), sym__0__6668222264524417219(__sym__0__6668222264524417219), sym__0__2297426772070097766(__sym__0__2297426772070097766), sym__0__3416485698032376717(__sym__0__3416485698032376717), sym__0___45_1989902664282570938(__sym__0___45_1989902664282570938), sym__0___45_8900398421048301202(__sym__0___45_8900398421048301202), sym__0___45_3190388615181087052(__sym__0___45_3190388615181087052), sym__0__617043931306359219(__sym__0__617043931306359219), sym__0___45_6132208035988097838(__sym__0___45_6132208035988097838), sym__0___45_7131498866425802518(__sym__0___45_7131498866425802518), sym__0__3212189690086512703(__sym__0__3212189690086512703), sym__0___45_4551279862702652409(__sym__0___45_4551279862702652409), sym__0__6400252650127444553(__sym__0__6400252650127444553), sym__0__8989200694518734396(__sym__0__8989200694518734396), sym__0__1879639780622030444(__sym__0__1879639780622030444), sym__0__4679788483318910399(__sym__0__4679788483318910399), sym__0___45_1519325191444557143(__sym__0___45_1519325191444557143), sym__0__8808022150768814575(__sym__0__8808022150768814575), sym__0__1615907806695898299(__sym__0__1615907806695898299), sym__0__7902426149900564525(__sym__0__7902426149900564525), sym__0__7538375850658612802(__sym__0__7538375850658612802), sym__0__2838506290652474191(__sym__0__2838506290652474191)
  {
  }
  Record24() 
  {
  }
  std::string show() const{
    std::stringstream o;
    o << sym__0__4141812305157790681 << " | " << arrToString(sym__0___45_5159284013671774530) << " | " << arrToString(sym__0__5929335199040604944) << " | " << arrToString(sym__0__8980268860843798410) << " | " << arrToString(sym__0__7438201141129884556) << " | " << arrToString(sym__0__299964735226913069) << " | " << arrToString(sym__0___45_274153224962620866) << " | " << sym__0___45_1704737576651497046 << " | " << sym__0___45_5364431335747194636 << " | " << sym__0___45_6670480666790360404 << " | " << sym__0__1035059097189397270 << " | " << sym__0___45_236567292019976639 << " | " << sym__0___45_4342072045869091480 << " | " << arrToString(sym__0___45_48356416147601727) << " | " << sym__0___45_3530069934999759345 << " | " << arrToString(sym__0___45_21272610088483796) << " | " << sym__0__8564866222464334588 << " | " << sym__0___45_744165813648595542 << " | " << sym__0__482146207611652104 << " | " << sym__0___45_2183093135728676926 << " | " << sym__0___45_1874278765651523026 << " | " << sym__0___45_7594691263183254603 << " | " << sym__0__3632680852047490635 << " | " << arrToString(sym__0___45_7823346196563635997) << " | " << sym__0__5619860144531125902 << " | " << arrToString(sym__0__5610665202265100958) << " | " << arrToString(sym__0___45_9075663471338639476) << " | " << arrToString(sym__0__4691788782750567507) << " | " << sym__0__7928058280817873233 << " | " << sym__0__6668222264524417219 << " | " << arrToString(sym__0__2297426772070097766) << " | " << sym__0__3416485698032376717 << " | " << sym__0___45_1989902664282570938 << " | " << sym__0___45_8900398421048301202 << " | " << sym__0___45_3190388615181087052 << " | " << sym__0__617043931306359219 << " | " << arrToString(sym__0___45_6132208035988097838) << " | " << arrToString(sym__0___45_7131498866425802518) << " | " << arrToString(sym__0__3212189690086512703) << " | " << arrToString(sym__0___45_4551279862702652409) << " | " << arrToString(sym__0__6400252650127444553) << " | " << sym__0__8989200694518734396 << " | " << arrToString(sym__0__1879639780622030444) << " | " << arrToString(sym__0__4679788483318910399) << " | " << arrToString(sym__0___45_1519325191444557143) << " | " << arrToString(sym__0__8808022150768814575) << " | " << arrToString(sym__0__1615907806695898299) << " | " << arrToString(sym__0__7902426149900564525) << " | " << sym__0__7538375850658612802 << " | " << arrToString(sym__0__2838506290652474191);
    return o.str();
  }
  bool operator <(const Record24& otherRec) const{
    return (otherRec.sym__0__4141812305157790681 < sym__0__4141812305157790681 && (otherRec.sym__0___45_5159284013671774530 < sym__0___45_5159284013671774530 && (otherRec.sym__0__5929335199040604944 < sym__0__5929335199040604944 && (otherRec.sym__0__8980268860843798410 < sym__0__8980268860843798410 && (otherRec.sym__0__7438201141129884556 < sym__0__7438201141129884556 && (otherRec.sym__0__299964735226913069 < sym__0__299964735226913069 && (otherRec.sym__0___45_274153224962620866 < sym__0___45_274153224962620866 && (otherRec.sym__0___45_1704737576651497046 < sym__0___45_1704737576651497046 && (otherRec.sym__0___45_5364431335747194636 < sym__0___45_5364431335747194636 && (otherRec.sym__0___45_6670480666790360404 < sym__0___45_6670480666790360404 && (otherRec.sym__0__1035059097189397270 < sym__0__1035059097189397270 && (otherRec.sym__0___45_236567292019976639 < sym__0___45_236567292019976639 && (otherRec.sym__0___45_4342072045869091480 < sym__0___45_4342072045869091480 && (otherRec.sym__0___45_48356416147601727 < sym__0___45_48356416147601727 && (otherRec.sym__0___45_3530069934999759345 < sym__0___45_3530069934999759345 && (otherRec.sym__0___45_21272610088483796 < sym__0___45_21272610088483796 && (otherRec.sym__0__8564866222464334588 < sym__0__8564866222464334588 && (otherRec.sym__0___45_744165813648595542 < sym__0___45_744165813648595542 && (otherRec.sym__0__482146207611652104 < sym__0__482146207611652104 && (otherRec.sym__0___45_2183093135728676926 < sym__0___45_2183093135728676926 && (otherRec.sym__0___45_1874278765651523026 < sym__0___45_1874278765651523026 && (otherRec.sym__0___45_7594691263183254603 < sym__0___45_7594691263183254603 && (otherRec.sym__0__3632680852047490635 < sym__0__3632680852047490635 && (otherRec.sym__0___45_7823346196563635997 < sym__0___45_7823346196563635997 && (otherRec.sym__0__5619860144531125902 < sym__0__5619860144531125902 && (otherRec.sym__0__5610665202265100958 < sym__0__5610665202265100958 && (otherRec.sym__0___45_9075663471338639476 < sym__0___45_9075663471338639476 && (otherRec.sym__0__4691788782750567507 < sym__0__4691788782750567507 && (otherRec.sym__0__7928058280817873233 < sym__0__7928058280817873233 && (otherRec.sym__0__6668222264524417219 < sym__0__6668222264524417219 && (otherRec.sym__0__2297426772070097766 < sym__0__2297426772070097766 && (otherRec.sym__0__3416485698032376717 < sym__0__3416485698032376717 && (otherRec.sym__0___45_1989902664282570938 < sym__0___45_1989902664282570938 && (otherRec.sym__0___45_8900398421048301202 < sym__0___45_8900398421048301202 && (otherRec.sym__0___45_3190388615181087052 < sym__0___45_3190388615181087052 && (otherRec.sym__0__617043931306359219 < sym__0__617043931306359219 && (otherRec.sym__0___45_6132208035988097838 < sym__0___45_6132208035988097838 && (otherRec.sym__0___45_7131498866425802518 < sym__0___45_7131498866425802518 && (otherRec.sym__0__3212189690086512703 < sym__0__3212189690086512703 && (otherRec.sym__0___45_4551279862702652409 < sym__0___45_4551279862702652409 && (otherRec.sym__0__6400252650127444553 < sym__0__6400252650127444553 && (otherRec.sym__0__8989200694518734396 < sym__0__8989200694518734396 && (otherRec.sym__0__1879639780622030444 < sym__0__1879639780622030444 && (otherRec.sym__0__4679788483318910399 < sym__0__4679788483318910399 && (otherRec.sym__0___45_1519325191444557143 < sym__0___45_1519325191444557143 && (otherRec.sym__0__8808022150768814575 < sym__0__8808022150768814575 && (otherRec.sym__0__1615907806695898299 < sym__0__1615907806695898299 && (otherRec.sym__0__7902426149900564525 < sym__0__7902426149900564525 && (otherRec.sym__0__7538375850658612802 < sym__0__7538375850658612802 && otherRec.sym__0__2838506290652474191 < sym__0__2838506290652474191)))))))))))))))))))))))))))))))))))))))))))))))));
  }
  bool operator ==(const Record24& otherRec) const{
    return (otherRec.sym__0__4141812305157790681 == sym__0__4141812305157790681 && (otherRec.sym__0___45_5159284013671774530 == sym__0___45_5159284013671774530 && (otherRec.sym__0__5929335199040604944 == sym__0__5929335199040604944 && (otherRec.sym__0__8980268860843798410 == sym__0__8980268860843798410 && (otherRec.sym__0__7438201141129884556 == sym__0__7438201141129884556 && (otherRec.sym__0__299964735226913069 == sym__0__299964735226913069 && (otherRec.sym__0___45_274153224962620866 == sym__0___45_274153224962620866 && (otherRec.sym__0___45_1704737576651497046 == sym__0___45_1704737576651497046 && (otherRec.sym__0___45_5364431335747194636 == sym__0___45_5364431335747194636 && (otherRec.sym__0___45_6670480666790360404 == sym__0___45_6670480666790360404 && (otherRec.sym__0__1035059097189397270 == sym__0__1035059097189397270 && (otherRec.sym__0___45_236567292019976639 == sym__0___45_236567292019976639 && (otherRec.sym__0___45_4342072045869091480 == sym__0___45_4342072045869091480 && (otherRec.sym__0___45_48356416147601727 == sym__0___45_48356416147601727 && (otherRec.sym__0___45_3530069934999759345 == sym__0___45_3530069934999759345 && (otherRec.sym__0___45_21272610088483796 == sym__0___45_21272610088483796 && (otherRec.sym__0__8564866222464334588 == sym__0__8564866222464334588 && (otherRec.sym__0___45_744165813648595542 == sym__0___45_744165813648595542 && (otherRec.sym__0__482146207611652104 == sym__0__482146207611652104 && (otherRec.sym__0___45_2183093135728676926 == sym__0___45_2183093135728676926 && (otherRec.sym__0___45_1874278765651523026 == sym__0___45_1874278765651523026 && (otherRec.sym__0___45_7594691263183254603 == sym__0___45_7594691263183254603 && (otherRec.sym__0__3632680852047490635 == sym__0__3632680852047490635 && (otherRec.sym__0___45_7823346196563635997 == sym__0___45_7823346196563635997 && (otherRec.sym__0__5619860144531125902 == sym__0__5619860144531125902 && (otherRec.sym__0__5610665202265100958 == sym__0__5610665202265100958 && (otherRec.sym__0___45_9075663471338639476 == sym__0___45_9075663471338639476 && (otherRec.sym__0__4691788782750567507 == sym__0__4691788782750567507 && (otherRec.sym__0__7928058280817873233 == sym__0__7928058280817873233 && (otherRec.sym__0__6668222264524417219 == sym__0__6668222264524417219 && (otherRec.sym__0__2297426772070097766 == sym__0__2297426772070097766 && (otherRec.sym__0__3416485698032376717 == sym__0__3416485698032376717 && (otherRec.sym__0___45_1989902664282570938 == sym__0___45_1989902664282570938 && (otherRec.sym__0___45_8900398421048301202 == sym__0___45_8900398421048301202 && (otherRec.sym__0___45_3190388615181087052 == sym__0___45_3190388615181087052 && (otherRec.sym__0__617043931306359219 == sym__0__617043931306359219 && (otherRec.sym__0___45_6132208035988097838 == sym__0___45_6132208035988097838 && (otherRec.sym__0___45_7131498866425802518 == sym__0___45_7131498866425802518 && (otherRec.sym__0__3212189690086512703 == sym__0__3212189690086512703 && (otherRec.sym__0___45_4551279862702652409 == sym__0___45_4551279862702652409 && (otherRec.sym__0__6400252650127444553 == sym__0__6400252650127444553 && (otherRec.sym__0__8989200694518734396 == sym__0__8989200694518734396 && (otherRec.sym__0__1879639780622030444 == sym__0__1879639780622030444 && (otherRec.sym__0__4679788483318910399 == sym__0__4679788483318910399 && (otherRec.sym__0___45_1519325191444557143 == sym__0___45_1519325191444557143 && (otherRec.sym__0__8808022150768814575 == sym__0__8808022150768814575 && (otherRec.sym__0__1615907806695898299 == sym__0__1615907806695898299 && (otherRec.sym__0__7902426149900564525 == sym__0__7902426149900564525 && (otherRec.sym__0__7538375850658612802 == sym__0__7538375850658612802 && otherRec.sym__0__2838506290652474191 == sym__0__2838506290652474191)))))))))))))))))))))))))))))))))))))))))))))))));
  }
  bool operator !=(const Record24& otherRec) const{
    return (otherRec.sym__0__4141812305157790681 != sym__0__4141812305157790681 || (otherRec.sym__0___45_5159284013671774530 != sym__0___45_5159284013671774530 || (otherRec.sym__0__5929335199040604944 != sym__0__5929335199040604944 || (otherRec.sym__0__8980268860843798410 != sym__0__8980268860843798410 || (otherRec.sym__0__7438201141129884556 != sym__0__7438201141129884556 || (otherRec.sym__0__299964735226913069 != sym__0__299964735226913069 || (otherRec.sym__0___45_274153224962620866 != sym__0___45_274153224962620866 || (otherRec.sym__0___45_1704737576651497046 != sym__0___45_1704737576651497046 || (otherRec.sym__0___45_5364431335747194636 != sym__0___45_5364431335747194636 || (otherRec.sym__0___45_6670480666790360404 != sym__0___45_6670480666790360404 || (otherRec.sym__0__1035059097189397270 != sym__0__1035059097189397270 || (otherRec.sym__0___45_236567292019976639 != sym__0___45_236567292019976639 || (otherRec.sym__0___45_4342072045869091480 != sym__0___45_4342072045869091480 || (otherRec.sym__0___45_48356416147601727 != sym__0___45_48356416147601727 || (otherRec.sym__0___45_3530069934999759345 != sym__0___45_3530069934999759345 || (otherRec.sym__0___45_21272610088483796 != sym__0___45_21272610088483796 || (otherRec.sym__0__8564866222464334588 != sym__0__8564866222464334588 || (otherRec.sym__0___45_744165813648595542 != sym__0___45_744165813648595542 || (otherRec.sym__0__482146207611652104 != sym__0__482146207611652104 || (otherRec.sym__0___45_2183093135728676926 != sym__0___45_2183093135728676926 || (otherRec.sym__0___45_1874278765651523026 != sym__0___45_1874278765651523026 || (otherRec.sym__0___45_7594691263183254603 != sym__0___45_7594691263183254603 || (otherRec.sym__0__3632680852047490635 != sym__0__3632680852047490635 || (otherRec.sym__0___45_7823346196563635997 != sym__0___45_7823346196563635997 || (otherRec.sym__0__5619860144531125902 != sym__0__5619860144531125902 || (otherRec.sym__0__5610665202265100958 != sym__0__5610665202265100958 || (otherRec.sym__0___45_9075663471338639476 != sym__0___45_9075663471338639476 || (otherRec.sym__0__4691788782750567507 != sym__0__4691788782750567507 || (otherRec.sym__0__7928058280817873233 != sym__0__7928058280817873233 || (otherRec.sym__0__6668222264524417219 != sym__0__6668222264524417219 || (otherRec.sym__0__2297426772070097766 != sym__0__2297426772070097766 || (otherRec.sym__0__3416485698032376717 != sym__0__3416485698032376717 || (otherRec.sym__0___45_1989902664282570938 != sym__0___45_1989902664282570938 || (otherRec.sym__0___45_8900398421048301202 != sym__0___45_8900398421048301202 || (otherRec.sym__0___45_3190388615181087052 != sym__0___45_3190388615181087052 || (otherRec.sym__0__617043931306359219 != sym__0__617043931306359219 || (otherRec.sym__0___45_6132208035988097838 != sym__0___45_6132208035988097838 || (otherRec.sym__0___45_7131498866425802518 != sym__0___45_7131498866425802518 || (otherRec.sym__0__3212189690086512703 != sym__0__3212189690086512703 || (otherRec.sym__0___45_4551279862702652409 != sym__0___45_4551279862702652409 || (otherRec.sym__0__6400252650127444553 != sym__0__6400252650127444553 || (otherRec.sym__0__8989200694518734396 != sym__0__8989200694518734396 || (otherRec.sym__0__1879639780622030444 != sym__0__1879639780622030444 || (otherRec.sym__0__4679788483318910399 != sym__0__4679788483318910399 || (otherRec.sym__0___45_1519325191444557143 != sym__0___45_1519325191444557143 || (otherRec.sym__0__8808022150768814575 != sym__0__8808022150768814575 || (otherRec.sym__0__1615907806695898299 != sym__0__1615907806695898299 || (otherRec.sym__0__7902426149900564525 != sym__0__7902426149900564525 || (otherRec.sym__0__7538375850658612802 != sym__0__7538375850658612802 || otherRec.sym__0__2838506290652474191 != sym__0__2838506290652474191)))))))))))))))))))))))))))))))))))))))))))))))));
  }
  unsigned sym__0__4141812305157790681;
  fluidb_string<25> sym__0___45_5159284013671774530;
  fluidb_string<40> sym__0__5929335199040604944;
  fluidb_string<16> sym__0__8980268860843798410;
  fluidb_string<16> sym__0__7438201141129884556;
  fluidb_string<13> sym__0__299964735226913069;
  fluidb_string<15> sym__0___45_274153224962620866;
  unsigned sym__0___45_1704737576651497046;
  int sym__0___45_5364431335747194636;
  unsigned sym__0___45_6670480666790360404;
  unsigned sym__0__1035059097189397270;
  unsigned sym__0___45_236567292019976639;
  unsigned sym__0___45_4342072045869091480;
  fluidb_string<21> sym__0___45_48356416147601727;
  unsigned sym__0___45_3530069934999759345;
  fluidb_string<10> sym__0___45_21272610088483796;
  unsigned sym__0__8564866222464334588;
  double sym__0___45_744165813648595542;
  unsigned sym__0__482146207611652104;
  double sym__0___45_2183093135728676926;
  unsigned sym__0___45_1874278765651523026;
  unsigned sym__0___45_7594691263183254603;
  double sym__0__3632680852047490635;
  fluidb_string<13> sym__0___45_7823346196563635997;
  unsigned sym__0__5619860144531125902;
  fluidb_string<18> sym__0__5610665202265100958;
  fluidb_string<9> sym__0___45_9075663471338639476;
  fluidb_string<9> sym__0__4691788782750567507;
  unsigned sym__0__7928058280817873233;
  unsigned sym__0__6668222264524417219;
  fluidb_string<7> sym__0__2297426772070097766;
  unsigned sym__0__3416485698032376717;
  unsigned sym__0___45_1989902664282570938;
  unsigned sym__0___45_8900398421048301202;
  unsigned sym__0___45_3190388615181087052;
  unsigned sym__0__617043931306359219;
  fluidb_string<15> sym__0___45_6132208035988097838;
  fluidb_string<2> sym__0___45_7131498866425802518;
  fluidb_string<2> sym__0__3212189690086512703;
  fluidb_string<2> sym__0___45_4551279862702652409;
  fluidb_string<2> sym__0__6400252650127444553;
  unsigned sym__0__8989200694518734396;
  fluidb_string<55> sym__0__1879639780622030444;
  fluidb_string<25> sym__0__4679788483318910399;
  fluidb_string<7> sym__0___45_1519325191444557143;
  fluidb_string<10> sym__0__8808022150768814575;
  fluidb_string<11> sym__0__1615907806695898299;
  fluidb_string<25> sym__0__7902426149900564525;
  unsigned sym__0__7538375850658612802;
  fluidb_string<10> sym__0__2838506290652474191;
 private:
};


class Record7 {
 public:
  Record7(unsigned __sym__0__2102316481828394123, fluidb_string<25> __sym__0__1780257040091145452, fluidb_string<40> __sym__0__3109939911660640430, fluidb_string<16> __sym__0___45_2175199227983174320, fluidb_string<16> __sym__0__2274992661292194562, fluidb_string<13> __sym__0___45_52536403880094569, fluidb_string<15> __sym__0__8474116574285927276, unsigned __sym__0__1835503384076924528, int __sym__0__586412267723269786, unsigned __sym__0__1353367320182642978, unsigned __sym__0___45_6351222752813626636, unsigned __sym__0___45_805067702695824989, unsigned __sym__0__914509637812701046, fluidb_string<21> __sym__0__7895450651221174051, unsigned __sym__0__5942285589324576545, fluidb_string<10> __sym__0__3979382234526804898, unsigned __sym__0___45_6103522369909819246, double __sym__0__1873148039180761712, unsigned __sym__0__1430551526674366102, double __sym__0__1048818672001592248, unsigned __sym__0__5723353836447658492, unsigned __sym__0___45_2233273278156881105, double __sym__0___45_1120880788595637835, fluidb_string<13> __sym__0___45_6361490230660137987, unsigned __sym__0___45_7131249874638266788, fluidb_string<18> __sym__0__7265729621635359692, fluidb_string<9> __sym__0___45_2986035740159621374, fluidb_string<9> __sym__0__5081664509798388941, unsigned __sym__0___45_8518596434939314413, unsigned __sym__0__1988221653138390749, fluidb_string<7> __sym__0___45_8801377200944175068, unsigned __sym__0___45_4634183629139578121, unsigned __sym__0__806472603637564420, unsigned __sym__0__1725829484083430844, unsigned __sym__0___45_5279274827282678566, unsigned __sym__0___45_9129247388617675603, fluidb_string<15> __sym__0__1232225844204183080, fluidb_string<2> __sym__0__9184663680502119984, fluidb_string<2> __sym__0___45_9023997483659527503, fluidb_string<2> __sym__0___45_1026604631201554135, fluidb_string<2> __sym__0___45_7189754320372197989) : sym__0__2102316481828394123(__sym__0__2102316481828394123), sym__0__1780257040091145452(__sym__0__1780257040091145452), sym__0__3109939911660640430(__sym__0__3109939911660640430), sym__0___45_2175199227983174320(__sym__0___45_2175199227983174320), sym__0__2274992661292194562(__sym__0__2274992661292194562), sym__0___45_52536403880094569(__sym__0___45_52536403880094569), sym__0__8474116574285927276(__sym__0__8474116574285927276), sym__0__1835503384076924528(__sym__0__1835503384076924528), sym__0__586412267723269786(__sym__0__586412267723269786), sym__0__1353367320182642978(__sym__0__1353367320182642978), sym__0___45_6351222752813626636(__sym__0___45_6351222752813626636), sym__0___45_805067702695824989(__sym__0___45_805067702695824989), sym__0__914509637812701046(__sym__0__914509637812701046), sym__0__7895450651221174051(__sym__0__7895450651221174051), sym__0__5942285589324576545(__sym__0__5942285589324576545), sym__0__3979382234526804898(__sym__0__3979382234526804898), sym__0___45_6103522369909819246(__sym__0___45_6103522369909819246), sym__0__1873148039180761712(__sym__0__1873148039180761712), sym__0__1430551526674366102(__sym__0__1430551526674366102), sym__0__1048818672001592248(__sym__0__1048818672001592248), sym__0__5723353836447658492(__sym__0__5723353836447658492), sym__0___45_2233273278156881105(__sym__0___45_2233273278156881105), sym__0___45_1120880788595637835(__sym__0___45_1120880788595637835), sym__0___45_6361490230660137987(__sym__0___45_6361490230660137987), sym__0___45_7131249874638266788(__sym__0___45_7131249874638266788), sym__0__7265729621635359692(__sym__0__7265729621635359692), sym__0___45_2986035740159621374(__sym__0___45_2986035740159621374), sym__0__5081664509798388941(__sym__0__5081664509798388941), sym__0___45_8518596434939314413(__sym__0___45_8518596434939314413), sym__0__1988221653138390749(__sym__0__1988221653138390749), sym__0___45_8801377200944175068(__sym__0___45_8801377200944175068), sym__0___45_4634183629139578121(__sym__0___45_4634183629139578121), sym__0__806472603637564420(__sym__0__806472603637564420), sym__0__1725829484083430844(__sym__0__1725829484083430844), sym__0___45_5279274827282678566(__sym__0___45_5279274827282678566), sym__0___45_9129247388617675603(__sym__0___45_9129247388617675603), sym__0__1232225844204183080(__sym__0__1232225844204183080), sym__0__9184663680502119984(__sym__0__9184663680502119984), sym__0___45_9023997483659527503(__sym__0___45_9023997483659527503), sym__0___45_1026604631201554135(__sym__0___45_1026604631201554135), sym__0___45_7189754320372197989(__sym__0___45_7189754320372197989)
  {
  }
  Record7() 
  {
  }
  std::string show() const{
    std::stringstream o;
    o << sym__0__2102316481828394123 << " | " << arrToString(sym__0__1780257040091145452) << " | " << arrToString(sym__0__3109939911660640430) << " | " << arrToString(sym__0___45_2175199227983174320) << " | " << arrToString(sym__0__2274992661292194562) << " | " << arrToString(sym__0___45_52536403880094569) << " | " << arrToString(sym__0__8474116574285927276) << " | " << sym__0__1835503384076924528 << " | " << sym__0__586412267723269786 << " | " << sym__0__1353367320182642978 << " | " << sym__0___45_6351222752813626636 << " | " << sym__0___45_805067702695824989 << " | " << sym__0__914509637812701046 << " | " << arrToString(sym__0__7895450651221174051) << " | " << sym__0__5942285589324576545 << " | " << arrToString(sym__0__3979382234526804898) << " | " << sym__0___45_6103522369909819246 << " | " << sym__0__1873148039180761712 << " | " << sym__0__1430551526674366102 << " | " << sym__0__1048818672001592248 << " | " << sym__0__5723353836447658492 << " | " << sym__0___45_2233273278156881105 << " | " << sym__0___45_1120880788595637835 << " | " << arrToString(sym__0___45_6361490230660137987) << " | " << sym__0___45_7131249874638266788 << " | " << arrToString(sym__0__7265729621635359692) << " | " << arrToString(sym__0___45_2986035740159621374) << " | " << arrToString(sym__0__5081664509798388941) << " | " << sym__0___45_8518596434939314413 << " | " << sym__0__1988221653138390749 << " | " << arrToString(sym__0___45_8801377200944175068) << " | " << sym__0___45_4634183629139578121 << " | " << sym__0__806472603637564420 << " | " << sym__0__1725829484083430844 << " | " << sym__0___45_5279274827282678566 << " | " << sym__0___45_9129247388617675603 << " | " << arrToString(sym__0__1232225844204183080) << " | " << arrToString(sym__0__9184663680502119984) << " | " << arrToString(sym__0___45_9023997483659527503) << " | " << arrToString(sym__0___45_1026604631201554135) << " | " << arrToString(sym__0___45_7189754320372197989);
    return o.str();
  }
  bool operator <(const Record7& otherRec) const{
    return (otherRec.sym__0__2102316481828394123 < sym__0__2102316481828394123 && (otherRec.sym__0__1780257040091145452 < sym__0__1780257040091145452 && (otherRec.sym__0__3109939911660640430 < sym__0__3109939911660640430 && (otherRec.sym__0___45_2175199227983174320 < sym__0___45_2175199227983174320 && (otherRec.sym__0__2274992661292194562 < sym__0__2274992661292194562 && (otherRec.sym__0___45_52536403880094569 < sym__0___45_52536403880094569 && (otherRec.sym__0__8474116574285927276 < sym__0__8474116574285927276 && (otherRec.sym__0__1835503384076924528 < sym__0__1835503384076924528 && (otherRec.sym__0__586412267723269786 < sym__0__586412267723269786 && (otherRec.sym__0__1353367320182642978 < sym__0__1353367320182642978 && (otherRec.sym__0___45_6351222752813626636 < sym__0___45_6351222752813626636 && (otherRec.sym__0___45_805067702695824989 < sym__0___45_805067702695824989 && (otherRec.sym__0__914509637812701046 < sym__0__914509637812701046 && (otherRec.sym__0__7895450651221174051 < sym__0__7895450651221174051 && (otherRec.sym__0__5942285589324576545 < sym__0__5942285589324576545 && (otherRec.sym__0__3979382234526804898 < sym__0__3979382234526804898 && (otherRec.sym__0___45_6103522369909819246 < sym__0___45_6103522369909819246 && (otherRec.sym__0__1873148039180761712 < sym__0__1873148039180761712 && (otherRec.sym__0__1430551526674366102 < sym__0__1430551526674366102 && (otherRec.sym__0__1048818672001592248 < sym__0__1048818672001592248 && (otherRec.sym__0__5723353836447658492 < sym__0__5723353836447658492 && (otherRec.sym__0___45_2233273278156881105 < sym__0___45_2233273278156881105 && (otherRec.sym__0___45_1120880788595637835 < sym__0___45_1120880788595637835 && (otherRec.sym__0___45_6361490230660137987 < sym__0___45_6361490230660137987 && (otherRec.sym__0___45_7131249874638266788 < sym__0___45_7131249874638266788 && (otherRec.sym__0__7265729621635359692 < sym__0__7265729621635359692 && (otherRec.sym__0___45_2986035740159621374 < sym__0___45_2986035740159621374 && (otherRec.sym__0__5081664509798388941 < sym__0__5081664509798388941 && (otherRec.sym__0___45_8518596434939314413 < sym__0___45_8518596434939314413 && (otherRec.sym__0__1988221653138390749 < sym__0__1988221653138390749 && (otherRec.sym__0___45_8801377200944175068 < sym__0___45_8801377200944175068 && (otherRec.sym__0___45_4634183629139578121 < sym__0___45_4634183629139578121 && (otherRec.sym__0__806472603637564420 < sym__0__806472603637564420 && (otherRec.sym__0__1725829484083430844 < sym__0__1725829484083430844 && (otherRec.sym__0___45_5279274827282678566 < sym__0___45_5279274827282678566 && (otherRec.sym__0___45_9129247388617675603 < sym__0___45_9129247388617675603 && (otherRec.sym__0__1232225844204183080 < sym__0__1232225844204183080 && (otherRec.sym__0__9184663680502119984 < sym__0__9184663680502119984 && (otherRec.sym__0___45_9023997483659527503 < sym__0___45_9023997483659527503 && (otherRec.sym__0___45_1026604631201554135 < sym__0___45_1026604631201554135 && otherRec.sym__0___45_7189754320372197989 < sym__0___45_7189754320372197989))))))))))))))))))))))))))))))))))))))));
  }
  bool operator ==(const Record7& otherRec) const{
    return (otherRec.sym__0__2102316481828394123 == sym__0__2102316481828394123 && (otherRec.sym__0__1780257040091145452 == sym__0__1780257040091145452 && (otherRec.sym__0__3109939911660640430 == sym__0__3109939911660640430 && (otherRec.sym__0___45_2175199227983174320 == sym__0___45_2175199227983174320 && (otherRec.sym__0__2274992661292194562 == sym__0__2274992661292194562 && (otherRec.sym__0___45_52536403880094569 == sym__0___45_52536403880094569 && (otherRec.sym__0__8474116574285927276 == sym__0__8474116574285927276 && (otherRec.sym__0__1835503384076924528 == sym__0__1835503384076924528 && (otherRec.sym__0__586412267723269786 == sym__0__586412267723269786 && (otherRec.sym__0__1353367320182642978 == sym__0__1353367320182642978 && (otherRec.sym__0___45_6351222752813626636 == sym__0___45_6351222752813626636 && (otherRec.sym__0___45_805067702695824989 == sym__0___45_805067702695824989 && (otherRec.sym__0__914509637812701046 == sym__0__914509637812701046 && (otherRec.sym__0__7895450651221174051 == sym__0__7895450651221174051 && (otherRec.sym__0__5942285589324576545 == sym__0__5942285589324576545 && (otherRec.sym__0__3979382234526804898 == sym__0__3979382234526804898 && (otherRec.sym__0___45_6103522369909819246 == sym__0___45_6103522369909819246 && (otherRec.sym__0__1873148039180761712 == sym__0__1873148039180761712 && (otherRec.sym__0__1430551526674366102 == sym__0__1430551526674366102 && (otherRec.sym__0__1048818672001592248 == sym__0__1048818672001592248 && (otherRec.sym__0__5723353836447658492 == sym__0__5723353836447658492 && (otherRec.sym__0___45_2233273278156881105 == sym__0___45_2233273278156881105 && (otherRec.sym__0___45_1120880788595637835 == sym__0___45_1120880788595637835 && (otherRec.sym__0___45_6361490230660137987 == sym__0___45_6361490230660137987 && (otherRec.sym__0___45_7131249874638266788 == sym__0___45_7131249874638266788 && (otherRec.sym__0__7265729621635359692 == sym__0__7265729621635359692 && (otherRec.sym__0___45_2986035740159621374 == sym__0___45_2986035740159621374 && (otherRec.sym__0__5081664509798388941 == sym__0__5081664509798388941 && (otherRec.sym__0___45_8518596434939314413 == sym__0___45_8518596434939314413 && (otherRec.sym__0__1988221653138390749 == sym__0__1988221653138390749 && (otherRec.sym__0___45_8801377200944175068 == sym__0___45_8801377200944175068 && (otherRec.sym__0___45_4634183629139578121 == sym__0___45_4634183629139578121 && (otherRec.sym__0__806472603637564420 == sym__0__806472603637564420 && (otherRec.sym__0__1725829484083430844 == sym__0__1725829484083430844 && (otherRec.sym__0___45_5279274827282678566 == sym__0___45_5279274827282678566 && (otherRec.sym__0___45_9129247388617675603 == sym__0___45_9129247388617675603 && (otherRec.sym__0__1232225844204183080 == sym__0__1232225844204183080 && (otherRec.sym__0__9184663680502119984 == sym__0__9184663680502119984 && (otherRec.sym__0___45_9023997483659527503 == sym__0___45_9023997483659527503 && (otherRec.sym__0___45_1026604631201554135 == sym__0___45_1026604631201554135 && otherRec.sym__0___45_7189754320372197989 == sym__0___45_7189754320372197989))))))))))))))))))))))))))))))))))))))));
  }
  bool operator !=(const Record7& otherRec) const{
    return (otherRec.sym__0__2102316481828394123 != sym__0__2102316481828394123 || (otherRec.sym__0__1780257040091145452 != sym__0__1780257040091145452 || (otherRec.sym__0__3109939911660640430 != sym__0__3109939911660640430 || (otherRec.sym__0___45_2175199227983174320 != sym__0___45_2175199227983174320 || (otherRec.sym__0__2274992661292194562 != sym__0__2274992661292194562 || (otherRec.sym__0___45_52536403880094569 != sym__0___45_52536403880094569 || (otherRec.sym__0__8474116574285927276 != sym__0__8474116574285927276 || (otherRec.sym__0__1835503384076924528 != sym__0__1835503384076924528 || (otherRec.sym__0__586412267723269786 != sym__0__586412267723269786 || (otherRec.sym__0__1353367320182642978 != sym__0__1353367320182642978 || (otherRec.sym__0___45_6351222752813626636 != sym__0___45_6351222752813626636 || (otherRec.sym__0___45_805067702695824989 != sym__0___45_805067702695824989 || (otherRec.sym__0__914509637812701046 != sym__0__914509637812701046 || (otherRec.sym__0__7895450651221174051 != sym__0__7895450651221174051 || (otherRec.sym__0__5942285589324576545 != sym__0__5942285589324576545 || (otherRec.sym__0__3979382234526804898 != sym__0__3979382234526804898 || (otherRec.sym__0___45_6103522369909819246 != sym__0___45_6103522369909819246 || (otherRec.sym__0__1873148039180761712 != sym__0__1873148039180761712 || (otherRec.sym__0__1430551526674366102 != sym__0__1430551526674366102 || (otherRec.sym__0__1048818672001592248 != sym__0__1048818672001592248 || (otherRec.sym__0__5723353836447658492 != sym__0__5723353836447658492 || (otherRec.sym__0___45_2233273278156881105 != sym__0___45_2233273278156881105 || (otherRec.sym__0___45_1120880788595637835 != sym__0___45_1120880788595637835 || (otherRec.sym__0___45_6361490230660137987 != sym__0___45_6361490230660137987 || (otherRec.sym__0___45_7131249874638266788 != sym__0___45_7131249874638266788 || (otherRec.sym__0__7265729621635359692 != sym__0__7265729621635359692 || (otherRec.sym__0___45_2986035740159621374 != sym__0___45_2986035740159621374 || (otherRec.sym__0__5081664509798388941 != sym__0__5081664509798388941 || (otherRec.sym__0___45_8518596434939314413 != sym__0___45_8518596434939314413 || (otherRec.sym__0__1988221653138390749 != sym__0__1988221653138390749 || (otherRec.sym__0___45_8801377200944175068 != sym__0___45_8801377200944175068 || (otherRec.sym__0___45_4634183629139578121 != sym__0___45_4634183629139578121 || (otherRec.sym__0__806472603637564420 != sym__0__806472603637564420 || (otherRec.sym__0__1725829484083430844 != sym__0__1725829484083430844 || (otherRec.sym__0___45_5279274827282678566 != sym__0___45_5279274827282678566 || (otherRec.sym__0___45_9129247388617675603 != sym__0___45_9129247388617675603 || (otherRec.sym__0__1232225844204183080 != sym__0__1232225844204183080 || (otherRec.sym__0__9184663680502119984 != sym__0__9184663680502119984 || (otherRec.sym__0___45_9023997483659527503 != sym__0___45_9023997483659527503 || (otherRec.sym__0___45_1026604631201554135 != sym__0___45_1026604631201554135 || otherRec.sym__0___45_7189754320372197989 != sym__0___45_7189754320372197989))))))))))))))))))))))))))))))))))))))));
  }
  unsigned sym__0__2102316481828394123;
  fluidb_string<25> sym__0__1780257040091145452;
  fluidb_string<40> sym__0__3109939911660640430;
  fluidb_string<16> sym__0___45_2175199227983174320;
  fluidb_string<16> sym__0__2274992661292194562;
  fluidb_string<13> sym__0___45_52536403880094569;
  fluidb_string<15> sym__0__8474116574285927276;
  unsigned sym__0__1835503384076924528;
  int sym__0__586412267723269786;
  unsigned sym__0__1353367320182642978;
  unsigned sym__0___45_6351222752813626636;
  unsigned sym__0___45_805067702695824989;
  unsigned sym__0__914509637812701046;
  fluidb_string<21> sym__0__7895450651221174051;
  unsigned sym__0__5942285589324576545;
  fluidb_string<10> sym__0__3979382234526804898;
  unsigned sym__0___45_6103522369909819246;
  double sym__0__1873148039180761712;
  unsigned sym__0__1430551526674366102;
  double sym__0__1048818672001592248;
  unsigned sym__0__5723353836447658492;
  unsigned sym__0___45_2233273278156881105;
  double sym__0___45_1120880788595637835;
  fluidb_string<13> sym__0___45_6361490230660137987;
  unsigned sym__0___45_7131249874638266788;
  fluidb_string<18> sym__0__7265729621635359692;
  fluidb_string<9> sym__0___45_2986035740159621374;
  fluidb_string<9> sym__0__5081664509798388941;
  unsigned sym__0___45_8518596434939314413;
  unsigned sym__0__1988221653138390749;
  fluidb_string<7> sym__0___45_8801377200944175068;
  unsigned sym__0___45_4634183629139578121;
  unsigned sym__0__806472603637564420;
  unsigned sym__0__1725829484083430844;
  unsigned sym__0___45_5279274827282678566;
  unsigned sym__0___45_9129247388617675603;
  fluidb_string<15> sym__0__1232225844204183080;
  fluidb_string<2> sym__0__9184663680502119984;
  fluidb_string<2> sym__0___45_9023997483659527503;
  fluidb_string<2> sym__0___45_1026604631201554135;
  fluidb_string<2> sym__0___45_7189754320372197989;
 private:
};


class Record1 {
 public:
  Record1(unsigned __sym__0___45_395632927433559406, fluidb_string<25> __sym__0__3500080010252534473, fluidb_string<40> __sym__0__2800931817820227903, fluidb_string<16> __sym__0__7557617225319929765, fluidb_string<16> __sym__0___45_3980497182018067045, fluidb_string<13> __sym__0__2235173403257069670, fluidb_string<15> __sym__0___45_6641253057665067959, unsigned __sym__0__1255259528474633157, int __sym__0___45_4404182672923859309, unsigned __sym__0___45_614365468487006021, unsigned __sym__0__5021292656532353329, unsigned __sym__0__4343635027495243018, unsigned __sym__0___45_3654849337237924089, fluidb_string<21> __sym__0__6124017931208230794, unsigned __sym__0__2631968767089293636, fluidb_string<10> __sym__0__8161280318223951419, unsigned __sym__0__6646444558267925131, double __sym__0___45_371840055694522427, unsigned __sym__0__1207871997281537063, double __sym__0___45_8251624728007457683, unsigned __sym__0___45_1977777050929051591, unsigned __sym__0__5291527997285077246, double __sym__0__1945446523025649920, fluidb_string<13> __sym__0__8649969499362766248, unsigned __sym__0___45_9152772373621530983, fluidb_string<18> __sym__0__4661399151085104809, fluidb_string<9> __sym__0___45_2328336135844765285, fluidb_string<9> __sym__0__7204907144595482904, unsigned __sym__0__6947146092885793306, unsigned __sym__0___45_4879039772515408504, fluidb_string<7> __sym__0___45_3380765295385793791, unsigned __sym__0__1357424853380084934, unsigned __sym__0__1623525206981402081, unsigned __sym__0___45_7738248275094052359, unsigned __sym__0___45_5520726833947609389, unsigned __sym__0__7046675501704695032, fluidb_string<15> __sym__0___45_6418041259452967043, fluidb_string<2> __sym__0___45_1891834319792150395, fluidb_string<2> __sym__0__8613816579654205812, fluidb_string<2> __sym__0__4752565720665066828, fluidb_string<2> __sym__0___45_4077601550282544382) : sym__0___45_395632927433559406(__sym__0___45_395632927433559406), sym__0__3500080010252534473(__sym__0__3500080010252534473), sym__0__2800931817820227903(__sym__0__2800931817820227903), sym__0__7557617225319929765(__sym__0__7557617225319929765), sym__0___45_3980497182018067045(__sym__0___45_3980497182018067045), sym__0__2235173403257069670(__sym__0__2235173403257069670), sym__0___45_6641253057665067959(__sym__0___45_6641253057665067959), sym__0__1255259528474633157(__sym__0__1255259528474633157), sym__0___45_4404182672923859309(__sym__0___45_4404182672923859309), sym__0___45_614365468487006021(__sym__0___45_614365468487006021), sym__0__5021292656532353329(__sym__0__5021292656532353329), sym__0__4343635027495243018(__sym__0__4343635027495243018), sym__0___45_3654849337237924089(__sym__0___45_3654849337237924089), sym__0__6124017931208230794(__sym__0__6124017931208230794), sym__0__2631968767089293636(__sym__0__2631968767089293636), sym__0__8161280318223951419(__sym__0__8161280318223951419), sym__0__6646444558267925131(__sym__0__6646444558267925131), sym__0___45_371840055694522427(__sym__0___45_371840055694522427), sym__0__1207871997281537063(__sym__0__1207871997281537063), sym__0___45_8251624728007457683(__sym__0___45_8251624728007457683), sym__0___45_1977777050929051591(__sym__0___45_1977777050929051591), sym__0__5291527997285077246(__sym__0__5291527997285077246), sym__0__1945446523025649920(__sym__0__1945446523025649920), sym__0__8649969499362766248(__sym__0__8649969499362766248), sym__0___45_9152772373621530983(__sym__0___45_9152772373621530983), sym__0__4661399151085104809(__sym__0__4661399151085104809), sym__0___45_2328336135844765285(__sym__0___45_2328336135844765285), sym__0__7204907144595482904(__sym__0__7204907144595482904), sym__0__6947146092885793306(__sym__0__6947146092885793306), sym__0___45_4879039772515408504(__sym__0___45_4879039772515408504), sym__0___45_3380765295385793791(__sym__0___45_3380765295385793791), sym__0__1357424853380084934(__sym__0__1357424853380084934), sym__0__1623525206981402081(__sym__0__1623525206981402081), sym__0___45_7738248275094052359(__sym__0___45_7738248275094052359), sym__0___45_5520726833947609389(__sym__0___45_5520726833947609389), sym__0__7046675501704695032(__sym__0__7046675501704695032), sym__0___45_6418041259452967043(__sym__0___45_6418041259452967043), sym__0___45_1891834319792150395(__sym__0___45_1891834319792150395), sym__0__8613816579654205812(__sym__0__8613816579654205812), sym__0__4752565720665066828(__sym__0__4752565720665066828), sym__0___45_4077601550282544382(__sym__0___45_4077601550282544382)
  {
  }
  Record1() 
  {
  }
  std::string show() const{
    std::stringstream o;
    o << sym__0___45_395632927433559406 << " | " << arrToString(sym__0__3500080010252534473) << " | " << arrToString(sym__0__2800931817820227903) << " | " << arrToString(sym__0__7557617225319929765) << " | " << arrToString(sym__0___45_3980497182018067045) << " | " << arrToString(sym__0__2235173403257069670) << " | " << arrToString(sym__0___45_6641253057665067959) << " | " << sym__0__1255259528474633157 << " | " << sym__0___45_4404182672923859309 << " | " << sym__0___45_614365468487006021 << " | " << sym__0__5021292656532353329 << " | " << sym__0__4343635027495243018 << " | " << sym__0___45_3654849337237924089 << " | " << arrToString(sym__0__6124017931208230794) << " | " << sym__0__2631968767089293636 << " | " << arrToString(sym__0__8161280318223951419) << " | " << sym__0__6646444558267925131 << " | " << sym__0___45_371840055694522427 << " | " << sym__0__1207871997281537063 << " | " << sym__0___45_8251624728007457683 << " | " << sym__0___45_1977777050929051591 << " | " << sym__0__5291527997285077246 << " | " << sym__0__1945446523025649920 << " | " << arrToString(sym__0__8649969499362766248) << " | " << sym__0___45_9152772373621530983 << " | " << arrToString(sym__0__4661399151085104809) << " | " << arrToString(sym__0___45_2328336135844765285) << " | " << arrToString(sym__0__7204907144595482904) << " | " << sym__0__6947146092885793306 << " | " << sym__0___45_4879039772515408504 << " | " << arrToString(sym__0___45_3380765295385793791) << " | " << sym__0__1357424853380084934 << " | " << sym__0__1623525206981402081 << " | " << sym__0___45_7738248275094052359 << " | " << sym__0___45_5520726833947609389 << " | " << sym__0__7046675501704695032 << " | " << arrToString(sym__0___45_6418041259452967043) << " | " << arrToString(sym__0___45_1891834319792150395) << " | " << arrToString(sym__0__8613816579654205812) << " | " << arrToString(sym__0__4752565720665066828) << " | " << arrToString(sym__0___45_4077601550282544382);
    return o.str();
  }
  bool operator <(const Record1& otherRec) const{
    return (otherRec.sym__0___45_395632927433559406 < sym__0___45_395632927433559406 && (otherRec.sym__0__3500080010252534473 < sym__0__3500080010252534473 && (otherRec.sym__0__2800931817820227903 < sym__0__2800931817820227903 && (otherRec.sym__0__7557617225319929765 < sym__0__7557617225319929765 && (otherRec.sym__0___45_3980497182018067045 < sym__0___45_3980497182018067045 && (otherRec.sym__0__2235173403257069670 < sym__0__2235173403257069670 && (otherRec.sym__0___45_6641253057665067959 < sym__0___45_6641253057665067959 && (otherRec.sym__0__1255259528474633157 < sym__0__1255259528474633157 && (otherRec.sym__0___45_4404182672923859309 < sym__0___45_4404182672923859309 && (otherRec.sym__0___45_614365468487006021 < sym__0___45_614365468487006021 && (otherRec.sym__0__5021292656532353329 < sym__0__5021292656532353329 && (otherRec.sym__0__4343635027495243018 < sym__0__4343635027495243018 && (otherRec.sym__0___45_3654849337237924089 < sym__0___45_3654849337237924089 && (otherRec.sym__0__6124017931208230794 < sym__0__6124017931208230794 && (otherRec.sym__0__2631968767089293636 < sym__0__2631968767089293636 && (otherRec.sym__0__8161280318223951419 < sym__0__8161280318223951419 && (otherRec.sym__0__6646444558267925131 < sym__0__6646444558267925131 && (otherRec.sym__0___45_371840055694522427 < sym__0___45_371840055694522427 && (otherRec.sym__0__1207871997281537063 < sym__0__1207871997281537063 && (otherRec.sym__0___45_8251624728007457683 < sym__0___45_8251624728007457683 && (otherRec.sym__0___45_1977777050929051591 < sym__0___45_1977777050929051591 && (otherRec.sym__0__5291527997285077246 < sym__0__5291527997285077246 && (otherRec.sym__0__1945446523025649920 < sym__0__1945446523025649920 && (otherRec.sym__0__8649969499362766248 < sym__0__8649969499362766248 && (otherRec.sym__0___45_9152772373621530983 < sym__0___45_9152772373621530983 && (otherRec.sym__0__4661399151085104809 < sym__0__4661399151085104809 && (otherRec.sym__0___45_2328336135844765285 < sym__0___45_2328336135844765285 && (otherRec.sym__0__7204907144595482904 < sym__0__7204907144595482904 && (otherRec.sym__0__6947146092885793306 < sym__0__6947146092885793306 && (otherRec.sym__0___45_4879039772515408504 < sym__0___45_4879039772515408504 && (otherRec.sym__0___45_3380765295385793791 < sym__0___45_3380765295385793791 && (otherRec.sym__0__1357424853380084934 < sym__0__1357424853380084934 && (otherRec.sym__0__1623525206981402081 < sym__0__1623525206981402081 && (otherRec.sym__0___45_7738248275094052359 < sym__0___45_7738248275094052359 && (otherRec.sym__0___45_5520726833947609389 < sym__0___45_5520726833947609389 && (otherRec.sym__0__7046675501704695032 < sym__0__7046675501704695032 && (otherRec.sym__0___45_6418041259452967043 < sym__0___45_6418041259452967043 && (otherRec.sym__0___45_1891834319792150395 < sym__0___45_1891834319792150395 && (otherRec.sym__0__8613816579654205812 < sym__0__8613816579654205812 && (otherRec.sym__0__4752565720665066828 < sym__0__4752565720665066828 && otherRec.sym__0___45_4077601550282544382 < sym__0___45_4077601550282544382))))))))))))))))))))))))))))))))))))))));
  }
  bool operator ==(const Record1& otherRec) const{
    return (otherRec.sym__0___45_395632927433559406 == sym__0___45_395632927433559406 && (otherRec.sym__0__3500080010252534473 == sym__0__3500080010252534473 && (otherRec.sym__0__2800931817820227903 == sym__0__2800931817820227903 && (otherRec.sym__0__7557617225319929765 == sym__0__7557617225319929765 && (otherRec.sym__0___45_3980497182018067045 == sym__0___45_3980497182018067045 && (otherRec.sym__0__2235173403257069670 == sym__0__2235173403257069670 && (otherRec.sym__0___45_6641253057665067959 == sym__0___45_6641253057665067959 && (otherRec.sym__0__1255259528474633157 == sym__0__1255259528474633157 && (otherRec.sym__0___45_4404182672923859309 == sym__0___45_4404182672923859309 && (otherRec.sym__0___45_614365468487006021 == sym__0___45_614365468487006021 && (otherRec.sym__0__5021292656532353329 == sym__0__5021292656532353329 && (otherRec.sym__0__4343635027495243018 == sym__0__4343635027495243018 && (otherRec.sym__0___45_3654849337237924089 == sym__0___45_3654849337237924089 && (otherRec.sym__0__6124017931208230794 == sym__0__6124017931208230794 && (otherRec.sym__0__2631968767089293636 == sym__0__2631968767089293636 && (otherRec.sym__0__8161280318223951419 == sym__0__8161280318223951419 && (otherRec.sym__0__6646444558267925131 == sym__0__6646444558267925131 && (otherRec.sym__0___45_371840055694522427 == sym__0___45_371840055694522427 && (otherRec.sym__0__1207871997281537063 == sym__0__1207871997281537063 && (otherRec.sym__0___45_8251624728007457683 == sym__0___45_8251624728007457683 && (otherRec.sym__0___45_1977777050929051591 == sym__0___45_1977777050929051591 && (otherRec.sym__0__5291527997285077246 == sym__0__5291527997285077246 && (otherRec.sym__0__1945446523025649920 == sym__0__1945446523025649920 && (otherRec.sym__0__8649969499362766248 == sym__0__8649969499362766248 && (otherRec.sym__0___45_9152772373621530983 == sym__0___45_9152772373621530983 && (otherRec.sym__0__4661399151085104809 == sym__0__4661399151085104809 && (otherRec.sym__0___45_2328336135844765285 == sym__0___45_2328336135844765285 && (otherRec.sym__0__7204907144595482904 == sym__0__7204907144595482904 && (otherRec.sym__0__6947146092885793306 == sym__0__6947146092885793306 && (otherRec.sym__0___45_4879039772515408504 == sym__0___45_4879039772515408504 && (otherRec.sym__0___45_3380765295385793791 == sym__0___45_3380765295385793791 && (otherRec.sym__0__1357424853380084934 == sym__0__1357424853380084934 && (otherRec.sym__0__1623525206981402081 == sym__0__1623525206981402081 && (otherRec.sym__0___45_7738248275094052359 == sym__0___45_7738248275094052359 && (otherRec.sym__0___45_5520726833947609389 == sym__0___45_5520726833947609389 && (otherRec.sym__0__7046675501704695032 == sym__0__7046675501704695032 && (otherRec.sym__0___45_6418041259452967043 == sym__0___45_6418041259452967043 && (otherRec.sym__0___45_1891834319792150395 == sym__0___45_1891834319792150395 && (otherRec.sym__0__8613816579654205812 == sym__0__8613816579654205812 && (otherRec.sym__0__4752565720665066828 == sym__0__4752565720665066828 && otherRec.sym__0___45_4077601550282544382 == sym__0___45_4077601550282544382))))))))))))))))))))))))))))))))))))))));
  }
  bool operator !=(const Record1& otherRec) const{
    return (otherRec.sym__0___45_395632927433559406 != sym__0___45_395632927433559406 || (otherRec.sym__0__3500080010252534473 != sym__0__3500080010252534473 || (otherRec.sym__0__2800931817820227903 != sym__0__2800931817820227903 || (otherRec.sym__0__7557617225319929765 != sym__0__7557617225319929765 || (otherRec.sym__0___45_3980497182018067045 != sym__0___45_3980497182018067045 || (otherRec.sym__0__2235173403257069670 != sym__0__2235173403257069670 || (otherRec.sym__0___45_6641253057665067959 != sym__0___45_6641253057665067959 || (otherRec.sym__0__1255259528474633157 != sym__0__1255259528474633157 || (otherRec.sym__0___45_4404182672923859309 != sym__0___45_4404182672923859309 || (otherRec.sym__0___45_614365468487006021 != sym__0___45_614365468487006021 || (otherRec.sym__0__5021292656532353329 != sym__0__5021292656532353329 || (otherRec.sym__0__4343635027495243018 != sym__0__4343635027495243018 || (otherRec.sym__0___45_3654849337237924089 != sym__0___45_3654849337237924089 || (otherRec.sym__0__6124017931208230794 != sym__0__6124017931208230794 || (otherRec.sym__0__2631968767089293636 != sym__0__2631968767089293636 || (otherRec.sym__0__8161280318223951419 != sym__0__8161280318223951419 || (otherRec.sym__0__6646444558267925131 != sym__0__6646444558267925131 || (otherRec.sym__0___45_371840055694522427 != sym__0___45_371840055694522427 || (otherRec.sym__0__1207871997281537063 != sym__0__1207871997281537063 || (otherRec.sym__0___45_8251624728007457683 != sym__0___45_8251624728007457683 || (otherRec.sym__0___45_1977777050929051591 != sym__0___45_1977777050929051591 || (otherRec.sym__0__5291527997285077246 != sym__0__5291527997285077246 || (otherRec.sym__0__1945446523025649920 != sym__0__1945446523025649920 || (otherRec.sym__0__8649969499362766248 != sym__0__8649969499362766248 || (otherRec.sym__0___45_9152772373621530983 != sym__0___45_9152772373621530983 || (otherRec.sym__0__4661399151085104809 != sym__0__4661399151085104809 || (otherRec.sym__0___45_2328336135844765285 != sym__0___45_2328336135844765285 || (otherRec.sym__0__7204907144595482904 != sym__0__7204907144595482904 || (otherRec.sym__0__6947146092885793306 != sym__0__6947146092885793306 || (otherRec.sym__0___45_4879039772515408504 != sym__0___45_4879039772515408504 || (otherRec.sym__0___45_3380765295385793791 != sym__0___45_3380765295385793791 || (otherRec.sym__0__1357424853380084934 != sym__0__1357424853380084934 || (otherRec.sym__0__1623525206981402081 != sym__0__1623525206981402081 || (otherRec.sym__0___45_7738248275094052359 != sym__0___45_7738248275094052359 || (otherRec.sym__0___45_5520726833947609389 != sym__0___45_5520726833947609389 || (otherRec.sym__0__7046675501704695032 != sym__0__7046675501704695032 || (otherRec.sym__0___45_6418041259452967043 != sym__0___45_6418041259452967043 || (otherRec.sym__0___45_1891834319792150395 != sym__0___45_1891834319792150395 || (otherRec.sym__0__8613816579654205812 != sym__0__8613816579654205812 || (otherRec.sym__0__4752565720665066828 != sym__0__4752565720665066828 || otherRec.sym__0___45_4077601550282544382 != sym__0___45_4077601550282544382))))))))))))))))))))))))))))))))))))))));
  }
  unsigned sym__0___45_395632927433559406;
  fluidb_string<25> sym__0__3500080010252534473;
  fluidb_string<40> sym__0__2800931817820227903;
  fluidb_string<16> sym__0__7557617225319929765;
  fluidb_string<16> sym__0___45_3980497182018067045;
  fluidb_string<13> sym__0__2235173403257069670;
  fluidb_string<15> sym__0___45_6641253057665067959;
  unsigned sym__0__1255259528474633157;
  int sym__0___45_4404182672923859309;
  unsigned sym__0___45_614365468487006021;
  unsigned sym__0__5021292656532353329;
  unsigned sym__0__4343635027495243018;
  unsigned sym__0___45_3654849337237924089;
  fluidb_string<21> sym__0__6124017931208230794;
  unsigned sym__0__2631968767089293636;
  fluidb_string<10> sym__0__8161280318223951419;
  unsigned sym__0__6646444558267925131;
  double sym__0___45_371840055694522427;
  unsigned sym__0__1207871997281537063;
  double sym__0___45_8251624728007457683;
  unsigned sym__0___45_1977777050929051591;
  unsigned sym__0__5291527997285077246;
  double sym__0__1945446523025649920;
  fluidb_string<13> sym__0__8649969499362766248;
  unsigned sym__0___45_9152772373621530983;
  fluidb_string<18> sym__0__4661399151085104809;
  fluidb_string<9> sym__0___45_2328336135844765285;
  fluidb_string<9> sym__0__7204907144595482904;
  unsigned sym__0__6947146092885793306;
  unsigned sym__0___45_4879039772515408504;
  fluidb_string<7> sym__0___45_3380765295385793791;
  unsigned sym__0__1357424853380084934;
  unsigned sym__0__1623525206981402081;
  unsigned sym__0___45_7738248275094052359;
  unsigned sym__0___45_5520726833947609389;
  unsigned sym__0__7046675501704695032;
  fluidb_string<15> sym__0___45_6418041259452967043;
  fluidb_string<2> sym__0___45_1891834319792150395;
  fluidb_string<2> sym__0__8613816579654205812;
  fluidb_string<2> sym__0__4752565720665066828;
  fluidb_string<2> sym__0___45_4077601550282544382;
 private:
};


class CallableClass5 {
 public:
  Record4 operator()(const Record2& record0) {
    return Record4(record0.sym__0___45_4532026337430972310, record0.sym__0__5967878085860026810, record0.sym__0__4437551601976402253, record0.sym__0___45_8824352318197405717, record0.sym__0__462272293144630813, record0.sym__0__6951672169272331993, record0.sym__0__8001753553028231903, record0.sym__0__7959165797094177348, record0.sym__0__3796606591825283389);
  }
  typedef Record4 Codomain;
  typedef Record2 Domain0;
 private:
};


class CallableClass8 {
 public:
  bool operator()(const Record7& record6) {
    return like(record6.sym__0___45_52536403880094569, "ASIA");
  }
  typedef bool Codomain;
  typedef Record7 Domain0;
 private:
};


class CallableClass13 {
 public:
  Record12 operator()(const Record11& record9, const Record4& record10) {
    return Record12(record9.sym__0__1700144450823265023, record9.sym__0__642977477037249040, record9.sym__0___45_4128377972278795822, record9.sym__0___45_5088627304821687252, record9.sym__0___45_4948625537612330786, record9.sym__0___45_9194700948435084701, record9.sym__0___45_2335925802980201584, record9.sym__0__8952961796666569484, record9.sym__0___45_764958528451264714, record9.sym__0___45_1817156327375219010, record9.sym__0___45_2837638767689209768, record9.sym__0___45_2981394887932269865, record9.sym__0___45_3207638480786881318, record9.sym__0___45_2706668038305292969, record9.sym__0___45_5698288034649371459, record9.sym__0___45_4860327901106131906, record9.sym__0__4990602831923261550, record9.sym__0__1941197998689785612, record9.sym__0__8920978217467339962, record9.sym__0__2290947992840979092, record9.sym__0__7968803792053807648, record9.sym__0___45_648214588708582661, record9.sym__0__5240005983315163865, record9.sym__0__8676547963641831009, record9.sym__0__7098358135655077312, record9.sym__0___45_3236172823121798352, record9.sym__0__209296758379513054, record9.sym__0__990102210371531505, record9.sym__0__6731021262741660999, record9.sym__0__43383544609224961, record9.sym__0___45_1451536826369255544, record9.sym__0___45_3626731045154418301, record9.sym__0__6266038698953764136, record9.sym__0___45_3178257250902948896, record9.sym__0___45_1707432467122892938, record9.sym__0__6803837608073687569, record9.sym__0__3019318186977723140, record9.sym__0___45_3182244727465674548, record9.sym__0__6970778392668530317, record9.sym__0__1291675427782851845, record9.sym__0___45_7095393819436573425, record10.sym__0__7178003535380331304, record10.sym__0___45_7020257275696364520, record10.sym__0___45_6307179734719967033, record10.sym__0__4568304886257136061, record10.sym__0___45_6291097039630000265, record10.sym__0__551327770031967739, record10.sym__0__3827696365022297353, record10.sym__0___45_1779543743759935870, record10.sym__0__3752090135924368535);
  }
  typedef Record12 Codomain;
  typedef Record11 Domain0;
  typedef Record4 Domain1;
 private:
};


class CallableClass27 {
 public:
  Record22 operator()(const Record24& record21) {
    return Record22(vAggrSum23(record21.sym__0___45_1874278765651523026), vAggrFirst25(record21.sym__0__7928058280817873233), vAggrFirst26(record21.sym__0__8808022150768814575));
  }
  typedef Record22 Codomain;
  typedef Record24 Domain0;
 private:
  AggrSum<unsigned> vAggrSum23;
  AggrFirst<unsigned> vAggrFirst25;
  AggrFirst<fluidb_string<10>> vAggrFirst26;
};


class CallableClass16 {
 public:
  Record14 operator()(const Record11& record15) {
    return Record14(record15.sym__0___45_2837638767689209768);
  }
  typedef Record14 Codomain;
  typedef Record11 Domain0;
 private:
};


class CallableClass31 {
 public:
  Record28 operator()(const Record22& record30) {
    return Record28(record30.sym__0___45_2114395819171341319, record30.sym__0__8560746496208341995);
  }
  typedef Record28 Codomain;
  typedef Record22 Domain0;
 private:
};


class CallableClass20 {
 public:
  bool operator()(const Record12& record19) {
    return (("MFGR#2221" <= record19.sym__0___45_4574956228592531724) && (record19.sym__0___45_4574956228592531724 <= "MFGR#2228"));
  }
  typedef bool Codomain;
  typedef Record12 Domain0;
 private:
};


class CallableClass3 {
 public:
  Record1 operator()(const Record2& record0) {
    return Record1(record0.sym__0___45_5856119524029611077, record0.sym__0___45_6117756446690137488, record0.sym__0___45_1224041454770943330, record0.sym__0__3812587929888833564, record0.sym__0___45_8008422244145826406, record0.sym__0___45_4939322251048870433, record0.sym__0__9053752194642805744, record0.sym__0__7640136232660398972, record0.sym__0__3289943100803186450, record0.sym__0___45_5627701903624601606, record0.sym__0___45_863299618022773480, record0.sym__0__8136723066761439923, record0.sym__0___45_8900710125615980474, record0.sym__0__3462758906763983155, record0.sym__0__3593248492832864765, record0.sym__0__570789152911192442, record0.sym__0___45_898962213167368918, record0.sym__0__8374566300773412732, record0.sym__0__3427059227198728358, record0.sym__0___45_6183981215901482044, record0.sym__0__5401582859916018176, record0.sym__0___45_5742182270645980233, record0.sym__0___45_6866160564727197111, record0.sym__0__5391279297800068881, record0.sym__0__6547894395141806496, record0.sym__0___45_3537255481618975984, record0.sym__0___45_489602595012032102, record0.sym__0___45_4289355322834357343, record0.sym__0__3088708723790424355, record0.sym__0__7661335306996867761, record0.sym__0__5988258660856233160, record0.sym__0__9055435109332708863, record0.sym__0___45_8293017417291819416, record0.sym__0__6710199602869345088, record0.sym__0___45_6808136983507392814, record0.sym__0__4732268644213463873, record0.sym__0___45_9054202570868277068, record0.sym__0___45_2078724704519105348, record0.sym__0__1821380049868269517, record0.sym__0__9082608366399799653, record0.sym__0__3719923678451811915);
  }
  typedef Record1 Codomain;
  typedef Record2 Domain0;
 private:
};


class CallableClass18 {
 public:
  Record14 operator()(const Record4& record17) {
    return Record14(record17.sym__0__7178003535380331304);
  }
  typedef Record14 Codomain;
  typedef Record4 Domain0;
 private:
};


class CallableClass29 {
 public:
  Record28 operator()(const Record24& record21) {
    return Record28(record21.sym__0__7928058280817873233, record21.sym__0__8808022150768814575);
  }
  typedef Record28 Codomain;
  typedef Record24 Domain0;
 private:
};






int main() {
  // ReverseTrigger: (Just 
  //   (Left 
  //     [
  //      QJoin 
  //         (P0 
  //           (R2 REq 
  //               (R0 (E0 (ESym "lo_partkey"))) 
  //               (R0 (E0 (ESym "p_partkey")))))
  std::cout << "ReverseTrigger: (Just \n  (Left \n    [\n     QJoin \n        (P0 \n          (R2 REq \n              (R0 (E0 (ESym \"lo_partkey\"))) \n              (R0 (E0 (ESym \"p_partkey\")))))\n    ]))" << std::endl;
  {
    auto operation = mkUnJoin<CallableClass3, CallableClass5>(Just("/tmp/fluidb_store/data67.dat"), Nothing(), Just("/tmp/fluidb_store/data68.dat"), Nothing(), Just("/tmp/fluidb_store/data2.dat"));
    operation.run();
    operation.print_output(10);
  }
  // Delete: (Q1 
  //   (QSort [E0 (ESym "d_year"),E0 (ESym "p_brand1")]) 
  //   (Q1 
  //     (QGroup 
  //       [(ESym "tmpSym0",E0 (NAggr AggrSum (E0 (ESym "lo_revenue")))),
  //        (ESym "d_year",E0 (NAggr AggrFirst (E0 (ESym "d_year")))),
  //        (ESym "p_brand1",E0 (NAggr AggrFirst (E0 (ESym "p_brand1"))))] 
  //       [E0 (ESym "d_year"),E0 (ESym "p_brand1")]) 
  //     (S 
  //       (P2 
  //         PAnd 
  //         (P0 
  //           (R2 RLike 
  //               (R0 (E0 (ESym "s_region"))) 
  //               (R0 (E0 (EString "AMERICA"))))) 
  //         (P0 
  //           (R2 RLike 
  //               (R0 (E0 (ESym "p_category"))) 
  //               (R0 (E0 (EString "MFGR#12")))))) 
  //       (J 
  //         (P0 
  //           (R2 REq 
  //               (R0 (E0 (ESym "lo_partkey"))) 
  //               (R0 (E0 (ESym "p_partkey"))))) 
  //         (J 
  //           (P0 
  //             (R2 REq 
  //                 (R0 (E0 (ESym "lo_orderdate"))) 
  //                 (R0 (E0 (ESym "d_datekey"))))) 
  //           (J 
  //             (P0 
  //               (R2 REq 
  //                   (R0 (E0 (ESym "lo_suppkey"))) 
  //                   (R0 (E0 (ESym "s_suppkey"))))) 
  //             (Q0 (TSymbol "supplier")) 
  //             (Q0 (TSymbol "lineorder"))) 
  //           (Q0 (TSymbol "date"))) 
  std::cout << "Delete: (Q1 \n  (QSort [E0 (ESym \"d_year\"),E0 (ESym \"p_brand1\")]) \n  (Q1 \n    (QGroup \n      [(ESym \"tmpSym0\",E0 (NAggr AggrSum (E0 (ESym \"lo_revenue\")))),\n       (ESym \"d_year\",E0 (NAggr AggrFirst (E0 (ESym \"d_year\")))),\n       (ESym \"p_brand1\",E0 (NAggr AggrFirst (E0 (ESym \"p_brand1\"))))] \n      [E0 (ESym \"d_year\"),E0 (ESym \"p_brand1\")]) \n    (S \n      (P2 \n        PAnd \n        (P0 \n          (R2 RLike \n              (R0 (E0 (ESym \"s_region\"))) \n              (R0 (E0 (EString \"AMERICA\"))))) \n        (P0 \n          (R2 RLike \n              (R0 (E0 (ESym \"p_category\"))) \n              (R0 (E0 (EString \"MFGR#12\")))))) \n      (J \n        (P0 \n          (R2 REq \n              (R0 (E0 (ESym \"lo_partkey\"))) \n              (R0 (E0 (ESym \"p_partkey\"))))) \n        (J \n          (P0 \n            (R2 REq \n                (R0 (E0 (ESym \"lo_orderdate\"))) \n                (R0 (E0 (ESym \"d_datekey\"))))) \n          (J \n            (P0 \n              (R2 REq \n                  (R0 (E0 (ESym \"lo_suppkey\"))) \n                  (R0 (E0 (ESym \"s_suppkey\"))))) \n            (Q0 (TSymbol \"supplier\")) \n            (Q0 (TSymbol \"lineorder\"))) \n          (Q0 (TSymbol \"date\"))) \n        (Q0 (TSymbol \"part\"))))))" << std::endl;
  deleteFile("/tmp/fluidb_store/data91.dat");
  // Delete: (Q1 
  //   (QGroup 
  //     [(ESym "tmpSym0",E0 (NAggr AggrSum (E0 (ESym "lo_revenue")))),
  //      (ESym "d_year",E0 (NAggr AggrFirst (E0 (ESym "d_year")))),
  //      (ESym "p_brand1",E0 (NAggr AggrFirst (E0 (ESym "p_brand1"))))] 
  //     [E0 (ESym "d_year"),E0 (ESym "p_brand1")]) 
  //   (S 
  //     (P2 
  //       PAnd 
  //       (P0 
  //         (R2 RLike 
  //             (R0 (E0 (ESym "s_region"))) 
  //             (R0 (E0 (EString "AMERICA"))))) 
  //       (P0 
  //         (R2 RLike 
  //             (R0 (E0 (ESym "p_category"))) 
  //             (R0 (E0 (EString "MFGR#12")))))) 
  //     (J 
  //       (P0 
  //         (R2 REq 
  //             (R0 (E0 (ESym "lo_partkey"))) 
  //             (R0 (E0 (ESym "p_partkey"))))) 
  //       (J 
  //         (P0 
  //           (R2 REq 
  //               (R0 (E0 (ESym "lo_orderdate"))) 
  //               (R0 (E0 (ESym "d_datekey"))))) 
  //         (J 
  //           (P0 
  //             (R2 REq 
  //                 (R0 (E0 (ESym "lo_suppkey"))) 
  //                 (R0 (E0 (ESym "s_suppkey"))))) 
  //           (Q0 (TSymbol "supplier")) 
  //           (Q0 (TSymbol "lineorder"))) 
  //         (Q0 (TSymbol "date"))) 
  std::cout << "Delete: (Q1 \n  (QGroup \n    [(ESym \"tmpSym0\",E0 (NAggr AggrSum (E0 (ESym \"lo_revenue\")))),\n     (ESym \"d_year\",E0 (NAggr AggrFirst (E0 (ESym \"d_year\")))),\n     (ESym \"p_brand1\",E0 (NAggr AggrFirst (E0 (ESym \"p_brand1\"))))] \n    [E0 (ESym \"d_year\"),E0 (ESym \"p_brand1\")]) \n  (S \n    (P2 \n      PAnd \n      (P0 \n        (R2 RLike \n            (R0 (E0 (ESym \"s_region\"))) \n            (R0 (E0 (EString \"AMERICA\"))))) \n      (P0 \n        (R2 RLike \n            (R0 (E0 (ESym \"p_category\"))) \n            (R0 (E0 (EString \"MFGR#12\")))))) \n    (J \n      (P0 \n        (R2 REq \n            (R0 (E0 (ESym \"lo_partkey\"))) \n            (R0 (E0 (ESym \"p_partkey\"))))) \n      (J \n        (P0 \n          (R2 REq \n              (R0 (E0 (ESym \"lo_orderdate\"))) \n              (R0 (E0 (ESym \"d_datekey\"))))) \n        (J \n          (P0 \n            (R2 REq \n                (R0 (E0 (ESym \"lo_suppkey\"))) \n                (R0 (E0 (ESym \"s_suppkey\"))))) \n          (Q0 (TSymbol \"supplier\")) \n          (Q0 (TSymbol \"lineorder\"))) \n        (Q0 (TSymbol \"date\"))) \n      (Q0 (TSymbol \"part\")))))" << std::endl;
  deleteFile("/tmp/fluidb_store/data90.dat");
  // Delete: (S 
  //   (P2 
  //     PAnd 
  //     (P0 
  //       (R2 RLike 
  //           (R0 (E0 (ESym "s_region"))) 
  //           (R0 (E0 (EString "AMERICA"))))) 
  //     (P0 
  //       (R2 RLike 
  //           (R0 (E0 (ESym "p_category"))) 
  //           (R0 (E0 (EString "MFGR#12")))))) 
  //   (J 
  //     (P0 
  //       (R2 REq 
  //           (R0 (E0 (ESym "lo_partkey"))) 
  //           (R0 (E0 (ESym "p_partkey"))))) 
  //     (J 
  //       (P0 
  //         (R2 REq 
  //             (R0 (E0 (ESym "lo_orderdate"))) 
  //             (R0 (E0 (ESym "d_datekey"))))) 
  //       (J 
  //         (P0 
  //           (R2 REq 
  //               (R0 (E0 (ESym "lo_suppkey"))) 
  //               (R0 (E0 (ESym "s_suppkey"))))) 
  //         (Q0 (TSymbol "supplier")) 
  //         (Q0 (TSymbol "lineorder"))) 
  //       (Q0 (TSymbol "date"))) 
  std::cout << "Delete: (S \n  (P2 \n    PAnd \n    (P0 \n      (R2 RLike \n          (R0 (E0 (ESym \"s_region\"))) \n          (R0 (E0 (EString \"AMERICA\"))))) \n    (P0 \n      (R2 RLike \n          (R0 (E0 (ESym \"p_category\"))) \n          (R0 (E0 (EString \"MFGR#12\")))))) \n  (J \n    (P0 \n      (R2 REq \n          (R0 (E0 (ESym \"lo_partkey\"))) \n          (R0 (E0 (ESym \"p_partkey\"))))) \n    (J \n      (P0 \n        (R2 REq \n            (R0 (E0 (ESym \"lo_orderdate\"))) \n            (R0 (E0 (ESym \"d_datekey\"))))) \n      (J \n        (P0 \n          (R2 REq \n              (R0 (E0 (ESym \"lo_suppkey\"))) \n              (R0 (E0 (ESym \"s_suppkey\"))))) \n        (Q0 (TSymbol \"supplier\")) \n        (Q0 (TSymbol \"lineorder\"))) \n      (Q0 (TSymbol \"date\"))) \n    (Q0 (TSymbol \"part\"))))" << std::endl;
  deleteFile("/tmp/fluidb_store/data50.dat");
  // Delete: (S 
  //   (P1 
  //     PNot 
  //     (P0 
  //       (R2 RLike 
  //           (R0 (E0 (ESym "p_category"))) 
  //           (R0 (E0 (EString "MFGR#12")))))) 
  //   (J 
  //     (P0 
  //       (R2 REq 
  //           (R0 (E0 (ESym "lo_partkey"))) 
  //           (R0 (E0 (ESym "p_partkey"))))) 
  //     (S 
  //       (P0 
  //         (R2 RLike 
  //             (R0 (E0 (ESym "s_region"))) 
  //             (R0 (E0 (EString "AMERICA"))))) 
  //       (J 
  //         (P0 
  //           (R2 REq 
  //               (R0 (E0 (ESym "lo_orderdate"))) 
  //               (R0 (E0 (ESym "d_datekey"))))) 
  //         (J 
  //           (P0 
  //             (R2 REq 
  //                 (R0 (E0 (ESym "lo_suppkey"))) 
  //                 (R0 (E0 (ESym "s_suppkey"))))) 
  //           (Q0 (TSymbol "supplier")) 
  //           (Q0 (TSymbol "lineorder"))) 
  //         (Q0 (TSymbol "date")))) 
  std::cout << "Delete: (S \n  (P1 \n    PNot \n    (P0 \n      (R2 RLike \n          (R0 (E0 (ESym \"p_category\"))) \n          (R0 (E0 (EString \"MFGR#12\")))))) \n  (J \n    (P0 \n      (R2 REq \n          (R0 (E0 (ESym \"lo_partkey\"))) \n          (R0 (E0 (ESym \"p_partkey\"))))) \n    (S \n      (P0 \n        (R2 RLike \n            (R0 (E0 (ESym \"s_region\"))) \n            (R0 (E0 (EString \"AMERICA\"))))) \n      (J \n        (P0 \n          (R2 REq \n              (R0 (E0 (ESym \"lo_orderdate\"))) \n              (R0 (E0 (ESym \"d_datekey\"))))) \n        (J \n          (P0 \n            (R2 REq \n                (R0 (E0 (ESym \"lo_suppkey\"))) \n                (R0 (E0 (ESym \"s_suppkey\"))))) \n          (Q0 (TSymbol \"supplier\")) \n          (Q0 (TSymbol \"lineorder\"))) \n        (Q0 (TSymbol \"date\")))) \n    (Q0 (TSymbol \"part\"))))" << std::endl;
  deleteFile("/tmp/fluidb_store/data71.dat");
  // ForwardTrigger: (Just 
  //   (Right 
  //     [
  //      QSel 
  //         (P0 
  //           (R2 RLike 
  //               (R0 (E0 (ESym "s_region"))) 
  //               (R0 (E0 (EString "ASIA")))))
  std::cout << "ForwardTrigger: (Just \n  (Right \n    [\n     QSel \n        (P0 \n          (R2 RLike \n              (R0 (E0 (ESym \"s_region\"))) \n              (R0 (E0 (EString \"ASIA\")))))\n    ]))" << std::endl;
  {
    auto operation = mkSelect<CallableClass8>(Just<const std::string>("/tmp/fluidb_store/data94.dat"), Just<const std::string>("/tmp/fluidb_store/data95.dat"), "/tmp/fluidb_store/data41.dat");
    operation.run();
    operation.print_output(10);
  }
  // Delete: (S 
  //   (P1 
  //     PNot 
  //     (P0 
  //       (R2 RLike (R0 (E0 (ESym "s_region"))) (R0 (E0 (EString "ASIA")))))) 
  //   (J 
  //     (P0 
  //       (R2 REq 
  //           (R0 (E0 (ESym "lo_orderdate"))) 
  //           (R0 (E0 (ESym "d_datekey"))))) 
  //     (J 
  //       (P0 
  //         (R2 REq 
  //             (R0 (E0 (ESym "lo_suppkey"))) 
  //             (R0 (E0 (ESym "s_suppkey"))))) 
  //       (Q0 (TSymbol "supplier")) 
  //       (Q0 (TSymbol "lineorder"))) 
  std::cout << "Delete: (S \n  (P1 \n    PNot \n    (P0 \n      (R2 RLike (R0 (E0 (ESym \"s_region\"))) (R0 (E0 (EString \"ASIA\")))))) \n  (J \n    (P0 \n      (R2 REq \n          (R0 (E0 (ESym \"lo_orderdate\"))) \n          (R0 (E0 (ESym \"d_datekey\"))))) \n    (J \n      (P0 \n        (R2 REq \n            (R0 (E0 (ESym \"lo_suppkey\"))) \n            (R0 (E0 (ESym \"s_suppkey\"))))) \n      (Q0 (TSymbol \"supplier\")) \n      (Q0 (TSymbol \"lineorder\"))) \n    (Q0 (TSymbol \"date\"))))" << std::endl;
  deleteFile("/tmp/fluidb_store/data95.dat");
  // Delete: (Q2 
  //   (QRightAntijoin 
  //     (P0 
  //       (R2 REq 
  //           (R0 (E0 (ESym "lo_partkey"))) 
  //           (R0 (E0 (ESym "p_partkey")))))) 
  //   (J 
  //     (P0 
  //       (R2 REq 
  //           (R0 (E0 (ESym "lo_orderdate"))) 
  //           (R0 (E0 (ESym "d_datekey"))))) 
  //     (S 
  //       (P0 
  //         (R2 RLike 
  //             (R0 (E0 (ESym "s_region"))) 
  //             (R0 (E0 (EString "AMERICA"))))) 
  //       (J 
  //         (P0 
  //           (R2 REq 
  //               (R0 (E0 (ESym "lo_suppkey"))) 
  //               (R0 (E0 (ESym "s_suppkey"))))) 
  //         (Q0 (TSymbol "supplier")) 
  //         (Q0 (TSymbol "lineorder")))) 
  //     (Q0 (TSymbol "date"))) 
  std::cout << "Delete: (Q2 \n  (QRightAntijoin \n    (P0 \n      (R2 REq \n          (R0 (E0 (ESym \"lo_partkey\"))) \n          (R0 (E0 (ESym \"p_partkey\")))))) \n  (J \n    (P0 \n      (R2 REq \n          (R0 (E0 (ESym \"lo_orderdate\"))) \n          (R0 (E0 (ESym \"d_datekey\"))))) \n    (S \n      (P0 \n        (R2 RLike \n            (R0 (E0 (ESym \"s_region\"))) \n            (R0 (E0 (EString \"AMERICA\"))))) \n      (J \n        (P0 \n          (R2 REq \n              (R0 (E0 (ESym \"lo_suppkey\"))) \n              (R0 (E0 (ESym \"s_suppkey\"))))) \n        (Q0 (TSymbol \"supplier\")) \n        (Q0 (TSymbol \"lineorder\")))) \n    (Q0 (TSymbol \"date\"))) \n  (Q0 (TSymbol \"part\")))" << std::endl;
  deleteFile("/tmp/fluidb_store/data68.dat");
  // Delete: (J 
  //   (P0 
  //     (R2 REq (R0 (E0 (ESym "lo_partkey"))) (R0 (E0 (ESym "p_partkey"))))) 
  //   (J 
  //     (P0 
  //       (R2 REq 
  //           (R0 (E0 (ESym "lo_orderdate"))) 
  //           (R0 (E0 (ESym "d_datekey"))))) 
  //     (S 
  //       (P0 
  //         (R2 RLike 
  //             (R0 (E0 (ESym "s_region"))) 
  //             (R0 (E0 (EString "AMERICA"))))) 
  //       (J 
  //         (P0 
  //           (R2 REq 
  //               (R0 (E0 (ESym "lo_suppkey"))) 
  //               (R0 (E0 (ESym "s_suppkey"))))) 
  //         (Q0 (TSymbol "supplier")) 
  //         (Q0 (TSymbol "lineorder")))) 
  //     (Q0 (TSymbol "date"))) 
  std::cout << "Delete: (J \n  (P0 \n    (R2 REq (R0 (E0 (ESym \"lo_partkey\"))) (R0 (E0 (ESym \"p_partkey\"))))) \n  (J \n    (P0 \n      (R2 REq \n          (R0 (E0 (ESym \"lo_orderdate\"))) \n          (R0 (E0 (ESym \"d_datekey\"))))) \n    (S \n      (P0 \n        (R2 RLike \n            (R0 (E0 (ESym \"s_region\"))) \n            (R0 (E0 (EString \"AMERICA\"))))) \n      (J \n        (P0 \n          (R2 REq \n              (R0 (E0 (ESym \"lo_suppkey\"))) \n              (R0 (E0 (ESym \"s_suppkey\"))))) \n        (Q0 (TSymbol \"supplier\")) \n        (Q0 (TSymbol \"lineorder\")))) \n    (Q0 (TSymbol \"date\"))) \n  (Q0 (TSymbol \"part\")))" << std::endl;
  deleteFile("/tmp/fluidb_store/data67.dat");
  // ForwardTrigger: (Just 
  //   (Left 
  //     [
  //      QJoin 
  //         (P0 
  //           (R2 REq 
  //               (R0 (E0 (ESym "lo_partkey"))) 
  //               (R0 (E0 (ESym "p_partkey")))))
  std::cout << "ForwardTrigger: (Just \n  (Left \n    [\n     QJoin \n        (P0 \n          (R2 REq \n              (R0 (E0 (ESym \"lo_partkey\"))) \n              (R0 (E0 (ESym \"p_partkey\")))))\n    ]))" << std::endl;
  {
    auto operation = mkEquiJoin<CallableClass16, CallableClass18, CallableClass13>(Just<const std::string>("/tmp/fluidb_store/data109.dat"), Just<const std::string>("/tmp/fluidb_store/data108.dat"), Just<const std::string>("/tmp/fluidb_store/data110.dat"), "/tmp/fluidb_store/data94.dat", "/tmp/fluidb_store/data2.dat");
    operation.run();
    operation.print_output(10);
  }
  // Delete: (Q2 
  //   (QLeftAntijoin 
  //     (P0 
  //       (R2 REq 
  //           (R0 (E0 (ESym "lo_partkey"))) 
  //           (R0 (E0 (ESym "p_partkey")))))) 
  //   (J 
  //     (P0 
  //       (R2 REq 
  //           (R0 (E0 (ESym "lo_orderdate"))) 
  //           (R0 (E0 (ESym "d_datekey"))))) 
  //     (S 
  //       (P0 
  //         (R2 RLike 
  //             (R0 (E0 (ESym "s_region"))) 
  //             (R0 (E0 (EString "ASIA"))))) 
  //       (J 
  //         (P0 
  //           (R2 REq 
  //               (R0 (E0 (ESym "lo_suppkey"))) 
  //               (R0 (E0 (ESym "s_suppkey"))))) 
  //         (Q0 (TSymbol "supplier")) 
  //         (Q0 (TSymbol "lineorder")))) 
  //     (Q0 (TSymbol "date"))) 
  std::cout << "Delete: (Q2 \n  (QLeftAntijoin \n    (P0 \n      (R2 REq \n          (R0 (E0 (ESym \"lo_partkey\"))) \n          (R0 (E0 (ESym \"p_partkey\")))))) \n  (J \n    (P0 \n      (R2 REq \n          (R0 (E0 (ESym \"lo_orderdate\"))) \n          (R0 (E0 (ESym \"d_datekey\"))))) \n    (S \n      (P0 \n        (R2 RLike \n            (R0 (E0 (ESym \"s_region\"))) \n            (R0 (E0 (EString \"ASIA\"))))) \n      (J \n        (P0 \n          (R2 REq \n              (R0 (E0 (ESym \"lo_suppkey\"))) \n              (R0 (E0 (ESym \"s_suppkey\"))))) \n        (Q0 (TSymbol \"supplier\")) \n        (Q0 (TSymbol \"lineorder\")))) \n    (Q0 (TSymbol \"date\"))) \n  (Q0 (TSymbol \"part\")))" << std::endl;
  deleteFile("/tmp/fluidb_store/data108.dat");
  std::cout << "Delete: (Q0 (TSymbol \"part\"))" << std::endl;
  deleteFile("/tmp/fluidb_store/data2.dat");
  // Delete: (S 
  //   (P0 (R2 RLike (R0 (E0 (ESym "s_region"))) (R0 (E0 (EString "ASIA"))))) 
  //   (J 
  //     (P0 
  //       (R2 REq 
  //           (R0 (E0 (ESym "lo_orderdate"))) 
  //           (R0 (E0 (ESym "d_datekey"))))) 
  //     (J 
  //       (P0 
  //         (R2 REq 
  //             (R0 (E0 (ESym "lo_suppkey"))) 
  //             (R0 (E0 (ESym "s_suppkey"))))) 
  //       (Q0 (TSymbol "supplier")) 
  //       (Q0 (TSymbol "lineorder"))) 
  std::cout << "Delete: (S \n  (P0 (R2 RLike (R0 (E0 (ESym \"s_region\"))) (R0 (E0 (EString \"ASIA\"))))) \n  (J \n    (P0 \n      (R2 REq \n          (R0 (E0 (ESym \"lo_orderdate\"))) \n          (R0 (E0 (ESym \"d_datekey\"))))) \n    (J \n      (P0 \n        (R2 REq \n            (R0 (E0 (ESym \"lo_suppkey\"))) \n            (R0 (E0 (ESym \"s_suppkey\"))))) \n      (Q0 (TSymbol \"supplier\")) \n      (Q0 (TSymbol \"lineorder\"))) \n    (Q0 (TSymbol \"date\"))))" << std::endl;
  deleteFile("/tmp/fluidb_store/data94.dat");
  // ForwardTrigger: (Just 
  //   (Right 
  //     [
  //      QSel 
  //         (P2 
  //           PAnd 
  //           (P0 
  //             (R2 RLe 
  //                 (R0 (E0 (EString "MFGR#2221"))) 
  //                 (R0 (E0 (ESym "p_brand1"))))) 
  //           (P0 
  //             (R2 RLe 
  //                 (R0 (E0 (ESym "p_brand1"))) 
  //                 (R0 (E0 (EString "MFGR#2228"))))))
  std::cout << "ForwardTrigger: (Just \n  (Right \n    [\n     QSel \n        (P2 \n          PAnd \n          (P0 \n            (R2 RLe \n                (R0 (E0 (EString \"MFGR#2221\"))) \n                (R0 (E0 (ESym \"p_brand1\"))))) \n          (P0 \n            (R2 RLe \n                (R0 (E0 (ESym \"p_brand1\"))) \n                (R0 (E0 (EString \"MFGR#2228\"))))))\n    ]))" << std::endl;
  {
    auto operation = mkSelect<CallableClass20>(Just<const std::string>("/tmp/fluidb_store/data92.dat"), Just<const std::string>("/tmp/fluidb_store/data113.dat"), "/tmp/fluidb_store/data109.dat");
    operation.run();
    operation.print_output(10);
  }
  // ForwardTrigger: (Just 
  //   (Right 
  //     [
  //      QGroup 
  //         [(ESym "tmpSym0",E0 (NAggr AggrSum (E0 (ESym "lo_revenue")))),
  //          (ESym "d_year",E0 (NAggr AggrFirst (E0 (ESym "d_year")))),
  //          (ESym "p_brand1",E0 (NAggr AggrFirst (E0 (ESym "p_brand1"))))] 
  //         [E0 (ESym "d_year"),E0 (ESym "p_brand1")]
  std::cout << "ForwardTrigger: (Just \n  (Right \n    [\n     QGroup \n        [(ESym \"tmpSym0\",E0 (NAggr AggrSum (E0 (ESym \"lo_revenue\")))),\n         (ESym \"d_year\",E0 (NAggr AggrFirst (E0 (ESym \"d_year\")))),\n         (ESym \"p_brand1\",E0 (NAggr AggrFirst (E0 (ESym \"p_brand1\"))))] \n        [E0 (ESym \"d_year\"),E0 (ESym \"p_brand1\")]\n    ]))" << std::endl;
  {
    auto operation = mkAggregation<CallableClass27, CallableClass29>(Just<const std::string>("/tmp/fluidb_store/data118.dat"), Just<const std::string>("/tmp/fluidb_store/data92.dat"), "/tmp/fluidb_store/data92.dat");
    operation.run();
    operation.print_output(10);
  }
  std::cout << "ForwardTrigger: (Just (Right [QSort [E0 (ESym \"d_year\"),E0 (ESym \"p_brand1\")]]))" << std::endl;
  {
    auto operation = mkSort<CallableClass31>(Just<const std::string>("/tmp/fluidb_store/data119.dat"), Just<const std::string>("/tmp/fluidb_store/data118.dat"), "/tmp/fluidb_store/data118.dat");
    operation.run();
    operation.print_output(10);
  }
  report_counters();
  return 0;
}
