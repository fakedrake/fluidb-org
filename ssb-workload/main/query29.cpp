#include <array>

#include <string>

#include <codegen.hh>
class Record39 {
 public:
  Record39(unsigned __sortElem0, fluidb_string<10> __sortElem1) : sortElem0(__sortElem0), sortElem1(__sortElem1)
  {
  }
  Record39() 
  {
  }
  std::string show() const{
    std::stringstream o;
    o << sortElem0 << " | " << arrToString(sortElem1);
    return o.str();
  }
  bool operator <(const Record39& otherRec) const{
    return (otherRec.sortElem0 < sortElem0 && otherRec.sortElem1 < sortElem1);
  }
  bool operator ==(const Record39& otherRec) const{
    return (otherRec.sortElem0 == sortElem0 && otherRec.sortElem1 == sortElem1);
  }
  bool operator !=(const Record39& otherRec) const{
    return (otherRec.sortElem0 != sortElem0 || otherRec.sortElem1 != sortElem1);
  }
  unsigned sortElem0;
  fluidb_string<10> sortElem1;
 private:
};


class Record1 {
 public:
  Record1(unsigned __sym__0___45_8906884911160954364, fluidb_string<18> __sym__0__2799000292371979828, fluidb_string<9> __sym__0__8867920250735627162, fluidb_string<9> __sym__0___45_7576867150402000331, unsigned __sym__0___45_9125225545914939837, unsigned __sym__0__4589167397936411269, fluidb_string<7> __sym__0__8920142377705747532, unsigned __sym__0___45_4196858516486091897, unsigned __sym__0__1195773552714325740, unsigned __sym__0___45_38686532604732124, unsigned __sym__0__1274631840214437554, unsigned __sym__0__8445040522489018709, fluidb_string<15> __sym__0__2331348265799254080, fluidb_string<2> __sym__0___45_1510963300986711992, fluidb_string<2> __sym__0__5289830658136776009, fluidb_string<2> __sym__0__7499328126409916481, fluidb_string<2> __sym__0__7533033195406205003, unsigned __sym__0___45_6428147039213761908, fluidb_string<18> __sym__0__871736690247302132, fluidb_string<40> __sym__0___45_8362046498826819058, fluidb_string<11> __sym__0___45_7133132985918421512, fluidb_string<15> __sym__0___45_3959357838844936686, fluidb_string<13> __sym__0___45_7197031512662271633, fluidb_string<15> __sym__0__8583356070728849524, fluidb_string<21> __sym__0__1967597999057704256, unsigned __sym__0__5132421367677851272, int __sym__0__5071922315287763570, unsigned __sym__0___45_3637991104308692870, unsigned __sym__0__4948888373840408220, unsigned __sym__0___45_7808961130681314221, unsigned __sym__0__1746575405116951454, fluidb_string<21> __sym__0__2153939297276247251, unsigned __sym__0__5199185301403060729, fluidb_string<10> __sym__0__1712959636608595962, unsigned __sym__0___45_1741951889491243926, double __sym__0__227891603776809608, unsigned __sym__0__6207099447983295614, double __sym__0__335880342687986000, unsigned __sym__0__2784917890152007524, unsigned __sym__0___45_5840348331744817409, double __sym__0__3675426241071643741, fluidb_string<13> __sym__0___45_1268803172874807067, unsigned __sym__0__3110451695433832699, fluidb_string<25> __sym__0__5854013247755242004, fluidb_string<40> __sym__0___45_1478737863530599082, fluidb_string<16> __sym__0___45_6827442181954889560, fluidb_string<16> __sym__0__6943297173895896986, fluidb_string<13> __sym__0__5526031557462726759, fluidb_string<15> __sym__0__2016251883409854356) : sym__0___45_8906884911160954364(__sym__0___45_8906884911160954364), sym__0__2799000292371979828(__sym__0__2799000292371979828), sym__0__8867920250735627162(__sym__0__8867920250735627162), sym__0___45_7576867150402000331(__sym__0___45_7576867150402000331), sym__0___45_9125225545914939837(__sym__0___45_9125225545914939837), sym__0__4589167397936411269(__sym__0__4589167397936411269), sym__0__8920142377705747532(__sym__0__8920142377705747532), sym__0___45_4196858516486091897(__sym__0___45_4196858516486091897), sym__0__1195773552714325740(__sym__0__1195773552714325740), sym__0___45_38686532604732124(__sym__0___45_38686532604732124), sym__0__1274631840214437554(__sym__0__1274631840214437554), sym__0__8445040522489018709(__sym__0__8445040522489018709), sym__0__2331348265799254080(__sym__0__2331348265799254080), sym__0___45_1510963300986711992(__sym__0___45_1510963300986711992), sym__0__5289830658136776009(__sym__0__5289830658136776009), sym__0__7499328126409916481(__sym__0__7499328126409916481), sym__0__7533033195406205003(__sym__0__7533033195406205003), sym__0___45_6428147039213761908(__sym__0___45_6428147039213761908), sym__0__871736690247302132(__sym__0__871736690247302132), sym__0___45_8362046498826819058(__sym__0___45_8362046498826819058), sym__0___45_7133132985918421512(__sym__0___45_7133132985918421512), sym__0___45_3959357838844936686(__sym__0___45_3959357838844936686), sym__0___45_7197031512662271633(__sym__0___45_7197031512662271633), sym__0__8583356070728849524(__sym__0__8583356070728849524), sym__0__1967597999057704256(__sym__0__1967597999057704256), sym__0__5132421367677851272(__sym__0__5132421367677851272), sym__0__5071922315287763570(__sym__0__5071922315287763570), sym__0___45_3637991104308692870(__sym__0___45_3637991104308692870), sym__0__4948888373840408220(__sym__0__4948888373840408220), sym__0___45_7808961130681314221(__sym__0___45_7808961130681314221), sym__0__1746575405116951454(__sym__0__1746575405116951454), sym__0__2153939297276247251(__sym__0__2153939297276247251), sym__0__5199185301403060729(__sym__0__5199185301403060729), sym__0__1712959636608595962(__sym__0__1712959636608595962), sym__0___45_1741951889491243926(__sym__0___45_1741951889491243926), sym__0__227891603776809608(__sym__0__227891603776809608), sym__0__6207099447983295614(__sym__0__6207099447983295614), sym__0__335880342687986000(__sym__0__335880342687986000), sym__0__2784917890152007524(__sym__0__2784917890152007524), sym__0___45_5840348331744817409(__sym__0___45_5840348331744817409), sym__0__3675426241071643741(__sym__0__3675426241071643741), sym__0___45_1268803172874807067(__sym__0___45_1268803172874807067), sym__0__3110451695433832699(__sym__0__3110451695433832699), sym__0__5854013247755242004(__sym__0__5854013247755242004), sym__0___45_1478737863530599082(__sym__0___45_1478737863530599082), sym__0___45_6827442181954889560(__sym__0___45_6827442181954889560), sym__0__6943297173895896986(__sym__0__6943297173895896986), sym__0__5526031557462726759(__sym__0__5526031557462726759), sym__0__2016251883409854356(__sym__0__2016251883409854356)
  {
  }
  Record1() 
  {
  }
  std::string show() const{
    std::stringstream o;
    o << sym__0___45_8906884911160954364 << " | " << arrToString(sym__0__2799000292371979828) << " | " << arrToString(sym__0__8867920250735627162) << " | " << arrToString(sym__0___45_7576867150402000331) << " | " << sym__0___45_9125225545914939837 << " | " << sym__0__4589167397936411269 << " | " << arrToString(sym__0__8920142377705747532) << " | " << sym__0___45_4196858516486091897 << " | " << sym__0__1195773552714325740 << " | " << sym__0___45_38686532604732124 << " | " << sym__0__1274631840214437554 << " | " << sym__0__8445040522489018709 << " | " << arrToString(sym__0__2331348265799254080) << " | " << arrToString(sym__0___45_1510963300986711992) << " | " << arrToString(sym__0__5289830658136776009) << " | " << arrToString(sym__0__7499328126409916481) << " | " << arrToString(sym__0__7533033195406205003) << " | " << sym__0___45_6428147039213761908 << " | " << arrToString(sym__0__871736690247302132) << " | " << arrToString(sym__0___45_8362046498826819058) << " | " << arrToString(sym__0___45_7133132985918421512) << " | " << arrToString(sym__0___45_3959357838844936686) << " | " << arrToString(sym__0___45_7197031512662271633) << " | " << arrToString(sym__0__8583356070728849524) << " | " << arrToString(sym__0__1967597999057704256) << " | " << sym__0__5132421367677851272 << " | " << sym__0__5071922315287763570 << " | " << sym__0___45_3637991104308692870 << " | " << sym__0__4948888373840408220 << " | " << sym__0___45_7808961130681314221 << " | " << sym__0__1746575405116951454 << " | " << arrToString(sym__0__2153939297276247251) << " | " << sym__0__5199185301403060729 << " | " << arrToString(sym__0__1712959636608595962) << " | " << sym__0___45_1741951889491243926 << " | " << sym__0__227891603776809608 << " | " << sym__0__6207099447983295614 << " | " << sym__0__335880342687986000 << " | " << sym__0__2784917890152007524 << " | " << sym__0___45_5840348331744817409 << " | " << sym__0__3675426241071643741 << " | " << arrToString(sym__0___45_1268803172874807067) << " | " << sym__0__3110451695433832699 << " | " << arrToString(sym__0__5854013247755242004) << " | " << arrToString(sym__0___45_1478737863530599082) << " | " << arrToString(sym__0___45_6827442181954889560) << " | " << arrToString(sym__0__6943297173895896986) << " | " << arrToString(sym__0__5526031557462726759) << " | " << arrToString(sym__0__2016251883409854356);
    return o.str();
  }
  bool operator <(const Record1& otherRec) const{
    return (otherRec.sym__0___45_8906884911160954364 < sym__0___45_8906884911160954364 && (otherRec.sym__0__2799000292371979828 < sym__0__2799000292371979828 && (otherRec.sym__0__8867920250735627162 < sym__0__8867920250735627162 && (otherRec.sym__0___45_7576867150402000331 < sym__0___45_7576867150402000331 && (otherRec.sym__0___45_9125225545914939837 < sym__0___45_9125225545914939837 && (otherRec.sym__0__4589167397936411269 < sym__0__4589167397936411269 && (otherRec.sym__0__8920142377705747532 < sym__0__8920142377705747532 && (otherRec.sym__0___45_4196858516486091897 < sym__0___45_4196858516486091897 && (otherRec.sym__0__1195773552714325740 < sym__0__1195773552714325740 && (otherRec.sym__0___45_38686532604732124 < sym__0___45_38686532604732124 && (otherRec.sym__0__1274631840214437554 < sym__0__1274631840214437554 && (otherRec.sym__0__8445040522489018709 < sym__0__8445040522489018709 && (otherRec.sym__0__2331348265799254080 < sym__0__2331348265799254080 && (otherRec.sym__0___45_1510963300986711992 < sym__0___45_1510963300986711992 && (otherRec.sym__0__5289830658136776009 < sym__0__5289830658136776009 && (otherRec.sym__0__7499328126409916481 < sym__0__7499328126409916481 && (otherRec.sym__0__7533033195406205003 < sym__0__7533033195406205003 && (otherRec.sym__0___45_6428147039213761908 < sym__0___45_6428147039213761908 && (otherRec.sym__0__871736690247302132 < sym__0__871736690247302132 && (otherRec.sym__0___45_8362046498826819058 < sym__0___45_8362046498826819058 && (otherRec.sym__0___45_7133132985918421512 < sym__0___45_7133132985918421512 && (otherRec.sym__0___45_3959357838844936686 < sym__0___45_3959357838844936686 && (otherRec.sym__0___45_7197031512662271633 < sym__0___45_7197031512662271633 && (otherRec.sym__0__8583356070728849524 < sym__0__8583356070728849524 && (otherRec.sym__0__1967597999057704256 < sym__0__1967597999057704256 && (otherRec.sym__0__5132421367677851272 < sym__0__5132421367677851272 && (otherRec.sym__0__5071922315287763570 < sym__0__5071922315287763570 && (otherRec.sym__0___45_3637991104308692870 < sym__0___45_3637991104308692870 && (otherRec.sym__0__4948888373840408220 < sym__0__4948888373840408220 && (otherRec.sym__0___45_7808961130681314221 < sym__0___45_7808961130681314221 && (otherRec.sym__0__1746575405116951454 < sym__0__1746575405116951454 && (otherRec.sym__0__2153939297276247251 < sym__0__2153939297276247251 && (otherRec.sym__0__5199185301403060729 < sym__0__5199185301403060729 && (otherRec.sym__0__1712959636608595962 < sym__0__1712959636608595962 && (otherRec.sym__0___45_1741951889491243926 < sym__0___45_1741951889491243926 && (otherRec.sym__0__227891603776809608 < sym__0__227891603776809608 && (otherRec.sym__0__6207099447983295614 < sym__0__6207099447983295614 && (otherRec.sym__0__335880342687986000 < sym__0__335880342687986000 && (otherRec.sym__0__2784917890152007524 < sym__0__2784917890152007524 && (otherRec.sym__0___45_5840348331744817409 < sym__0___45_5840348331744817409 && (otherRec.sym__0__3675426241071643741 < sym__0__3675426241071643741 && (otherRec.sym__0___45_1268803172874807067 < sym__0___45_1268803172874807067 && (otherRec.sym__0__3110451695433832699 < sym__0__3110451695433832699 && (otherRec.sym__0__5854013247755242004 < sym__0__5854013247755242004 && (otherRec.sym__0___45_1478737863530599082 < sym__0___45_1478737863530599082 && (otherRec.sym__0___45_6827442181954889560 < sym__0___45_6827442181954889560 && (otherRec.sym__0__6943297173895896986 < sym__0__6943297173895896986 && (otherRec.sym__0__5526031557462726759 < sym__0__5526031557462726759 && otherRec.sym__0__2016251883409854356 < sym__0__2016251883409854356))))))))))))))))))))))))))))))))))))))))))))))));
  }
  bool operator ==(const Record1& otherRec) const{
    return (otherRec.sym__0___45_8906884911160954364 == sym__0___45_8906884911160954364 && (otherRec.sym__0__2799000292371979828 == sym__0__2799000292371979828 && (otherRec.sym__0__8867920250735627162 == sym__0__8867920250735627162 && (otherRec.sym__0___45_7576867150402000331 == sym__0___45_7576867150402000331 && (otherRec.sym__0___45_9125225545914939837 == sym__0___45_9125225545914939837 && (otherRec.sym__0__4589167397936411269 == sym__0__4589167397936411269 && (otherRec.sym__0__8920142377705747532 == sym__0__8920142377705747532 && (otherRec.sym__0___45_4196858516486091897 == sym__0___45_4196858516486091897 && (otherRec.sym__0__1195773552714325740 == sym__0__1195773552714325740 && (otherRec.sym__0___45_38686532604732124 == sym__0___45_38686532604732124 && (otherRec.sym__0__1274631840214437554 == sym__0__1274631840214437554 && (otherRec.sym__0__8445040522489018709 == sym__0__8445040522489018709 && (otherRec.sym__0__2331348265799254080 == sym__0__2331348265799254080 && (otherRec.sym__0___45_1510963300986711992 == sym__0___45_1510963300986711992 && (otherRec.sym__0__5289830658136776009 == sym__0__5289830658136776009 && (otherRec.sym__0__7499328126409916481 == sym__0__7499328126409916481 && (otherRec.sym__0__7533033195406205003 == sym__0__7533033195406205003 && (otherRec.sym__0___45_6428147039213761908 == sym__0___45_6428147039213761908 && (otherRec.sym__0__871736690247302132 == sym__0__871736690247302132 && (otherRec.sym__0___45_8362046498826819058 == sym__0___45_8362046498826819058 && (otherRec.sym__0___45_7133132985918421512 == sym__0___45_7133132985918421512 && (otherRec.sym__0___45_3959357838844936686 == sym__0___45_3959357838844936686 && (otherRec.sym__0___45_7197031512662271633 == sym__0___45_7197031512662271633 && (otherRec.sym__0__8583356070728849524 == sym__0__8583356070728849524 && (otherRec.sym__0__1967597999057704256 == sym__0__1967597999057704256 && (otherRec.sym__0__5132421367677851272 == sym__0__5132421367677851272 && (otherRec.sym__0__5071922315287763570 == sym__0__5071922315287763570 && (otherRec.sym__0___45_3637991104308692870 == sym__0___45_3637991104308692870 && (otherRec.sym__0__4948888373840408220 == sym__0__4948888373840408220 && (otherRec.sym__0___45_7808961130681314221 == sym__0___45_7808961130681314221 && (otherRec.sym__0__1746575405116951454 == sym__0__1746575405116951454 && (otherRec.sym__0__2153939297276247251 == sym__0__2153939297276247251 && (otherRec.sym__0__5199185301403060729 == sym__0__5199185301403060729 && (otherRec.sym__0__1712959636608595962 == sym__0__1712959636608595962 && (otherRec.sym__0___45_1741951889491243926 == sym__0___45_1741951889491243926 && (otherRec.sym__0__227891603776809608 == sym__0__227891603776809608 && (otherRec.sym__0__6207099447983295614 == sym__0__6207099447983295614 && (otherRec.sym__0__335880342687986000 == sym__0__335880342687986000 && (otherRec.sym__0__2784917890152007524 == sym__0__2784917890152007524 && (otherRec.sym__0___45_5840348331744817409 == sym__0___45_5840348331744817409 && (otherRec.sym__0__3675426241071643741 == sym__0__3675426241071643741 && (otherRec.sym__0___45_1268803172874807067 == sym__0___45_1268803172874807067 && (otherRec.sym__0__3110451695433832699 == sym__0__3110451695433832699 && (otherRec.sym__0__5854013247755242004 == sym__0__5854013247755242004 && (otherRec.sym__0___45_1478737863530599082 == sym__0___45_1478737863530599082 && (otherRec.sym__0___45_6827442181954889560 == sym__0___45_6827442181954889560 && (otherRec.sym__0__6943297173895896986 == sym__0__6943297173895896986 && (otherRec.sym__0__5526031557462726759 == sym__0__5526031557462726759 && otherRec.sym__0__2016251883409854356 == sym__0__2016251883409854356))))))))))))))))))))))))))))))))))))))))))))))));
  }
  bool operator !=(const Record1& otherRec) const{
    return (otherRec.sym__0___45_8906884911160954364 != sym__0___45_8906884911160954364 || (otherRec.sym__0__2799000292371979828 != sym__0__2799000292371979828 || (otherRec.sym__0__8867920250735627162 != sym__0__8867920250735627162 || (otherRec.sym__0___45_7576867150402000331 != sym__0___45_7576867150402000331 || (otherRec.sym__0___45_9125225545914939837 != sym__0___45_9125225545914939837 || (otherRec.sym__0__4589167397936411269 != sym__0__4589167397936411269 || (otherRec.sym__0__8920142377705747532 != sym__0__8920142377705747532 || (otherRec.sym__0___45_4196858516486091897 != sym__0___45_4196858516486091897 || (otherRec.sym__0__1195773552714325740 != sym__0__1195773552714325740 || (otherRec.sym__0___45_38686532604732124 != sym__0___45_38686532604732124 || (otherRec.sym__0__1274631840214437554 != sym__0__1274631840214437554 || (otherRec.sym__0__8445040522489018709 != sym__0__8445040522489018709 || (otherRec.sym__0__2331348265799254080 != sym__0__2331348265799254080 || (otherRec.sym__0___45_1510963300986711992 != sym__0___45_1510963300986711992 || (otherRec.sym__0__5289830658136776009 != sym__0__5289830658136776009 || (otherRec.sym__0__7499328126409916481 != sym__0__7499328126409916481 || (otherRec.sym__0__7533033195406205003 != sym__0__7533033195406205003 || (otherRec.sym__0___45_6428147039213761908 != sym__0___45_6428147039213761908 || (otherRec.sym__0__871736690247302132 != sym__0__871736690247302132 || (otherRec.sym__0___45_8362046498826819058 != sym__0___45_8362046498826819058 || (otherRec.sym__0___45_7133132985918421512 != sym__0___45_7133132985918421512 || (otherRec.sym__0___45_3959357838844936686 != sym__0___45_3959357838844936686 || (otherRec.sym__0___45_7197031512662271633 != sym__0___45_7197031512662271633 || (otherRec.sym__0__8583356070728849524 != sym__0__8583356070728849524 || (otherRec.sym__0__1967597999057704256 != sym__0__1967597999057704256 || (otherRec.sym__0__5132421367677851272 != sym__0__5132421367677851272 || (otherRec.sym__0__5071922315287763570 != sym__0__5071922315287763570 || (otherRec.sym__0___45_3637991104308692870 != sym__0___45_3637991104308692870 || (otherRec.sym__0__4948888373840408220 != sym__0__4948888373840408220 || (otherRec.sym__0___45_7808961130681314221 != sym__0___45_7808961130681314221 || (otherRec.sym__0__1746575405116951454 != sym__0__1746575405116951454 || (otherRec.sym__0__2153939297276247251 != sym__0__2153939297276247251 || (otherRec.sym__0__5199185301403060729 != sym__0__5199185301403060729 || (otherRec.sym__0__1712959636608595962 != sym__0__1712959636608595962 || (otherRec.sym__0___45_1741951889491243926 != sym__0___45_1741951889491243926 || (otherRec.sym__0__227891603776809608 != sym__0__227891603776809608 || (otherRec.sym__0__6207099447983295614 != sym__0__6207099447983295614 || (otherRec.sym__0__335880342687986000 != sym__0__335880342687986000 || (otherRec.sym__0__2784917890152007524 != sym__0__2784917890152007524 || (otherRec.sym__0___45_5840348331744817409 != sym__0___45_5840348331744817409 || (otherRec.sym__0__3675426241071643741 != sym__0__3675426241071643741 || (otherRec.sym__0___45_1268803172874807067 != sym__0___45_1268803172874807067 || (otherRec.sym__0__3110451695433832699 != sym__0__3110451695433832699 || (otherRec.sym__0__5854013247755242004 != sym__0__5854013247755242004 || (otherRec.sym__0___45_1478737863530599082 != sym__0___45_1478737863530599082 || (otherRec.sym__0___45_6827442181954889560 != sym__0___45_6827442181954889560 || (otherRec.sym__0__6943297173895896986 != sym__0__6943297173895896986 || (otherRec.sym__0__5526031557462726759 != sym__0__5526031557462726759 || otherRec.sym__0__2016251883409854356 != sym__0__2016251883409854356))))))))))))))))))))))))))))))))))))))))))))))));
  }
  unsigned sym__0___45_8906884911160954364;
  fluidb_string<18> sym__0__2799000292371979828;
  fluidb_string<9> sym__0__8867920250735627162;
  fluidb_string<9> sym__0___45_7576867150402000331;
  unsigned sym__0___45_9125225545914939837;
  unsigned sym__0__4589167397936411269;
  fluidb_string<7> sym__0__8920142377705747532;
  unsigned sym__0___45_4196858516486091897;
  unsigned sym__0__1195773552714325740;
  unsigned sym__0___45_38686532604732124;
  unsigned sym__0__1274631840214437554;
  unsigned sym__0__8445040522489018709;
  fluidb_string<15> sym__0__2331348265799254080;
  fluidb_string<2> sym__0___45_1510963300986711992;
  fluidb_string<2> sym__0__5289830658136776009;
  fluidb_string<2> sym__0__7499328126409916481;
  fluidb_string<2> sym__0__7533033195406205003;
  unsigned sym__0___45_6428147039213761908;
  fluidb_string<18> sym__0__871736690247302132;
  fluidb_string<40> sym__0___45_8362046498826819058;
  fluidb_string<11> sym__0___45_7133132985918421512;
  fluidb_string<15> sym__0___45_3959357838844936686;
  fluidb_string<13> sym__0___45_7197031512662271633;
  fluidb_string<15> sym__0__8583356070728849524;
  fluidb_string<21> sym__0__1967597999057704256;
  unsigned sym__0__5132421367677851272;
  int sym__0__5071922315287763570;
  unsigned sym__0___45_3637991104308692870;
  unsigned sym__0__4948888373840408220;
  unsigned sym__0___45_7808961130681314221;
  unsigned sym__0__1746575405116951454;
  fluidb_string<21> sym__0__2153939297276247251;
  unsigned sym__0__5199185301403060729;
  fluidb_string<10> sym__0__1712959636608595962;
  unsigned sym__0___45_1741951889491243926;
  double sym__0__227891603776809608;
  unsigned sym__0__6207099447983295614;
  double sym__0__335880342687986000;
  unsigned sym__0__2784917890152007524;
  unsigned sym__0___45_5840348331744817409;
  double sym__0__3675426241071643741;
  fluidb_string<13> sym__0___45_1268803172874807067;
  unsigned sym__0__3110451695433832699;
  fluidb_string<25> sym__0__5854013247755242004;
  fluidb_string<40> sym__0___45_1478737863530599082;
  fluidb_string<16> sym__0___45_6827442181954889560;
  fluidb_string<16> sym__0__6943297173895896986;
  fluidb_string<13> sym__0__5526031557462726759;
  fluidb_string<15> sym__0__2016251883409854356;
 private:
};


class Record2 {
 public:
  Record2(unsigned __sym__0___45_2544647080140891779, fluidb_string<18> __sym__0___45_4581931629044260499, fluidb_string<9> __sym__0__3511844764913402723, fluidb_string<9> __sym__0__2581750769096843740, unsigned __sym__0___45_6031048599860414622, unsigned __sym__0__8084343433543173228, fluidb_string<7> __sym__0___45_3664881058840515771, unsigned __sym__0___45_1924199962958349658, unsigned __sym__0__7769469128992998949, unsigned __sym__0__7818554603565865821, unsigned __sym__0__4360634980582143419, unsigned __sym__0___45_7492593539880285892, fluidb_string<15> __sym__0__1706094538935295417, fluidb_string<2> __sym__0__6114638120282452033, fluidb_string<2> __sym__0___45_78261027814563536, fluidb_string<2> __sym__0__2648420561950371368, fluidb_string<2> __sym__0__3807806894063626346, unsigned __sym__0__3010211381236373125, fluidb_string<18> __sym__0__3300613616795216173, fluidb_string<40> __sym__0___45_3130123223234281513, fluidb_string<11> __sym__0__8189415442579395633, fluidb_string<15> __sym__0__3248231192614790363, fluidb_string<13> __sym__0__1734593865430170446, fluidb_string<15> __sym__0___45_8167422549222682195, fluidb_string<21> __sym__0__2936268515493900473, unsigned __sym__0__2661490882974477953, int __sym__0___45_6833151998909895557, unsigned __sym__0___45_6379152824683587325, unsigned __sym__0__3389381886574775957, unsigned __sym__0___45_3006394417042584462, unsigned __sym__0__5708853396861436519, fluidb_string<21> __sym__0__2510302245253987058, unsigned __sym__0___45_8268616720440236384, fluidb_string<10> __sym__0___45_2145747097567105917, unsigned __sym__0___45_6747202196090936717, double __sym__0___45_980129616638612863, unsigned __sym__0__7935787287177824775, double __sym__0___45_1765426731373793463, unsigned __sym__0__2312911666975909277, unsigned __sym__0__8713898721580785886, double __sym__0__5274362417922015940, fluidb_string<13> __sym__0___45_5950462958936866676, unsigned __sym__0__5599391359954735578, fluidb_string<25> __sym__0__4014184007857207821, fluidb_string<40> __sym__0___45_7146441527183610849, fluidb_string<16> __sym__0___45_8891100078062559775, fluidb_string<16> __sym__0___45_5365202057839317149, fluidb_string<13> __sym__0__5177313860806756678, fluidb_string<15> __sym__0___45_6139660049171508851, unsigned __sym__0__5600261570499839795, fluidb_string<55> __sym__0__7033726162709406531, fluidb_string<25> __sym__0___45_2028921051824210768, fluidb_string<7> __sym__0__1510822012344354762, fluidb_string<10> __sym__0___45_2462553484168592128, fluidb_string<11> __sym__0__6826615390864986324, fluidb_string<25> __sym__0__1653057618405204038, unsigned __sym__0__1042393484014954953, fluidb_string<10> __sym__0___45_4797345940361177504) : sym__0___45_2544647080140891779(__sym__0___45_2544647080140891779), sym__0___45_4581931629044260499(__sym__0___45_4581931629044260499), sym__0__3511844764913402723(__sym__0__3511844764913402723), sym__0__2581750769096843740(__sym__0__2581750769096843740), sym__0___45_6031048599860414622(__sym__0___45_6031048599860414622), sym__0__8084343433543173228(__sym__0__8084343433543173228), sym__0___45_3664881058840515771(__sym__0___45_3664881058840515771), sym__0___45_1924199962958349658(__sym__0___45_1924199962958349658), sym__0__7769469128992998949(__sym__0__7769469128992998949), sym__0__7818554603565865821(__sym__0__7818554603565865821), sym__0__4360634980582143419(__sym__0__4360634980582143419), sym__0___45_7492593539880285892(__sym__0___45_7492593539880285892), sym__0__1706094538935295417(__sym__0__1706094538935295417), sym__0__6114638120282452033(__sym__0__6114638120282452033), sym__0___45_78261027814563536(__sym__0___45_78261027814563536), sym__0__2648420561950371368(__sym__0__2648420561950371368), sym__0__3807806894063626346(__sym__0__3807806894063626346), sym__0__3010211381236373125(__sym__0__3010211381236373125), sym__0__3300613616795216173(__sym__0__3300613616795216173), sym__0___45_3130123223234281513(__sym__0___45_3130123223234281513), sym__0__8189415442579395633(__sym__0__8189415442579395633), sym__0__3248231192614790363(__sym__0__3248231192614790363), sym__0__1734593865430170446(__sym__0__1734593865430170446), sym__0___45_8167422549222682195(__sym__0___45_8167422549222682195), sym__0__2936268515493900473(__sym__0__2936268515493900473), sym__0__2661490882974477953(__sym__0__2661490882974477953), sym__0___45_6833151998909895557(__sym__0___45_6833151998909895557), sym__0___45_6379152824683587325(__sym__0___45_6379152824683587325), sym__0__3389381886574775957(__sym__0__3389381886574775957), sym__0___45_3006394417042584462(__sym__0___45_3006394417042584462), sym__0__5708853396861436519(__sym__0__5708853396861436519), sym__0__2510302245253987058(__sym__0__2510302245253987058), sym__0___45_8268616720440236384(__sym__0___45_8268616720440236384), sym__0___45_2145747097567105917(__sym__0___45_2145747097567105917), sym__0___45_6747202196090936717(__sym__0___45_6747202196090936717), sym__0___45_980129616638612863(__sym__0___45_980129616638612863), sym__0__7935787287177824775(__sym__0__7935787287177824775), sym__0___45_1765426731373793463(__sym__0___45_1765426731373793463), sym__0__2312911666975909277(__sym__0__2312911666975909277), sym__0__8713898721580785886(__sym__0__8713898721580785886), sym__0__5274362417922015940(__sym__0__5274362417922015940), sym__0___45_5950462958936866676(__sym__0___45_5950462958936866676), sym__0__5599391359954735578(__sym__0__5599391359954735578), sym__0__4014184007857207821(__sym__0__4014184007857207821), sym__0___45_7146441527183610849(__sym__0___45_7146441527183610849), sym__0___45_8891100078062559775(__sym__0___45_8891100078062559775), sym__0___45_5365202057839317149(__sym__0___45_5365202057839317149), sym__0__5177313860806756678(__sym__0__5177313860806756678), sym__0___45_6139660049171508851(__sym__0___45_6139660049171508851), sym__0__5600261570499839795(__sym__0__5600261570499839795), sym__0__7033726162709406531(__sym__0__7033726162709406531), sym__0___45_2028921051824210768(__sym__0___45_2028921051824210768), sym__0__1510822012344354762(__sym__0__1510822012344354762), sym__0___45_2462553484168592128(__sym__0___45_2462553484168592128), sym__0__6826615390864986324(__sym__0__6826615390864986324), sym__0__1653057618405204038(__sym__0__1653057618405204038), sym__0__1042393484014954953(__sym__0__1042393484014954953), sym__0___45_4797345940361177504(__sym__0___45_4797345940361177504)
  {
  }
  Record2() 
  {
  }
  std::string show() const{
    std::stringstream o;
    o << sym__0___45_2544647080140891779 << " | " << arrToString(sym__0___45_4581931629044260499) << " | " << arrToString(sym__0__3511844764913402723) << " | " << arrToString(sym__0__2581750769096843740) << " | " << sym__0___45_6031048599860414622 << " | " << sym__0__8084343433543173228 << " | " << arrToString(sym__0___45_3664881058840515771) << " | " << sym__0___45_1924199962958349658 << " | " << sym__0__7769469128992998949 << " | " << sym__0__7818554603565865821 << " | " << sym__0__4360634980582143419 << " | " << sym__0___45_7492593539880285892 << " | " << arrToString(sym__0__1706094538935295417) << " | " << arrToString(sym__0__6114638120282452033) << " | " << arrToString(sym__0___45_78261027814563536) << " | " << arrToString(sym__0__2648420561950371368) << " | " << arrToString(sym__0__3807806894063626346) << " | " << sym__0__3010211381236373125 << " | " << arrToString(sym__0__3300613616795216173) << " | " << arrToString(sym__0___45_3130123223234281513) << " | " << arrToString(sym__0__8189415442579395633) << " | " << arrToString(sym__0__3248231192614790363) << " | " << arrToString(sym__0__1734593865430170446) << " | " << arrToString(sym__0___45_8167422549222682195) << " | " << arrToString(sym__0__2936268515493900473) << " | " << sym__0__2661490882974477953 << " | " << sym__0___45_6833151998909895557 << " | " << sym__0___45_6379152824683587325 << " | " << sym__0__3389381886574775957 << " | " << sym__0___45_3006394417042584462 << " | " << sym__0__5708853396861436519 << " | " << arrToString(sym__0__2510302245253987058) << " | " << sym__0___45_8268616720440236384 << " | " << arrToString(sym__0___45_2145747097567105917) << " | " << sym__0___45_6747202196090936717 << " | " << sym__0___45_980129616638612863 << " | " << sym__0__7935787287177824775 << " | " << sym__0___45_1765426731373793463 << " | " << sym__0__2312911666975909277 << " | " << sym__0__8713898721580785886 << " | " << sym__0__5274362417922015940 << " | " << arrToString(sym__0___45_5950462958936866676) << " | " << sym__0__5599391359954735578 << " | " << arrToString(sym__0__4014184007857207821) << " | " << arrToString(sym__0___45_7146441527183610849) << " | " << arrToString(sym__0___45_8891100078062559775) << " | " << arrToString(sym__0___45_5365202057839317149) << " | " << arrToString(sym__0__5177313860806756678) << " | " << arrToString(sym__0___45_6139660049171508851) << " | " << sym__0__5600261570499839795 << " | " << arrToString(sym__0__7033726162709406531) << " | " << arrToString(sym__0___45_2028921051824210768) << " | " << arrToString(sym__0__1510822012344354762) << " | " << arrToString(sym__0___45_2462553484168592128) << " | " << arrToString(sym__0__6826615390864986324) << " | " << arrToString(sym__0__1653057618405204038) << " | " << sym__0__1042393484014954953 << " | " << arrToString(sym__0___45_4797345940361177504);
    return o.str();
  }
  bool operator <(const Record2& otherRec) const{
    return (otherRec.sym__0___45_2544647080140891779 < sym__0___45_2544647080140891779 && (otherRec.sym__0___45_4581931629044260499 < sym__0___45_4581931629044260499 && (otherRec.sym__0__3511844764913402723 < sym__0__3511844764913402723 && (otherRec.sym__0__2581750769096843740 < sym__0__2581750769096843740 && (otherRec.sym__0___45_6031048599860414622 < sym__0___45_6031048599860414622 && (otherRec.sym__0__8084343433543173228 < sym__0__8084343433543173228 && (otherRec.sym__0___45_3664881058840515771 < sym__0___45_3664881058840515771 && (otherRec.sym__0___45_1924199962958349658 < sym__0___45_1924199962958349658 && (otherRec.sym__0__7769469128992998949 < sym__0__7769469128992998949 && (otherRec.sym__0__7818554603565865821 < sym__0__7818554603565865821 && (otherRec.sym__0__4360634980582143419 < sym__0__4360634980582143419 && (otherRec.sym__0___45_7492593539880285892 < sym__0___45_7492593539880285892 && (otherRec.sym__0__1706094538935295417 < sym__0__1706094538935295417 && (otherRec.sym__0__6114638120282452033 < sym__0__6114638120282452033 && (otherRec.sym__0___45_78261027814563536 < sym__0___45_78261027814563536 && (otherRec.sym__0__2648420561950371368 < sym__0__2648420561950371368 && (otherRec.sym__0__3807806894063626346 < sym__0__3807806894063626346 && (otherRec.sym__0__3010211381236373125 < sym__0__3010211381236373125 && (otherRec.sym__0__3300613616795216173 < sym__0__3300613616795216173 && (otherRec.sym__0___45_3130123223234281513 < sym__0___45_3130123223234281513 && (otherRec.sym__0__8189415442579395633 < sym__0__8189415442579395633 && (otherRec.sym__0__3248231192614790363 < sym__0__3248231192614790363 && (otherRec.sym__0__1734593865430170446 < sym__0__1734593865430170446 && (otherRec.sym__0___45_8167422549222682195 < sym__0___45_8167422549222682195 && (otherRec.sym__0__2936268515493900473 < sym__0__2936268515493900473 && (otherRec.sym__0__2661490882974477953 < sym__0__2661490882974477953 && (otherRec.sym__0___45_6833151998909895557 < sym__0___45_6833151998909895557 && (otherRec.sym__0___45_6379152824683587325 < sym__0___45_6379152824683587325 && (otherRec.sym__0__3389381886574775957 < sym__0__3389381886574775957 && (otherRec.sym__0___45_3006394417042584462 < sym__0___45_3006394417042584462 && (otherRec.sym__0__5708853396861436519 < sym__0__5708853396861436519 && (otherRec.sym__0__2510302245253987058 < sym__0__2510302245253987058 && (otherRec.sym__0___45_8268616720440236384 < sym__0___45_8268616720440236384 && (otherRec.sym__0___45_2145747097567105917 < sym__0___45_2145747097567105917 && (otherRec.sym__0___45_6747202196090936717 < sym__0___45_6747202196090936717 && (otherRec.sym__0___45_980129616638612863 < sym__0___45_980129616638612863 && (otherRec.sym__0__7935787287177824775 < sym__0__7935787287177824775 && (otherRec.sym__0___45_1765426731373793463 < sym__0___45_1765426731373793463 && (otherRec.sym__0__2312911666975909277 < sym__0__2312911666975909277 && (otherRec.sym__0__8713898721580785886 < sym__0__8713898721580785886 && (otherRec.sym__0__5274362417922015940 < sym__0__5274362417922015940 && (otherRec.sym__0___45_5950462958936866676 < sym__0___45_5950462958936866676 && (otherRec.sym__0__5599391359954735578 < sym__0__5599391359954735578 && (otherRec.sym__0__4014184007857207821 < sym__0__4014184007857207821 && (otherRec.sym__0___45_7146441527183610849 < sym__0___45_7146441527183610849 && (otherRec.sym__0___45_8891100078062559775 < sym__0___45_8891100078062559775 && (otherRec.sym__0___45_5365202057839317149 < sym__0___45_5365202057839317149 && (otherRec.sym__0__5177313860806756678 < sym__0__5177313860806756678 && (otherRec.sym__0___45_6139660049171508851 < sym__0___45_6139660049171508851 && (otherRec.sym__0__5600261570499839795 < sym__0__5600261570499839795 && (otherRec.sym__0__7033726162709406531 < sym__0__7033726162709406531 && (otherRec.sym__0___45_2028921051824210768 < sym__0___45_2028921051824210768 && (otherRec.sym__0__1510822012344354762 < sym__0__1510822012344354762 && (otherRec.sym__0___45_2462553484168592128 < sym__0___45_2462553484168592128 && (otherRec.sym__0__6826615390864986324 < sym__0__6826615390864986324 && (otherRec.sym__0__1653057618405204038 < sym__0__1653057618405204038 && (otherRec.sym__0__1042393484014954953 < sym__0__1042393484014954953 && otherRec.sym__0___45_4797345940361177504 < sym__0___45_4797345940361177504)))))))))))))))))))))))))))))))))))))))))))))))))))))))));
  }
  bool operator ==(const Record2& otherRec) const{
    return (otherRec.sym__0___45_2544647080140891779 == sym__0___45_2544647080140891779 && (otherRec.sym__0___45_4581931629044260499 == sym__0___45_4581931629044260499 && (otherRec.sym__0__3511844764913402723 == sym__0__3511844764913402723 && (otherRec.sym__0__2581750769096843740 == sym__0__2581750769096843740 && (otherRec.sym__0___45_6031048599860414622 == sym__0___45_6031048599860414622 && (otherRec.sym__0__8084343433543173228 == sym__0__8084343433543173228 && (otherRec.sym__0___45_3664881058840515771 == sym__0___45_3664881058840515771 && (otherRec.sym__0___45_1924199962958349658 == sym__0___45_1924199962958349658 && (otherRec.sym__0__7769469128992998949 == sym__0__7769469128992998949 && (otherRec.sym__0__7818554603565865821 == sym__0__7818554603565865821 && (otherRec.sym__0__4360634980582143419 == sym__0__4360634980582143419 && (otherRec.sym__0___45_7492593539880285892 == sym__0___45_7492593539880285892 && (otherRec.sym__0__1706094538935295417 == sym__0__1706094538935295417 && (otherRec.sym__0__6114638120282452033 == sym__0__6114638120282452033 && (otherRec.sym__0___45_78261027814563536 == sym__0___45_78261027814563536 && (otherRec.sym__0__2648420561950371368 == sym__0__2648420561950371368 && (otherRec.sym__0__3807806894063626346 == sym__0__3807806894063626346 && (otherRec.sym__0__3010211381236373125 == sym__0__3010211381236373125 && (otherRec.sym__0__3300613616795216173 == sym__0__3300613616795216173 && (otherRec.sym__0___45_3130123223234281513 == sym__0___45_3130123223234281513 && (otherRec.sym__0__8189415442579395633 == sym__0__8189415442579395633 && (otherRec.sym__0__3248231192614790363 == sym__0__3248231192614790363 && (otherRec.sym__0__1734593865430170446 == sym__0__1734593865430170446 && (otherRec.sym__0___45_8167422549222682195 == sym__0___45_8167422549222682195 && (otherRec.sym__0__2936268515493900473 == sym__0__2936268515493900473 && (otherRec.sym__0__2661490882974477953 == sym__0__2661490882974477953 && (otherRec.sym__0___45_6833151998909895557 == sym__0___45_6833151998909895557 && (otherRec.sym__0___45_6379152824683587325 == sym__0___45_6379152824683587325 && (otherRec.sym__0__3389381886574775957 == sym__0__3389381886574775957 && (otherRec.sym__0___45_3006394417042584462 == sym__0___45_3006394417042584462 && (otherRec.sym__0__5708853396861436519 == sym__0__5708853396861436519 && (otherRec.sym__0__2510302245253987058 == sym__0__2510302245253987058 && (otherRec.sym__0___45_8268616720440236384 == sym__0___45_8268616720440236384 && (otherRec.sym__0___45_2145747097567105917 == sym__0___45_2145747097567105917 && (otherRec.sym__0___45_6747202196090936717 == sym__0___45_6747202196090936717 && (otherRec.sym__0___45_980129616638612863 == sym__0___45_980129616638612863 && (otherRec.sym__0__7935787287177824775 == sym__0__7935787287177824775 && (otherRec.sym__0___45_1765426731373793463 == sym__0___45_1765426731373793463 && (otherRec.sym__0__2312911666975909277 == sym__0__2312911666975909277 && (otherRec.sym__0__8713898721580785886 == sym__0__8713898721580785886 && (otherRec.sym__0__5274362417922015940 == sym__0__5274362417922015940 && (otherRec.sym__0___45_5950462958936866676 == sym__0___45_5950462958936866676 && (otherRec.sym__0__5599391359954735578 == sym__0__5599391359954735578 && (otherRec.sym__0__4014184007857207821 == sym__0__4014184007857207821 && (otherRec.sym__0___45_7146441527183610849 == sym__0___45_7146441527183610849 && (otherRec.sym__0___45_8891100078062559775 == sym__0___45_8891100078062559775 && (otherRec.sym__0___45_5365202057839317149 == sym__0___45_5365202057839317149 && (otherRec.sym__0__5177313860806756678 == sym__0__5177313860806756678 && (otherRec.sym__0___45_6139660049171508851 == sym__0___45_6139660049171508851 && (otherRec.sym__0__5600261570499839795 == sym__0__5600261570499839795 && (otherRec.sym__0__7033726162709406531 == sym__0__7033726162709406531 && (otherRec.sym__0___45_2028921051824210768 == sym__0___45_2028921051824210768 && (otherRec.sym__0__1510822012344354762 == sym__0__1510822012344354762 && (otherRec.sym__0___45_2462553484168592128 == sym__0___45_2462553484168592128 && (otherRec.sym__0__6826615390864986324 == sym__0__6826615390864986324 && (otherRec.sym__0__1653057618405204038 == sym__0__1653057618405204038 && (otherRec.sym__0__1042393484014954953 == sym__0__1042393484014954953 && otherRec.sym__0___45_4797345940361177504 == sym__0___45_4797345940361177504)))))))))))))))))))))))))))))))))))))))))))))))))))))))));
  }
  bool operator !=(const Record2& otherRec) const{
    return (otherRec.sym__0___45_2544647080140891779 != sym__0___45_2544647080140891779 || (otherRec.sym__0___45_4581931629044260499 != sym__0___45_4581931629044260499 || (otherRec.sym__0__3511844764913402723 != sym__0__3511844764913402723 || (otherRec.sym__0__2581750769096843740 != sym__0__2581750769096843740 || (otherRec.sym__0___45_6031048599860414622 != sym__0___45_6031048599860414622 || (otherRec.sym__0__8084343433543173228 != sym__0__8084343433543173228 || (otherRec.sym__0___45_3664881058840515771 != sym__0___45_3664881058840515771 || (otherRec.sym__0___45_1924199962958349658 != sym__0___45_1924199962958349658 || (otherRec.sym__0__7769469128992998949 != sym__0__7769469128992998949 || (otherRec.sym__0__7818554603565865821 != sym__0__7818554603565865821 || (otherRec.sym__0__4360634980582143419 != sym__0__4360634980582143419 || (otherRec.sym__0___45_7492593539880285892 != sym__0___45_7492593539880285892 || (otherRec.sym__0__1706094538935295417 != sym__0__1706094538935295417 || (otherRec.sym__0__6114638120282452033 != sym__0__6114638120282452033 || (otherRec.sym__0___45_78261027814563536 != sym__0___45_78261027814563536 || (otherRec.sym__0__2648420561950371368 != sym__0__2648420561950371368 || (otherRec.sym__0__3807806894063626346 != sym__0__3807806894063626346 || (otherRec.sym__0__3010211381236373125 != sym__0__3010211381236373125 || (otherRec.sym__0__3300613616795216173 != sym__0__3300613616795216173 || (otherRec.sym__0___45_3130123223234281513 != sym__0___45_3130123223234281513 || (otherRec.sym__0__8189415442579395633 != sym__0__8189415442579395633 || (otherRec.sym__0__3248231192614790363 != sym__0__3248231192614790363 || (otherRec.sym__0__1734593865430170446 != sym__0__1734593865430170446 || (otherRec.sym__0___45_8167422549222682195 != sym__0___45_8167422549222682195 || (otherRec.sym__0__2936268515493900473 != sym__0__2936268515493900473 || (otherRec.sym__0__2661490882974477953 != sym__0__2661490882974477953 || (otherRec.sym__0___45_6833151998909895557 != sym__0___45_6833151998909895557 || (otherRec.sym__0___45_6379152824683587325 != sym__0___45_6379152824683587325 || (otherRec.sym__0__3389381886574775957 != sym__0__3389381886574775957 || (otherRec.sym__0___45_3006394417042584462 != sym__0___45_3006394417042584462 || (otherRec.sym__0__5708853396861436519 != sym__0__5708853396861436519 || (otherRec.sym__0__2510302245253987058 != sym__0__2510302245253987058 || (otherRec.sym__0___45_8268616720440236384 != sym__0___45_8268616720440236384 || (otherRec.sym__0___45_2145747097567105917 != sym__0___45_2145747097567105917 || (otherRec.sym__0___45_6747202196090936717 != sym__0___45_6747202196090936717 || (otherRec.sym__0___45_980129616638612863 != sym__0___45_980129616638612863 || (otherRec.sym__0__7935787287177824775 != sym__0__7935787287177824775 || (otherRec.sym__0___45_1765426731373793463 != sym__0___45_1765426731373793463 || (otherRec.sym__0__2312911666975909277 != sym__0__2312911666975909277 || (otherRec.sym__0__8713898721580785886 != sym__0__8713898721580785886 || (otherRec.sym__0__5274362417922015940 != sym__0__5274362417922015940 || (otherRec.sym__0___45_5950462958936866676 != sym__0___45_5950462958936866676 || (otherRec.sym__0__5599391359954735578 != sym__0__5599391359954735578 || (otherRec.sym__0__4014184007857207821 != sym__0__4014184007857207821 || (otherRec.sym__0___45_7146441527183610849 != sym__0___45_7146441527183610849 || (otherRec.sym__0___45_8891100078062559775 != sym__0___45_8891100078062559775 || (otherRec.sym__0___45_5365202057839317149 != sym__0___45_5365202057839317149 || (otherRec.sym__0__5177313860806756678 != sym__0__5177313860806756678 || (otherRec.sym__0___45_6139660049171508851 != sym__0___45_6139660049171508851 || (otherRec.sym__0__5600261570499839795 != sym__0__5600261570499839795 || (otherRec.sym__0__7033726162709406531 != sym__0__7033726162709406531 || (otherRec.sym__0___45_2028921051824210768 != sym__0___45_2028921051824210768 || (otherRec.sym__0__1510822012344354762 != sym__0__1510822012344354762 || (otherRec.sym__0___45_2462553484168592128 != sym__0___45_2462553484168592128 || (otherRec.sym__0__6826615390864986324 != sym__0__6826615390864986324 || (otherRec.sym__0__1653057618405204038 != sym__0__1653057618405204038 || (otherRec.sym__0__1042393484014954953 != sym__0__1042393484014954953 || otherRec.sym__0___45_4797345940361177504 != sym__0___45_4797345940361177504)))))))))))))))))))))))))))))))))))))))))))))))))))))))));
  }
  unsigned sym__0___45_2544647080140891779;
  fluidb_string<18> sym__0___45_4581931629044260499;
  fluidb_string<9> sym__0__3511844764913402723;
  fluidb_string<9> sym__0__2581750769096843740;
  unsigned sym__0___45_6031048599860414622;
  unsigned sym__0__8084343433543173228;
  fluidb_string<7> sym__0___45_3664881058840515771;
  unsigned sym__0___45_1924199962958349658;
  unsigned sym__0__7769469128992998949;
  unsigned sym__0__7818554603565865821;
  unsigned sym__0__4360634980582143419;
  unsigned sym__0___45_7492593539880285892;
  fluidb_string<15> sym__0__1706094538935295417;
  fluidb_string<2> sym__0__6114638120282452033;
  fluidb_string<2> sym__0___45_78261027814563536;
  fluidb_string<2> sym__0__2648420561950371368;
  fluidb_string<2> sym__0__3807806894063626346;
  unsigned sym__0__3010211381236373125;
  fluidb_string<18> sym__0__3300613616795216173;
  fluidb_string<40> sym__0___45_3130123223234281513;
  fluidb_string<11> sym__0__8189415442579395633;
  fluidb_string<15> sym__0__3248231192614790363;
  fluidb_string<13> sym__0__1734593865430170446;
  fluidb_string<15> sym__0___45_8167422549222682195;
  fluidb_string<21> sym__0__2936268515493900473;
  unsigned sym__0__2661490882974477953;
  int sym__0___45_6833151998909895557;
  unsigned sym__0___45_6379152824683587325;
  unsigned sym__0__3389381886574775957;
  unsigned sym__0___45_3006394417042584462;
  unsigned sym__0__5708853396861436519;
  fluidb_string<21> sym__0__2510302245253987058;
  unsigned sym__0___45_8268616720440236384;
  fluidb_string<10> sym__0___45_2145747097567105917;
  unsigned sym__0___45_6747202196090936717;
  double sym__0___45_980129616638612863;
  unsigned sym__0__7935787287177824775;
  double sym__0___45_1765426731373793463;
  unsigned sym__0__2312911666975909277;
  unsigned sym__0__8713898721580785886;
  double sym__0__5274362417922015940;
  fluidb_string<13> sym__0___45_5950462958936866676;
  unsigned sym__0__5599391359954735578;
  fluidb_string<25> sym__0__4014184007857207821;
  fluidb_string<40> sym__0___45_7146441527183610849;
  fluidb_string<16> sym__0___45_8891100078062559775;
  fluidb_string<16> sym__0___45_5365202057839317149;
  fluidb_string<13> sym__0__5177313860806756678;
  fluidb_string<15> sym__0___45_6139660049171508851;
  unsigned sym__0__5600261570499839795;
  fluidb_string<55> sym__0__7033726162709406531;
  fluidb_string<25> sym__0___45_2028921051824210768;
  fluidb_string<7> sym__0__1510822012344354762;
  fluidb_string<10> sym__0___45_2462553484168592128;
  fluidb_string<11> sym__0__6826615390864986324;
  fluidb_string<25> sym__0__1653057618405204038;
  unsigned sym__0__1042393484014954953;
  fluidb_string<10> sym__0___45_4797345940361177504;
 private:
};


class Record4 {
 public:
  Record4(unsigned __sym__0__7178003535380331304, fluidb_string<55> __sym__0___45_7020257275696364520, fluidb_string<25> __sym__0___45_6307179734719967033, fluidb_string<7> __sym__0__4568304886257136061, fluidb_string<10> __sym__0___45_6291097039630000265, fluidb_string<11> __sym__0__551327770031967739, fluidb_string<25> __sym__0__3827696365022297353, unsigned __sym__0___45_1779543743759935870, fluidb_string<10> __sym__0__3752090135924368535) : sym__0__7178003535380331304(__sym__0__7178003535380331304), sym__0___45_7020257275696364520(__sym__0___45_7020257275696364520), sym__0___45_6307179734719967033(__sym__0___45_6307179734719967033), sym__0__4568304886257136061(__sym__0__4568304886257136061), sym__0___45_6291097039630000265(__sym__0___45_6291097039630000265), sym__0__551327770031967739(__sym__0__551327770031967739), sym__0__3827696365022297353(__sym__0__3827696365022297353), sym__0___45_1779543743759935870(__sym__0___45_1779543743759935870), sym__0__3752090135924368535(__sym__0__3752090135924368535)
  {
  }
  Record4() 
  {
  }
  std::string show() const{
    std::stringstream o;
    o << sym__0__7178003535380331304 << " | " << arrToString(sym__0___45_7020257275696364520) << " | " << arrToString(sym__0___45_6307179734719967033) << " | " << arrToString(sym__0__4568304886257136061) << " | " << arrToString(sym__0___45_6291097039630000265) << " | " << arrToString(sym__0__551327770031967739) << " | " << arrToString(sym__0__3827696365022297353) << " | " << sym__0___45_1779543743759935870 << " | " << arrToString(sym__0__3752090135924368535);
    return o.str();
  }
  bool operator <(const Record4& otherRec) const{
    return (otherRec.sym__0__7178003535380331304 < sym__0__7178003535380331304 && (otherRec.sym__0___45_7020257275696364520 < sym__0___45_7020257275696364520 && (otherRec.sym__0___45_6307179734719967033 < sym__0___45_6307179734719967033 && (otherRec.sym__0__4568304886257136061 < sym__0__4568304886257136061 && (otherRec.sym__0___45_6291097039630000265 < sym__0___45_6291097039630000265 && (otherRec.sym__0__551327770031967739 < sym__0__551327770031967739 && (otherRec.sym__0__3827696365022297353 < sym__0__3827696365022297353 && (otherRec.sym__0___45_1779543743759935870 < sym__0___45_1779543743759935870 && otherRec.sym__0__3752090135924368535 < sym__0__3752090135924368535))))))));
  }
  bool operator ==(const Record4& otherRec) const{
    return (otherRec.sym__0__7178003535380331304 == sym__0__7178003535380331304 && (otherRec.sym__0___45_7020257275696364520 == sym__0___45_7020257275696364520 && (otherRec.sym__0___45_6307179734719967033 == sym__0___45_6307179734719967033 && (otherRec.sym__0__4568304886257136061 == sym__0__4568304886257136061 && (otherRec.sym__0___45_6291097039630000265 == sym__0___45_6291097039630000265 && (otherRec.sym__0__551327770031967739 == sym__0__551327770031967739 && (otherRec.sym__0__3827696365022297353 == sym__0__3827696365022297353 && (otherRec.sym__0___45_1779543743759935870 == sym__0___45_1779543743759935870 && otherRec.sym__0__3752090135924368535 == sym__0__3752090135924368535))))))));
  }
  bool operator !=(const Record4& otherRec) const{
    return (otherRec.sym__0__7178003535380331304 != sym__0__7178003535380331304 || (otherRec.sym__0___45_7020257275696364520 != sym__0___45_7020257275696364520 || (otherRec.sym__0___45_6307179734719967033 != sym__0___45_6307179734719967033 || (otherRec.sym__0__4568304886257136061 != sym__0__4568304886257136061 || (otherRec.sym__0___45_6291097039630000265 != sym__0___45_6291097039630000265 || (otherRec.sym__0__551327770031967739 != sym__0__551327770031967739 || (otherRec.sym__0__3827696365022297353 != sym__0__3827696365022297353 || (otherRec.sym__0___45_1779543743759935870 != sym__0___45_1779543743759935870 || otherRec.sym__0__3752090135924368535 != sym__0__3752090135924368535))))))));
  }
  unsigned sym__0__7178003535380331304;
  fluidb_string<55> sym__0___45_7020257275696364520;
  fluidb_string<25> sym__0___45_6307179734719967033;
  fluidb_string<7> sym__0__4568304886257136061;
  fluidb_string<10> sym__0___45_6291097039630000265;
  fluidb_string<11> sym__0__551327770031967739;
  fluidb_string<25> sym__0__3827696365022297353;
  unsigned sym__0___45_1779543743759935870;
  fluidb_string<10> sym__0__3752090135924368535;
 private:
};


class Record12 {
 public:
  Record12(unsigned __sym__0__7069852625741277438, fluidb_string<25> __sym__0___45_2139184416220787303, fluidb_string<40> __sym__0__6834910062454089307, fluidb_string<16> __sym__0___45_673637979750308955, fluidb_string<16> __sym__0__7353040165187485943, fluidb_string<13> __sym__0___45_3600959643487303198, fluidb_string<15> __sym__0__1586920362281366553, unsigned __sym__0___45_565293263947163771, int __sym__0___45_843396218047479825, unsigned __sym__0___45_6341950231013217833, unsigned __sym__0__1045058483100812033, unsigned __sym__0__3789297121224398166, unsigned __sym__0__7633871876750507011, fluidb_string<21> __sym__0___45_1913197190575800618, unsigned __sym__0__5022607639284586068, fluidb_string<10> __sym__0___45_4537203481097655209, unsigned __sym__0___45_4177776814409117721, double __sym__0___45_1641792039791357051, unsigned __sym__0__9155042948135519075, double __sym__0___45_1524873931413302067, unsigned __sym__0__5123726051002722313, unsigned __sym__0___45_3964194374284396198, double __sym__0___45_3323287974231174848, fluidb_string<13> __sym__0___45_7635081431606838648, unsigned __sym__0__3374832300737452457, fluidb_string<18> __sym__0___45_2738400311900405319, fluidb_string<9> __sym__0__922566035134170359, fluidb_string<9> __sym__0___45_4970177704815948360, unsigned __sym__0__1953889797750115686, unsigned __sym__0__7036968840507665704, fluidb_string<7> __sym__0__2424422746197752657, unsigned __sym__0___45_899504608738992510, unsigned __sym__0__2199101055335955185, unsigned __sym__0__8162945309743176777, unsigned __sym__0__5658677538842948015, unsigned __sym__0___45_1804682623039322536, fluidb_string<15> __sym__0___45_4150473036734596643, fluidb_string<2> __sym__0___45_1494825655055665211, fluidb_string<2> __sym__0__7243345290037361860, fluidb_string<2> __sym__0___45_5621333005798540324, fluidb_string<2> __sym__0___45_6906996774260360338, unsigned __sym__0___45_6223982643952099801, fluidb_string<55> __sym__0___45_4582877986939568489, fluidb_string<25> __sym__0__8952063493441915716, fluidb_string<7> __sym__0___45_1824395327270788210, fluidb_string<10> __sym__0___45_4574956228592531724, fluidb_string<11> __sym__0___45_3583563823835889744, fluidb_string<25> __sym__0__1035932931239708898, unsigned __sym__0__2873925968864442957, fluidb_string<10> __sym__0___45_6275854556107336556) : sym__0__7069852625741277438(__sym__0__7069852625741277438), sym__0___45_2139184416220787303(__sym__0___45_2139184416220787303), sym__0__6834910062454089307(__sym__0__6834910062454089307), sym__0___45_673637979750308955(__sym__0___45_673637979750308955), sym__0__7353040165187485943(__sym__0__7353040165187485943), sym__0___45_3600959643487303198(__sym__0___45_3600959643487303198), sym__0__1586920362281366553(__sym__0__1586920362281366553), sym__0___45_565293263947163771(__sym__0___45_565293263947163771), sym__0___45_843396218047479825(__sym__0___45_843396218047479825), sym__0___45_6341950231013217833(__sym__0___45_6341950231013217833), sym__0__1045058483100812033(__sym__0__1045058483100812033), sym__0__3789297121224398166(__sym__0__3789297121224398166), sym__0__7633871876750507011(__sym__0__7633871876750507011), sym__0___45_1913197190575800618(__sym__0___45_1913197190575800618), sym__0__5022607639284586068(__sym__0__5022607639284586068), sym__0___45_4537203481097655209(__sym__0___45_4537203481097655209), sym__0___45_4177776814409117721(__sym__0___45_4177776814409117721), sym__0___45_1641792039791357051(__sym__0___45_1641792039791357051), sym__0__9155042948135519075(__sym__0__9155042948135519075), sym__0___45_1524873931413302067(__sym__0___45_1524873931413302067), sym__0__5123726051002722313(__sym__0__5123726051002722313), sym__0___45_3964194374284396198(__sym__0___45_3964194374284396198), sym__0___45_3323287974231174848(__sym__0___45_3323287974231174848), sym__0___45_7635081431606838648(__sym__0___45_7635081431606838648), sym__0__3374832300737452457(__sym__0__3374832300737452457), sym__0___45_2738400311900405319(__sym__0___45_2738400311900405319), sym__0__922566035134170359(__sym__0__922566035134170359), sym__0___45_4970177704815948360(__sym__0___45_4970177704815948360), sym__0__1953889797750115686(__sym__0__1953889797750115686), sym__0__7036968840507665704(__sym__0__7036968840507665704), sym__0__2424422746197752657(__sym__0__2424422746197752657), sym__0___45_899504608738992510(__sym__0___45_899504608738992510), sym__0__2199101055335955185(__sym__0__2199101055335955185), sym__0__8162945309743176777(__sym__0__8162945309743176777), sym__0__5658677538842948015(__sym__0__5658677538842948015), sym__0___45_1804682623039322536(__sym__0___45_1804682623039322536), sym__0___45_4150473036734596643(__sym__0___45_4150473036734596643), sym__0___45_1494825655055665211(__sym__0___45_1494825655055665211), sym__0__7243345290037361860(__sym__0__7243345290037361860), sym__0___45_5621333005798540324(__sym__0___45_5621333005798540324), sym__0___45_6906996774260360338(__sym__0___45_6906996774260360338), sym__0___45_6223982643952099801(__sym__0___45_6223982643952099801), sym__0___45_4582877986939568489(__sym__0___45_4582877986939568489), sym__0__8952063493441915716(__sym__0__8952063493441915716), sym__0___45_1824395327270788210(__sym__0___45_1824395327270788210), sym__0___45_4574956228592531724(__sym__0___45_4574956228592531724), sym__0___45_3583563823835889744(__sym__0___45_3583563823835889744), sym__0__1035932931239708898(__sym__0__1035932931239708898), sym__0__2873925968864442957(__sym__0__2873925968864442957), sym__0___45_6275854556107336556(__sym__0___45_6275854556107336556)
  {
  }
  Record12() 
  {
  }
  std::string show() const{
    std::stringstream o;
    o << sym__0__7069852625741277438 << " | " << arrToString(sym__0___45_2139184416220787303) << " | " << arrToString(sym__0__6834910062454089307) << " | " << arrToString(sym__0___45_673637979750308955) << " | " << arrToString(sym__0__7353040165187485943) << " | " << arrToString(sym__0___45_3600959643487303198) << " | " << arrToString(sym__0__1586920362281366553) << " | " << sym__0___45_565293263947163771 << " | " << sym__0___45_843396218047479825 << " | " << sym__0___45_6341950231013217833 << " | " << sym__0__1045058483100812033 << " | " << sym__0__3789297121224398166 << " | " << sym__0__7633871876750507011 << " | " << arrToString(sym__0___45_1913197190575800618) << " | " << sym__0__5022607639284586068 << " | " << arrToString(sym__0___45_4537203481097655209) << " | " << sym__0___45_4177776814409117721 << " | " << sym__0___45_1641792039791357051 << " | " << sym__0__9155042948135519075 << " | " << sym__0___45_1524873931413302067 << " | " << sym__0__5123726051002722313 << " | " << sym__0___45_3964194374284396198 << " | " << sym__0___45_3323287974231174848 << " | " << arrToString(sym__0___45_7635081431606838648) << " | " << sym__0__3374832300737452457 << " | " << arrToString(sym__0___45_2738400311900405319) << " | " << arrToString(sym__0__922566035134170359) << " | " << arrToString(sym__0___45_4970177704815948360) << " | " << sym__0__1953889797750115686 << " | " << sym__0__7036968840507665704 << " | " << arrToString(sym__0__2424422746197752657) << " | " << sym__0___45_899504608738992510 << " | " << sym__0__2199101055335955185 << " | " << sym__0__8162945309743176777 << " | " << sym__0__5658677538842948015 << " | " << sym__0___45_1804682623039322536 << " | " << arrToString(sym__0___45_4150473036734596643) << " | " << arrToString(sym__0___45_1494825655055665211) << " | " << arrToString(sym__0__7243345290037361860) << " | " << arrToString(sym__0___45_5621333005798540324) << " | " << arrToString(sym__0___45_6906996774260360338) << " | " << sym__0___45_6223982643952099801 << " | " << arrToString(sym__0___45_4582877986939568489) << " | " << arrToString(sym__0__8952063493441915716) << " | " << arrToString(sym__0___45_1824395327270788210) << " | " << arrToString(sym__0___45_4574956228592531724) << " | " << arrToString(sym__0___45_3583563823835889744) << " | " << arrToString(sym__0__1035932931239708898) << " | " << sym__0__2873925968864442957 << " | " << arrToString(sym__0___45_6275854556107336556);
    return o.str();
  }
  bool operator <(const Record12& otherRec) const{
    return (otherRec.sym__0__7069852625741277438 < sym__0__7069852625741277438 && (otherRec.sym__0___45_2139184416220787303 < sym__0___45_2139184416220787303 && (otherRec.sym__0__6834910062454089307 < sym__0__6834910062454089307 && (otherRec.sym__0___45_673637979750308955 < sym__0___45_673637979750308955 && (otherRec.sym__0__7353040165187485943 < sym__0__7353040165187485943 && (otherRec.sym__0___45_3600959643487303198 < sym__0___45_3600959643487303198 && (otherRec.sym__0__1586920362281366553 < sym__0__1586920362281366553 && (otherRec.sym__0___45_565293263947163771 < sym__0___45_565293263947163771 && (otherRec.sym__0___45_843396218047479825 < sym__0___45_843396218047479825 && (otherRec.sym__0___45_6341950231013217833 < sym__0___45_6341950231013217833 && (otherRec.sym__0__1045058483100812033 < sym__0__1045058483100812033 && (otherRec.sym__0__3789297121224398166 < sym__0__3789297121224398166 && (otherRec.sym__0__7633871876750507011 < sym__0__7633871876750507011 && (otherRec.sym__0___45_1913197190575800618 < sym__0___45_1913197190575800618 && (otherRec.sym__0__5022607639284586068 < sym__0__5022607639284586068 && (otherRec.sym__0___45_4537203481097655209 < sym__0___45_4537203481097655209 && (otherRec.sym__0___45_4177776814409117721 < sym__0___45_4177776814409117721 && (otherRec.sym__0___45_1641792039791357051 < sym__0___45_1641792039791357051 && (otherRec.sym__0__9155042948135519075 < sym__0__9155042948135519075 && (otherRec.sym__0___45_1524873931413302067 < sym__0___45_1524873931413302067 && (otherRec.sym__0__5123726051002722313 < sym__0__5123726051002722313 && (otherRec.sym__0___45_3964194374284396198 < sym__0___45_3964194374284396198 && (otherRec.sym__0___45_3323287974231174848 < sym__0___45_3323287974231174848 && (otherRec.sym__0___45_7635081431606838648 < sym__0___45_7635081431606838648 && (otherRec.sym__0__3374832300737452457 < sym__0__3374832300737452457 && (otherRec.sym__0___45_2738400311900405319 < sym__0___45_2738400311900405319 && (otherRec.sym__0__922566035134170359 < sym__0__922566035134170359 && (otherRec.sym__0___45_4970177704815948360 < sym__0___45_4970177704815948360 && (otherRec.sym__0__1953889797750115686 < sym__0__1953889797750115686 && (otherRec.sym__0__7036968840507665704 < sym__0__7036968840507665704 && (otherRec.sym__0__2424422746197752657 < sym__0__2424422746197752657 && (otherRec.sym__0___45_899504608738992510 < sym__0___45_899504608738992510 && (otherRec.sym__0__2199101055335955185 < sym__0__2199101055335955185 && (otherRec.sym__0__8162945309743176777 < sym__0__8162945309743176777 && (otherRec.sym__0__5658677538842948015 < sym__0__5658677538842948015 && (otherRec.sym__0___45_1804682623039322536 < sym__0___45_1804682623039322536 && (otherRec.sym__0___45_4150473036734596643 < sym__0___45_4150473036734596643 && (otherRec.sym__0___45_1494825655055665211 < sym__0___45_1494825655055665211 && (otherRec.sym__0__7243345290037361860 < sym__0__7243345290037361860 && (otherRec.sym__0___45_5621333005798540324 < sym__0___45_5621333005798540324 && (otherRec.sym__0___45_6906996774260360338 < sym__0___45_6906996774260360338 && (otherRec.sym__0___45_6223982643952099801 < sym__0___45_6223982643952099801 && (otherRec.sym__0___45_4582877986939568489 < sym__0___45_4582877986939568489 && (otherRec.sym__0__8952063493441915716 < sym__0__8952063493441915716 && (otherRec.sym__0___45_1824395327270788210 < sym__0___45_1824395327270788210 && (otherRec.sym__0___45_4574956228592531724 < sym__0___45_4574956228592531724 && (otherRec.sym__0___45_3583563823835889744 < sym__0___45_3583563823835889744 && (otherRec.sym__0__1035932931239708898 < sym__0__1035932931239708898 && (otherRec.sym__0__2873925968864442957 < sym__0__2873925968864442957 && otherRec.sym__0___45_6275854556107336556 < sym__0___45_6275854556107336556)))))))))))))))))))))))))))))))))))))))))))))))));
  }
  bool operator ==(const Record12& otherRec) const{
    return (otherRec.sym__0__7069852625741277438 == sym__0__7069852625741277438 && (otherRec.sym__0___45_2139184416220787303 == sym__0___45_2139184416220787303 && (otherRec.sym__0__6834910062454089307 == sym__0__6834910062454089307 && (otherRec.sym__0___45_673637979750308955 == sym__0___45_673637979750308955 && (otherRec.sym__0__7353040165187485943 == sym__0__7353040165187485943 && (otherRec.sym__0___45_3600959643487303198 == sym__0___45_3600959643487303198 && (otherRec.sym__0__1586920362281366553 == sym__0__1586920362281366553 && (otherRec.sym__0___45_565293263947163771 == sym__0___45_565293263947163771 && (otherRec.sym__0___45_843396218047479825 == sym__0___45_843396218047479825 && (otherRec.sym__0___45_6341950231013217833 == sym__0___45_6341950231013217833 && (otherRec.sym__0__1045058483100812033 == sym__0__1045058483100812033 && (otherRec.sym__0__3789297121224398166 == sym__0__3789297121224398166 && (otherRec.sym__0__7633871876750507011 == sym__0__7633871876750507011 && (otherRec.sym__0___45_1913197190575800618 == sym__0___45_1913197190575800618 && (otherRec.sym__0__5022607639284586068 == sym__0__5022607639284586068 && (otherRec.sym__0___45_4537203481097655209 == sym__0___45_4537203481097655209 && (otherRec.sym__0___45_4177776814409117721 == sym__0___45_4177776814409117721 && (otherRec.sym__0___45_1641792039791357051 == sym__0___45_1641792039791357051 && (otherRec.sym__0__9155042948135519075 == sym__0__9155042948135519075 && (otherRec.sym__0___45_1524873931413302067 == sym__0___45_1524873931413302067 && (otherRec.sym__0__5123726051002722313 == sym__0__5123726051002722313 && (otherRec.sym__0___45_3964194374284396198 == sym__0___45_3964194374284396198 && (otherRec.sym__0___45_3323287974231174848 == sym__0___45_3323287974231174848 && (otherRec.sym__0___45_7635081431606838648 == sym__0___45_7635081431606838648 && (otherRec.sym__0__3374832300737452457 == sym__0__3374832300737452457 && (otherRec.sym__0___45_2738400311900405319 == sym__0___45_2738400311900405319 && (otherRec.sym__0__922566035134170359 == sym__0__922566035134170359 && (otherRec.sym__0___45_4970177704815948360 == sym__0___45_4970177704815948360 && (otherRec.sym__0__1953889797750115686 == sym__0__1953889797750115686 && (otherRec.sym__0__7036968840507665704 == sym__0__7036968840507665704 && (otherRec.sym__0__2424422746197752657 == sym__0__2424422746197752657 && (otherRec.sym__0___45_899504608738992510 == sym__0___45_899504608738992510 && (otherRec.sym__0__2199101055335955185 == sym__0__2199101055335955185 && (otherRec.sym__0__8162945309743176777 == sym__0__8162945309743176777 && (otherRec.sym__0__5658677538842948015 == sym__0__5658677538842948015 && (otherRec.sym__0___45_1804682623039322536 == sym__0___45_1804682623039322536 && (otherRec.sym__0___45_4150473036734596643 == sym__0___45_4150473036734596643 && (otherRec.sym__0___45_1494825655055665211 == sym__0___45_1494825655055665211 && (otherRec.sym__0__7243345290037361860 == sym__0__7243345290037361860 && (otherRec.sym__0___45_5621333005798540324 == sym__0___45_5621333005798540324 && (otherRec.sym__0___45_6906996774260360338 == sym__0___45_6906996774260360338 && (otherRec.sym__0___45_6223982643952099801 == sym__0___45_6223982643952099801 && (otherRec.sym__0___45_4582877986939568489 == sym__0___45_4582877986939568489 && (otherRec.sym__0__8952063493441915716 == sym__0__8952063493441915716 && (otherRec.sym__0___45_1824395327270788210 == sym__0___45_1824395327270788210 && (otherRec.sym__0___45_4574956228592531724 == sym__0___45_4574956228592531724 && (otherRec.sym__0___45_3583563823835889744 == sym__0___45_3583563823835889744 && (otherRec.sym__0__1035932931239708898 == sym__0__1035932931239708898 && (otherRec.sym__0__2873925968864442957 == sym__0__2873925968864442957 && otherRec.sym__0___45_6275854556107336556 == sym__0___45_6275854556107336556)))))))))))))))))))))))))))))))))))))))))))))))));
  }
  bool operator !=(const Record12& otherRec) const{
    return (otherRec.sym__0__7069852625741277438 != sym__0__7069852625741277438 || (otherRec.sym__0___45_2139184416220787303 != sym__0___45_2139184416220787303 || (otherRec.sym__0__6834910062454089307 != sym__0__6834910062454089307 || (otherRec.sym__0___45_673637979750308955 != sym__0___45_673637979750308955 || (otherRec.sym__0__7353040165187485943 != sym__0__7353040165187485943 || (otherRec.sym__0___45_3600959643487303198 != sym__0___45_3600959643487303198 || (otherRec.sym__0__1586920362281366553 != sym__0__1586920362281366553 || (otherRec.sym__0___45_565293263947163771 != sym__0___45_565293263947163771 || (otherRec.sym__0___45_843396218047479825 != sym__0___45_843396218047479825 || (otherRec.sym__0___45_6341950231013217833 != sym__0___45_6341950231013217833 || (otherRec.sym__0__1045058483100812033 != sym__0__1045058483100812033 || (otherRec.sym__0__3789297121224398166 != sym__0__3789297121224398166 || (otherRec.sym__0__7633871876750507011 != sym__0__7633871876750507011 || (otherRec.sym__0___45_1913197190575800618 != sym__0___45_1913197190575800618 || (otherRec.sym__0__5022607639284586068 != sym__0__5022607639284586068 || (otherRec.sym__0___45_4537203481097655209 != sym__0___45_4537203481097655209 || (otherRec.sym__0___45_4177776814409117721 != sym__0___45_4177776814409117721 || (otherRec.sym__0___45_1641792039791357051 != sym__0___45_1641792039791357051 || (otherRec.sym__0__9155042948135519075 != sym__0__9155042948135519075 || (otherRec.sym__0___45_1524873931413302067 != sym__0___45_1524873931413302067 || (otherRec.sym__0__5123726051002722313 != sym__0__5123726051002722313 || (otherRec.sym__0___45_3964194374284396198 != sym__0___45_3964194374284396198 || (otherRec.sym__0___45_3323287974231174848 != sym__0___45_3323287974231174848 || (otherRec.sym__0___45_7635081431606838648 != sym__0___45_7635081431606838648 || (otherRec.sym__0__3374832300737452457 != sym__0__3374832300737452457 || (otherRec.sym__0___45_2738400311900405319 != sym__0___45_2738400311900405319 || (otherRec.sym__0__922566035134170359 != sym__0__922566035134170359 || (otherRec.sym__0___45_4970177704815948360 != sym__0___45_4970177704815948360 || (otherRec.sym__0__1953889797750115686 != sym__0__1953889797750115686 || (otherRec.sym__0__7036968840507665704 != sym__0__7036968840507665704 || (otherRec.sym__0__2424422746197752657 != sym__0__2424422746197752657 || (otherRec.sym__0___45_899504608738992510 != sym__0___45_899504608738992510 || (otherRec.sym__0__2199101055335955185 != sym__0__2199101055335955185 || (otherRec.sym__0__8162945309743176777 != sym__0__8162945309743176777 || (otherRec.sym__0__5658677538842948015 != sym__0__5658677538842948015 || (otherRec.sym__0___45_1804682623039322536 != sym__0___45_1804682623039322536 || (otherRec.sym__0___45_4150473036734596643 != sym__0___45_4150473036734596643 || (otherRec.sym__0___45_1494825655055665211 != sym__0___45_1494825655055665211 || (otherRec.sym__0__7243345290037361860 != sym__0__7243345290037361860 || (otherRec.sym__0___45_5621333005798540324 != sym__0___45_5621333005798540324 || (otherRec.sym__0___45_6906996774260360338 != sym__0___45_6906996774260360338 || (otherRec.sym__0___45_6223982643952099801 != sym__0___45_6223982643952099801 || (otherRec.sym__0___45_4582877986939568489 != sym__0___45_4582877986939568489 || (otherRec.sym__0__8952063493441915716 != sym__0__8952063493441915716 || (otherRec.sym__0___45_1824395327270788210 != sym__0___45_1824395327270788210 || (otherRec.sym__0___45_4574956228592531724 != sym__0___45_4574956228592531724 || (otherRec.sym__0___45_3583563823835889744 != sym__0___45_3583563823835889744 || (otherRec.sym__0__1035932931239708898 != sym__0__1035932931239708898 || (otherRec.sym__0__2873925968864442957 != sym__0__2873925968864442957 || otherRec.sym__0___45_6275854556107336556 != sym__0___45_6275854556107336556)))))))))))))))))))))))))))))))))))))))))))))))));
  }
  unsigned sym__0__7069852625741277438;
  fluidb_string<25> sym__0___45_2139184416220787303;
  fluidb_string<40> sym__0__6834910062454089307;
  fluidb_string<16> sym__0___45_673637979750308955;
  fluidb_string<16> sym__0__7353040165187485943;
  fluidb_string<13> sym__0___45_3600959643487303198;
  fluidb_string<15> sym__0__1586920362281366553;
  unsigned sym__0___45_565293263947163771;
  int sym__0___45_843396218047479825;
  unsigned sym__0___45_6341950231013217833;
  unsigned sym__0__1045058483100812033;
  unsigned sym__0__3789297121224398166;
  unsigned sym__0__7633871876750507011;
  fluidb_string<21> sym__0___45_1913197190575800618;
  unsigned sym__0__5022607639284586068;
  fluidb_string<10> sym__0___45_4537203481097655209;
  unsigned sym__0___45_4177776814409117721;
  double sym__0___45_1641792039791357051;
  unsigned sym__0__9155042948135519075;
  double sym__0___45_1524873931413302067;
  unsigned sym__0__5123726051002722313;
  unsigned sym__0___45_3964194374284396198;
  double sym__0___45_3323287974231174848;
  fluidb_string<13> sym__0___45_7635081431606838648;
  unsigned sym__0__3374832300737452457;
  fluidb_string<18> sym__0___45_2738400311900405319;
  fluidb_string<9> sym__0__922566035134170359;
  fluidb_string<9> sym__0___45_4970177704815948360;
  unsigned sym__0__1953889797750115686;
  unsigned sym__0__7036968840507665704;
  fluidb_string<7> sym__0__2424422746197752657;
  unsigned sym__0___45_899504608738992510;
  unsigned sym__0__2199101055335955185;
  unsigned sym__0__8162945309743176777;
  unsigned sym__0__5658677538842948015;
  unsigned sym__0___45_1804682623039322536;
  fluidb_string<15> sym__0___45_4150473036734596643;
  fluidb_string<2> sym__0___45_1494825655055665211;
  fluidb_string<2> sym__0__7243345290037361860;
  fluidb_string<2> sym__0___45_5621333005798540324;
  fluidb_string<2> sym__0___45_6906996774260360338;
  unsigned sym__0___45_6223982643952099801;
  fluidb_string<55> sym__0___45_4582877986939568489;
  fluidb_string<25> sym__0__8952063493441915716;
  fluidb_string<7> sym__0___45_1824395327270788210;
  fluidb_string<10> sym__0___45_4574956228592531724;
  fluidb_string<11> sym__0___45_3583563823835889744;
  fluidb_string<25> sym__0__1035932931239708898;
  unsigned sym__0__2873925968864442957;
  fluidb_string<10> sym__0___45_6275854556107336556;
 private:
};


class Record33 {
 public:
  Record33(unsigned __sym__0___45_7743617557643973661, unsigned __sym__0___45_6261698000977207925, fluidb_string<10> __sym__0__1631598784897141641) : sym__0___45_7743617557643973661(__sym__0___45_7743617557643973661), sym__0___45_6261698000977207925(__sym__0___45_6261698000977207925), sym__0__1631598784897141641(__sym__0__1631598784897141641)
  {
  }
  Record33() 
  {
  }
  std::string show() const{
    std::stringstream o;
    o << sym__0___45_7743617557643973661 << " | " << sym__0___45_6261698000977207925 << " | " << arrToString(sym__0__1631598784897141641);
    return o.str();
  }
  bool operator <(const Record33& otherRec) const{
    return (otherRec.sym__0___45_7743617557643973661 < sym__0___45_7743617557643973661 && (otherRec.sym__0___45_6261698000977207925 < sym__0___45_6261698000977207925 && otherRec.sym__0__1631598784897141641 < sym__0__1631598784897141641));
  }
  bool operator ==(const Record33& otherRec) const{
    return (otherRec.sym__0___45_7743617557643973661 == sym__0___45_7743617557643973661 && (otherRec.sym__0___45_6261698000977207925 == sym__0___45_6261698000977207925 && otherRec.sym__0__1631598784897141641 == sym__0__1631598784897141641));
  }
  bool operator !=(const Record33& otherRec) const{
    return (otherRec.sym__0___45_7743617557643973661 != sym__0___45_7743617557643973661 || (otherRec.sym__0___45_6261698000977207925 != sym__0___45_6261698000977207925 || otherRec.sym__0__1631598784897141641 != sym__0__1631598784897141641));
  }
  unsigned sym__0___45_7743617557643973661;
  unsigned sym__0___45_6261698000977207925;
  fluidb_string<10> sym__0__1631598784897141641;
 private:
};


class Record35 {
 public:
  Record35(unsigned __sym__0___45_531840894949671910, fluidb_string<25> __sym__0___45_7594568260455252811, fluidb_string<40> __sym__0___45_4224396157642132841, fluidb_string<16> __sym__0___45_5121813103072643223, fluidb_string<16> __sym__0__3627274254091843899, fluidb_string<13> __sym__0___45_519289659968682554, fluidb_string<15> __sym__0__5824930074457018933, unsigned __sym__0__8300140134385342025, int __sym__0___45_4363113810210080717, unsigned __sym__0___45_2180998471546424549, unsigned __sym__0___45_591129746765413155, unsigned __sym__0___45_4416720451126861422, unsigned __sym__0___45_2100514126469912481, fluidb_string<21> __sym__0__3750234095707159570, unsigned __sym__0___45_7960421939889289288, fluidb_string<10> __sym__0___45_8655770192480484197, unsigned __sym__0__2072590499357086155, double __sym__0__8268830136148095561, unsigned __sym__0___45_678210870537240385, double __sym__0__6112270341236569873, unsigned __sym__0__8598037934431251909, unsigned __sym__0__5291402561130019774, double __sym__0___45_7851524774395097220, fluidb_string<13> __sym__0__1291698872846441412, unsigned __sym__0__8986418791032324453, fluidb_string<18> __sym__0__2167360253537002837, fluidb_string<9> __sym__0__8141858625439628603, fluidb_string<9> __sym__0___45_7931886843684217772, unsigned __sym__0___45_2549139954849286782, unsigned __sym__0___45_1691445119060855580, fluidb_string<7> __sym__0__7474331622035256461, unsigned __sym__0___45_667953329600979866, unsigned __sym__0___45_3035057609626888019, unsigned __sym__0___45_8476599677752189563, unsigned __sym__0___45_6389391189957387661, unsigned __sym__0___45_6486695610681891724, fluidb_string<15> __sym__0__4796994603556539905, fluidb_string<2> __sym__0___45_6306286879286504951, fluidb_string<2> __sym__0___45_922796240211516024, fluidb_string<2> __sym__0__2810436566368623008, fluidb_string<2> __sym__0__7272995257348976042, unsigned __sym__0__1928421907625115531, fluidb_string<55> __sym__0__6254739572024865371, fluidb_string<25> __sym__0___45_5257913184343802104, fluidb_string<7> __sym__0___45_1520289822717538230, fluidb_string<10> __sym__0___45_8628415396103686184, fluidb_string<11> __sym__0__2109492732871942412, fluidb_string<25> __sym__0__5385658520341277382, unsigned __sym__0__3660583386293997969, fluidb_string<10> __sym__0___45_3013711856665730696) : sym__0___45_531840894949671910(__sym__0___45_531840894949671910), sym__0___45_7594568260455252811(__sym__0___45_7594568260455252811), sym__0___45_4224396157642132841(__sym__0___45_4224396157642132841), sym__0___45_5121813103072643223(__sym__0___45_5121813103072643223), sym__0__3627274254091843899(__sym__0__3627274254091843899), sym__0___45_519289659968682554(__sym__0___45_519289659968682554), sym__0__5824930074457018933(__sym__0__5824930074457018933), sym__0__8300140134385342025(__sym__0__8300140134385342025), sym__0___45_4363113810210080717(__sym__0___45_4363113810210080717), sym__0___45_2180998471546424549(__sym__0___45_2180998471546424549), sym__0___45_591129746765413155(__sym__0___45_591129746765413155), sym__0___45_4416720451126861422(__sym__0___45_4416720451126861422), sym__0___45_2100514126469912481(__sym__0___45_2100514126469912481), sym__0__3750234095707159570(__sym__0__3750234095707159570), sym__0___45_7960421939889289288(__sym__0___45_7960421939889289288), sym__0___45_8655770192480484197(__sym__0___45_8655770192480484197), sym__0__2072590499357086155(__sym__0__2072590499357086155), sym__0__8268830136148095561(__sym__0__8268830136148095561), sym__0___45_678210870537240385(__sym__0___45_678210870537240385), sym__0__6112270341236569873(__sym__0__6112270341236569873), sym__0__8598037934431251909(__sym__0__8598037934431251909), sym__0__5291402561130019774(__sym__0__5291402561130019774), sym__0___45_7851524774395097220(__sym__0___45_7851524774395097220), sym__0__1291698872846441412(__sym__0__1291698872846441412), sym__0__8986418791032324453(__sym__0__8986418791032324453), sym__0__2167360253537002837(__sym__0__2167360253537002837), sym__0__8141858625439628603(__sym__0__8141858625439628603), sym__0___45_7931886843684217772(__sym__0___45_7931886843684217772), sym__0___45_2549139954849286782(__sym__0___45_2549139954849286782), sym__0___45_1691445119060855580(__sym__0___45_1691445119060855580), sym__0__7474331622035256461(__sym__0__7474331622035256461), sym__0___45_667953329600979866(__sym__0___45_667953329600979866), sym__0___45_3035057609626888019(__sym__0___45_3035057609626888019), sym__0___45_8476599677752189563(__sym__0___45_8476599677752189563), sym__0___45_6389391189957387661(__sym__0___45_6389391189957387661), sym__0___45_6486695610681891724(__sym__0___45_6486695610681891724), sym__0__4796994603556539905(__sym__0__4796994603556539905), sym__0___45_6306286879286504951(__sym__0___45_6306286879286504951), sym__0___45_922796240211516024(__sym__0___45_922796240211516024), sym__0__2810436566368623008(__sym__0__2810436566368623008), sym__0__7272995257348976042(__sym__0__7272995257348976042), sym__0__1928421907625115531(__sym__0__1928421907625115531), sym__0__6254739572024865371(__sym__0__6254739572024865371), sym__0___45_5257913184343802104(__sym__0___45_5257913184343802104), sym__0___45_1520289822717538230(__sym__0___45_1520289822717538230), sym__0___45_8628415396103686184(__sym__0___45_8628415396103686184), sym__0__2109492732871942412(__sym__0__2109492732871942412), sym__0__5385658520341277382(__sym__0__5385658520341277382), sym__0__3660583386293997969(__sym__0__3660583386293997969), sym__0___45_3013711856665730696(__sym__0___45_3013711856665730696)
  {
  }
  Record35() 
  {
  }
  std::string show() const{
    std::stringstream o;
    o << sym__0___45_531840894949671910 << " | " << arrToString(sym__0___45_7594568260455252811) << " | " << arrToString(sym__0___45_4224396157642132841) << " | " << arrToString(sym__0___45_5121813103072643223) << " | " << arrToString(sym__0__3627274254091843899) << " | " << arrToString(sym__0___45_519289659968682554) << " | " << arrToString(sym__0__5824930074457018933) << " | " << sym__0__8300140134385342025 << " | " << sym__0___45_4363113810210080717 << " | " << sym__0___45_2180998471546424549 << " | " << sym__0___45_591129746765413155 << " | " << sym__0___45_4416720451126861422 << " | " << sym__0___45_2100514126469912481 << " | " << arrToString(sym__0__3750234095707159570) << " | " << sym__0___45_7960421939889289288 << " | " << arrToString(sym__0___45_8655770192480484197) << " | " << sym__0__2072590499357086155 << " | " << sym__0__8268830136148095561 << " | " << sym__0___45_678210870537240385 << " | " << sym__0__6112270341236569873 << " | " << sym__0__8598037934431251909 << " | " << sym__0__5291402561130019774 << " | " << sym__0___45_7851524774395097220 << " | " << arrToString(sym__0__1291698872846441412) << " | " << sym__0__8986418791032324453 << " | " << arrToString(sym__0__2167360253537002837) << " | " << arrToString(sym__0__8141858625439628603) << " | " << arrToString(sym__0___45_7931886843684217772) << " | " << sym__0___45_2549139954849286782 << " | " << sym__0___45_1691445119060855580 << " | " << arrToString(sym__0__7474331622035256461) << " | " << sym__0___45_667953329600979866 << " | " << sym__0___45_3035057609626888019 << " | " << sym__0___45_8476599677752189563 << " | " << sym__0___45_6389391189957387661 << " | " << sym__0___45_6486695610681891724 << " | " << arrToString(sym__0__4796994603556539905) << " | " << arrToString(sym__0___45_6306286879286504951) << " | " << arrToString(sym__0___45_922796240211516024) << " | " << arrToString(sym__0__2810436566368623008) << " | " << arrToString(sym__0__7272995257348976042) << " | " << sym__0__1928421907625115531 << " | " << arrToString(sym__0__6254739572024865371) << " | " << arrToString(sym__0___45_5257913184343802104) << " | " << arrToString(sym__0___45_1520289822717538230) << " | " << arrToString(sym__0___45_8628415396103686184) << " | " << arrToString(sym__0__2109492732871942412) << " | " << arrToString(sym__0__5385658520341277382) << " | " << sym__0__3660583386293997969 << " | " << arrToString(sym__0___45_3013711856665730696);
    return o.str();
  }
  bool operator <(const Record35& otherRec) const{
    return (otherRec.sym__0___45_531840894949671910 < sym__0___45_531840894949671910 && (otherRec.sym__0___45_7594568260455252811 < sym__0___45_7594568260455252811 && (otherRec.sym__0___45_4224396157642132841 < sym__0___45_4224396157642132841 && (otherRec.sym__0___45_5121813103072643223 < sym__0___45_5121813103072643223 && (otherRec.sym__0__3627274254091843899 < sym__0__3627274254091843899 && (otherRec.sym__0___45_519289659968682554 < sym__0___45_519289659968682554 && (otherRec.sym__0__5824930074457018933 < sym__0__5824930074457018933 && (otherRec.sym__0__8300140134385342025 < sym__0__8300140134385342025 && (otherRec.sym__0___45_4363113810210080717 < sym__0___45_4363113810210080717 && (otherRec.sym__0___45_2180998471546424549 < sym__0___45_2180998471546424549 && (otherRec.sym__0___45_591129746765413155 < sym__0___45_591129746765413155 && (otherRec.sym__0___45_4416720451126861422 < sym__0___45_4416720451126861422 && (otherRec.sym__0___45_2100514126469912481 < sym__0___45_2100514126469912481 && (otherRec.sym__0__3750234095707159570 < sym__0__3750234095707159570 && (otherRec.sym__0___45_7960421939889289288 < sym__0___45_7960421939889289288 && (otherRec.sym__0___45_8655770192480484197 < sym__0___45_8655770192480484197 && (otherRec.sym__0__2072590499357086155 < sym__0__2072590499357086155 && (otherRec.sym__0__8268830136148095561 < sym__0__8268830136148095561 && (otherRec.sym__0___45_678210870537240385 < sym__0___45_678210870537240385 && (otherRec.sym__0__6112270341236569873 < sym__0__6112270341236569873 && (otherRec.sym__0__8598037934431251909 < sym__0__8598037934431251909 && (otherRec.sym__0__5291402561130019774 < sym__0__5291402561130019774 && (otherRec.sym__0___45_7851524774395097220 < sym__0___45_7851524774395097220 && (otherRec.sym__0__1291698872846441412 < sym__0__1291698872846441412 && (otherRec.sym__0__8986418791032324453 < sym__0__8986418791032324453 && (otherRec.sym__0__2167360253537002837 < sym__0__2167360253537002837 && (otherRec.sym__0__8141858625439628603 < sym__0__8141858625439628603 && (otherRec.sym__0___45_7931886843684217772 < sym__0___45_7931886843684217772 && (otherRec.sym__0___45_2549139954849286782 < sym__0___45_2549139954849286782 && (otherRec.sym__0___45_1691445119060855580 < sym__0___45_1691445119060855580 && (otherRec.sym__0__7474331622035256461 < sym__0__7474331622035256461 && (otherRec.sym__0___45_667953329600979866 < sym__0___45_667953329600979866 && (otherRec.sym__0___45_3035057609626888019 < sym__0___45_3035057609626888019 && (otherRec.sym__0___45_8476599677752189563 < sym__0___45_8476599677752189563 && (otherRec.sym__0___45_6389391189957387661 < sym__0___45_6389391189957387661 && (otherRec.sym__0___45_6486695610681891724 < sym__0___45_6486695610681891724 && (otherRec.sym__0__4796994603556539905 < sym__0__4796994603556539905 && (otherRec.sym__0___45_6306286879286504951 < sym__0___45_6306286879286504951 && (otherRec.sym__0___45_922796240211516024 < sym__0___45_922796240211516024 && (otherRec.sym__0__2810436566368623008 < sym__0__2810436566368623008 && (otherRec.sym__0__7272995257348976042 < sym__0__7272995257348976042 && (otherRec.sym__0__1928421907625115531 < sym__0__1928421907625115531 && (otherRec.sym__0__6254739572024865371 < sym__0__6254739572024865371 && (otherRec.sym__0___45_5257913184343802104 < sym__0___45_5257913184343802104 && (otherRec.sym__0___45_1520289822717538230 < sym__0___45_1520289822717538230 && (otherRec.sym__0___45_8628415396103686184 < sym__0___45_8628415396103686184 && (otherRec.sym__0__2109492732871942412 < sym__0__2109492732871942412 && (otherRec.sym__0__5385658520341277382 < sym__0__5385658520341277382 && (otherRec.sym__0__3660583386293997969 < sym__0__3660583386293997969 && otherRec.sym__0___45_3013711856665730696 < sym__0___45_3013711856665730696)))))))))))))))))))))))))))))))))))))))))))))))));
  }
  bool operator ==(const Record35& otherRec) const{
    return (otherRec.sym__0___45_531840894949671910 == sym__0___45_531840894949671910 && (otherRec.sym__0___45_7594568260455252811 == sym__0___45_7594568260455252811 && (otherRec.sym__0___45_4224396157642132841 == sym__0___45_4224396157642132841 && (otherRec.sym__0___45_5121813103072643223 == sym__0___45_5121813103072643223 && (otherRec.sym__0__3627274254091843899 == sym__0__3627274254091843899 && (otherRec.sym__0___45_519289659968682554 == sym__0___45_519289659968682554 && (otherRec.sym__0__5824930074457018933 == sym__0__5824930074457018933 && (otherRec.sym__0__8300140134385342025 == sym__0__8300140134385342025 && (otherRec.sym__0___45_4363113810210080717 == sym__0___45_4363113810210080717 && (otherRec.sym__0___45_2180998471546424549 == sym__0___45_2180998471546424549 && (otherRec.sym__0___45_591129746765413155 == sym__0___45_591129746765413155 && (otherRec.sym__0___45_4416720451126861422 == sym__0___45_4416720451126861422 && (otherRec.sym__0___45_2100514126469912481 == sym__0___45_2100514126469912481 && (otherRec.sym__0__3750234095707159570 == sym__0__3750234095707159570 && (otherRec.sym__0___45_7960421939889289288 == sym__0___45_7960421939889289288 && (otherRec.sym__0___45_8655770192480484197 == sym__0___45_8655770192480484197 && (otherRec.sym__0__2072590499357086155 == sym__0__2072590499357086155 && (otherRec.sym__0__8268830136148095561 == sym__0__8268830136148095561 && (otherRec.sym__0___45_678210870537240385 == sym__0___45_678210870537240385 && (otherRec.sym__0__6112270341236569873 == sym__0__6112270341236569873 && (otherRec.sym__0__8598037934431251909 == sym__0__8598037934431251909 && (otherRec.sym__0__5291402561130019774 == sym__0__5291402561130019774 && (otherRec.sym__0___45_7851524774395097220 == sym__0___45_7851524774395097220 && (otherRec.sym__0__1291698872846441412 == sym__0__1291698872846441412 && (otherRec.sym__0__8986418791032324453 == sym__0__8986418791032324453 && (otherRec.sym__0__2167360253537002837 == sym__0__2167360253537002837 && (otherRec.sym__0__8141858625439628603 == sym__0__8141858625439628603 && (otherRec.sym__0___45_7931886843684217772 == sym__0___45_7931886843684217772 && (otherRec.sym__0___45_2549139954849286782 == sym__0___45_2549139954849286782 && (otherRec.sym__0___45_1691445119060855580 == sym__0___45_1691445119060855580 && (otherRec.sym__0__7474331622035256461 == sym__0__7474331622035256461 && (otherRec.sym__0___45_667953329600979866 == sym__0___45_667953329600979866 && (otherRec.sym__0___45_3035057609626888019 == sym__0___45_3035057609626888019 && (otherRec.sym__0___45_8476599677752189563 == sym__0___45_8476599677752189563 && (otherRec.sym__0___45_6389391189957387661 == sym__0___45_6389391189957387661 && (otherRec.sym__0___45_6486695610681891724 == sym__0___45_6486695610681891724 && (otherRec.sym__0__4796994603556539905 == sym__0__4796994603556539905 && (otherRec.sym__0___45_6306286879286504951 == sym__0___45_6306286879286504951 && (otherRec.sym__0___45_922796240211516024 == sym__0___45_922796240211516024 && (otherRec.sym__0__2810436566368623008 == sym__0__2810436566368623008 && (otherRec.sym__0__7272995257348976042 == sym__0__7272995257348976042 && (otherRec.sym__0__1928421907625115531 == sym__0__1928421907625115531 && (otherRec.sym__0__6254739572024865371 == sym__0__6254739572024865371 && (otherRec.sym__0___45_5257913184343802104 == sym__0___45_5257913184343802104 && (otherRec.sym__0___45_1520289822717538230 == sym__0___45_1520289822717538230 && (otherRec.sym__0___45_8628415396103686184 == sym__0___45_8628415396103686184 && (otherRec.sym__0__2109492732871942412 == sym__0__2109492732871942412 && (otherRec.sym__0__5385658520341277382 == sym__0__5385658520341277382 && (otherRec.sym__0__3660583386293997969 == sym__0__3660583386293997969 && otherRec.sym__0___45_3013711856665730696 == sym__0___45_3013711856665730696)))))))))))))))))))))))))))))))))))))))))))))))));
  }
  bool operator !=(const Record35& otherRec) const{
    return (otherRec.sym__0___45_531840894949671910 != sym__0___45_531840894949671910 || (otherRec.sym__0___45_7594568260455252811 != sym__0___45_7594568260455252811 || (otherRec.sym__0___45_4224396157642132841 != sym__0___45_4224396157642132841 || (otherRec.sym__0___45_5121813103072643223 != sym__0___45_5121813103072643223 || (otherRec.sym__0__3627274254091843899 != sym__0__3627274254091843899 || (otherRec.sym__0___45_519289659968682554 != sym__0___45_519289659968682554 || (otherRec.sym__0__5824930074457018933 != sym__0__5824930074457018933 || (otherRec.sym__0__8300140134385342025 != sym__0__8300140134385342025 || (otherRec.sym__0___45_4363113810210080717 != sym__0___45_4363113810210080717 || (otherRec.sym__0___45_2180998471546424549 != sym__0___45_2180998471546424549 || (otherRec.sym__0___45_591129746765413155 != sym__0___45_591129746765413155 || (otherRec.sym__0___45_4416720451126861422 != sym__0___45_4416720451126861422 || (otherRec.sym__0___45_2100514126469912481 != sym__0___45_2100514126469912481 || (otherRec.sym__0__3750234095707159570 != sym__0__3750234095707159570 || (otherRec.sym__0___45_7960421939889289288 != sym__0___45_7960421939889289288 || (otherRec.sym__0___45_8655770192480484197 != sym__0___45_8655770192480484197 || (otherRec.sym__0__2072590499357086155 != sym__0__2072590499357086155 || (otherRec.sym__0__8268830136148095561 != sym__0__8268830136148095561 || (otherRec.sym__0___45_678210870537240385 != sym__0___45_678210870537240385 || (otherRec.sym__0__6112270341236569873 != sym__0__6112270341236569873 || (otherRec.sym__0__8598037934431251909 != sym__0__8598037934431251909 || (otherRec.sym__0__5291402561130019774 != sym__0__5291402561130019774 || (otherRec.sym__0___45_7851524774395097220 != sym__0___45_7851524774395097220 || (otherRec.sym__0__1291698872846441412 != sym__0__1291698872846441412 || (otherRec.sym__0__8986418791032324453 != sym__0__8986418791032324453 || (otherRec.sym__0__2167360253537002837 != sym__0__2167360253537002837 || (otherRec.sym__0__8141858625439628603 != sym__0__8141858625439628603 || (otherRec.sym__0___45_7931886843684217772 != sym__0___45_7931886843684217772 || (otherRec.sym__0___45_2549139954849286782 != sym__0___45_2549139954849286782 || (otherRec.sym__0___45_1691445119060855580 != sym__0___45_1691445119060855580 || (otherRec.sym__0__7474331622035256461 != sym__0__7474331622035256461 || (otherRec.sym__0___45_667953329600979866 != sym__0___45_667953329600979866 || (otherRec.sym__0___45_3035057609626888019 != sym__0___45_3035057609626888019 || (otherRec.sym__0___45_8476599677752189563 != sym__0___45_8476599677752189563 || (otherRec.sym__0___45_6389391189957387661 != sym__0___45_6389391189957387661 || (otherRec.sym__0___45_6486695610681891724 != sym__0___45_6486695610681891724 || (otherRec.sym__0__4796994603556539905 != sym__0__4796994603556539905 || (otherRec.sym__0___45_6306286879286504951 != sym__0___45_6306286879286504951 || (otherRec.sym__0___45_922796240211516024 != sym__0___45_922796240211516024 || (otherRec.sym__0__2810436566368623008 != sym__0__2810436566368623008 || (otherRec.sym__0__7272995257348976042 != sym__0__7272995257348976042 || (otherRec.sym__0__1928421907625115531 != sym__0__1928421907625115531 || (otherRec.sym__0__6254739572024865371 != sym__0__6254739572024865371 || (otherRec.sym__0___45_5257913184343802104 != sym__0___45_5257913184343802104 || (otherRec.sym__0___45_1520289822717538230 != sym__0___45_1520289822717538230 || (otherRec.sym__0___45_8628415396103686184 != sym__0___45_8628415396103686184 || (otherRec.sym__0__2109492732871942412 != sym__0__2109492732871942412 || (otherRec.sym__0__5385658520341277382 != sym__0__5385658520341277382 || (otherRec.sym__0__3660583386293997969 != sym__0__3660583386293997969 || otherRec.sym__0___45_3013711856665730696 != sym__0___45_3013711856665730696)))))))))))))))))))))))))))))))))))))))))))))))));
  }
  unsigned sym__0___45_531840894949671910;
  fluidb_string<25> sym__0___45_7594568260455252811;
  fluidb_string<40> sym__0___45_4224396157642132841;
  fluidb_string<16> sym__0___45_5121813103072643223;
  fluidb_string<16> sym__0__3627274254091843899;
  fluidb_string<13> sym__0___45_519289659968682554;
  fluidb_string<15> sym__0__5824930074457018933;
  unsigned sym__0__8300140134385342025;
  int sym__0___45_4363113810210080717;
  unsigned sym__0___45_2180998471546424549;
  unsigned sym__0___45_591129746765413155;
  unsigned sym__0___45_4416720451126861422;
  unsigned sym__0___45_2100514126469912481;
  fluidb_string<21> sym__0__3750234095707159570;
  unsigned sym__0___45_7960421939889289288;
  fluidb_string<10> sym__0___45_8655770192480484197;
  unsigned sym__0__2072590499357086155;
  double sym__0__8268830136148095561;
  unsigned sym__0___45_678210870537240385;
  double sym__0__6112270341236569873;
  unsigned sym__0__8598037934431251909;
  unsigned sym__0__5291402561130019774;
  double sym__0___45_7851524774395097220;
  fluidb_string<13> sym__0__1291698872846441412;
  unsigned sym__0__8986418791032324453;
  fluidb_string<18> sym__0__2167360253537002837;
  fluidb_string<9> sym__0__8141858625439628603;
  fluidb_string<9> sym__0___45_7931886843684217772;
  unsigned sym__0___45_2549139954849286782;
  unsigned sym__0___45_1691445119060855580;
  fluidb_string<7> sym__0__7474331622035256461;
  unsigned sym__0___45_667953329600979866;
  unsigned sym__0___45_3035057609626888019;
  unsigned sym__0___45_8476599677752189563;
  unsigned sym__0___45_6389391189957387661;
  unsigned sym__0___45_6486695610681891724;
  fluidb_string<15> sym__0__4796994603556539905;
  fluidb_string<2> sym__0___45_6306286879286504951;
  fluidb_string<2> sym__0___45_922796240211516024;
  fluidb_string<2> sym__0__2810436566368623008;
  fluidb_string<2> sym__0__7272995257348976042;
  unsigned sym__0__1928421907625115531;
  fluidb_string<55> sym__0__6254739572024865371;
  fluidb_string<25> sym__0___45_5257913184343802104;
  fluidb_string<7> sym__0___45_1520289822717538230;
  fluidb_string<10> sym__0___45_8628415396103686184;
  fluidb_string<11> sym__0__2109492732871942412;
  fluidb_string<25> sym__0__5385658520341277382;
  unsigned sym__0__3660583386293997969;
  fluidb_string<10> sym__0___45_3013711856665730696;
 private:
};


class Record14 {
 public:
  Record14(unsigned __sortElem0) : sortElem0(__sortElem0)
  {
  }
  Record14() 
  {
  }
  std::string show() const{
    std::stringstream o;
    o << sortElem0;
    return o.str();
  }
  bool operator <(const Record14& otherRec) const{
    return otherRec.sortElem0 < sortElem0;
  }
  bool operator ==(const Record14& otherRec) const{
    return otherRec.sortElem0 == sortElem0;
  }
  bool operator !=(const Record14& otherRec) const{
    return otherRec.sortElem0 != sortElem0;
  }
  unsigned sortElem0;
 private:
};


class Record24 {
 public:
  Record24(unsigned __sym__0___45_6023382929443007574, fluidb_string<25> __sym__0__3757555673004122949, fluidb_string<40> __sym__0__1932846229845525767, fluidb_string<16> __sym__0__4059433216492140793, fluidb_string<16> __sym__0___45_6828435464829114933, fluidb_string<13> __sym__0___45_8594673557260853450, fluidb_string<15> __sym__0__5584077748228284101, unsigned __sym__0___45_6850792598014803495, int __sym__0__126286655963242787, unsigned __sym__0__7152997497642012715, unsigned __sym__0__8152468447104541133, unsigned __sym__0___45_2162238796830376958, unsigned __sym__0__6201860754099051215, fluidb_string<21> __sym__0___45_5824526894106372990, unsigned __sym__0__4416113698023424168, fluidb_string<10> __sym__0___45_8427015020456163925, unsigned __sym__0__7002917659038590267, double __sym__0___45_6078771451505033767, unsigned __sym__0___45_5377847250793394897, double __sym__0__3980922738646169089, unsigned __sym__0___45_7099380938835867851, unsigned __sym__0__3234079111686344366, double __sym__0___45_7202603516002620404, fluidb_string<13> __sym__0__3246987919693648052, unsigned __sym__0___45_8983388521167719339, fluidb_string<18> __sym__0__7124422447978342501, fluidb_string<9> __sym__0___45_2999373940918343221, fluidb_string<9> __sym__0__9137930316880372580, unsigned __sym__0___45_6042632947114846446, unsigned __sym__0___45_6531105215362525228, fluidb_string<7> __sym__0___45_8818609540528204259, unsigned __sym__0___45_5244059388672011050, unsigned __sym__0___45_5105300302502028867, unsigned __sym__0___45_7093949592046849419, unsigned __sym__0___45_6761595971726391581, unsigned __sym__0___45_8542939857596337916, fluidb_string<15> __sym__0___45_7160886385939247343, fluidb_string<2> __sym__0__5745707657729186073, fluidb_string<2> __sym__0__3650682066716895000, fluidb_string<2> __sym__0__1619161068731802128, fluidb_string<2> __sym__0___45_3903279639330610662, unsigned __sym__0__8482931350020393083, fluidb_string<55> __sym__0___45_1661804984053491733, fluidb_string<25> __sym__0__5835224130676269208, fluidb_string<7> __sym__0__603002359744084410, fluidb_string<10> __sym__0__7152062580423916744, fluidb_string<11> __sym__0___45_6711767232839951748, fluidb_string<25> __sym__0__5249709580748201526, unsigned __sym__0___45_196550042660278143, fluidb_string<10> __sym__0__7818803168203943400) : sym__0___45_6023382929443007574(__sym__0___45_6023382929443007574), sym__0__3757555673004122949(__sym__0__3757555673004122949), sym__0__1932846229845525767(__sym__0__1932846229845525767), sym__0__4059433216492140793(__sym__0__4059433216492140793), sym__0___45_6828435464829114933(__sym__0___45_6828435464829114933), sym__0___45_8594673557260853450(__sym__0___45_8594673557260853450), sym__0__5584077748228284101(__sym__0__5584077748228284101), sym__0___45_6850792598014803495(__sym__0___45_6850792598014803495), sym__0__126286655963242787(__sym__0__126286655963242787), sym__0__7152997497642012715(__sym__0__7152997497642012715), sym__0__8152468447104541133(__sym__0__8152468447104541133), sym__0___45_2162238796830376958(__sym__0___45_2162238796830376958), sym__0__6201860754099051215(__sym__0__6201860754099051215), sym__0___45_5824526894106372990(__sym__0___45_5824526894106372990), sym__0__4416113698023424168(__sym__0__4416113698023424168), sym__0___45_8427015020456163925(__sym__0___45_8427015020456163925), sym__0__7002917659038590267(__sym__0__7002917659038590267), sym__0___45_6078771451505033767(__sym__0___45_6078771451505033767), sym__0___45_5377847250793394897(__sym__0___45_5377847250793394897), sym__0__3980922738646169089(__sym__0__3980922738646169089), sym__0___45_7099380938835867851(__sym__0___45_7099380938835867851), sym__0__3234079111686344366(__sym__0__3234079111686344366), sym__0___45_7202603516002620404(__sym__0___45_7202603516002620404), sym__0__3246987919693648052(__sym__0__3246987919693648052), sym__0___45_8983388521167719339(__sym__0___45_8983388521167719339), sym__0__7124422447978342501(__sym__0__7124422447978342501), sym__0___45_2999373940918343221(__sym__0___45_2999373940918343221), sym__0__9137930316880372580(__sym__0__9137930316880372580), sym__0___45_6042632947114846446(__sym__0___45_6042632947114846446), sym__0___45_6531105215362525228(__sym__0___45_6531105215362525228), sym__0___45_8818609540528204259(__sym__0___45_8818609540528204259), sym__0___45_5244059388672011050(__sym__0___45_5244059388672011050), sym__0___45_5105300302502028867(__sym__0___45_5105300302502028867), sym__0___45_7093949592046849419(__sym__0___45_7093949592046849419), sym__0___45_6761595971726391581(__sym__0___45_6761595971726391581), sym__0___45_8542939857596337916(__sym__0___45_8542939857596337916), sym__0___45_7160886385939247343(__sym__0___45_7160886385939247343), sym__0__5745707657729186073(__sym__0__5745707657729186073), sym__0__3650682066716895000(__sym__0__3650682066716895000), sym__0__1619161068731802128(__sym__0__1619161068731802128), sym__0___45_3903279639330610662(__sym__0___45_3903279639330610662), sym__0__8482931350020393083(__sym__0__8482931350020393083), sym__0___45_1661804984053491733(__sym__0___45_1661804984053491733), sym__0__5835224130676269208(__sym__0__5835224130676269208), sym__0__603002359744084410(__sym__0__603002359744084410), sym__0__7152062580423916744(__sym__0__7152062580423916744), sym__0___45_6711767232839951748(__sym__0___45_6711767232839951748), sym__0__5249709580748201526(__sym__0__5249709580748201526), sym__0___45_196550042660278143(__sym__0___45_196550042660278143), sym__0__7818803168203943400(__sym__0__7818803168203943400)
  {
  }
  Record24() 
  {
  }
  std::string show() const{
    std::stringstream o;
    o << sym__0___45_6023382929443007574 << " | " << arrToString(sym__0__3757555673004122949) << " | " << arrToString(sym__0__1932846229845525767) << " | " << arrToString(sym__0__4059433216492140793) << " | " << arrToString(sym__0___45_6828435464829114933) << " | " << arrToString(sym__0___45_8594673557260853450) << " | " << arrToString(sym__0__5584077748228284101) << " | " << sym__0___45_6850792598014803495 << " | " << sym__0__126286655963242787 << " | " << sym__0__7152997497642012715 << " | " << sym__0__8152468447104541133 << " | " << sym__0___45_2162238796830376958 << " | " << sym__0__6201860754099051215 << " | " << arrToString(sym__0___45_5824526894106372990) << " | " << sym__0__4416113698023424168 << " | " << arrToString(sym__0___45_8427015020456163925) << " | " << sym__0__7002917659038590267 << " | " << sym__0___45_6078771451505033767 << " | " << sym__0___45_5377847250793394897 << " | " << sym__0__3980922738646169089 << " | " << sym__0___45_7099380938835867851 << " | " << sym__0__3234079111686344366 << " | " << sym__0___45_7202603516002620404 << " | " << arrToString(sym__0__3246987919693648052) << " | " << sym__0___45_8983388521167719339 << " | " << arrToString(sym__0__7124422447978342501) << " | " << arrToString(sym__0___45_2999373940918343221) << " | " << arrToString(sym__0__9137930316880372580) << " | " << sym__0___45_6042632947114846446 << " | " << sym__0___45_6531105215362525228 << " | " << arrToString(sym__0___45_8818609540528204259) << " | " << sym__0___45_5244059388672011050 << " | " << sym__0___45_5105300302502028867 << " | " << sym__0___45_7093949592046849419 << " | " << sym__0___45_6761595971726391581 << " | " << sym__0___45_8542939857596337916 << " | " << arrToString(sym__0___45_7160886385939247343) << " | " << arrToString(sym__0__5745707657729186073) << " | " << arrToString(sym__0__3650682066716895000) << " | " << arrToString(sym__0__1619161068731802128) << " | " << arrToString(sym__0___45_3903279639330610662) << " | " << sym__0__8482931350020393083 << " | " << arrToString(sym__0___45_1661804984053491733) << " | " << arrToString(sym__0__5835224130676269208) << " | " << arrToString(sym__0__603002359744084410) << " | " << arrToString(sym__0__7152062580423916744) << " | " << arrToString(sym__0___45_6711767232839951748) << " | " << arrToString(sym__0__5249709580748201526) << " | " << sym__0___45_196550042660278143 << " | " << arrToString(sym__0__7818803168203943400);
    return o.str();
  }
  bool operator <(const Record24& otherRec) const{
    return (otherRec.sym__0___45_6023382929443007574 < sym__0___45_6023382929443007574 && (otherRec.sym__0__3757555673004122949 < sym__0__3757555673004122949 && (otherRec.sym__0__1932846229845525767 < sym__0__1932846229845525767 && (otherRec.sym__0__4059433216492140793 < sym__0__4059433216492140793 && (otherRec.sym__0___45_6828435464829114933 < sym__0___45_6828435464829114933 && (otherRec.sym__0___45_8594673557260853450 < sym__0___45_8594673557260853450 && (otherRec.sym__0__5584077748228284101 < sym__0__5584077748228284101 && (otherRec.sym__0___45_6850792598014803495 < sym__0___45_6850792598014803495 && (otherRec.sym__0__126286655963242787 < sym__0__126286655963242787 && (otherRec.sym__0__7152997497642012715 < sym__0__7152997497642012715 && (otherRec.sym__0__8152468447104541133 < sym__0__8152468447104541133 && (otherRec.sym__0___45_2162238796830376958 < sym__0___45_2162238796830376958 && (otherRec.sym__0__6201860754099051215 < sym__0__6201860754099051215 && (otherRec.sym__0___45_5824526894106372990 < sym__0___45_5824526894106372990 && (otherRec.sym__0__4416113698023424168 < sym__0__4416113698023424168 && (otherRec.sym__0___45_8427015020456163925 < sym__0___45_8427015020456163925 && (otherRec.sym__0__7002917659038590267 < sym__0__7002917659038590267 && (otherRec.sym__0___45_6078771451505033767 < sym__0___45_6078771451505033767 && (otherRec.sym__0___45_5377847250793394897 < sym__0___45_5377847250793394897 && (otherRec.sym__0__3980922738646169089 < sym__0__3980922738646169089 && (otherRec.sym__0___45_7099380938835867851 < sym__0___45_7099380938835867851 && (otherRec.sym__0__3234079111686344366 < sym__0__3234079111686344366 && (otherRec.sym__0___45_7202603516002620404 < sym__0___45_7202603516002620404 && (otherRec.sym__0__3246987919693648052 < sym__0__3246987919693648052 && (otherRec.sym__0___45_8983388521167719339 < sym__0___45_8983388521167719339 && (otherRec.sym__0__7124422447978342501 < sym__0__7124422447978342501 && (otherRec.sym__0___45_2999373940918343221 < sym__0___45_2999373940918343221 && (otherRec.sym__0__9137930316880372580 < sym__0__9137930316880372580 && (otherRec.sym__0___45_6042632947114846446 < sym__0___45_6042632947114846446 && (otherRec.sym__0___45_6531105215362525228 < sym__0___45_6531105215362525228 && (otherRec.sym__0___45_8818609540528204259 < sym__0___45_8818609540528204259 && (otherRec.sym__0___45_5244059388672011050 < sym__0___45_5244059388672011050 && (otherRec.sym__0___45_5105300302502028867 < sym__0___45_5105300302502028867 && (otherRec.sym__0___45_7093949592046849419 < sym__0___45_7093949592046849419 && (otherRec.sym__0___45_6761595971726391581 < sym__0___45_6761595971726391581 && (otherRec.sym__0___45_8542939857596337916 < sym__0___45_8542939857596337916 && (otherRec.sym__0___45_7160886385939247343 < sym__0___45_7160886385939247343 && (otherRec.sym__0__5745707657729186073 < sym__0__5745707657729186073 && (otherRec.sym__0__3650682066716895000 < sym__0__3650682066716895000 && (otherRec.sym__0__1619161068731802128 < sym__0__1619161068731802128 && (otherRec.sym__0___45_3903279639330610662 < sym__0___45_3903279639330610662 && (otherRec.sym__0__8482931350020393083 < sym__0__8482931350020393083 && (otherRec.sym__0___45_1661804984053491733 < sym__0___45_1661804984053491733 && (otherRec.sym__0__5835224130676269208 < sym__0__5835224130676269208 && (otherRec.sym__0__603002359744084410 < sym__0__603002359744084410 && (otherRec.sym__0__7152062580423916744 < sym__0__7152062580423916744 && (otherRec.sym__0___45_6711767232839951748 < sym__0___45_6711767232839951748 && (otherRec.sym__0__5249709580748201526 < sym__0__5249709580748201526 && (otherRec.sym__0___45_196550042660278143 < sym__0___45_196550042660278143 && otherRec.sym__0__7818803168203943400 < sym__0__7818803168203943400)))))))))))))))))))))))))))))))))))))))))))))))));
  }
  bool operator ==(const Record24& otherRec) const{
    return (otherRec.sym__0___45_6023382929443007574 == sym__0___45_6023382929443007574 && (otherRec.sym__0__3757555673004122949 == sym__0__3757555673004122949 && (otherRec.sym__0__1932846229845525767 == sym__0__1932846229845525767 && (otherRec.sym__0__4059433216492140793 == sym__0__4059433216492140793 && (otherRec.sym__0___45_6828435464829114933 == sym__0___45_6828435464829114933 && (otherRec.sym__0___45_8594673557260853450 == sym__0___45_8594673557260853450 && (otherRec.sym__0__5584077748228284101 == sym__0__5584077748228284101 && (otherRec.sym__0___45_6850792598014803495 == sym__0___45_6850792598014803495 && (otherRec.sym__0__126286655963242787 == sym__0__126286655963242787 && (otherRec.sym__0__7152997497642012715 == sym__0__7152997497642012715 && (otherRec.sym__0__8152468447104541133 == sym__0__8152468447104541133 && (otherRec.sym__0___45_2162238796830376958 == sym__0___45_2162238796830376958 && (otherRec.sym__0__6201860754099051215 == sym__0__6201860754099051215 && (otherRec.sym__0___45_5824526894106372990 == sym__0___45_5824526894106372990 && (otherRec.sym__0__4416113698023424168 == sym__0__4416113698023424168 && (otherRec.sym__0___45_8427015020456163925 == sym__0___45_8427015020456163925 && (otherRec.sym__0__7002917659038590267 == sym__0__7002917659038590267 && (otherRec.sym__0___45_6078771451505033767 == sym__0___45_6078771451505033767 && (otherRec.sym__0___45_5377847250793394897 == sym__0___45_5377847250793394897 && (otherRec.sym__0__3980922738646169089 == sym__0__3980922738646169089 && (otherRec.sym__0___45_7099380938835867851 == sym__0___45_7099380938835867851 && (otherRec.sym__0__3234079111686344366 == sym__0__3234079111686344366 && (otherRec.sym__0___45_7202603516002620404 == sym__0___45_7202603516002620404 && (otherRec.sym__0__3246987919693648052 == sym__0__3246987919693648052 && (otherRec.sym__0___45_8983388521167719339 == sym__0___45_8983388521167719339 && (otherRec.sym__0__7124422447978342501 == sym__0__7124422447978342501 && (otherRec.sym__0___45_2999373940918343221 == sym__0___45_2999373940918343221 && (otherRec.sym__0__9137930316880372580 == sym__0__9137930316880372580 && (otherRec.sym__0___45_6042632947114846446 == sym__0___45_6042632947114846446 && (otherRec.sym__0___45_6531105215362525228 == sym__0___45_6531105215362525228 && (otherRec.sym__0___45_8818609540528204259 == sym__0___45_8818609540528204259 && (otherRec.sym__0___45_5244059388672011050 == sym__0___45_5244059388672011050 && (otherRec.sym__0___45_5105300302502028867 == sym__0___45_5105300302502028867 && (otherRec.sym__0___45_7093949592046849419 == sym__0___45_7093949592046849419 && (otherRec.sym__0___45_6761595971726391581 == sym__0___45_6761595971726391581 && (otherRec.sym__0___45_8542939857596337916 == sym__0___45_8542939857596337916 && (otherRec.sym__0___45_7160886385939247343 == sym__0___45_7160886385939247343 && (otherRec.sym__0__5745707657729186073 == sym__0__5745707657729186073 && (otherRec.sym__0__3650682066716895000 == sym__0__3650682066716895000 && (otherRec.sym__0__1619161068731802128 == sym__0__1619161068731802128 && (otherRec.sym__0___45_3903279639330610662 == sym__0___45_3903279639330610662 && (otherRec.sym__0__8482931350020393083 == sym__0__8482931350020393083 && (otherRec.sym__0___45_1661804984053491733 == sym__0___45_1661804984053491733 && (otherRec.sym__0__5835224130676269208 == sym__0__5835224130676269208 && (otherRec.sym__0__603002359744084410 == sym__0__603002359744084410 && (otherRec.sym__0__7152062580423916744 == sym__0__7152062580423916744 && (otherRec.sym__0___45_6711767232839951748 == sym__0___45_6711767232839951748 && (otherRec.sym__0__5249709580748201526 == sym__0__5249709580748201526 && (otherRec.sym__0___45_196550042660278143 == sym__0___45_196550042660278143 && otherRec.sym__0__7818803168203943400 == sym__0__7818803168203943400)))))))))))))))))))))))))))))))))))))))))))))))));
  }
  bool operator !=(const Record24& otherRec) const{
    return (otherRec.sym__0___45_6023382929443007574 != sym__0___45_6023382929443007574 || (otherRec.sym__0__3757555673004122949 != sym__0__3757555673004122949 || (otherRec.sym__0__1932846229845525767 != sym__0__1932846229845525767 || (otherRec.sym__0__4059433216492140793 != sym__0__4059433216492140793 || (otherRec.sym__0___45_6828435464829114933 != sym__0___45_6828435464829114933 || (otherRec.sym__0___45_8594673557260853450 != sym__0___45_8594673557260853450 || (otherRec.sym__0__5584077748228284101 != sym__0__5584077748228284101 || (otherRec.sym__0___45_6850792598014803495 != sym__0___45_6850792598014803495 || (otherRec.sym__0__126286655963242787 != sym__0__126286655963242787 || (otherRec.sym__0__7152997497642012715 != sym__0__7152997497642012715 || (otherRec.sym__0__8152468447104541133 != sym__0__8152468447104541133 || (otherRec.sym__0___45_2162238796830376958 != sym__0___45_2162238796830376958 || (otherRec.sym__0__6201860754099051215 != sym__0__6201860754099051215 || (otherRec.sym__0___45_5824526894106372990 != sym__0___45_5824526894106372990 || (otherRec.sym__0__4416113698023424168 != sym__0__4416113698023424168 || (otherRec.sym__0___45_8427015020456163925 != sym__0___45_8427015020456163925 || (otherRec.sym__0__7002917659038590267 != sym__0__7002917659038590267 || (otherRec.sym__0___45_6078771451505033767 != sym__0___45_6078771451505033767 || (otherRec.sym__0___45_5377847250793394897 != sym__0___45_5377847250793394897 || (otherRec.sym__0__3980922738646169089 != sym__0__3980922738646169089 || (otherRec.sym__0___45_7099380938835867851 != sym__0___45_7099380938835867851 || (otherRec.sym__0__3234079111686344366 != sym__0__3234079111686344366 || (otherRec.sym__0___45_7202603516002620404 != sym__0___45_7202603516002620404 || (otherRec.sym__0__3246987919693648052 != sym__0__3246987919693648052 || (otherRec.sym__0___45_8983388521167719339 != sym__0___45_8983388521167719339 || (otherRec.sym__0__7124422447978342501 != sym__0__7124422447978342501 || (otherRec.sym__0___45_2999373940918343221 != sym__0___45_2999373940918343221 || (otherRec.sym__0__9137930316880372580 != sym__0__9137930316880372580 || (otherRec.sym__0___45_6042632947114846446 != sym__0___45_6042632947114846446 || (otherRec.sym__0___45_6531105215362525228 != sym__0___45_6531105215362525228 || (otherRec.sym__0___45_8818609540528204259 != sym__0___45_8818609540528204259 || (otherRec.sym__0___45_5244059388672011050 != sym__0___45_5244059388672011050 || (otherRec.sym__0___45_5105300302502028867 != sym__0___45_5105300302502028867 || (otherRec.sym__0___45_7093949592046849419 != sym__0___45_7093949592046849419 || (otherRec.sym__0___45_6761595971726391581 != sym__0___45_6761595971726391581 || (otherRec.sym__0___45_8542939857596337916 != sym__0___45_8542939857596337916 || (otherRec.sym__0___45_7160886385939247343 != sym__0___45_7160886385939247343 || (otherRec.sym__0__5745707657729186073 != sym__0__5745707657729186073 || (otherRec.sym__0__3650682066716895000 != sym__0__3650682066716895000 || (otherRec.sym__0__1619161068731802128 != sym__0__1619161068731802128 || (otherRec.sym__0___45_3903279639330610662 != sym__0___45_3903279639330610662 || (otherRec.sym__0__8482931350020393083 != sym__0__8482931350020393083 || (otherRec.sym__0___45_1661804984053491733 != sym__0___45_1661804984053491733 || (otherRec.sym__0__5835224130676269208 != sym__0__5835224130676269208 || (otherRec.sym__0__603002359744084410 != sym__0__603002359744084410 || (otherRec.sym__0__7152062580423916744 != sym__0__7152062580423916744 || (otherRec.sym__0___45_6711767232839951748 != sym__0___45_6711767232839951748 || (otherRec.sym__0__5249709580748201526 != sym__0__5249709580748201526 || (otherRec.sym__0___45_196550042660278143 != sym__0___45_196550042660278143 || otherRec.sym__0__7818803168203943400 != sym__0__7818803168203943400)))))))))))))))))))))))))))))))))))))))))))))))));
  }
  unsigned sym__0___45_6023382929443007574;
  fluidb_string<25> sym__0__3757555673004122949;
  fluidb_string<40> sym__0__1932846229845525767;
  fluidb_string<16> sym__0__4059433216492140793;
  fluidb_string<16> sym__0___45_6828435464829114933;
  fluidb_string<13> sym__0___45_8594673557260853450;
  fluidb_string<15> sym__0__5584077748228284101;
  unsigned sym__0___45_6850792598014803495;
  int sym__0__126286655963242787;
  unsigned sym__0__7152997497642012715;
  unsigned sym__0__8152468447104541133;
  unsigned sym__0___45_2162238796830376958;
  unsigned sym__0__6201860754099051215;
  fluidb_string<21> sym__0___45_5824526894106372990;
  unsigned sym__0__4416113698023424168;
  fluidb_string<10> sym__0___45_8427015020456163925;
  unsigned sym__0__7002917659038590267;
  double sym__0___45_6078771451505033767;
  unsigned sym__0___45_5377847250793394897;
  double sym__0__3980922738646169089;
  unsigned sym__0___45_7099380938835867851;
  unsigned sym__0__3234079111686344366;
  double sym__0___45_7202603516002620404;
  fluidb_string<13> sym__0__3246987919693648052;
  unsigned sym__0___45_8983388521167719339;
  fluidb_string<18> sym__0__7124422447978342501;
  fluidb_string<9> sym__0___45_2999373940918343221;
  fluidb_string<9> sym__0__9137930316880372580;
  unsigned sym__0___45_6042632947114846446;
  unsigned sym__0___45_6531105215362525228;
  fluidb_string<7> sym__0___45_8818609540528204259;
  unsigned sym__0___45_5244059388672011050;
  unsigned sym__0___45_5105300302502028867;
  unsigned sym__0___45_7093949592046849419;
  unsigned sym__0___45_6761595971726391581;
  unsigned sym__0___45_8542939857596337916;
  fluidb_string<15> sym__0___45_7160886385939247343;
  fluidb_string<2> sym__0__5745707657729186073;
  fluidb_string<2> sym__0__3650682066716895000;
  fluidb_string<2> sym__0__1619161068731802128;
  fluidb_string<2> sym__0___45_3903279639330610662;
  unsigned sym__0__8482931350020393083;
  fluidb_string<55> sym__0___45_1661804984053491733;
  fluidb_string<25> sym__0__5835224130676269208;
  fluidb_string<7> sym__0__603002359744084410;
  fluidb_string<10> sym__0__7152062580423916744;
  fluidb_string<11> sym__0___45_6711767232839951748;
  fluidb_string<25> sym__0__5249709580748201526;
  unsigned sym__0___45_196550042660278143;
  fluidb_string<10> sym__0__7818803168203943400;
 private:
};


class Record11 {
 public:
  Record11(unsigned __sym__0__1700144450823265023, fluidb_string<25> __sym__0__642977477037249040, fluidb_string<40> __sym__0___45_4128377972278795822, fluidb_string<16> __sym__0___45_5088627304821687252, fluidb_string<16> __sym__0___45_4948625537612330786, fluidb_string<13> __sym__0___45_9194700948435084701, fluidb_string<15> __sym__0___45_2335925802980201584, unsigned __sym__0__8952961796666569484, int __sym__0___45_764958528451264714, unsigned __sym__0___45_1817156327375219010, unsigned __sym__0___45_2837638767689209768, unsigned __sym__0___45_2981394887932269865, unsigned __sym__0___45_3207638480786881318, fluidb_string<21> __sym__0___45_2706668038305292969, unsigned __sym__0___45_5698288034649371459, fluidb_string<10> __sym__0___45_4860327901106131906, unsigned __sym__0__4990602831923261550, double __sym__0__1941197998689785612, unsigned __sym__0__8920978217467339962, double __sym__0__2290947992840979092, unsigned __sym__0__7968803792053807648, unsigned __sym__0___45_648214588708582661, double __sym__0__5240005983315163865, fluidb_string<13> __sym__0__8676547963641831009, unsigned __sym__0__7098358135655077312, fluidb_string<18> __sym__0___45_3236172823121798352, fluidb_string<9> __sym__0__209296758379513054, fluidb_string<9> __sym__0__990102210371531505, unsigned __sym__0__6731021262741660999, unsigned __sym__0__43383544609224961, fluidb_string<7> __sym__0___45_1451536826369255544, unsigned __sym__0___45_3626731045154418301, unsigned __sym__0__6266038698953764136, unsigned __sym__0___45_3178257250902948896, unsigned __sym__0___45_1707432467122892938, unsigned __sym__0__6803837608073687569, fluidb_string<15> __sym__0__3019318186977723140, fluidb_string<2> __sym__0___45_3182244727465674548, fluidb_string<2> __sym__0__6970778392668530317, fluidb_string<2> __sym__0__1291675427782851845, fluidb_string<2> __sym__0___45_7095393819436573425) : sym__0__1700144450823265023(__sym__0__1700144450823265023), sym__0__642977477037249040(__sym__0__642977477037249040), sym__0___45_4128377972278795822(__sym__0___45_4128377972278795822), sym__0___45_5088627304821687252(__sym__0___45_5088627304821687252), sym__0___45_4948625537612330786(__sym__0___45_4948625537612330786), sym__0___45_9194700948435084701(__sym__0___45_9194700948435084701), sym__0___45_2335925802980201584(__sym__0___45_2335925802980201584), sym__0__8952961796666569484(__sym__0__8952961796666569484), sym__0___45_764958528451264714(__sym__0___45_764958528451264714), sym__0___45_1817156327375219010(__sym__0___45_1817156327375219010), sym__0___45_2837638767689209768(__sym__0___45_2837638767689209768), sym__0___45_2981394887932269865(__sym__0___45_2981394887932269865), sym__0___45_3207638480786881318(__sym__0___45_3207638480786881318), sym__0___45_2706668038305292969(__sym__0___45_2706668038305292969), sym__0___45_5698288034649371459(__sym__0___45_5698288034649371459), sym__0___45_4860327901106131906(__sym__0___45_4860327901106131906), sym__0__4990602831923261550(__sym__0__4990602831923261550), sym__0__1941197998689785612(__sym__0__1941197998689785612), sym__0__8920978217467339962(__sym__0__8920978217467339962), sym__0__2290947992840979092(__sym__0__2290947992840979092), sym__0__7968803792053807648(__sym__0__7968803792053807648), sym__0___45_648214588708582661(__sym__0___45_648214588708582661), sym__0__5240005983315163865(__sym__0__5240005983315163865), sym__0__8676547963641831009(__sym__0__8676547963641831009), sym__0__7098358135655077312(__sym__0__7098358135655077312), sym__0___45_3236172823121798352(__sym__0___45_3236172823121798352), sym__0__209296758379513054(__sym__0__209296758379513054), sym__0__990102210371531505(__sym__0__990102210371531505), sym__0__6731021262741660999(__sym__0__6731021262741660999), sym__0__43383544609224961(__sym__0__43383544609224961), sym__0___45_1451536826369255544(__sym__0___45_1451536826369255544), sym__0___45_3626731045154418301(__sym__0___45_3626731045154418301), sym__0__6266038698953764136(__sym__0__6266038698953764136), sym__0___45_3178257250902948896(__sym__0___45_3178257250902948896), sym__0___45_1707432467122892938(__sym__0___45_1707432467122892938), sym__0__6803837608073687569(__sym__0__6803837608073687569), sym__0__3019318186977723140(__sym__0__3019318186977723140), sym__0___45_3182244727465674548(__sym__0___45_3182244727465674548), sym__0__6970778392668530317(__sym__0__6970778392668530317), sym__0__1291675427782851845(__sym__0__1291675427782851845), sym__0___45_7095393819436573425(__sym__0___45_7095393819436573425)
  {
  }
  Record11() 
  {
  }
  std::string show() const{
    std::stringstream o;
    o << sym__0__1700144450823265023 << " | " << arrToString(sym__0__642977477037249040) << " | " << arrToString(sym__0___45_4128377972278795822) << " | " << arrToString(sym__0___45_5088627304821687252) << " | " << arrToString(sym__0___45_4948625537612330786) << " | " << arrToString(sym__0___45_9194700948435084701) << " | " << arrToString(sym__0___45_2335925802980201584) << " | " << sym__0__8952961796666569484 << " | " << sym__0___45_764958528451264714 << " | " << sym__0___45_1817156327375219010 << " | " << sym__0___45_2837638767689209768 << " | " << sym__0___45_2981394887932269865 << " | " << sym__0___45_3207638480786881318 << " | " << arrToString(sym__0___45_2706668038305292969) << " | " << sym__0___45_5698288034649371459 << " | " << arrToString(sym__0___45_4860327901106131906) << " | " << sym__0__4990602831923261550 << " | " << sym__0__1941197998689785612 << " | " << sym__0__8920978217467339962 << " | " << sym__0__2290947992840979092 << " | " << sym__0__7968803792053807648 << " | " << sym__0___45_648214588708582661 << " | " << sym__0__5240005983315163865 << " | " << arrToString(sym__0__8676547963641831009) << " | " << sym__0__7098358135655077312 << " | " << arrToString(sym__0___45_3236172823121798352) << " | " << arrToString(sym__0__209296758379513054) << " | " << arrToString(sym__0__990102210371531505) << " | " << sym__0__6731021262741660999 << " | " << sym__0__43383544609224961 << " | " << arrToString(sym__0___45_1451536826369255544) << " | " << sym__0___45_3626731045154418301 << " | " << sym__0__6266038698953764136 << " | " << sym__0___45_3178257250902948896 << " | " << sym__0___45_1707432467122892938 << " | " << sym__0__6803837608073687569 << " | " << arrToString(sym__0__3019318186977723140) << " | " << arrToString(sym__0___45_3182244727465674548) << " | " << arrToString(sym__0__6970778392668530317) << " | " << arrToString(sym__0__1291675427782851845) << " | " << arrToString(sym__0___45_7095393819436573425);
    return o.str();
  }
  bool operator <(const Record11& otherRec) const{
    return (otherRec.sym__0__1700144450823265023 < sym__0__1700144450823265023 && (otherRec.sym__0__642977477037249040 < sym__0__642977477037249040 && (otherRec.sym__0___45_4128377972278795822 < sym__0___45_4128377972278795822 && (otherRec.sym__0___45_5088627304821687252 < sym__0___45_5088627304821687252 && (otherRec.sym__0___45_4948625537612330786 < sym__0___45_4948625537612330786 && (otherRec.sym__0___45_9194700948435084701 < sym__0___45_9194700948435084701 && (otherRec.sym__0___45_2335925802980201584 < sym__0___45_2335925802980201584 && (otherRec.sym__0__8952961796666569484 < sym__0__8952961796666569484 && (otherRec.sym__0___45_764958528451264714 < sym__0___45_764958528451264714 && (otherRec.sym__0___45_1817156327375219010 < sym__0___45_1817156327375219010 && (otherRec.sym__0___45_2837638767689209768 < sym__0___45_2837638767689209768 && (otherRec.sym__0___45_2981394887932269865 < sym__0___45_2981394887932269865 && (otherRec.sym__0___45_3207638480786881318 < sym__0___45_3207638480786881318 && (otherRec.sym__0___45_2706668038305292969 < sym__0___45_2706668038305292969 && (otherRec.sym__0___45_5698288034649371459 < sym__0___45_5698288034649371459 && (otherRec.sym__0___45_4860327901106131906 < sym__0___45_4860327901106131906 && (otherRec.sym__0__4990602831923261550 < sym__0__4990602831923261550 && (otherRec.sym__0__1941197998689785612 < sym__0__1941197998689785612 && (otherRec.sym__0__8920978217467339962 < sym__0__8920978217467339962 && (otherRec.sym__0__2290947992840979092 < sym__0__2290947992840979092 && (otherRec.sym__0__7968803792053807648 < sym__0__7968803792053807648 && (otherRec.sym__0___45_648214588708582661 < sym__0___45_648214588708582661 && (otherRec.sym__0__5240005983315163865 < sym__0__5240005983315163865 && (otherRec.sym__0__8676547963641831009 < sym__0__8676547963641831009 && (otherRec.sym__0__7098358135655077312 < sym__0__7098358135655077312 && (otherRec.sym__0___45_3236172823121798352 < sym__0___45_3236172823121798352 && (otherRec.sym__0__209296758379513054 < sym__0__209296758379513054 && (otherRec.sym__0__990102210371531505 < sym__0__990102210371531505 && (otherRec.sym__0__6731021262741660999 < sym__0__6731021262741660999 && (otherRec.sym__0__43383544609224961 < sym__0__43383544609224961 && (otherRec.sym__0___45_1451536826369255544 < sym__0___45_1451536826369255544 && (otherRec.sym__0___45_3626731045154418301 < sym__0___45_3626731045154418301 && (otherRec.sym__0__6266038698953764136 < sym__0__6266038698953764136 && (otherRec.sym__0___45_3178257250902948896 < sym__0___45_3178257250902948896 && (otherRec.sym__0___45_1707432467122892938 < sym__0___45_1707432467122892938 && (otherRec.sym__0__6803837608073687569 < sym__0__6803837608073687569 && (otherRec.sym__0__3019318186977723140 < sym__0__3019318186977723140 && (otherRec.sym__0___45_3182244727465674548 < sym__0___45_3182244727465674548 && (otherRec.sym__0__6970778392668530317 < sym__0__6970778392668530317 && (otherRec.sym__0__1291675427782851845 < sym__0__1291675427782851845 && otherRec.sym__0___45_7095393819436573425 < sym__0___45_7095393819436573425))))))))))))))))))))))))))))))))))))))));
  }
  bool operator ==(const Record11& otherRec) const{
    return (otherRec.sym__0__1700144450823265023 == sym__0__1700144450823265023 && (otherRec.sym__0__642977477037249040 == sym__0__642977477037249040 && (otherRec.sym__0___45_4128377972278795822 == sym__0___45_4128377972278795822 && (otherRec.sym__0___45_5088627304821687252 == sym__0___45_5088627304821687252 && (otherRec.sym__0___45_4948625537612330786 == sym__0___45_4948625537612330786 && (otherRec.sym__0___45_9194700948435084701 == sym__0___45_9194700948435084701 && (otherRec.sym__0___45_2335925802980201584 == sym__0___45_2335925802980201584 && (otherRec.sym__0__8952961796666569484 == sym__0__8952961796666569484 && (otherRec.sym__0___45_764958528451264714 == sym__0___45_764958528451264714 && (otherRec.sym__0___45_1817156327375219010 == sym__0___45_1817156327375219010 && (otherRec.sym__0___45_2837638767689209768 == sym__0___45_2837638767689209768 && (otherRec.sym__0___45_2981394887932269865 == sym__0___45_2981394887932269865 && (otherRec.sym__0___45_3207638480786881318 == sym__0___45_3207638480786881318 && (otherRec.sym__0___45_2706668038305292969 == sym__0___45_2706668038305292969 && (otherRec.sym__0___45_5698288034649371459 == sym__0___45_5698288034649371459 && (otherRec.sym__0___45_4860327901106131906 == sym__0___45_4860327901106131906 && (otherRec.sym__0__4990602831923261550 == sym__0__4990602831923261550 && (otherRec.sym__0__1941197998689785612 == sym__0__1941197998689785612 && (otherRec.sym__0__8920978217467339962 == sym__0__8920978217467339962 && (otherRec.sym__0__2290947992840979092 == sym__0__2290947992840979092 && (otherRec.sym__0__7968803792053807648 == sym__0__7968803792053807648 && (otherRec.sym__0___45_648214588708582661 == sym__0___45_648214588708582661 && (otherRec.sym__0__5240005983315163865 == sym__0__5240005983315163865 && (otherRec.sym__0__8676547963641831009 == sym__0__8676547963641831009 && (otherRec.sym__0__7098358135655077312 == sym__0__7098358135655077312 && (otherRec.sym__0___45_3236172823121798352 == sym__0___45_3236172823121798352 && (otherRec.sym__0__209296758379513054 == sym__0__209296758379513054 && (otherRec.sym__0__990102210371531505 == sym__0__990102210371531505 && (otherRec.sym__0__6731021262741660999 == sym__0__6731021262741660999 && (otherRec.sym__0__43383544609224961 == sym__0__43383544609224961 && (otherRec.sym__0___45_1451536826369255544 == sym__0___45_1451536826369255544 && (otherRec.sym__0___45_3626731045154418301 == sym__0___45_3626731045154418301 && (otherRec.sym__0__6266038698953764136 == sym__0__6266038698953764136 && (otherRec.sym__0___45_3178257250902948896 == sym__0___45_3178257250902948896 && (otherRec.sym__0___45_1707432467122892938 == sym__0___45_1707432467122892938 && (otherRec.sym__0__6803837608073687569 == sym__0__6803837608073687569 && (otherRec.sym__0__3019318186977723140 == sym__0__3019318186977723140 && (otherRec.sym__0___45_3182244727465674548 == sym__0___45_3182244727465674548 && (otherRec.sym__0__6970778392668530317 == sym__0__6970778392668530317 && (otherRec.sym__0__1291675427782851845 == sym__0__1291675427782851845 && otherRec.sym__0___45_7095393819436573425 == sym__0___45_7095393819436573425))))))))))))))))))))))))))))))))))))))));
  }
  bool operator !=(const Record11& otherRec) const{
    return (otherRec.sym__0__1700144450823265023 != sym__0__1700144450823265023 || (otherRec.sym__0__642977477037249040 != sym__0__642977477037249040 || (otherRec.sym__0___45_4128377972278795822 != sym__0___45_4128377972278795822 || (otherRec.sym__0___45_5088627304821687252 != sym__0___45_5088627304821687252 || (otherRec.sym__0___45_4948625537612330786 != sym__0___45_4948625537612330786 || (otherRec.sym__0___45_9194700948435084701 != sym__0___45_9194700948435084701 || (otherRec.sym__0___45_2335925802980201584 != sym__0___45_2335925802980201584 || (otherRec.sym__0__8952961796666569484 != sym__0__8952961796666569484 || (otherRec.sym__0___45_764958528451264714 != sym__0___45_764958528451264714 || (otherRec.sym__0___45_1817156327375219010 != sym__0___45_1817156327375219010 || (otherRec.sym__0___45_2837638767689209768 != sym__0___45_2837638767689209768 || (otherRec.sym__0___45_2981394887932269865 != sym__0___45_2981394887932269865 || (otherRec.sym__0___45_3207638480786881318 != sym__0___45_3207638480786881318 || (otherRec.sym__0___45_2706668038305292969 != sym__0___45_2706668038305292969 || (otherRec.sym__0___45_5698288034649371459 != sym__0___45_5698288034649371459 || (otherRec.sym__0___45_4860327901106131906 != sym__0___45_4860327901106131906 || (otherRec.sym__0__4990602831923261550 != sym__0__4990602831923261550 || (otherRec.sym__0__1941197998689785612 != sym__0__1941197998689785612 || (otherRec.sym__0__8920978217467339962 != sym__0__8920978217467339962 || (otherRec.sym__0__2290947992840979092 != sym__0__2290947992840979092 || (otherRec.sym__0__7968803792053807648 != sym__0__7968803792053807648 || (otherRec.sym__0___45_648214588708582661 != sym__0___45_648214588708582661 || (otherRec.sym__0__5240005983315163865 != sym__0__5240005983315163865 || (otherRec.sym__0__8676547963641831009 != sym__0__8676547963641831009 || (otherRec.sym__0__7098358135655077312 != sym__0__7098358135655077312 || (otherRec.sym__0___45_3236172823121798352 != sym__0___45_3236172823121798352 || (otherRec.sym__0__209296758379513054 != sym__0__209296758379513054 || (otherRec.sym__0__990102210371531505 != sym__0__990102210371531505 || (otherRec.sym__0__6731021262741660999 != sym__0__6731021262741660999 || (otherRec.sym__0__43383544609224961 != sym__0__43383544609224961 || (otherRec.sym__0___45_1451536826369255544 != sym__0___45_1451536826369255544 || (otherRec.sym__0___45_3626731045154418301 != sym__0___45_3626731045154418301 || (otherRec.sym__0__6266038698953764136 != sym__0__6266038698953764136 || (otherRec.sym__0___45_3178257250902948896 != sym__0___45_3178257250902948896 || (otherRec.sym__0___45_1707432467122892938 != sym__0___45_1707432467122892938 || (otherRec.sym__0__6803837608073687569 != sym__0__6803837608073687569 || (otherRec.sym__0__3019318186977723140 != sym__0__3019318186977723140 || (otherRec.sym__0___45_3182244727465674548 != sym__0___45_3182244727465674548 || (otherRec.sym__0__6970778392668530317 != sym__0__6970778392668530317 || (otherRec.sym__0__1291675427782851845 != sym__0__1291675427782851845 || otherRec.sym__0___45_7095393819436573425 != sym__0___45_7095393819436573425))))))))))))))))))))))))))))))))))))))));
  }
  unsigned sym__0__1700144450823265023;
  fluidb_string<25> sym__0__642977477037249040;
  fluidb_string<40> sym__0___45_4128377972278795822;
  fluidb_string<16> sym__0___45_5088627304821687252;
  fluidb_string<16> sym__0___45_4948625537612330786;
  fluidb_string<13> sym__0___45_9194700948435084701;
  fluidb_string<15> sym__0___45_2335925802980201584;
  unsigned sym__0__8952961796666569484;
  int sym__0___45_764958528451264714;
  unsigned sym__0___45_1817156327375219010;
  unsigned sym__0___45_2837638767689209768;
  unsigned sym__0___45_2981394887932269865;
  unsigned sym__0___45_3207638480786881318;
  fluidb_string<21> sym__0___45_2706668038305292969;
  unsigned sym__0___45_5698288034649371459;
  fluidb_string<10> sym__0___45_4860327901106131906;
  unsigned sym__0__4990602831923261550;
  double sym__0__1941197998689785612;
  unsigned sym__0__8920978217467339962;
  double sym__0__2290947992840979092;
  unsigned sym__0__7968803792053807648;
  unsigned sym__0___45_648214588708582661;
  double sym__0__5240005983315163865;
  fluidb_string<13> sym__0__8676547963641831009;
  unsigned sym__0__7098358135655077312;
  fluidb_string<18> sym__0___45_3236172823121798352;
  fluidb_string<9> sym__0__209296758379513054;
  fluidb_string<9> sym__0__990102210371531505;
  unsigned sym__0__6731021262741660999;
  unsigned sym__0__43383544609224961;
  fluidb_string<7> sym__0___45_1451536826369255544;
  unsigned sym__0___45_3626731045154418301;
  unsigned sym__0__6266038698953764136;
  unsigned sym__0___45_3178257250902948896;
  unsigned sym__0___45_1707432467122892938;
  unsigned sym__0__6803837608073687569;
  fluidb_string<15> sym__0__3019318186977723140;
  fluidb_string<2> sym__0___45_3182244727465674548;
  fluidb_string<2> sym__0__6970778392668530317;
  fluidb_string<2> sym__0__1291675427782851845;
  fluidb_string<2> sym__0___45_7095393819436573425;
 private:
};


class Record25 {
 public:
  Record25(unsigned __sym__0__4141812305157790681, fluidb_string<25> __sym__0___45_5159284013671774530, fluidb_string<40> __sym__0__5929335199040604944, fluidb_string<16> __sym__0__8980268860843798410, fluidb_string<16> __sym__0__7438201141129884556, fluidb_string<13> __sym__0__299964735226913069, fluidb_string<15> __sym__0___45_274153224962620866, unsigned __sym__0___45_1704737576651497046, int __sym__0___45_5364431335747194636, unsigned __sym__0___45_6670480666790360404, unsigned __sym__0__1035059097189397270, unsigned __sym__0___45_236567292019976639, unsigned __sym__0___45_4342072045869091480, fluidb_string<21> __sym__0___45_48356416147601727, unsigned __sym__0___45_3530069934999759345, fluidb_string<10> __sym__0___45_21272610088483796, unsigned __sym__0__8564866222464334588, double __sym__0___45_744165813648595542, unsigned __sym__0__482146207611652104, double __sym__0___45_2183093135728676926, unsigned __sym__0___45_1874278765651523026, unsigned __sym__0___45_7594691263183254603, double __sym__0__3632680852047490635, fluidb_string<13> __sym__0___45_7823346196563635997, unsigned __sym__0__5619860144531125902, fluidb_string<18> __sym__0__5610665202265100958, fluidb_string<9> __sym__0___45_9075663471338639476, fluidb_string<9> __sym__0__4691788782750567507, unsigned __sym__0__7928058280817873233, unsigned __sym__0__6668222264524417219, fluidb_string<7> __sym__0__2297426772070097766, unsigned __sym__0__3416485698032376717, unsigned __sym__0___45_1989902664282570938, unsigned __sym__0___45_8900398421048301202, unsigned __sym__0___45_3190388615181087052, unsigned __sym__0__617043931306359219, fluidb_string<15> __sym__0___45_6132208035988097838, fluidb_string<2> __sym__0___45_7131498866425802518, fluidb_string<2> __sym__0__3212189690086512703, fluidb_string<2> __sym__0___45_4551279862702652409, fluidb_string<2> __sym__0__6400252650127444553, unsigned __sym__0__8989200694518734396, fluidb_string<55> __sym__0__1879639780622030444, fluidb_string<25> __sym__0__4679788483318910399, fluidb_string<7> __sym__0___45_1519325191444557143, fluidb_string<10> __sym__0__8808022150768814575, fluidb_string<11> __sym__0__1615907806695898299, fluidb_string<25> __sym__0__7902426149900564525, unsigned __sym__0__7538375850658612802, fluidb_string<10> __sym__0__2838506290652474191) : sym__0__4141812305157790681(__sym__0__4141812305157790681), sym__0___45_5159284013671774530(__sym__0___45_5159284013671774530), sym__0__5929335199040604944(__sym__0__5929335199040604944), sym__0__8980268860843798410(__sym__0__8980268860843798410), sym__0__7438201141129884556(__sym__0__7438201141129884556), sym__0__299964735226913069(__sym__0__299964735226913069), sym__0___45_274153224962620866(__sym__0___45_274153224962620866), sym__0___45_1704737576651497046(__sym__0___45_1704737576651497046), sym__0___45_5364431335747194636(__sym__0___45_5364431335747194636), sym__0___45_6670480666790360404(__sym__0___45_6670480666790360404), sym__0__1035059097189397270(__sym__0__1035059097189397270), sym__0___45_236567292019976639(__sym__0___45_236567292019976639), sym__0___45_4342072045869091480(__sym__0___45_4342072045869091480), sym__0___45_48356416147601727(__sym__0___45_48356416147601727), sym__0___45_3530069934999759345(__sym__0___45_3530069934999759345), sym__0___45_21272610088483796(__sym__0___45_21272610088483796), sym__0__8564866222464334588(__sym__0__8564866222464334588), sym__0___45_744165813648595542(__sym__0___45_744165813648595542), sym__0__482146207611652104(__sym__0__482146207611652104), sym__0___45_2183093135728676926(__sym__0___45_2183093135728676926), sym__0___45_1874278765651523026(__sym__0___45_1874278765651523026), sym__0___45_7594691263183254603(__sym__0___45_7594691263183254603), sym__0__3632680852047490635(__sym__0__3632680852047490635), sym__0___45_7823346196563635997(__sym__0___45_7823346196563635997), sym__0__5619860144531125902(__sym__0__5619860144531125902), sym__0__5610665202265100958(__sym__0__5610665202265100958), sym__0___45_9075663471338639476(__sym__0___45_9075663471338639476), sym__0__4691788782750567507(__sym__0__4691788782750567507), sym__0__7928058280817873233(__sym__0__7928058280817873233), sym__0__6668222264524417219(__sym__0__6668222264524417219), sym__0__2297426772070097766(__sym__0__2297426772070097766), sym__0__3416485698032376717(__sym__0__3416485698032376717), sym__0___45_1989902664282570938(__sym__0___45_1989902664282570938), sym__0___45_8900398421048301202(__sym__0___45_8900398421048301202), sym__0___45_3190388615181087052(__sym__0___45_3190388615181087052), sym__0__617043931306359219(__sym__0__617043931306359219), sym__0___45_6132208035988097838(__sym__0___45_6132208035988097838), sym__0___45_7131498866425802518(__sym__0___45_7131498866425802518), sym__0__3212189690086512703(__sym__0__3212189690086512703), sym__0___45_4551279862702652409(__sym__0___45_4551279862702652409), sym__0__6400252650127444553(__sym__0__6400252650127444553), sym__0__8989200694518734396(__sym__0__8989200694518734396), sym__0__1879639780622030444(__sym__0__1879639780622030444), sym__0__4679788483318910399(__sym__0__4679788483318910399), sym__0___45_1519325191444557143(__sym__0___45_1519325191444557143), sym__0__8808022150768814575(__sym__0__8808022150768814575), sym__0__1615907806695898299(__sym__0__1615907806695898299), sym__0__7902426149900564525(__sym__0__7902426149900564525), sym__0__7538375850658612802(__sym__0__7538375850658612802), sym__0__2838506290652474191(__sym__0__2838506290652474191)
  {
  }
  Record25() 
  {
  }
  std::string show() const{
    std::stringstream o;
    o << sym__0__4141812305157790681 << " | " << arrToString(sym__0___45_5159284013671774530) << " | " << arrToString(sym__0__5929335199040604944) << " | " << arrToString(sym__0__8980268860843798410) << " | " << arrToString(sym__0__7438201141129884556) << " | " << arrToString(sym__0__299964735226913069) << " | " << arrToString(sym__0___45_274153224962620866) << " | " << sym__0___45_1704737576651497046 << " | " << sym__0___45_5364431335747194636 << " | " << sym__0___45_6670480666790360404 << " | " << sym__0__1035059097189397270 << " | " << sym__0___45_236567292019976639 << " | " << sym__0___45_4342072045869091480 << " | " << arrToString(sym__0___45_48356416147601727) << " | " << sym__0___45_3530069934999759345 << " | " << arrToString(sym__0___45_21272610088483796) << " | " << sym__0__8564866222464334588 << " | " << sym__0___45_744165813648595542 << " | " << sym__0__482146207611652104 << " | " << sym__0___45_2183093135728676926 << " | " << sym__0___45_1874278765651523026 << " | " << sym__0___45_7594691263183254603 << " | " << sym__0__3632680852047490635 << " | " << arrToString(sym__0___45_7823346196563635997) << " | " << sym__0__5619860144531125902 << " | " << arrToString(sym__0__5610665202265100958) << " | " << arrToString(sym__0___45_9075663471338639476) << " | " << arrToString(sym__0__4691788782750567507) << " | " << sym__0__7928058280817873233 << " | " << sym__0__6668222264524417219 << " | " << arrToString(sym__0__2297426772070097766) << " | " << sym__0__3416485698032376717 << " | " << sym__0___45_1989902664282570938 << " | " << sym__0___45_8900398421048301202 << " | " << sym__0___45_3190388615181087052 << " | " << sym__0__617043931306359219 << " | " << arrToString(sym__0___45_6132208035988097838) << " | " << arrToString(sym__0___45_7131498866425802518) << " | " << arrToString(sym__0__3212189690086512703) << " | " << arrToString(sym__0___45_4551279862702652409) << " | " << arrToString(sym__0__6400252650127444553) << " | " << sym__0__8989200694518734396 << " | " << arrToString(sym__0__1879639780622030444) << " | " << arrToString(sym__0__4679788483318910399) << " | " << arrToString(sym__0___45_1519325191444557143) << " | " << arrToString(sym__0__8808022150768814575) << " | " << arrToString(sym__0__1615907806695898299) << " | " << arrToString(sym__0__7902426149900564525) << " | " << sym__0__7538375850658612802 << " | " << arrToString(sym__0__2838506290652474191);
    return o.str();
  }
  bool operator <(const Record25& otherRec) const{
    return (otherRec.sym__0__4141812305157790681 < sym__0__4141812305157790681 && (otherRec.sym__0___45_5159284013671774530 < sym__0___45_5159284013671774530 && (otherRec.sym__0__5929335199040604944 < sym__0__5929335199040604944 && (otherRec.sym__0__8980268860843798410 < sym__0__8980268860843798410 && (otherRec.sym__0__7438201141129884556 < sym__0__7438201141129884556 && (otherRec.sym__0__299964735226913069 < sym__0__299964735226913069 && (otherRec.sym__0___45_274153224962620866 < sym__0___45_274153224962620866 && (otherRec.sym__0___45_1704737576651497046 < sym__0___45_1704737576651497046 && (otherRec.sym__0___45_5364431335747194636 < sym__0___45_5364431335747194636 && (otherRec.sym__0___45_6670480666790360404 < sym__0___45_6670480666790360404 && (otherRec.sym__0__1035059097189397270 < sym__0__1035059097189397270 && (otherRec.sym__0___45_236567292019976639 < sym__0___45_236567292019976639 && (otherRec.sym__0___45_4342072045869091480 < sym__0___45_4342072045869091480 && (otherRec.sym__0___45_48356416147601727 < sym__0___45_48356416147601727 && (otherRec.sym__0___45_3530069934999759345 < sym__0___45_3530069934999759345 && (otherRec.sym__0___45_21272610088483796 < sym__0___45_21272610088483796 && (otherRec.sym__0__8564866222464334588 < sym__0__8564866222464334588 && (otherRec.sym__0___45_744165813648595542 < sym__0___45_744165813648595542 && (otherRec.sym__0__482146207611652104 < sym__0__482146207611652104 && (otherRec.sym__0___45_2183093135728676926 < sym__0___45_2183093135728676926 && (otherRec.sym__0___45_1874278765651523026 < sym__0___45_1874278765651523026 && (otherRec.sym__0___45_7594691263183254603 < sym__0___45_7594691263183254603 && (otherRec.sym__0__3632680852047490635 < sym__0__3632680852047490635 && (otherRec.sym__0___45_7823346196563635997 < sym__0___45_7823346196563635997 && (otherRec.sym__0__5619860144531125902 < sym__0__5619860144531125902 && (otherRec.sym__0__5610665202265100958 < sym__0__5610665202265100958 && (otherRec.sym__0___45_9075663471338639476 < sym__0___45_9075663471338639476 && (otherRec.sym__0__4691788782750567507 < sym__0__4691788782750567507 && (otherRec.sym__0__7928058280817873233 < sym__0__7928058280817873233 && (otherRec.sym__0__6668222264524417219 < sym__0__6668222264524417219 && (otherRec.sym__0__2297426772070097766 < sym__0__2297426772070097766 && (otherRec.sym__0__3416485698032376717 < sym__0__3416485698032376717 && (otherRec.sym__0___45_1989902664282570938 < sym__0___45_1989902664282570938 && (otherRec.sym__0___45_8900398421048301202 < sym__0___45_8900398421048301202 && (otherRec.sym__0___45_3190388615181087052 < sym__0___45_3190388615181087052 && (otherRec.sym__0__617043931306359219 < sym__0__617043931306359219 && (otherRec.sym__0___45_6132208035988097838 < sym__0___45_6132208035988097838 && (otherRec.sym__0___45_7131498866425802518 < sym__0___45_7131498866425802518 && (otherRec.sym__0__3212189690086512703 < sym__0__3212189690086512703 && (otherRec.sym__0___45_4551279862702652409 < sym__0___45_4551279862702652409 && (otherRec.sym__0__6400252650127444553 < sym__0__6400252650127444553 && (otherRec.sym__0__8989200694518734396 < sym__0__8989200694518734396 && (otherRec.sym__0__1879639780622030444 < sym__0__1879639780622030444 && (otherRec.sym__0__4679788483318910399 < sym__0__4679788483318910399 && (otherRec.sym__0___45_1519325191444557143 < sym__0___45_1519325191444557143 && (otherRec.sym__0__8808022150768814575 < sym__0__8808022150768814575 && (otherRec.sym__0__1615907806695898299 < sym__0__1615907806695898299 && (otherRec.sym__0__7902426149900564525 < sym__0__7902426149900564525 && (otherRec.sym__0__7538375850658612802 < sym__0__7538375850658612802 && otherRec.sym__0__2838506290652474191 < sym__0__2838506290652474191)))))))))))))))))))))))))))))))))))))))))))))))));
  }
  bool operator ==(const Record25& otherRec) const{
    return (otherRec.sym__0__4141812305157790681 == sym__0__4141812305157790681 && (otherRec.sym__0___45_5159284013671774530 == sym__0___45_5159284013671774530 && (otherRec.sym__0__5929335199040604944 == sym__0__5929335199040604944 && (otherRec.sym__0__8980268860843798410 == sym__0__8980268860843798410 && (otherRec.sym__0__7438201141129884556 == sym__0__7438201141129884556 && (otherRec.sym__0__299964735226913069 == sym__0__299964735226913069 && (otherRec.sym__0___45_274153224962620866 == sym__0___45_274153224962620866 && (otherRec.sym__0___45_1704737576651497046 == sym__0___45_1704737576651497046 && (otherRec.sym__0___45_5364431335747194636 == sym__0___45_5364431335747194636 && (otherRec.sym__0___45_6670480666790360404 == sym__0___45_6670480666790360404 && (otherRec.sym__0__1035059097189397270 == sym__0__1035059097189397270 && (otherRec.sym__0___45_236567292019976639 == sym__0___45_236567292019976639 && (otherRec.sym__0___45_4342072045869091480 == sym__0___45_4342072045869091480 && (otherRec.sym__0___45_48356416147601727 == sym__0___45_48356416147601727 && (otherRec.sym__0___45_3530069934999759345 == sym__0___45_3530069934999759345 && (otherRec.sym__0___45_21272610088483796 == sym__0___45_21272610088483796 && (otherRec.sym__0__8564866222464334588 == sym__0__8564866222464334588 && (otherRec.sym__0___45_744165813648595542 == sym__0___45_744165813648595542 && (otherRec.sym__0__482146207611652104 == sym__0__482146207611652104 && (otherRec.sym__0___45_2183093135728676926 == sym__0___45_2183093135728676926 && (otherRec.sym__0___45_1874278765651523026 == sym__0___45_1874278765651523026 && (otherRec.sym__0___45_7594691263183254603 == sym__0___45_7594691263183254603 && (otherRec.sym__0__3632680852047490635 == sym__0__3632680852047490635 && (otherRec.sym__0___45_7823346196563635997 == sym__0___45_7823346196563635997 && (otherRec.sym__0__5619860144531125902 == sym__0__5619860144531125902 && (otherRec.sym__0__5610665202265100958 == sym__0__5610665202265100958 && (otherRec.sym__0___45_9075663471338639476 == sym__0___45_9075663471338639476 && (otherRec.sym__0__4691788782750567507 == sym__0__4691788782750567507 && (otherRec.sym__0__7928058280817873233 == sym__0__7928058280817873233 && (otherRec.sym__0__6668222264524417219 == sym__0__6668222264524417219 && (otherRec.sym__0__2297426772070097766 == sym__0__2297426772070097766 && (otherRec.sym__0__3416485698032376717 == sym__0__3416485698032376717 && (otherRec.sym__0___45_1989902664282570938 == sym__0___45_1989902664282570938 && (otherRec.sym__0___45_8900398421048301202 == sym__0___45_8900398421048301202 && (otherRec.sym__0___45_3190388615181087052 == sym__0___45_3190388615181087052 && (otherRec.sym__0__617043931306359219 == sym__0__617043931306359219 && (otherRec.sym__0___45_6132208035988097838 == sym__0___45_6132208035988097838 && (otherRec.sym__0___45_7131498866425802518 == sym__0___45_7131498866425802518 && (otherRec.sym__0__3212189690086512703 == sym__0__3212189690086512703 && (otherRec.sym__0___45_4551279862702652409 == sym__0___45_4551279862702652409 && (otherRec.sym__0__6400252650127444553 == sym__0__6400252650127444553 && (otherRec.sym__0__8989200694518734396 == sym__0__8989200694518734396 && (otherRec.sym__0__1879639780622030444 == sym__0__1879639780622030444 && (otherRec.sym__0__4679788483318910399 == sym__0__4679788483318910399 && (otherRec.sym__0___45_1519325191444557143 == sym__0___45_1519325191444557143 && (otherRec.sym__0__8808022150768814575 == sym__0__8808022150768814575 && (otherRec.sym__0__1615907806695898299 == sym__0__1615907806695898299 && (otherRec.sym__0__7902426149900564525 == sym__0__7902426149900564525 && (otherRec.sym__0__7538375850658612802 == sym__0__7538375850658612802 && otherRec.sym__0__2838506290652474191 == sym__0__2838506290652474191)))))))))))))))))))))))))))))))))))))))))))))))));
  }
  bool operator !=(const Record25& otherRec) const{
    return (otherRec.sym__0__4141812305157790681 != sym__0__4141812305157790681 || (otherRec.sym__0___45_5159284013671774530 != sym__0___45_5159284013671774530 || (otherRec.sym__0__5929335199040604944 != sym__0__5929335199040604944 || (otherRec.sym__0__8980268860843798410 != sym__0__8980268860843798410 || (otherRec.sym__0__7438201141129884556 != sym__0__7438201141129884556 || (otherRec.sym__0__299964735226913069 != sym__0__299964735226913069 || (otherRec.sym__0___45_274153224962620866 != sym__0___45_274153224962620866 || (otherRec.sym__0___45_1704737576651497046 != sym__0___45_1704737576651497046 || (otherRec.sym__0___45_5364431335747194636 != sym__0___45_5364431335747194636 || (otherRec.sym__0___45_6670480666790360404 != sym__0___45_6670480666790360404 || (otherRec.sym__0__1035059097189397270 != sym__0__1035059097189397270 || (otherRec.sym__0___45_236567292019976639 != sym__0___45_236567292019976639 || (otherRec.sym__0___45_4342072045869091480 != sym__0___45_4342072045869091480 || (otherRec.sym__0___45_48356416147601727 != sym__0___45_48356416147601727 || (otherRec.sym__0___45_3530069934999759345 != sym__0___45_3530069934999759345 || (otherRec.sym__0___45_21272610088483796 != sym__0___45_21272610088483796 || (otherRec.sym__0__8564866222464334588 != sym__0__8564866222464334588 || (otherRec.sym__0___45_744165813648595542 != sym__0___45_744165813648595542 || (otherRec.sym__0__482146207611652104 != sym__0__482146207611652104 || (otherRec.sym__0___45_2183093135728676926 != sym__0___45_2183093135728676926 || (otherRec.sym__0___45_1874278765651523026 != sym__0___45_1874278765651523026 || (otherRec.sym__0___45_7594691263183254603 != sym__0___45_7594691263183254603 || (otherRec.sym__0__3632680852047490635 != sym__0__3632680852047490635 || (otherRec.sym__0___45_7823346196563635997 != sym__0___45_7823346196563635997 || (otherRec.sym__0__5619860144531125902 != sym__0__5619860144531125902 || (otherRec.sym__0__5610665202265100958 != sym__0__5610665202265100958 || (otherRec.sym__0___45_9075663471338639476 != sym__0___45_9075663471338639476 || (otherRec.sym__0__4691788782750567507 != sym__0__4691788782750567507 || (otherRec.sym__0__7928058280817873233 != sym__0__7928058280817873233 || (otherRec.sym__0__6668222264524417219 != sym__0__6668222264524417219 || (otherRec.sym__0__2297426772070097766 != sym__0__2297426772070097766 || (otherRec.sym__0__3416485698032376717 != sym__0__3416485698032376717 || (otherRec.sym__0___45_1989902664282570938 != sym__0___45_1989902664282570938 || (otherRec.sym__0___45_8900398421048301202 != sym__0___45_8900398421048301202 || (otherRec.sym__0___45_3190388615181087052 != sym__0___45_3190388615181087052 || (otherRec.sym__0__617043931306359219 != sym__0__617043931306359219 || (otherRec.sym__0___45_6132208035988097838 != sym__0___45_6132208035988097838 || (otherRec.sym__0___45_7131498866425802518 != sym__0___45_7131498866425802518 || (otherRec.sym__0__3212189690086512703 != sym__0__3212189690086512703 || (otherRec.sym__0___45_4551279862702652409 != sym__0___45_4551279862702652409 || (otherRec.sym__0__6400252650127444553 != sym__0__6400252650127444553 || (otherRec.sym__0__8989200694518734396 != sym__0__8989200694518734396 || (otherRec.sym__0__1879639780622030444 != sym__0__1879639780622030444 || (otherRec.sym__0__4679788483318910399 != sym__0__4679788483318910399 || (otherRec.sym__0___45_1519325191444557143 != sym__0___45_1519325191444557143 || (otherRec.sym__0__8808022150768814575 != sym__0__8808022150768814575 || (otherRec.sym__0__1615907806695898299 != sym__0__1615907806695898299 || (otherRec.sym__0__7902426149900564525 != sym__0__7902426149900564525 || (otherRec.sym__0__7538375850658612802 != sym__0__7538375850658612802 || otherRec.sym__0__2838506290652474191 != sym__0__2838506290652474191)))))))))))))))))))))))))))))))))))))))))))))))));
  }
  unsigned sym__0__4141812305157790681;
  fluidb_string<25> sym__0___45_5159284013671774530;
  fluidb_string<40> sym__0__5929335199040604944;
  fluidb_string<16> sym__0__8980268860843798410;
  fluidb_string<16> sym__0__7438201141129884556;
  fluidb_string<13> sym__0__299964735226913069;
  fluidb_string<15> sym__0___45_274153224962620866;
  unsigned sym__0___45_1704737576651497046;
  int sym__0___45_5364431335747194636;
  unsigned sym__0___45_6670480666790360404;
  unsigned sym__0__1035059097189397270;
  unsigned sym__0___45_236567292019976639;
  unsigned sym__0___45_4342072045869091480;
  fluidb_string<21> sym__0___45_48356416147601727;
  unsigned sym__0___45_3530069934999759345;
  fluidb_string<10> sym__0___45_21272610088483796;
  unsigned sym__0__8564866222464334588;
  double sym__0___45_744165813648595542;
  unsigned sym__0__482146207611652104;
  double sym__0___45_2183093135728676926;
  unsigned sym__0___45_1874278765651523026;
  unsigned sym__0___45_7594691263183254603;
  double sym__0__3632680852047490635;
  fluidb_string<13> sym__0___45_7823346196563635997;
  unsigned sym__0__5619860144531125902;
  fluidb_string<18> sym__0__5610665202265100958;
  fluidb_string<9> sym__0___45_9075663471338639476;
  fluidb_string<9> sym__0__4691788782750567507;
  unsigned sym__0__7928058280817873233;
  unsigned sym__0__6668222264524417219;
  fluidb_string<7> sym__0__2297426772070097766;
  unsigned sym__0__3416485698032376717;
  unsigned sym__0___45_1989902664282570938;
  unsigned sym__0___45_8900398421048301202;
  unsigned sym__0___45_3190388615181087052;
  unsigned sym__0__617043931306359219;
  fluidb_string<15> sym__0___45_6132208035988097838;
  fluidb_string<2> sym__0___45_7131498866425802518;
  fluidb_string<2> sym__0__3212189690086512703;
  fluidb_string<2> sym__0___45_4551279862702652409;
  fluidb_string<2> sym__0__6400252650127444553;
  unsigned sym__0__8989200694518734396;
  fluidb_string<55> sym__0__1879639780622030444;
  fluidb_string<25> sym__0__4679788483318910399;
  fluidb_string<7> sym__0___45_1519325191444557143;
  fluidb_string<10> sym__0__8808022150768814575;
  fluidb_string<11> sym__0__1615907806695898299;
  fluidb_string<25> sym__0__7902426149900564525;
  unsigned sym__0__7538375850658612802;
  fluidb_string<10> sym__0__2838506290652474191;
 private:
};


class Record7 {
 public:
  Record7(unsigned __sym__0__2102316481828394123, fluidb_string<25> __sym__0__1780257040091145452, fluidb_string<40> __sym__0__3109939911660640430, fluidb_string<16> __sym__0___45_2175199227983174320, fluidb_string<16> __sym__0__2274992661292194562, fluidb_string<13> __sym__0___45_52536403880094569, fluidb_string<15> __sym__0__8474116574285927276, unsigned __sym__0__1835503384076924528, int __sym__0__586412267723269786, unsigned __sym__0__1353367320182642978, unsigned __sym__0___45_6351222752813626636, unsigned __sym__0___45_805067702695824989, unsigned __sym__0__914509637812701046, fluidb_string<21> __sym__0__7895450651221174051, unsigned __sym__0__5942285589324576545, fluidb_string<10> __sym__0__3979382234526804898, unsigned __sym__0___45_6103522369909819246, double __sym__0__1873148039180761712, unsigned __sym__0__1430551526674366102, double __sym__0__1048818672001592248, unsigned __sym__0__5723353836447658492, unsigned __sym__0___45_2233273278156881105, double __sym__0___45_1120880788595637835, fluidb_string<13> __sym__0___45_6361490230660137987, unsigned __sym__0___45_7131249874638266788, fluidb_string<18> __sym__0__7265729621635359692, fluidb_string<9> __sym__0___45_2986035740159621374, fluidb_string<9> __sym__0__5081664509798388941, unsigned __sym__0___45_8518596434939314413, unsigned __sym__0__1988221653138390749, fluidb_string<7> __sym__0___45_8801377200944175068, unsigned __sym__0___45_4634183629139578121, unsigned __sym__0__806472603637564420, unsigned __sym__0__1725829484083430844, unsigned __sym__0___45_5279274827282678566, unsigned __sym__0___45_9129247388617675603, fluidb_string<15> __sym__0__1232225844204183080, fluidb_string<2> __sym__0__9184663680502119984, fluidb_string<2> __sym__0___45_9023997483659527503, fluidb_string<2> __sym__0___45_1026604631201554135, fluidb_string<2> __sym__0___45_7189754320372197989) : sym__0__2102316481828394123(__sym__0__2102316481828394123), sym__0__1780257040091145452(__sym__0__1780257040091145452), sym__0__3109939911660640430(__sym__0__3109939911660640430), sym__0___45_2175199227983174320(__sym__0___45_2175199227983174320), sym__0__2274992661292194562(__sym__0__2274992661292194562), sym__0___45_52536403880094569(__sym__0___45_52536403880094569), sym__0__8474116574285927276(__sym__0__8474116574285927276), sym__0__1835503384076924528(__sym__0__1835503384076924528), sym__0__586412267723269786(__sym__0__586412267723269786), sym__0__1353367320182642978(__sym__0__1353367320182642978), sym__0___45_6351222752813626636(__sym__0___45_6351222752813626636), sym__0___45_805067702695824989(__sym__0___45_805067702695824989), sym__0__914509637812701046(__sym__0__914509637812701046), sym__0__7895450651221174051(__sym__0__7895450651221174051), sym__0__5942285589324576545(__sym__0__5942285589324576545), sym__0__3979382234526804898(__sym__0__3979382234526804898), sym__0___45_6103522369909819246(__sym__0___45_6103522369909819246), sym__0__1873148039180761712(__sym__0__1873148039180761712), sym__0__1430551526674366102(__sym__0__1430551526674366102), sym__0__1048818672001592248(__sym__0__1048818672001592248), sym__0__5723353836447658492(__sym__0__5723353836447658492), sym__0___45_2233273278156881105(__sym__0___45_2233273278156881105), sym__0___45_1120880788595637835(__sym__0___45_1120880788595637835), sym__0___45_6361490230660137987(__sym__0___45_6361490230660137987), sym__0___45_7131249874638266788(__sym__0___45_7131249874638266788), sym__0__7265729621635359692(__sym__0__7265729621635359692), sym__0___45_2986035740159621374(__sym__0___45_2986035740159621374), sym__0__5081664509798388941(__sym__0__5081664509798388941), sym__0___45_8518596434939314413(__sym__0___45_8518596434939314413), sym__0__1988221653138390749(__sym__0__1988221653138390749), sym__0___45_8801377200944175068(__sym__0___45_8801377200944175068), sym__0___45_4634183629139578121(__sym__0___45_4634183629139578121), sym__0__806472603637564420(__sym__0__806472603637564420), sym__0__1725829484083430844(__sym__0__1725829484083430844), sym__0___45_5279274827282678566(__sym__0___45_5279274827282678566), sym__0___45_9129247388617675603(__sym__0___45_9129247388617675603), sym__0__1232225844204183080(__sym__0__1232225844204183080), sym__0__9184663680502119984(__sym__0__9184663680502119984), sym__0___45_9023997483659527503(__sym__0___45_9023997483659527503), sym__0___45_1026604631201554135(__sym__0___45_1026604631201554135), sym__0___45_7189754320372197989(__sym__0___45_7189754320372197989)
  {
  }
  Record7() 
  {
  }
  std::string show() const{
    std::stringstream o;
    o << sym__0__2102316481828394123 << " | " << arrToString(sym__0__1780257040091145452) << " | " << arrToString(sym__0__3109939911660640430) << " | " << arrToString(sym__0___45_2175199227983174320) << " | " << arrToString(sym__0__2274992661292194562) << " | " << arrToString(sym__0___45_52536403880094569) << " | " << arrToString(sym__0__8474116574285927276) << " | " << sym__0__1835503384076924528 << " | " << sym__0__586412267723269786 << " | " << sym__0__1353367320182642978 << " | " << sym__0___45_6351222752813626636 << " | " << sym__0___45_805067702695824989 << " | " << sym__0__914509637812701046 << " | " << arrToString(sym__0__7895450651221174051) << " | " << sym__0__5942285589324576545 << " | " << arrToString(sym__0__3979382234526804898) << " | " << sym__0___45_6103522369909819246 << " | " << sym__0__1873148039180761712 << " | " << sym__0__1430551526674366102 << " | " << sym__0__1048818672001592248 << " | " << sym__0__5723353836447658492 << " | " << sym__0___45_2233273278156881105 << " | " << sym__0___45_1120880788595637835 << " | " << arrToString(sym__0___45_6361490230660137987) << " | " << sym__0___45_7131249874638266788 << " | " << arrToString(sym__0__7265729621635359692) << " | " << arrToString(sym__0___45_2986035740159621374) << " | " << arrToString(sym__0__5081664509798388941) << " | " << sym__0___45_8518596434939314413 << " | " << sym__0__1988221653138390749 << " | " << arrToString(sym__0___45_8801377200944175068) << " | " << sym__0___45_4634183629139578121 << " | " << sym__0__806472603637564420 << " | " << sym__0__1725829484083430844 << " | " << sym__0___45_5279274827282678566 << " | " << sym__0___45_9129247388617675603 << " | " << arrToString(sym__0__1232225844204183080) << " | " << arrToString(sym__0__9184663680502119984) << " | " << arrToString(sym__0___45_9023997483659527503) << " | " << arrToString(sym__0___45_1026604631201554135) << " | " << arrToString(sym__0___45_7189754320372197989);
    return o.str();
  }
  bool operator <(const Record7& otherRec) const{
    return (otherRec.sym__0__2102316481828394123 < sym__0__2102316481828394123 && (otherRec.sym__0__1780257040091145452 < sym__0__1780257040091145452 && (otherRec.sym__0__3109939911660640430 < sym__0__3109939911660640430 && (otherRec.sym__0___45_2175199227983174320 < sym__0___45_2175199227983174320 && (otherRec.sym__0__2274992661292194562 < sym__0__2274992661292194562 && (otherRec.sym__0___45_52536403880094569 < sym__0___45_52536403880094569 && (otherRec.sym__0__8474116574285927276 < sym__0__8474116574285927276 && (otherRec.sym__0__1835503384076924528 < sym__0__1835503384076924528 && (otherRec.sym__0__586412267723269786 < sym__0__586412267723269786 && (otherRec.sym__0__1353367320182642978 < sym__0__1353367320182642978 && (otherRec.sym__0___45_6351222752813626636 < sym__0___45_6351222752813626636 && (otherRec.sym__0___45_805067702695824989 < sym__0___45_805067702695824989 && (otherRec.sym__0__914509637812701046 < sym__0__914509637812701046 && (otherRec.sym__0__7895450651221174051 < sym__0__7895450651221174051 && (otherRec.sym__0__5942285589324576545 < sym__0__5942285589324576545 && (otherRec.sym__0__3979382234526804898 < sym__0__3979382234526804898 && (otherRec.sym__0___45_6103522369909819246 < sym__0___45_6103522369909819246 && (otherRec.sym__0__1873148039180761712 < sym__0__1873148039180761712 && (otherRec.sym__0__1430551526674366102 < sym__0__1430551526674366102 && (otherRec.sym__0__1048818672001592248 < sym__0__1048818672001592248 && (otherRec.sym__0__5723353836447658492 < sym__0__5723353836447658492 && (otherRec.sym__0___45_2233273278156881105 < sym__0___45_2233273278156881105 && (otherRec.sym__0___45_1120880788595637835 < sym__0___45_1120880788595637835 && (otherRec.sym__0___45_6361490230660137987 < sym__0___45_6361490230660137987 && (otherRec.sym__0___45_7131249874638266788 < sym__0___45_7131249874638266788 && (otherRec.sym__0__7265729621635359692 < sym__0__7265729621635359692 && (otherRec.sym__0___45_2986035740159621374 < sym__0___45_2986035740159621374 && (otherRec.sym__0__5081664509798388941 < sym__0__5081664509798388941 && (otherRec.sym__0___45_8518596434939314413 < sym__0___45_8518596434939314413 && (otherRec.sym__0__1988221653138390749 < sym__0__1988221653138390749 && (otherRec.sym__0___45_8801377200944175068 < sym__0___45_8801377200944175068 && (otherRec.sym__0___45_4634183629139578121 < sym__0___45_4634183629139578121 && (otherRec.sym__0__806472603637564420 < sym__0__806472603637564420 && (otherRec.sym__0__1725829484083430844 < sym__0__1725829484083430844 && (otherRec.sym__0___45_5279274827282678566 < sym__0___45_5279274827282678566 && (otherRec.sym__0___45_9129247388617675603 < sym__0___45_9129247388617675603 && (otherRec.sym__0__1232225844204183080 < sym__0__1232225844204183080 && (otherRec.sym__0__9184663680502119984 < sym__0__9184663680502119984 && (otherRec.sym__0___45_9023997483659527503 < sym__0___45_9023997483659527503 && (otherRec.sym__0___45_1026604631201554135 < sym__0___45_1026604631201554135 && otherRec.sym__0___45_7189754320372197989 < sym__0___45_7189754320372197989))))))))))))))))))))))))))))))))))))))));
  }
  bool operator ==(const Record7& otherRec) const{
    return (otherRec.sym__0__2102316481828394123 == sym__0__2102316481828394123 && (otherRec.sym__0__1780257040091145452 == sym__0__1780257040091145452 && (otherRec.sym__0__3109939911660640430 == sym__0__3109939911660640430 && (otherRec.sym__0___45_2175199227983174320 == sym__0___45_2175199227983174320 && (otherRec.sym__0__2274992661292194562 == sym__0__2274992661292194562 && (otherRec.sym__0___45_52536403880094569 == sym__0___45_52536403880094569 && (otherRec.sym__0__8474116574285927276 == sym__0__8474116574285927276 && (otherRec.sym__0__1835503384076924528 == sym__0__1835503384076924528 && (otherRec.sym__0__586412267723269786 == sym__0__586412267723269786 && (otherRec.sym__0__1353367320182642978 == sym__0__1353367320182642978 && (otherRec.sym__0___45_6351222752813626636 == sym__0___45_6351222752813626636 && (otherRec.sym__0___45_805067702695824989 == sym__0___45_805067702695824989 && (otherRec.sym__0__914509637812701046 == sym__0__914509637812701046 && (otherRec.sym__0__7895450651221174051 == sym__0__7895450651221174051 && (otherRec.sym__0__5942285589324576545 == sym__0__5942285589324576545 && (otherRec.sym__0__3979382234526804898 == sym__0__3979382234526804898 && (otherRec.sym__0___45_6103522369909819246 == sym__0___45_6103522369909819246 && (otherRec.sym__0__1873148039180761712 == sym__0__1873148039180761712 && (otherRec.sym__0__1430551526674366102 == sym__0__1430551526674366102 && (otherRec.sym__0__1048818672001592248 == sym__0__1048818672001592248 && (otherRec.sym__0__5723353836447658492 == sym__0__5723353836447658492 && (otherRec.sym__0___45_2233273278156881105 == sym__0___45_2233273278156881105 && (otherRec.sym__0___45_1120880788595637835 == sym__0___45_1120880788595637835 && (otherRec.sym__0___45_6361490230660137987 == sym__0___45_6361490230660137987 && (otherRec.sym__0___45_7131249874638266788 == sym__0___45_7131249874638266788 && (otherRec.sym__0__7265729621635359692 == sym__0__7265729621635359692 && (otherRec.sym__0___45_2986035740159621374 == sym__0___45_2986035740159621374 && (otherRec.sym__0__5081664509798388941 == sym__0__5081664509798388941 && (otherRec.sym__0___45_8518596434939314413 == sym__0___45_8518596434939314413 && (otherRec.sym__0__1988221653138390749 == sym__0__1988221653138390749 && (otherRec.sym__0___45_8801377200944175068 == sym__0___45_8801377200944175068 && (otherRec.sym__0___45_4634183629139578121 == sym__0___45_4634183629139578121 && (otherRec.sym__0__806472603637564420 == sym__0__806472603637564420 && (otherRec.sym__0__1725829484083430844 == sym__0__1725829484083430844 && (otherRec.sym__0___45_5279274827282678566 == sym__0___45_5279274827282678566 && (otherRec.sym__0___45_9129247388617675603 == sym__0___45_9129247388617675603 && (otherRec.sym__0__1232225844204183080 == sym__0__1232225844204183080 && (otherRec.sym__0__9184663680502119984 == sym__0__9184663680502119984 && (otherRec.sym__0___45_9023997483659527503 == sym__0___45_9023997483659527503 && (otherRec.sym__0___45_1026604631201554135 == sym__0___45_1026604631201554135 && otherRec.sym__0___45_7189754320372197989 == sym__0___45_7189754320372197989))))))))))))))))))))))))))))))))))))))));
  }
  bool operator !=(const Record7& otherRec) const{
    return (otherRec.sym__0__2102316481828394123 != sym__0__2102316481828394123 || (otherRec.sym__0__1780257040091145452 != sym__0__1780257040091145452 || (otherRec.sym__0__3109939911660640430 != sym__0__3109939911660640430 || (otherRec.sym__0___45_2175199227983174320 != sym__0___45_2175199227983174320 || (otherRec.sym__0__2274992661292194562 != sym__0__2274992661292194562 || (otherRec.sym__0___45_52536403880094569 != sym__0___45_52536403880094569 || (otherRec.sym__0__8474116574285927276 != sym__0__8474116574285927276 || (otherRec.sym__0__1835503384076924528 != sym__0__1835503384076924528 || (otherRec.sym__0__586412267723269786 != sym__0__586412267723269786 || (otherRec.sym__0__1353367320182642978 != sym__0__1353367320182642978 || (otherRec.sym__0___45_6351222752813626636 != sym__0___45_6351222752813626636 || (otherRec.sym__0___45_805067702695824989 != sym__0___45_805067702695824989 || (otherRec.sym__0__914509637812701046 != sym__0__914509637812701046 || (otherRec.sym__0__7895450651221174051 != sym__0__7895450651221174051 || (otherRec.sym__0__5942285589324576545 != sym__0__5942285589324576545 || (otherRec.sym__0__3979382234526804898 != sym__0__3979382234526804898 || (otherRec.sym__0___45_6103522369909819246 != sym__0___45_6103522369909819246 || (otherRec.sym__0__1873148039180761712 != sym__0__1873148039180761712 || (otherRec.sym__0__1430551526674366102 != sym__0__1430551526674366102 || (otherRec.sym__0__1048818672001592248 != sym__0__1048818672001592248 || (otherRec.sym__0__5723353836447658492 != sym__0__5723353836447658492 || (otherRec.sym__0___45_2233273278156881105 != sym__0___45_2233273278156881105 || (otherRec.sym__0___45_1120880788595637835 != sym__0___45_1120880788595637835 || (otherRec.sym__0___45_6361490230660137987 != sym__0___45_6361490230660137987 || (otherRec.sym__0___45_7131249874638266788 != sym__0___45_7131249874638266788 || (otherRec.sym__0__7265729621635359692 != sym__0__7265729621635359692 || (otherRec.sym__0___45_2986035740159621374 != sym__0___45_2986035740159621374 || (otherRec.sym__0__5081664509798388941 != sym__0__5081664509798388941 || (otherRec.sym__0___45_8518596434939314413 != sym__0___45_8518596434939314413 || (otherRec.sym__0__1988221653138390749 != sym__0__1988221653138390749 || (otherRec.sym__0___45_8801377200944175068 != sym__0___45_8801377200944175068 || (otherRec.sym__0___45_4634183629139578121 != sym__0___45_4634183629139578121 || (otherRec.sym__0__806472603637564420 != sym__0__806472603637564420 || (otherRec.sym__0__1725829484083430844 != sym__0__1725829484083430844 || (otherRec.sym__0___45_5279274827282678566 != sym__0___45_5279274827282678566 || (otherRec.sym__0___45_9129247388617675603 != sym__0___45_9129247388617675603 || (otherRec.sym__0__1232225844204183080 != sym__0__1232225844204183080 || (otherRec.sym__0__9184663680502119984 != sym__0__9184663680502119984 || (otherRec.sym__0___45_9023997483659527503 != sym__0___45_9023997483659527503 || (otherRec.sym__0___45_1026604631201554135 != sym__0___45_1026604631201554135 || otherRec.sym__0___45_7189754320372197989 != sym__0___45_7189754320372197989))))))))))))))))))))))))))))))))))))))));
  }
  unsigned sym__0__2102316481828394123;
  fluidb_string<25> sym__0__1780257040091145452;
  fluidb_string<40> sym__0__3109939911660640430;
  fluidb_string<16> sym__0___45_2175199227983174320;
  fluidb_string<16> sym__0__2274992661292194562;
  fluidb_string<13> sym__0___45_52536403880094569;
  fluidb_string<15> sym__0__8474116574285927276;
  unsigned sym__0__1835503384076924528;
  int sym__0__586412267723269786;
  unsigned sym__0__1353367320182642978;
  unsigned sym__0___45_6351222752813626636;
  unsigned sym__0___45_805067702695824989;
  unsigned sym__0__914509637812701046;
  fluidb_string<21> sym__0__7895450651221174051;
  unsigned sym__0__5942285589324576545;
  fluidb_string<10> sym__0__3979382234526804898;
  unsigned sym__0___45_6103522369909819246;
  double sym__0__1873148039180761712;
  unsigned sym__0__1430551526674366102;
  double sym__0__1048818672001592248;
  unsigned sym__0__5723353836447658492;
  unsigned sym__0___45_2233273278156881105;
  double sym__0___45_1120880788595637835;
  fluidb_string<13> sym__0___45_6361490230660137987;
  unsigned sym__0___45_7131249874638266788;
  fluidb_string<18> sym__0__7265729621635359692;
  fluidb_string<9> sym__0___45_2986035740159621374;
  fluidb_string<9> sym__0__5081664509798388941;
  unsigned sym__0___45_8518596434939314413;
  unsigned sym__0__1988221653138390749;
  fluidb_string<7> sym__0___45_8801377200944175068;
  unsigned sym__0___45_4634183629139578121;
  unsigned sym__0__806472603637564420;
  unsigned sym__0__1725829484083430844;
  unsigned sym__0___45_5279274827282678566;
  unsigned sym__0___45_9129247388617675603;
  fluidb_string<15> sym__0__1232225844204183080;
  fluidb_string<2> sym__0__9184663680502119984;
  fluidb_string<2> sym__0___45_9023997483659527503;
  fluidb_string<2> sym__0___45_1026604631201554135;
  fluidb_string<2> sym__0___45_7189754320372197989;
 private:
};


class Record28 {
 public:
  Record28(unsigned __sym__0__5815298749085454264, fluidb_string<25> __sym__0___45_187853543104112493, fluidb_string<40> __sym__0__2420687535941664385, fluidb_string<16> __sym__0__4477649291676147583, fluidb_string<16> __sym__0__2189719863455180669, fluidb_string<13> __sym__0__8705781355133349820, fluidb_string<15> __sym__0__5920417107371896339, unsigned __sym__0___45_8603710849146098913, int __sym__0__3108197105187943573, unsigned __sym__0__1471073020984475165, unsigned __sym__0___45_8587057113263620645, unsigned __sym__0___45_7612482550212481200, unsigned __sym__0__5940805710100175753, fluidb_string<21> __sym__0___45_7917680279794819632, unsigned __sym__0___45_109458199031938022, fluidb_string<10> __sym__0___45_6775477052043340899, unsigned __sym__0__2304026274286904813, double __sym__0___45_8438407661715486945, unsigned __sym__0___45_3161689554628477783, double __sym__0___45_3792908231071523705, unsigned __sym__0___45_8577466499877621885, unsigned __sym__0___45_5365932790942718700, double __sym__0__7361433258596063622, fluidb_string<13> __sym__0__6654076012167710478, unsigned __sym__0__884929250591303267, fluidb_string<18> __sym__0__1219037412210779379, fluidb_string<9> __sym__0___45_6427166665298314371, fluidb_string<9> __sym__0__3370458595279143678, unsigned __sym__0__3899889729561069024, unsigned __sym__0__981703446517038318, fluidb_string<7> __sym__0___45_5737434281439234005, unsigned __sym__0__5982207456601091740, unsigned __sym__0___45_2146537049713559413, unsigned __sym__0___45_5638662813606937789, unsigned __sym__0___45_6578196236000175403, unsigned __sym__0__4564348577765208542, fluidb_string<15> __sym__0___45_9208970018118793705, fluidb_string<2> __sym__0___45_3621983256924822817, fluidb_string<2> __sym__0__9086621038033799114, fluidb_string<2> __sym__0___45_6969774507317379774, fluidb_string<2> __sym__0___45_3310230863493910872, unsigned __sym__0__2496652614549099437, fluidb_string<55> __sym__0__1176040178443419997, fluidb_string<25> __sym__0__3523869508697006410, fluidb_string<7> __sym__0___45_7202667274246906360, fluidb_string<10> __sym__0__273796598370424826, fluidb_string<11> __sym__0__7052106309074214262, fluidb_string<25> __sym__0__7080216045730989244, unsigned __sym__0__695916005960808199, fluidb_string<10> __sym__0___45_5283370829792124454) : sym__0__5815298749085454264(__sym__0__5815298749085454264), sym__0___45_187853543104112493(__sym__0___45_187853543104112493), sym__0__2420687535941664385(__sym__0__2420687535941664385), sym__0__4477649291676147583(__sym__0__4477649291676147583), sym__0__2189719863455180669(__sym__0__2189719863455180669), sym__0__8705781355133349820(__sym__0__8705781355133349820), sym__0__5920417107371896339(__sym__0__5920417107371896339), sym__0___45_8603710849146098913(__sym__0___45_8603710849146098913), sym__0__3108197105187943573(__sym__0__3108197105187943573), sym__0__1471073020984475165(__sym__0__1471073020984475165), sym__0___45_8587057113263620645(__sym__0___45_8587057113263620645), sym__0___45_7612482550212481200(__sym__0___45_7612482550212481200), sym__0__5940805710100175753(__sym__0__5940805710100175753), sym__0___45_7917680279794819632(__sym__0___45_7917680279794819632), sym__0___45_109458199031938022(__sym__0___45_109458199031938022), sym__0___45_6775477052043340899(__sym__0___45_6775477052043340899), sym__0__2304026274286904813(__sym__0__2304026274286904813), sym__0___45_8438407661715486945(__sym__0___45_8438407661715486945), sym__0___45_3161689554628477783(__sym__0___45_3161689554628477783), sym__0___45_3792908231071523705(__sym__0___45_3792908231071523705), sym__0___45_8577466499877621885(__sym__0___45_8577466499877621885), sym__0___45_5365932790942718700(__sym__0___45_5365932790942718700), sym__0__7361433258596063622(__sym__0__7361433258596063622), sym__0__6654076012167710478(__sym__0__6654076012167710478), sym__0__884929250591303267(__sym__0__884929250591303267), sym__0__1219037412210779379(__sym__0__1219037412210779379), sym__0___45_6427166665298314371(__sym__0___45_6427166665298314371), sym__0__3370458595279143678(__sym__0__3370458595279143678), sym__0__3899889729561069024(__sym__0__3899889729561069024), sym__0__981703446517038318(__sym__0__981703446517038318), sym__0___45_5737434281439234005(__sym__0___45_5737434281439234005), sym__0__5982207456601091740(__sym__0__5982207456601091740), sym__0___45_2146537049713559413(__sym__0___45_2146537049713559413), sym__0___45_5638662813606937789(__sym__0___45_5638662813606937789), sym__0___45_6578196236000175403(__sym__0___45_6578196236000175403), sym__0__4564348577765208542(__sym__0__4564348577765208542), sym__0___45_9208970018118793705(__sym__0___45_9208970018118793705), sym__0___45_3621983256924822817(__sym__0___45_3621983256924822817), sym__0__9086621038033799114(__sym__0__9086621038033799114), sym__0___45_6969774507317379774(__sym__0___45_6969774507317379774), sym__0___45_3310230863493910872(__sym__0___45_3310230863493910872), sym__0__2496652614549099437(__sym__0__2496652614549099437), sym__0__1176040178443419997(__sym__0__1176040178443419997), sym__0__3523869508697006410(__sym__0__3523869508697006410), sym__0___45_7202667274246906360(__sym__0___45_7202667274246906360), sym__0__273796598370424826(__sym__0__273796598370424826), sym__0__7052106309074214262(__sym__0__7052106309074214262), sym__0__7080216045730989244(__sym__0__7080216045730989244), sym__0__695916005960808199(__sym__0__695916005960808199), sym__0___45_5283370829792124454(__sym__0___45_5283370829792124454)
  {
  }
  Record28() 
  {
  }
  std::string show() const{
    std::stringstream o;
    o << sym__0__5815298749085454264 << " | " << arrToString(sym__0___45_187853543104112493) << " | " << arrToString(sym__0__2420687535941664385) << " | " << arrToString(sym__0__4477649291676147583) << " | " << arrToString(sym__0__2189719863455180669) << " | " << arrToString(sym__0__8705781355133349820) << " | " << arrToString(sym__0__5920417107371896339) << " | " << sym__0___45_8603710849146098913 << " | " << sym__0__3108197105187943573 << " | " << sym__0__1471073020984475165 << " | " << sym__0___45_8587057113263620645 << " | " << sym__0___45_7612482550212481200 << " | " << sym__0__5940805710100175753 << " | " << arrToString(sym__0___45_7917680279794819632) << " | " << sym__0___45_109458199031938022 << " | " << arrToString(sym__0___45_6775477052043340899) << " | " << sym__0__2304026274286904813 << " | " << sym__0___45_8438407661715486945 << " | " << sym__0___45_3161689554628477783 << " | " << sym__0___45_3792908231071523705 << " | " << sym__0___45_8577466499877621885 << " | " << sym__0___45_5365932790942718700 << " | " << sym__0__7361433258596063622 << " | " << arrToString(sym__0__6654076012167710478) << " | " << sym__0__884929250591303267 << " | " << arrToString(sym__0__1219037412210779379) << " | " << arrToString(sym__0___45_6427166665298314371) << " | " << arrToString(sym__0__3370458595279143678) << " | " << sym__0__3899889729561069024 << " | " << sym__0__981703446517038318 << " | " << arrToString(sym__0___45_5737434281439234005) << " | " << sym__0__5982207456601091740 << " | " << sym__0___45_2146537049713559413 << " | " << sym__0___45_5638662813606937789 << " | " << sym__0___45_6578196236000175403 << " | " << sym__0__4564348577765208542 << " | " << arrToString(sym__0___45_9208970018118793705) << " | " << arrToString(sym__0___45_3621983256924822817) << " | " << arrToString(sym__0__9086621038033799114) << " | " << arrToString(sym__0___45_6969774507317379774) << " | " << arrToString(sym__0___45_3310230863493910872) << " | " << sym__0__2496652614549099437 << " | " << arrToString(sym__0__1176040178443419997) << " | " << arrToString(sym__0__3523869508697006410) << " | " << arrToString(sym__0___45_7202667274246906360) << " | " << arrToString(sym__0__273796598370424826) << " | " << arrToString(sym__0__7052106309074214262) << " | " << arrToString(sym__0__7080216045730989244) << " | " << sym__0__695916005960808199 << " | " << arrToString(sym__0___45_5283370829792124454);
    return o.str();
  }
  bool operator <(const Record28& otherRec) const{
    return (otherRec.sym__0__5815298749085454264 < sym__0__5815298749085454264 && (otherRec.sym__0___45_187853543104112493 < sym__0___45_187853543104112493 && (otherRec.sym__0__2420687535941664385 < sym__0__2420687535941664385 && (otherRec.sym__0__4477649291676147583 < sym__0__4477649291676147583 && (otherRec.sym__0__2189719863455180669 < sym__0__2189719863455180669 && (otherRec.sym__0__8705781355133349820 < sym__0__8705781355133349820 && (otherRec.sym__0__5920417107371896339 < sym__0__5920417107371896339 && (otherRec.sym__0___45_8603710849146098913 < sym__0___45_8603710849146098913 && (otherRec.sym__0__3108197105187943573 < sym__0__3108197105187943573 && (otherRec.sym__0__1471073020984475165 < sym__0__1471073020984475165 && (otherRec.sym__0___45_8587057113263620645 < sym__0___45_8587057113263620645 && (otherRec.sym__0___45_7612482550212481200 < sym__0___45_7612482550212481200 && (otherRec.sym__0__5940805710100175753 < sym__0__5940805710100175753 && (otherRec.sym__0___45_7917680279794819632 < sym__0___45_7917680279794819632 && (otherRec.sym__0___45_109458199031938022 < sym__0___45_109458199031938022 && (otherRec.sym__0___45_6775477052043340899 < sym__0___45_6775477052043340899 && (otherRec.sym__0__2304026274286904813 < sym__0__2304026274286904813 && (otherRec.sym__0___45_8438407661715486945 < sym__0___45_8438407661715486945 && (otherRec.sym__0___45_3161689554628477783 < sym__0___45_3161689554628477783 && (otherRec.sym__0___45_3792908231071523705 < sym__0___45_3792908231071523705 && (otherRec.sym__0___45_8577466499877621885 < sym__0___45_8577466499877621885 && (otherRec.sym__0___45_5365932790942718700 < sym__0___45_5365932790942718700 && (otherRec.sym__0__7361433258596063622 < sym__0__7361433258596063622 && (otherRec.sym__0__6654076012167710478 < sym__0__6654076012167710478 && (otherRec.sym__0__884929250591303267 < sym__0__884929250591303267 && (otherRec.sym__0__1219037412210779379 < sym__0__1219037412210779379 && (otherRec.sym__0___45_6427166665298314371 < sym__0___45_6427166665298314371 && (otherRec.sym__0__3370458595279143678 < sym__0__3370458595279143678 && (otherRec.sym__0__3899889729561069024 < sym__0__3899889729561069024 && (otherRec.sym__0__981703446517038318 < sym__0__981703446517038318 && (otherRec.sym__0___45_5737434281439234005 < sym__0___45_5737434281439234005 && (otherRec.sym__0__5982207456601091740 < sym__0__5982207456601091740 && (otherRec.sym__0___45_2146537049713559413 < sym__0___45_2146537049713559413 && (otherRec.sym__0___45_5638662813606937789 < sym__0___45_5638662813606937789 && (otherRec.sym__0___45_6578196236000175403 < sym__0___45_6578196236000175403 && (otherRec.sym__0__4564348577765208542 < sym__0__4564348577765208542 && (otherRec.sym__0___45_9208970018118793705 < sym__0___45_9208970018118793705 && (otherRec.sym__0___45_3621983256924822817 < sym__0___45_3621983256924822817 && (otherRec.sym__0__9086621038033799114 < sym__0__9086621038033799114 && (otherRec.sym__0___45_6969774507317379774 < sym__0___45_6969774507317379774 && (otherRec.sym__0___45_3310230863493910872 < sym__0___45_3310230863493910872 && (otherRec.sym__0__2496652614549099437 < sym__0__2496652614549099437 && (otherRec.sym__0__1176040178443419997 < sym__0__1176040178443419997 && (otherRec.sym__0__3523869508697006410 < sym__0__3523869508697006410 && (otherRec.sym__0___45_7202667274246906360 < sym__0___45_7202667274246906360 && (otherRec.sym__0__273796598370424826 < sym__0__273796598370424826 && (otherRec.sym__0__7052106309074214262 < sym__0__7052106309074214262 && (otherRec.sym__0__7080216045730989244 < sym__0__7080216045730989244 && (otherRec.sym__0__695916005960808199 < sym__0__695916005960808199 && otherRec.sym__0___45_5283370829792124454 < sym__0___45_5283370829792124454)))))))))))))))))))))))))))))))))))))))))))))))));
  }
  bool operator ==(const Record28& otherRec) const{
    return (otherRec.sym__0__5815298749085454264 == sym__0__5815298749085454264 && (otherRec.sym__0___45_187853543104112493 == sym__0___45_187853543104112493 && (otherRec.sym__0__2420687535941664385 == sym__0__2420687535941664385 && (otherRec.sym__0__4477649291676147583 == sym__0__4477649291676147583 && (otherRec.sym__0__2189719863455180669 == sym__0__2189719863455180669 && (otherRec.sym__0__8705781355133349820 == sym__0__8705781355133349820 && (otherRec.sym__0__5920417107371896339 == sym__0__5920417107371896339 && (otherRec.sym__0___45_8603710849146098913 == sym__0___45_8603710849146098913 && (otherRec.sym__0__3108197105187943573 == sym__0__3108197105187943573 && (otherRec.sym__0__1471073020984475165 == sym__0__1471073020984475165 && (otherRec.sym__0___45_8587057113263620645 == sym__0___45_8587057113263620645 && (otherRec.sym__0___45_7612482550212481200 == sym__0___45_7612482550212481200 && (otherRec.sym__0__5940805710100175753 == sym__0__5940805710100175753 && (otherRec.sym__0___45_7917680279794819632 == sym__0___45_7917680279794819632 && (otherRec.sym__0___45_109458199031938022 == sym__0___45_109458199031938022 && (otherRec.sym__0___45_6775477052043340899 == sym__0___45_6775477052043340899 && (otherRec.sym__0__2304026274286904813 == sym__0__2304026274286904813 && (otherRec.sym__0___45_8438407661715486945 == sym__0___45_8438407661715486945 && (otherRec.sym__0___45_3161689554628477783 == sym__0___45_3161689554628477783 && (otherRec.sym__0___45_3792908231071523705 == sym__0___45_3792908231071523705 && (otherRec.sym__0___45_8577466499877621885 == sym__0___45_8577466499877621885 && (otherRec.sym__0___45_5365932790942718700 == sym__0___45_5365932790942718700 && (otherRec.sym__0__7361433258596063622 == sym__0__7361433258596063622 && (otherRec.sym__0__6654076012167710478 == sym__0__6654076012167710478 && (otherRec.sym__0__884929250591303267 == sym__0__884929250591303267 && (otherRec.sym__0__1219037412210779379 == sym__0__1219037412210779379 && (otherRec.sym__0___45_6427166665298314371 == sym__0___45_6427166665298314371 && (otherRec.sym__0__3370458595279143678 == sym__0__3370458595279143678 && (otherRec.sym__0__3899889729561069024 == sym__0__3899889729561069024 && (otherRec.sym__0__981703446517038318 == sym__0__981703446517038318 && (otherRec.sym__0___45_5737434281439234005 == sym__0___45_5737434281439234005 && (otherRec.sym__0__5982207456601091740 == sym__0__5982207456601091740 && (otherRec.sym__0___45_2146537049713559413 == sym__0___45_2146537049713559413 && (otherRec.sym__0___45_5638662813606937789 == sym__0___45_5638662813606937789 && (otherRec.sym__0___45_6578196236000175403 == sym__0___45_6578196236000175403 && (otherRec.sym__0__4564348577765208542 == sym__0__4564348577765208542 && (otherRec.sym__0___45_9208970018118793705 == sym__0___45_9208970018118793705 && (otherRec.sym__0___45_3621983256924822817 == sym__0___45_3621983256924822817 && (otherRec.sym__0__9086621038033799114 == sym__0__9086621038033799114 && (otherRec.sym__0___45_6969774507317379774 == sym__0___45_6969774507317379774 && (otherRec.sym__0___45_3310230863493910872 == sym__0___45_3310230863493910872 && (otherRec.sym__0__2496652614549099437 == sym__0__2496652614549099437 && (otherRec.sym__0__1176040178443419997 == sym__0__1176040178443419997 && (otherRec.sym__0__3523869508697006410 == sym__0__3523869508697006410 && (otherRec.sym__0___45_7202667274246906360 == sym__0___45_7202667274246906360 && (otherRec.sym__0__273796598370424826 == sym__0__273796598370424826 && (otherRec.sym__0__7052106309074214262 == sym__0__7052106309074214262 && (otherRec.sym__0__7080216045730989244 == sym__0__7080216045730989244 && (otherRec.sym__0__695916005960808199 == sym__0__695916005960808199 && otherRec.sym__0___45_5283370829792124454 == sym__0___45_5283370829792124454)))))))))))))))))))))))))))))))))))))))))))))))));
  }
  bool operator !=(const Record28& otherRec) const{
    return (otherRec.sym__0__5815298749085454264 != sym__0__5815298749085454264 || (otherRec.sym__0___45_187853543104112493 != sym__0___45_187853543104112493 || (otherRec.sym__0__2420687535941664385 != sym__0__2420687535941664385 || (otherRec.sym__0__4477649291676147583 != sym__0__4477649291676147583 || (otherRec.sym__0__2189719863455180669 != sym__0__2189719863455180669 || (otherRec.sym__0__8705781355133349820 != sym__0__8705781355133349820 || (otherRec.sym__0__5920417107371896339 != sym__0__5920417107371896339 || (otherRec.sym__0___45_8603710849146098913 != sym__0___45_8603710849146098913 || (otherRec.sym__0__3108197105187943573 != sym__0__3108197105187943573 || (otherRec.sym__0__1471073020984475165 != sym__0__1471073020984475165 || (otherRec.sym__0___45_8587057113263620645 != sym__0___45_8587057113263620645 || (otherRec.sym__0___45_7612482550212481200 != sym__0___45_7612482550212481200 || (otherRec.sym__0__5940805710100175753 != sym__0__5940805710100175753 || (otherRec.sym__0___45_7917680279794819632 != sym__0___45_7917680279794819632 || (otherRec.sym__0___45_109458199031938022 != sym__0___45_109458199031938022 || (otherRec.sym__0___45_6775477052043340899 != sym__0___45_6775477052043340899 || (otherRec.sym__0__2304026274286904813 != sym__0__2304026274286904813 || (otherRec.sym__0___45_8438407661715486945 != sym__0___45_8438407661715486945 || (otherRec.sym__0___45_3161689554628477783 != sym__0___45_3161689554628477783 || (otherRec.sym__0___45_3792908231071523705 != sym__0___45_3792908231071523705 || (otherRec.sym__0___45_8577466499877621885 != sym__0___45_8577466499877621885 || (otherRec.sym__0___45_5365932790942718700 != sym__0___45_5365932790942718700 || (otherRec.sym__0__7361433258596063622 != sym__0__7361433258596063622 || (otherRec.sym__0__6654076012167710478 != sym__0__6654076012167710478 || (otherRec.sym__0__884929250591303267 != sym__0__884929250591303267 || (otherRec.sym__0__1219037412210779379 != sym__0__1219037412210779379 || (otherRec.sym__0___45_6427166665298314371 != sym__0___45_6427166665298314371 || (otherRec.sym__0__3370458595279143678 != sym__0__3370458595279143678 || (otherRec.sym__0__3899889729561069024 != sym__0__3899889729561069024 || (otherRec.sym__0__981703446517038318 != sym__0__981703446517038318 || (otherRec.sym__0___45_5737434281439234005 != sym__0___45_5737434281439234005 || (otherRec.sym__0__5982207456601091740 != sym__0__5982207456601091740 || (otherRec.sym__0___45_2146537049713559413 != sym__0___45_2146537049713559413 || (otherRec.sym__0___45_5638662813606937789 != sym__0___45_5638662813606937789 || (otherRec.sym__0___45_6578196236000175403 != sym__0___45_6578196236000175403 || (otherRec.sym__0__4564348577765208542 != sym__0__4564348577765208542 || (otherRec.sym__0___45_9208970018118793705 != sym__0___45_9208970018118793705 || (otherRec.sym__0___45_3621983256924822817 != sym__0___45_3621983256924822817 || (otherRec.sym__0__9086621038033799114 != sym__0__9086621038033799114 || (otherRec.sym__0___45_6969774507317379774 != sym__0___45_6969774507317379774 || (otherRec.sym__0___45_3310230863493910872 != sym__0___45_3310230863493910872 || (otherRec.sym__0__2496652614549099437 != sym__0__2496652614549099437 || (otherRec.sym__0__1176040178443419997 != sym__0__1176040178443419997 || (otherRec.sym__0__3523869508697006410 != sym__0__3523869508697006410 || (otherRec.sym__0___45_7202667274246906360 != sym__0___45_7202667274246906360 || (otherRec.sym__0__273796598370424826 != sym__0__273796598370424826 || (otherRec.sym__0__7052106309074214262 != sym__0__7052106309074214262 || (otherRec.sym__0__7080216045730989244 != sym__0__7080216045730989244 || (otherRec.sym__0__695916005960808199 != sym__0__695916005960808199 || otherRec.sym__0___45_5283370829792124454 != sym__0___45_5283370829792124454)))))))))))))))))))))))))))))))))))))))))))))))));
  }
  unsigned sym__0__5815298749085454264;
  fluidb_string<25> sym__0___45_187853543104112493;
  fluidb_string<40> sym__0__2420687535941664385;
  fluidb_string<16> sym__0__4477649291676147583;
  fluidb_string<16> sym__0__2189719863455180669;
  fluidb_string<13> sym__0__8705781355133349820;
  fluidb_string<15> sym__0__5920417107371896339;
  unsigned sym__0___45_8603710849146098913;
  int sym__0__3108197105187943573;
  unsigned sym__0__1471073020984475165;
  unsigned sym__0___45_8587057113263620645;
  unsigned sym__0___45_7612482550212481200;
  unsigned sym__0__5940805710100175753;
  fluidb_string<21> sym__0___45_7917680279794819632;
  unsigned sym__0___45_109458199031938022;
  fluidb_string<10> sym__0___45_6775477052043340899;
  unsigned sym__0__2304026274286904813;
  double sym__0___45_8438407661715486945;
  unsigned sym__0___45_3161689554628477783;
  double sym__0___45_3792908231071523705;
  unsigned sym__0___45_8577466499877621885;
  unsigned sym__0___45_5365932790942718700;
  double sym__0__7361433258596063622;
  fluidb_string<13> sym__0__6654076012167710478;
  unsigned sym__0__884929250591303267;
  fluidb_string<18> sym__0__1219037412210779379;
  fluidb_string<9> sym__0___45_6427166665298314371;
  fluidb_string<9> sym__0__3370458595279143678;
  unsigned sym__0__3899889729561069024;
  unsigned sym__0__981703446517038318;
  fluidb_string<7> sym__0___45_5737434281439234005;
  unsigned sym__0__5982207456601091740;
  unsigned sym__0___45_2146537049713559413;
  unsigned sym__0___45_5638662813606937789;
  unsigned sym__0___45_6578196236000175403;
  unsigned sym__0__4564348577765208542;
  fluidb_string<15> sym__0___45_9208970018118793705;
  fluidb_string<2> sym__0___45_3621983256924822817;
  fluidb_string<2> sym__0__9086621038033799114;
  fluidb_string<2> sym__0___45_6969774507317379774;
  fluidb_string<2> sym__0___45_3310230863493910872;
  unsigned sym__0__2496652614549099437;
  fluidb_string<55> sym__0__1176040178443419997;
  fluidb_string<25> sym__0__3523869508697006410;
  fluidb_string<7> sym__0___45_7202667274246906360;
  fluidb_string<10> sym__0__273796598370424826;
  fluidb_string<11> sym__0__7052106309074214262;
  fluidb_string<25> sym__0__7080216045730989244;
  unsigned sym__0__695916005960808199;
  fluidb_string<10> sym__0___45_5283370829792124454;
 private:
};


class CallableClass26 {
 public:
  Record24 operator()(const Record25& record23) {
    return Record24(record23.sym__0__4141812305157790681, record23.sym__0___45_5159284013671774530, record23.sym__0__5929335199040604944, record23.sym__0__8980268860843798410, record23.sym__0__7438201141129884556, record23.sym__0__299964735226913069, record23.sym__0___45_274153224962620866, record23.sym__0___45_1704737576651497046, record23.sym__0___45_5364431335747194636, record23.sym__0___45_6670480666790360404, record23.sym__0__1035059097189397270, record23.sym__0___45_236567292019976639, record23.sym__0___45_4342072045869091480, record23.sym__0___45_48356416147601727, record23.sym__0___45_3530069934999759345, record23.sym__0___45_21272610088483796, record23.sym__0__8564866222464334588, record23.sym__0___45_744165813648595542, record23.sym__0__482146207611652104, record23.sym__0___45_2183093135728676926, record23.sym__0___45_1874278765651523026, record23.sym__0___45_7594691263183254603, record23.sym__0__3632680852047490635, record23.sym__0___45_7823346196563635997, record23.sym__0__5619860144531125902, record23.sym__0__5610665202265100958, record23.sym__0___45_9075663471338639476, record23.sym__0__4691788782750567507, record23.sym__0__7928058280817873233, record23.sym__0__6668222264524417219, record23.sym__0__2297426772070097766, record23.sym__0__3416485698032376717, record23.sym__0___45_1989902664282570938, record23.sym__0___45_8900398421048301202, record23.sym__0___45_3190388615181087052, record23.sym__0__617043931306359219, record23.sym__0___45_6132208035988097838, record23.sym__0___45_7131498866425802518, record23.sym__0__3212189690086512703, record23.sym__0___45_4551279862702652409, record23.sym__0__6400252650127444553, record23.sym__0__8989200694518734396, record23.sym__0__1879639780622030444, record23.sym__0__4679788483318910399, record23.sym__0___45_1519325191444557143, record23.sym__0__8808022150768814575, record23.sym__0__1615907806695898299, record23.sym__0__7902426149900564525, record23.sym__0__7538375850658612802, record23.sym__0__2838506290652474191);
  }
  typedef Record24 Codomain;
  typedef Record25 Domain0;
 private:
};


class CallableClass42 {
 public:
  Record39 operator()(const Record33& record41) {
    return Record39(record41.sym__0___45_6261698000977207925, record41.sym__0__1631598784897141641);
  }
  typedef Record39 Codomain;
  typedef Record33 Domain0;
 private:
};


class CallableClass38 {
 public:
  Record33 operator()(const Record35& record32) {
    return Record33(vAggrSum34(record32.sym__0__8598037934431251909), vAggrFirst36(record32.sym__0___45_2549139954849286782), vAggrFirst37(record32.sym__0___45_8628415396103686184));
  }
  typedef Record33 Codomain;
  typedef Record35 Domain0;
 private:
  AggrSum<unsigned> vAggrSum34;
  AggrFirst<unsigned> vAggrFirst36;
  AggrFirst<fluidb_string<10>> vAggrFirst37;
};


class CallableClass29 {
 public:
  Record24 operator()(const Record28& record27) {
    return Record24(record27.sym__0__5815298749085454264, record27.sym__0___45_187853543104112493, record27.sym__0__2420687535941664385, record27.sym__0__4477649291676147583, record27.sym__0__2189719863455180669, record27.sym__0__8705781355133349820, record27.sym__0__5920417107371896339, record27.sym__0___45_8603710849146098913, record27.sym__0__3108197105187943573, record27.sym__0__1471073020984475165, record27.sym__0___45_8587057113263620645, record27.sym__0___45_7612482550212481200, record27.sym__0__5940805710100175753, record27.sym__0___45_7917680279794819632, record27.sym__0___45_109458199031938022, record27.sym__0___45_6775477052043340899, record27.sym__0__2304026274286904813, record27.sym__0___45_8438407661715486945, record27.sym__0___45_3161689554628477783, record27.sym__0___45_3792908231071523705, record27.sym__0___45_8577466499877621885, record27.sym__0___45_5365932790942718700, record27.sym__0__7361433258596063622, record27.sym__0__6654076012167710478, record27.sym__0__884929250591303267, record27.sym__0__1219037412210779379, record27.sym__0___45_6427166665298314371, record27.sym__0__3370458595279143678, record27.sym__0__3899889729561069024, record27.sym__0__981703446517038318, record27.sym__0___45_5737434281439234005, record27.sym__0__5982207456601091740, record27.sym__0___45_2146537049713559413, record27.sym__0___45_5638662813606937789, record27.sym__0___45_6578196236000175403, record27.sym__0__4564348577765208542, record27.sym__0___45_9208970018118793705, record27.sym__0___45_3621983256924822817, record27.sym__0__9086621038033799114, record27.sym__0___45_6969774507317379774, record27.sym__0___45_3310230863493910872, record27.sym__0__2496652614549099437, record27.sym__0__1176040178443419997, record27.sym__0__3523869508697006410, record27.sym__0___45_7202667274246906360, record27.sym__0__273796598370424826, record27.sym__0__7052106309074214262, record27.sym__0__7080216045730989244, record27.sym__0__695916005960808199, record27.sym__0___45_5283370829792124454);
  }
  typedef Record24 Codomain;
  typedef Record28 Domain0;
 private:
};


class CallableClass3 {
 public:
  Record1 operator()(const Record2& record0) {
    return Record1(record0.sym__0___45_2544647080140891779, record0.sym__0___45_4581931629044260499, record0.sym__0__3511844764913402723, record0.sym__0__2581750769096843740, record0.sym__0___45_6031048599860414622, record0.sym__0__8084343433543173228, record0.sym__0___45_3664881058840515771, record0.sym__0___45_1924199962958349658, record0.sym__0__7769469128992998949, record0.sym__0__7818554603565865821, record0.sym__0__4360634980582143419, record0.sym__0___45_7492593539880285892, record0.sym__0__1706094538935295417, record0.sym__0__6114638120282452033, record0.sym__0___45_78261027814563536, record0.sym__0__2648420561950371368, record0.sym__0__3807806894063626346, record0.sym__0__3010211381236373125, record0.sym__0__3300613616795216173, record0.sym__0___45_3130123223234281513, record0.sym__0__8189415442579395633, record0.sym__0__3248231192614790363, record0.sym__0__1734593865430170446, record0.sym__0___45_8167422549222682195, record0.sym__0__2936268515493900473, record0.sym__0__2661490882974477953, record0.sym__0___45_6833151998909895557, record0.sym__0___45_6379152824683587325, record0.sym__0__3389381886574775957, record0.sym__0___45_3006394417042584462, record0.sym__0__5708853396861436519, record0.sym__0__2510302245253987058, record0.sym__0___45_8268616720440236384, record0.sym__0___45_2145747097567105917, record0.sym__0___45_6747202196090936717, record0.sym__0___45_980129616638612863, record0.sym__0__7935787287177824775, record0.sym__0___45_1765426731373793463, record0.sym__0__2312911666975909277, record0.sym__0__8713898721580785886, record0.sym__0__5274362417922015940, record0.sym__0___45_5950462958936866676, record0.sym__0__5599391359954735578, record0.sym__0__4014184007857207821, record0.sym__0___45_7146441527183610849, record0.sym__0___45_8891100078062559775, record0.sym__0___45_5365202057839317149, record0.sym__0__5177313860806756678, record0.sym__0___45_6139660049171508851);
  }
  typedef Record1 Codomain;
  typedef Record2 Domain0;
 private:
};


class CallableClass40 {
 public:
  Record39 operator()(const Record35& record32) {
    return Record39(record32.sym__0___45_2549139954849286782, record32.sym__0___45_8628415396103686184);
  }
  typedef Record39 Codomain;
  typedef Record35 Domain0;
 private:
};


class CallableClass31 {
 public:
  bool operator()(const Record24& record30) {
    return (like(record30.sym__0___45_8594673557260853450, "AMERICA") && like(record30.sym__0__603002359744084410, "MFGR#12"));
  }
  typedef bool Codomain;
  typedef Record24 Domain0;
 private:
};


class CallableClass8 {
 public:
  bool operator()(const Record7& record6) {
    return like(record6.sym__0___45_52536403880094569, "ASIA");
  }
  typedef bool Codomain;
  typedef Record7 Domain0;
 private:
};


class CallableClass13 {
 public:
  Record12 operator()(const Record11& record9, const Record4& record10) {
    return Record12(record9.sym__0__1700144450823265023, record9.sym__0__642977477037249040, record9.sym__0___45_4128377972278795822, record9.sym__0___45_5088627304821687252, record9.sym__0___45_4948625537612330786, record9.sym__0___45_9194700948435084701, record9.sym__0___45_2335925802980201584, record9.sym__0__8952961796666569484, record9.sym__0___45_764958528451264714, record9.sym__0___45_1817156327375219010, record9.sym__0___45_2837638767689209768, record9.sym__0___45_2981394887932269865, record9.sym__0___45_3207638480786881318, record9.sym__0___45_2706668038305292969, record9.sym__0___45_5698288034649371459, record9.sym__0___45_4860327901106131906, record9.sym__0__4990602831923261550, record9.sym__0__1941197998689785612, record9.sym__0__8920978217467339962, record9.sym__0__2290947992840979092, record9.sym__0__7968803792053807648, record9.sym__0___45_648214588708582661, record9.sym__0__5240005983315163865, record9.sym__0__8676547963641831009, record9.sym__0__7098358135655077312, record9.sym__0___45_3236172823121798352, record9.sym__0__209296758379513054, record9.sym__0__990102210371531505, record9.sym__0__6731021262741660999, record9.sym__0__43383544609224961, record9.sym__0___45_1451536826369255544, record9.sym__0___45_3626731045154418301, record9.sym__0__6266038698953764136, record9.sym__0___45_3178257250902948896, record9.sym__0___45_1707432467122892938, record9.sym__0__6803837608073687569, record9.sym__0__3019318186977723140, record9.sym__0___45_3182244727465674548, record9.sym__0__6970778392668530317, record9.sym__0__1291675427782851845, record9.sym__0___45_7095393819436573425, record10.sym__0__7178003535380331304, record10.sym__0___45_7020257275696364520, record10.sym__0___45_6307179734719967033, record10.sym__0__4568304886257136061, record10.sym__0___45_6291097039630000265, record10.sym__0__551327770031967739, record10.sym__0__3827696365022297353, record10.sym__0___45_1779543743759935870, record10.sym__0__3752090135924368535);
  }
  typedef Record12 Codomain;
  typedef Record11 Domain0;
  typedef Record4 Domain1;
 private:
};


class CallableClass5 {
 public:
  Record4 operator()(const Record2& record0) {
    return Record4(record0.sym__0__5600261570499839795, record0.sym__0__7033726162709406531, record0.sym__0___45_2028921051824210768, record0.sym__0__1510822012344354762, record0.sym__0___45_2462553484168592128, record0.sym__0__6826615390864986324, record0.sym__0__1653057618405204038, record0.sym__0__1042393484014954953, record0.sym__0___45_4797345940361177504);
  }
  typedef Record4 Codomain;
  typedef Record2 Domain0;
 private:
};


class CallableClass16 {
 public:
  Record14 operator()(const Record11& record15) {
    return Record14(record15.sym__0___45_2837638767689209768);
  }
  typedef Record14 Codomain;
  typedef Record11 Domain0;
 private:
};


class CallableClass20 {
 public:
  bool operator()(const Record12& record19) {
    return (("MFGR#2221" <= record19.sym__0___45_4574956228592531724) && (record19.sym__0___45_4574956228592531724 <= "MFGR#2228"));
  }
  typedef bool Codomain;
  typedef Record12 Domain0;
 private:
};


class CallableClass18 {
 public:
  Record14 operator()(const Record4& record17) {
    return Record14(record17.sym__0__7178003535380331304);
  }
  typedef Record14 Codomain;
  typedef Record4 Domain0;
 private:
};






int main() {
  // Delete: (Q1 
  //   (QGroup 
  //     [
  //      (
  //        ESym "revenue",
  //        E0 
  //           (NAggr 
  //             AggrSum 
  //             (E2 EMul 
  //                 (E0 (ESym "lo_extendedprice")) 
  //                 (E0 (ESym "lo_discount"))))
  //       )
  //     ] 
  //     []) 
  //   (S 
  //     (P2 
  //       PAnd 
  //       (P2 
  //         PAnd 
  //         (P2 
  //           PAnd 
  //           (P0 
  //             (R2 RLe (R0 (E0 (EInt 5))) (R0 (E0 (ESym "lo_discount"))))) 
  //           (P0 
  //             (R2 RLe (R0 (E0 (ESym "lo_discount"))) (R0 (E0 (EInt 7)))))) 
  //         (P0 (R2 RLe (R0 (E0 (EInt 26))) (R0 (E0 (ESym "lo_quantity")))))) 
  //       (P0 (R2 RLe (R0 (E0 (ESym "lo_quantity"))) (R0 (E0 (EInt 35)))))) 
  //     (J 
  //       (P0 
  //         (R2 REq 
  //             (R0 (E0 (ESym "lo_orderdate"))) 
  //             (R0 (E0 (ESym "d_datekey"))))) 
  //       (S 
  //         (P2 
  //           PAnd 
  //           (P0 
  //             (R2 REq 
  //                 (R0 (E0 (ESym "d_weeknuminyear"))) 
  //                 (R0 (E0 (EInt 6))))) 
  //           (P0 (R2 REq (R0 (E0 (ESym "d_year"))) (R0 (E0 (EInt 1994)))))) 
  //         (Q0 (TSymbol "date"))) 
  std::cout << "Delete: (Q1 \n  (QGroup \n    [\n     (\n       ESym \"revenue\",\n       E0 \n          (NAggr \n            AggrSum \n            (E2 EMul \n                (E0 (ESym \"lo_extendedprice\")) \n                (E0 (ESym \"lo_discount\"))))\n      )\n    ] \n    []) \n  (S \n    (P2 \n      PAnd \n      (P2 \n        PAnd \n        (P2 \n          PAnd \n          (P0 \n            (R2 RLe (R0 (E0 (EInt 5))) (R0 (E0 (ESym \"lo_discount\"))))) \n          (P0 \n            (R2 RLe (R0 (E0 (ESym \"lo_discount\"))) (R0 (E0 (EInt 7)))))) \n        (P0 (R2 RLe (R0 (E0 (EInt 26))) (R0 (E0 (ESym \"lo_quantity\")))))) \n      (P0 (R2 RLe (R0 (E0 (ESym \"lo_quantity\"))) (R0 (E0 (EInt 35)))))) \n    (J \n      (P0 \n        (R2 REq \n            (R0 (E0 (ESym \"lo_orderdate\"))) \n            (R0 (E0 (ESym \"d_datekey\"))))) \n      (S \n        (P2 \n          PAnd \n          (P0 \n            (R2 REq \n                (R0 (E0 (ESym \"d_weeknuminyear\"))) \n                (R0 (E0 (EInt 6))))) \n          (P0 (R2 REq (R0 (E0 (ESym \"d_year\"))) (R0 (E0 (EInt 1994)))))) \n        (Q0 (TSymbol \"date\"))) \n      (Q0 (TSymbol \"lineorder\")))))" << std::endl;
  deleteFile("/tmp/fluidb_store/data34.dat");
  // Delete: (S 
  //   (P2 
  //     PAnd 
  //     (P2 
  //       PAnd 
  //       (P2 PAnd 
  //           (P0 (R2 RLe (R0 (E0 (EInt 5))) (R0 (E0 (ESym "lo_discount"))))) 
  //           (P0 (R2 RLe (R0 (E0 (ESym "lo_discount"))) (R0 (E0 (EInt 7)))))) 
  //       (P0 (R2 RLe (R0 (E0 (EInt 26))) (R0 (E0 (ESym "lo_quantity")))))) 
  //     (P0 (R2 RLe (R0 (E0 (ESym "lo_quantity"))) (R0 (E0 (EInt 35)))))) 
  //   (J 
  //     (P0 
  //       (R2 REq 
  //           (R0 (E0 (ESym "lo_orderdate"))) 
  //           (R0 (E0 (ESym "d_datekey"))))) 
  //     (S 
  //       (P2 
  //         PAnd 
  //         (P0 
  //           (R2 REq (R0 (E0 (ESym "d_weeknuminyear"))) (R0 (E0 (EInt 6))))) 
  //         (P0 (R2 REq (R0 (E0 (ESym "d_year"))) (R0 (E0 (EInt 1994)))))) 
  //       (Q0 (TSymbol "date"))) 
  std::cout << "Delete: (S \n  (P2 \n    PAnd \n    (P2 \n      PAnd \n      (P2 PAnd \n          (P0 (R2 RLe (R0 (E0 (EInt 5))) (R0 (E0 (ESym \"lo_discount\"))))) \n          (P0 (R2 RLe (R0 (E0 (ESym \"lo_discount\"))) (R0 (E0 (EInt 7)))))) \n      (P0 (R2 RLe (R0 (E0 (EInt 26))) (R0 (E0 (ESym \"lo_quantity\")))))) \n    (P0 (R2 RLe (R0 (E0 (ESym \"lo_quantity\"))) (R0 (E0 (EInt 35)))))) \n  (J \n    (P0 \n      (R2 REq \n          (R0 (E0 (ESym \"lo_orderdate\"))) \n          (R0 (E0 (ESym \"d_datekey\"))))) \n    (S \n      (P2 \n        PAnd \n        (P0 \n          (R2 REq (R0 (E0 (ESym \"d_weeknuminyear\"))) (R0 (E0 (EInt 6))))) \n        (P0 (R2 REq (R0 (E0 (ESym \"d_year\"))) (R0 (E0 (EInt 1994)))))) \n      (Q0 (TSymbol \"date\"))) \n    (Q0 (TSymbol \"lineorder\"))))" << std::endl;
  deleteFile("/tmp/fluidb_store/data32.dat");
  // ReverseTrigger: (Just 
  //   (Left 
  //     [
  //      QJoin 
  //         (P0 
  //           (R2 REq 
  //               (R0 (E0 (ESym "lo_partkey"))) 
  //               (R0 (E0 (ESym "p_partkey")))))
  std::cout << "ReverseTrigger: (Just \n  (Left \n    [\n     QJoin \n        (P0 \n          (R2 REq \n              (R0 (E0 (ESym \"lo_partkey\"))) \n              (R0 (E0 (ESym \"p_partkey\")))))\n    ]))" << std::endl;
  {
    auto operation = mkUnJoin<CallableClass3, CallableClass5>(Just("/tmp/fluidb_store/data316.dat"), Nothing(), Just("/tmp/fluidb_store/data317.dat"), Nothing(), Just("/tmp/fluidb_store/data2.dat"));
    operation.run();
    operation.print_output(10);
  }
  // Delete: (Q2 
  //   (QLeftAntijoin 
  //     (P0 
  //       (R2 REq 
  //           (R0 (E0 (ESym "lo_orderdate"))) 
  //           (R0 (E0 (ESym "d_datekey")))))) 
  //   (S 
  //     (P0 
  //       (R2 REq (R0 (E0 (ESym "d_yearmonthnum"))) (R0 (E0 (EInt 199401))))) 
  //     (Q0 (TSymbol "date"))) 
  std::cout << "Delete: (Q2 \n  (QLeftAntijoin \n    (P0 \n      (R2 REq \n          (R0 (E0 (ESym \"lo_orderdate\"))) \n          (R0 (E0 (ESym \"d_datekey\")))))) \n  (S \n    (P0 \n      (R2 REq (R0 (E0 (ESym \"d_yearmonthnum\"))) (R0 (E0 (EInt 199401))))) \n    (Q0 (TSymbol \"date\"))) \n  (Q0 (TSymbol \"lineorder\")))" << std::endl;
  deleteFile("/tmp/fluidb_store/data7.dat");
  std::cout << "Delete: (Q0 (TSymbol \"lineorder\"))" << std::endl;
  deleteFile("/tmp/fluidb_store/data0.dat");
  // Delete: (S (P0 (R2 REq (R0 (E0 (ESym "d_yearmonthnum"))) (R0 (E0 (EInt 199401))))) 
  std::cout << "Delete: (S (P0 (R2 REq (R0 (E0 (ESym \"d_yearmonthnum\"))) (R0 (E0 (EInt 199401))))) \n   (Q0 (TSymbol \"date\")))" << std::endl;
  deleteFile("/tmp/fluidb_store/data5.dat");
  // Delete: (S 
  //   (P1 
  //     PNot 
  //     (P2 
  //       PAnd 
  //       (P2 
  //         PAnd 
  //         (P2 
  //           PAnd 
  //           (P0 
  //             (R2 RLe (R0 (E0 (EInt 4))) (R0 (E0 (ESym "lo_discount"))))) 
  //           (P0 
  //             (R2 RLe (R0 (E0 (ESym "lo_discount"))) (R0 (E0 (EInt 6)))))) 
  //         (P0 (R2 RLe (R0 (E0 (EInt 26))) (R0 (E0 (ESym "lo_quantity")))))) 
  //       (P0 (R2 RLe (R0 (E0 (ESym "lo_quantity"))) (R0 (E0 (EInt 35))))))) 
  //   (J 
  //     (P0 
  //       (R2 REq 
  //           (R0 (E0 (ESym "lo_orderdate"))) 
  //           (R0 (E0 (ESym "d_datekey"))))) 
  //     (S 
  //       (P0 
  //         (R2 REq 
  //             (R0 (E0 (ESym "d_yearmonthnum"))) 
  //             (R0 (E0 (EInt 199401))))) 
  //       (Q0 (TSymbol "date"))) 
  std::cout << "Delete: (S \n  (P1 \n    PNot \n    (P2 \n      PAnd \n      (P2 \n        PAnd \n        (P2 \n          PAnd \n          (P0 \n            (R2 RLe (R0 (E0 (EInt 4))) (R0 (E0 (ESym \"lo_discount\"))))) \n          (P0 \n            (R2 RLe (R0 (E0 (ESym \"lo_discount\"))) (R0 (E0 (EInt 6)))))) \n        (P0 (R2 RLe (R0 (E0 (EInt 26))) (R0 (E0 (ESym \"lo_quantity\")))))) \n      (P0 (R2 RLe (R0 (E0 (ESym \"lo_quantity\"))) (R0 (E0 (EInt 35))))))) \n  (J \n    (P0 \n      (R2 REq \n          (R0 (E0 (ESym \"lo_orderdate\"))) \n          (R0 (E0 (ESym \"d_datekey\"))))) \n    (S \n      (P0 \n        (R2 REq \n            (R0 (E0 (ESym \"d_yearmonthnum\"))) \n            (R0 (E0 (EInt 199401))))) \n      (Q0 (TSymbol \"date\"))) \n    (Q0 (TSymbol \"lineorder\"))))" << std::endl;
  deleteFile("/tmp/fluidb_store/data13.dat");
  // Delete: (S 
  //   (P1 
  //     PNot 
  //     (P2 
  //       PAnd 
  //       (P2 PAnd 
  //           (P0 (R2 RLe (R0 (E0 (EInt 1))) (R0 (E0 (ESym "lo_discount"))))) 
  //           (P0 (R2 RLe (R0 (E0 (ESym "lo_discount"))) (R0 (E0 (EInt 3)))))) 
  //       (P0 (R2 RLt (R0 (E0 (ESym "lo_quantity"))) (R0 (E0 (EInt 25))))))) 
  //   (J 
  //     (P0 
  //       (R2 REq 
  //           (R0 (E0 (ESym "lo_orderdate"))) 
  //           (R0 (E0 (ESym "d_datekey"))))) 
  //     (S (P0 (R2 REq (R0 (E0 (ESym "d_year"))) (R0 (E0 (EInt 1993))))) 
  //        (Q0 (TSymbol "date"))) 
  std::cout << "Delete: (S \n  (P1 \n    PNot \n    (P2 \n      PAnd \n      (P2 PAnd \n          (P0 (R2 RLe (R0 (E0 (EInt 1))) (R0 (E0 (ESym \"lo_discount\"))))) \n          (P0 (R2 RLe (R0 (E0 (ESym \"lo_discount\"))) (R0 (E0 (EInt 3)))))) \n      (P0 (R2 RLt (R0 (E0 (ESym \"lo_quantity\"))) (R0 (E0 (EInt 25))))))) \n  (J \n    (P0 \n      (R2 REq \n          (R0 (E0 (ESym \"lo_orderdate\"))) \n          (R0 (E0 (ESym \"d_datekey\"))))) \n    (S (P0 (R2 REq (R0 (E0 (ESym \"d_year\"))) (R0 (E0 (EInt 1993))))) \n       (Q0 (TSymbol \"date\"))) \n    (Q0 (TSymbol \"lineorder\"))))" << std::endl;
  deleteFile("/tmp/fluidb_store/data23.dat");
  // Delete: (J 
  //   (P0 
  //     (R2 REq 
  //         (R0 (E0 (ESym "lo_orderdate"))) 
  //         (R0 (E0 (ESym "d_datekey"))))) 
  //   (S 
  //     (P2 
  //       PAnd 
  //       (P0 
  //         (R2 REq (R0 (E0 (ESym "d_weeknuminyear"))) (R0 (E0 (EInt 6))))) 
  //       (P0 (R2 REq (R0 (E0 (ESym "d_year"))) (R0 (E0 (EInt 1994)))))) 
  //     (Q0 (TSymbol "date"))) 
  std::cout << "Delete: (J \n  (P0 \n    (R2 REq \n        (R0 (E0 (ESym \"lo_orderdate\"))) \n        (R0 (E0 (ESym \"d_datekey\"))))) \n  (S \n    (P2 \n      PAnd \n      (P0 \n        (R2 REq (R0 (E0 (ESym \"d_weeknuminyear\"))) (R0 (E0 (EInt 6))))) \n      (P0 (R2 REq (R0 (E0 (ESym \"d_year\"))) (R0 (E0 (EInt 1994)))))) \n    (Q0 (TSymbol \"date\"))) \n  (Q0 (TSymbol \"lineorder\")))" << std::endl;
  deleteFile("/tmp/fluidb_store/data28.dat");
  // ForwardTrigger: (Just 
  //   (Right 
  //     [
  //      QSel 
  //         (P0 
  //           (R2 RLike 
  //               (R0 (E0 (ESym "s_region"))) 
  //               (R0 (E0 (EString "ASIA")))))
  std::cout << "ForwardTrigger: (Just \n  (Right \n    [\n     QSel \n        (P0 \n          (R2 RLike \n              (R0 (E0 (ESym \"s_region\"))) \n              (R0 (E0 (EString \"ASIA\")))))\n    ]))" << std::endl;
  {
    auto operation = mkSelect<CallableClass8>(Just<const std::string>("/tmp/fluidb_store/data94.dat"), Just<const std::string>("/tmp/fluidb_store/data95.dat"), "/tmp/fluidb_store/data41.dat");
    operation.run();
    operation.print_output(10);
  }
  // Delete: (S 
  //   (P1 
  //     PNot 
  //     (P2 
  //       PAnd 
  //       (P2 
  //         PAnd 
  //         (P2 
  //           PAnd 
  //           (P0 
  //             (R2 RLe (R0 (E0 (EInt 5))) (R0 (E0 (ESym "lo_discount"))))) 
  //           (P0 
  //             (R2 RLe (R0 (E0 (ESym "lo_discount"))) (R0 (E0 (EInt 7)))))) 
  //         (P0 (R2 RLe (R0 (E0 (EInt 26))) (R0 (E0 (ESym "lo_quantity")))))) 
  //       (P0 (R2 RLe (R0 (E0 (ESym "lo_quantity"))) (R0 (E0 (EInt 35))))))) 
  //   (J 
  //     (P0 
  //       (R2 REq 
  //           (R0 (E0 (ESym "lo_orderdate"))) 
  //           (R0 (E0 (ESym "d_datekey"))))) 
  //     (S 
  //       (P2 
  //         PAnd 
  //         (P0 
  //           (R2 REq (R0 (E0 (ESym "d_weeknuminyear"))) (R0 (E0 (EInt 6))))) 
  //         (P0 (R2 REq (R0 (E0 (ESym "d_year"))) (R0 (E0 (EInt 1994)))))) 
  //       (Q0 (TSymbol "date"))) 
  std::cout << "Delete: (S \n  (P1 \n    PNot \n    (P2 \n      PAnd \n      (P2 \n        PAnd \n        (P2 \n          PAnd \n          (P0 \n            (R2 RLe (R0 (E0 (EInt 5))) (R0 (E0 (ESym \"lo_discount\"))))) \n          (P0 \n            (R2 RLe (R0 (E0 (ESym \"lo_discount\"))) (R0 (E0 (EInt 7)))))) \n        (P0 (R2 RLe (R0 (E0 (EInt 26))) (R0 (E0 (ESym \"lo_quantity\")))))) \n      (P0 (R2 RLe (R0 (E0 (ESym \"lo_quantity\"))) (R0 (E0 (EInt 35))))))) \n  (J \n    (P0 \n      (R2 REq \n          (R0 (E0 (ESym \"lo_orderdate\"))) \n          (R0 (E0 (ESym \"d_datekey\"))))) \n    (S \n      (P2 \n        PAnd \n        (P0 \n          (R2 REq (R0 (E0 (ESym \"d_weeknuminyear\"))) (R0 (E0 (EInt 6))))) \n        (P0 (R2 REq (R0 (E0 (ESym \"d_year\"))) (R0 (E0 (EInt 1994)))))) \n      (Q0 (TSymbol \"date\"))) \n    (Q0 (TSymbol \"lineorder\"))))" << std::endl;
  deleteFile("/tmp/fluidb_store/data33.dat");
  // Delete: (S (P0 (R2 REq (R0 (E0 (ESym "d_year"))) (R0 (E0 (EInt 1993))))) 
  std::cout << "Delete: (S (P0 (R2 REq (R0 (E0 (ESym \"d_year\"))) (R0 (E0 (EInt 1993))))) \n   (Q0 (TSymbol \"date\")))" << std::endl;
  deleteFile("/tmp/fluidb_store/data15.dat");
  // Delete: (S 
  //   (P2 
  //     PAnd 
  //     (P2 
  //       PAnd 
  //       (P2 
  //         PAnd 
  //         (P0 
  //           (R2 RLike 
  //               (R0 (E0 (ESym "c_nation"))) 
  //               (R0 (E0 (EString "UNITED STATES"))))) 
  //         (P0 (R2 RGe (R0 (E0 (ESym "d_year"))) (R0 (E0 (EInt 1992)))))) 
  //       (P0 (R2 RLe (R0 (E0 (ESym "d_year"))) (R0 (E0 (EInt 1997)))))) 
  //     (P0 
  //       (R2 RLike 
  //           (R0 (E0 (ESym "s_nation"))) 
  //           (R0 (E0 (EString "UNITED STATES")))))) 
  //   (J 
  //     (P0 
  //       (R2 REq 
  //           (R0 (E0 (ESym "lo_suppkey"))) 
  //           (R0 (E0 (ESym "s_suppkey"))))) 
  //     (J 
  //       (P0 
  //         (R2 REq 
  //             (R0 (E0 (ESym "lo_custkey"))) 
  //             (R0 (E0 (ESym "c_custkey"))))) 
  //       (Q0 (TSymbol "customer")) 
  //       (J 
  //         (P0 
  //           (R2 REq 
  //               (R0 (E0 (ESym "lo_orderdate"))) 
  //               (R0 (E0 (ESym "d_datekey"))))) 
  //         (Q0 (TSymbol "date")) 
  //         (Q0 (TSymbol "lineorder")))) 
  std::cout << "Delete: (S \n  (P2 \n    PAnd \n    (P2 \n      PAnd \n      (P2 \n        PAnd \n        (P0 \n          (R2 RLike \n              (R0 (E0 (ESym \"c_nation\"))) \n              (R0 (E0 (EString \"UNITED STATES\"))))) \n        (P0 (R2 RGe (R0 (E0 (ESym \"d_year\"))) (R0 (E0 (EInt 1992)))))) \n      (P0 (R2 RLe (R0 (E0 (ESym \"d_year\"))) (R0 (E0 (EInt 1997)))))) \n    (P0 \n      (R2 RLike \n          (R0 (E0 (ESym \"s_nation\"))) \n          (R0 (E0 (EString \"UNITED STATES\")))))) \n  (J \n    (P0 \n      (R2 REq \n          (R0 (E0 (ESym \"lo_suppkey\"))) \n          (R0 (E0 (ESym \"s_suppkey\"))))) \n    (J \n      (P0 \n        (R2 REq \n            (R0 (E0 (ESym \"lo_custkey\"))) \n            (R0 (E0 (ESym \"c_custkey\"))))) \n      (Q0 (TSymbol \"customer\")) \n      (J \n        (P0 \n          (R2 REq \n              (R0 (E0 (ESym \"lo_orderdate\"))) \n              (R0 (E0 (ESym \"d_datekey\"))))) \n        (Q0 (TSymbol \"date\")) \n        (Q0 (TSymbol \"lineorder\")))) \n    (Q0 (TSymbol \"supplier\"))))" << std::endl;
  deleteFile("/tmp/fluidb_store/data205.dat");
  // Delete: (S 
  //   (P2 
  //     PAnd 
  //     (P2 
  //       PAnd 
  //       (P2 
  //         PAnd 
  //         (P2 
  //           POr 
  //           (P0 
  //             (R2 RLike 
  //                 (R0 (E0 (ESym "c_city"))) 
  //                 (R0 (E0 (EString "UNITED KI1"))))) 
  //           (P0 
  //             (R2 RLike 
  //                 (R0 (E0 (ESym "c_city"))) 
  //                 (R0 (E0 (EString "UNITED KI5")))))) 
  //         (P0 (R2 RGe (R0 (E0 (ESym "d_year"))) (R0 (E0 (EInt 1992)))))) 
  //       (P0 (R2 RLe (R0 (E0 (ESym "d_year"))) (R0 (E0 (EInt 1997)))))) 
  //     (P2 
  //       POr 
  //       (P0 
  //         (R2 RLike 
  //             (R0 (E0 (ESym "s_city"))) 
  //             (R0 (E0 (EString "UNITED KI1"))))) 
  //       (P0 
  //         (R2 RLike 
  //             (R0 (E0 (ESym "s_city"))) 
  //             (R0 (E0 (EString "UNITED KI5"))))))) 
  //   (J 
  //     (P0 
  //       (R2 REq 
  //           (R0 (E0 (ESym "lo_suppkey"))) 
  //           (R0 (E0 (ESym "s_suppkey"))))) 
  //     (J 
  //       (P0 
  //         (R2 REq 
  //             (R0 (E0 (ESym "lo_custkey"))) 
  //             (R0 (E0 (ESym "c_custkey"))))) 
  //       (Q0 (TSymbol "customer")) 
  //       (J 
  //         (P0 
  //           (R2 REq 
  //               (R0 (E0 (ESym "lo_orderdate"))) 
  //               (R0 (E0 (ESym "d_datekey"))))) 
  //         (Q0 (TSymbol "date")) 
  //         (Q0 (TSymbol "lineorder")))) 
  std::cout << "Delete: (S \n  (P2 \n    PAnd \n    (P2 \n      PAnd \n      (P2 \n        PAnd \n        (P2 \n          POr \n          (P0 \n            (R2 RLike \n                (R0 (E0 (ESym \"c_city\"))) \n                (R0 (E0 (EString \"UNITED KI1\"))))) \n          (P0 \n            (R2 RLike \n                (R0 (E0 (ESym \"c_city\"))) \n                (R0 (E0 (EString \"UNITED KI5\")))))) \n        (P0 (R2 RGe (R0 (E0 (ESym \"d_year\"))) (R0 (E0 (EInt 1992)))))) \n      (P0 (R2 RLe (R0 (E0 (ESym \"d_year\"))) (R0 (E0 (EInt 1997)))))) \n    (P2 \n      POr \n      (P0 \n        (R2 RLike \n            (R0 (E0 (ESym \"s_city\"))) \n            (R0 (E0 (EString \"UNITED KI1\"))))) \n      (P0 \n        (R2 RLike \n            (R0 (E0 (ESym \"s_city\"))) \n            (R0 (E0 (EString \"UNITED KI5\"))))))) \n  (J \n    (P0 \n      (R2 REq \n          (R0 (E0 (ESym \"lo_suppkey\"))) \n          (R0 (E0 (ESym \"s_suppkey\"))))) \n    (J \n      (P0 \n        (R2 REq \n            (R0 (E0 (ESym \"lo_custkey\"))) \n            (R0 (E0 (ESym \"c_custkey\"))))) \n      (Q0 (TSymbol \"customer\")) \n      (J \n        (P0 \n          (R2 REq \n              (R0 (E0 (ESym \"lo_orderdate\"))) \n              (R0 (E0 (ESym \"d_datekey\"))))) \n        (Q0 (TSymbol \"date\")) \n        (Q0 (TSymbol \"lineorder\")))) \n    (Q0 (TSymbol \"supplier\"))))" << std::endl;
  deleteFile("/tmp/fluidb_store/data220.dat");
  // ForwardTrigger: (Just 
  //   (Left 
  //     [
  //      QJoin 
  //         (P0 
  //           (R2 REq 
  //               (R0 (E0 (ESym "lo_partkey"))) 
  //               (R0 (E0 (ESym "p_partkey")))))
  std::cout << "ForwardTrigger: (Just \n  (Left \n    [\n     QJoin \n        (P0 \n          (R2 REq \n              (R0 (E0 (ESym \"lo_partkey\"))) \n              (R0 (E0 (ESym \"p_partkey\")))))\n    ]))" << std::endl;
  {
    auto operation = mkEquiJoin<CallableClass16, CallableClass18, CallableClass13>(Just<const std::string>("/tmp/fluidb_store/data109.dat"), Just<const std::string>("/tmp/fluidb_store/data108.dat"), Just<const std::string>("/tmp/fluidb_store/data110.dat"), "/tmp/fluidb_store/data94.dat", "/tmp/fluidb_store/data2.dat");
    operation.run();
    operation.print_output(10);
  }
  // Delete: (S 
  //   (P2 
  //     PAnd 
  //     (P2 
  //       PAnd 
  //       (P2 
  //         POr 
  //         (P0 
  //           (R2 RLike 
  //               (R0 (E0 (ESym "c_city"))) 
  //               (R0 (E0 (EString "UNITED KI1"))))) 
  //         (P0 
  //           (R2 RLike 
  //               (R0 (E0 (ESym "c_city"))) 
  //               (R0 (E0 (EString "UNITED KI5")))))) 
  //       (P0 
  //         (R2 RLike 
  //             (R0 (E0 (ESym "d_yearmonth"))) 
  //             (R0 (E0 (EString "Dec1997")))))) 
  //     (P2 
  //       POr 
  //       (P0 
  //         (R2 RLike 
  //             (R0 (E0 (ESym "s_city"))) 
  //             (R0 (E0 (EString "UNITED KI1"))))) 
  //       (P0 
  //         (R2 RLike 
  //             (R0 (E0 (ESym "s_city"))) 
  //             (R0 (E0 (EString "UNITED KI5"))))))) 
  //   (J 
  //     (P0 
  //       (R2 REq 
  //           (R0 (E0 (ESym "lo_suppkey"))) 
  //           (R0 (E0 (ESym "s_suppkey"))))) 
  //     (J 
  //       (P0 
  //         (R2 REq 
  //             (R0 (E0 (ESym "lo_custkey"))) 
  //             (R0 (E0 (ESym "c_custkey"))))) 
  //       (Q0 (TSymbol "customer")) 
  //       (J 
  //         (P0 
  //           (R2 REq 
  //               (R0 (E0 (ESym "lo_orderdate"))) 
  //               (R0 (E0 (ESym "d_datekey"))))) 
  //         (Q0 (TSymbol "date")) 
  //         (Q0 (TSymbol "lineorder")))) 
  std::cout << "Delete: (S \n  (P2 \n    PAnd \n    (P2 \n      PAnd \n      (P2 \n        POr \n        (P0 \n          (R2 RLike \n              (R0 (E0 (ESym \"c_city\"))) \n              (R0 (E0 (EString \"UNITED KI1\"))))) \n        (P0 \n          (R2 RLike \n              (R0 (E0 (ESym \"c_city\"))) \n              (R0 (E0 (EString \"UNITED KI5\")))))) \n      (P0 \n        (R2 RLike \n            (R0 (E0 (ESym \"d_yearmonth\"))) \n            (R0 (E0 (EString \"Dec1997\")))))) \n    (P2 \n      POr \n      (P0 \n        (R2 RLike \n            (R0 (E0 (ESym \"s_city\"))) \n            (R0 (E0 (EString \"UNITED KI1\"))))) \n      (P0 \n        (R2 RLike \n            (R0 (E0 (ESym \"s_city\"))) \n            (R0 (E0 (EString \"UNITED KI5\"))))))) \n  (J \n    (P0 \n      (R2 REq \n          (R0 (E0 (ESym \"lo_suppkey\"))) \n          (R0 (E0 (ESym \"s_suppkey\"))))) \n    (J \n      (P0 \n        (R2 REq \n            (R0 (E0 (ESym \"lo_custkey\"))) \n            (R0 (E0 (ESym \"c_custkey\"))))) \n      (Q0 (TSymbol \"customer\")) \n      (J \n        (P0 \n          (R2 REq \n              (R0 (E0 (ESym \"lo_orderdate\"))) \n              (R0 (E0 (ESym \"d_datekey\"))))) \n        (Q0 (TSymbol \"date\")) \n        (Q0 (TSymbol \"lineorder\")))) \n    (Q0 (TSymbol \"supplier\"))))" << std::endl;
  deleteFile("/tmp/fluidb_store/data235.dat");
  // Delete: (S 
  //   (P2 
  //     PAnd 
  //     (P0 
  //       (R2 RLike 
  //           (R0 (E0 (ESym "s_region"))) 
  //           (R0 (E0 (EString "EUROPE"))))) 
  //     (P0 
  //       (R2 RLike 
  //           (R0 (E0 (ESym "p_brand1"))) 
  //           (R0 (E0 (EString "MFGR#2221")))))) 
  //   (J 
  //     (P0 
  //       (R2 REq 
  //           (R0 (E0 (ESym "lo_partkey"))) 
  //           (R0 (E0 (ESym "p_partkey"))))) 
  //     (J 
  //       (P0 
  //         (R2 REq 
  //             (R0 (E0 (ESym "lo_orderdate"))) 
  //             (R0 (E0 (ESym "d_datekey"))))) 
  //       (J 
  //         (P0 
  //           (R2 REq 
  //               (R0 (E0 (ESym "lo_suppkey"))) 
  //               (R0 (E0 (ESym "s_suppkey"))))) 
  //         (Q0 (TSymbol "supplier")) 
  //         (Q0 (TSymbol "lineorder"))) 
  //       (Q0 (TSymbol "date"))) 
  std::cout << "Delete: (S \n  (P2 \n    PAnd \n    (P0 \n      (R2 RLike \n          (R0 (E0 (ESym \"s_region\"))) \n          (R0 (E0 (EString \"EUROPE\"))))) \n    (P0 \n      (R2 RLike \n          (R0 (E0 (ESym \"p_brand1\"))) \n          (R0 (E0 (EString \"MFGR#2221\")))))) \n  (J \n    (P0 \n      (R2 REq \n          (R0 (E0 (ESym \"lo_partkey\"))) \n          (R0 (E0 (ESym \"p_partkey\"))))) \n    (J \n      (P0 \n        (R2 REq \n            (R0 (E0 (ESym \"lo_orderdate\"))) \n            (R0 (E0 (ESym \"d_datekey\"))))) \n      (J \n        (P0 \n          (R2 REq \n              (R0 (E0 (ESym \"lo_suppkey\"))) \n              (R0 (E0 (ESym \"s_suppkey\"))))) \n        (Q0 (TSymbol \"supplier\")) \n        (Q0 (TSymbol \"lineorder\"))) \n      (Q0 (TSymbol \"date\"))) \n    (Q0 (TSymbol \"part\"))))" << std::endl;
  deleteFile("/tmp/fluidb_store/data120.dat");
  // ForwardTrigger: (Just 
  //   (Right 
  //     [
  //      QSel 
  //         (P2 
  //           PAnd 
  //           (P0 
  //             (R2 RLe 
  //                 (R0 (E0 (EString "MFGR#2221"))) 
  //                 (R0 (E0 (ESym "p_brand1"))))) 
  //           (P0 
  //             (R2 RLe 
  //                 (R0 (E0 (ESym "p_brand1"))) 
  //                 (R0 (E0 (EString "MFGR#2228"))))))
  std::cout << "ForwardTrigger: (Just \n  (Right \n    [\n     QSel \n        (P2 \n          PAnd \n          (P0 \n            (R2 RLe \n                (R0 (E0 (EString \"MFGR#2221\"))) \n                (R0 (E0 (ESym \"p_brand1\"))))) \n          (P0 \n            (R2 RLe \n                (R0 (E0 (ESym \"p_brand1\"))) \n                (R0 (E0 (EString \"MFGR#2228\"))))))\n    ]))" << std::endl;
  {
    auto operation = mkSelect<CallableClass20>(Just<const std::string>("/tmp/fluidb_store/data92.dat"), Just<const std::string>("/tmp/fluidb_store/data113.dat"), "/tmp/fluidb_store/data109.dat");
    operation.run();
    operation.print_output(10);
  }
  // Delete: (Q2 
  //   (QRightAntijoin 
  //     (P0 
  //       (R2 REq 
  //           (R0 (E0 (ESym "lo_partkey"))) 
  //           (R0 (E0 (ESym "p_partkey")))))) 
  //   (S 
  //     (P0 
  //       (R2 RLike 
  //           (R0 (E0 (ESym "c_region"))) 
  //           (R0 (E0 (EString "AMERICA"))))) 
  //     (J 
  //       (P0 
  //         (R2 REq 
  //             (R0 (E0 (ESym "lo_custkey"))) 
  //             (R0 (E0 (ESym "c_custkey"))))) 
  //       (S 
  //         (P0 
  //           (R2 RLike 
  //               (R0 (E0 (ESym "s_region"))) 
  //               (R0 (E0 (EString "AMERICA"))))) 
  //         (J 
  //           (P0 
  //             (R2 REq 
  //                 (R0 (E0 (ESym "lo_suppkey"))) 
  //                 (R0 (E0 (ESym "s_suppkey"))))) 
  //           (J 
  //             (P0 
  //               (R2 REq 
  //                   (R0 (E0 (ESym "lo_orderdate"))) 
  //                   (R0 (E0 (ESym "d_datekey"))))) 
  //             (Q0 (TSymbol "date")) 
  //             (Q0 (TSymbol "lineorder"))) 
  //           (Q0 (TSymbol "supplier")))) 
  //       (Q0 (TSymbol "customer")))) 
  std::cout << "Delete: (Q2 \n  (QRightAntijoin \n    (P0 \n      (R2 REq \n          (R0 (E0 (ESym \"lo_partkey\"))) \n          (R0 (E0 (ESym \"p_partkey\")))))) \n  (S \n    (P0 \n      (R2 RLike \n          (R0 (E0 (ESym \"c_region\"))) \n          (R0 (E0 (EString \"AMERICA\"))))) \n    (J \n      (P0 \n        (R2 REq \n            (R0 (E0 (ESym \"lo_custkey\"))) \n            (R0 (E0 (ESym \"c_custkey\"))))) \n      (S \n        (P0 \n          (R2 RLike \n              (R0 (E0 (ESym \"s_region\"))) \n              (R0 (E0 (EString \"AMERICA\"))))) \n        (J \n          (P0 \n            (R2 REq \n                (R0 (E0 (ESym \"lo_suppkey\"))) \n                (R0 (E0 (ESym \"s_suppkey\"))))) \n          (J \n            (P0 \n              (R2 REq \n                  (R0 (E0 (ESym \"lo_orderdate\"))) \n                  (R0 (E0 (ESym \"d_datekey\"))))) \n            (Q0 (TSymbol \"date\")) \n            (Q0 (TSymbol \"lineorder\"))) \n          (Q0 (TSymbol \"supplier\")))) \n      (Q0 (TSymbol \"customer\")))) \n  (Q0 (TSymbol \"part\")))" << std::endl;
  deleteFile("/tmp/fluidb_store/data317.dat");
  // Delete: (J 
  //   (P0 
  //     (R2 REq (R0 (E0 (ESym "lo_partkey"))) (R0 (E0 (ESym "p_partkey"))))) 
  //   (S 
  //     (P0 
  //       (R2 RLike 
  //           (R0 (E0 (ESym "c_region"))) 
  //           (R0 (E0 (EString "AMERICA"))))) 
  //     (J 
  //       (P0 
  //         (R2 REq 
  //             (R0 (E0 (ESym "lo_custkey"))) 
  //             (R0 (E0 (ESym "c_custkey"))))) 
  //       (S 
  //         (P0 
  //           (R2 RLike 
  //               (R0 (E0 (ESym "s_region"))) 
  //               (R0 (E0 (EString "AMERICA"))))) 
  //         (J 
  //           (P0 
  //             (R2 REq 
  //                 (R0 (E0 (ESym "lo_suppkey"))) 
  //                 (R0 (E0 (ESym "s_suppkey"))))) 
  //           (J 
  //             (P0 
  //               (R2 REq 
  //                   (R0 (E0 (ESym "lo_orderdate"))) 
  //                   (R0 (E0 (ESym "d_datekey"))))) 
  //             (Q0 (TSymbol "date")) 
  //             (Q0 (TSymbol "lineorder"))) 
  //           (Q0 (TSymbol "supplier")))) 
  //       (Q0 (TSymbol "customer")))) 
  std::cout << "Delete: (J \n  (P0 \n    (R2 REq (R0 (E0 (ESym \"lo_partkey\"))) (R0 (E0 (ESym \"p_partkey\"))))) \n  (S \n    (P0 \n      (R2 RLike \n          (R0 (E0 (ESym \"c_region\"))) \n          (R0 (E0 (EString \"AMERICA\"))))) \n    (J \n      (P0 \n        (R2 REq \n            (R0 (E0 (ESym \"lo_custkey\"))) \n            (R0 (E0 (ESym \"c_custkey\"))))) \n      (S \n        (P0 \n          (R2 RLike \n              (R0 (E0 (ESym \"s_region\"))) \n              (R0 (E0 (EString \"AMERICA\"))))) \n        (J \n          (P0 \n            (R2 REq \n                (R0 (E0 (ESym \"lo_suppkey\"))) \n                (R0 (E0 (ESym \"s_suppkey\"))))) \n          (J \n            (P0 \n              (R2 REq \n                  (R0 (E0 (ESym \"lo_orderdate\"))) \n                  (R0 (E0 (ESym \"d_datekey\"))))) \n            (Q0 (TSymbol \"date\")) \n            (Q0 (TSymbol \"lineorder\"))) \n          (Q0 (TSymbol \"supplier\")))) \n      (Q0 (TSymbol \"customer\")))) \n  (Q0 (TSymbol \"part\")))" << std::endl;
  deleteFile("/tmp/fluidb_store/data316.dat");
  // Delete: (S 
  //   (P1 
  //     PNot 
  //     (P0 
  //       (R2 RLike (R0 (E0 (ESym "s_region"))) (R0 (E0 (EString "ASIA")))))) 
  //   (J 
  //     (P0 
  //       (R2 REq 
  //           (R0 (E0 (ESym "lo_orderdate"))) 
  //           (R0 (E0 (ESym "d_datekey"))))) 
  //     (J 
  //       (P0 
  //         (R2 REq 
  //             (R0 (E0 (ESym "lo_suppkey"))) 
  //             (R0 (E0 (ESym "s_suppkey"))))) 
  //       (Q0 (TSymbol "supplier")) 
  //       (Q0 (TSymbol "lineorder"))) 
  std::cout << "Delete: (S \n  (P1 \n    PNot \n    (P0 \n      (R2 RLike (R0 (E0 (ESym \"s_region\"))) (R0 (E0 (EString \"ASIA\")))))) \n  (J \n    (P0 \n      (R2 REq \n          (R0 (E0 (ESym \"lo_orderdate\"))) \n          (R0 (E0 (ESym \"d_datekey\"))))) \n    (J \n      (P0 \n        (R2 REq \n            (R0 (E0 (ESym \"lo_suppkey\"))) \n            (R0 (E0 (ESym \"s_suppkey\"))))) \n      (Q0 (TSymbol \"supplier\")) \n      (Q0 (TSymbol \"lineorder\"))) \n    (Q0 (TSymbol \"date\"))))" << std::endl;
  deleteFile("/tmp/fluidb_store/data95.dat");
  // Delete: (Q2 
  //   (QLeftAntijoin 
  //     (P0 
  //       (R2 REq 
  //           (R0 (E0 (ESym "lo_partkey"))) 
  //           (R0 (E0 (ESym "p_partkey")))))) 
  //   (J 
  //     (P0 
  //       (R2 REq 
  //           (R0 (E0 (ESym "lo_orderdate"))) 
  //           (R0 (E0 (ESym "d_datekey"))))) 
  //     (S 
  //       (P0 
  //         (R2 RLike 
  //             (R0 (E0 (ESym "s_region"))) 
  //             (R0 (E0 (EString "ASIA"))))) 
  //       (J 
  //         (P0 
  //           (R2 REq 
  //               (R0 (E0 (ESym "lo_suppkey"))) 
  //               (R0 (E0 (ESym "s_suppkey"))))) 
  //         (Q0 (TSymbol "supplier")) 
  //         (Q0 (TSymbol "lineorder")))) 
  //     (Q0 (TSymbol "date"))) 
  std::cout << "Delete: (Q2 \n  (QLeftAntijoin \n    (P0 \n      (R2 REq \n          (R0 (E0 (ESym \"lo_partkey\"))) \n          (R0 (E0 (ESym \"p_partkey\")))))) \n  (J \n    (P0 \n      (R2 REq \n          (R0 (E0 (ESym \"lo_orderdate\"))) \n          (R0 (E0 (ESym \"d_datekey\"))))) \n    (S \n      (P0 \n        (R2 RLike \n            (R0 (E0 (ESym \"s_region\"))) \n            (R0 (E0 (EString \"ASIA\"))))) \n      (J \n        (P0 \n          (R2 REq \n              (R0 (E0 (ESym \"lo_suppkey\"))) \n              (R0 (E0 (ESym \"s_suppkey\"))))) \n        (Q0 (TSymbol \"supplier\")) \n        (Q0 (TSymbol \"lineorder\")))) \n    (Q0 (TSymbol \"date\"))) \n  (Q0 (TSymbol \"part\")))" << std::endl;
  deleteFile("/tmp/fluidb_store/data108.dat");
  std::cout << "Delete: (Q0 (TSymbol \"part\"))" << std::endl;
  deleteFile("/tmp/fluidb_store/data2.dat");
  // Delete: (S 
  //   (P0 (R2 RLike (R0 (E0 (ESym "s_region"))) (R0 (E0 (EString "ASIA"))))) 
  //   (J 
  //     (P0 
  //       (R2 REq 
  //           (R0 (E0 (ESym "lo_orderdate"))) 
  //           (R0 (E0 (ESym "d_datekey"))))) 
  //     (J 
  //       (P0 
  //         (R2 REq 
  //             (R0 (E0 (ESym "lo_suppkey"))) 
  //             (R0 (E0 (ESym "s_suppkey"))))) 
  //       (Q0 (TSymbol "supplier")) 
  //       (Q0 (TSymbol "lineorder"))) 
  std::cout << "Delete: (S \n  (P0 (R2 RLike (R0 (E0 (ESym \"s_region\"))) (R0 (E0 (EString \"ASIA\"))))) \n  (J \n    (P0 \n      (R2 REq \n          (R0 (E0 (ESym \"lo_orderdate\"))) \n          (R0 (E0 (ESym \"d_datekey\"))))) \n    (J \n      (P0 \n        (R2 REq \n            (R0 (E0 (ESym \"lo_suppkey\"))) \n            (R0 (E0 (ESym \"s_suppkey\"))))) \n      (Q0 (TSymbol \"supplier\")) \n      (Q0 (TSymbol \"lineorder\"))) \n    (Q0 (TSymbol \"date\"))))" << std::endl;
  deleteFile("/tmp/fluidb_store/data94.dat");
  // ReverseTrigger: (Just 
  //   (Right 
  //     [
  //      QSel 
  //         (P2 
  //           PAnd 
  //           (P2 
  //             PAnd 
  //             (P0 
  //               (R2 RLike 
  //                   (R0 (E0 (ESym "s_region"))) 
  //                   (R0 (E0 (EString "ASIA"))))) 
  //             (P0 
  //               (R2 RLe 
  //                   (R0 (E0 (EString "MFGR#2221"))) 
  //                   (R0 (E0 (ESym "p_brand1")))))) 
  //           (P0 
  //             (R2 RLe 
  //                 (R0 (E0 (ESym "p_brand1"))) 
  //                 (R0 (E0 (EString "MFGR#2228"))))))
  std::cout << "ReverseTrigger: (Just \n  (Right \n    [\n     QSel \n        (P2 \n          PAnd \n          (P2 \n            PAnd \n            (P0 \n              (R2 RLike \n                  (R0 (E0 (ESym \"s_region\"))) \n                  (R0 (E0 (EString \"ASIA\"))))) \n            (P0 \n              (R2 RLe \n                  (R0 (E0 (EString \"MFGR#2221\"))) \n                  (R0 (E0 (ESym \"p_brand1\")))))) \n          (P0 \n            (R2 RLe \n                (R0 (E0 (ESym \"p_brand1\"))) \n                (R0 (E0 (EString \"MFGR#2228\"))))))\n    ]))" << std::endl;
  {
    auto operation = mkUnion<CallableClass26, CallableClass29>(Just<const std::string>("/tmp/fluidb_store/data46.dat"), "/tmp/fluidb_store/data92.dat", "/tmp/fluidb_store/data93.dat");
    operation.run();
    operation.print_output(10);
  }
  // Delete: (S 
  //   (P1 
  //     PNot 
  //     (P2 
  //       PAnd 
  //       (P0 
  //         (R2 RLe 
  //             (R0 (E0 (EString "MFGR#2221"))) 
  //             (R0 (E0 (ESym "p_brand1"))))) 
  //       (P0 
  //         (R2 RLe 
  //             (R0 (E0 (ESym "p_brand1"))) 
  //             (R0 (E0 (EString "MFGR#2228"))))))) 
  //   (J 
  //     (P0 
  //       (R2 REq 
  //           (R0 (E0 (ESym "lo_partkey"))) 
  //           (R0 (E0 (ESym "p_partkey"))))) 
  //     (S 
  //       (P0 
  //         (R2 RLike 
  //             (R0 (E0 (ESym "s_region"))) 
  //             (R0 (E0 (EString "ASIA"))))) 
  //       (J 
  //         (P0 
  //           (R2 REq 
  //               (R0 (E0 (ESym "lo_orderdate"))) 
  //               (R0 (E0 (ESym "d_datekey"))))) 
  //         (J 
  //           (P0 
  //             (R2 REq 
  //                 (R0 (E0 (ESym "lo_suppkey"))) 
  //                 (R0 (E0 (ESym "s_suppkey"))))) 
  //           (Q0 (TSymbol "supplier")) 
  //           (Q0 (TSymbol "lineorder"))) 
  //         (Q0 (TSymbol "date")))) 
  std::cout << "Delete: (S \n  (P1 \n    PNot \n    (P2 \n      PAnd \n      (P0 \n        (R2 RLe \n            (R0 (E0 (EString \"MFGR#2221\"))) \n            (R0 (E0 (ESym \"p_brand1\"))))) \n      (P0 \n        (R2 RLe \n            (R0 (E0 (ESym \"p_brand1\"))) \n            (R0 (E0 (EString \"MFGR#2228\"))))))) \n  (J \n    (P0 \n      (R2 REq \n          (R0 (E0 (ESym \"lo_partkey\"))) \n          (R0 (E0 (ESym \"p_partkey\"))))) \n    (S \n      (P0 \n        (R2 RLike \n            (R0 (E0 (ESym \"s_region\"))) \n            (R0 (E0 (EString \"ASIA\"))))) \n      (J \n        (P0 \n          (R2 REq \n              (R0 (E0 (ESym \"lo_orderdate\"))) \n              (R0 (E0 (ESym \"d_datekey\"))))) \n        (J \n          (P0 \n            (R2 REq \n                (R0 (E0 (ESym \"lo_suppkey\"))) \n                (R0 (E0 (ESym \"s_suppkey\"))))) \n          (Q0 (TSymbol \"supplier\")) \n          (Q0 (TSymbol \"lineorder\"))) \n        (Q0 (TSymbol \"date\")))) \n    (Q0 (TSymbol \"part\"))))" << std::endl;
  deleteFile("/tmp/fluidb_store/data113.dat");
  // Delete: (S 
  //   (P1 
  //     PNot 
  //     (P2 
  //       PAnd 
  //       (P0 
  //         (R2 RLike 
  //             (R0 (E0 (ESym "s_region"))) 
  //             (R0 (E0 (EString "EUROPE"))))) 
  //       (P0 
  //         (R2 RLike 
  //             (R0 (E0 (ESym "p_brand1"))) 
  //             (R0 (E0 (EString "MFGR#2221"))))))) 
  //   (J 
  //     (P0 
  //       (R2 REq 
  //           (R0 (E0 (ESym "lo_partkey"))) 
  //           (R0 (E0 (ESym "p_partkey"))))) 
  //     (J 
  //       (P0 
  //         (R2 REq 
  //             (R0 (E0 (ESym "lo_orderdate"))) 
  //             (R0 (E0 (ESym "d_datekey"))))) 
  //       (J 
  //         (P0 
  //           (R2 REq 
  //               (R0 (E0 (ESym "lo_suppkey"))) 
  //               (R0 (E0 (ESym "s_suppkey"))))) 
  //         (Q0 (TSymbol "supplier")) 
  //         (Q0 (TSymbol "lineorder"))) 
  //       (Q0 (TSymbol "date"))) 
  std::cout << "Delete: (S \n  (P1 \n    PNot \n    (P2 \n      PAnd \n      (P0 \n        (R2 RLike \n            (R0 (E0 (ESym \"s_region\"))) \n            (R0 (E0 (EString \"EUROPE\"))))) \n      (P0 \n        (R2 RLike \n            (R0 (E0 (ESym \"p_brand1\"))) \n            (R0 (E0 (EString \"MFGR#2221\"))))))) \n  (J \n    (P0 \n      (R2 REq \n          (R0 (E0 (ESym \"lo_partkey\"))) \n          (R0 (E0 (ESym \"p_partkey\"))))) \n    (J \n      (P0 \n        (R2 REq \n            (R0 (E0 (ESym \"lo_orderdate\"))) \n            (R0 (E0 (ESym \"d_datekey\"))))) \n      (J \n        (P0 \n          (R2 REq \n              (R0 (E0 (ESym \"lo_suppkey\"))) \n              (R0 (E0 (ESym \"s_suppkey\"))))) \n        (Q0 (TSymbol \"supplier\")) \n        (Q0 (TSymbol \"lineorder\"))) \n      (Q0 (TSymbol \"date\"))) \n    (Q0 (TSymbol \"part\"))))" << std::endl;
  deleteFile("/tmp/fluidb_store/data121.dat");
  // ForwardTrigger: (Just 
  //   (Right 
  //     [
  //      QSel 
  //         (P2 
  //           PAnd 
  //           (P0 
  //             (R2 RLike 
  //                 (R0 (E0 (ESym "s_region"))) 
  //                 (R0 (E0 (EString "AMERICA"))))) 
  //           (P0 
  //             (R2 RLike 
  //                 (R0 (E0 (ESym "p_category"))) 
  //                 (R0 (E0 (EString "MFGR#12"))))))
  std::cout << "ForwardTrigger: (Just \n  (Right \n    [\n     QSel \n        (P2 \n          PAnd \n          (P0 \n            (R2 RLike \n                (R0 (E0 (ESym \"s_region\"))) \n                (R0 (E0 (EString \"AMERICA\"))))) \n          (P0 \n            (R2 RLike \n                (R0 (E0 (ESym \"p_category\"))) \n                (R0 (E0 (EString \"MFGR#12\"))))))\n    ]))" << std::endl;
  {
    auto operation = mkSelect<CallableClass31>(Just<const std::string>("/tmp/fluidb_store/data50.dat"), Just<const std::string>("/tmp/fluidb_store/data51.dat"), "/tmp/fluidb_store/data46.dat");
    operation.run();
    operation.print_output(10);
  }
  // ForwardTrigger: (Just 
  //   (Right 
  //     [
  //      QGroup 
  //         [(ESym "tmpSym0",E0 (NAggr AggrSum (E0 (ESym "lo_revenue")))),
  //          (ESym "d_year",E0 (NAggr AggrFirst (E0 (ESym "d_year")))),
  //          (ESym "p_brand1",E0 (NAggr AggrFirst (E0 (ESym "p_brand1"))))] 
  //         [E0 (ESym "d_year"),E0 (ESym "p_brand1")]
  std::cout << "ForwardTrigger: (Just \n  (Right \n    [\n     QGroup \n        [(ESym \"tmpSym0\",E0 (NAggr AggrSum (E0 (ESym \"lo_revenue\")))),\n         (ESym \"d_year\",E0 (NAggr AggrFirst (E0 (ESym \"d_year\")))),\n         (ESym \"p_brand1\",E0 (NAggr AggrFirst (E0 (ESym \"p_brand1\"))))] \n        [E0 (ESym \"d_year\"),E0 (ESym \"p_brand1\")]\n    ]))" << std::endl;
  {
    auto operation = mkAggregation<CallableClass38, CallableClass40>(Just<const std::string>("/tmp/fluidb_store/data90.dat"), Just<const std::string>("/tmp/fluidb_store/data50.dat"), "/tmp/fluidb_store/data50.dat");
    operation.run();
    operation.print_output(10);
  }
  std::cout << "ForwardTrigger: (Just (Right [QSort [E0 (ESym \"d_year\"),E0 (ESym \"p_brand1\")]]))" << std::endl;
  {
    auto operation = mkSort<CallableClass42>(Just<const std::string>("/tmp/fluidb_store/data91.dat"), Just<const std::string>("/tmp/fluidb_store/data90.dat"), "/tmp/fluidb_store/data90.dat");
    operation.run();
    operation.print_output(10);
  }
  report_counters<60000>();
  return 0;
}
