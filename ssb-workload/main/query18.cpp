#include <array>

#include <string>

#include <codegen.hh>
class Record51 {
 public:
  Record51(unsigned __sortElem0, fluidb_string<10> __sortElem1) : sortElem0(__sortElem0), sortElem1(__sortElem1)
  {
  }
  Record51() 
  {
  }
  std::string show() const{
    std::stringstream o;
    o << sortElem0 << " | " << arrToString(sortElem1);
    return o.str();
  }
  bool operator <(const Record51& otherRec) const{
    return (otherRec.sortElem0 < sortElem0 && otherRec.sortElem1 < sortElem1);
  }
  bool operator ==(const Record51& otherRec) const{
    return (otherRec.sortElem0 == sortElem0 && otherRec.sortElem1 == sortElem1);
  }
  bool operator !=(const Record51& otherRec) const{
    return (otherRec.sortElem0 != sortElem0 || otherRec.sortElem1 != sortElem1);
  }
  unsigned sortElem0;
  fluidb_string<10> sortElem1;
 private:
};


class Record35 {
 public:
  Record35(unsigned __sym__0__7178003535380331304, fluidb_string<55> __sym__0___45_7020257275696364520, fluidb_string<25> __sym__0___45_6307179734719967033, fluidb_string<7> __sym__0__4568304886257136061, fluidb_string<10> __sym__0___45_6291097039630000265, fluidb_string<11> __sym__0__551327770031967739, fluidb_string<25> __sym__0__3827696365022297353, unsigned __sym__0___45_1779543743759935870, fluidb_string<10> __sym__0__3752090135924368535) : sym__0__7178003535380331304(__sym__0__7178003535380331304), sym__0___45_7020257275696364520(__sym__0___45_7020257275696364520), sym__0___45_6307179734719967033(__sym__0___45_6307179734719967033), sym__0__4568304886257136061(__sym__0__4568304886257136061), sym__0___45_6291097039630000265(__sym__0___45_6291097039630000265), sym__0__551327770031967739(__sym__0__551327770031967739), sym__0__3827696365022297353(__sym__0__3827696365022297353), sym__0___45_1779543743759935870(__sym__0___45_1779543743759935870), sym__0__3752090135924368535(__sym__0__3752090135924368535)
  {
  }
  Record35() 
  {
  }
  std::string show() const{
    std::stringstream o;
    o << sym__0__7178003535380331304 << " | " << arrToString(sym__0___45_7020257275696364520) << " | " << arrToString(sym__0___45_6307179734719967033) << " | " << arrToString(sym__0__4568304886257136061) << " | " << arrToString(sym__0___45_6291097039630000265) << " | " << arrToString(sym__0__551327770031967739) << " | " << arrToString(sym__0__3827696365022297353) << " | " << sym__0___45_1779543743759935870 << " | " << arrToString(sym__0__3752090135924368535);
    return o.str();
  }
  bool operator <(const Record35& otherRec) const{
    return (otherRec.sym__0__7178003535380331304 < sym__0__7178003535380331304 && (otherRec.sym__0___45_7020257275696364520 < sym__0___45_7020257275696364520 && (otherRec.sym__0___45_6307179734719967033 < sym__0___45_6307179734719967033 && (otherRec.sym__0__4568304886257136061 < sym__0__4568304886257136061 && (otherRec.sym__0___45_6291097039630000265 < sym__0___45_6291097039630000265 && (otherRec.sym__0__551327770031967739 < sym__0__551327770031967739 && (otherRec.sym__0__3827696365022297353 < sym__0__3827696365022297353 && (otherRec.sym__0___45_1779543743759935870 < sym__0___45_1779543743759935870 && otherRec.sym__0__3752090135924368535 < sym__0__3752090135924368535))))))));
  }
  bool operator ==(const Record35& otherRec) const{
    return (otherRec.sym__0__7178003535380331304 == sym__0__7178003535380331304 && (otherRec.sym__0___45_7020257275696364520 == sym__0___45_7020257275696364520 && (otherRec.sym__0___45_6307179734719967033 == sym__0___45_6307179734719967033 && (otherRec.sym__0__4568304886257136061 == sym__0__4568304886257136061 && (otherRec.sym__0___45_6291097039630000265 == sym__0___45_6291097039630000265 && (otherRec.sym__0__551327770031967739 == sym__0__551327770031967739 && (otherRec.sym__0__3827696365022297353 == sym__0__3827696365022297353 && (otherRec.sym__0___45_1779543743759935870 == sym__0___45_1779543743759935870 && otherRec.sym__0__3752090135924368535 == sym__0__3752090135924368535))))))));
  }
  bool operator !=(const Record35& otherRec) const{
    return (otherRec.sym__0__7178003535380331304 != sym__0__7178003535380331304 || (otherRec.sym__0___45_7020257275696364520 != sym__0___45_7020257275696364520 || (otherRec.sym__0___45_6307179734719967033 != sym__0___45_6307179734719967033 || (otherRec.sym__0__4568304886257136061 != sym__0__4568304886257136061 || (otherRec.sym__0___45_6291097039630000265 != sym__0___45_6291097039630000265 || (otherRec.sym__0__551327770031967739 != sym__0__551327770031967739 || (otherRec.sym__0__3827696365022297353 != sym__0__3827696365022297353 || (otherRec.sym__0___45_1779543743759935870 != sym__0___45_1779543743759935870 || otherRec.sym__0__3752090135924368535 != sym__0__3752090135924368535))))))));
  }
  unsigned sym__0__7178003535380331304;
  fluidb_string<55> sym__0___45_7020257275696364520;
  fluidb_string<25> sym__0___45_6307179734719967033;
  fluidb_string<7> sym__0__4568304886257136061;
  fluidb_string<10> sym__0___45_6291097039630000265;
  fluidb_string<11> sym__0__551327770031967739;
  fluidb_string<25> sym__0__3827696365022297353;
  unsigned sym__0___45_1779543743759935870;
  fluidb_string<10> sym__0__3752090135924368535;
 private:
};


class Record36 {
 public:
  Record36(unsigned __sym__0__7069852625741277438, fluidb_string<25> __sym__0___45_2139184416220787303, fluidb_string<40> __sym__0__6834910062454089307, fluidb_string<16> __sym__0___45_673637979750308955, fluidb_string<16> __sym__0__7353040165187485943, fluidb_string<13> __sym__0___45_3600959643487303198, fluidb_string<15> __sym__0__1586920362281366553, unsigned __sym__0___45_565293263947163771, int __sym__0___45_843396218047479825, unsigned __sym__0___45_6341950231013217833, unsigned __sym__0__1045058483100812033, unsigned __sym__0__3789297121224398166, unsigned __sym__0__7633871876750507011, fluidb_string<21> __sym__0___45_1913197190575800618, unsigned __sym__0__5022607639284586068, fluidb_string<10> __sym__0___45_4537203481097655209, unsigned __sym__0___45_4177776814409117721, double __sym__0___45_1641792039791357051, unsigned __sym__0__9155042948135519075, double __sym__0___45_1524873931413302067, unsigned __sym__0__5123726051002722313, unsigned __sym__0___45_3964194374284396198, double __sym__0___45_3323287974231174848, fluidb_string<13> __sym__0___45_7635081431606838648, unsigned __sym__0__3374832300737452457, fluidb_string<18> __sym__0___45_2738400311900405319, fluidb_string<9> __sym__0__922566035134170359, fluidb_string<9> __sym__0___45_4970177704815948360, unsigned __sym__0__1953889797750115686, unsigned __sym__0__7036968840507665704, fluidb_string<7> __sym__0__2424422746197752657, unsigned __sym__0___45_899504608738992510, unsigned __sym__0__2199101055335955185, unsigned __sym__0__8162945309743176777, unsigned __sym__0__5658677538842948015, unsigned __sym__0___45_1804682623039322536, fluidb_string<15> __sym__0___45_4150473036734596643, fluidb_string<2> __sym__0___45_1494825655055665211, fluidb_string<2> __sym__0__7243345290037361860, fluidb_string<2> __sym__0___45_5621333005798540324, fluidb_string<2> __sym__0___45_6906996774260360338, unsigned __sym__0___45_6223982643952099801, fluidb_string<55> __sym__0___45_4582877986939568489, fluidb_string<25> __sym__0__8952063493441915716, fluidb_string<7> __sym__0___45_1824395327270788210, fluidb_string<10> __sym__0___45_4574956228592531724, fluidb_string<11> __sym__0___45_3583563823835889744, fluidb_string<25> __sym__0__1035932931239708898, unsigned __sym__0__2873925968864442957, fluidb_string<10> __sym__0___45_6275854556107336556) : sym__0__7069852625741277438(__sym__0__7069852625741277438), sym__0___45_2139184416220787303(__sym__0___45_2139184416220787303), sym__0__6834910062454089307(__sym__0__6834910062454089307), sym__0___45_673637979750308955(__sym__0___45_673637979750308955), sym__0__7353040165187485943(__sym__0__7353040165187485943), sym__0___45_3600959643487303198(__sym__0___45_3600959643487303198), sym__0__1586920362281366553(__sym__0__1586920362281366553), sym__0___45_565293263947163771(__sym__0___45_565293263947163771), sym__0___45_843396218047479825(__sym__0___45_843396218047479825), sym__0___45_6341950231013217833(__sym__0___45_6341950231013217833), sym__0__1045058483100812033(__sym__0__1045058483100812033), sym__0__3789297121224398166(__sym__0__3789297121224398166), sym__0__7633871876750507011(__sym__0__7633871876750507011), sym__0___45_1913197190575800618(__sym__0___45_1913197190575800618), sym__0__5022607639284586068(__sym__0__5022607639284586068), sym__0___45_4537203481097655209(__sym__0___45_4537203481097655209), sym__0___45_4177776814409117721(__sym__0___45_4177776814409117721), sym__0___45_1641792039791357051(__sym__0___45_1641792039791357051), sym__0__9155042948135519075(__sym__0__9155042948135519075), sym__0___45_1524873931413302067(__sym__0___45_1524873931413302067), sym__0__5123726051002722313(__sym__0__5123726051002722313), sym__0___45_3964194374284396198(__sym__0___45_3964194374284396198), sym__0___45_3323287974231174848(__sym__0___45_3323287974231174848), sym__0___45_7635081431606838648(__sym__0___45_7635081431606838648), sym__0__3374832300737452457(__sym__0__3374832300737452457), sym__0___45_2738400311900405319(__sym__0___45_2738400311900405319), sym__0__922566035134170359(__sym__0__922566035134170359), sym__0___45_4970177704815948360(__sym__0___45_4970177704815948360), sym__0__1953889797750115686(__sym__0__1953889797750115686), sym__0__7036968840507665704(__sym__0__7036968840507665704), sym__0__2424422746197752657(__sym__0__2424422746197752657), sym__0___45_899504608738992510(__sym__0___45_899504608738992510), sym__0__2199101055335955185(__sym__0__2199101055335955185), sym__0__8162945309743176777(__sym__0__8162945309743176777), sym__0__5658677538842948015(__sym__0__5658677538842948015), sym__0___45_1804682623039322536(__sym__0___45_1804682623039322536), sym__0___45_4150473036734596643(__sym__0___45_4150473036734596643), sym__0___45_1494825655055665211(__sym__0___45_1494825655055665211), sym__0__7243345290037361860(__sym__0__7243345290037361860), sym__0___45_5621333005798540324(__sym__0___45_5621333005798540324), sym__0___45_6906996774260360338(__sym__0___45_6906996774260360338), sym__0___45_6223982643952099801(__sym__0___45_6223982643952099801), sym__0___45_4582877986939568489(__sym__0___45_4582877986939568489), sym__0__8952063493441915716(__sym__0__8952063493441915716), sym__0___45_1824395327270788210(__sym__0___45_1824395327270788210), sym__0___45_4574956228592531724(__sym__0___45_4574956228592531724), sym__0___45_3583563823835889744(__sym__0___45_3583563823835889744), sym__0__1035932931239708898(__sym__0__1035932931239708898), sym__0__2873925968864442957(__sym__0__2873925968864442957), sym__0___45_6275854556107336556(__sym__0___45_6275854556107336556)
  {
  }
  Record36() 
  {
  }
  std::string show() const{
    std::stringstream o;
    o << sym__0__7069852625741277438 << " | " << arrToString(sym__0___45_2139184416220787303) << " | " << arrToString(sym__0__6834910062454089307) << " | " << arrToString(sym__0___45_673637979750308955) << " | " << arrToString(sym__0__7353040165187485943) << " | " << arrToString(sym__0___45_3600959643487303198) << " | " << arrToString(sym__0__1586920362281366553) << " | " << sym__0___45_565293263947163771 << " | " << sym__0___45_843396218047479825 << " | " << sym__0___45_6341950231013217833 << " | " << sym__0__1045058483100812033 << " | " << sym__0__3789297121224398166 << " | " << sym__0__7633871876750507011 << " | " << arrToString(sym__0___45_1913197190575800618) << " | " << sym__0__5022607639284586068 << " | " << arrToString(sym__0___45_4537203481097655209) << " | " << sym__0___45_4177776814409117721 << " | " << sym__0___45_1641792039791357051 << " | " << sym__0__9155042948135519075 << " | " << sym__0___45_1524873931413302067 << " | " << sym__0__5123726051002722313 << " | " << sym__0___45_3964194374284396198 << " | " << sym__0___45_3323287974231174848 << " | " << arrToString(sym__0___45_7635081431606838648) << " | " << sym__0__3374832300737452457 << " | " << arrToString(sym__0___45_2738400311900405319) << " | " << arrToString(sym__0__922566035134170359) << " | " << arrToString(sym__0___45_4970177704815948360) << " | " << sym__0__1953889797750115686 << " | " << sym__0__7036968840507665704 << " | " << arrToString(sym__0__2424422746197752657) << " | " << sym__0___45_899504608738992510 << " | " << sym__0__2199101055335955185 << " | " << sym__0__8162945309743176777 << " | " << sym__0__5658677538842948015 << " | " << sym__0___45_1804682623039322536 << " | " << arrToString(sym__0___45_4150473036734596643) << " | " << arrToString(sym__0___45_1494825655055665211) << " | " << arrToString(sym__0__7243345290037361860) << " | " << arrToString(sym__0___45_5621333005798540324) << " | " << arrToString(sym__0___45_6906996774260360338) << " | " << sym__0___45_6223982643952099801 << " | " << arrToString(sym__0___45_4582877986939568489) << " | " << arrToString(sym__0__8952063493441915716) << " | " << arrToString(sym__0___45_1824395327270788210) << " | " << arrToString(sym__0___45_4574956228592531724) << " | " << arrToString(sym__0___45_3583563823835889744) << " | " << arrToString(sym__0__1035932931239708898) << " | " << sym__0__2873925968864442957 << " | " << arrToString(sym__0___45_6275854556107336556);
    return o.str();
  }
  bool operator <(const Record36& otherRec) const{
    return (otherRec.sym__0__7069852625741277438 < sym__0__7069852625741277438 && (otherRec.sym__0___45_2139184416220787303 < sym__0___45_2139184416220787303 && (otherRec.sym__0__6834910062454089307 < sym__0__6834910062454089307 && (otherRec.sym__0___45_673637979750308955 < sym__0___45_673637979750308955 && (otherRec.sym__0__7353040165187485943 < sym__0__7353040165187485943 && (otherRec.sym__0___45_3600959643487303198 < sym__0___45_3600959643487303198 && (otherRec.sym__0__1586920362281366553 < sym__0__1586920362281366553 && (otherRec.sym__0___45_565293263947163771 < sym__0___45_565293263947163771 && (otherRec.sym__0___45_843396218047479825 < sym__0___45_843396218047479825 && (otherRec.sym__0___45_6341950231013217833 < sym__0___45_6341950231013217833 && (otherRec.sym__0__1045058483100812033 < sym__0__1045058483100812033 && (otherRec.sym__0__3789297121224398166 < sym__0__3789297121224398166 && (otherRec.sym__0__7633871876750507011 < sym__0__7633871876750507011 && (otherRec.sym__0___45_1913197190575800618 < sym__0___45_1913197190575800618 && (otherRec.sym__0__5022607639284586068 < sym__0__5022607639284586068 && (otherRec.sym__0___45_4537203481097655209 < sym__0___45_4537203481097655209 && (otherRec.sym__0___45_4177776814409117721 < sym__0___45_4177776814409117721 && (otherRec.sym__0___45_1641792039791357051 < sym__0___45_1641792039791357051 && (otherRec.sym__0__9155042948135519075 < sym__0__9155042948135519075 && (otherRec.sym__0___45_1524873931413302067 < sym__0___45_1524873931413302067 && (otherRec.sym__0__5123726051002722313 < sym__0__5123726051002722313 && (otherRec.sym__0___45_3964194374284396198 < sym__0___45_3964194374284396198 && (otherRec.sym__0___45_3323287974231174848 < sym__0___45_3323287974231174848 && (otherRec.sym__0___45_7635081431606838648 < sym__0___45_7635081431606838648 && (otherRec.sym__0__3374832300737452457 < sym__0__3374832300737452457 && (otherRec.sym__0___45_2738400311900405319 < sym__0___45_2738400311900405319 && (otherRec.sym__0__922566035134170359 < sym__0__922566035134170359 && (otherRec.sym__0___45_4970177704815948360 < sym__0___45_4970177704815948360 && (otherRec.sym__0__1953889797750115686 < sym__0__1953889797750115686 && (otherRec.sym__0__7036968840507665704 < sym__0__7036968840507665704 && (otherRec.sym__0__2424422746197752657 < sym__0__2424422746197752657 && (otherRec.sym__0___45_899504608738992510 < sym__0___45_899504608738992510 && (otherRec.sym__0__2199101055335955185 < sym__0__2199101055335955185 && (otherRec.sym__0__8162945309743176777 < sym__0__8162945309743176777 && (otherRec.sym__0__5658677538842948015 < sym__0__5658677538842948015 && (otherRec.sym__0___45_1804682623039322536 < sym__0___45_1804682623039322536 && (otherRec.sym__0___45_4150473036734596643 < sym__0___45_4150473036734596643 && (otherRec.sym__0___45_1494825655055665211 < sym__0___45_1494825655055665211 && (otherRec.sym__0__7243345290037361860 < sym__0__7243345290037361860 && (otherRec.sym__0___45_5621333005798540324 < sym__0___45_5621333005798540324 && (otherRec.sym__0___45_6906996774260360338 < sym__0___45_6906996774260360338 && (otherRec.sym__0___45_6223982643952099801 < sym__0___45_6223982643952099801 && (otherRec.sym__0___45_4582877986939568489 < sym__0___45_4582877986939568489 && (otherRec.sym__0__8952063493441915716 < sym__0__8952063493441915716 && (otherRec.sym__0___45_1824395327270788210 < sym__0___45_1824395327270788210 && (otherRec.sym__0___45_4574956228592531724 < sym__0___45_4574956228592531724 && (otherRec.sym__0___45_3583563823835889744 < sym__0___45_3583563823835889744 && (otherRec.sym__0__1035932931239708898 < sym__0__1035932931239708898 && (otherRec.sym__0__2873925968864442957 < sym__0__2873925968864442957 && otherRec.sym__0___45_6275854556107336556 < sym__0___45_6275854556107336556)))))))))))))))))))))))))))))))))))))))))))))))));
  }
  bool operator ==(const Record36& otherRec) const{
    return (otherRec.sym__0__7069852625741277438 == sym__0__7069852625741277438 && (otherRec.sym__0___45_2139184416220787303 == sym__0___45_2139184416220787303 && (otherRec.sym__0__6834910062454089307 == sym__0__6834910062454089307 && (otherRec.sym__0___45_673637979750308955 == sym__0___45_673637979750308955 && (otherRec.sym__0__7353040165187485943 == sym__0__7353040165187485943 && (otherRec.sym__0___45_3600959643487303198 == sym__0___45_3600959643487303198 && (otherRec.sym__0__1586920362281366553 == sym__0__1586920362281366553 && (otherRec.sym__0___45_565293263947163771 == sym__0___45_565293263947163771 && (otherRec.sym__0___45_843396218047479825 == sym__0___45_843396218047479825 && (otherRec.sym__0___45_6341950231013217833 == sym__0___45_6341950231013217833 && (otherRec.sym__0__1045058483100812033 == sym__0__1045058483100812033 && (otherRec.sym__0__3789297121224398166 == sym__0__3789297121224398166 && (otherRec.sym__0__7633871876750507011 == sym__0__7633871876750507011 && (otherRec.sym__0___45_1913197190575800618 == sym__0___45_1913197190575800618 && (otherRec.sym__0__5022607639284586068 == sym__0__5022607639284586068 && (otherRec.sym__0___45_4537203481097655209 == sym__0___45_4537203481097655209 && (otherRec.sym__0___45_4177776814409117721 == sym__0___45_4177776814409117721 && (otherRec.sym__0___45_1641792039791357051 == sym__0___45_1641792039791357051 && (otherRec.sym__0__9155042948135519075 == sym__0__9155042948135519075 && (otherRec.sym__0___45_1524873931413302067 == sym__0___45_1524873931413302067 && (otherRec.sym__0__5123726051002722313 == sym__0__5123726051002722313 && (otherRec.sym__0___45_3964194374284396198 == sym__0___45_3964194374284396198 && (otherRec.sym__0___45_3323287974231174848 == sym__0___45_3323287974231174848 && (otherRec.sym__0___45_7635081431606838648 == sym__0___45_7635081431606838648 && (otherRec.sym__0__3374832300737452457 == sym__0__3374832300737452457 && (otherRec.sym__0___45_2738400311900405319 == sym__0___45_2738400311900405319 && (otherRec.sym__0__922566035134170359 == sym__0__922566035134170359 && (otherRec.sym__0___45_4970177704815948360 == sym__0___45_4970177704815948360 && (otherRec.sym__0__1953889797750115686 == sym__0__1953889797750115686 && (otherRec.sym__0__7036968840507665704 == sym__0__7036968840507665704 && (otherRec.sym__0__2424422746197752657 == sym__0__2424422746197752657 && (otherRec.sym__0___45_899504608738992510 == sym__0___45_899504608738992510 && (otherRec.sym__0__2199101055335955185 == sym__0__2199101055335955185 && (otherRec.sym__0__8162945309743176777 == sym__0__8162945309743176777 && (otherRec.sym__0__5658677538842948015 == sym__0__5658677538842948015 && (otherRec.sym__0___45_1804682623039322536 == sym__0___45_1804682623039322536 && (otherRec.sym__0___45_4150473036734596643 == sym__0___45_4150473036734596643 && (otherRec.sym__0___45_1494825655055665211 == sym__0___45_1494825655055665211 && (otherRec.sym__0__7243345290037361860 == sym__0__7243345290037361860 && (otherRec.sym__0___45_5621333005798540324 == sym__0___45_5621333005798540324 && (otherRec.sym__0___45_6906996774260360338 == sym__0___45_6906996774260360338 && (otherRec.sym__0___45_6223982643952099801 == sym__0___45_6223982643952099801 && (otherRec.sym__0___45_4582877986939568489 == sym__0___45_4582877986939568489 && (otherRec.sym__0__8952063493441915716 == sym__0__8952063493441915716 && (otherRec.sym__0___45_1824395327270788210 == sym__0___45_1824395327270788210 && (otherRec.sym__0___45_4574956228592531724 == sym__0___45_4574956228592531724 && (otherRec.sym__0___45_3583563823835889744 == sym__0___45_3583563823835889744 && (otherRec.sym__0__1035932931239708898 == sym__0__1035932931239708898 && (otherRec.sym__0__2873925968864442957 == sym__0__2873925968864442957 && otherRec.sym__0___45_6275854556107336556 == sym__0___45_6275854556107336556)))))))))))))))))))))))))))))))))))))))))))))))));
  }
  bool operator !=(const Record36& otherRec) const{
    return (otherRec.sym__0__7069852625741277438 != sym__0__7069852625741277438 || (otherRec.sym__0___45_2139184416220787303 != sym__0___45_2139184416220787303 || (otherRec.sym__0__6834910062454089307 != sym__0__6834910062454089307 || (otherRec.sym__0___45_673637979750308955 != sym__0___45_673637979750308955 || (otherRec.sym__0__7353040165187485943 != sym__0__7353040165187485943 || (otherRec.sym__0___45_3600959643487303198 != sym__0___45_3600959643487303198 || (otherRec.sym__0__1586920362281366553 != sym__0__1586920362281366553 || (otherRec.sym__0___45_565293263947163771 != sym__0___45_565293263947163771 || (otherRec.sym__0___45_843396218047479825 != sym__0___45_843396218047479825 || (otherRec.sym__0___45_6341950231013217833 != sym__0___45_6341950231013217833 || (otherRec.sym__0__1045058483100812033 != sym__0__1045058483100812033 || (otherRec.sym__0__3789297121224398166 != sym__0__3789297121224398166 || (otherRec.sym__0__7633871876750507011 != sym__0__7633871876750507011 || (otherRec.sym__0___45_1913197190575800618 != sym__0___45_1913197190575800618 || (otherRec.sym__0__5022607639284586068 != sym__0__5022607639284586068 || (otherRec.sym__0___45_4537203481097655209 != sym__0___45_4537203481097655209 || (otherRec.sym__0___45_4177776814409117721 != sym__0___45_4177776814409117721 || (otherRec.sym__0___45_1641792039791357051 != sym__0___45_1641792039791357051 || (otherRec.sym__0__9155042948135519075 != sym__0__9155042948135519075 || (otherRec.sym__0___45_1524873931413302067 != sym__0___45_1524873931413302067 || (otherRec.sym__0__5123726051002722313 != sym__0__5123726051002722313 || (otherRec.sym__0___45_3964194374284396198 != sym__0___45_3964194374284396198 || (otherRec.sym__0___45_3323287974231174848 != sym__0___45_3323287974231174848 || (otherRec.sym__0___45_7635081431606838648 != sym__0___45_7635081431606838648 || (otherRec.sym__0__3374832300737452457 != sym__0__3374832300737452457 || (otherRec.sym__0___45_2738400311900405319 != sym__0___45_2738400311900405319 || (otherRec.sym__0__922566035134170359 != sym__0__922566035134170359 || (otherRec.sym__0___45_4970177704815948360 != sym__0___45_4970177704815948360 || (otherRec.sym__0__1953889797750115686 != sym__0__1953889797750115686 || (otherRec.sym__0__7036968840507665704 != sym__0__7036968840507665704 || (otherRec.sym__0__2424422746197752657 != sym__0__2424422746197752657 || (otherRec.sym__0___45_899504608738992510 != sym__0___45_899504608738992510 || (otherRec.sym__0__2199101055335955185 != sym__0__2199101055335955185 || (otherRec.sym__0__8162945309743176777 != sym__0__8162945309743176777 || (otherRec.sym__0__5658677538842948015 != sym__0__5658677538842948015 || (otherRec.sym__0___45_1804682623039322536 != sym__0___45_1804682623039322536 || (otherRec.sym__0___45_4150473036734596643 != sym__0___45_4150473036734596643 || (otherRec.sym__0___45_1494825655055665211 != sym__0___45_1494825655055665211 || (otherRec.sym__0__7243345290037361860 != sym__0__7243345290037361860 || (otherRec.sym__0___45_5621333005798540324 != sym__0___45_5621333005798540324 || (otherRec.sym__0___45_6906996774260360338 != sym__0___45_6906996774260360338 || (otherRec.sym__0___45_6223982643952099801 != sym__0___45_6223982643952099801 || (otherRec.sym__0___45_4582877986939568489 != sym__0___45_4582877986939568489 || (otherRec.sym__0__8952063493441915716 != sym__0__8952063493441915716 || (otherRec.sym__0___45_1824395327270788210 != sym__0___45_1824395327270788210 || (otherRec.sym__0___45_4574956228592531724 != sym__0___45_4574956228592531724 || (otherRec.sym__0___45_3583563823835889744 != sym__0___45_3583563823835889744 || (otherRec.sym__0__1035932931239708898 != sym__0__1035932931239708898 || (otherRec.sym__0__2873925968864442957 != sym__0__2873925968864442957 || otherRec.sym__0___45_6275854556107336556 != sym__0___45_6275854556107336556)))))))))))))))))))))))))))))))))))))))))))))))));
  }
  unsigned sym__0__7069852625741277438;
  fluidb_string<25> sym__0___45_2139184416220787303;
  fluidb_string<40> sym__0__6834910062454089307;
  fluidb_string<16> sym__0___45_673637979750308955;
  fluidb_string<16> sym__0__7353040165187485943;
  fluidb_string<13> sym__0___45_3600959643487303198;
  fluidb_string<15> sym__0__1586920362281366553;
  unsigned sym__0___45_565293263947163771;
  int sym__0___45_843396218047479825;
  unsigned sym__0___45_6341950231013217833;
  unsigned sym__0__1045058483100812033;
  unsigned sym__0__3789297121224398166;
  unsigned sym__0__7633871876750507011;
  fluidb_string<21> sym__0___45_1913197190575800618;
  unsigned sym__0__5022607639284586068;
  fluidb_string<10> sym__0___45_4537203481097655209;
  unsigned sym__0___45_4177776814409117721;
  double sym__0___45_1641792039791357051;
  unsigned sym__0__9155042948135519075;
  double sym__0___45_1524873931413302067;
  unsigned sym__0__5123726051002722313;
  unsigned sym__0___45_3964194374284396198;
  double sym__0___45_3323287974231174848;
  fluidb_string<13> sym__0___45_7635081431606838648;
  unsigned sym__0__3374832300737452457;
  fluidb_string<18> sym__0___45_2738400311900405319;
  fluidb_string<9> sym__0__922566035134170359;
  fluidb_string<9> sym__0___45_4970177704815948360;
  unsigned sym__0__1953889797750115686;
  unsigned sym__0__7036968840507665704;
  fluidb_string<7> sym__0__2424422746197752657;
  unsigned sym__0___45_899504608738992510;
  unsigned sym__0__2199101055335955185;
  unsigned sym__0__8162945309743176777;
  unsigned sym__0__5658677538842948015;
  unsigned sym__0___45_1804682623039322536;
  fluidb_string<15> sym__0___45_4150473036734596643;
  fluidb_string<2> sym__0___45_1494825655055665211;
  fluidb_string<2> sym__0__7243345290037361860;
  fluidb_string<2> sym__0___45_5621333005798540324;
  fluidb_string<2> sym__0___45_6906996774260360338;
  unsigned sym__0___45_6223982643952099801;
  fluidb_string<55> sym__0___45_4582877986939568489;
  fluidb_string<25> sym__0__8952063493441915716;
  fluidb_string<7> sym__0___45_1824395327270788210;
  fluidb_string<10> sym__0___45_4574956228592531724;
  fluidb_string<11> sym__0___45_3583563823835889744;
  fluidb_string<25> sym__0__1035932931239708898;
  unsigned sym__0__2873925968864442957;
  fluidb_string<10> sym__0___45_6275854556107336556;
 private:
};


class Record10 {
 public:
  Record10(unsigned __sym__0___45_7574074018531922998, int __sym__0__1125464382786937920, unsigned __sym__0___45_8257174981563598792, unsigned __sym__0__957746932829998382, unsigned __sym__0__934137931677987637, unsigned __sym__0___45_7332894783442362324, fluidb_string<21> __sym__0__8974811218372806325, unsigned __sym__0___45_5217562530132451785, fluidb_string<10> __sym__0__7851147553396318904, unsigned __sym__0___45_4975505511391694456, double __sym__0___45_7249986409969561654, unsigned __sym__0__4671626969570181580, double __sym__0___45_3666121704283105054, unsigned __sym__0__5495011930072844518, unsigned __sym__0___45_4423447118092167055, double __sym__0___45_1608082021099887893, fluidb_string<13> __sym__0__1584187396639360899) : sym__0___45_7574074018531922998(__sym__0___45_7574074018531922998), sym__0__1125464382786937920(__sym__0__1125464382786937920), sym__0___45_8257174981563598792(__sym__0___45_8257174981563598792), sym__0__957746932829998382(__sym__0__957746932829998382), sym__0__934137931677987637(__sym__0__934137931677987637), sym__0___45_7332894783442362324(__sym__0___45_7332894783442362324), sym__0__8974811218372806325(__sym__0__8974811218372806325), sym__0___45_5217562530132451785(__sym__0___45_5217562530132451785), sym__0__7851147553396318904(__sym__0__7851147553396318904), sym__0___45_4975505511391694456(__sym__0___45_4975505511391694456), sym__0___45_7249986409969561654(__sym__0___45_7249986409969561654), sym__0__4671626969570181580(__sym__0__4671626969570181580), sym__0___45_3666121704283105054(__sym__0___45_3666121704283105054), sym__0__5495011930072844518(__sym__0__5495011930072844518), sym__0___45_4423447118092167055(__sym__0___45_4423447118092167055), sym__0___45_1608082021099887893(__sym__0___45_1608082021099887893), sym__0__1584187396639360899(__sym__0__1584187396639360899)
  {
  }
  Record10() 
  {
  }
  std::string show() const{
    std::stringstream o;
    o << sym__0___45_7574074018531922998 << " | " << sym__0__1125464382786937920 << " | " << sym__0___45_8257174981563598792 << " | " << sym__0__957746932829998382 << " | " << sym__0__934137931677987637 << " | " << sym__0___45_7332894783442362324 << " | " << arrToString(sym__0__8974811218372806325) << " | " << sym__0___45_5217562530132451785 << " | " << arrToString(sym__0__7851147553396318904) << " | " << sym__0___45_4975505511391694456 << " | " << sym__0___45_7249986409969561654 << " | " << sym__0__4671626969570181580 << " | " << sym__0___45_3666121704283105054 << " | " << sym__0__5495011930072844518 << " | " << sym__0___45_4423447118092167055 << " | " << sym__0___45_1608082021099887893 << " | " << arrToString(sym__0__1584187396639360899);
    return o.str();
  }
  bool operator <(const Record10& otherRec) const{
    return (otherRec.sym__0___45_7574074018531922998 < sym__0___45_7574074018531922998 && (otherRec.sym__0__1125464382786937920 < sym__0__1125464382786937920 && (otherRec.sym__0___45_8257174981563598792 < sym__0___45_8257174981563598792 && (otherRec.sym__0__957746932829998382 < sym__0__957746932829998382 && (otherRec.sym__0__934137931677987637 < sym__0__934137931677987637 && (otherRec.sym__0___45_7332894783442362324 < sym__0___45_7332894783442362324 && (otherRec.sym__0__8974811218372806325 < sym__0__8974811218372806325 && (otherRec.sym__0___45_5217562530132451785 < sym__0___45_5217562530132451785 && (otherRec.sym__0__7851147553396318904 < sym__0__7851147553396318904 && (otherRec.sym__0___45_4975505511391694456 < sym__0___45_4975505511391694456 && (otherRec.sym__0___45_7249986409969561654 < sym__0___45_7249986409969561654 && (otherRec.sym__0__4671626969570181580 < sym__0__4671626969570181580 && (otherRec.sym__0___45_3666121704283105054 < sym__0___45_3666121704283105054 && (otherRec.sym__0__5495011930072844518 < sym__0__5495011930072844518 && (otherRec.sym__0___45_4423447118092167055 < sym__0___45_4423447118092167055 && (otherRec.sym__0___45_1608082021099887893 < sym__0___45_1608082021099887893 && otherRec.sym__0__1584187396639360899 < sym__0__1584187396639360899))))))))))))))));
  }
  bool operator ==(const Record10& otherRec) const{
    return (otherRec.sym__0___45_7574074018531922998 == sym__0___45_7574074018531922998 && (otherRec.sym__0__1125464382786937920 == sym__0__1125464382786937920 && (otherRec.sym__0___45_8257174981563598792 == sym__0___45_8257174981563598792 && (otherRec.sym__0__957746932829998382 == sym__0__957746932829998382 && (otherRec.sym__0__934137931677987637 == sym__0__934137931677987637 && (otherRec.sym__0___45_7332894783442362324 == sym__0___45_7332894783442362324 && (otherRec.sym__0__8974811218372806325 == sym__0__8974811218372806325 && (otherRec.sym__0___45_5217562530132451785 == sym__0___45_5217562530132451785 && (otherRec.sym__0__7851147553396318904 == sym__0__7851147553396318904 && (otherRec.sym__0___45_4975505511391694456 == sym__0___45_4975505511391694456 && (otherRec.sym__0___45_7249986409969561654 == sym__0___45_7249986409969561654 && (otherRec.sym__0__4671626969570181580 == sym__0__4671626969570181580 && (otherRec.sym__0___45_3666121704283105054 == sym__0___45_3666121704283105054 && (otherRec.sym__0__5495011930072844518 == sym__0__5495011930072844518 && (otherRec.sym__0___45_4423447118092167055 == sym__0___45_4423447118092167055 && (otherRec.sym__0___45_1608082021099887893 == sym__0___45_1608082021099887893 && otherRec.sym__0__1584187396639360899 == sym__0__1584187396639360899))))))))))))))));
  }
  bool operator !=(const Record10& otherRec) const{
    return (otherRec.sym__0___45_7574074018531922998 != sym__0___45_7574074018531922998 || (otherRec.sym__0__1125464382786937920 != sym__0__1125464382786937920 || (otherRec.sym__0___45_8257174981563598792 != sym__0___45_8257174981563598792 || (otherRec.sym__0__957746932829998382 != sym__0__957746932829998382 || (otherRec.sym__0__934137931677987637 != sym__0__934137931677987637 || (otherRec.sym__0___45_7332894783442362324 != sym__0___45_7332894783442362324 || (otherRec.sym__0__8974811218372806325 != sym__0__8974811218372806325 || (otherRec.sym__0___45_5217562530132451785 != sym__0___45_5217562530132451785 || (otherRec.sym__0__7851147553396318904 != sym__0__7851147553396318904 || (otherRec.sym__0___45_4975505511391694456 != sym__0___45_4975505511391694456 || (otherRec.sym__0___45_7249986409969561654 != sym__0___45_7249986409969561654 || (otherRec.sym__0__4671626969570181580 != sym__0__4671626969570181580 || (otherRec.sym__0___45_3666121704283105054 != sym__0___45_3666121704283105054 || (otherRec.sym__0__5495011930072844518 != sym__0__5495011930072844518 || (otherRec.sym__0___45_4423447118092167055 != sym__0___45_4423447118092167055 || (otherRec.sym__0___45_1608082021099887893 != sym__0___45_1608082021099887893 || otherRec.sym__0__1584187396639360899 != sym__0__1584187396639360899))))))))))))))));
  }
  unsigned sym__0___45_7574074018531922998;
  int sym__0__1125464382786937920;
  unsigned sym__0___45_8257174981563598792;
  unsigned sym__0__957746932829998382;
  unsigned sym__0__934137931677987637;
  unsigned sym__0___45_7332894783442362324;
  fluidb_string<21> sym__0__8974811218372806325;
  unsigned sym__0___45_5217562530132451785;
  fluidb_string<10> sym__0__7851147553396318904;
  unsigned sym__0___45_4975505511391694456;
  double sym__0___45_7249986409969561654;
  unsigned sym__0__4671626969570181580;
  double sym__0___45_3666121704283105054;
  unsigned sym__0__5495011930072844518;
  unsigned sym__0___45_4423447118092167055;
  double sym__0___45_1608082021099887893;
  fluidb_string<13> sym__0__1584187396639360899;
 private:
};


class Record17 {
 public:
  Record17(unsigned __sortElem0) : sortElem0(__sortElem0)
  {
  }
  Record17() 
  {
  }
  std::string show() const{
    std::stringstream o;
    o << sortElem0;
    return o.str();
  }
  bool operator <(const Record17& otherRec) const{
    return otherRec.sortElem0 < sortElem0;
  }
  bool operator ==(const Record17& otherRec) const{
    return otherRec.sortElem0 == sortElem0;
  }
  bool operator !=(const Record17& otherRec) const{
    return otherRec.sortElem0 != sortElem0;
  }
  unsigned sortElem0;
 private:
};


class Record14 {
 public:
  Record14(unsigned __sym__0__2037864888707786451, fluidb_string<18> __sym__0__8533656712666151747, fluidb_string<9> __sym__0__646314041574508429, fluidb_string<9> __sym__0__6064137978327902054, unsigned __sym__0__3754157776500852496, unsigned __sym__0__6284345160241949046, fluidb_string<7> __sym__0___45_773692805971570325, unsigned __sym__0___45_8399474032083007524, unsigned __sym__0___45_2038947427357444789, unsigned __sym__0__6071994954612827827, unsigned __sym__0__7742515703067448213, unsigned __sym__0__5201219213304227654, fluidb_string<15> __sym__0___45_5896625796158057241, fluidb_string<2> __sym__0___45_1108504872221226081, fluidb_string<2> __sym__0__1055103969674359346, fluidb_string<2> __sym__0__9115626546918942554, fluidb_string<2> __sym__0___45_6850413444013389848) : sym__0__2037864888707786451(__sym__0__2037864888707786451), sym__0__8533656712666151747(__sym__0__8533656712666151747), sym__0__646314041574508429(__sym__0__646314041574508429), sym__0__6064137978327902054(__sym__0__6064137978327902054), sym__0__3754157776500852496(__sym__0__3754157776500852496), sym__0__6284345160241949046(__sym__0__6284345160241949046), sym__0___45_773692805971570325(__sym__0___45_773692805971570325), sym__0___45_8399474032083007524(__sym__0___45_8399474032083007524), sym__0___45_2038947427357444789(__sym__0___45_2038947427357444789), sym__0__6071994954612827827(__sym__0__6071994954612827827), sym__0__7742515703067448213(__sym__0__7742515703067448213), sym__0__5201219213304227654(__sym__0__5201219213304227654), sym__0___45_5896625796158057241(__sym__0___45_5896625796158057241), sym__0___45_1108504872221226081(__sym__0___45_1108504872221226081), sym__0__1055103969674359346(__sym__0__1055103969674359346), sym__0__9115626546918942554(__sym__0__9115626546918942554), sym__0___45_6850413444013389848(__sym__0___45_6850413444013389848)
  {
  }
  Record14() 
  {
  }
  std::string show() const{
    std::stringstream o;
    o << sym__0__2037864888707786451 << " | " << arrToString(sym__0__8533656712666151747) << " | " << arrToString(sym__0__646314041574508429) << " | " << arrToString(sym__0__6064137978327902054) << " | " << sym__0__3754157776500852496 << " | " << sym__0__6284345160241949046 << " | " << arrToString(sym__0___45_773692805971570325) << " | " << sym__0___45_8399474032083007524 << " | " << sym__0___45_2038947427357444789 << " | " << sym__0__6071994954612827827 << " | " << sym__0__7742515703067448213 << " | " << sym__0__5201219213304227654 << " | " << arrToString(sym__0___45_5896625796158057241) << " | " << arrToString(sym__0___45_1108504872221226081) << " | " << arrToString(sym__0__1055103969674359346) << " | " << arrToString(sym__0__9115626546918942554) << " | " << arrToString(sym__0___45_6850413444013389848);
    return o.str();
  }
  bool operator <(const Record14& otherRec) const{
    return (otherRec.sym__0__2037864888707786451 < sym__0__2037864888707786451 && (otherRec.sym__0__8533656712666151747 < sym__0__8533656712666151747 && (otherRec.sym__0__646314041574508429 < sym__0__646314041574508429 && (otherRec.sym__0__6064137978327902054 < sym__0__6064137978327902054 && (otherRec.sym__0__3754157776500852496 < sym__0__3754157776500852496 && (otherRec.sym__0__6284345160241949046 < sym__0__6284345160241949046 && (otherRec.sym__0___45_773692805971570325 < sym__0___45_773692805971570325 && (otherRec.sym__0___45_8399474032083007524 < sym__0___45_8399474032083007524 && (otherRec.sym__0___45_2038947427357444789 < sym__0___45_2038947427357444789 && (otherRec.sym__0__6071994954612827827 < sym__0__6071994954612827827 && (otherRec.sym__0__7742515703067448213 < sym__0__7742515703067448213 && (otherRec.sym__0__5201219213304227654 < sym__0__5201219213304227654 && (otherRec.sym__0___45_5896625796158057241 < sym__0___45_5896625796158057241 && (otherRec.sym__0___45_1108504872221226081 < sym__0___45_1108504872221226081 && (otherRec.sym__0__1055103969674359346 < sym__0__1055103969674359346 && (otherRec.sym__0__9115626546918942554 < sym__0__9115626546918942554 && otherRec.sym__0___45_6850413444013389848 < sym__0___45_6850413444013389848))))))))))))))));
  }
  bool operator ==(const Record14& otherRec) const{
    return (otherRec.sym__0__2037864888707786451 == sym__0__2037864888707786451 && (otherRec.sym__0__8533656712666151747 == sym__0__8533656712666151747 && (otherRec.sym__0__646314041574508429 == sym__0__646314041574508429 && (otherRec.sym__0__6064137978327902054 == sym__0__6064137978327902054 && (otherRec.sym__0__3754157776500852496 == sym__0__3754157776500852496 && (otherRec.sym__0__6284345160241949046 == sym__0__6284345160241949046 && (otherRec.sym__0___45_773692805971570325 == sym__0___45_773692805971570325 && (otherRec.sym__0___45_8399474032083007524 == sym__0___45_8399474032083007524 && (otherRec.sym__0___45_2038947427357444789 == sym__0___45_2038947427357444789 && (otherRec.sym__0__6071994954612827827 == sym__0__6071994954612827827 && (otherRec.sym__0__7742515703067448213 == sym__0__7742515703067448213 && (otherRec.sym__0__5201219213304227654 == sym__0__5201219213304227654 && (otherRec.sym__0___45_5896625796158057241 == sym__0___45_5896625796158057241 && (otherRec.sym__0___45_1108504872221226081 == sym__0___45_1108504872221226081 && (otherRec.sym__0__1055103969674359346 == sym__0__1055103969674359346 && (otherRec.sym__0__9115626546918942554 == sym__0__9115626546918942554 && otherRec.sym__0___45_6850413444013389848 == sym__0___45_6850413444013389848))))))))))))))));
  }
  bool operator !=(const Record14& otherRec) const{
    return (otherRec.sym__0__2037864888707786451 != sym__0__2037864888707786451 || (otherRec.sym__0__8533656712666151747 != sym__0__8533656712666151747 || (otherRec.sym__0__646314041574508429 != sym__0__646314041574508429 || (otherRec.sym__0__6064137978327902054 != sym__0__6064137978327902054 || (otherRec.sym__0__3754157776500852496 != sym__0__3754157776500852496 || (otherRec.sym__0__6284345160241949046 != sym__0__6284345160241949046 || (otherRec.sym__0___45_773692805971570325 != sym__0___45_773692805971570325 || (otherRec.sym__0___45_8399474032083007524 != sym__0___45_8399474032083007524 || (otherRec.sym__0___45_2038947427357444789 != sym__0___45_2038947427357444789 || (otherRec.sym__0__6071994954612827827 != sym__0__6071994954612827827 || (otherRec.sym__0__7742515703067448213 != sym__0__7742515703067448213 || (otherRec.sym__0__5201219213304227654 != sym__0__5201219213304227654 || (otherRec.sym__0___45_5896625796158057241 != sym__0___45_5896625796158057241 || (otherRec.sym__0___45_1108504872221226081 != sym__0___45_1108504872221226081 || (otherRec.sym__0__1055103969674359346 != sym__0__1055103969674359346 || (otherRec.sym__0__9115626546918942554 != sym__0__9115626546918942554 || otherRec.sym__0___45_6850413444013389848 != sym__0___45_6850413444013389848))))))))))))))));
  }
  unsigned sym__0__2037864888707786451;
  fluidb_string<18> sym__0__8533656712666151747;
  fluidb_string<9> sym__0__646314041574508429;
  fluidb_string<9> sym__0__6064137978327902054;
  unsigned sym__0__3754157776500852496;
  unsigned sym__0__6284345160241949046;
  fluidb_string<7> sym__0___45_773692805971570325;
  unsigned sym__0___45_8399474032083007524;
  unsigned sym__0___45_2038947427357444789;
  unsigned sym__0__6071994954612827827;
  unsigned sym__0__7742515703067448213;
  unsigned sym__0__5201219213304227654;
  fluidb_string<15> sym__0___45_5896625796158057241;
  fluidb_string<2> sym__0___45_1108504872221226081;
  fluidb_string<2> sym__0__1055103969674359346;
  fluidb_string<2> sym__0__9115626546918942554;
  fluidb_string<2> sym__0___45_6850413444013389848;
 private:
};


class Record2 {
 public:
  Record2(unsigned __sym__0__2833764152503888409, fluidb_string<18> __sym__0__6938021140779677761, fluidb_string<40> __sym__0___45_4700201805806600089, fluidb_string<11> __sym__0__3362667619044778557, fluidb_string<15> __sym__0__2679827580767046755, fluidb_string<13> __sym__0___45_4186304031693649930, fluidb_string<15> __sym__0__8596564865999609793, fluidb_string<21> __sym__0___45_1671053890158572571, unsigned __sym__0__2256924431415148013, int __sym__0__347872876320563651, unsigned __sym__0___45_7666447219434903317, unsigned __sym__0__1272718151591622153, unsigned __sym__0__4584633926271658914, unsigned __sym__0___45_4610773208091240233, fluidb_string<21> __sym__0___45_5766638191766435038, unsigned __sym__0___45_5211223358204127380, fluidb_string<10> __sym__0__8435431464460332395, unsigned __sym__0___45_6450191115912157957, double __sym__0__7921907673157171693, unsigned __sym__0___45_1699747741436218441, double __sym__0___45_2985562469054236715, unsigned __sym__0__3746029949899912401, unsigned __sym__0___45_989155948099215770, double __sym__0___45_1667761180508152936, fluidb_string<13> __sym__0__5854462121170882944, unsigned __sym__0___45_1023382914117654422, fluidb_string<25> __sym__0__6224010339127806049, fluidb_string<40> __sym__0___45_8804639047977952305, fluidb_string<16> __sym__0__8926375957639307021, fluidb_string<16> __sym__0__5153200798583684363, fluidb_string<13> __sym__0___45_794494697990656050, fluidb_string<15> __sym__0__7308161412148661473) : sym__0__2833764152503888409(__sym__0__2833764152503888409), sym__0__6938021140779677761(__sym__0__6938021140779677761), sym__0___45_4700201805806600089(__sym__0___45_4700201805806600089), sym__0__3362667619044778557(__sym__0__3362667619044778557), sym__0__2679827580767046755(__sym__0__2679827580767046755), sym__0___45_4186304031693649930(__sym__0___45_4186304031693649930), sym__0__8596564865999609793(__sym__0__8596564865999609793), sym__0___45_1671053890158572571(__sym__0___45_1671053890158572571), sym__0__2256924431415148013(__sym__0__2256924431415148013), sym__0__347872876320563651(__sym__0__347872876320563651), sym__0___45_7666447219434903317(__sym__0___45_7666447219434903317), sym__0__1272718151591622153(__sym__0__1272718151591622153), sym__0__4584633926271658914(__sym__0__4584633926271658914), sym__0___45_4610773208091240233(__sym__0___45_4610773208091240233), sym__0___45_5766638191766435038(__sym__0___45_5766638191766435038), sym__0___45_5211223358204127380(__sym__0___45_5211223358204127380), sym__0__8435431464460332395(__sym__0__8435431464460332395), sym__0___45_6450191115912157957(__sym__0___45_6450191115912157957), sym__0__7921907673157171693(__sym__0__7921907673157171693), sym__0___45_1699747741436218441(__sym__0___45_1699747741436218441), sym__0___45_2985562469054236715(__sym__0___45_2985562469054236715), sym__0__3746029949899912401(__sym__0__3746029949899912401), sym__0___45_989155948099215770(__sym__0___45_989155948099215770), sym__0___45_1667761180508152936(__sym__0___45_1667761180508152936), sym__0__5854462121170882944(__sym__0__5854462121170882944), sym__0___45_1023382914117654422(__sym__0___45_1023382914117654422), sym__0__6224010339127806049(__sym__0__6224010339127806049), sym__0___45_8804639047977952305(__sym__0___45_8804639047977952305), sym__0__8926375957639307021(__sym__0__8926375957639307021), sym__0__5153200798583684363(__sym__0__5153200798583684363), sym__0___45_794494697990656050(__sym__0___45_794494697990656050), sym__0__7308161412148661473(__sym__0__7308161412148661473)
  {
  }
  Record2() 
  {
  }
  std::string show() const{
    std::stringstream o;
    o << sym__0__2833764152503888409 << " | " << arrToString(sym__0__6938021140779677761) << " | " << arrToString(sym__0___45_4700201805806600089) << " | " << arrToString(sym__0__3362667619044778557) << " | " << arrToString(sym__0__2679827580767046755) << " | " << arrToString(sym__0___45_4186304031693649930) << " | " << arrToString(sym__0__8596564865999609793) << " | " << arrToString(sym__0___45_1671053890158572571) << " | " << sym__0__2256924431415148013 << " | " << sym__0__347872876320563651 << " | " << sym__0___45_7666447219434903317 << " | " << sym__0__1272718151591622153 << " | " << sym__0__4584633926271658914 << " | " << sym__0___45_4610773208091240233 << " | " << arrToString(sym__0___45_5766638191766435038) << " | " << sym__0___45_5211223358204127380 << " | " << arrToString(sym__0__8435431464460332395) << " | " << sym__0___45_6450191115912157957 << " | " << sym__0__7921907673157171693 << " | " << sym__0___45_1699747741436218441 << " | " << sym__0___45_2985562469054236715 << " | " << sym__0__3746029949899912401 << " | " << sym__0___45_989155948099215770 << " | " << sym__0___45_1667761180508152936 << " | " << arrToString(sym__0__5854462121170882944) << " | " << sym__0___45_1023382914117654422 << " | " << arrToString(sym__0__6224010339127806049) << " | " << arrToString(sym__0___45_8804639047977952305) << " | " << arrToString(sym__0__8926375957639307021) << " | " << arrToString(sym__0__5153200798583684363) << " | " << arrToString(sym__0___45_794494697990656050) << " | " << arrToString(sym__0__7308161412148661473);
    return o.str();
  }
  bool operator <(const Record2& otherRec) const{
    return (otherRec.sym__0__2833764152503888409 < sym__0__2833764152503888409 && (otherRec.sym__0__6938021140779677761 < sym__0__6938021140779677761 && (otherRec.sym__0___45_4700201805806600089 < sym__0___45_4700201805806600089 && (otherRec.sym__0__3362667619044778557 < sym__0__3362667619044778557 && (otherRec.sym__0__2679827580767046755 < sym__0__2679827580767046755 && (otherRec.sym__0___45_4186304031693649930 < sym__0___45_4186304031693649930 && (otherRec.sym__0__8596564865999609793 < sym__0__8596564865999609793 && (otherRec.sym__0___45_1671053890158572571 < sym__0___45_1671053890158572571 && (otherRec.sym__0__2256924431415148013 < sym__0__2256924431415148013 && (otherRec.sym__0__347872876320563651 < sym__0__347872876320563651 && (otherRec.sym__0___45_7666447219434903317 < sym__0___45_7666447219434903317 && (otherRec.sym__0__1272718151591622153 < sym__0__1272718151591622153 && (otherRec.sym__0__4584633926271658914 < sym__0__4584633926271658914 && (otherRec.sym__0___45_4610773208091240233 < sym__0___45_4610773208091240233 && (otherRec.sym__0___45_5766638191766435038 < sym__0___45_5766638191766435038 && (otherRec.sym__0___45_5211223358204127380 < sym__0___45_5211223358204127380 && (otherRec.sym__0__8435431464460332395 < sym__0__8435431464460332395 && (otherRec.sym__0___45_6450191115912157957 < sym__0___45_6450191115912157957 && (otherRec.sym__0__7921907673157171693 < sym__0__7921907673157171693 && (otherRec.sym__0___45_1699747741436218441 < sym__0___45_1699747741436218441 && (otherRec.sym__0___45_2985562469054236715 < sym__0___45_2985562469054236715 && (otherRec.sym__0__3746029949899912401 < sym__0__3746029949899912401 && (otherRec.sym__0___45_989155948099215770 < sym__0___45_989155948099215770 && (otherRec.sym__0___45_1667761180508152936 < sym__0___45_1667761180508152936 && (otherRec.sym__0__5854462121170882944 < sym__0__5854462121170882944 && (otherRec.sym__0___45_1023382914117654422 < sym__0___45_1023382914117654422 && (otherRec.sym__0__6224010339127806049 < sym__0__6224010339127806049 && (otherRec.sym__0___45_8804639047977952305 < sym__0___45_8804639047977952305 && (otherRec.sym__0__8926375957639307021 < sym__0__8926375957639307021 && (otherRec.sym__0__5153200798583684363 < sym__0__5153200798583684363 && (otherRec.sym__0___45_794494697990656050 < sym__0___45_794494697990656050 && otherRec.sym__0__7308161412148661473 < sym__0__7308161412148661473)))))))))))))))))))))))))))))));
  }
  bool operator ==(const Record2& otherRec) const{
    return (otherRec.sym__0__2833764152503888409 == sym__0__2833764152503888409 && (otherRec.sym__0__6938021140779677761 == sym__0__6938021140779677761 && (otherRec.sym__0___45_4700201805806600089 == sym__0___45_4700201805806600089 && (otherRec.sym__0__3362667619044778557 == sym__0__3362667619044778557 && (otherRec.sym__0__2679827580767046755 == sym__0__2679827580767046755 && (otherRec.sym__0___45_4186304031693649930 == sym__0___45_4186304031693649930 && (otherRec.sym__0__8596564865999609793 == sym__0__8596564865999609793 && (otherRec.sym__0___45_1671053890158572571 == sym__0___45_1671053890158572571 && (otherRec.sym__0__2256924431415148013 == sym__0__2256924431415148013 && (otherRec.sym__0__347872876320563651 == sym__0__347872876320563651 && (otherRec.sym__0___45_7666447219434903317 == sym__0___45_7666447219434903317 && (otherRec.sym__0__1272718151591622153 == sym__0__1272718151591622153 && (otherRec.sym__0__4584633926271658914 == sym__0__4584633926271658914 && (otherRec.sym__0___45_4610773208091240233 == sym__0___45_4610773208091240233 && (otherRec.sym__0___45_5766638191766435038 == sym__0___45_5766638191766435038 && (otherRec.sym__0___45_5211223358204127380 == sym__0___45_5211223358204127380 && (otherRec.sym__0__8435431464460332395 == sym__0__8435431464460332395 && (otherRec.sym__0___45_6450191115912157957 == sym__0___45_6450191115912157957 && (otherRec.sym__0__7921907673157171693 == sym__0__7921907673157171693 && (otherRec.sym__0___45_1699747741436218441 == sym__0___45_1699747741436218441 && (otherRec.sym__0___45_2985562469054236715 == sym__0___45_2985562469054236715 && (otherRec.sym__0__3746029949899912401 == sym__0__3746029949899912401 && (otherRec.sym__0___45_989155948099215770 == sym__0___45_989155948099215770 && (otherRec.sym__0___45_1667761180508152936 == sym__0___45_1667761180508152936 && (otherRec.sym__0__5854462121170882944 == sym__0__5854462121170882944 && (otherRec.sym__0___45_1023382914117654422 == sym__0___45_1023382914117654422 && (otherRec.sym__0__6224010339127806049 == sym__0__6224010339127806049 && (otherRec.sym__0___45_8804639047977952305 == sym__0___45_8804639047977952305 && (otherRec.sym__0__8926375957639307021 == sym__0__8926375957639307021 && (otherRec.sym__0__5153200798583684363 == sym__0__5153200798583684363 && (otherRec.sym__0___45_794494697990656050 == sym__0___45_794494697990656050 && otherRec.sym__0__7308161412148661473 == sym__0__7308161412148661473)))))))))))))))))))))))))))))));
  }
  bool operator !=(const Record2& otherRec) const{
    return (otherRec.sym__0__2833764152503888409 != sym__0__2833764152503888409 || (otherRec.sym__0__6938021140779677761 != sym__0__6938021140779677761 || (otherRec.sym__0___45_4700201805806600089 != sym__0___45_4700201805806600089 || (otherRec.sym__0__3362667619044778557 != sym__0__3362667619044778557 || (otherRec.sym__0__2679827580767046755 != sym__0__2679827580767046755 || (otherRec.sym__0___45_4186304031693649930 != sym__0___45_4186304031693649930 || (otherRec.sym__0__8596564865999609793 != sym__0__8596564865999609793 || (otherRec.sym__0___45_1671053890158572571 != sym__0___45_1671053890158572571 || (otherRec.sym__0__2256924431415148013 != sym__0__2256924431415148013 || (otherRec.sym__0__347872876320563651 != sym__0__347872876320563651 || (otherRec.sym__0___45_7666447219434903317 != sym__0___45_7666447219434903317 || (otherRec.sym__0__1272718151591622153 != sym__0__1272718151591622153 || (otherRec.sym__0__4584633926271658914 != sym__0__4584633926271658914 || (otherRec.sym__0___45_4610773208091240233 != sym__0___45_4610773208091240233 || (otherRec.sym__0___45_5766638191766435038 != sym__0___45_5766638191766435038 || (otherRec.sym__0___45_5211223358204127380 != sym__0___45_5211223358204127380 || (otherRec.sym__0__8435431464460332395 != sym__0__8435431464460332395 || (otherRec.sym__0___45_6450191115912157957 != sym__0___45_6450191115912157957 || (otherRec.sym__0__7921907673157171693 != sym__0__7921907673157171693 || (otherRec.sym__0___45_1699747741436218441 != sym__0___45_1699747741436218441 || (otherRec.sym__0___45_2985562469054236715 != sym__0___45_2985562469054236715 || (otherRec.sym__0__3746029949899912401 != sym__0__3746029949899912401 || (otherRec.sym__0___45_989155948099215770 != sym__0___45_989155948099215770 || (otherRec.sym__0___45_1667761180508152936 != sym__0___45_1667761180508152936 || (otherRec.sym__0__5854462121170882944 != sym__0__5854462121170882944 || (otherRec.sym__0___45_1023382914117654422 != sym__0___45_1023382914117654422 || (otherRec.sym__0__6224010339127806049 != sym__0__6224010339127806049 || (otherRec.sym__0___45_8804639047977952305 != sym__0___45_8804639047977952305 || (otherRec.sym__0__8926375957639307021 != sym__0__8926375957639307021 || (otherRec.sym__0__5153200798583684363 != sym__0__5153200798583684363 || (otherRec.sym__0___45_794494697990656050 != sym__0___45_794494697990656050 || otherRec.sym__0__7308161412148661473 != sym__0__7308161412148661473)))))))))))))))))))))))))))))));
  }
  unsigned sym__0__2833764152503888409;
  fluidb_string<18> sym__0__6938021140779677761;
  fluidb_string<40> sym__0___45_4700201805806600089;
  fluidb_string<11> sym__0__3362667619044778557;
  fluidb_string<15> sym__0__2679827580767046755;
  fluidb_string<13> sym__0___45_4186304031693649930;
  fluidb_string<15> sym__0__8596564865999609793;
  fluidb_string<21> sym__0___45_1671053890158572571;
  unsigned sym__0__2256924431415148013;
  int sym__0__347872876320563651;
  unsigned sym__0___45_7666447219434903317;
  unsigned sym__0__1272718151591622153;
  unsigned sym__0__4584633926271658914;
  unsigned sym__0___45_4610773208091240233;
  fluidb_string<21> sym__0___45_5766638191766435038;
  unsigned sym__0___45_5211223358204127380;
  fluidb_string<10> sym__0__8435431464460332395;
  unsigned sym__0___45_6450191115912157957;
  double sym__0__7921907673157171693;
  unsigned sym__0___45_1699747741436218441;
  double sym__0___45_2985562469054236715;
  unsigned sym__0__3746029949899912401;
  unsigned sym__0___45_989155948099215770;
  double sym__0___45_1667761180508152936;
  fluidb_string<13> sym__0__5854462121170882944;
  unsigned sym__0___45_1023382914117654422;
  fluidb_string<25> sym__0__6224010339127806049;
  fluidb_string<40> sym__0___45_8804639047977952305;
  fluidb_string<16> sym__0__8926375957639307021;
  fluidb_string<16> sym__0__5153200798583684363;
  fluidb_string<13> sym__0___45_794494697990656050;
  fluidb_string<15> sym__0__7308161412148661473;
 private:
};


class Record8 {
 public:
  Record8(unsigned __sym__0___45_8202918452351256080, fluidb_string<18> __sym__0__3217182456213118816, fluidb_string<9> __sym__0___45_587373445859874706, fluidb_string<9> __sym__0___45_8346128157561074223, unsigned __sym__0__2979561800187053807, unsigned __sym__0___45_899573490466067231, fluidb_string<7> __sym__0___45_2706395517471750200, unsigned __sym__0___45_6067709637706619093, unsigned __sym__0__1141311422513456040, unsigned __sym__0___45_5223888065355534256, unsigned __sym__0__2672047382496516406, unsigned __sym__0__4932263286160334513, fluidb_string<15> __sym__0__4463721534751519028, fluidb_string<2> __sym__0___45_4864066414314726068, fluidb_string<2> __sym__0__937958105294580029, fluidb_string<2> __sym__0___45_1982623509189166171, fluidb_string<2> __sym__0__4762673478997720679, unsigned __sym__0__7588001997570016652, int __sym__0___45_4747443848713997322, unsigned __sym__0___45_3257188284918960498, unsigned __sym__0__1617172947989036440, unsigned __sym__0___45_810220525799073153, unsigned __sym__0__8132341549271366762, fluidb_string<21> __sym__0__1394287910975083263, unsigned __sym__0__5644261439804640685, fluidb_string<10> __sym__0__9057335116627787790, unsigned __sym__0__2339428003903657470, double __sym__0__3371773490934440332, unsigned __sym__0___45_1286955585961260406, double __sym__0___45_1657469713282332988, unsigned __sym__0__816781160548213904, unsigned __sym__0__8401801716519894867, double __sym__0__5709933202258624457, fluidb_string<13> __sym__0__7900257115361061889) : sym__0___45_8202918452351256080(__sym__0___45_8202918452351256080), sym__0__3217182456213118816(__sym__0__3217182456213118816), sym__0___45_587373445859874706(__sym__0___45_587373445859874706), sym__0___45_8346128157561074223(__sym__0___45_8346128157561074223), sym__0__2979561800187053807(__sym__0__2979561800187053807), sym__0___45_899573490466067231(__sym__0___45_899573490466067231), sym__0___45_2706395517471750200(__sym__0___45_2706395517471750200), sym__0___45_6067709637706619093(__sym__0___45_6067709637706619093), sym__0__1141311422513456040(__sym__0__1141311422513456040), sym__0___45_5223888065355534256(__sym__0___45_5223888065355534256), sym__0__2672047382496516406(__sym__0__2672047382496516406), sym__0__4932263286160334513(__sym__0__4932263286160334513), sym__0__4463721534751519028(__sym__0__4463721534751519028), sym__0___45_4864066414314726068(__sym__0___45_4864066414314726068), sym__0__937958105294580029(__sym__0__937958105294580029), sym__0___45_1982623509189166171(__sym__0___45_1982623509189166171), sym__0__4762673478997720679(__sym__0__4762673478997720679), sym__0__7588001997570016652(__sym__0__7588001997570016652), sym__0___45_4747443848713997322(__sym__0___45_4747443848713997322), sym__0___45_3257188284918960498(__sym__0___45_3257188284918960498), sym__0__1617172947989036440(__sym__0__1617172947989036440), sym__0___45_810220525799073153(__sym__0___45_810220525799073153), sym__0__8132341549271366762(__sym__0__8132341549271366762), sym__0__1394287910975083263(__sym__0__1394287910975083263), sym__0__5644261439804640685(__sym__0__5644261439804640685), sym__0__9057335116627787790(__sym__0__9057335116627787790), sym__0__2339428003903657470(__sym__0__2339428003903657470), sym__0__3371773490934440332(__sym__0__3371773490934440332), sym__0___45_1286955585961260406(__sym__0___45_1286955585961260406), sym__0___45_1657469713282332988(__sym__0___45_1657469713282332988), sym__0__816781160548213904(__sym__0__816781160548213904), sym__0__8401801716519894867(__sym__0__8401801716519894867), sym__0__5709933202258624457(__sym__0__5709933202258624457), sym__0__7900257115361061889(__sym__0__7900257115361061889)
  {
  }
  Record8() 
  {
  }
  std::string show() const{
    std::stringstream o;
    o << sym__0___45_8202918452351256080 << " | " << arrToString(sym__0__3217182456213118816) << " | " << arrToString(sym__0___45_587373445859874706) << " | " << arrToString(sym__0___45_8346128157561074223) << " | " << sym__0__2979561800187053807 << " | " << sym__0___45_899573490466067231 << " | " << arrToString(sym__0___45_2706395517471750200) << " | " << sym__0___45_6067709637706619093 << " | " << sym__0__1141311422513456040 << " | " << sym__0___45_5223888065355534256 << " | " << sym__0__2672047382496516406 << " | " << sym__0__4932263286160334513 << " | " << arrToString(sym__0__4463721534751519028) << " | " << arrToString(sym__0___45_4864066414314726068) << " | " << arrToString(sym__0__937958105294580029) << " | " << arrToString(sym__0___45_1982623509189166171) << " | " << arrToString(sym__0__4762673478997720679) << " | " << sym__0__7588001997570016652 << " | " << sym__0___45_4747443848713997322 << " | " << sym__0___45_3257188284918960498 << " | " << sym__0__1617172947989036440 << " | " << sym__0___45_810220525799073153 << " | " << sym__0__8132341549271366762 << " | " << arrToString(sym__0__1394287910975083263) << " | " << sym__0__5644261439804640685 << " | " << arrToString(sym__0__9057335116627787790) << " | " << sym__0__2339428003903657470 << " | " << sym__0__3371773490934440332 << " | " << sym__0___45_1286955585961260406 << " | " << sym__0___45_1657469713282332988 << " | " << sym__0__816781160548213904 << " | " << sym__0__8401801716519894867 << " | " << sym__0__5709933202258624457 << " | " << arrToString(sym__0__7900257115361061889);
    return o.str();
  }
  bool operator <(const Record8& otherRec) const{
    return (otherRec.sym__0___45_8202918452351256080 < sym__0___45_8202918452351256080 && (otherRec.sym__0__3217182456213118816 < sym__0__3217182456213118816 && (otherRec.sym__0___45_587373445859874706 < sym__0___45_587373445859874706 && (otherRec.sym__0___45_8346128157561074223 < sym__0___45_8346128157561074223 && (otherRec.sym__0__2979561800187053807 < sym__0__2979561800187053807 && (otherRec.sym__0___45_899573490466067231 < sym__0___45_899573490466067231 && (otherRec.sym__0___45_2706395517471750200 < sym__0___45_2706395517471750200 && (otherRec.sym__0___45_6067709637706619093 < sym__0___45_6067709637706619093 && (otherRec.sym__0__1141311422513456040 < sym__0__1141311422513456040 && (otherRec.sym__0___45_5223888065355534256 < sym__0___45_5223888065355534256 && (otherRec.sym__0__2672047382496516406 < sym__0__2672047382496516406 && (otherRec.sym__0__4932263286160334513 < sym__0__4932263286160334513 && (otherRec.sym__0__4463721534751519028 < sym__0__4463721534751519028 && (otherRec.sym__0___45_4864066414314726068 < sym__0___45_4864066414314726068 && (otherRec.sym__0__937958105294580029 < sym__0__937958105294580029 && (otherRec.sym__0___45_1982623509189166171 < sym__0___45_1982623509189166171 && (otherRec.sym__0__4762673478997720679 < sym__0__4762673478997720679 && (otherRec.sym__0__7588001997570016652 < sym__0__7588001997570016652 && (otherRec.sym__0___45_4747443848713997322 < sym__0___45_4747443848713997322 && (otherRec.sym__0___45_3257188284918960498 < sym__0___45_3257188284918960498 && (otherRec.sym__0__1617172947989036440 < sym__0__1617172947989036440 && (otherRec.sym__0___45_810220525799073153 < sym__0___45_810220525799073153 && (otherRec.sym__0__8132341549271366762 < sym__0__8132341549271366762 && (otherRec.sym__0__1394287910975083263 < sym__0__1394287910975083263 && (otherRec.sym__0__5644261439804640685 < sym__0__5644261439804640685 && (otherRec.sym__0__9057335116627787790 < sym__0__9057335116627787790 && (otherRec.sym__0__2339428003903657470 < sym__0__2339428003903657470 && (otherRec.sym__0__3371773490934440332 < sym__0__3371773490934440332 && (otherRec.sym__0___45_1286955585961260406 < sym__0___45_1286955585961260406 && (otherRec.sym__0___45_1657469713282332988 < sym__0___45_1657469713282332988 && (otherRec.sym__0__816781160548213904 < sym__0__816781160548213904 && (otherRec.sym__0__8401801716519894867 < sym__0__8401801716519894867 && (otherRec.sym__0__5709933202258624457 < sym__0__5709933202258624457 && otherRec.sym__0__7900257115361061889 < sym__0__7900257115361061889)))))))))))))))))))))))))))))))));
  }
  bool operator ==(const Record8& otherRec) const{
    return (otherRec.sym__0___45_8202918452351256080 == sym__0___45_8202918452351256080 && (otherRec.sym__0__3217182456213118816 == sym__0__3217182456213118816 && (otherRec.sym__0___45_587373445859874706 == sym__0___45_587373445859874706 && (otherRec.sym__0___45_8346128157561074223 == sym__0___45_8346128157561074223 && (otherRec.sym__0__2979561800187053807 == sym__0__2979561800187053807 && (otherRec.sym__0___45_899573490466067231 == sym__0___45_899573490466067231 && (otherRec.sym__0___45_2706395517471750200 == sym__0___45_2706395517471750200 && (otherRec.sym__0___45_6067709637706619093 == sym__0___45_6067709637706619093 && (otherRec.sym__0__1141311422513456040 == sym__0__1141311422513456040 && (otherRec.sym__0___45_5223888065355534256 == sym__0___45_5223888065355534256 && (otherRec.sym__0__2672047382496516406 == sym__0__2672047382496516406 && (otherRec.sym__0__4932263286160334513 == sym__0__4932263286160334513 && (otherRec.sym__0__4463721534751519028 == sym__0__4463721534751519028 && (otherRec.sym__0___45_4864066414314726068 == sym__0___45_4864066414314726068 && (otherRec.sym__0__937958105294580029 == sym__0__937958105294580029 && (otherRec.sym__0___45_1982623509189166171 == sym__0___45_1982623509189166171 && (otherRec.sym__0__4762673478997720679 == sym__0__4762673478997720679 && (otherRec.sym__0__7588001997570016652 == sym__0__7588001997570016652 && (otherRec.sym__0___45_4747443848713997322 == sym__0___45_4747443848713997322 && (otherRec.sym__0___45_3257188284918960498 == sym__0___45_3257188284918960498 && (otherRec.sym__0__1617172947989036440 == sym__0__1617172947989036440 && (otherRec.sym__0___45_810220525799073153 == sym__0___45_810220525799073153 && (otherRec.sym__0__8132341549271366762 == sym__0__8132341549271366762 && (otherRec.sym__0__1394287910975083263 == sym__0__1394287910975083263 && (otherRec.sym__0__5644261439804640685 == sym__0__5644261439804640685 && (otherRec.sym__0__9057335116627787790 == sym__0__9057335116627787790 && (otherRec.sym__0__2339428003903657470 == sym__0__2339428003903657470 && (otherRec.sym__0__3371773490934440332 == sym__0__3371773490934440332 && (otherRec.sym__0___45_1286955585961260406 == sym__0___45_1286955585961260406 && (otherRec.sym__0___45_1657469713282332988 == sym__0___45_1657469713282332988 && (otherRec.sym__0__816781160548213904 == sym__0__816781160548213904 && (otherRec.sym__0__8401801716519894867 == sym__0__8401801716519894867 && (otherRec.sym__0__5709933202258624457 == sym__0__5709933202258624457 && otherRec.sym__0__7900257115361061889 == sym__0__7900257115361061889)))))))))))))))))))))))))))))))));
  }
  bool operator !=(const Record8& otherRec) const{
    return (otherRec.sym__0___45_8202918452351256080 != sym__0___45_8202918452351256080 || (otherRec.sym__0__3217182456213118816 != sym__0__3217182456213118816 || (otherRec.sym__0___45_587373445859874706 != sym__0___45_587373445859874706 || (otherRec.sym__0___45_8346128157561074223 != sym__0___45_8346128157561074223 || (otherRec.sym__0__2979561800187053807 != sym__0__2979561800187053807 || (otherRec.sym__0___45_899573490466067231 != sym__0___45_899573490466067231 || (otherRec.sym__0___45_2706395517471750200 != sym__0___45_2706395517471750200 || (otherRec.sym__0___45_6067709637706619093 != sym__0___45_6067709637706619093 || (otherRec.sym__0__1141311422513456040 != sym__0__1141311422513456040 || (otherRec.sym__0___45_5223888065355534256 != sym__0___45_5223888065355534256 || (otherRec.sym__0__2672047382496516406 != sym__0__2672047382496516406 || (otherRec.sym__0__4932263286160334513 != sym__0__4932263286160334513 || (otherRec.sym__0__4463721534751519028 != sym__0__4463721534751519028 || (otherRec.sym__0___45_4864066414314726068 != sym__0___45_4864066414314726068 || (otherRec.sym__0__937958105294580029 != sym__0__937958105294580029 || (otherRec.sym__0___45_1982623509189166171 != sym__0___45_1982623509189166171 || (otherRec.sym__0__4762673478997720679 != sym__0__4762673478997720679 || (otherRec.sym__0__7588001997570016652 != sym__0__7588001997570016652 || (otherRec.sym__0___45_4747443848713997322 != sym__0___45_4747443848713997322 || (otherRec.sym__0___45_3257188284918960498 != sym__0___45_3257188284918960498 || (otherRec.sym__0__1617172947989036440 != sym__0__1617172947989036440 || (otherRec.sym__0___45_810220525799073153 != sym__0___45_810220525799073153 || (otherRec.sym__0__8132341549271366762 != sym__0__8132341549271366762 || (otherRec.sym__0__1394287910975083263 != sym__0__1394287910975083263 || (otherRec.sym__0__5644261439804640685 != sym__0__5644261439804640685 || (otherRec.sym__0__9057335116627787790 != sym__0__9057335116627787790 || (otherRec.sym__0__2339428003903657470 != sym__0__2339428003903657470 || (otherRec.sym__0__3371773490934440332 != sym__0__3371773490934440332 || (otherRec.sym__0___45_1286955585961260406 != sym__0___45_1286955585961260406 || (otherRec.sym__0___45_1657469713282332988 != sym__0___45_1657469713282332988 || (otherRec.sym__0__816781160548213904 != sym__0__816781160548213904 || (otherRec.sym__0__8401801716519894867 != sym__0__8401801716519894867 || (otherRec.sym__0__5709933202258624457 != sym__0__5709933202258624457 || otherRec.sym__0__7900257115361061889 != sym__0__7900257115361061889)))))))))))))))))))))))))))))))));
  }
  unsigned sym__0___45_8202918452351256080;
  fluidb_string<18> sym__0__3217182456213118816;
  fluidb_string<9> sym__0___45_587373445859874706;
  fluidb_string<9> sym__0___45_8346128157561074223;
  unsigned sym__0__2979561800187053807;
  unsigned sym__0___45_899573490466067231;
  fluidb_string<7> sym__0___45_2706395517471750200;
  unsigned sym__0___45_6067709637706619093;
  unsigned sym__0__1141311422513456040;
  unsigned sym__0___45_5223888065355534256;
  unsigned sym__0__2672047382496516406;
  unsigned sym__0__4932263286160334513;
  fluidb_string<15> sym__0__4463721534751519028;
  fluidb_string<2> sym__0___45_4864066414314726068;
  fluidb_string<2> sym__0__937958105294580029;
  fluidb_string<2> sym__0___45_1982623509189166171;
  fluidb_string<2> sym__0__4762673478997720679;
  unsigned sym__0__7588001997570016652;
  int sym__0___45_4747443848713997322;
  unsigned sym__0___45_3257188284918960498;
  unsigned sym__0__1617172947989036440;
  unsigned sym__0___45_810220525799073153;
  unsigned sym__0__8132341549271366762;
  fluidb_string<21> sym__0__1394287910975083263;
  unsigned sym__0__5644261439804640685;
  fluidb_string<10> sym__0__9057335116627787790;
  unsigned sym__0__2339428003903657470;
  double sym__0__3371773490934440332;
  unsigned sym__0___45_1286955585961260406;
  double sym__0___45_1657469713282332988;
  unsigned sym__0__816781160548213904;
  unsigned sym__0__8401801716519894867;
  double sym__0__5709933202258624457;
  fluidb_string<13> sym__0__7900257115361061889;
 private:
};


class Record34 {
 public:
  Record34(unsigned __sym__0__1700144450823265023, fluidb_string<25> __sym__0__642977477037249040, fluidb_string<40> __sym__0___45_4128377972278795822, fluidb_string<16> __sym__0___45_5088627304821687252, fluidb_string<16> __sym__0___45_4948625537612330786, fluidb_string<13> __sym__0___45_9194700948435084701, fluidb_string<15> __sym__0___45_2335925802980201584, unsigned __sym__0__8952961796666569484, int __sym__0___45_764958528451264714, unsigned __sym__0___45_1817156327375219010, unsigned __sym__0___45_2837638767689209768, unsigned __sym__0___45_2981394887932269865, unsigned __sym__0___45_3207638480786881318, fluidb_string<21> __sym__0___45_2706668038305292969, unsigned __sym__0___45_5698288034649371459, fluidb_string<10> __sym__0___45_4860327901106131906, unsigned __sym__0__4990602831923261550, double __sym__0__1941197998689785612, unsigned __sym__0__8920978217467339962, double __sym__0__2290947992840979092, unsigned __sym__0__7968803792053807648, unsigned __sym__0___45_648214588708582661, double __sym__0__5240005983315163865, fluidb_string<13> __sym__0__8676547963641831009, unsigned __sym__0__7098358135655077312, fluidb_string<18> __sym__0___45_3236172823121798352, fluidb_string<9> __sym__0__209296758379513054, fluidb_string<9> __sym__0__990102210371531505, unsigned __sym__0__6731021262741660999, unsigned __sym__0__43383544609224961, fluidb_string<7> __sym__0___45_1451536826369255544, unsigned __sym__0___45_3626731045154418301, unsigned __sym__0__6266038698953764136, unsigned __sym__0___45_3178257250902948896, unsigned __sym__0___45_1707432467122892938, unsigned __sym__0__6803837608073687569, fluidb_string<15> __sym__0__3019318186977723140, fluidb_string<2> __sym__0___45_3182244727465674548, fluidb_string<2> __sym__0__6970778392668530317, fluidb_string<2> __sym__0__1291675427782851845, fluidb_string<2> __sym__0___45_7095393819436573425) : sym__0__1700144450823265023(__sym__0__1700144450823265023), sym__0__642977477037249040(__sym__0__642977477037249040), sym__0___45_4128377972278795822(__sym__0___45_4128377972278795822), sym__0___45_5088627304821687252(__sym__0___45_5088627304821687252), sym__0___45_4948625537612330786(__sym__0___45_4948625537612330786), sym__0___45_9194700948435084701(__sym__0___45_9194700948435084701), sym__0___45_2335925802980201584(__sym__0___45_2335925802980201584), sym__0__8952961796666569484(__sym__0__8952961796666569484), sym__0___45_764958528451264714(__sym__0___45_764958528451264714), sym__0___45_1817156327375219010(__sym__0___45_1817156327375219010), sym__0___45_2837638767689209768(__sym__0___45_2837638767689209768), sym__0___45_2981394887932269865(__sym__0___45_2981394887932269865), sym__0___45_3207638480786881318(__sym__0___45_3207638480786881318), sym__0___45_2706668038305292969(__sym__0___45_2706668038305292969), sym__0___45_5698288034649371459(__sym__0___45_5698288034649371459), sym__0___45_4860327901106131906(__sym__0___45_4860327901106131906), sym__0__4990602831923261550(__sym__0__4990602831923261550), sym__0__1941197998689785612(__sym__0__1941197998689785612), sym__0__8920978217467339962(__sym__0__8920978217467339962), sym__0__2290947992840979092(__sym__0__2290947992840979092), sym__0__7968803792053807648(__sym__0__7968803792053807648), sym__0___45_648214588708582661(__sym__0___45_648214588708582661), sym__0__5240005983315163865(__sym__0__5240005983315163865), sym__0__8676547963641831009(__sym__0__8676547963641831009), sym__0__7098358135655077312(__sym__0__7098358135655077312), sym__0___45_3236172823121798352(__sym__0___45_3236172823121798352), sym__0__209296758379513054(__sym__0__209296758379513054), sym__0__990102210371531505(__sym__0__990102210371531505), sym__0__6731021262741660999(__sym__0__6731021262741660999), sym__0__43383544609224961(__sym__0__43383544609224961), sym__0___45_1451536826369255544(__sym__0___45_1451536826369255544), sym__0___45_3626731045154418301(__sym__0___45_3626731045154418301), sym__0__6266038698953764136(__sym__0__6266038698953764136), sym__0___45_3178257250902948896(__sym__0___45_3178257250902948896), sym__0___45_1707432467122892938(__sym__0___45_1707432467122892938), sym__0__6803837608073687569(__sym__0__6803837608073687569), sym__0__3019318186977723140(__sym__0__3019318186977723140), sym__0___45_3182244727465674548(__sym__0___45_3182244727465674548), sym__0__6970778392668530317(__sym__0__6970778392668530317), sym__0__1291675427782851845(__sym__0__1291675427782851845), sym__0___45_7095393819436573425(__sym__0___45_7095393819436573425)
  {
  }
  Record34() 
  {
  }
  std::string show() const{
    std::stringstream o;
    o << sym__0__1700144450823265023 << " | " << arrToString(sym__0__642977477037249040) << " | " << arrToString(sym__0___45_4128377972278795822) << " | " << arrToString(sym__0___45_5088627304821687252) << " | " << arrToString(sym__0___45_4948625537612330786) << " | " << arrToString(sym__0___45_9194700948435084701) << " | " << arrToString(sym__0___45_2335925802980201584) << " | " << sym__0__8952961796666569484 << " | " << sym__0___45_764958528451264714 << " | " << sym__0___45_1817156327375219010 << " | " << sym__0___45_2837638767689209768 << " | " << sym__0___45_2981394887932269865 << " | " << sym__0___45_3207638480786881318 << " | " << arrToString(sym__0___45_2706668038305292969) << " | " << sym__0___45_5698288034649371459 << " | " << arrToString(sym__0___45_4860327901106131906) << " | " << sym__0__4990602831923261550 << " | " << sym__0__1941197998689785612 << " | " << sym__0__8920978217467339962 << " | " << sym__0__2290947992840979092 << " | " << sym__0__7968803792053807648 << " | " << sym__0___45_648214588708582661 << " | " << sym__0__5240005983315163865 << " | " << arrToString(sym__0__8676547963641831009) << " | " << sym__0__7098358135655077312 << " | " << arrToString(sym__0___45_3236172823121798352) << " | " << arrToString(sym__0__209296758379513054) << " | " << arrToString(sym__0__990102210371531505) << " | " << sym__0__6731021262741660999 << " | " << sym__0__43383544609224961 << " | " << arrToString(sym__0___45_1451536826369255544) << " | " << sym__0___45_3626731045154418301 << " | " << sym__0__6266038698953764136 << " | " << sym__0___45_3178257250902948896 << " | " << sym__0___45_1707432467122892938 << " | " << sym__0__6803837608073687569 << " | " << arrToString(sym__0__3019318186977723140) << " | " << arrToString(sym__0___45_3182244727465674548) << " | " << arrToString(sym__0__6970778392668530317) << " | " << arrToString(sym__0__1291675427782851845) << " | " << arrToString(sym__0___45_7095393819436573425);
    return o.str();
  }
  bool operator <(const Record34& otherRec) const{
    return (otherRec.sym__0__1700144450823265023 < sym__0__1700144450823265023 && (otherRec.sym__0__642977477037249040 < sym__0__642977477037249040 && (otherRec.sym__0___45_4128377972278795822 < sym__0___45_4128377972278795822 && (otherRec.sym__0___45_5088627304821687252 < sym__0___45_5088627304821687252 && (otherRec.sym__0___45_4948625537612330786 < sym__0___45_4948625537612330786 && (otherRec.sym__0___45_9194700948435084701 < sym__0___45_9194700948435084701 && (otherRec.sym__0___45_2335925802980201584 < sym__0___45_2335925802980201584 && (otherRec.sym__0__8952961796666569484 < sym__0__8952961796666569484 && (otherRec.sym__0___45_764958528451264714 < sym__0___45_764958528451264714 && (otherRec.sym__0___45_1817156327375219010 < sym__0___45_1817156327375219010 && (otherRec.sym__0___45_2837638767689209768 < sym__0___45_2837638767689209768 && (otherRec.sym__0___45_2981394887932269865 < sym__0___45_2981394887932269865 && (otherRec.sym__0___45_3207638480786881318 < sym__0___45_3207638480786881318 && (otherRec.sym__0___45_2706668038305292969 < sym__0___45_2706668038305292969 && (otherRec.sym__0___45_5698288034649371459 < sym__0___45_5698288034649371459 && (otherRec.sym__0___45_4860327901106131906 < sym__0___45_4860327901106131906 && (otherRec.sym__0__4990602831923261550 < sym__0__4990602831923261550 && (otherRec.sym__0__1941197998689785612 < sym__0__1941197998689785612 && (otherRec.sym__0__8920978217467339962 < sym__0__8920978217467339962 && (otherRec.sym__0__2290947992840979092 < sym__0__2290947992840979092 && (otherRec.sym__0__7968803792053807648 < sym__0__7968803792053807648 && (otherRec.sym__0___45_648214588708582661 < sym__0___45_648214588708582661 && (otherRec.sym__0__5240005983315163865 < sym__0__5240005983315163865 && (otherRec.sym__0__8676547963641831009 < sym__0__8676547963641831009 && (otherRec.sym__0__7098358135655077312 < sym__0__7098358135655077312 && (otherRec.sym__0___45_3236172823121798352 < sym__0___45_3236172823121798352 && (otherRec.sym__0__209296758379513054 < sym__0__209296758379513054 && (otherRec.sym__0__990102210371531505 < sym__0__990102210371531505 && (otherRec.sym__0__6731021262741660999 < sym__0__6731021262741660999 && (otherRec.sym__0__43383544609224961 < sym__0__43383544609224961 && (otherRec.sym__0___45_1451536826369255544 < sym__0___45_1451536826369255544 && (otherRec.sym__0___45_3626731045154418301 < sym__0___45_3626731045154418301 && (otherRec.sym__0__6266038698953764136 < sym__0__6266038698953764136 && (otherRec.sym__0___45_3178257250902948896 < sym__0___45_3178257250902948896 && (otherRec.sym__0___45_1707432467122892938 < sym__0___45_1707432467122892938 && (otherRec.sym__0__6803837608073687569 < sym__0__6803837608073687569 && (otherRec.sym__0__3019318186977723140 < sym__0__3019318186977723140 && (otherRec.sym__0___45_3182244727465674548 < sym__0___45_3182244727465674548 && (otherRec.sym__0__6970778392668530317 < sym__0__6970778392668530317 && (otherRec.sym__0__1291675427782851845 < sym__0__1291675427782851845 && otherRec.sym__0___45_7095393819436573425 < sym__0___45_7095393819436573425))))))))))))))))))))))))))))))))))))))));
  }
  bool operator ==(const Record34& otherRec) const{
    return (otherRec.sym__0__1700144450823265023 == sym__0__1700144450823265023 && (otherRec.sym__0__642977477037249040 == sym__0__642977477037249040 && (otherRec.sym__0___45_4128377972278795822 == sym__0___45_4128377972278795822 && (otherRec.sym__0___45_5088627304821687252 == sym__0___45_5088627304821687252 && (otherRec.sym__0___45_4948625537612330786 == sym__0___45_4948625537612330786 && (otherRec.sym__0___45_9194700948435084701 == sym__0___45_9194700948435084701 && (otherRec.sym__0___45_2335925802980201584 == sym__0___45_2335925802980201584 && (otherRec.sym__0__8952961796666569484 == sym__0__8952961796666569484 && (otherRec.sym__0___45_764958528451264714 == sym__0___45_764958528451264714 && (otherRec.sym__0___45_1817156327375219010 == sym__0___45_1817156327375219010 && (otherRec.sym__0___45_2837638767689209768 == sym__0___45_2837638767689209768 && (otherRec.sym__0___45_2981394887932269865 == sym__0___45_2981394887932269865 && (otherRec.sym__0___45_3207638480786881318 == sym__0___45_3207638480786881318 && (otherRec.sym__0___45_2706668038305292969 == sym__0___45_2706668038305292969 && (otherRec.sym__0___45_5698288034649371459 == sym__0___45_5698288034649371459 && (otherRec.sym__0___45_4860327901106131906 == sym__0___45_4860327901106131906 && (otherRec.sym__0__4990602831923261550 == sym__0__4990602831923261550 && (otherRec.sym__0__1941197998689785612 == sym__0__1941197998689785612 && (otherRec.sym__0__8920978217467339962 == sym__0__8920978217467339962 && (otherRec.sym__0__2290947992840979092 == sym__0__2290947992840979092 && (otherRec.sym__0__7968803792053807648 == sym__0__7968803792053807648 && (otherRec.sym__0___45_648214588708582661 == sym__0___45_648214588708582661 && (otherRec.sym__0__5240005983315163865 == sym__0__5240005983315163865 && (otherRec.sym__0__8676547963641831009 == sym__0__8676547963641831009 && (otherRec.sym__0__7098358135655077312 == sym__0__7098358135655077312 && (otherRec.sym__0___45_3236172823121798352 == sym__0___45_3236172823121798352 && (otherRec.sym__0__209296758379513054 == sym__0__209296758379513054 && (otherRec.sym__0__990102210371531505 == sym__0__990102210371531505 && (otherRec.sym__0__6731021262741660999 == sym__0__6731021262741660999 && (otherRec.sym__0__43383544609224961 == sym__0__43383544609224961 && (otherRec.sym__0___45_1451536826369255544 == sym__0___45_1451536826369255544 && (otherRec.sym__0___45_3626731045154418301 == sym__0___45_3626731045154418301 && (otherRec.sym__0__6266038698953764136 == sym__0__6266038698953764136 && (otherRec.sym__0___45_3178257250902948896 == sym__0___45_3178257250902948896 && (otherRec.sym__0___45_1707432467122892938 == sym__0___45_1707432467122892938 && (otherRec.sym__0__6803837608073687569 == sym__0__6803837608073687569 && (otherRec.sym__0__3019318186977723140 == sym__0__3019318186977723140 && (otherRec.sym__0___45_3182244727465674548 == sym__0___45_3182244727465674548 && (otherRec.sym__0__6970778392668530317 == sym__0__6970778392668530317 && (otherRec.sym__0__1291675427782851845 == sym__0__1291675427782851845 && otherRec.sym__0___45_7095393819436573425 == sym__0___45_7095393819436573425))))))))))))))))))))))))))))))))))))))));
  }
  bool operator !=(const Record34& otherRec) const{
    return (otherRec.sym__0__1700144450823265023 != sym__0__1700144450823265023 || (otherRec.sym__0__642977477037249040 != sym__0__642977477037249040 || (otherRec.sym__0___45_4128377972278795822 != sym__0___45_4128377972278795822 || (otherRec.sym__0___45_5088627304821687252 != sym__0___45_5088627304821687252 || (otherRec.sym__0___45_4948625537612330786 != sym__0___45_4948625537612330786 || (otherRec.sym__0___45_9194700948435084701 != sym__0___45_9194700948435084701 || (otherRec.sym__0___45_2335925802980201584 != sym__0___45_2335925802980201584 || (otherRec.sym__0__8952961796666569484 != sym__0__8952961796666569484 || (otherRec.sym__0___45_764958528451264714 != sym__0___45_764958528451264714 || (otherRec.sym__0___45_1817156327375219010 != sym__0___45_1817156327375219010 || (otherRec.sym__0___45_2837638767689209768 != sym__0___45_2837638767689209768 || (otherRec.sym__0___45_2981394887932269865 != sym__0___45_2981394887932269865 || (otherRec.sym__0___45_3207638480786881318 != sym__0___45_3207638480786881318 || (otherRec.sym__0___45_2706668038305292969 != sym__0___45_2706668038305292969 || (otherRec.sym__0___45_5698288034649371459 != sym__0___45_5698288034649371459 || (otherRec.sym__0___45_4860327901106131906 != sym__0___45_4860327901106131906 || (otherRec.sym__0__4990602831923261550 != sym__0__4990602831923261550 || (otherRec.sym__0__1941197998689785612 != sym__0__1941197998689785612 || (otherRec.sym__0__8920978217467339962 != sym__0__8920978217467339962 || (otherRec.sym__0__2290947992840979092 != sym__0__2290947992840979092 || (otherRec.sym__0__7968803792053807648 != sym__0__7968803792053807648 || (otherRec.sym__0___45_648214588708582661 != sym__0___45_648214588708582661 || (otherRec.sym__0__5240005983315163865 != sym__0__5240005983315163865 || (otherRec.sym__0__8676547963641831009 != sym__0__8676547963641831009 || (otherRec.sym__0__7098358135655077312 != sym__0__7098358135655077312 || (otherRec.sym__0___45_3236172823121798352 != sym__0___45_3236172823121798352 || (otherRec.sym__0__209296758379513054 != sym__0__209296758379513054 || (otherRec.sym__0__990102210371531505 != sym__0__990102210371531505 || (otherRec.sym__0__6731021262741660999 != sym__0__6731021262741660999 || (otherRec.sym__0__43383544609224961 != sym__0__43383544609224961 || (otherRec.sym__0___45_1451536826369255544 != sym__0___45_1451536826369255544 || (otherRec.sym__0___45_3626731045154418301 != sym__0___45_3626731045154418301 || (otherRec.sym__0__6266038698953764136 != sym__0__6266038698953764136 || (otherRec.sym__0___45_3178257250902948896 != sym__0___45_3178257250902948896 || (otherRec.sym__0___45_1707432467122892938 != sym__0___45_1707432467122892938 || (otherRec.sym__0__6803837608073687569 != sym__0__6803837608073687569 || (otherRec.sym__0__3019318186977723140 != sym__0__3019318186977723140 || (otherRec.sym__0___45_3182244727465674548 != sym__0___45_3182244727465674548 || (otherRec.sym__0__6970778392668530317 != sym__0__6970778392668530317 || (otherRec.sym__0__1291675427782851845 != sym__0__1291675427782851845 || otherRec.sym__0___45_7095393819436573425 != sym__0___45_7095393819436573425))))))))))))))))))))))))))))))))))))))));
  }
  unsigned sym__0__1700144450823265023;
  fluidb_string<25> sym__0__642977477037249040;
  fluidb_string<40> sym__0___45_4128377972278795822;
  fluidb_string<16> sym__0___45_5088627304821687252;
  fluidb_string<16> sym__0___45_4948625537612330786;
  fluidb_string<13> sym__0___45_9194700948435084701;
  fluidb_string<15> sym__0___45_2335925802980201584;
  unsigned sym__0__8952961796666569484;
  int sym__0___45_764958528451264714;
  unsigned sym__0___45_1817156327375219010;
  unsigned sym__0___45_2837638767689209768;
  unsigned sym__0___45_2981394887932269865;
  unsigned sym__0___45_3207638480786881318;
  fluidb_string<21> sym__0___45_2706668038305292969;
  unsigned sym__0___45_5698288034649371459;
  fluidb_string<10> sym__0___45_4860327901106131906;
  unsigned sym__0__4990602831923261550;
  double sym__0__1941197998689785612;
  unsigned sym__0__8920978217467339962;
  double sym__0__2290947992840979092;
  unsigned sym__0__7968803792053807648;
  unsigned sym__0___45_648214588708582661;
  double sym__0__5240005983315163865;
  fluidb_string<13> sym__0__8676547963641831009;
  unsigned sym__0__7098358135655077312;
  fluidb_string<18> sym__0___45_3236172823121798352;
  fluidb_string<9> sym__0__209296758379513054;
  fluidb_string<9> sym__0__990102210371531505;
  unsigned sym__0__6731021262741660999;
  unsigned sym__0__43383544609224961;
  fluidb_string<7> sym__0___45_1451536826369255544;
  unsigned sym__0___45_3626731045154418301;
  unsigned sym__0__6266038698953764136;
  unsigned sym__0___45_3178257250902948896;
  unsigned sym__0___45_1707432467122892938;
  unsigned sym__0__6803837608073687569;
  fluidb_string<15> sym__0__3019318186977723140;
  fluidb_string<2> sym__0___45_3182244727465674548;
  fluidb_string<2> sym__0__6970778392668530317;
  fluidb_string<2> sym__0__1291675427782851845;
  fluidb_string<2> sym__0___45_7095393819436573425;
 private:
};


class Record45 {
 public:
  Record45(unsigned __sym__0___45_5902979780714219327, unsigned __sym__0___45_2114395819171341319, fluidb_string<10> __sym__0__8560746496208341995) : sym__0___45_5902979780714219327(__sym__0___45_5902979780714219327), sym__0___45_2114395819171341319(__sym__0___45_2114395819171341319), sym__0__8560746496208341995(__sym__0__8560746496208341995)
  {
  }
  Record45() 
  {
  }
  std::string show() const{
    std::stringstream o;
    o << sym__0___45_5902979780714219327 << " | " << sym__0___45_2114395819171341319 << " | " << arrToString(sym__0__8560746496208341995);
    return o.str();
  }
  bool operator <(const Record45& otherRec) const{
    return (otherRec.sym__0___45_5902979780714219327 < sym__0___45_5902979780714219327 && (otherRec.sym__0___45_2114395819171341319 < sym__0___45_2114395819171341319 && otherRec.sym__0__8560746496208341995 < sym__0__8560746496208341995));
  }
  bool operator ==(const Record45& otherRec) const{
    return (otherRec.sym__0___45_5902979780714219327 == sym__0___45_5902979780714219327 && (otherRec.sym__0___45_2114395819171341319 == sym__0___45_2114395819171341319 && otherRec.sym__0__8560746496208341995 == sym__0__8560746496208341995));
  }
  bool operator !=(const Record45& otherRec) const{
    return (otherRec.sym__0___45_5902979780714219327 != sym__0___45_5902979780714219327 || (otherRec.sym__0___45_2114395819171341319 != sym__0___45_2114395819171341319 || otherRec.sym__0__8560746496208341995 != sym__0__8560746496208341995));
  }
  unsigned sym__0___45_5902979780714219327;
  unsigned sym__0___45_2114395819171341319;
  fluidb_string<10> sym__0__8560746496208341995;
 private:
};


class Record47 {
 public:
  Record47(unsigned __sym__0__4141812305157790681, fluidb_string<25> __sym__0___45_5159284013671774530, fluidb_string<40> __sym__0__5929335199040604944, fluidb_string<16> __sym__0__8980268860843798410, fluidb_string<16> __sym__0__7438201141129884556, fluidb_string<13> __sym__0__299964735226913069, fluidb_string<15> __sym__0___45_274153224962620866, unsigned __sym__0___45_1704737576651497046, int __sym__0___45_5364431335747194636, unsigned __sym__0___45_6670480666790360404, unsigned __sym__0__1035059097189397270, unsigned __sym__0___45_236567292019976639, unsigned __sym__0___45_4342072045869091480, fluidb_string<21> __sym__0___45_48356416147601727, unsigned __sym__0___45_3530069934999759345, fluidb_string<10> __sym__0___45_21272610088483796, unsigned __sym__0__8564866222464334588, double __sym__0___45_744165813648595542, unsigned __sym__0__482146207611652104, double __sym__0___45_2183093135728676926, unsigned __sym__0___45_1874278765651523026, unsigned __sym__0___45_7594691263183254603, double __sym__0__3632680852047490635, fluidb_string<13> __sym__0___45_7823346196563635997, unsigned __sym__0__5619860144531125902, fluidb_string<18> __sym__0__5610665202265100958, fluidb_string<9> __sym__0___45_9075663471338639476, fluidb_string<9> __sym__0__4691788782750567507, unsigned __sym__0__7928058280817873233, unsigned __sym__0__6668222264524417219, fluidb_string<7> __sym__0__2297426772070097766, unsigned __sym__0__3416485698032376717, unsigned __sym__0___45_1989902664282570938, unsigned __sym__0___45_8900398421048301202, unsigned __sym__0___45_3190388615181087052, unsigned __sym__0__617043931306359219, fluidb_string<15> __sym__0___45_6132208035988097838, fluidb_string<2> __sym__0___45_7131498866425802518, fluidb_string<2> __sym__0__3212189690086512703, fluidb_string<2> __sym__0___45_4551279862702652409, fluidb_string<2> __sym__0__6400252650127444553, unsigned __sym__0__8989200694518734396, fluidb_string<55> __sym__0__1879639780622030444, fluidb_string<25> __sym__0__4679788483318910399, fluidb_string<7> __sym__0___45_1519325191444557143, fluidb_string<10> __sym__0__8808022150768814575, fluidb_string<11> __sym__0__1615907806695898299, fluidb_string<25> __sym__0__7902426149900564525, unsigned __sym__0__7538375850658612802, fluidb_string<10> __sym__0__2838506290652474191) : sym__0__4141812305157790681(__sym__0__4141812305157790681), sym__0___45_5159284013671774530(__sym__0___45_5159284013671774530), sym__0__5929335199040604944(__sym__0__5929335199040604944), sym__0__8980268860843798410(__sym__0__8980268860843798410), sym__0__7438201141129884556(__sym__0__7438201141129884556), sym__0__299964735226913069(__sym__0__299964735226913069), sym__0___45_274153224962620866(__sym__0___45_274153224962620866), sym__0___45_1704737576651497046(__sym__0___45_1704737576651497046), sym__0___45_5364431335747194636(__sym__0___45_5364431335747194636), sym__0___45_6670480666790360404(__sym__0___45_6670480666790360404), sym__0__1035059097189397270(__sym__0__1035059097189397270), sym__0___45_236567292019976639(__sym__0___45_236567292019976639), sym__0___45_4342072045869091480(__sym__0___45_4342072045869091480), sym__0___45_48356416147601727(__sym__0___45_48356416147601727), sym__0___45_3530069934999759345(__sym__0___45_3530069934999759345), sym__0___45_21272610088483796(__sym__0___45_21272610088483796), sym__0__8564866222464334588(__sym__0__8564866222464334588), sym__0___45_744165813648595542(__sym__0___45_744165813648595542), sym__0__482146207611652104(__sym__0__482146207611652104), sym__0___45_2183093135728676926(__sym__0___45_2183093135728676926), sym__0___45_1874278765651523026(__sym__0___45_1874278765651523026), sym__0___45_7594691263183254603(__sym__0___45_7594691263183254603), sym__0__3632680852047490635(__sym__0__3632680852047490635), sym__0___45_7823346196563635997(__sym__0___45_7823346196563635997), sym__0__5619860144531125902(__sym__0__5619860144531125902), sym__0__5610665202265100958(__sym__0__5610665202265100958), sym__0___45_9075663471338639476(__sym__0___45_9075663471338639476), sym__0__4691788782750567507(__sym__0__4691788782750567507), sym__0__7928058280817873233(__sym__0__7928058280817873233), sym__0__6668222264524417219(__sym__0__6668222264524417219), sym__0__2297426772070097766(__sym__0__2297426772070097766), sym__0__3416485698032376717(__sym__0__3416485698032376717), sym__0___45_1989902664282570938(__sym__0___45_1989902664282570938), sym__0___45_8900398421048301202(__sym__0___45_8900398421048301202), sym__0___45_3190388615181087052(__sym__0___45_3190388615181087052), sym__0__617043931306359219(__sym__0__617043931306359219), sym__0___45_6132208035988097838(__sym__0___45_6132208035988097838), sym__0___45_7131498866425802518(__sym__0___45_7131498866425802518), sym__0__3212189690086512703(__sym__0__3212189690086512703), sym__0___45_4551279862702652409(__sym__0___45_4551279862702652409), sym__0__6400252650127444553(__sym__0__6400252650127444553), sym__0__8989200694518734396(__sym__0__8989200694518734396), sym__0__1879639780622030444(__sym__0__1879639780622030444), sym__0__4679788483318910399(__sym__0__4679788483318910399), sym__0___45_1519325191444557143(__sym__0___45_1519325191444557143), sym__0__8808022150768814575(__sym__0__8808022150768814575), sym__0__1615907806695898299(__sym__0__1615907806695898299), sym__0__7902426149900564525(__sym__0__7902426149900564525), sym__0__7538375850658612802(__sym__0__7538375850658612802), sym__0__2838506290652474191(__sym__0__2838506290652474191)
  {
  }
  Record47() 
  {
  }
  std::string show() const{
    std::stringstream o;
    o << sym__0__4141812305157790681 << " | " << arrToString(sym__0___45_5159284013671774530) << " | " << arrToString(sym__0__5929335199040604944) << " | " << arrToString(sym__0__8980268860843798410) << " | " << arrToString(sym__0__7438201141129884556) << " | " << arrToString(sym__0__299964735226913069) << " | " << arrToString(sym__0___45_274153224962620866) << " | " << sym__0___45_1704737576651497046 << " | " << sym__0___45_5364431335747194636 << " | " << sym__0___45_6670480666790360404 << " | " << sym__0__1035059097189397270 << " | " << sym__0___45_236567292019976639 << " | " << sym__0___45_4342072045869091480 << " | " << arrToString(sym__0___45_48356416147601727) << " | " << sym__0___45_3530069934999759345 << " | " << arrToString(sym__0___45_21272610088483796) << " | " << sym__0__8564866222464334588 << " | " << sym__0___45_744165813648595542 << " | " << sym__0__482146207611652104 << " | " << sym__0___45_2183093135728676926 << " | " << sym__0___45_1874278765651523026 << " | " << sym__0___45_7594691263183254603 << " | " << sym__0__3632680852047490635 << " | " << arrToString(sym__0___45_7823346196563635997) << " | " << sym__0__5619860144531125902 << " | " << arrToString(sym__0__5610665202265100958) << " | " << arrToString(sym__0___45_9075663471338639476) << " | " << arrToString(sym__0__4691788782750567507) << " | " << sym__0__7928058280817873233 << " | " << sym__0__6668222264524417219 << " | " << arrToString(sym__0__2297426772070097766) << " | " << sym__0__3416485698032376717 << " | " << sym__0___45_1989902664282570938 << " | " << sym__0___45_8900398421048301202 << " | " << sym__0___45_3190388615181087052 << " | " << sym__0__617043931306359219 << " | " << arrToString(sym__0___45_6132208035988097838) << " | " << arrToString(sym__0___45_7131498866425802518) << " | " << arrToString(sym__0__3212189690086512703) << " | " << arrToString(sym__0___45_4551279862702652409) << " | " << arrToString(sym__0__6400252650127444553) << " | " << sym__0__8989200694518734396 << " | " << arrToString(sym__0__1879639780622030444) << " | " << arrToString(sym__0__4679788483318910399) << " | " << arrToString(sym__0___45_1519325191444557143) << " | " << arrToString(sym__0__8808022150768814575) << " | " << arrToString(sym__0__1615907806695898299) << " | " << arrToString(sym__0__7902426149900564525) << " | " << sym__0__7538375850658612802 << " | " << arrToString(sym__0__2838506290652474191);
    return o.str();
  }
  bool operator <(const Record47& otherRec) const{
    return (otherRec.sym__0__4141812305157790681 < sym__0__4141812305157790681 && (otherRec.sym__0___45_5159284013671774530 < sym__0___45_5159284013671774530 && (otherRec.sym__0__5929335199040604944 < sym__0__5929335199040604944 && (otherRec.sym__0__8980268860843798410 < sym__0__8980268860843798410 && (otherRec.sym__0__7438201141129884556 < sym__0__7438201141129884556 && (otherRec.sym__0__299964735226913069 < sym__0__299964735226913069 && (otherRec.sym__0___45_274153224962620866 < sym__0___45_274153224962620866 && (otherRec.sym__0___45_1704737576651497046 < sym__0___45_1704737576651497046 && (otherRec.sym__0___45_5364431335747194636 < sym__0___45_5364431335747194636 && (otherRec.sym__0___45_6670480666790360404 < sym__0___45_6670480666790360404 && (otherRec.sym__0__1035059097189397270 < sym__0__1035059097189397270 && (otherRec.sym__0___45_236567292019976639 < sym__0___45_236567292019976639 && (otherRec.sym__0___45_4342072045869091480 < sym__0___45_4342072045869091480 && (otherRec.sym__0___45_48356416147601727 < sym__0___45_48356416147601727 && (otherRec.sym__0___45_3530069934999759345 < sym__0___45_3530069934999759345 && (otherRec.sym__0___45_21272610088483796 < sym__0___45_21272610088483796 && (otherRec.sym__0__8564866222464334588 < sym__0__8564866222464334588 && (otherRec.sym__0___45_744165813648595542 < sym__0___45_744165813648595542 && (otherRec.sym__0__482146207611652104 < sym__0__482146207611652104 && (otherRec.sym__0___45_2183093135728676926 < sym__0___45_2183093135728676926 && (otherRec.sym__0___45_1874278765651523026 < sym__0___45_1874278765651523026 && (otherRec.sym__0___45_7594691263183254603 < sym__0___45_7594691263183254603 && (otherRec.sym__0__3632680852047490635 < sym__0__3632680852047490635 && (otherRec.sym__0___45_7823346196563635997 < sym__0___45_7823346196563635997 && (otherRec.sym__0__5619860144531125902 < sym__0__5619860144531125902 && (otherRec.sym__0__5610665202265100958 < sym__0__5610665202265100958 && (otherRec.sym__0___45_9075663471338639476 < sym__0___45_9075663471338639476 && (otherRec.sym__0__4691788782750567507 < sym__0__4691788782750567507 && (otherRec.sym__0__7928058280817873233 < sym__0__7928058280817873233 && (otherRec.sym__0__6668222264524417219 < sym__0__6668222264524417219 && (otherRec.sym__0__2297426772070097766 < sym__0__2297426772070097766 && (otherRec.sym__0__3416485698032376717 < sym__0__3416485698032376717 && (otherRec.sym__0___45_1989902664282570938 < sym__0___45_1989902664282570938 && (otherRec.sym__0___45_8900398421048301202 < sym__0___45_8900398421048301202 && (otherRec.sym__0___45_3190388615181087052 < sym__0___45_3190388615181087052 && (otherRec.sym__0__617043931306359219 < sym__0__617043931306359219 && (otherRec.sym__0___45_6132208035988097838 < sym__0___45_6132208035988097838 && (otherRec.sym__0___45_7131498866425802518 < sym__0___45_7131498866425802518 && (otherRec.sym__0__3212189690086512703 < sym__0__3212189690086512703 && (otherRec.sym__0___45_4551279862702652409 < sym__0___45_4551279862702652409 && (otherRec.sym__0__6400252650127444553 < sym__0__6400252650127444553 && (otherRec.sym__0__8989200694518734396 < sym__0__8989200694518734396 && (otherRec.sym__0__1879639780622030444 < sym__0__1879639780622030444 && (otherRec.sym__0__4679788483318910399 < sym__0__4679788483318910399 && (otherRec.sym__0___45_1519325191444557143 < sym__0___45_1519325191444557143 && (otherRec.sym__0__8808022150768814575 < sym__0__8808022150768814575 && (otherRec.sym__0__1615907806695898299 < sym__0__1615907806695898299 && (otherRec.sym__0__7902426149900564525 < sym__0__7902426149900564525 && (otherRec.sym__0__7538375850658612802 < sym__0__7538375850658612802 && otherRec.sym__0__2838506290652474191 < sym__0__2838506290652474191)))))))))))))))))))))))))))))))))))))))))))))))));
  }
  bool operator ==(const Record47& otherRec) const{
    return (otherRec.sym__0__4141812305157790681 == sym__0__4141812305157790681 && (otherRec.sym__0___45_5159284013671774530 == sym__0___45_5159284013671774530 && (otherRec.sym__0__5929335199040604944 == sym__0__5929335199040604944 && (otherRec.sym__0__8980268860843798410 == sym__0__8980268860843798410 && (otherRec.sym__0__7438201141129884556 == sym__0__7438201141129884556 && (otherRec.sym__0__299964735226913069 == sym__0__299964735226913069 && (otherRec.sym__0___45_274153224962620866 == sym__0___45_274153224962620866 && (otherRec.sym__0___45_1704737576651497046 == sym__0___45_1704737576651497046 && (otherRec.sym__0___45_5364431335747194636 == sym__0___45_5364431335747194636 && (otherRec.sym__0___45_6670480666790360404 == sym__0___45_6670480666790360404 && (otherRec.sym__0__1035059097189397270 == sym__0__1035059097189397270 && (otherRec.sym__0___45_236567292019976639 == sym__0___45_236567292019976639 && (otherRec.sym__0___45_4342072045869091480 == sym__0___45_4342072045869091480 && (otherRec.sym__0___45_48356416147601727 == sym__0___45_48356416147601727 && (otherRec.sym__0___45_3530069934999759345 == sym__0___45_3530069934999759345 && (otherRec.sym__0___45_21272610088483796 == sym__0___45_21272610088483796 && (otherRec.sym__0__8564866222464334588 == sym__0__8564866222464334588 && (otherRec.sym__0___45_744165813648595542 == sym__0___45_744165813648595542 && (otherRec.sym__0__482146207611652104 == sym__0__482146207611652104 && (otherRec.sym__0___45_2183093135728676926 == sym__0___45_2183093135728676926 && (otherRec.sym__0___45_1874278765651523026 == sym__0___45_1874278765651523026 && (otherRec.sym__0___45_7594691263183254603 == sym__0___45_7594691263183254603 && (otherRec.sym__0__3632680852047490635 == sym__0__3632680852047490635 && (otherRec.sym__0___45_7823346196563635997 == sym__0___45_7823346196563635997 && (otherRec.sym__0__5619860144531125902 == sym__0__5619860144531125902 && (otherRec.sym__0__5610665202265100958 == sym__0__5610665202265100958 && (otherRec.sym__0___45_9075663471338639476 == sym__0___45_9075663471338639476 && (otherRec.sym__0__4691788782750567507 == sym__0__4691788782750567507 && (otherRec.sym__0__7928058280817873233 == sym__0__7928058280817873233 && (otherRec.sym__0__6668222264524417219 == sym__0__6668222264524417219 && (otherRec.sym__0__2297426772070097766 == sym__0__2297426772070097766 && (otherRec.sym__0__3416485698032376717 == sym__0__3416485698032376717 && (otherRec.sym__0___45_1989902664282570938 == sym__0___45_1989902664282570938 && (otherRec.sym__0___45_8900398421048301202 == sym__0___45_8900398421048301202 && (otherRec.sym__0___45_3190388615181087052 == sym__0___45_3190388615181087052 && (otherRec.sym__0__617043931306359219 == sym__0__617043931306359219 && (otherRec.sym__0___45_6132208035988097838 == sym__0___45_6132208035988097838 && (otherRec.sym__0___45_7131498866425802518 == sym__0___45_7131498866425802518 && (otherRec.sym__0__3212189690086512703 == sym__0__3212189690086512703 && (otherRec.sym__0___45_4551279862702652409 == sym__0___45_4551279862702652409 && (otherRec.sym__0__6400252650127444553 == sym__0__6400252650127444553 && (otherRec.sym__0__8989200694518734396 == sym__0__8989200694518734396 && (otherRec.sym__0__1879639780622030444 == sym__0__1879639780622030444 && (otherRec.sym__0__4679788483318910399 == sym__0__4679788483318910399 && (otherRec.sym__0___45_1519325191444557143 == sym__0___45_1519325191444557143 && (otherRec.sym__0__8808022150768814575 == sym__0__8808022150768814575 && (otherRec.sym__0__1615907806695898299 == sym__0__1615907806695898299 && (otherRec.sym__0__7902426149900564525 == sym__0__7902426149900564525 && (otherRec.sym__0__7538375850658612802 == sym__0__7538375850658612802 && otherRec.sym__0__2838506290652474191 == sym__0__2838506290652474191)))))))))))))))))))))))))))))))))))))))))))))))));
  }
  bool operator !=(const Record47& otherRec) const{
    return (otherRec.sym__0__4141812305157790681 != sym__0__4141812305157790681 || (otherRec.sym__0___45_5159284013671774530 != sym__0___45_5159284013671774530 || (otherRec.sym__0__5929335199040604944 != sym__0__5929335199040604944 || (otherRec.sym__0__8980268860843798410 != sym__0__8980268860843798410 || (otherRec.sym__0__7438201141129884556 != sym__0__7438201141129884556 || (otherRec.sym__0__299964735226913069 != sym__0__299964735226913069 || (otherRec.sym__0___45_274153224962620866 != sym__0___45_274153224962620866 || (otherRec.sym__0___45_1704737576651497046 != sym__0___45_1704737576651497046 || (otherRec.sym__0___45_5364431335747194636 != sym__0___45_5364431335747194636 || (otherRec.sym__0___45_6670480666790360404 != sym__0___45_6670480666790360404 || (otherRec.sym__0__1035059097189397270 != sym__0__1035059097189397270 || (otherRec.sym__0___45_236567292019976639 != sym__0___45_236567292019976639 || (otherRec.sym__0___45_4342072045869091480 != sym__0___45_4342072045869091480 || (otherRec.sym__0___45_48356416147601727 != sym__0___45_48356416147601727 || (otherRec.sym__0___45_3530069934999759345 != sym__0___45_3530069934999759345 || (otherRec.sym__0___45_21272610088483796 != sym__0___45_21272610088483796 || (otherRec.sym__0__8564866222464334588 != sym__0__8564866222464334588 || (otherRec.sym__0___45_744165813648595542 != sym__0___45_744165813648595542 || (otherRec.sym__0__482146207611652104 != sym__0__482146207611652104 || (otherRec.sym__0___45_2183093135728676926 != sym__0___45_2183093135728676926 || (otherRec.sym__0___45_1874278765651523026 != sym__0___45_1874278765651523026 || (otherRec.sym__0___45_7594691263183254603 != sym__0___45_7594691263183254603 || (otherRec.sym__0__3632680852047490635 != sym__0__3632680852047490635 || (otherRec.sym__0___45_7823346196563635997 != sym__0___45_7823346196563635997 || (otherRec.sym__0__5619860144531125902 != sym__0__5619860144531125902 || (otherRec.sym__0__5610665202265100958 != sym__0__5610665202265100958 || (otherRec.sym__0___45_9075663471338639476 != sym__0___45_9075663471338639476 || (otherRec.sym__0__4691788782750567507 != sym__0__4691788782750567507 || (otherRec.sym__0__7928058280817873233 != sym__0__7928058280817873233 || (otherRec.sym__0__6668222264524417219 != sym__0__6668222264524417219 || (otherRec.sym__0__2297426772070097766 != sym__0__2297426772070097766 || (otherRec.sym__0__3416485698032376717 != sym__0__3416485698032376717 || (otherRec.sym__0___45_1989902664282570938 != sym__0___45_1989902664282570938 || (otherRec.sym__0___45_8900398421048301202 != sym__0___45_8900398421048301202 || (otherRec.sym__0___45_3190388615181087052 != sym__0___45_3190388615181087052 || (otherRec.sym__0__617043931306359219 != sym__0__617043931306359219 || (otherRec.sym__0___45_6132208035988097838 != sym__0___45_6132208035988097838 || (otherRec.sym__0___45_7131498866425802518 != sym__0___45_7131498866425802518 || (otherRec.sym__0__3212189690086512703 != sym__0__3212189690086512703 || (otherRec.sym__0___45_4551279862702652409 != sym__0___45_4551279862702652409 || (otherRec.sym__0__6400252650127444553 != sym__0__6400252650127444553 || (otherRec.sym__0__8989200694518734396 != sym__0__8989200694518734396 || (otherRec.sym__0__1879639780622030444 != sym__0__1879639780622030444 || (otherRec.sym__0__4679788483318910399 != sym__0__4679788483318910399 || (otherRec.sym__0___45_1519325191444557143 != sym__0___45_1519325191444557143 || (otherRec.sym__0__8808022150768814575 != sym__0__8808022150768814575 || (otherRec.sym__0__1615907806695898299 != sym__0__1615907806695898299 || (otherRec.sym__0__7902426149900564525 != sym__0__7902426149900564525 || (otherRec.sym__0__7538375850658612802 != sym__0__7538375850658612802 || otherRec.sym__0__2838506290652474191 != sym__0__2838506290652474191)))))))))))))))))))))))))))))))))))))))))))))))));
  }
  unsigned sym__0__4141812305157790681;
  fluidb_string<25> sym__0___45_5159284013671774530;
  fluidb_string<40> sym__0__5929335199040604944;
  fluidb_string<16> sym__0__8980268860843798410;
  fluidb_string<16> sym__0__7438201141129884556;
  fluidb_string<13> sym__0__299964735226913069;
  fluidb_string<15> sym__0___45_274153224962620866;
  unsigned sym__0___45_1704737576651497046;
  int sym__0___45_5364431335747194636;
  unsigned sym__0___45_6670480666790360404;
  unsigned sym__0__1035059097189397270;
  unsigned sym__0___45_236567292019976639;
  unsigned sym__0___45_4342072045869091480;
  fluidb_string<21> sym__0___45_48356416147601727;
  unsigned sym__0___45_3530069934999759345;
  fluidb_string<10> sym__0___45_21272610088483796;
  unsigned sym__0__8564866222464334588;
  double sym__0___45_744165813648595542;
  unsigned sym__0__482146207611652104;
  double sym__0___45_2183093135728676926;
  unsigned sym__0___45_1874278765651523026;
  unsigned sym__0___45_7594691263183254603;
  double sym__0__3632680852047490635;
  fluidb_string<13> sym__0___45_7823346196563635997;
  unsigned sym__0__5619860144531125902;
  fluidb_string<18> sym__0__5610665202265100958;
  fluidb_string<9> sym__0___45_9075663471338639476;
  fluidb_string<9> sym__0__4691788782750567507;
  unsigned sym__0__7928058280817873233;
  unsigned sym__0__6668222264524417219;
  fluidb_string<7> sym__0__2297426772070097766;
  unsigned sym__0__3416485698032376717;
  unsigned sym__0___45_1989902664282570938;
  unsigned sym__0___45_8900398421048301202;
  unsigned sym__0___45_3190388615181087052;
  unsigned sym__0__617043931306359219;
  fluidb_string<15> sym__0___45_6132208035988097838;
  fluidb_string<2> sym__0___45_7131498866425802518;
  fluidb_string<2> sym__0__3212189690086512703;
  fluidb_string<2> sym__0___45_4551279862702652409;
  fluidb_string<2> sym__0__6400252650127444553;
  unsigned sym__0__8989200694518734396;
  fluidb_string<55> sym__0__1879639780622030444;
  fluidb_string<25> sym__0__4679788483318910399;
  fluidb_string<7> sym__0___45_1519325191444557143;
  fluidb_string<10> sym__0__8808022150768814575;
  fluidb_string<11> sym__0__1615907806695898299;
  fluidb_string<25> sym__0__7902426149900564525;
  unsigned sym__0__7538375850658612802;
  fluidb_string<10> sym__0__2838506290652474191;
 private:
};


class Record24 {
 public:
  Record24(unsigned __sym__0__2102316481828394123, fluidb_string<25> __sym__0__1780257040091145452, fluidb_string<40> __sym__0__3109939911660640430, fluidb_string<16> __sym__0___45_2175199227983174320, fluidb_string<16> __sym__0__2274992661292194562, fluidb_string<13> __sym__0___45_52536403880094569, fluidb_string<15> __sym__0__8474116574285927276, unsigned __sym__0__1835503384076924528, int __sym__0__586412267723269786, unsigned __sym__0__1353367320182642978, unsigned __sym__0___45_6351222752813626636, unsigned __sym__0___45_805067702695824989, unsigned __sym__0__914509637812701046, fluidb_string<21> __sym__0__7895450651221174051, unsigned __sym__0__5942285589324576545, fluidb_string<10> __sym__0__3979382234526804898, unsigned __sym__0___45_6103522369909819246, double __sym__0__1873148039180761712, unsigned __sym__0__1430551526674366102, double __sym__0__1048818672001592248, unsigned __sym__0__5723353836447658492, unsigned __sym__0___45_2233273278156881105, double __sym__0___45_1120880788595637835, fluidb_string<13> __sym__0___45_6361490230660137987, unsigned __sym__0___45_7131249874638266788, fluidb_string<18> __sym__0__7265729621635359692, fluidb_string<9> __sym__0___45_2986035740159621374, fluidb_string<9> __sym__0__5081664509798388941, unsigned __sym__0___45_8518596434939314413, unsigned __sym__0__1988221653138390749, fluidb_string<7> __sym__0___45_8801377200944175068, unsigned __sym__0___45_4634183629139578121, unsigned __sym__0__806472603637564420, unsigned __sym__0__1725829484083430844, unsigned __sym__0___45_5279274827282678566, unsigned __sym__0___45_9129247388617675603, fluidb_string<15> __sym__0__1232225844204183080, fluidb_string<2> __sym__0__9184663680502119984, fluidb_string<2> __sym__0___45_9023997483659527503, fluidb_string<2> __sym__0___45_1026604631201554135, fluidb_string<2> __sym__0___45_7189754320372197989) : sym__0__2102316481828394123(__sym__0__2102316481828394123), sym__0__1780257040091145452(__sym__0__1780257040091145452), sym__0__3109939911660640430(__sym__0__3109939911660640430), sym__0___45_2175199227983174320(__sym__0___45_2175199227983174320), sym__0__2274992661292194562(__sym__0__2274992661292194562), sym__0___45_52536403880094569(__sym__0___45_52536403880094569), sym__0__8474116574285927276(__sym__0__8474116574285927276), sym__0__1835503384076924528(__sym__0__1835503384076924528), sym__0__586412267723269786(__sym__0__586412267723269786), sym__0__1353367320182642978(__sym__0__1353367320182642978), sym__0___45_6351222752813626636(__sym__0___45_6351222752813626636), sym__0___45_805067702695824989(__sym__0___45_805067702695824989), sym__0__914509637812701046(__sym__0__914509637812701046), sym__0__7895450651221174051(__sym__0__7895450651221174051), sym__0__5942285589324576545(__sym__0__5942285589324576545), sym__0__3979382234526804898(__sym__0__3979382234526804898), sym__0___45_6103522369909819246(__sym__0___45_6103522369909819246), sym__0__1873148039180761712(__sym__0__1873148039180761712), sym__0__1430551526674366102(__sym__0__1430551526674366102), sym__0__1048818672001592248(__sym__0__1048818672001592248), sym__0__5723353836447658492(__sym__0__5723353836447658492), sym__0___45_2233273278156881105(__sym__0___45_2233273278156881105), sym__0___45_1120880788595637835(__sym__0___45_1120880788595637835), sym__0___45_6361490230660137987(__sym__0___45_6361490230660137987), sym__0___45_7131249874638266788(__sym__0___45_7131249874638266788), sym__0__7265729621635359692(__sym__0__7265729621635359692), sym__0___45_2986035740159621374(__sym__0___45_2986035740159621374), sym__0__5081664509798388941(__sym__0__5081664509798388941), sym__0___45_8518596434939314413(__sym__0___45_8518596434939314413), sym__0__1988221653138390749(__sym__0__1988221653138390749), sym__0___45_8801377200944175068(__sym__0___45_8801377200944175068), sym__0___45_4634183629139578121(__sym__0___45_4634183629139578121), sym__0__806472603637564420(__sym__0__806472603637564420), sym__0__1725829484083430844(__sym__0__1725829484083430844), sym__0___45_5279274827282678566(__sym__0___45_5279274827282678566), sym__0___45_9129247388617675603(__sym__0___45_9129247388617675603), sym__0__1232225844204183080(__sym__0__1232225844204183080), sym__0__9184663680502119984(__sym__0__9184663680502119984), sym__0___45_9023997483659527503(__sym__0___45_9023997483659527503), sym__0___45_1026604631201554135(__sym__0___45_1026604631201554135), sym__0___45_7189754320372197989(__sym__0___45_7189754320372197989)
  {
  }
  Record24() 
  {
  }
  std::string show() const{
    std::stringstream o;
    o << sym__0__2102316481828394123 << " | " << arrToString(sym__0__1780257040091145452) << " | " << arrToString(sym__0__3109939911660640430) << " | " << arrToString(sym__0___45_2175199227983174320) << " | " << arrToString(sym__0__2274992661292194562) << " | " << arrToString(sym__0___45_52536403880094569) << " | " << arrToString(sym__0__8474116574285927276) << " | " << sym__0__1835503384076924528 << " | " << sym__0__586412267723269786 << " | " << sym__0__1353367320182642978 << " | " << sym__0___45_6351222752813626636 << " | " << sym__0___45_805067702695824989 << " | " << sym__0__914509637812701046 << " | " << arrToString(sym__0__7895450651221174051) << " | " << sym__0__5942285589324576545 << " | " << arrToString(sym__0__3979382234526804898) << " | " << sym__0___45_6103522369909819246 << " | " << sym__0__1873148039180761712 << " | " << sym__0__1430551526674366102 << " | " << sym__0__1048818672001592248 << " | " << sym__0__5723353836447658492 << " | " << sym__0___45_2233273278156881105 << " | " << sym__0___45_1120880788595637835 << " | " << arrToString(sym__0___45_6361490230660137987) << " | " << sym__0___45_7131249874638266788 << " | " << arrToString(sym__0__7265729621635359692) << " | " << arrToString(sym__0___45_2986035740159621374) << " | " << arrToString(sym__0__5081664509798388941) << " | " << sym__0___45_8518596434939314413 << " | " << sym__0__1988221653138390749 << " | " << arrToString(sym__0___45_8801377200944175068) << " | " << sym__0___45_4634183629139578121 << " | " << sym__0__806472603637564420 << " | " << sym__0__1725829484083430844 << " | " << sym__0___45_5279274827282678566 << " | " << sym__0___45_9129247388617675603 << " | " << arrToString(sym__0__1232225844204183080) << " | " << arrToString(sym__0__9184663680502119984) << " | " << arrToString(sym__0___45_9023997483659527503) << " | " << arrToString(sym__0___45_1026604631201554135) << " | " << arrToString(sym__0___45_7189754320372197989);
    return o.str();
  }
  bool operator <(const Record24& otherRec) const{
    return (otherRec.sym__0__2102316481828394123 < sym__0__2102316481828394123 && (otherRec.sym__0__1780257040091145452 < sym__0__1780257040091145452 && (otherRec.sym__0__3109939911660640430 < sym__0__3109939911660640430 && (otherRec.sym__0___45_2175199227983174320 < sym__0___45_2175199227983174320 && (otherRec.sym__0__2274992661292194562 < sym__0__2274992661292194562 && (otherRec.sym__0___45_52536403880094569 < sym__0___45_52536403880094569 && (otherRec.sym__0__8474116574285927276 < sym__0__8474116574285927276 && (otherRec.sym__0__1835503384076924528 < sym__0__1835503384076924528 && (otherRec.sym__0__586412267723269786 < sym__0__586412267723269786 && (otherRec.sym__0__1353367320182642978 < sym__0__1353367320182642978 && (otherRec.sym__0___45_6351222752813626636 < sym__0___45_6351222752813626636 && (otherRec.sym__0___45_805067702695824989 < sym__0___45_805067702695824989 && (otherRec.sym__0__914509637812701046 < sym__0__914509637812701046 && (otherRec.sym__0__7895450651221174051 < sym__0__7895450651221174051 && (otherRec.sym__0__5942285589324576545 < sym__0__5942285589324576545 && (otherRec.sym__0__3979382234526804898 < sym__0__3979382234526804898 && (otherRec.sym__0___45_6103522369909819246 < sym__0___45_6103522369909819246 && (otherRec.sym__0__1873148039180761712 < sym__0__1873148039180761712 && (otherRec.sym__0__1430551526674366102 < sym__0__1430551526674366102 && (otherRec.sym__0__1048818672001592248 < sym__0__1048818672001592248 && (otherRec.sym__0__5723353836447658492 < sym__0__5723353836447658492 && (otherRec.sym__0___45_2233273278156881105 < sym__0___45_2233273278156881105 && (otherRec.sym__0___45_1120880788595637835 < sym__0___45_1120880788595637835 && (otherRec.sym__0___45_6361490230660137987 < sym__0___45_6361490230660137987 && (otherRec.sym__0___45_7131249874638266788 < sym__0___45_7131249874638266788 && (otherRec.sym__0__7265729621635359692 < sym__0__7265729621635359692 && (otherRec.sym__0___45_2986035740159621374 < sym__0___45_2986035740159621374 && (otherRec.sym__0__5081664509798388941 < sym__0__5081664509798388941 && (otherRec.sym__0___45_8518596434939314413 < sym__0___45_8518596434939314413 && (otherRec.sym__0__1988221653138390749 < sym__0__1988221653138390749 && (otherRec.sym__0___45_8801377200944175068 < sym__0___45_8801377200944175068 && (otherRec.sym__0___45_4634183629139578121 < sym__0___45_4634183629139578121 && (otherRec.sym__0__806472603637564420 < sym__0__806472603637564420 && (otherRec.sym__0__1725829484083430844 < sym__0__1725829484083430844 && (otherRec.sym__0___45_5279274827282678566 < sym__0___45_5279274827282678566 && (otherRec.sym__0___45_9129247388617675603 < sym__0___45_9129247388617675603 && (otherRec.sym__0__1232225844204183080 < sym__0__1232225844204183080 && (otherRec.sym__0__9184663680502119984 < sym__0__9184663680502119984 && (otherRec.sym__0___45_9023997483659527503 < sym__0___45_9023997483659527503 && (otherRec.sym__0___45_1026604631201554135 < sym__0___45_1026604631201554135 && otherRec.sym__0___45_7189754320372197989 < sym__0___45_7189754320372197989))))))))))))))))))))))))))))))))))))))));
  }
  bool operator ==(const Record24& otherRec) const{
    return (otherRec.sym__0__2102316481828394123 == sym__0__2102316481828394123 && (otherRec.sym__0__1780257040091145452 == sym__0__1780257040091145452 && (otherRec.sym__0__3109939911660640430 == sym__0__3109939911660640430 && (otherRec.sym__0___45_2175199227983174320 == sym__0___45_2175199227983174320 && (otherRec.sym__0__2274992661292194562 == sym__0__2274992661292194562 && (otherRec.sym__0___45_52536403880094569 == sym__0___45_52536403880094569 && (otherRec.sym__0__8474116574285927276 == sym__0__8474116574285927276 && (otherRec.sym__0__1835503384076924528 == sym__0__1835503384076924528 && (otherRec.sym__0__586412267723269786 == sym__0__586412267723269786 && (otherRec.sym__0__1353367320182642978 == sym__0__1353367320182642978 && (otherRec.sym__0___45_6351222752813626636 == sym__0___45_6351222752813626636 && (otherRec.sym__0___45_805067702695824989 == sym__0___45_805067702695824989 && (otherRec.sym__0__914509637812701046 == sym__0__914509637812701046 && (otherRec.sym__0__7895450651221174051 == sym__0__7895450651221174051 && (otherRec.sym__0__5942285589324576545 == sym__0__5942285589324576545 && (otherRec.sym__0__3979382234526804898 == sym__0__3979382234526804898 && (otherRec.sym__0___45_6103522369909819246 == sym__0___45_6103522369909819246 && (otherRec.sym__0__1873148039180761712 == sym__0__1873148039180761712 && (otherRec.sym__0__1430551526674366102 == sym__0__1430551526674366102 && (otherRec.sym__0__1048818672001592248 == sym__0__1048818672001592248 && (otherRec.sym__0__5723353836447658492 == sym__0__5723353836447658492 && (otherRec.sym__0___45_2233273278156881105 == sym__0___45_2233273278156881105 && (otherRec.sym__0___45_1120880788595637835 == sym__0___45_1120880788595637835 && (otherRec.sym__0___45_6361490230660137987 == sym__0___45_6361490230660137987 && (otherRec.sym__0___45_7131249874638266788 == sym__0___45_7131249874638266788 && (otherRec.sym__0__7265729621635359692 == sym__0__7265729621635359692 && (otherRec.sym__0___45_2986035740159621374 == sym__0___45_2986035740159621374 && (otherRec.sym__0__5081664509798388941 == sym__0__5081664509798388941 && (otherRec.sym__0___45_8518596434939314413 == sym__0___45_8518596434939314413 && (otherRec.sym__0__1988221653138390749 == sym__0__1988221653138390749 && (otherRec.sym__0___45_8801377200944175068 == sym__0___45_8801377200944175068 && (otherRec.sym__0___45_4634183629139578121 == sym__0___45_4634183629139578121 && (otherRec.sym__0__806472603637564420 == sym__0__806472603637564420 && (otherRec.sym__0__1725829484083430844 == sym__0__1725829484083430844 && (otherRec.sym__0___45_5279274827282678566 == sym__0___45_5279274827282678566 && (otherRec.sym__0___45_9129247388617675603 == sym__0___45_9129247388617675603 && (otherRec.sym__0__1232225844204183080 == sym__0__1232225844204183080 && (otherRec.sym__0__9184663680502119984 == sym__0__9184663680502119984 && (otherRec.sym__0___45_9023997483659527503 == sym__0___45_9023997483659527503 && (otherRec.sym__0___45_1026604631201554135 == sym__0___45_1026604631201554135 && otherRec.sym__0___45_7189754320372197989 == sym__0___45_7189754320372197989))))))))))))))))))))))))))))))))))))))));
  }
  bool operator !=(const Record24& otherRec) const{
    return (otherRec.sym__0__2102316481828394123 != sym__0__2102316481828394123 || (otherRec.sym__0__1780257040091145452 != sym__0__1780257040091145452 || (otherRec.sym__0__3109939911660640430 != sym__0__3109939911660640430 || (otherRec.sym__0___45_2175199227983174320 != sym__0___45_2175199227983174320 || (otherRec.sym__0__2274992661292194562 != sym__0__2274992661292194562 || (otherRec.sym__0___45_52536403880094569 != sym__0___45_52536403880094569 || (otherRec.sym__0__8474116574285927276 != sym__0__8474116574285927276 || (otherRec.sym__0__1835503384076924528 != sym__0__1835503384076924528 || (otherRec.sym__0__586412267723269786 != sym__0__586412267723269786 || (otherRec.sym__0__1353367320182642978 != sym__0__1353367320182642978 || (otherRec.sym__0___45_6351222752813626636 != sym__0___45_6351222752813626636 || (otherRec.sym__0___45_805067702695824989 != sym__0___45_805067702695824989 || (otherRec.sym__0__914509637812701046 != sym__0__914509637812701046 || (otherRec.sym__0__7895450651221174051 != sym__0__7895450651221174051 || (otherRec.sym__0__5942285589324576545 != sym__0__5942285589324576545 || (otherRec.sym__0__3979382234526804898 != sym__0__3979382234526804898 || (otherRec.sym__0___45_6103522369909819246 != sym__0___45_6103522369909819246 || (otherRec.sym__0__1873148039180761712 != sym__0__1873148039180761712 || (otherRec.sym__0__1430551526674366102 != sym__0__1430551526674366102 || (otherRec.sym__0__1048818672001592248 != sym__0__1048818672001592248 || (otherRec.sym__0__5723353836447658492 != sym__0__5723353836447658492 || (otherRec.sym__0___45_2233273278156881105 != sym__0___45_2233273278156881105 || (otherRec.sym__0___45_1120880788595637835 != sym__0___45_1120880788595637835 || (otherRec.sym__0___45_6361490230660137987 != sym__0___45_6361490230660137987 || (otherRec.sym__0___45_7131249874638266788 != sym__0___45_7131249874638266788 || (otherRec.sym__0__7265729621635359692 != sym__0__7265729621635359692 || (otherRec.sym__0___45_2986035740159621374 != sym__0___45_2986035740159621374 || (otherRec.sym__0__5081664509798388941 != sym__0__5081664509798388941 || (otherRec.sym__0___45_8518596434939314413 != sym__0___45_8518596434939314413 || (otherRec.sym__0__1988221653138390749 != sym__0__1988221653138390749 || (otherRec.sym__0___45_8801377200944175068 != sym__0___45_8801377200944175068 || (otherRec.sym__0___45_4634183629139578121 != sym__0___45_4634183629139578121 || (otherRec.sym__0__806472603637564420 != sym__0__806472603637564420 || (otherRec.sym__0__1725829484083430844 != sym__0__1725829484083430844 || (otherRec.sym__0___45_5279274827282678566 != sym__0___45_5279274827282678566 || (otherRec.sym__0___45_9129247388617675603 != sym__0___45_9129247388617675603 || (otherRec.sym__0__1232225844204183080 != sym__0__1232225844204183080 || (otherRec.sym__0__9184663680502119984 != sym__0__9184663680502119984 || (otherRec.sym__0___45_9023997483659527503 != sym__0___45_9023997483659527503 || (otherRec.sym__0___45_1026604631201554135 != sym__0___45_1026604631201554135 || otherRec.sym__0___45_7189754320372197989 != sym__0___45_7189754320372197989))))))))))))))))))))))))))))))))))))))));
  }
  unsigned sym__0__2102316481828394123;
  fluidb_string<25> sym__0__1780257040091145452;
  fluidb_string<40> sym__0__3109939911660640430;
  fluidb_string<16> sym__0___45_2175199227983174320;
  fluidb_string<16> sym__0__2274992661292194562;
  fluidb_string<13> sym__0___45_52536403880094569;
  fluidb_string<15> sym__0__8474116574285927276;
  unsigned sym__0__1835503384076924528;
  int sym__0__586412267723269786;
  unsigned sym__0__1353367320182642978;
  unsigned sym__0___45_6351222752813626636;
  unsigned sym__0___45_805067702695824989;
  unsigned sym__0__914509637812701046;
  fluidb_string<21> sym__0__7895450651221174051;
  unsigned sym__0__5942285589324576545;
  fluidb_string<10> sym__0__3979382234526804898;
  unsigned sym__0___45_6103522369909819246;
  double sym__0__1873148039180761712;
  unsigned sym__0__1430551526674366102;
  double sym__0__1048818672001592248;
  unsigned sym__0__5723353836447658492;
  unsigned sym__0___45_2233273278156881105;
  double sym__0___45_1120880788595637835;
  fluidb_string<13> sym__0___45_6361490230660137987;
  unsigned sym__0___45_7131249874638266788;
  fluidb_string<18> sym__0__7265729621635359692;
  fluidb_string<9> sym__0___45_2986035740159621374;
  fluidb_string<9> sym__0__5081664509798388941;
  unsigned sym__0___45_8518596434939314413;
  unsigned sym__0__1988221653138390749;
  fluidb_string<7> sym__0___45_8801377200944175068;
  unsigned sym__0___45_4634183629139578121;
  unsigned sym__0__806472603637564420;
  unsigned sym__0__1725829484083430844;
  unsigned sym__0___45_5279274827282678566;
  unsigned sym__0___45_9129247388617675603;
  fluidb_string<15> sym__0__1232225844204183080;
  fluidb_string<2> sym__0__9184663680502119984;
  fluidb_string<2> sym__0___45_9023997483659527503;
  fluidb_string<2> sym__0___45_1026604631201554135;
  fluidb_string<2> sym__0___45_7189754320372197989;
 private:
};


class Record15 {
 public:
  Record15(unsigned __sym__0___45_3961143035674407474, fluidb_string<18> __sym__0___45_6251899802584687138, fluidb_string<9> __sym__0__7895704682370371792, fluidb_string<9> __sym__0___45_4486276699369081973, unsigned __sym__0__1119005997298974989, unsigned __sym__0__3623076037790620667, fluidb_string<7> __sym__0___45_369211045765545994, unsigned __sym__0___45_2252349090140989903, unsigned __sym__0___45_6519715028980934506, unsigned __sym__0__6988144115678218478, unsigned __sym__0__1168585672581702408, unsigned __sym__0___45_1566345155802505557, fluidb_string<15> __sym__0___45_3812637469976556790, fluidb_string<2> __sym__0___45_2398128448016703502, fluidb_string<2> __sym__0__5574729781191990975, fluidb_string<2> __sym__0___45_5962954882039921225, fluidb_string<2> __sym__0___45_7276734914968453131, unsigned __sym__0__5341165382232817970, int __sym__0__5806605655987033032, unsigned __sym__0___45_6623407408063066704, unsigned __sym__0___45_1670026162273154778, unsigned __sym__0__2289386367904588797, unsigned __sym__0__8025829587274267860, fluidb_string<21> __sym__0__454237065112775549, unsigned __sym__0__608217599158647375, fluidb_string<10> __sym__0__4347069016709593136, unsigned __sym__0__4553650632168714688, double __sym__0__586349573025064242, unsigned __sym__0__144523031940788660, double __sym__0__2942207309637238010, unsigned __sym__0__1782085603058736686, unsigned __sym__0__3001704397998344329, double __sym__0___45_2662583778072919661, fluidb_string<13> __sym__0__8853539013824041307) : sym__0___45_3961143035674407474(__sym__0___45_3961143035674407474), sym__0___45_6251899802584687138(__sym__0___45_6251899802584687138), sym__0__7895704682370371792(__sym__0__7895704682370371792), sym__0___45_4486276699369081973(__sym__0___45_4486276699369081973), sym__0__1119005997298974989(__sym__0__1119005997298974989), sym__0__3623076037790620667(__sym__0__3623076037790620667), sym__0___45_369211045765545994(__sym__0___45_369211045765545994), sym__0___45_2252349090140989903(__sym__0___45_2252349090140989903), sym__0___45_6519715028980934506(__sym__0___45_6519715028980934506), sym__0__6988144115678218478(__sym__0__6988144115678218478), sym__0__1168585672581702408(__sym__0__1168585672581702408), sym__0___45_1566345155802505557(__sym__0___45_1566345155802505557), sym__0___45_3812637469976556790(__sym__0___45_3812637469976556790), sym__0___45_2398128448016703502(__sym__0___45_2398128448016703502), sym__0__5574729781191990975(__sym__0__5574729781191990975), sym__0___45_5962954882039921225(__sym__0___45_5962954882039921225), sym__0___45_7276734914968453131(__sym__0___45_7276734914968453131), sym__0__5341165382232817970(__sym__0__5341165382232817970), sym__0__5806605655987033032(__sym__0__5806605655987033032), sym__0___45_6623407408063066704(__sym__0___45_6623407408063066704), sym__0___45_1670026162273154778(__sym__0___45_1670026162273154778), sym__0__2289386367904588797(__sym__0__2289386367904588797), sym__0__8025829587274267860(__sym__0__8025829587274267860), sym__0__454237065112775549(__sym__0__454237065112775549), sym__0__608217599158647375(__sym__0__608217599158647375), sym__0__4347069016709593136(__sym__0__4347069016709593136), sym__0__4553650632168714688(__sym__0__4553650632168714688), sym__0__586349573025064242(__sym__0__586349573025064242), sym__0__144523031940788660(__sym__0__144523031940788660), sym__0__2942207309637238010(__sym__0__2942207309637238010), sym__0__1782085603058736686(__sym__0__1782085603058736686), sym__0__3001704397998344329(__sym__0__3001704397998344329), sym__0___45_2662583778072919661(__sym__0___45_2662583778072919661), sym__0__8853539013824041307(__sym__0__8853539013824041307)
  {
  }
  Record15() 
  {
  }
  std::string show() const{
    std::stringstream o;
    o << sym__0___45_3961143035674407474 << " | " << arrToString(sym__0___45_6251899802584687138) << " | " << arrToString(sym__0__7895704682370371792) << " | " << arrToString(sym__0___45_4486276699369081973) << " | " << sym__0__1119005997298974989 << " | " << sym__0__3623076037790620667 << " | " << arrToString(sym__0___45_369211045765545994) << " | " << sym__0___45_2252349090140989903 << " | " << sym__0___45_6519715028980934506 << " | " << sym__0__6988144115678218478 << " | " << sym__0__1168585672581702408 << " | " << sym__0___45_1566345155802505557 << " | " << arrToString(sym__0___45_3812637469976556790) << " | " << arrToString(sym__0___45_2398128448016703502) << " | " << arrToString(sym__0__5574729781191990975) << " | " << arrToString(sym__0___45_5962954882039921225) << " | " << arrToString(sym__0___45_7276734914968453131) << " | " << sym__0__5341165382232817970 << " | " << sym__0__5806605655987033032 << " | " << sym__0___45_6623407408063066704 << " | " << sym__0___45_1670026162273154778 << " | " << sym__0__2289386367904588797 << " | " << sym__0__8025829587274267860 << " | " << arrToString(sym__0__454237065112775549) << " | " << sym__0__608217599158647375 << " | " << arrToString(sym__0__4347069016709593136) << " | " << sym__0__4553650632168714688 << " | " << sym__0__586349573025064242 << " | " << sym__0__144523031940788660 << " | " << sym__0__2942207309637238010 << " | " << sym__0__1782085603058736686 << " | " << sym__0__3001704397998344329 << " | " << sym__0___45_2662583778072919661 << " | " << arrToString(sym__0__8853539013824041307);
    return o.str();
  }
  bool operator <(const Record15& otherRec) const{
    return (otherRec.sym__0___45_3961143035674407474 < sym__0___45_3961143035674407474 && (otherRec.sym__0___45_6251899802584687138 < sym__0___45_6251899802584687138 && (otherRec.sym__0__7895704682370371792 < sym__0__7895704682370371792 && (otherRec.sym__0___45_4486276699369081973 < sym__0___45_4486276699369081973 && (otherRec.sym__0__1119005997298974989 < sym__0__1119005997298974989 && (otherRec.sym__0__3623076037790620667 < sym__0__3623076037790620667 && (otherRec.sym__0___45_369211045765545994 < sym__0___45_369211045765545994 && (otherRec.sym__0___45_2252349090140989903 < sym__0___45_2252349090140989903 && (otherRec.sym__0___45_6519715028980934506 < sym__0___45_6519715028980934506 && (otherRec.sym__0__6988144115678218478 < sym__0__6988144115678218478 && (otherRec.sym__0__1168585672581702408 < sym__0__1168585672581702408 && (otherRec.sym__0___45_1566345155802505557 < sym__0___45_1566345155802505557 && (otherRec.sym__0___45_3812637469976556790 < sym__0___45_3812637469976556790 && (otherRec.sym__0___45_2398128448016703502 < sym__0___45_2398128448016703502 && (otherRec.sym__0__5574729781191990975 < sym__0__5574729781191990975 && (otherRec.sym__0___45_5962954882039921225 < sym__0___45_5962954882039921225 && (otherRec.sym__0___45_7276734914968453131 < sym__0___45_7276734914968453131 && (otherRec.sym__0__5341165382232817970 < sym__0__5341165382232817970 && (otherRec.sym__0__5806605655987033032 < sym__0__5806605655987033032 && (otherRec.sym__0___45_6623407408063066704 < sym__0___45_6623407408063066704 && (otherRec.sym__0___45_1670026162273154778 < sym__0___45_1670026162273154778 && (otherRec.sym__0__2289386367904588797 < sym__0__2289386367904588797 && (otherRec.sym__0__8025829587274267860 < sym__0__8025829587274267860 && (otherRec.sym__0__454237065112775549 < sym__0__454237065112775549 && (otherRec.sym__0__608217599158647375 < sym__0__608217599158647375 && (otherRec.sym__0__4347069016709593136 < sym__0__4347069016709593136 && (otherRec.sym__0__4553650632168714688 < sym__0__4553650632168714688 && (otherRec.sym__0__586349573025064242 < sym__0__586349573025064242 && (otherRec.sym__0__144523031940788660 < sym__0__144523031940788660 && (otherRec.sym__0__2942207309637238010 < sym__0__2942207309637238010 && (otherRec.sym__0__1782085603058736686 < sym__0__1782085603058736686 && (otherRec.sym__0__3001704397998344329 < sym__0__3001704397998344329 && (otherRec.sym__0___45_2662583778072919661 < sym__0___45_2662583778072919661 && otherRec.sym__0__8853539013824041307 < sym__0__8853539013824041307)))))))))))))))))))))))))))))))));
  }
  bool operator ==(const Record15& otherRec) const{
    return (otherRec.sym__0___45_3961143035674407474 == sym__0___45_3961143035674407474 && (otherRec.sym__0___45_6251899802584687138 == sym__0___45_6251899802584687138 && (otherRec.sym__0__7895704682370371792 == sym__0__7895704682370371792 && (otherRec.sym__0___45_4486276699369081973 == sym__0___45_4486276699369081973 && (otherRec.sym__0__1119005997298974989 == sym__0__1119005997298974989 && (otherRec.sym__0__3623076037790620667 == sym__0__3623076037790620667 && (otherRec.sym__0___45_369211045765545994 == sym__0___45_369211045765545994 && (otherRec.sym__0___45_2252349090140989903 == sym__0___45_2252349090140989903 && (otherRec.sym__0___45_6519715028980934506 == sym__0___45_6519715028980934506 && (otherRec.sym__0__6988144115678218478 == sym__0__6988144115678218478 && (otherRec.sym__0__1168585672581702408 == sym__0__1168585672581702408 && (otherRec.sym__0___45_1566345155802505557 == sym__0___45_1566345155802505557 && (otherRec.sym__0___45_3812637469976556790 == sym__0___45_3812637469976556790 && (otherRec.sym__0___45_2398128448016703502 == sym__0___45_2398128448016703502 && (otherRec.sym__0__5574729781191990975 == sym__0__5574729781191990975 && (otherRec.sym__0___45_5962954882039921225 == sym__0___45_5962954882039921225 && (otherRec.sym__0___45_7276734914968453131 == sym__0___45_7276734914968453131 && (otherRec.sym__0__5341165382232817970 == sym__0__5341165382232817970 && (otherRec.sym__0__5806605655987033032 == sym__0__5806605655987033032 && (otherRec.sym__0___45_6623407408063066704 == sym__0___45_6623407408063066704 && (otherRec.sym__0___45_1670026162273154778 == sym__0___45_1670026162273154778 && (otherRec.sym__0__2289386367904588797 == sym__0__2289386367904588797 && (otherRec.sym__0__8025829587274267860 == sym__0__8025829587274267860 && (otherRec.sym__0__454237065112775549 == sym__0__454237065112775549 && (otherRec.sym__0__608217599158647375 == sym__0__608217599158647375 && (otherRec.sym__0__4347069016709593136 == sym__0__4347069016709593136 && (otherRec.sym__0__4553650632168714688 == sym__0__4553650632168714688 && (otherRec.sym__0__586349573025064242 == sym__0__586349573025064242 && (otherRec.sym__0__144523031940788660 == sym__0__144523031940788660 && (otherRec.sym__0__2942207309637238010 == sym__0__2942207309637238010 && (otherRec.sym__0__1782085603058736686 == sym__0__1782085603058736686 && (otherRec.sym__0__3001704397998344329 == sym__0__3001704397998344329 && (otherRec.sym__0___45_2662583778072919661 == sym__0___45_2662583778072919661 && otherRec.sym__0__8853539013824041307 == sym__0__8853539013824041307)))))))))))))))))))))))))))))))));
  }
  bool operator !=(const Record15& otherRec) const{
    return (otherRec.sym__0___45_3961143035674407474 != sym__0___45_3961143035674407474 || (otherRec.sym__0___45_6251899802584687138 != sym__0___45_6251899802584687138 || (otherRec.sym__0__7895704682370371792 != sym__0__7895704682370371792 || (otherRec.sym__0___45_4486276699369081973 != sym__0___45_4486276699369081973 || (otherRec.sym__0__1119005997298974989 != sym__0__1119005997298974989 || (otherRec.sym__0__3623076037790620667 != sym__0__3623076037790620667 || (otherRec.sym__0___45_369211045765545994 != sym__0___45_369211045765545994 || (otherRec.sym__0___45_2252349090140989903 != sym__0___45_2252349090140989903 || (otherRec.sym__0___45_6519715028980934506 != sym__0___45_6519715028980934506 || (otherRec.sym__0__6988144115678218478 != sym__0__6988144115678218478 || (otherRec.sym__0__1168585672581702408 != sym__0__1168585672581702408 || (otherRec.sym__0___45_1566345155802505557 != sym__0___45_1566345155802505557 || (otherRec.sym__0___45_3812637469976556790 != sym__0___45_3812637469976556790 || (otherRec.sym__0___45_2398128448016703502 != sym__0___45_2398128448016703502 || (otherRec.sym__0__5574729781191990975 != sym__0__5574729781191990975 || (otherRec.sym__0___45_5962954882039921225 != sym__0___45_5962954882039921225 || (otherRec.sym__0___45_7276734914968453131 != sym__0___45_7276734914968453131 || (otherRec.sym__0__5341165382232817970 != sym__0__5341165382232817970 || (otherRec.sym__0__5806605655987033032 != sym__0__5806605655987033032 || (otherRec.sym__0___45_6623407408063066704 != sym__0___45_6623407408063066704 || (otherRec.sym__0___45_1670026162273154778 != sym__0___45_1670026162273154778 || (otherRec.sym__0__2289386367904588797 != sym__0__2289386367904588797 || (otherRec.sym__0__8025829587274267860 != sym__0__8025829587274267860 || (otherRec.sym__0__454237065112775549 != sym__0__454237065112775549 || (otherRec.sym__0__608217599158647375 != sym__0__608217599158647375 || (otherRec.sym__0__4347069016709593136 != sym__0__4347069016709593136 || (otherRec.sym__0__4553650632168714688 != sym__0__4553650632168714688 || (otherRec.sym__0__586349573025064242 != sym__0__586349573025064242 || (otherRec.sym__0__144523031940788660 != sym__0__144523031940788660 || (otherRec.sym__0__2942207309637238010 != sym__0__2942207309637238010 || (otherRec.sym__0__1782085603058736686 != sym__0__1782085603058736686 || (otherRec.sym__0__3001704397998344329 != sym__0__3001704397998344329 || (otherRec.sym__0___45_2662583778072919661 != sym__0___45_2662583778072919661 || otherRec.sym__0__8853539013824041307 != sym__0__8853539013824041307)))))))))))))))))))))))))))))))));
  }
  unsigned sym__0___45_3961143035674407474;
  fluidb_string<18> sym__0___45_6251899802584687138;
  fluidb_string<9> sym__0__7895704682370371792;
  fluidb_string<9> sym__0___45_4486276699369081973;
  unsigned sym__0__1119005997298974989;
  unsigned sym__0__3623076037790620667;
  fluidb_string<7> sym__0___45_369211045765545994;
  unsigned sym__0___45_2252349090140989903;
  unsigned sym__0___45_6519715028980934506;
  unsigned sym__0__6988144115678218478;
  unsigned sym__0__1168585672581702408;
  unsigned sym__0___45_1566345155802505557;
  fluidb_string<15> sym__0___45_3812637469976556790;
  fluidb_string<2> sym__0___45_2398128448016703502;
  fluidb_string<2> sym__0__5574729781191990975;
  fluidb_string<2> sym__0___45_5962954882039921225;
  fluidb_string<2> sym__0___45_7276734914968453131;
  unsigned sym__0__5341165382232817970;
  int sym__0__5806605655987033032;
  unsigned sym__0___45_6623407408063066704;
  unsigned sym__0___45_1670026162273154778;
  unsigned sym__0__2289386367904588797;
  unsigned sym__0__8025829587274267860;
  fluidb_string<21> sym__0__454237065112775549;
  unsigned sym__0__608217599158647375;
  fluidb_string<10> sym__0__4347069016709593136;
  unsigned sym__0__4553650632168714688;
  double sym__0__586349573025064242;
  unsigned sym__0__144523031940788660;
  double sym__0__2942207309637238010;
  unsigned sym__0__1782085603058736686;
  unsigned sym__0__3001704397998344329;
  double sym__0___45_2662583778072919661;
  fluidb_string<13> sym__0__8853539013824041307;
 private:
};


class Record7 {
 public:
  Record7(unsigned __sym__0___45_1505533852465759107, fluidb_string<18> __sym__0__6596285179217051757, fluidb_string<9> __sym__0___45_4159561985402469085, fluidb_string<9> __sym__0__7369008339620944044, unsigned __sym__0__2684789842789018866, unsigned __sym__0___45_2509908666378225604, fluidb_string<7> __sym__0___45_7706572397611196859, unsigned __sym__0___45_5449241799411250602, unsigned __sym__0__27672868270209637, unsigned __sym__0___45_3731501451663570531, unsigned __sym__0___45_2333751162205814597, unsigned __sym__0___45_7519647944296708276, fluidb_string<15> __sym__0__5104078070134070473, fluidb_string<2> __sym__0___45_5093659501373279983, fluidb_string<2> __sym__0___45_5797253358119071280, fluidb_string<2> __sym__0___45_6360426925132620088, fluidb_string<2> __sym__0__583718615200697274) : sym__0___45_1505533852465759107(__sym__0___45_1505533852465759107), sym__0__6596285179217051757(__sym__0__6596285179217051757), sym__0___45_4159561985402469085(__sym__0___45_4159561985402469085), sym__0__7369008339620944044(__sym__0__7369008339620944044), sym__0__2684789842789018866(__sym__0__2684789842789018866), sym__0___45_2509908666378225604(__sym__0___45_2509908666378225604), sym__0___45_7706572397611196859(__sym__0___45_7706572397611196859), sym__0___45_5449241799411250602(__sym__0___45_5449241799411250602), sym__0__27672868270209637(__sym__0__27672868270209637), sym__0___45_3731501451663570531(__sym__0___45_3731501451663570531), sym__0___45_2333751162205814597(__sym__0___45_2333751162205814597), sym__0___45_7519647944296708276(__sym__0___45_7519647944296708276), sym__0__5104078070134070473(__sym__0__5104078070134070473), sym__0___45_5093659501373279983(__sym__0___45_5093659501373279983), sym__0___45_5797253358119071280(__sym__0___45_5797253358119071280), sym__0___45_6360426925132620088(__sym__0___45_6360426925132620088), sym__0__583718615200697274(__sym__0__583718615200697274)
  {
  }
  Record7() 
  {
  }
  std::string show() const{
    std::stringstream o;
    o << sym__0___45_1505533852465759107 << " | " << arrToString(sym__0__6596285179217051757) << " | " << arrToString(sym__0___45_4159561985402469085) << " | " << arrToString(sym__0__7369008339620944044) << " | " << sym__0__2684789842789018866 << " | " << sym__0___45_2509908666378225604 << " | " << arrToString(sym__0___45_7706572397611196859) << " | " << sym__0___45_5449241799411250602 << " | " << sym__0__27672868270209637 << " | " << sym__0___45_3731501451663570531 << " | " << sym__0___45_2333751162205814597 << " | " << sym__0___45_7519647944296708276 << " | " << arrToString(sym__0__5104078070134070473) << " | " << arrToString(sym__0___45_5093659501373279983) << " | " << arrToString(sym__0___45_5797253358119071280) << " | " << arrToString(sym__0___45_6360426925132620088) << " | " << arrToString(sym__0__583718615200697274);
    return o.str();
  }
  bool operator <(const Record7& otherRec) const{
    return (otherRec.sym__0___45_1505533852465759107 < sym__0___45_1505533852465759107 && (otherRec.sym__0__6596285179217051757 < sym__0__6596285179217051757 && (otherRec.sym__0___45_4159561985402469085 < sym__0___45_4159561985402469085 && (otherRec.sym__0__7369008339620944044 < sym__0__7369008339620944044 && (otherRec.sym__0__2684789842789018866 < sym__0__2684789842789018866 && (otherRec.sym__0___45_2509908666378225604 < sym__0___45_2509908666378225604 && (otherRec.sym__0___45_7706572397611196859 < sym__0___45_7706572397611196859 && (otherRec.sym__0___45_5449241799411250602 < sym__0___45_5449241799411250602 && (otherRec.sym__0__27672868270209637 < sym__0__27672868270209637 && (otherRec.sym__0___45_3731501451663570531 < sym__0___45_3731501451663570531 && (otherRec.sym__0___45_2333751162205814597 < sym__0___45_2333751162205814597 && (otherRec.sym__0___45_7519647944296708276 < sym__0___45_7519647944296708276 && (otherRec.sym__0__5104078070134070473 < sym__0__5104078070134070473 && (otherRec.sym__0___45_5093659501373279983 < sym__0___45_5093659501373279983 && (otherRec.sym__0___45_5797253358119071280 < sym__0___45_5797253358119071280 && (otherRec.sym__0___45_6360426925132620088 < sym__0___45_6360426925132620088 && otherRec.sym__0__583718615200697274 < sym__0__583718615200697274))))))))))))))));
  }
  bool operator ==(const Record7& otherRec) const{
    return (otherRec.sym__0___45_1505533852465759107 == sym__0___45_1505533852465759107 && (otherRec.sym__0__6596285179217051757 == sym__0__6596285179217051757 && (otherRec.sym__0___45_4159561985402469085 == sym__0___45_4159561985402469085 && (otherRec.sym__0__7369008339620944044 == sym__0__7369008339620944044 && (otherRec.sym__0__2684789842789018866 == sym__0__2684789842789018866 && (otherRec.sym__0___45_2509908666378225604 == sym__0___45_2509908666378225604 && (otherRec.sym__0___45_7706572397611196859 == sym__0___45_7706572397611196859 && (otherRec.sym__0___45_5449241799411250602 == sym__0___45_5449241799411250602 && (otherRec.sym__0__27672868270209637 == sym__0__27672868270209637 && (otherRec.sym__0___45_3731501451663570531 == sym__0___45_3731501451663570531 && (otherRec.sym__0___45_2333751162205814597 == sym__0___45_2333751162205814597 && (otherRec.sym__0___45_7519647944296708276 == sym__0___45_7519647944296708276 && (otherRec.sym__0__5104078070134070473 == sym__0__5104078070134070473 && (otherRec.sym__0___45_5093659501373279983 == sym__0___45_5093659501373279983 && (otherRec.sym__0___45_5797253358119071280 == sym__0___45_5797253358119071280 && (otherRec.sym__0___45_6360426925132620088 == sym__0___45_6360426925132620088 && otherRec.sym__0__583718615200697274 == sym__0__583718615200697274))))))))))))))));
  }
  bool operator !=(const Record7& otherRec) const{
    return (otherRec.sym__0___45_1505533852465759107 != sym__0___45_1505533852465759107 || (otherRec.sym__0__6596285179217051757 != sym__0__6596285179217051757 || (otherRec.sym__0___45_4159561985402469085 != sym__0___45_4159561985402469085 || (otherRec.sym__0__7369008339620944044 != sym__0__7369008339620944044 || (otherRec.sym__0__2684789842789018866 != sym__0__2684789842789018866 || (otherRec.sym__0___45_2509908666378225604 != sym__0___45_2509908666378225604 || (otherRec.sym__0___45_7706572397611196859 != sym__0___45_7706572397611196859 || (otherRec.sym__0___45_5449241799411250602 != sym__0___45_5449241799411250602 || (otherRec.sym__0__27672868270209637 != sym__0__27672868270209637 || (otherRec.sym__0___45_3731501451663570531 != sym__0___45_3731501451663570531 || (otherRec.sym__0___45_2333751162205814597 != sym__0___45_2333751162205814597 || (otherRec.sym__0___45_7519647944296708276 != sym__0___45_7519647944296708276 || (otherRec.sym__0__5104078070134070473 != sym__0__5104078070134070473 || (otherRec.sym__0___45_5093659501373279983 != sym__0___45_5093659501373279983 || (otherRec.sym__0___45_5797253358119071280 != sym__0___45_5797253358119071280 || (otherRec.sym__0___45_6360426925132620088 != sym__0___45_6360426925132620088 || otherRec.sym__0__583718615200697274 != sym__0__583718615200697274))))))))))))))));
  }
  unsigned sym__0___45_1505533852465759107;
  fluidb_string<18> sym__0__6596285179217051757;
  fluidb_string<9> sym__0___45_4159561985402469085;
  fluidb_string<9> sym__0__7369008339620944044;
  unsigned sym__0__2684789842789018866;
  unsigned sym__0___45_2509908666378225604;
  fluidb_string<7> sym__0___45_7706572397611196859;
  unsigned sym__0___45_5449241799411250602;
  unsigned sym__0__27672868270209637;
  unsigned sym__0___45_3731501451663570531;
  unsigned sym__0___45_2333751162205814597;
  unsigned sym__0___45_7519647944296708276;
  fluidb_string<15> sym__0__5104078070134070473;
  fluidb_string<2> sym__0___45_5093659501373279983;
  fluidb_string<2> sym__0___45_5797253358119071280;
  fluidb_string<2> sym__0___45_6360426925132620088;
  fluidb_string<2> sym__0__583718615200697274;
 private:
};


class Record4 {
 public:
  Record4(unsigned __sym__0___45_9117911789383871612, fluidb_string<25> __sym__0___45_1547112764757372609, fluidb_string<40> __sym__0___45_8663957751614366179, fluidb_string<16> __sym__0__1466641425010216931, fluidb_string<16> __sym__0__3672857626658041553, fluidb_string<13> __sym__0___45_3362440237381592032, fluidb_string<15> __sym__0___45_6631364176934158657) : sym__0___45_9117911789383871612(__sym__0___45_9117911789383871612), sym__0___45_1547112764757372609(__sym__0___45_1547112764757372609), sym__0___45_8663957751614366179(__sym__0___45_8663957751614366179), sym__0__1466641425010216931(__sym__0__1466641425010216931), sym__0__3672857626658041553(__sym__0__3672857626658041553), sym__0___45_3362440237381592032(__sym__0___45_3362440237381592032), sym__0___45_6631364176934158657(__sym__0___45_6631364176934158657)
  {
  }
  Record4() 
  {
  }
  std::string show() const{
    std::stringstream o;
    o << sym__0___45_9117911789383871612 << " | " << arrToString(sym__0___45_1547112764757372609) << " | " << arrToString(sym__0___45_8663957751614366179) << " | " << arrToString(sym__0__1466641425010216931) << " | " << arrToString(sym__0__3672857626658041553) << " | " << arrToString(sym__0___45_3362440237381592032) << " | " << arrToString(sym__0___45_6631364176934158657);
    return o.str();
  }
  bool operator <(const Record4& otherRec) const{
    return (otherRec.sym__0___45_9117911789383871612 < sym__0___45_9117911789383871612 && (otherRec.sym__0___45_1547112764757372609 < sym__0___45_1547112764757372609 && (otherRec.sym__0___45_8663957751614366179 < sym__0___45_8663957751614366179 && (otherRec.sym__0__1466641425010216931 < sym__0__1466641425010216931 && (otherRec.sym__0__3672857626658041553 < sym__0__3672857626658041553 && (otherRec.sym__0___45_3362440237381592032 < sym__0___45_3362440237381592032 && otherRec.sym__0___45_6631364176934158657 < sym__0___45_6631364176934158657))))));
  }
  bool operator ==(const Record4& otherRec) const{
    return (otherRec.sym__0___45_9117911789383871612 == sym__0___45_9117911789383871612 && (otherRec.sym__0___45_1547112764757372609 == sym__0___45_1547112764757372609 && (otherRec.sym__0___45_8663957751614366179 == sym__0___45_8663957751614366179 && (otherRec.sym__0__1466641425010216931 == sym__0__1466641425010216931 && (otherRec.sym__0__3672857626658041553 == sym__0__3672857626658041553 && (otherRec.sym__0___45_3362440237381592032 == sym__0___45_3362440237381592032 && otherRec.sym__0___45_6631364176934158657 == sym__0___45_6631364176934158657))))));
  }
  bool operator !=(const Record4& otherRec) const{
    return (otherRec.sym__0___45_9117911789383871612 != sym__0___45_9117911789383871612 || (otherRec.sym__0___45_1547112764757372609 != sym__0___45_1547112764757372609 || (otherRec.sym__0___45_8663957751614366179 != sym__0___45_8663957751614366179 || (otherRec.sym__0__1466641425010216931 != sym__0__1466641425010216931 || (otherRec.sym__0__3672857626658041553 != sym__0__3672857626658041553 || (otherRec.sym__0___45_3362440237381592032 != sym__0___45_3362440237381592032 || otherRec.sym__0___45_6631364176934158657 != sym__0___45_6631364176934158657))))));
  }
  unsigned sym__0___45_9117911789383871612;
  fluidb_string<25> sym__0___45_1547112764757372609;
  fluidb_string<40> sym__0___45_8663957751614366179;
  fluidb_string<16> sym__0__1466641425010216931;
  fluidb_string<16> sym__0__3672857626658041553;
  fluidb_string<13> sym__0___45_3362440237381592032;
  fluidb_string<15> sym__0___45_6631364176934158657;
 private:
};


class Record1 {
 public:
  Record1(unsigned __sym__0__9004647469590526899, fluidb_string<18> __sym__0___45_1621348641261898005, fluidb_string<40> __sym__0__614427126981106829, fluidb_string<11> __sym__0___45_2454293820925122065, fluidb_string<15> __sym__0__6553227872838818177, fluidb_string<13> __sym__0___45_4248174812301520048, fluidb_string<15> __sym__0___45_3914904628387332757, fluidb_string<21> __sym__0___45_5446426298209956761, unsigned __sym__0___45_2558673723420522753, int __sym__0___45_3519351712545876895, unsigned __sym__0___45_1754306014800131719, unsigned __sym__0__6212025267607306819, unsigned __sym__0__2772749593389396148, unsigned __sym__0___45_4019035565219397859, fluidb_string<21> __sym__0___45_6819607202635958988, unsigned __sym__0__4920008974061631994, fluidb_string<10> __sym__0___45_8128105244823042823, unsigned __sym__0___45_2374853137558343895, double __sym__0__930686933803596543, unsigned __sym__0__5145129428883827325, double __sym__0__1860202553700236407, unsigned __sym__0___45_20127004494246501, unsigned __sym__0___45_3013783536855820064, double __sym__0___45_288503368240108258, fluidb_string<13> __sym__0___45_2265690738963363690) : sym__0__9004647469590526899(__sym__0__9004647469590526899), sym__0___45_1621348641261898005(__sym__0___45_1621348641261898005), sym__0__614427126981106829(__sym__0__614427126981106829), sym__0___45_2454293820925122065(__sym__0___45_2454293820925122065), sym__0__6553227872838818177(__sym__0__6553227872838818177), sym__0___45_4248174812301520048(__sym__0___45_4248174812301520048), sym__0___45_3914904628387332757(__sym__0___45_3914904628387332757), sym__0___45_5446426298209956761(__sym__0___45_5446426298209956761), sym__0___45_2558673723420522753(__sym__0___45_2558673723420522753), sym__0___45_3519351712545876895(__sym__0___45_3519351712545876895), sym__0___45_1754306014800131719(__sym__0___45_1754306014800131719), sym__0__6212025267607306819(__sym__0__6212025267607306819), sym__0__2772749593389396148(__sym__0__2772749593389396148), sym__0___45_4019035565219397859(__sym__0___45_4019035565219397859), sym__0___45_6819607202635958988(__sym__0___45_6819607202635958988), sym__0__4920008974061631994(__sym__0__4920008974061631994), sym__0___45_8128105244823042823(__sym__0___45_8128105244823042823), sym__0___45_2374853137558343895(__sym__0___45_2374853137558343895), sym__0__930686933803596543(__sym__0__930686933803596543), sym__0__5145129428883827325(__sym__0__5145129428883827325), sym__0__1860202553700236407(__sym__0__1860202553700236407), sym__0___45_20127004494246501(__sym__0___45_20127004494246501), sym__0___45_3013783536855820064(__sym__0___45_3013783536855820064), sym__0___45_288503368240108258(__sym__0___45_288503368240108258), sym__0___45_2265690738963363690(__sym__0___45_2265690738963363690)
  {
  }
  Record1() 
  {
  }
  std::string show() const{
    std::stringstream o;
    o << sym__0__9004647469590526899 << " | " << arrToString(sym__0___45_1621348641261898005) << " | " << arrToString(sym__0__614427126981106829) << " | " << arrToString(sym__0___45_2454293820925122065) << " | " << arrToString(sym__0__6553227872838818177) << " | " << arrToString(sym__0___45_4248174812301520048) << " | " << arrToString(sym__0___45_3914904628387332757) << " | " << arrToString(sym__0___45_5446426298209956761) << " | " << sym__0___45_2558673723420522753 << " | " << sym__0___45_3519351712545876895 << " | " << sym__0___45_1754306014800131719 << " | " << sym__0__6212025267607306819 << " | " << sym__0__2772749593389396148 << " | " << sym__0___45_4019035565219397859 << " | " << arrToString(sym__0___45_6819607202635958988) << " | " << sym__0__4920008974061631994 << " | " << arrToString(sym__0___45_8128105244823042823) << " | " << sym__0___45_2374853137558343895 << " | " << sym__0__930686933803596543 << " | " << sym__0__5145129428883827325 << " | " << sym__0__1860202553700236407 << " | " << sym__0___45_20127004494246501 << " | " << sym__0___45_3013783536855820064 << " | " << sym__0___45_288503368240108258 << " | " << arrToString(sym__0___45_2265690738963363690);
    return o.str();
  }
  bool operator <(const Record1& otherRec) const{
    return (otherRec.sym__0__9004647469590526899 < sym__0__9004647469590526899 && (otherRec.sym__0___45_1621348641261898005 < sym__0___45_1621348641261898005 && (otherRec.sym__0__614427126981106829 < sym__0__614427126981106829 && (otherRec.sym__0___45_2454293820925122065 < sym__0___45_2454293820925122065 && (otherRec.sym__0__6553227872838818177 < sym__0__6553227872838818177 && (otherRec.sym__0___45_4248174812301520048 < sym__0___45_4248174812301520048 && (otherRec.sym__0___45_3914904628387332757 < sym__0___45_3914904628387332757 && (otherRec.sym__0___45_5446426298209956761 < sym__0___45_5446426298209956761 && (otherRec.sym__0___45_2558673723420522753 < sym__0___45_2558673723420522753 && (otherRec.sym__0___45_3519351712545876895 < sym__0___45_3519351712545876895 && (otherRec.sym__0___45_1754306014800131719 < sym__0___45_1754306014800131719 && (otherRec.sym__0__6212025267607306819 < sym__0__6212025267607306819 && (otherRec.sym__0__2772749593389396148 < sym__0__2772749593389396148 && (otherRec.sym__0___45_4019035565219397859 < sym__0___45_4019035565219397859 && (otherRec.sym__0___45_6819607202635958988 < sym__0___45_6819607202635958988 && (otherRec.sym__0__4920008974061631994 < sym__0__4920008974061631994 && (otherRec.sym__0___45_8128105244823042823 < sym__0___45_8128105244823042823 && (otherRec.sym__0___45_2374853137558343895 < sym__0___45_2374853137558343895 && (otherRec.sym__0__930686933803596543 < sym__0__930686933803596543 && (otherRec.sym__0__5145129428883827325 < sym__0__5145129428883827325 && (otherRec.sym__0__1860202553700236407 < sym__0__1860202553700236407 && (otherRec.sym__0___45_20127004494246501 < sym__0___45_20127004494246501 && (otherRec.sym__0___45_3013783536855820064 < sym__0___45_3013783536855820064 && (otherRec.sym__0___45_288503368240108258 < sym__0___45_288503368240108258 && otherRec.sym__0___45_2265690738963363690 < sym__0___45_2265690738963363690))))))))))))))))))))))));
  }
  bool operator ==(const Record1& otherRec) const{
    return (otherRec.sym__0__9004647469590526899 == sym__0__9004647469590526899 && (otherRec.sym__0___45_1621348641261898005 == sym__0___45_1621348641261898005 && (otherRec.sym__0__614427126981106829 == sym__0__614427126981106829 && (otherRec.sym__0___45_2454293820925122065 == sym__0___45_2454293820925122065 && (otherRec.sym__0__6553227872838818177 == sym__0__6553227872838818177 && (otherRec.sym__0___45_4248174812301520048 == sym__0___45_4248174812301520048 && (otherRec.sym__0___45_3914904628387332757 == sym__0___45_3914904628387332757 && (otherRec.sym__0___45_5446426298209956761 == sym__0___45_5446426298209956761 && (otherRec.sym__0___45_2558673723420522753 == sym__0___45_2558673723420522753 && (otherRec.sym__0___45_3519351712545876895 == sym__0___45_3519351712545876895 && (otherRec.sym__0___45_1754306014800131719 == sym__0___45_1754306014800131719 && (otherRec.sym__0__6212025267607306819 == sym__0__6212025267607306819 && (otherRec.sym__0__2772749593389396148 == sym__0__2772749593389396148 && (otherRec.sym__0___45_4019035565219397859 == sym__0___45_4019035565219397859 && (otherRec.sym__0___45_6819607202635958988 == sym__0___45_6819607202635958988 && (otherRec.sym__0__4920008974061631994 == sym__0__4920008974061631994 && (otherRec.sym__0___45_8128105244823042823 == sym__0___45_8128105244823042823 && (otherRec.sym__0___45_2374853137558343895 == sym__0___45_2374853137558343895 && (otherRec.sym__0__930686933803596543 == sym__0__930686933803596543 && (otherRec.sym__0__5145129428883827325 == sym__0__5145129428883827325 && (otherRec.sym__0__1860202553700236407 == sym__0__1860202553700236407 && (otherRec.sym__0___45_20127004494246501 == sym__0___45_20127004494246501 && (otherRec.sym__0___45_3013783536855820064 == sym__0___45_3013783536855820064 && (otherRec.sym__0___45_288503368240108258 == sym__0___45_288503368240108258 && otherRec.sym__0___45_2265690738963363690 == sym__0___45_2265690738963363690))))))))))))))))))))))));
  }
  bool operator !=(const Record1& otherRec) const{
    return (otherRec.sym__0__9004647469590526899 != sym__0__9004647469590526899 || (otherRec.sym__0___45_1621348641261898005 != sym__0___45_1621348641261898005 || (otherRec.sym__0__614427126981106829 != sym__0__614427126981106829 || (otherRec.sym__0___45_2454293820925122065 != sym__0___45_2454293820925122065 || (otherRec.sym__0__6553227872838818177 != sym__0__6553227872838818177 || (otherRec.sym__0___45_4248174812301520048 != sym__0___45_4248174812301520048 || (otherRec.sym__0___45_3914904628387332757 != sym__0___45_3914904628387332757 || (otherRec.sym__0___45_5446426298209956761 != sym__0___45_5446426298209956761 || (otherRec.sym__0___45_2558673723420522753 != sym__0___45_2558673723420522753 || (otherRec.sym__0___45_3519351712545876895 != sym__0___45_3519351712545876895 || (otherRec.sym__0___45_1754306014800131719 != sym__0___45_1754306014800131719 || (otherRec.sym__0__6212025267607306819 != sym__0__6212025267607306819 || (otherRec.sym__0__2772749593389396148 != sym__0__2772749593389396148 || (otherRec.sym__0___45_4019035565219397859 != sym__0___45_4019035565219397859 || (otherRec.sym__0___45_6819607202635958988 != sym__0___45_6819607202635958988 || (otherRec.sym__0__4920008974061631994 != sym__0__4920008974061631994 || (otherRec.sym__0___45_8128105244823042823 != sym__0___45_8128105244823042823 || (otherRec.sym__0___45_2374853137558343895 != sym__0___45_2374853137558343895 || (otherRec.sym__0__930686933803596543 != sym__0__930686933803596543 || (otherRec.sym__0__5145129428883827325 != sym__0__5145129428883827325 || (otherRec.sym__0__1860202553700236407 != sym__0__1860202553700236407 || (otherRec.sym__0___45_20127004494246501 != sym__0___45_20127004494246501 || (otherRec.sym__0___45_3013783536855820064 != sym__0___45_3013783536855820064 || (otherRec.sym__0___45_288503368240108258 != sym__0___45_288503368240108258 || otherRec.sym__0___45_2265690738963363690 != sym__0___45_2265690738963363690))))))))))))))))))))))));
  }
  unsigned sym__0__9004647469590526899;
  fluidb_string<18> sym__0___45_1621348641261898005;
  fluidb_string<40> sym__0__614427126981106829;
  fluidb_string<11> sym__0___45_2454293820925122065;
  fluidb_string<15> sym__0__6553227872838818177;
  fluidb_string<13> sym__0___45_4248174812301520048;
  fluidb_string<15> sym__0___45_3914904628387332757;
  fluidb_string<21> sym__0___45_5446426298209956761;
  unsigned sym__0___45_2558673723420522753;
  int sym__0___45_3519351712545876895;
  unsigned sym__0___45_1754306014800131719;
  unsigned sym__0__6212025267607306819;
  unsigned sym__0__2772749593389396148;
  unsigned sym__0___45_4019035565219397859;
  fluidb_string<21> sym__0___45_6819607202635958988;
  unsigned sym__0__4920008974061631994;
  fluidb_string<10> sym__0___45_8128105244823042823;
  unsigned sym__0___45_2374853137558343895;
  double sym__0__930686933803596543;
  unsigned sym__0__5145129428883827325;
  double sym__0__1860202553700236407;
  unsigned sym__0___45_20127004494246501;
  unsigned sym__0___45_3013783536855820064;
  double sym__0___45_288503368240108258;
  fluidb_string<13> sym__0___45_2265690738963363690;
 private:
};


class CallableClass54 {
 public:
  Record51 operator()(const Record45& record53) {
    return Record51(record53.sym__0___45_2114395819171341319, record53.sym__0__8560746496208341995);
  }
  typedef Record51 Codomain;
  typedef Record45 Domain0;
 private:
};


class CallableClass37 {
 public:
  Record36 operator()(const Record34& record32, const Record35& record33) {
    return Record36(record32.sym__0__1700144450823265023, record32.sym__0__642977477037249040, record32.sym__0___45_4128377972278795822, record32.sym__0___45_5088627304821687252, record32.sym__0___45_4948625537612330786, record32.sym__0___45_9194700948435084701, record32.sym__0___45_2335925802980201584, record32.sym__0__8952961796666569484, record32.sym__0___45_764958528451264714, record32.sym__0___45_1817156327375219010, record32.sym__0___45_2837638767689209768, record32.sym__0___45_2981394887932269865, record32.sym__0___45_3207638480786881318, record32.sym__0___45_2706668038305292969, record32.sym__0___45_5698288034649371459, record32.sym__0___45_4860327901106131906, record32.sym__0__4990602831923261550, record32.sym__0__1941197998689785612, record32.sym__0__8920978217467339962, record32.sym__0__2290947992840979092, record32.sym__0__7968803792053807648, record32.sym__0___45_648214588708582661, record32.sym__0__5240005983315163865, record32.sym__0__8676547963641831009, record32.sym__0__7098358135655077312, record32.sym__0___45_3236172823121798352, record32.sym__0__209296758379513054, record32.sym__0__990102210371531505, record32.sym__0__6731021262741660999, record32.sym__0__43383544609224961, record32.sym__0___45_1451536826369255544, record32.sym__0___45_3626731045154418301, record32.sym__0__6266038698953764136, record32.sym__0___45_3178257250902948896, record32.sym__0___45_1707432467122892938, record32.sym__0__6803837608073687569, record32.sym__0__3019318186977723140, record32.sym__0___45_3182244727465674548, record32.sym__0__6970778392668530317, record32.sym__0__1291675427782851845, record32.sym__0___45_7095393819436573425, record33.sym__0__7178003535380331304, record33.sym__0___45_7020257275696364520, record33.sym__0___45_6307179734719967033, record33.sym__0__4568304886257136061, record33.sym__0___45_6291097039630000265, record33.sym__0__551327770031967739, record33.sym__0__3827696365022297353, record33.sym__0___45_1779543743759935870, record33.sym__0__3752090135924368535);
  }
  typedef Record36 Codomain;
  typedef Record34 Domain0;
  typedef Record35 Domain1;
 private:
};


class CallableClass5 {
 public:
  Record4 operator()(const Record2& record0) {
    return Record4(record0.sym__0___45_1023382914117654422, record0.sym__0__6224010339127806049, record0.sym__0___45_8804639047977952305, record0.sym__0__8926375957639307021, record0.sym__0__5153200798583684363, record0.sym__0___45_794494697990656050, record0.sym__0__7308161412148661473);
  }
  typedef Record4 Codomain;
  typedef Record2 Domain0;
 private:
};


class CallableClass25 {
 public:
  Record24 operator()(const Record15& record22, const Record4& record23) {
    return Record24(record23.sym__0___45_9117911789383871612, record23.sym__0___45_1547112764757372609, record23.sym__0___45_8663957751614366179, record23.sym__0__1466641425010216931, record23.sym__0__3672857626658041553, record23.sym__0___45_3362440237381592032, record23.sym__0___45_6631364176934158657, record22.sym__0__5341165382232817970, record22.sym__0__5806605655987033032, record22.sym__0___45_6623407408063066704, record22.sym__0___45_1670026162273154778, record22.sym__0__2289386367904588797, record22.sym__0__8025829587274267860, record22.sym__0__454237065112775549, record22.sym__0__608217599158647375, record22.sym__0__4347069016709593136, record22.sym__0__4553650632168714688, record22.sym__0__586349573025064242, record22.sym__0__144523031940788660, record22.sym__0__2942207309637238010, record22.sym__0__1782085603058736686, record22.sym__0__3001704397998344329, record22.sym__0___45_2662583778072919661, record22.sym__0__8853539013824041307, record22.sym__0___45_3961143035674407474, record22.sym__0___45_6251899802584687138, record22.sym__0__7895704682370371792, record22.sym__0___45_4486276699369081973, record22.sym__0__1119005997298974989, record22.sym__0__3623076037790620667, record22.sym__0___45_369211045765545994, record22.sym__0___45_2252349090140989903, record22.sym__0___45_6519715028980934506, record22.sym__0__6988144115678218478, record22.sym__0__1168585672581702408, record22.sym__0___45_1566345155802505557, record22.sym__0___45_3812637469976556790, record22.sym__0___45_2398128448016703502, record22.sym__0__5574729781191990975, record22.sym__0___45_5962954882039921225, record22.sym__0___45_7276734914968453131);
  }
  typedef Record24 Codomain;
  typedef Record15 Domain0;
  typedef Record4 Domain1;
 private:
};


class CallableClass16 {
 public:
  Record15 operator()(const Record14& record12, const Record10& record13) {
    return Record15(record12.sym__0__2037864888707786451, record12.sym__0__8533656712666151747, record12.sym__0__646314041574508429, record12.sym__0__6064137978327902054, record12.sym__0__3754157776500852496, record12.sym__0__6284345160241949046, record12.sym__0___45_773692805971570325, record12.sym__0___45_8399474032083007524, record12.sym__0___45_2038947427357444789, record12.sym__0__6071994954612827827, record12.sym__0__7742515703067448213, record12.sym__0__5201219213304227654, record12.sym__0___45_5896625796158057241, record12.sym__0___45_1108504872221226081, record12.sym__0__1055103969674359346, record12.sym__0__9115626546918942554, record12.sym__0___45_6850413444013389848, record13.sym__0___45_7574074018531922998, record13.sym__0__1125464382786937920, record13.sym__0___45_8257174981563598792, record13.sym__0__957746932829998382, record13.sym__0__934137931677987637, record13.sym__0___45_7332894783442362324, record13.sym__0__8974811218372806325, record13.sym__0___45_5217562530132451785, record13.sym__0__7851147553396318904, record13.sym__0___45_4975505511391694456, record13.sym__0___45_7249986409969561654, record13.sym__0__4671626969570181580, record13.sym__0___45_3666121704283105054, record13.sym__0__5495011930072844518, record13.sym__0___45_4423447118092167055, record13.sym__0___45_1608082021099887893, record13.sym__0__1584187396639360899);
  }
  typedef Record15 Codomain;
  typedef Record14 Domain0;
  typedef Record10 Domain1;
 private:
};


class CallableClass21 {
 public:
  Record17 operator()(const Record10& record20) {
    return Record17(record20.sym__0___45_7332894783442362324);
  }
  typedef Record17 Codomain;
  typedef Record10 Domain0;
 private:
};


class CallableClass31 {
 public:
  bool operator()(const Record24& record30) {
    return like(record30.sym__0___45_52536403880094569, "ASIA");
  }
  typedef bool Codomain;
  typedef Record24 Domain0;
 private:
};


class CallableClass29 {
 public:
  Record17 operator()(const Record4& record28) {
    return Record17(record28.sym__0___45_9117911789383871612);
  }
  typedef Record17 Codomain;
  typedef Record4 Domain0;
 private:
};


class CallableClass27 {
 public:
  Record17 operator()(const Record15& record26) {
    return Record17(record26.sym__0__2289386367904588797);
  }
  typedef Record17 Codomain;
  typedef Record15 Domain0;
 private:
};


class CallableClass43 {
 public:
  bool operator()(const Record36& record42) {
    return (("MFGR#2221" <= record42.sym__0___45_4574956228592531724) && (record42.sym__0___45_4574956228592531724 <= "MFGR#2228"));
  }
  typedef bool Codomain;
  typedef Record36 Domain0;
 private:
};


class CallableClass52 {
 public:
  Record51 operator()(const Record47& record44) {
    return Record51(record44.sym__0__7928058280817873233, record44.sym__0__8808022150768814575);
  }
  typedef Record51 Codomain;
  typedef Record47 Domain0;
 private:
};


class CallableClass11 {
 public:
  Record10 operator()(const Record8& record6) {
    return Record10(record6.sym__0__7588001997570016652, record6.sym__0___45_4747443848713997322, record6.sym__0___45_3257188284918960498, record6.sym__0__1617172947989036440, record6.sym__0___45_810220525799073153, record6.sym__0__8132341549271366762, record6.sym__0__1394287910975083263, record6.sym__0__5644261439804640685, record6.sym__0__9057335116627787790, record6.sym__0__2339428003903657470, record6.sym__0__3371773490934440332, record6.sym__0___45_1286955585961260406, record6.sym__0___45_1657469713282332988, record6.sym__0__816781160548213904, record6.sym__0__8401801716519894867, record6.sym__0__5709933202258624457, record6.sym__0__7900257115361061889);
  }
  typedef Record10 Codomain;
  typedef Record8 Domain0;
 private:
};


class CallableClass50 {
 public:
  Record45 operator()(const Record47& record44) {
    return Record45(vAggrSum46(record44.sym__0___45_1874278765651523026), vAggrFirst48(record44.sym__0__7928058280817873233), vAggrFirst49(record44.sym__0__8808022150768814575));
  }
  typedef Record45 Codomain;
  typedef Record47 Domain0;
 private:
  AggrSum<unsigned> vAggrSum46;
  AggrFirst<unsigned> vAggrFirst48;
  AggrFirst<fluidb_string<10>> vAggrFirst49;
};


class CallableClass9 {
 public:
  Record7 operator()(const Record8& record6) {
    return Record7(record6.sym__0___45_8202918452351256080, record6.sym__0__3217182456213118816, record6.sym__0___45_587373445859874706, record6.sym__0___45_8346128157561074223, record6.sym__0__2979561800187053807, record6.sym__0___45_899573490466067231, record6.sym__0___45_2706395517471750200, record6.sym__0___45_6067709637706619093, record6.sym__0__1141311422513456040, record6.sym__0___45_5223888065355534256, record6.sym__0__2672047382496516406, record6.sym__0__4932263286160334513, record6.sym__0__4463721534751519028, record6.sym__0___45_4864066414314726068, record6.sym__0__937958105294580029, record6.sym__0___45_1982623509189166171, record6.sym__0__4762673478997720679);
  }
  typedef Record7 Codomain;
  typedef Record8 Domain0;
 private:
};


class CallableClass19 {
 public:
  Record17 operator()(const Record14& record18) {
    return Record17(record18.sym__0__2037864888707786451);
  }
  typedef Record17 Codomain;
  typedef Record14 Domain0;
 private:
};


class CallableClass39 {
 public:
  Record17 operator()(const Record34& record38) {
    return Record17(record38.sym__0___45_2837638767689209768);
  }
  typedef Record17 Codomain;
  typedef Record34 Domain0;
 private:
};


class CallableClass41 {
 public:
  Record17 operator()(const Record35& record40) {
    return Record17(record40.sym__0__7178003535380331304);
  }
  typedef Record17 Codomain;
  typedef Record35 Domain0;
 private:
};


class CallableClass3 {
 public:
  Record1 operator()(const Record2& record0) {
    return Record1(record0.sym__0__2833764152503888409, record0.sym__0__6938021140779677761, record0.sym__0___45_4700201805806600089, record0.sym__0__3362667619044778557, record0.sym__0__2679827580767046755, record0.sym__0___45_4186304031693649930, record0.sym__0__8596564865999609793, record0.sym__0___45_1671053890158572571, record0.sym__0__2256924431415148013, record0.sym__0__347872876320563651, record0.sym__0___45_7666447219434903317, record0.sym__0__1272718151591622153, record0.sym__0__4584633926271658914, record0.sym__0___45_4610773208091240233, record0.sym__0___45_5766638191766435038, record0.sym__0___45_5211223358204127380, record0.sym__0__8435431464460332395, record0.sym__0___45_6450191115912157957, record0.sym__0__7921907673157171693, record0.sym__0___45_1699747741436218441, record0.sym__0___45_2985562469054236715, record0.sym__0__3746029949899912401, record0.sym__0___45_989155948099215770, record0.sym__0___45_1667761180508152936, record0.sym__0__5854462121170882944);
  }
  typedef Record1 Codomain;
  typedef Record2 Domain0;
 private:
};






int main() {
  // ReverseTrigger: (Just 
  //   (Left 
  //     [
  //      QJoin 
  //         (P0 
  //           (R2 REq 
  //               (R0 (E0 (ESym "lo_suppkey"))) 
  //               (R0 (E0 (ESym "s_suppkey")))))
  std::cout << "ReverseTrigger: (Just \n  (Left \n    [\n     QJoin \n        (P0 \n          (R2 REq \n              (R0 (E0 (ESym \"lo_suppkey\"))) \n              (R0 (E0 (ESym \"s_suppkey\")))))\n    ]))" << std::endl;
  {
    auto operation = mkUnJoin<CallableClass3, CallableClass5>(Just("/tmp/fluidb_store/data306.dat"), Nothing(), Just("/tmp/fluidb_store/data307.dat"), Nothing(), Just("/tmp/fluidb_store/data3.dat"));
    operation.run();
    operation.print_output(10);
  }
  // Delete: (Q1 
  //   (QSort [E0 (ESym "d_year"),E0 (ESym "p_brand1")]) 
  //   (Q1 
  //     (QGroup 
  //       [(ESym "tmpSym0",E0 (NAggr AggrSum (E0 (ESym "lo_revenue")))),
  //        (ESym "d_year",E0 (NAggr AggrFirst (E0 (ESym "d_year")))),
  //        (ESym "p_brand1",E0 (NAggr AggrFirst (E0 (ESym "p_brand1"))))] 
  //       [E0 (ESym "d_year"),E0 (ESym "p_brand1")]) 
  //     (S 
  //       (P2 
  //         PAnd 
  //         (P0 
  //           (R2 RLike 
  //               (R0 (E0 (ESym "s_region"))) 
  //               (R0 (E0 (EString "AMERICA"))))) 
  //         (P0 
  //           (R2 RLike 
  //               (R0 (E0 (ESym "p_category"))) 
  //               (R0 (E0 (EString "MFGR#12")))))) 
  //       (J 
  //         (P0 
  //           (R2 REq 
  //               (R0 (E0 (ESym "lo_partkey"))) 
  //               (R0 (E0 (ESym "p_partkey"))))) 
  //         (J 
  //           (P0 
  //             (R2 REq 
  //                 (R0 (E0 (ESym "lo_orderdate"))) 
  //                 (R0 (E0 (ESym "d_datekey"))))) 
  //           (J 
  //             (P0 
  //               (R2 REq 
  //                   (R0 (E0 (ESym "lo_suppkey"))) 
  //                   (R0 (E0 (ESym "s_suppkey"))))) 
  //             (Q0 (TSymbol "supplier")) 
  //             (Q0 (TSymbol "lineorder"))) 
  //           (Q0 (TSymbol "date"))) 
  std::cout << "Delete: (Q1 \n  (QSort [E0 (ESym \"d_year\"),E0 (ESym \"p_brand1\")]) \n  (Q1 \n    (QGroup \n      [(ESym \"tmpSym0\",E0 (NAggr AggrSum (E0 (ESym \"lo_revenue\")))),\n       (ESym \"d_year\",E0 (NAggr AggrFirst (E0 (ESym \"d_year\")))),\n       (ESym \"p_brand1\",E0 (NAggr AggrFirst (E0 (ESym \"p_brand1\"))))] \n      [E0 (ESym \"d_year\"),E0 (ESym \"p_brand1\")]) \n    (S \n      (P2 \n        PAnd \n        (P0 \n          (R2 RLike \n              (R0 (E0 (ESym \"s_region\"))) \n              (R0 (E0 (EString \"AMERICA\"))))) \n        (P0 \n          (R2 RLike \n              (R0 (E0 (ESym \"p_category\"))) \n              (R0 (E0 (EString \"MFGR#12\")))))) \n      (J \n        (P0 \n          (R2 REq \n              (R0 (E0 (ESym \"lo_partkey\"))) \n              (R0 (E0 (ESym \"p_partkey\"))))) \n        (J \n          (P0 \n            (R2 REq \n                (R0 (E0 (ESym \"lo_orderdate\"))) \n                (R0 (E0 (ESym \"d_datekey\"))))) \n          (J \n            (P0 \n              (R2 REq \n                  (R0 (E0 (ESym \"lo_suppkey\"))) \n                  (R0 (E0 (ESym \"s_suppkey\"))))) \n            (Q0 (TSymbol \"supplier\")) \n            (Q0 (TSymbol \"lineorder\"))) \n          (Q0 (TSymbol \"date\"))) \n        (Q0 (TSymbol \"part\"))))))" << std::endl;
  deleteFile("/tmp/fluidb_store/data91.dat");
  // Delete: (Q1 
  //   (QGroup 
  //     [(ESym "tmpSym0",E0 (NAggr AggrSum (E0 (ESym "lo_revenue")))),
  //      (ESym "d_year",E0 (NAggr AggrFirst (E0 (ESym "d_year")))),
  //      (ESym "p_brand1",E0 (NAggr AggrFirst (E0 (ESym "p_brand1"))))] 
  //     [E0 (ESym "d_year"),E0 (ESym "p_brand1")]) 
  //   (S 
  //     (P2 
  //       PAnd 
  //       (P0 
  //         (R2 RLike 
  //             (R0 (E0 (ESym "s_region"))) 
  //             (R0 (E0 (EString "AMERICA"))))) 
  //       (P0 
  //         (R2 RLike 
  //             (R0 (E0 (ESym "p_category"))) 
  //             (R0 (E0 (EString "MFGR#12")))))) 
  //     (J 
  //       (P0 
  //         (R2 REq 
  //             (R0 (E0 (ESym "lo_partkey"))) 
  //             (R0 (E0 (ESym "p_partkey"))))) 
  //       (J 
  //         (P0 
  //           (R2 REq 
  //               (R0 (E0 (ESym "lo_orderdate"))) 
  //               (R0 (E0 (ESym "d_datekey"))))) 
  //         (J 
  //           (P0 
  //             (R2 REq 
  //                 (R0 (E0 (ESym "lo_suppkey"))) 
  //                 (R0 (E0 (ESym "s_suppkey"))))) 
  //           (Q0 (TSymbol "supplier")) 
  //           (Q0 (TSymbol "lineorder"))) 
  //         (Q0 (TSymbol "date"))) 
  std::cout << "Delete: (Q1 \n  (QGroup \n    [(ESym \"tmpSym0\",E0 (NAggr AggrSum (E0 (ESym \"lo_revenue\")))),\n     (ESym \"d_year\",E0 (NAggr AggrFirst (E0 (ESym \"d_year\")))),\n     (ESym \"p_brand1\",E0 (NAggr AggrFirst (E0 (ESym \"p_brand1\"))))] \n    [E0 (ESym \"d_year\"),E0 (ESym \"p_brand1\")]) \n  (S \n    (P2 \n      PAnd \n      (P0 \n        (R2 RLike \n            (R0 (E0 (ESym \"s_region\"))) \n            (R0 (E0 (EString \"AMERICA\"))))) \n      (P0 \n        (R2 RLike \n            (R0 (E0 (ESym \"p_category\"))) \n            (R0 (E0 (EString \"MFGR#12\")))))) \n    (J \n      (P0 \n        (R2 REq \n            (R0 (E0 (ESym \"lo_partkey\"))) \n            (R0 (E0 (ESym \"p_partkey\"))))) \n      (J \n        (P0 \n          (R2 REq \n              (R0 (E0 (ESym \"lo_orderdate\"))) \n              (R0 (E0 (ESym \"d_datekey\"))))) \n        (J \n          (P0 \n            (R2 REq \n                (R0 (E0 (ESym \"lo_suppkey\"))) \n                (R0 (E0 (ESym \"s_suppkey\"))))) \n          (Q0 (TSymbol \"supplier\")) \n          (Q0 (TSymbol \"lineorder\"))) \n        (Q0 (TSymbol \"date\"))) \n      (Q0 (TSymbol \"part\")))))" << std::endl;
  deleteFile("/tmp/fluidb_store/data90.dat");
  // Delete: (S 
  //   (P2 
  //     PAnd 
  //     (P0 
  //       (R2 RLike 
  //           (R0 (E0 (ESym "s_region"))) 
  //           (R0 (E0 (EString "AMERICA"))))) 
  //     (P0 
  //       (R2 RLike 
  //           (R0 (E0 (ESym "p_category"))) 
  //           (R0 (E0 (EString "MFGR#12")))))) 
  //   (J 
  //     (P0 
  //       (R2 REq 
  //           (R0 (E0 (ESym "lo_partkey"))) 
  //           (R0 (E0 (ESym "p_partkey"))))) 
  //     (J 
  //       (P0 
  //         (R2 REq 
  //             (R0 (E0 (ESym "lo_orderdate"))) 
  //             (R0 (E0 (ESym "d_datekey"))))) 
  //       (J 
  //         (P0 
  //           (R2 REq 
  //               (R0 (E0 (ESym "lo_suppkey"))) 
  //               (R0 (E0 (ESym "s_suppkey"))))) 
  //         (Q0 (TSymbol "supplier")) 
  //         (Q0 (TSymbol "lineorder"))) 
  //       (Q0 (TSymbol "date"))) 
  std::cout << "Delete: (S \n  (P2 \n    PAnd \n    (P0 \n      (R2 RLike \n          (R0 (E0 (ESym \"s_region\"))) \n          (R0 (E0 (EString \"AMERICA\"))))) \n    (P0 \n      (R2 RLike \n          (R0 (E0 (ESym \"p_category\"))) \n          (R0 (E0 (EString \"MFGR#12\")))))) \n  (J \n    (P0 \n      (R2 REq \n          (R0 (E0 (ESym \"lo_partkey\"))) \n          (R0 (E0 (ESym \"p_partkey\"))))) \n    (J \n      (P0 \n        (R2 REq \n            (R0 (E0 (ESym \"lo_orderdate\"))) \n            (R0 (E0 (ESym \"d_datekey\"))))) \n      (J \n        (P0 \n          (R2 REq \n              (R0 (E0 (ESym \"lo_suppkey\"))) \n              (R0 (E0 (ESym \"s_suppkey\"))))) \n        (Q0 (TSymbol \"supplier\")) \n        (Q0 (TSymbol \"lineorder\"))) \n      (Q0 (TSymbol \"date\"))) \n    (Q0 (TSymbol \"part\"))))" << std::endl;
  deleteFile("/tmp/fluidb_store/data50.dat");
  // ReverseTrigger: (Just 
  //   (Left 
  //     [
  //      QJoin 
  //         (P0 
  //           (R2 REq 
  //               (R0 (E0 (ESym "lo_orderdate"))) 
  //               (R0 (E0 (ESym "d_datekey")))))
  std::cout << "ReverseTrigger: (Just \n  (Left \n    [\n     QJoin \n        (P0 \n          (R2 REq \n              (R0 (E0 (ESym \"lo_orderdate\"))) \n              (R0 (E0 (ESym \"d_datekey\")))))\n    ]))" << std::endl;
  {
    auto operation = mkUnJoin<CallableClass9, CallableClass11>(Just("/tmp/fluidb_store/data28.dat"), Nothing(), Just("/tmp/fluidb_store/data29.dat"), Nothing(), Just("/tmp/fluidb_store/data0.dat"));
    operation.run();
    operation.print_output(10);
  }
  // Delete: (Q2 
  //   (QLeftAntijoin 
  //     (P0 
  //       (R2 REq 
  //           (R0 (E0 (ESym "lo_partkey"))) 
  //           (R0 (E0 (ESym "p_partkey")))))) 
  //   (J 
  //     (P0 
  //       (R2 REq 
  //           (R0 (E0 (ESym "lo_orderdate"))) 
  //           (R0 (E0 (ESym "d_datekey"))))) 
  //     (S 
  //       (P0 
  //         (R2 RLike 
  //             (R0 (E0 (ESym "s_region"))) 
  //             (R0 (E0 (EString "AMERICA"))))) 
  //       (J 
  //         (P0 
  //           (R2 REq 
  //               (R0 (E0 (ESym "lo_suppkey"))) 
  //               (R0 (E0 (ESym "s_suppkey"))))) 
  //         (Q0 (TSymbol "supplier")) 
  //         (Q0 (TSymbol "lineorder")))) 
  //     (Q0 (TSymbol "date"))) 
  std::cout << "Delete: (Q2 \n  (QLeftAntijoin \n    (P0 \n      (R2 REq \n          (R0 (E0 (ESym \"lo_partkey\"))) \n          (R0 (E0 (ESym \"p_partkey\")))))) \n  (J \n    (P0 \n      (R2 REq \n          (R0 (E0 (ESym \"lo_orderdate\"))) \n          (R0 (E0 (ESym \"d_datekey\"))))) \n    (S \n      (P0 \n        (R2 RLike \n            (R0 (E0 (ESym \"s_region\"))) \n            (R0 (E0 (EString \"AMERICA\"))))) \n      (J \n        (P0 \n          (R2 REq \n              (R0 (E0 (ESym \"lo_suppkey\"))) \n              (R0 (E0 (ESym \"s_suppkey\"))))) \n        (Q0 (TSymbol \"supplier\")) \n        (Q0 (TSymbol \"lineorder\")))) \n    (Q0 (TSymbol \"date\"))) \n  (Q0 (TSymbol \"part\")))" << std::endl;
  deleteFile("/tmp/fluidb_store/data66.dat");
  // Delete: (Q2 
  //   (QRightAntijoin 
  //     (P0 
  //       (R2 REq 
  //           (R0 (E0 (ESym "lo_partkey"))) 
  //           (R0 (E0 (ESym "p_partkey")))))) 
  //   (J 
  //     (P0 
  //       (R2 REq 
  //           (R0 (E0 (ESym "lo_orderdate"))) 
  //           (R0 (E0 (ESym "d_datekey"))))) 
  //     (S 
  //       (P0 
  //         (R2 RLike 
  //             (R0 (E0 (ESym "s_region"))) 
  //             (R0 (E0 (EString "AMERICA"))))) 
  //       (J 
  //         (P0 
  //           (R2 REq 
  //               (R0 (E0 (ESym "lo_suppkey"))) 
  //               (R0 (E0 (ESym "s_suppkey"))))) 
  //         (Q0 (TSymbol "supplier")) 
  //         (Q0 (TSymbol "lineorder")))) 
  //     (Q0 (TSymbol "date"))) 
  std::cout << "Delete: (Q2 \n  (QRightAntijoin \n    (P0 \n      (R2 REq \n          (R0 (E0 (ESym \"lo_partkey\"))) \n          (R0 (E0 (ESym \"p_partkey\")))))) \n  (J \n    (P0 \n      (R2 REq \n          (R0 (E0 (ESym \"lo_orderdate\"))) \n          (R0 (E0 (ESym \"d_datekey\"))))) \n    (S \n      (P0 \n        (R2 RLike \n            (R0 (E0 (ESym \"s_region\"))) \n            (R0 (E0 (EString \"AMERICA\"))))) \n      (J \n        (P0 \n          (R2 REq \n              (R0 (E0 (ESym \"lo_suppkey\"))) \n              (R0 (E0 (ESym \"s_suppkey\"))))) \n        (Q0 (TSymbol \"supplier\")) \n        (Q0 (TSymbol \"lineorder\")))) \n    (Q0 (TSymbol \"date\"))) \n  (Q0 (TSymbol \"part\")))" << std::endl;
  deleteFile("/tmp/fluidb_store/data68.dat");
  // Delete: (S 
  //   (P1 
  //     PNot 
  //     (P0 
  //       (R2 RLike 
  //           (R0 (E0 (ESym "p_category"))) 
  //           (R0 (E0 (EString "MFGR#12")))))) 
  //   (J 
  //     (P0 
  //       (R2 REq 
  //           (R0 (E0 (ESym "lo_partkey"))) 
  //           (R0 (E0 (ESym "p_partkey"))))) 
  //     (S 
  //       (P0 
  //         (R2 RLike 
  //             (R0 (E0 (ESym "s_region"))) 
  //             (R0 (E0 (EString "AMERICA"))))) 
  //       (J 
  //         (P0 
  //           (R2 REq 
  //               (R0 (E0 (ESym "lo_orderdate"))) 
  //               (R0 (E0 (ESym "d_datekey"))))) 
  //         (J 
  //           (P0 
  //             (R2 REq 
  //                 (R0 (E0 (ESym "lo_suppkey"))) 
  //                 (R0 (E0 (ESym "s_suppkey"))))) 
  //           (Q0 (TSymbol "supplier")) 
  //           (Q0 (TSymbol "lineorder"))) 
  //         (Q0 (TSymbol "date")))) 
  std::cout << "Delete: (S \n  (P1 \n    PNot \n    (P0 \n      (R2 RLike \n          (R0 (E0 (ESym \"p_category\"))) \n          (R0 (E0 (EString \"MFGR#12\")))))) \n  (J \n    (P0 \n      (R2 REq \n          (R0 (E0 (ESym \"lo_partkey\"))) \n          (R0 (E0 (ESym \"p_partkey\"))))) \n    (S \n      (P0 \n        (R2 RLike \n            (R0 (E0 (ESym \"s_region\"))) \n            (R0 (E0 (EString \"AMERICA\"))))) \n      (J \n        (P0 \n          (R2 REq \n              (R0 (E0 (ESym \"lo_orderdate\"))) \n              (R0 (E0 (ESym \"d_datekey\"))))) \n        (J \n          (P0 \n            (R2 REq \n                (R0 (E0 (ESym \"lo_suppkey\"))) \n                (R0 (E0 (ESym \"s_suppkey\"))))) \n          (Q0 (TSymbol \"supplier\")) \n          (Q0 (TSymbol \"lineorder\"))) \n        (Q0 (TSymbol \"date\")))) \n    (Q0 (TSymbol \"part\"))))" << std::endl;
  deleteFile("/tmp/fluidb_store/data71.dat");
  // ForwardTrigger: (Just 
  //   (Left 
  //     [
  //      QJoin 
  //         (P0 
  //           (R2 REq 
  //               (R0 (E0 (ESym "lo_orderdate"))) 
  //               (R0 (E0 (ESym "d_datekey")))))
  std::cout << "ForwardTrigger: (Just \n  (Left \n    [\n     QJoin \n        (P0 \n          (R2 REq \n              (R0 (E0 (ESym \"lo_orderdate\"))) \n              (R0 (E0 (ESym \"d_datekey\")))))\n    ]))" << std::endl;
  {
    auto operation = mkEquiJoin<CallableClass19, CallableClass21, CallableClass16>(Just<const std::string>("/tmp/fluidb_store/data149.dat"), Just<const std::string>("/tmp/fluidb_store/data148.dat"), Just<const std::string>("/tmp/fluidb_store/data150.dat"), "/tmp/fluidb_store/data1.dat", "/tmp/fluidb_store/data0.dat");
    operation.run();
    operation.print_output(10);
  }
  // Delete: (S 
  //   (P0 
  //     (R2 RLike (R0 (E0 (ESym "s_region"))) (R0 (E0 (EString "AMERICA"))))) 
  //   (J 
  //     (P0 
  //       (R2 REq 
  //           (R0 (E0 (ESym "lo_orderdate"))) 
  //           (R0 (E0 (ESym "d_datekey"))))) 
  //     (J 
  //       (P0 
  //         (R2 REq 
  //             (R0 (E0 (ESym "lo_suppkey"))) 
  //             (R0 (E0 (ESym "s_suppkey"))))) 
  //       (Q0 (TSymbol "supplier")) 
  //       (Q0 (TSymbol "lineorder"))) 
  std::cout << "Delete: (S \n  (P0 \n    (R2 RLike (R0 (E0 (ESym \"s_region\"))) (R0 (E0 (EString \"AMERICA\"))))) \n  (J \n    (P0 \n      (R2 REq \n          (R0 (E0 (ESym \"lo_orderdate\"))) \n          (R0 (E0 (ESym \"d_datekey\"))))) \n    (J \n      (P0 \n        (R2 REq \n            (R0 (E0 (ESym \"lo_suppkey\"))) \n            (R0 (E0 (ESym \"s_suppkey\"))))) \n      (Q0 (TSymbol \"supplier\")) \n      (Q0 (TSymbol \"lineorder\"))) \n    (Q0 (TSymbol \"date\"))))" << std::endl;
  deleteFile("/tmp/fluidb_store/data52.dat");
  // Delete: (J 
  //   (P0 
  //     (R2 REq (R0 (E0 (ESym "lo_partkey"))) (R0 (E0 (ESym "p_partkey"))))) 
  //   (J 
  //     (P0 
  //       (R2 REq 
  //           (R0 (E0 (ESym "lo_orderdate"))) 
  //           (R0 (E0 (ESym "d_datekey"))))) 
  //     (S 
  //       (P0 
  //         (R2 RLike 
  //             (R0 (E0 (ESym "s_region"))) 
  //             (R0 (E0 (EString "AMERICA"))))) 
  //       (J 
  //         (P0 
  //           (R2 REq 
  //               (R0 (E0 (ESym "lo_suppkey"))) 
  //               (R0 (E0 (ESym "s_suppkey"))))) 
  //         (Q0 (TSymbol "supplier")) 
  //         (Q0 (TSymbol "lineorder")))) 
  //     (Q0 (TSymbol "date"))) 
  std::cout << "Delete: (J \n  (P0 \n    (R2 REq (R0 (E0 (ESym \"lo_partkey\"))) (R0 (E0 (ESym \"p_partkey\"))))) \n  (J \n    (P0 \n      (R2 REq \n          (R0 (E0 (ESym \"lo_orderdate\"))) \n          (R0 (E0 (ESym \"d_datekey\"))))) \n    (S \n      (P0 \n        (R2 RLike \n            (R0 (E0 (ESym \"s_region\"))) \n            (R0 (E0 (EString \"AMERICA\"))))) \n      (J \n        (P0 \n          (R2 REq \n              (R0 (E0 (ESym \"lo_suppkey\"))) \n              (R0 (E0 (ESym \"s_suppkey\"))))) \n        (Q0 (TSymbol \"supplier\")) \n        (Q0 (TSymbol \"lineorder\")))) \n    (Q0 (TSymbol \"date\"))) \n  (Q0 (TSymbol \"part\")))" << std::endl;
  deleteFile("/tmp/fluidb_store/data67.dat");
  // ForwardTrigger: (Just 
  //   (Left 
  //     [
  //      QJoin 
  //         (P0 
  //           (R2 REq 
  //               (R0 (E0 (ESym "lo_suppkey"))) 
  //               (R0 (E0 (ESym "s_suppkey")))))
  std::cout << "ForwardTrigger: (Just \n  (Left \n    [\n     QJoin \n        (P0 \n          (R2 REq \n              (R0 (E0 (ESym \"lo_suppkey\"))) \n              (R0 (E0 (ESym \"s_suppkey\")))))\n    ]))" << std::endl;
  {
    auto operation = mkEquiJoin<CallableClass27, CallableClass29, CallableClass25>(Just<const std::string>("/tmp/fluidb_store/data41.dat"), Just<const std::string>("/tmp/fluidb_store/data268.dat"), Just<const std::string>("/tmp/fluidb_store/data269.dat"), "/tmp/fluidb_store/data149.dat", "/tmp/fluidb_store/data3.dat");
    operation.run();
    operation.print_output(10);
  }
  // ForwardTrigger: (Just 
  //   (Right 
  //     [
  //      QSel 
  //         (P0 
  //           (R2 RLike 
  //               (R0 (E0 (ESym "s_region"))) 
  //               (R0 (E0 (EString "ASIA")))))
  std::cout << "ForwardTrigger: (Just \n  (Right \n    [\n     QSel \n        (P0 \n          (R2 RLike \n              (R0 (E0 (ESym \"s_region\"))) \n              (R0 (E0 (EString \"ASIA\")))))\n    ]))" << std::endl;
  {
    auto operation = mkSelect<CallableClass31>(Just<const std::string>("/tmp/fluidb_store/data94.dat"), Just<const std::string>("/tmp/fluidb_store/data95.dat"), "/tmp/fluidb_store/data41.dat");
    operation.run();
    operation.print_output(10);
  }
  // Delete: (Q2 
  //   (QRightAntijoin 
  //     (P0 
  //       (R2 REq 
  //           (R0 (E0 (ESym "lo_orderdate"))) 
  //           (R0 (E0 (ESym "d_datekey")))))) 
  //   (S 
  //     (P2 
  //       PAnd 
  //       (P0 
  //         (R2 REq (R0 (E0 (ESym "d_weeknuminyear"))) (R0 (E0 (EInt 6))))) 
  //       (P0 (R2 REq (R0 (E0 (ESym "d_year"))) (R0 (E0 (EInt 1994)))))) 
  //     (Q0 (TSymbol "date"))) 
  std::cout << "Delete: (Q2 \n  (QRightAntijoin \n    (P0 \n      (R2 REq \n          (R0 (E0 (ESym \"lo_orderdate\"))) \n          (R0 (E0 (ESym \"d_datekey\")))))) \n  (S \n    (P2 \n      PAnd \n      (P0 \n        (R2 REq (R0 (E0 (ESym \"d_weeknuminyear\"))) (R0 (E0 (EInt 6))))) \n      (P0 (R2 REq (R0 (E0 (ESym \"d_year\"))) (R0 (E0 (EInt 1994)))))) \n    (Q0 (TSymbol \"date\"))) \n  (Q0 (TSymbol \"lineorder\")))" << std::endl;
  deleteFile("/tmp/fluidb_store/data29.dat");
  // Delete: (Q2 
  //   (QLeftAntijoin 
  //     (P0 
  //       (R2 REq 
  //           (R0 (E0 (ESym "lo_orderdate"))) 
  //           (R0 (E0 (ESym "d_datekey")))))) 
  //   (Q0 (TSymbol "date")) 
  std::cout << "Delete: (Q2 \n  (QLeftAntijoin \n    (P0 \n      (R2 REq \n          (R0 (E0 (ESym \"lo_orderdate\"))) \n          (R0 (E0 (ESym \"d_datekey\")))))) \n  (Q0 (TSymbol \"date\")) \n  (Q0 (TSymbol \"lineorder\")))" << std::endl;
  deleteFile("/tmp/fluidb_store/data148.dat");
  // Delete: (Q2 
  //   (QRightAntijoin 
  //     (P0 
  //       (R2 REq 
  //           (R0 (E0 (ESym "lo_orderdate"))) 
  //           (R0 (E0 (ESym "d_datekey")))))) 
  //   (Q0 (TSymbol "date")) 
  std::cout << "Delete: (Q2 \n  (QRightAntijoin \n    (P0 \n      (R2 REq \n          (R0 (E0 (ESym \"lo_orderdate\"))) \n          (R0 (E0 (ESym \"d_datekey\")))))) \n  (Q0 (TSymbol \"date\")) \n  (Q0 (TSymbol \"lineorder\")))" << std::endl;
  deleteFile("/tmp/fluidb_store/data150.dat");
  // Delete: (Q2 
  //   (QRightAntijoin 
  //     (P0 
  //       (R2 REq 
  //           (R0 (E0 (ESym "lo_suppkey"))) 
  //           (R0 (E0 (ESym "s_suppkey")))))) 
  //   (S 
  //     (P0 
  //       (R2 RLike 
  //           (R0 (E0 (ESym "c_region"))) 
  //           (R0 (E0 (EString "AMERICA"))))) 
  //     (J 
  //       (P0 
  //         (R2 REq 
  //             (R0 (E0 (ESym "lo_custkey"))) 
  //             (R0 (E0 (ESym "c_custkey"))))) 
  //       (Q0 (TSymbol "customer")) 
  //       (Q0 (TSymbol "lineorder")))) 
  std::cout << "Delete: (Q2 \n  (QRightAntijoin \n    (P0 \n      (R2 REq \n          (R0 (E0 (ESym \"lo_suppkey\"))) \n          (R0 (E0 (ESym \"s_suppkey\")))))) \n  (S \n    (P0 \n      (R2 RLike \n          (R0 (E0 (ESym \"c_region\"))) \n          (R0 (E0 (EString \"AMERICA\"))))) \n    (J \n      (P0 \n        (R2 REq \n            (R0 (E0 (ESym \"lo_custkey\"))) \n            (R0 (E0 (ESym \"c_custkey\"))))) \n      (Q0 (TSymbol \"customer\")) \n      (Q0 (TSymbol \"lineorder\")))) \n  (Q0 (TSymbol \"supplier\")))" << std::endl;
  deleteFile("/tmp/fluidb_store/data307.dat");
  // Delete: (J 
  //   (P0 
  //     (R2 REq 
  //         (R0 (E0 (ESym "lo_orderdate"))) 
  //         (R0 (E0 (ESym "d_datekey"))))) 
  //   (S 
  //     (P2 
  //       PAnd 
  //       (P0 
  //         (R2 REq (R0 (E0 (ESym "d_weeknuminyear"))) (R0 (E0 (EInt 6))))) 
  //       (P0 (R2 REq (R0 (E0 (ESym "d_year"))) (R0 (E0 (EInt 1994)))))) 
  //     (Q0 (TSymbol "date"))) 
  std::cout << "Delete: (J \n  (P0 \n    (R2 REq \n        (R0 (E0 (ESym \"lo_orderdate\"))) \n        (R0 (E0 (ESym \"d_datekey\"))))) \n  (S \n    (P2 \n      PAnd \n      (P0 \n        (R2 REq (R0 (E0 (ESym \"d_weeknuminyear\"))) (R0 (E0 (EInt 6))))) \n      (P0 (R2 REq (R0 (E0 (ESym \"d_year\"))) (R0 (E0 (EInt 1994)))))) \n    (Q0 (TSymbol \"date\"))) \n  (Q0 (TSymbol \"lineorder\")))" << std::endl;
  deleteFile("/tmp/fluidb_store/data28.dat");
  // Delete: (Q2 
  //   (QLeftAntijoin 
  //     (P0 
  //       (R2 REq 
  //           (R0 (E0 (ESym "lo_suppkey"))) 
  //           (R0 (E0 (ESym "s_suppkey")))))) 
  //   (J 
  //     (P0 
  //       (R2 REq 
  //           (R0 (E0 (ESym "lo_orderdate"))) 
  //           (R0 (E0 (ESym "d_datekey"))))) 
  //     (Q0 (TSymbol "date")) 
  //     (Q0 (TSymbol "lineorder"))) 
  std::cout << "Delete: (Q2 \n  (QLeftAntijoin \n    (P0 \n      (R2 REq \n          (R0 (E0 (ESym \"lo_suppkey\"))) \n          (R0 (E0 (ESym \"s_suppkey\")))))) \n  (J \n    (P0 \n      (R2 REq \n          (R0 (E0 (ESym \"lo_orderdate\"))) \n          (R0 (E0 (ESym \"d_datekey\"))))) \n    (Q0 (TSymbol \"date\")) \n    (Q0 (TSymbol \"lineorder\"))) \n  (Q0 (TSymbol \"supplier\")))" << std::endl;
  deleteFile("/tmp/fluidb_store/data268.dat");
  std::cout << "Delete: (Q0 (TSymbol \"supplier\"))" << std::endl;
  deleteFile("/tmp/fluidb_store/data3.dat");
  // Delete: (J 
  //   (P0 
  //     (R2 REq 
  //         (R0 (E0 (ESym "lo_orderdate"))) 
  //         (R0 (E0 (ESym "d_datekey"))))) 
  //   (Q0 (TSymbol "date")) 
  std::cout << "Delete: (J \n  (P0 \n    (R2 REq \n        (R0 (E0 (ESym \"lo_orderdate\"))) \n        (R0 (E0 (ESym \"d_datekey\"))))) \n  (Q0 (TSymbol \"date\")) \n  (Q0 (TSymbol \"lineorder\")))" << std::endl;
  deleteFile("/tmp/fluidb_store/data149.dat");
  // Delete: (J 
  //   (P0 
  //     (R2 REq (R0 (E0 (ESym "lo_suppkey"))) (R0 (E0 (ESym "s_suppkey"))))) 
  //   (S 
  //     (P0 
  //       (R2 RLike 
  //           (R0 (E0 (ESym "c_region"))) 
  //           (R0 (E0 (EString "AMERICA"))))) 
  //     (J 
  //       (P0 
  //         (R2 REq 
  //             (R0 (E0 (ESym "lo_custkey"))) 
  //             (R0 (E0 (ESym "c_custkey"))))) 
  //       (Q0 (TSymbol "customer")) 
  //       (Q0 (TSymbol "lineorder")))) 
  std::cout << "Delete: (J \n  (P0 \n    (R2 REq (R0 (E0 (ESym \"lo_suppkey\"))) (R0 (E0 (ESym \"s_suppkey\"))))) \n  (S \n    (P0 \n      (R2 RLike \n          (R0 (E0 (ESym \"c_region\"))) \n          (R0 (E0 (EString \"AMERICA\"))))) \n    (J \n      (P0 \n        (R2 REq \n            (R0 (E0 (ESym \"lo_custkey\"))) \n            (R0 (E0 (ESym \"c_custkey\"))))) \n      (Q0 (TSymbol \"customer\")) \n      (Q0 (TSymbol \"lineorder\")))) \n  (Q0 (TSymbol \"supplier\")))" << std::endl;
  deleteFile("/tmp/fluidb_store/data306.dat");
  // ForwardTrigger: (Just 
  //   (Left 
  //     [
  //      QJoin 
  //         (P0 
  //           (R2 REq 
  //               (R0 (E0 (ESym "lo_partkey"))) 
  //               (R0 (E0 (ESym "p_partkey")))))
  std::cout << "ForwardTrigger: (Just \n  (Left \n    [\n     QJoin \n        (P0 \n          (R2 REq \n              (R0 (E0 (ESym \"lo_partkey\"))) \n              (R0 (E0 (ESym \"p_partkey\")))))\n    ]))" << std::endl;
  {
    auto operation = mkEquiJoin<CallableClass39, CallableClass41, CallableClass37>(Just<const std::string>("/tmp/fluidb_store/data109.dat"), Just<const std::string>("/tmp/fluidb_store/data108.dat"), Just<const std::string>("/tmp/fluidb_store/data110.dat"), "/tmp/fluidb_store/data94.dat", "/tmp/fluidb_store/data2.dat");
    operation.run();
    operation.print_output(10);
  }
  // Delete: (S 
  //   (P1 
  //     PNot 
  //     (P0 
  //       (R2 RLike (R0 (E0 (ESym "s_region"))) (R0 (E0 (EString "ASIA")))))) 
  //   (J 
  //     (P0 
  //       (R2 REq 
  //           (R0 (E0 (ESym "lo_orderdate"))) 
  //           (R0 (E0 (ESym "d_datekey"))))) 
  //     (J 
  //       (P0 
  //         (R2 REq 
  //             (R0 (E0 (ESym "lo_suppkey"))) 
  //             (R0 (E0 (ESym "s_suppkey"))))) 
  //       (Q0 (TSymbol "supplier")) 
  //       (Q0 (TSymbol "lineorder"))) 
  std::cout << "Delete: (S \n  (P1 \n    PNot \n    (P0 \n      (R2 RLike (R0 (E0 (ESym \"s_region\"))) (R0 (E0 (EString \"ASIA\")))))) \n  (J \n    (P0 \n      (R2 REq \n          (R0 (E0 (ESym \"lo_orderdate\"))) \n          (R0 (E0 (ESym \"d_datekey\"))))) \n    (J \n      (P0 \n        (R2 REq \n            (R0 (E0 (ESym \"lo_suppkey\"))) \n            (R0 (E0 (ESym \"s_suppkey\"))))) \n      (Q0 (TSymbol \"supplier\")) \n      (Q0 (TSymbol \"lineorder\"))) \n    (Q0 (TSymbol \"date\"))))" << std::endl;
  deleteFile("/tmp/fluidb_store/data95.dat");
  // Delete: (Q2 
  //   (QLeftAntijoin 
  //     (P0 
  //       (R2 REq 
  //           (R0 (E0 (ESym "lo_partkey"))) 
  //           (R0 (E0 (ESym "p_partkey")))))) 
  //   (J 
  //     (P0 
  //       (R2 REq 
  //           (R0 (E0 (ESym "lo_orderdate"))) 
  //           (R0 (E0 (ESym "d_datekey"))))) 
  //     (S 
  //       (P0 
  //         (R2 RLike 
  //             (R0 (E0 (ESym "s_region"))) 
  //             (R0 (E0 (EString "ASIA"))))) 
  //       (J 
  //         (P0 
  //           (R2 REq 
  //               (R0 (E0 (ESym "lo_suppkey"))) 
  //               (R0 (E0 (ESym "s_suppkey"))))) 
  //         (Q0 (TSymbol "supplier")) 
  //         (Q0 (TSymbol "lineorder")))) 
  //     (Q0 (TSymbol "date"))) 
  std::cout << "Delete: (Q2 \n  (QLeftAntijoin \n    (P0 \n      (R2 REq \n          (R0 (E0 (ESym \"lo_partkey\"))) \n          (R0 (E0 (ESym \"p_partkey\")))))) \n  (J \n    (P0 \n      (R2 REq \n          (R0 (E0 (ESym \"lo_orderdate\"))) \n          (R0 (E0 (ESym \"d_datekey\"))))) \n    (S \n      (P0 \n        (R2 RLike \n            (R0 (E0 (ESym \"s_region\"))) \n            (R0 (E0 (EString \"ASIA\"))))) \n      (J \n        (P0 \n          (R2 REq \n              (R0 (E0 (ESym \"lo_suppkey\"))) \n              (R0 (E0 (ESym \"s_suppkey\"))))) \n        (Q0 (TSymbol \"supplier\")) \n        (Q0 (TSymbol \"lineorder\")))) \n    (Q0 (TSymbol \"date\"))) \n  (Q0 (TSymbol \"part\")))" << std::endl;
  deleteFile("/tmp/fluidb_store/data108.dat");
  std::cout << "Delete: (Q0 (TSymbol \"part\"))" << std::endl;
  deleteFile("/tmp/fluidb_store/data2.dat");
  // Delete: (S 
  //   (P0 (R2 RLike (R0 (E0 (ESym "s_region"))) (R0 (E0 (EString "ASIA"))))) 
  //   (J 
  //     (P0 
  //       (R2 REq 
  //           (R0 (E0 (ESym "lo_orderdate"))) 
  //           (R0 (E0 (ESym "d_datekey"))))) 
  //     (J 
  //       (P0 
  //         (R2 REq 
  //             (R0 (E0 (ESym "lo_suppkey"))) 
  //             (R0 (E0 (ESym "s_suppkey"))))) 
  //       (Q0 (TSymbol "supplier")) 
  //       (Q0 (TSymbol "lineorder"))) 
  std::cout << "Delete: (S \n  (P0 (R2 RLike (R0 (E0 (ESym \"s_region\"))) (R0 (E0 (EString \"ASIA\"))))) \n  (J \n    (P0 \n      (R2 REq \n          (R0 (E0 (ESym \"lo_orderdate\"))) \n          (R0 (E0 (ESym \"d_datekey\"))))) \n    (J \n      (P0 \n        (R2 REq \n            (R0 (E0 (ESym \"lo_suppkey\"))) \n            (R0 (E0 (ESym \"s_suppkey\"))))) \n      (Q0 (TSymbol \"supplier\")) \n      (Q0 (TSymbol \"lineorder\"))) \n    (Q0 (TSymbol \"date\"))))" << std::endl;
  deleteFile("/tmp/fluidb_store/data94.dat");
  // ForwardTrigger: (Just 
  //   (Right 
  //     [
  //      QSel 
  //         (P2 
  //           PAnd 
  //           (P0 
  //             (R2 RLe 
  //                 (R0 (E0 (EString "MFGR#2221"))) 
  //                 (R0 (E0 (ESym "p_brand1"))))) 
  //           (P0 
  //             (R2 RLe 
  //                 (R0 (E0 (ESym "p_brand1"))) 
  //                 (R0 (E0 (EString "MFGR#2228"))))))
  std::cout << "ForwardTrigger: (Just \n  (Right \n    [\n     QSel \n        (P2 \n          PAnd \n          (P0 \n            (R2 RLe \n                (R0 (E0 (EString \"MFGR#2221\"))) \n                (R0 (E0 (ESym \"p_brand1\"))))) \n          (P0 \n            (R2 RLe \n                (R0 (E0 (ESym \"p_brand1\"))) \n                (R0 (E0 (EString \"MFGR#2228\"))))))\n    ]))" << std::endl;
  {
    auto operation = mkSelect<CallableClass43>(Just<const std::string>("/tmp/fluidb_store/data92.dat"), Just<const std::string>("/tmp/fluidb_store/data113.dat"), "/tmp/fluidb_store/data109.dat");
    operation.run();
    operation.print_output(10);
  }
  // ForwardTrigger: (Just 
  //   (Right 
  //     [
  //      QGroup 
  //         [(ESym "tmpSym0",E0 (NAggr AggrSum (E0 (ESym "lo_revenue")))),
  //          (ESym "d_year",E0 (NAggr AggrFirst (E0 (ESym "d_year")))),
  //          (ESym "p_brand1",E0 (NAggr AggrFirst (E0 (ESym "p_brand1"))))] 
  //         [E0 (ESym "d_year"),E0 (ESym "p_brand1")]
  std::cout << "ForwardTrigger: (Just \n  (Right \n    [\n     QGroup \n        [(ESym \"tmpSym0\",E0 (NAggr AggrSum (E0 (ESym \"lo_revenue\")))),\n         (ESym \"d_year\",E0 (NAggr AggrFirst (E0 (ESym \"d_year\")))),\n         (ESym \"p_brand1\",E0 (NAggr AggrFirst (E0 (ESym \"p_brand1\"))))] \n        [E0 (ESym \"d_year\"),E0 (ESym \"p_brand1\")]\n    ]))" << std::endl;
  {
    auto operation = mkAggregation<CallableClass50, CallableClass52>(Just<const std::string>("/tmp/fluidb_store/data118.dat"), Just<const std::string>("/tmp/fluidb_store/data92.dat"), "/tmp/fluidb_store/data92.dat");
    operation.run();
    operation.print_output(10);
  }
  std::cout << "ForwardTrigger: (Just (Right [QSort [E0 (ESym \"d_year\"),E0 (ESym \"p_brand1\")]]))" << std::endl;
  {
    auto operation = mkSort<CallableClass54>(Just<const std::string>("/tmp/fluidb_store/data119.dat"), Just<const std::string>("/tmp/fluidb_store/data118.dat"), "/tmp/fluidb_store/data118.dat");
    operation.run();
    operation.print_output(10);
  }
  report_counters();
  return 0;
}
