#include <array>

#include <string>

#include <codegen.hh>
class Record1 {
 public:
  Record1(unsigned __sym__0__7535313176760651084, fluidb_string<15> __sym__0__2271491666933900217, unsigned __sym__0__1997836344274475861) : sym__0__7535313176760651084(__sym__0__7535313176760651084), sym__0__2271491666933900217(__sym__0__2271491666933900217), sym__0__1997836344274475861(__sym__0__1997836344274475861)
  {
  }
  Record1() 
  {
  }
  std::string show() const{
    std::stringstream o;
    o << sym__0__7535313176760651084 << " | " << arrToString(sym__0__2271491666933900217) << " | " << sym__0__1997836344274475861;
    return o.str();
  }
  bool operator <(const Record1& otherRec) const{
    return (otherRec.sym__0__7535313176760651084 < sym__0__7535313176760651084 && (otherRec.sym__0__2271491666933900217 < sym__0__2271491666933900217 && otherRec.sym__0__1997836344274475861 < sym__0__1997836344274475861));
  }
  bool operator ==(const Record1& otherRec) const{
    return (otherRec.sym__0__7535313176760651084 == sym__0__7535313176760651084 && (otherRec.sym__0__2271491666933900217 == sym__0__2271491666933900217 && otherRec.sym__0__1997836344274475861 == sym__0__1997836344274475861));
  }
  bool operator !=(const Record1& otherRec) const{
    return (otherRec.sym__0__7535313176760651084 != sym__0__7535313176760651084 || (otherRec.sym__0__2271491666933900217 != sym__0__2271491666933900217 || otherRec.sym__0__1997836344274475861 != sym__0__1997836344274475861));
  }
  unsigned sym__0__7535313176760651084;
  fluidb_string<15> sym__0__2271491666933900217;
  unsigned sym__0__1997836344274475861;
 private:
};


class Record3 {
 public:
  Record3(unsigned __sym__0__8510229167000989098, fluidb_string<18> __sym__0___45_5378776952634560102, fluidb_string<9> __sym__0___45_704787536510792928, fluidb_string<9> __sym__0___45_869698216850508175, unsigned __sym__0__8175332404886507711, unsigned __sym__0__2048753755655615937, fluidb_string<7> __sym__0__193417640524337570, unsigned __sym__0___45_8755147676797348405, unsigned __sym__0__7026879788546641730, unsigned __sym__0___45_7691162870079920566, unsigned __sym__0__5052590383033483400, unsigned __sym__0__2430363639668389393, fluidb_string<15> __sym__0___45_6276784461909134434, fluidb_string<2> __sym__0___45_5552637588945532554, fluidb_string<2> __sym__0___45_2886883133559273203, fluidb_string<2> __sym__0___45_994850390961268267, fluidb_string<2> __sym__0___45_6758188302196636361, unsigned __sym__0___45_9024094689376101918, fluidb_string<18> __sym__0__1339282354426263898, fluidb_string<40> __sym__0__1202908307829474588, fluidb_string<11> __sym__0___45_9172369434475798618, fluidb_string<15> __sym__0__8130415785247634792, fluidb_string<13> __sym__0__3234374805680645923, fluidb_string<15> __sym__0___45_4965335331514361894, fluidb_string<21> __sym__0___45_7465702528891812194, unsigned __sym__0___45_7056351919515786585, fluidb_string<25> __sym__0___45_8626296323909930886, fluidb_string<40> __sym__0___45_8362284379133597548, fluidb_string<16> __sym__0___45_3923238674411974570, fluidb_string<16> __sym__0__451707218022178592, fluidb_string<13> __sym__0__7881467715322202923, fluidb_string<15> __sym__0___45_3710782273683842054, unsigned __sym__0___45_590705651457030474, int __sym__0___45_6071788983121609400, unsigned __sym__0___45_8652112921081687424, unsigned __sym__0___45_4663181714269740558, unsigned __sym__0___45_5211411050104008049, unsigned __sym__0___45_4229915750419916052, fluidb_string<21> __sym__0___45_5531532895861105905, unsigned __sym__0___45_1878323880299742531, fluidb_string<10> __sym__0___45_7576245502151734272, unsigned __sym__0___45_610113831102224464, double __sym__0__2474083059436210870, unsigned __sym__0__6153174206738428364, double __sym__0__1657038129445596974, unsigned __sym__0__1769726679510251402, unsigned __sym__0___45_8003243744154319949, double __sym__0___45_1108292172579755671, fluidb_string<13> __sym__0__8590497058984368545, unsigned __sym__0__1784892721933972336, fluidb_string<55> __sym__0__4581540739523106496, fluidb_string<25> __sym__0___45_8629131909290119539, fluidb_string<7> __sym__0___45_462666116519384489, fluidb_string<10> __sym__0___45_293000345729913763, fluidb_string<11> __sym__0__3931176455982238713, fluidb_string<25> __sym__0__7924634589470431787, unsigned __sym__0__5383695241653150638, fluidb_string<10> __sym__0___45_7763850302220577667) : sym__0__8510229167000989098(__sym__0__8510229167000989098), sym__0___45_5378776952634560102(__sym__0___45_5378776952634560102), sym__0___45_704787536510792928(__sym__0___45_704787536510792928), sym__0___45_869698216850508175(__sym__0___45_869698216850508175), sym__0__8175332404886507711(__sym__0__8175332404886507711), sym__0__2048753755655615937(__sym__0__2048753755655615937), sym__0__193417640524337570(__sym__0__193417640524337570), sym__0___45_8755147676797348405(__sym__0___45_8755147676797348405), sym__0__7026879788546641730(__sym__0__7026879788546641730), sym__0___45_7691162870079920566(__sym__0___45_7691162870079920566), sym__0__5052590383033483400(__sym__0__5052590383033483400), sym__0__2430363639668389393(__sym__0__2430363639668389393), sym__0___45_6276784461909134434(__sym__0___45_6276784461909134434), sym__0___45_5552637588945532554(__sym__0___45_5552637588945532554), sym__0___45_2886883133559273203(__sym__0___45_2886883133559273203), sym__0___45_994850390961268267(__sym__0___45_994850390961268267), sym__0___45_6758188302196636361(__sym__0___45_6758188302196636361), sym__0___45_9024094689376101918(__sym__0___45_9024094689376101918), sym__0__1339282354426263898(__sym__0__1339282354426263898), sym__0__1202908307829474588(__sym__0__1202908307829474588), sym__0___45_9172369434475798618(__sym__0___45_9172369434475798618), sym__0__8130415785247634792(__sym__0__8130415785247634792), sym__0__3234374805680645923(__sym__0__3234374805680645923), sym__0___45_4965335331514361894(__sym__0___45_4965335331514361894), sym__0___45_7465702528891812194(__sym__0___45_7465702528891812194), sym__0___45_7056351919515786585(__sym__0___45_7056351919515786585), sym__0___45_8626296323909930886(__sym__0___45_8626296323909930886), sym__0___45_8362284379133597548(__sym__0___45_8362284379133597548), sym__0___45_3923238674411974570(__sym__0___45_3923238674411974570), sym__0__451707218022178592(__sym__0__451707218022178592), sym__0__7881467715322202923(__sym__0__7881467715322202923), sym__0___45_3710782273683842054(__sym__0___45_3710782273683842054), sym__0___45_590705651457030474(__sym__0___45_590705651457030474), sym__0___45_6071788983121609400(__sym__0___45_6071788983121609400), sym__0___45_8652112921081687424(__sym__0___45_8652112921081687424), sym__0___45_4663181714269740558(__sym__0___45_4663181714269740558), sym__0___45_5211411050104008049(__sym__0___45_5211411050104008049), sym__0___45_4229915750419916052(__sym__0___45_4229915750419916052), sym__0___45_5531532895861105905(__sym__0___45_5531532895861105905), sym__0___45_1878323880299742531(__sym__0___45_1878323880299742531), sym__0___45_7576245502151734272(__sym__0___45_7576245502151734272), sym__0___45_610113831102224464(__sym__0___45_610113831102224464), sym__0__2474083059436210870(__sym__0__2474083059436210870), sym__0__6153174206738428364(__sym__0__6153174206738428364), sym__0__1657038129445596974(__sym__0__1657038129445596974), sym__0__1769726679510251402(__sym__0__1769726679510251402), sym__0___45_8003243744154319949(__sym__0___45_8003243744154319949), sym__0___45_1108292172579755671(__sym__0___45_1108292172579755671), sym__0__8590497058984368545(__sym__0__8590497058984368545), sym__0__1784892721933972336(__sym__0__1784892721933972336), sym__0__4581540739523106496(__sym__0__4581540739523106496), sym__0___45_8629131909290119539(__sym__0___45_8629131909290119539), sym__0___45_462666116519384489(__sym__0___45_462666116519384489), sym__0___45_293000345729913763(__sym__0___45_293000345729913763), sym__0__3931176455982238713(__sym__0__3931176455982238713), sym__0__7924634589470431787(__sym__0__7924634589470431787), sym__0__5383695241653150638(__sym__0__5383695241653150638), sym__0___45_7763850302220577667(__sym__0___45_7763850302220577667)
  {
  }
  Record3() 
  {
  }
  std::string show() const{
    std::stringstream o;
    o << sym__0__8510229167000989098 << " | " << arrToString(sym__0___45_5378776952634560102) << " | " << arrToString(sym__0___45_704787536510792928) << " | " << arrToString(sym__0___45_869698216850508175) << " | " << sym__0__8175332404886507711 << " | " << sym__0__2048753755655615937 << " | " << arrToString(sym__0__193417640524337570) << " | " << sym__0___45_8755147676797348405 << " | " << sym__0__7026879788546641730 << " | " << sym__0___45_7691162870079920566 << " | " << sym__0__5052590383033483400 << " | " << sym__0__2430363639668389393 << " | " << arrToString(sym__0___45_6276784461909134434) << " | " << arrToString(sym__0___45_5552637588945532554) << " | " << arrToString(sym__0___45_2886883133559273203) << " | " << arrToString(sym__0___45_994850390961268267) << " | " << arrToString(sym__0___45_6758188302196636361) << " | " << sym__0___45_9024094689376101918 << " | " << arrToString(sym__0__1339282354426263898) << " | " << arrToString(sym__0__1202908307829474588) << " | " << arrToString(sym__0___45_9172369434475798618) << " | " << arrToString(sym__0__8130415785247634792) << " | " << arrToString(sym__0__3234374805680645923) << " | " << arrToString(sym__0___45_4965335331514361894) << " | " << arrToString(sym__0___45_7465702528891812194) << " | " << sym__0___45_7056351919515786585 << " | " << arrToString(sym__0___45_8626296323909930886) << " | " << arrToString(sym__0___45_8362284379133597548) << " | " << arrToString(sym__0___45_3923238674411974570) << " | " << arrToString(sym__0__451707218022178592) << " | " << arrToString(sym__0__7881467715322202923) << " | " << arrToString(sym__0___45_3710782273683842054) << " | " << sym__0___45_590705651457030474 << " | " << sym__0___45_6071788983121609400 << " | " << sym__0___45_8652112921081687424 << " | " << sym__0___45_4663181714269740558 << " | " << sym__0___45_5211411050104008049 << " | " << sym__0___45_4229915750419916052 << " | " << arrToString(sym__0___45_5531532895861105905) << " | " << sym__0___45_1878323880299742531 << " | " << arrToString(sym__0___45_7576245502151734272) << " | " << sym__0___45_610113831102224464 << " | " << sym__0__2474083059436210870 << " | " << sym__0__6153174206738428364 << " | " << sym__0__1657038129445596974 << " | " << sym__0__1769726679510251402 << " | " << sym__0___45_8003243744154319949 << " | " << sym__0___45_1108292172579755671 << " | " << arrToString(sym__0__8590497058984368545) << " | " << sym__0__1784892721933972336 << " | " << arrToString(sym__0__4581540739523106496) << " | " << arrToString(sym__0___45_8629131909290119539) << " | " << arrToString(sym__0___45_462666116519384489) << " | " << arrToString(sym__0___45_293000345729913763) << " | " << arrToString(sym__0__3931176455982238713) << " | " << arrToString(sym__0__7924634589470431787) << " | " << sym__0__5383695241653150638 << " | " << arrToString(sym__0___45_7763850302220577667);
    return o.str();
  }
  bool operator <(const Record3& otherRec) const{
    return (otherRec.sym__0__8510229167000989098 < sym__0__8510229167000989098 && (otherRec.sym__0___45_5378776952634560102 < sym__0___45_5378776952634560102 && (otherRec.sym__0___45_704787536510792928 < sym__0___45_704787536510792928 && (otherRec.sym__0___45_869698216850508175 < sym__0___45_869698216850508175 && (otherRec.sym__0__8175332404886507711 < sym__0__8175332404886507711 && (otherRec.sym__0__2048753755655615937 < sym__0__2048753755655615937 && (otherRec.sym__0__193417640524337570 < sym__0__193417640524337570 && (otherRec.sym__0___45_8755147676797348405 < sym__0___45_8755147676797348405 && (otherRec.sym__0__7026879788546641730 < sym__0__7026879788546641730 && (otherRec.sym__0___45_7691162870079920566 < sym__0___45_7691162870079920566 && (otherRec.sym__0__5052590383033483400 < sym__0__5052590383033483400 && (otherRec.sym__0__2430363639668389393 < sym__0__2430363639668389393 && (otherRec.sym__0___45_6276784461909134434 < sym__0___45_6276784461909134434 && (otherRec.sym__0___45_5552637588945532554 < sym__0___45_5552637588945532554 && (otherRec.sym__0___45_2886883133559273203 < sym__0___45_2886883133559273203 && (otherRec.sym__0___45_994850390961268267 < sym__0___45_994850390961268267 && (otherRec.sym__0___45_6758188302196636361 < sym__0___45_6758188302196636361 && (otherRec.sym__0___45_9024094689376101918 < sym__0___45_9024094689376101918 && (otherRec.sym__0__1339282354426263898 < sym__0__1339282354426263898 && (otherRec.sym__0__1202908307829474588 < sym__0__1202908307829474588 && (otherRec.sym__0___45_9172369434475798618 < sym__0___45_9172369434475798618 && (otherRec.sym__0__8130415785247634792 < sym__0__8130415785247634792 && (otherRec.sym__0__3234374805680645923 < sym__0__3234374805680645923 && (otherRec.sym__0___45_4965335331514361894 < sym__0___45_4965335331514361894 && (otherRec.sym__0___45_7465702528891812194 < sym__0___45_7465702528891812194 && (otherRec.sym__0___45_7056351919515786585 < sym__0___45_7056351919515786585 && (otherRec.sym__0___45_8626296323909930886 < sym__0___45_8626296323909930886 && (otherRec.sym__0___45_8362284379133597548 < sym__0___45_8362284379133597548 && (otherRec.sym__0___45_3923238674411974570 < sym__0___45_3923238674411974570 && (otherRec.sym__0__451707218022178592 < sym__0__451707218022178592 && (otherRec.sym__0__7881467715322202923 < sym__0__7881467715322202923 && (otherRec.sym__0___45_3710782273683842054 < sym__0___45_3710782273683842054 && (otherRec.sym__0___45_590705651457030474 < sym__0___45_590705651457030474 && (otherRec.sym__0___45_6071788983121609400 < sym__0___45_6071788983121609400 && (otherRec.sym__0___45_8652112921081687424 < sym__0___45_8652112921081687424 && (otherRec.sym__0___45_4663181714269740558 < sym__0___45_4663181714269740558 && (otherRec.sym__0___45_5211411050104008049 < sym__0___45_5211411050104008049 && (otherRec.sym__0___45_4229915750419916052 < sym__0___45_4229915750419916052 && (otherRec.sym__0___45_5531532895861105905 < sym__0___45_5531532895861105905 && (otherRec.sym__0___45_1878323880299742531 < sym__0___45_1878323880299742531 && (otherRec.sym__0___45_7576245502151734272 < sym__0___45_7576245502151734272 && (otherRec.sym__0___45_610113831102224464 < sym__0___45_610113831102224464 && (otherRec.sym__0__2474083059436210870 < sym__0__2474083059436210870 && (otherRec.sym__0__6153174206738428364 < sym__0__6153174206738428364 && (otherRec.sym__0__1657038129445596974 < sym__0__1657038129445596974 && (otherRec.sym__0__1769726679510251402 < sym__0__1769726679510251402 && (otherRec.sym__0___45_8003243744154319949 < sym__0___45_8003243744154319949 && (otherRec.sym__0___45_1108292172579755671 < sym__0___45_1108292172579755671 && (otherRec.sym__0__8590497058984368545 < sym__0__8590497058984368545 && (otherRec.sym__0__1784892721933972336 < sym__0__1784892721933972336 && (otherRec.sym__0__4581540739523106496 < sym__0__4581540739523106496 && (otherRec.sym__0___45_8629131909290119539 < sym__0___45_8629131909290119539 && (otherRec.sym__0___45_462666116519384489 < sym__0___45_462666116519384489 && (otherRec.sym__0___45_293000345729913763 < sym__0___45_293000345729913763 && (otherRec.sym__0__3931176455982238713 < sym__0__3931176455982238713 && (otherRec.sym__0__7924634589470431787 < sym__0__7924634589470431787 && (otherRec.sym__0__5383695241653150638 < sym__0__5383695241653150638 && otherRec.sym__0___45_7763850302220577667 < sym__0___45_7763850302220577667)))))))))))))))))))))))))))))))))))))))))))))))))))))))));
  }
  bool operator ==(const Record3& otherRec) const{
    return (otherRec.sym__0__8510229167000989098 == sym__0__8510229167000989098 && (otherRec.sym__0___45_5378776952634560102 == sym__0___45_5378776952634560102 && (otherRec.sym__0___45_704787536510792928 == sym__0___45_704787536510792928 && (otherRec.sym__0___45_869698216850508175 == sym__0___45_869698216850508175 && (otherRec.sym__0__8175332404886507711 == sym__0__8175332404886507711 && (otherRec.sym__0__2048753755655615937 == sym__0__2048753755655615937 && (otherRec.sym__0__193417640524337570 == sym__0__193417640524337570 && (otherRec.sym__0___45_8755147676797348405 == sym__0___45_8755147676797348405 && (otherRec.sym__0__7026879788546641730 == sym__0__7026879788546641730 && (otherRec.sym__0___45_7691162870079920566 == sym__0___45_7691162870079920566 && (otherRec.sym__0__5052590383033483400 == sym__0__5052590383033483400 && (otherRec.sym__0__2430363639668389393 == sym__0__2430363639668389393 && (otherRec.sym__0___45_6276784461909134434 == sym__0___45_6276784461909134434 && (otherRec.sym__0___45_5552637588945532554 == sym__0___45_5552637588945532554 && (otherRec.sym__0___45_2886883133559273203 == sym__0___45_2886883133559273203 && (otherRec.sym__0___45_994850390961268267 == sym__0___45_994850390961268267 && (otherRec.sym__0___45_6758188302196636361 == sym__0___45_6758188302196636361 && (otherRec.sym__0___45_9024094689376101918 == sym__0___45_9024094689376101918 && (otherRec.sym__0__1339282354426263898 == sym__0__1339282354426263898 && (otherRec.sym__0__1202908307829474588 == sym__0__1202908307829474588 && (otherRec.sym__0___45_9172369434475798618 == sym__0___45_9172369434475798618 && (otherRec.sym__0__8130415785247634792 == sym__0__8130415785247634792 && (otherRec.sym__0__3234374805680645923 == sym__0__3234374805680645923 && (otherRec.sym__0___45_4965335331514361894 == sym__0___45_4965335331514361894 && (otherRec.sym__0___45_7465702528891812194 == sym__0___45_7465702528891812194 && (otherRec.sym__0___45_7056351919515786585 == sym__0___45_7056351919515786585 && (otherRec.sym__0___45_8626296323909930886 == sym__0___45_8626296323909930886 && (otherRec.sym__0___45_8362284379133597548 == sym__0___45_8362284379133597548 && (otherRec.sym__0___45_3923238674411974570 == sym__0___45_3923238674411974570 && (otherRec.sym__0__451707218022178592 == sym__0__451707218022178592 && (otherRec.sym__0__7881467715322202923 == sym__0__7881467715322202923 && (otherRec.sym__0___45_3710782273683842054 == sym__0___45_3710782273683842054 && (otherRec.sym__0___45_590705651457030474 == sym__0___45_590705651457030474 && (otherRec.sym__0___45_6071788983121609400 == sym__0___45_6071788983121609400 && (otherRec.sym__0___45_8652112921081687424 == sym__0___45_8652112921081687424 && (otherRec.sym__0___45_4663181714269740558 == sym__0___45_4663181714269740558 && (otherRec.sym__0___45_5211411050104008049 == sym__0___45_5211411050104008049 && (otherRec.sym__0___45_4229915750419916052 == sym__0___45_4229915750419916052 && (otherRec.sym__0___45_5531532895861105905 == sym__0___45_5531532895861105905 && (otherRec.sym__0___45_1878323880299742531 == sym__0___45_1878323880299742531 && (otherRec.sym__0___45_7576245502151734272 == sym__0___45_7576245502151734272 && (otherRec.sym__0___45_610113831102224464 == sym__0___45_610113831102224464 && (otherRec.sym__0__2474083059436210870 == sym__0__2474083059436210870 && (otherRec.sym__0__6153174206738428364 == sym__0__6153174206738428364 && (otherRec.sym__0__1657038129445596974 == sym__0__1657038129445596974 && (otherRec.sym__0__1769726679510251402 == sym__0__1769726679510251402 && (otherRec.sym__0___45_8003243744154319949 == sym__0___45_8003243744154319949 && (otherRec.sym__0___45_1108292172579755671 == sym__0___45_1108292172579755671 && (otherRec.sym__0__8590497058984368545 == sym__0__8590497058984368545 && (otherRec.sym__0__1784892721933972336 == sym__0__1784892721933972336 && (otherRec.sym__0__4581540739523106496 == sym__0__4581540739523106496 && (otherRec.sym__0___45_8629131909290119539 == sym__0___45_8629131909290119539 && (otherRec.sym__0___45_462666116519384489 == sym__0___45_462666116519384489 && (otherRec.sym__0___45_293000345729913763 == sym__0___45_293000345729913763 && (otherRec.sym__0__3931176455982238713 == sym__0__3931176455982238713 && (otherRec.sym__0__7924634589470431787 == sym__0__7924634589470431787 && (otherRec.sym__0__5383695241653150638 == sym__0__5383695241653150638 && otherRec.sym__0___45_7763850302220577667 == sym__0___45_7763850302220577667)))))))))))))))))))))))))))))))))))))))))))))))))))))))));
  }
  bool operator !=(const Record3& otherRec) const{
    return (otherRec.sym__0__8510229167000989098 != sym__0__8510229167000989098 || (otherRec.sym__0___45_5378776952634560102 != sym__0___45_5378776952634560102 || (otherRec.sym__0___45_704787536510792928 != sym__0___45_704787536510792928 || (otherRec.sym__0___45_869698216850508175 != sym__0___45_869698216850508175 || (otherRec.sym__0__8175332404886507711 != sym__0__8175332404886507711 || (otherRec.sym__0__2048753755655615937 != sym__0__2048753755655615937 || (otherRec.sym__0__193417640524337570 != sym__0__193417640524337570 || (otherRec.sym__0___45_8755147676797348405 != sym__0___45_8755147676797348405 || (otherRec.sym__0__7026879788546641730 != sym__0__7026879788546641730 || (otherRec.sym__0___45_7691162870079920566 != sym__0___45_7691162870079920566 || (otherRec.sym__0__5052590383033483400 != sym__0__5052590383033483400 || (otherRec.sym__0__2430363639668389393 != sym__0__2430363639668389393 || (otherRec.sym__0___45_6276784461909134434 != sym__0___45_6276784461909134434 || (otherRec.sym__0___45_5552637588945532554 != sym__0___45_5552637588945532554 || (otherRec.sym__0___45_2886883133559273203 != sym__0___45_2886883133559273203 || (otherRec.sym__0___45_994850390961268267 != sym__0___45_994850390961268267 || (otherRec.sym__0___45_6758188302196636361 != sym__0___45_6758188302196636361 || (otherRec.sym__0___45_9024094689376101918 != sym__0___45_9024094689376101918 || (otherRec.sym__0__1339282354426263898 != sym__0__1339282354426263898 || (otherRec.sym__0__1202908307829474588 != sym__0__1202908307829474588 || (otherRec.sym__0___45_9172369434475798618 != sym__0___45_9172369434475798618 || (otherRec.sym__0__8130415785247634792 != sym__0__8130415785247634792 || (otherRec.sym__0__3234374805680645923 != sym__0__3234374805680645923 || (otherRec.sym__0___45_4965335331514361894 != sym__0___45_4965335331514361894 || (otherRec.sym__0___45_7465702528891812194 != sym__0___45_7465702528891812194 || (otherRec.sym__0___45_7056351919515786585 != sym__0___45_7056351919515786585 || (otherRec.sym__0___45_8626296323909930886 != sym__0___45_8626296323909930886 || (otherRec.sym__0___45_8362284379133597548 != sym__0___45_8362284379133597548 || (otherRec.sym__0___45_3923238674411974570 != sym__0___45_3923238674411974570 || (otherRec.sym__0__451707218022178592 != sym__0__451707218022178592 || (otherRec.sym__0__7881467715322202923 != sym__0__7881467715322202923 || (otherRec.sym__0___45_3710782273683842054 != sym__0___45_3710782273683842054 || (otherRec.sym__0___45_590705651457030474 != sym__0___45_590705651457030474 || (otherRec.sym__0___45_6071788983121609400 != sym__0___45_6071788983121609400 || (otherRec.sym__0___45_8652112921081687424 != sym__0___45_8652112921081687424 || (otherRec.sym__0___45_4663181714269740558 != sym__0___45_4663181714269740558 || (otherRec.sym__0___45_5211411050104008049 != sym__0___45_5211411050104008049 || (otherRec.sym__0___45_4229915750419916052 != sym__0___45_4229915750419916052 || (otherRec.sym__0___45_5531532895861105905 != sym__0___45_5531532895861105905 || (otherRec.sym__0___45_1878323880299742531 != sym__0___45_1878323880299742531 || (otherRec.sym__0___45_7576245502151734272 != sym__0___45_7576245502151734272 || (otherRec.sym__0___45_610113831102224464 != sym__0___45_610113831102224464 || (otherRec.sym__0__2474083059436210870 != sym__0__2474083059436210870 || (otherRec.sym__0__6153174206738428364 != sym__0__6153174206738428364 || (otherRec.sym__0__1657038129445596974 != sym__0__1657038129445596974 || (otherRec.sym__0__1769726679510251402 != sym__0__1769726679510251402 || (otherRec.sym__0___45_8003243744154319949 != sym__0___45_8003243744154319949 || (otherRec.sym__0___45_1108292172579755671 != sym__0___45_1108292172579755671 || (otherRec.sym__0__8590497058984368545 != sym__0__8590497058984368545 || (otherRec.sym__0__1784892721933972336 != sym__0__1784892721933972336 || (otherRec.sym__0__4581540739523106496 != sym__0__4581540739523106496 || (otherRec.sym__0___45_8629131909290119539 != sym__0___45_8629131909290119539 || (otherRec.sym__0___45_462666116519384489 != sym__0___45_462666116519384489 || (otherRec.sym__0___45_293000345729913763 != sym__0___45_293000345729913763 || (otherRec.sym__0__3931176455982238713 != sym__0__3931176455982238713 || (otherRec.sym__0__7924634589470431787 != sym__0__7924634589470431787 || (otherRec.sym__0__5383695241653150638 != sym__0__5383695241653150638 || otherRec.sym__0___45_7763850302220577667 != sym__0___45_7763850302220577667)))))))))))))))))))))))))))))))))))))))))))))))))))))))));
  }
  unsigned sym__0__8510229167000989098;
  fluidb_string<18> sym__0___45_5378776952634560102;
  fluidb_string<9> sym__0___45_704787536510792928;
  fluidb_string<9> sym__0___45_869698216850508175;
  unsigned sym__0__8175332404886507711;
  unsigned sym__0__2048753755655615937;
  fluidb_string<7> sym__0__193417640524337570;
  unsigned sym__0___45_8755147676797348405;
  unsigned sym__0__7026879788546641730;
  unsigned sym__0___45_7691162870079920566;
  unsigned sym__0__5052590383033483400;
  unsigned sym__0__2430363639668389393;
  fluidb_string<15> sym__0___45_6276784461909134434;
  fluidb_string<2> sym__0___45_5552637588945532554;
  fluidb_string<2> sym__0___45_2886883133559273203;
  fluidb_string<2> sym__0___45_994850390961268267;
  fluidb_string<2> sym__0___45_6758188302196636361;
  unsigned sym__0___45_9024094689376101918;
  fluidb_string<18> sym__0__1339282354426263898;
  fluidb_string<40> sym__0__1202908307829474588;
  fluidb_string<11> sym__0___45_9172369434475798618;
  fluidb_string<15> sym__0__8130415785247634792;
  fluidb_string<13> sym__0__3234374805680645923;
  fluidb_string<15> sym__0___45_4965335331514361894;
  fluidb_string<21> sym__0___45_7465702528891812194;
  unsigned sym__0___45_7056351919515786585;
  fluidb_string<25> sym__0___45_8626296323909930886;
  fluidb_string<40> sym__0___45_8362284379133597548;
  fluidb_string<16> sym__0___45_3923238674411974570;
  fluidb_string<16> sym__0__451707218022178592;
  fluidb_string<13> sym__0__7881467715322202923;
  fluidb_string<15> sym__0___45_3710782273683842054;
  unsigned sym__0___45_590705651457030474;
  int sym__0___45_6071788983121609400;
  unsigned sym__0___45_8652112921081687424;
  unsigned sym__0___45_4663181714269740558;
  unsigned sym__0___45_5211411050104008049;
  unsigned sym__0___45_4229915750419916052;
  fluidb_string<21> sym__0___45_5531532895861105905;
  unsigned sym__0___45_1878323880299742531;
  fluidb_string<10> sym__0___45_7576245502151734272;
  unsigned sym__0___45_610113831102224464;
  double sym__0__2474083059436210870;
  unsigned sym__0__6153174206738428364;
  double sym__0__1657038129445596974;
  unsigned sym__0__1769726679510251402;
  unsigned sym__0___45_8003243744154319949;
  double sym__0___45_1108292172579755671;
  fluidb_string<13> sym__0__8590497058984368545;
  unsigned sym__0__1784892721933972336;
  fluidb_string<55> sym__0__4581540739523106496;
  fluidb_string<25> sym__0___45_8629131909290119539;
  fluidb_string<7> sym__0___45_462666116519384489;
  fluidb_string<10> sym__0___45_293000345729913763;
  fluidb_string<11> sym__0__3931176455982238713;
  fluidb_string<25> sym__0__7924634589470431787;
  unsigned sym__0__5383695241653150638;
  fluidb_string<10> sym__0___45_7763850302220577667;
 private:
};


class Record7 {
 public:
  Record7(unsigned __sortElem0, fluidb_string<15> __sortElem1) : sortElem0(__sortElem0), sortElem1(__sortElem1)
  {
  }
  Record7() 
  {
  }
  std::string show() const{
    std::stringstream o;
    o << sortElem0 << " | " << arrToString(sortElem1);
    return o.str();
  }
  bool operator <(const Record7& otherRec) const{
    return (otherRec.sortElem0 < sortElem0 && otherRec.sortElem1 < sortElem1);
  }
  bool operator ==(const Record7& otherRec) const{
    return (otherRec.sortElem0 == sortElem0 && otherRec.sortElem1 == sortElem1);
  }
  bool operator !=(const Record7& otherRec) const{
    return (otherRec.sortElem0 != sortElem0 || otherRec.sortElem1 != sortElem1);
  }
  unsigned sortElem0;
  fluidb_string<15> sortElem1;
 private:
};


class CallableClass8 {
 public:
  Record7 operator()(const Record3& record0) {
    return Record7(record0.sym__0__8175332404886507711, record0.sym__0__8130415785247634792);
  }
  typedef Record7 Codomain;
  typedef Record3 Domain0;
 private:
};


class CallableClass6 {
 public:
  Record1 operator()(const Record3& record0) {
    return Record1(vAggrFirst2(record0.sym__0__8175332404886507711), vAggrFirst4(record0.sym__0__8130415785247634792), vAggrSum5((record0.sym__0__1769726679510251402 - record0.sym__0___45_8003243744154319949)));
  }
  typedef Record1 Codomain;
  typedef Record3 Domain0;
 private:
  AggrFirst<unsigned> vAggrFirst2;
  AggrFirst<fluidb_string<15>> vAggrFirst4;
  AggrSum<unsigned> vAggrSum5;
};






int main() {
  // ForwardTrigger: (Just 
  //   (Right 
  //     [
  //      QGroup 
  //         [
  //          (ESym "d_year",E0 (NAggr AggrFirst (E0 (ESym "d_year")))),
  //          (ESym "c_nation",E0 (NAggr AggrFirst (E0 (ESym "c_nation")))),
  //          (
  //            ESym "profit",
  //            E0 
  //               (NAggr 
  //                 AggrSum 
  //                 (E2 ESub 
  //                     (E0 (ESym "lo_revenue")) 
  //                     (E0 (ESym "lo_supplycost"))))
  //           )
  //         ] 
  //         [E0 (ESym "d_year"),E0 (ESym "c_nation")]
  std::cout << "ForwardTrigger: (Just \n  (Right \n    [\n     QGroup \n        [\n         (ESym \"d_year\",E0 (NAggr AggrFirst (E0 (ESym \"d_year\")))),\n         (ESym \"c_nation\",E0 (NAggr AggrFirst (E0 (ESym \"c_nation\")))),\n         (\n           ESym \"profit\",\n           E0 \n              (NAggr \n                AggrSum \n                (E2 ESub \n                    (E0 (ESym \"lo_revenue\")) \n                    (E0 (ESym \"lo_supplycost\"))))\n          )\n        ] \n        [E0 (ESym \"d_year\"),E0 (ESym \"c_nation\")]\n    ]))" << std::endl;
  {
    auto operation = mkAggregation<CallableClass6, CallableClass8>(Just<const std::string>("/tmp/fluidb_store/data326.dat"), Just<const std::string>("/tmp/fluidb_store/data325.dat"), "/tmp/fluidb_store/data325.dat");
    operation.run();
    operation.print_output(10);
  }
  return 0;
}
