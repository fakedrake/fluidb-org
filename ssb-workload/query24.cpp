#include <array>

#include <string>

#include <codegen.hh>
class Record4 {
 public:
  Record4(unsigned __sym__0___45_532509241117904863, fluidb_string<15> __sym__0__6879476602096058762, unsigned __sym__0__6336215024333455337) : sym__0___45_532509241117904863(__sym__0___45_532509241117904863), sym__0__6879476602096058762(__sym__0__6879476602096058762), sym__0__6336215024333455337(__sym__0__6336215024333455337)
  {
  }
  Record4() 
  {
  }
  std::string show() const{
    std::stringstream o;
    o << sym__0___45_532509241117904863 << " | " << arrToString(sym__0__6879476602096058762) << " | " << sym__0__6336215024333455337;
    return o.str();
  }
  bool operator <(const Record4& otherRec) const{
    return (otherRec.sym__0___45_532509241117904863 < sym__0___45_532509241117904863 && (otherRec.sym__0__6879476602096058762 < sym__0__6879476602096058762 && otherRec.sym__0__6336215024333455337 < sym__0__6336215024333455337));
  }
  bool operator ==(const Record4& otherRec) const{
    return (otherRec.sym__0___45_532509241117904863 == sym__0___45_532509241117904863 && (otherRec.sym__0__6879476602096058762 == sym__0__6879476602096058762 && otherRec.sym__0__6336215024333455337 == sym__0__6336215024333455337));
  }
  bool operator !=(const Record4& otherRec) const{
    return (otherRec.sym__0___45_532509241117904863 != sym__0___45_532509241117904863 || (otherRec.sym__0__6879476602096058762 != sym__0__6879476602096058762 || otherRec.sym__0__6336215024333455337 != sym__0__6336215024333455337));
  }
  unsigned sym__0___45_532509241117904863;
  fluidb_string<15> sym__0__6879476602096058762;
  unsigned sym__0__6336215024333455337;
 private:
};


class Record10 {
 public:
  Record10(unsigned __sortElem0, fluidb_string<15> __sortElem1) : sortElem0(__sortElem0), sortElem1(__sortElem1)
  {
  }
  Record10() 
  {
  }
  std::string show() const{
    std::stringstream o;
    o << sortElem0 << " | " << arrToString(sortElem1);
    return o.str();
  }
  bool operator <(const Record10& otherRec) const{
    return (otherRec.sortElem0 < sortElem0 && otherRec.sortElem1 < sortElem1);
  }
  bool operator ==(const Record10& otherRec) const{
    return (otherRec.sortElem0 == sortElem0 && otherRec.sortElem1 == sortElem1);
  }
  bool operator !=(const Record10& otherRec) const{
    return (otherRec.sortElem0 != sortElem0 || otherRec.sortElem1 != sortElem1);
  }
  unsigned sortElem0;
  fluidb_string<15> sortElem1;
 private:
};


class Record6 {
 public:
  Record6(unsigned __sym__0__751349491586783291, fluidb_string<18> __sym__0__354510891937955499, fluidb_string<9> __sym__0__8685870419913255269, fluidb_string<9> __sym__0___45_1685896364158718066, unsigned __sym__0___45_5677596107407519400, unsigned __sym__0__861815074445021598, fluidb_string<7> __sym__0___45_3872891870093673981, unsigned __sym__0___45_6241898377327069772, unsigned __sym__0__642504737957706403, unsigned __sym__0___45_1374976708771691557, unsigned __sym__0__2339057656064903933, unsigned __sym__0__89048769271346350, fluidb_string<15> __sym__0__6426708041019551759, fluidb_string<2> __sym__0__7008835179244010327, fluidb_string<2> __sym__0___45_4323628884972846406, fluidb_string<2> __sym__0__7828159490610995250, fluidb_string<2> __sym__0__2257718864796675488, unsigned __sym__0__730109080165272259, fluidb_string<18> __sym__0___45_8476449300885475093, fluidb_string<40> __sym__0___45_991149214691090239, fluidb_string<11> __sym__0___45_2212122284055066105, fluidb_string<15> __sym__0___45_2044948362686327715, fluidb_string<13> __sym__0__3321043677072918300, fluidb_string<15> __sym__0___45_226399795464070293, fluidb_string<21> __sym__0__7848733459393176335, unsigned __sym__0__4356580487975201936, fluidb_string<25> __sym__0___45_9184441323043515765, fluidb_string<40> __sym__0__6618707433631942345, fluidb_string<16> __sym__0___45_6275907539891917001, fluidb_string<16> __sym__0___45_2055641227140571803, fluidb_string<13> __sym__0__2004584544714042516, fluidb_string<15> __sym__0__4525776177764059147, unsigned __sym__0___45_4488020782418924777, int __sym__0___45_6919306960004101059, unsigned __sym__0__6018430784935315013, unsigned __sym__0___45_140673424384154541, unsigned __sym__0___45_6038639548629345048, unsigned __sym__0__1559790869847058897, fluidb_string<21> __sym__0___45_4352805721407037080, unsigned __sym__0__4062351712071543146, fluidb_string<10> __sym__0___45_6018880488104713787, unsigned __sym__0___45_6835853099986992139, double __sym__0___45_8089668391442329833, unsigned __sym__0___45_8717135147929398223, double __sym__0___45_7475819144393673057, unsigned __sym__0__9142595129731966875, unsigned __sym__0__2065559644984295980, double __sym__0__2460723449183532278, fluidb_string<13> __sym__0__470592171585028734, unsigned __sym__0__8256595161360863541, fluidb_string<55> __sym__0__2419198459165298437, fluidb_string<25> __sym__0___45_5966236615078693830, fluidb_string<7> __sym__0___45_1194673352705657408, fluidb_string<10> __sym__0__1650700319641029258, fluidb_string<11> __sym__0___45_5413060736990914554, fluidb_string<25> __sym__0__5395318601550732180, unsigned __sym__0___45_4041750310509064417, fluidb_string<10> __sym__0___45_6998494795726951254) : sym__0__751349491586783291(__sym__0__751349491586783291), sym__0__354510891937955499(__sym__0__354510891937955499), sym__0__8685870419913255269(__sym__0__8685870419913255269), sym__0___45_1685896364158718066(__sym__0___45_1685896364158718066), sym__0___45_5677596107407519400(__sym__0___45_5677596107407519400), sym__0__861815074445021598(__sym__0__861815074445021598), sym__0___45_3872891870093673981(__sym__0___45_3872891870093673981), sym__0___45_6241898377327069772(__sym__0___45_6241898377327069772), sym__0__642504737957706403(__sym__0__642504737957706403), sym__0___45_1374976708771691557(__sym__0___45_1374976708771691557), sym__0__2339057656064903933(__sym__0__2339057656064903933), sym__0__89048769271346350(__sym__0__89048769271346350), sym__0__6426708041019551759(__sym__0__6426708041019551759), sym__0__7008835179244010327(__sym__0__7008835179244010327), sym__0___45_4323628884972846406(__sym__0___45_4323628884972846406), sym__0__7828159490610995250(__sym__0__7828159490610995250), sym__0__2257718864796675488(__sym__0__2257718864796675488), sym__0__730109080165272259(__sym__0__730109080165272259), sym__0___45_8476449300885475093(__sym__0___45_8476449300885475093), sym__0___45_991149214691090239(__sym__0___45_991149214691090239), sym__0___45_2212122284055066105(__sym__0___45_2212122284055066105), sym__0___45_2044948362686327715(__sym__0___45_2044948362686327715), sym__0__3321043677072918300(__sym__0__3321043677072918300), sym__0___45_226399795464070293(__sym__0___45_226399795464070293), sym__0__7848733459393176335(__sym__0__7848733459393176335), sym__0__4356580487975201936(__sym__0__4356580487975201936), sym__0___45_9184441323043515765(__sym__0___45_9184441323043515765), sym__0__6618707433631942345(__sym__0__6618707433631942345), sym__0___45_6275907539891917001(__sym__0___45_6275907539891917001), sym__0___45_2055641227140571803(__sym__0___45_2055641227140571803), sym__0__2004584544714042516(__sym__0__2004584544714042516), sym__0__4525776177764059147(__sym__0__4525776177764059147), sym__0___45_4488020782418924777(__sym__0___45_4488020782418924777), sym__0___45_6919306960004101059(__sym__0___45_6919306960004101059), sym__0__6018430784935315013(__sym__0__6018430784935315013), sym__0___45_140673424384154541(__sym__0___45_140673424384154541), sym__0___45_6038639548629345048(__sym__0___45_6038639548629345048), sym__0__1559790869847058897(__sym__0__1559790869847058897), sym__0___45_4352805721407037080(__sym__0___45_4352805721407037080), sym__0__4062351712071543146(__sym__0__4062351712071543146), sym__0___45_6018880488104713787(__sym__0___45_6018880488104713787), sym__0___45_6835853099986992139(__sym__0___45_6835853099986992139), sym__0___45_8089668391442329833(__sym__0___45_8089668391442329833), sym__0___45_8717135147929398223(__sym__0___45_8717135147929398223), sym__0___45_7475819144393673057(__sym__0___45_7475819144393673057), sym__0__9142595129731966875(__sym__0__9142595129731966875), sym__0__2065559644984295980(__sym__0__2065559644984295980), sym__0__2460723449183532278(__sym__0__2460723449183532278), sym__0__470592171585028734(__sym__0__470592171585028734), sym__0__8256595161360863541(__sym__0__8256595161360863541), sym__0__2419198459165298437(__sym__0__2419198459165298437), sym__0___45_5966236615078693830(__sym__0___45_5966236615078693830), sym__0___45_1194673352705657408(__sym__0___45_1194673352705657408), sym__0__1650700319641029258(__sym__0__1650700319641029258), sym__0___45_5413060736990914554(__sym__0___45_5413060736990914554), sym__0__5395318601550732180(__sym__0__5395318601550732180), sym__0___45_4041750310509064417(__sym__0___45_4041750310509064417), sym__0___45_6998494795726951254(__sym__0___45_6998494795726951254)
  {
  }
  Record6() 
  {
  }
  std::string show() const{
    std::stringstream o;
    o << sym__0__751349491586783291 << " | " << arrToString(sym__0__354510891937955499) << " | " << arrToString(sym__0__8685870419913255269) << " | " << arrToString(sym__0___45_1685896364158718066) << " | " << sym__0___45_5677596107407519400 << " | " << sym__0__861815074445021598 << " | " << arrToString(sym__0___45_3872891870093673981) << " | " << sym__0___45_6241898377327069772 << " | " << sym__0__642504737957706403 << " | " << sym__0___45_1374976708771691557 << " | " << sym__0__2339057656064903933 << " | " << sym__0__89048769271346350 << " | " << arrToString(sym__0__6426708041019551759) << " | " << arrToString(sym__0__7008835179244010327) << " | " << arrToString(sym__0___45_4323628884972846406) << " | " << arrToString(sym__0__7828159490610995250) << " | " << arrToString(sym__0__2257718864796675488) << " | " << sym__0__730109080165272259 << " | " << arrToString(sym__0___45_8476449300885475093) << " | " << arrToString(sym__0___45_991149214691090239) << " | " << arrToString(sym__0___45_2212122284055066105) << " | " << arrToString(sym__0___45_2044948362686327715) << " | " << arrToString(sym__0__3321043677072918300) << " | " << arrToString(sym__0___45_226399795464070293) << " | " << arrToString(sym__0__7848733459393176335) << " | " << sym__0__4356580487975201936 << " | " << arrToString(sym__0___45_9184441323043515765) << " | " << arrToString(sym__0__6618707433631942345) << " | " << arrToString(sym__0___45_6275907539891917001) << " | " << arrToString(sym__0___45_2055641227140571803) << " | " << arrToString(sym__0__2004584544714042516) << " | " << arrToString(sym__0__4525776177764059147) << " | " << sym__0___45_4488020782418924777 << " | " << sym__0___45_6919306960004101059 << " | " << sym__0__6018430784935315013 << " | " << sym__0___45_140673424384154541 << " | " << sym__0___45_6038639548629345048 << " | " << sym__0__1559790869847058897 << " | " << arrToString(sym__0___45_4352805721407037080) << " | " << sym__0__4062351712071543146 << " | " << arrToString(sym__0___45_6018880488104713787) << " | " << sym__0___45_6835853099986992139 << " | " << sym__0___45_8089668391442329833 << " | " << sym__0___45_8717135147929398223 << " | " << sym__0___45_7475819144393673057 << " | " << sym__0__9142595129731966875 << " | " << sym__0__2065559644984295980 << " | " << sym__0__2460723449183532278 << " | " << arrToString(sym__0__470592171585028734) << " | " << sym__0__8256595161360863541 << " | " << arrToString(sym__0__2419198459165298437) << " | " << arrToString(sym__0___45_5966236615078693830) << " | " << arrToString(sym__0___45_1194673352705657408) << " | " << arrToString(sym__0__1650700319641029258) << " | " << arrToString(sym__0___45_5413060736990914554) << " | " << arrToString(sym__0__5395318601550732180) << " | " << sym__0___45_4041750310509064417 << " | " << arrToString(sym__0___45_6998494795726951254);
    return o.str();
  }
  bool operator <(const Record6& otherRec) const{
    return (otherRec.sym__0__751349491586783291 < sym__0__751349491586783291 && (otherRec.sym__0__354510891937955499 < sym__0__354510891937955499 && (otherRec.sym__0__8685870419913255269 < sym__0__8685870419913255269 && (otherRec.sym__0___45_1685896364158718066 < sym__0___45_1685896364158718066 && (otherRec.sym__0___45_5677596107407519400 < sym__0___45_5677596107407519400 && (otherRec.sym__0__861815074445021598 < sym__0__861815074445021598 && (otherRec.sym__0___45_3872891870093673981 < sym__0___45_3872891870093673981 && (otherRec.sym__0___45_6241898377327069772 < sym__0___45_6241898377327069772 && (otherRec.sym__0__642504737957706403 < sym__0__642504737957706403 && (otherRec.sym__0___45_1374976708771691557 < sym__0___45_1374976708771691557 && (otherRec.sym__0__2339057656064903933 < sym__0__2339057656064903933 && (otherRec.sym__0__89048769271346350 < sym__0__89048769271346350 && (otherRec.sym__0__6426708041019551759 < sym__0__6426708041019551759 && (otherRec.sym__0__7008835179244010327 < sym__0__7008835179244010327 && (otherRec.sym__0___45_4323628884972846406 < sym__0___45_4323628884972846406 && (otherRec.sym__0__7828159490610995250 < sym__0__7828159490610995250 && (otherRec.sym__0__2257718864796675488 < sym__0__2257718864796675488 && (otherRec.sym__0__730109080165272259 < sym__0__730109080165272259 && (otherRec.sym__0___45_8476449300885475093 < sym__0___45_8476449300885475093 && (otherRec.sym__0___45_991149214691090239 < sym__0___45_991149214691090239 && (otherRec.sym__0___45_2212122284055066105 < sym__0___45_2212122284055066105 && (otherRec.sym__0___45_2044948362686327715 < sym__0___45_2044948362686327715 && (otherRec.sym__0__3321043677072918300 < sym__0__3321043677072918300 && (otherRec.sym__0___45_226399795464070293 < sym__0___45_226399795464070293 && (otherRec.sym__0__7848733459393176335 < sym__0__7848733459393176335 && (otherRec.sym__0__4356580487975201936 < sym__0__4356580487975201936 && (otherRec.sym__0___45_9184441323043515765 < sym__0___45_9184441323043515765 && (otherRec.sym__0__6618707433631942345 < sym__0__6618707433631942345 && (otherRec.sym__0___45_6275907539891917001 < sym__0___45_6275907539891917001 && (otherRec.sym__0___45_2055641227140571803 < sym__0___45_2055641227140571803 && (otherRec.sym__0__2004584544714042516 < sym__0__2004584544714042516 && (otherRec.sym__0__4525776177764059147 < sym__0__4525776177764059147 && (otherRec.sym__0___45_4488020782418924777 < sym__0___45_4488020782418924777 && (otherRec.sym__0___45_6919306960004101059 < sym__0___45_6919306960004101059 && (otherRec.sym__0__6018430784935315013 < sym__0__6018430784935315013 && (otherRec.sym__0___45_140673424384154541 < sym__0___45_140673424384154541 && (otherRec.sym__0___45_6038639548629345048 < sym__0___45_6038639548629345048 && (otherRec.sym__0__1559790869847058897 < sym__0__1559790869847058897 && (otherRec.sym__0___45_4352805721407037080 < sym__0___45_4352805721407037080 && (otherRec.sym__0__4062351712071543146 < sym__0__4062351712071543146 && (otherRec.sym__0___45_6018880488104713787 < sym__0___45_6018880488104713787 && (otherRec.sym__0___45_6835853099986992139 < sym__0___45_6835853099986992139 && (otherRec.sym__0___45_8089668391442329833 < sym__0___45_8089668391442329833 && (otherRec.sym__0___45_8717135147929398223 < sym__0___45_8717135147929398223 && (otherRec.sym__0___45_7475819144393673057 < sym__0___45_7475819144393673057 && (otherRec.sym__0__9142595129731966875 < sym__0__9142595129731966875 && (otherRec.sym__0__2065559644984295980 < sym__0__2065559644984295980 && (otherRec.sym__0__2460723449183532278 < sym__0__2460723449183532278 && (otherRec.sym__0__470592171585028734 < sym__0__470592171585028734 && (otherRec.sym__0__8256595161360863541 < sym__0__8256595161360863541 && (otherRec.sym__0__2419198459165298437 < sym__0__2419198459165298437 && (otherRec.sym__0___45_5966236615078693830 < sym__0___45_5966236615078693830 && (otherRec.sym__0___45_1194673352705657408 < sym__0___45_1194673352705657408 && (otherRec.sym__0__1650700319641029258 < sym__0__1650700319641029258 && (otherRec.sym__0___45_5413060736990914554 < sym__0___45_5413060736990914554 && (otherRec.sym__0__5395318601550732180 < sym__0__5395318601550732180 && (otherRec.sym__0___45_4041750310509064417 < sym__0___45_4041750310509064417 && otherRec.sym__0___45_6998494795726951254 < sym__0___45_6998494795726951254)))))))))))))))))))))))))))))))))))))))))))))))))))))))));
  }
  bool operator ==(const Record6& otherRec) const{
    return (otherRec.sym__0__751349491586783291 == sym__0__751349491586783291 && (otherRec.sym__0__354510891937955499 == sym__0__354510891937955499 && (otherRec.sym__0__8685870419913255269 == sym__0__8685870419913255269 && (otherRec.sym__0___45_1685896364158718066 == sym__0___45_1685896364158718066 && (otherRec.sym__0___45_5677596107407519400 == sym__0___45_5677596107407519400 && (otherRec.sym__0__861815074445021598 == sym__0__861815074445021598 && (otherRec.sym__0___45_3872891870093673981 == sym__0___45_3872891870093673981 && (otherRec.sym__0___45_6241898377327069772 == sym__0___45_6241898377327069772 && (otherRec.sym__0__642504737957706403 == sym__0__642504737957706403 && (otherRec.sym__0___45_1374976708771691557 == sym__0___45_1374976708771691557 && (otherRec.sym__0__2339057656064903933 == sym__0__2339057656064903933 && (otherRec.sym__0__89048769271346350 == sym__0__89048769271346350 && (otherRec.sym__0__6426708041019551759 == sym__0__6426708041019551759 && (otherRec.sym__0__7008835179244010327 == sym__0__7008835179244010327 && (otherRec.sym__0___45_4323628884972846406 == sym__0___45_4323628884972846406 && (otherRec.sym__0__7828159490610995250 == sym__0__7828159490610995250 && (otherRec.sym__0__2257718864796675488 == sym__0__2257718864796675488 && (otherRec.sym__0__730109080165272259 == sym__0__730109080165272259 && (otherRec.sym__0___45_8476449300885475093 == sym__0___45_8476449300885475093 && (otherRec.sym__0___45_991149214691090239 == sym__0___45_991149214691090239 && (otherRec.sym__0___45_2212122284055066105 == sym__0___45_2212122284055066105 && (otherRec.sym__0___45_2044948362686327715 == sym__0___45_2044948362686327715 && (otherRec.sym__0__3321043677072918300 == sym__0__3321043677072918300 && (otherRec.sym__0___45_226399795464070293 == sym__0___45_226399795464070293 && (otherRec.sym__0__7848733459393176335 == sym__0__7848733459393176335 && (otherRec.sym__0__4356580487975201936 == sym__0__4356580487975201936 && (otherRec.sym__0___45_9184441323043515765 == sym__0___45_9184441323043515765 && (otherRec.sym__0__6618707433631942345 == sym__0__6618707433631942345 && (otherRec.sym__0___45_6275907539891917001 == sym__0___45_6275907539891917001 && (otherRec.sym__0___45_2055641227140571803 == sym__0___45_2055641227140571803 && (otherRec.sym__0__2004584544714042516 == sym__0__2004584544714042516 && (otherRec.sym__0__4525776177764059147 == sym__0__4525776177764059147 && (otherRec.sym__0___45_4488020782418924777 == sym__0___45_4488020782418924777 && (otherRec.sym__0___45_6919306960004101059 == sym__0___45_6919306960004101059 && (otherRec.sym__0__6018430784935315013 == sym__0__6018430784935315013 && (otherRec.sym__0___45_140673424384154541 == sym__0___45_140673424384154541 && (otherRec.sym__0___45_6038639548629345048 == sym__0___45_6038639548629345048 && (otherRec.sym__0__1559790869847058897 == sym__0__1559790869847058897 && (otherRec.sym__0___45_4352805721407037080 == sym__0___45_4352805721407037080 && (otherRec.sym__0__4062351712071543146 == sym__0__4062351712071543146 && (otherRec.sym__0___45_6018880488104713787 == sym__0___45_6018880488104713787 && (otherRec.sym__0___45_6835853099986992139 == sym__0___45_6835853099986992139 && (otherRec.sym__0___45_8089668391442329833 == sym__0___45_8089668391442329833 && (otherRec.sym__0___45_8717135147929398223 == sym__0___45_8717135147929398223 && (otherRec.sym__0___45_7475819144393673057 == sym__0___45_7475819144393673057 && (otherRec.sym__0__9142595129731966875 == sym__0__9142595129731966875 && (otherRec.sym__0__2065559644984295980 == sym__0__2065559644984295980 && (otherRec.sym__0__2460723449183532278 == sym__0__2460723449183532278 && (otherRec.sym__0__470592171585028734 == sym__0__470592171585028734 && (otherRec.sym__0__8256595161360863541 == sym__0__8256595161360863541 && (otherRec.sym__0__2419198459165298437 == sym__0__2419198459165298437 && (otherRec.sym__0___45_5966236615078693830 == sym__0___45_5966236615078693830 && (otherRec.sym__0___45_1194673352705657408 == sym__0___45_1194673352705657408 && (otherRec.sym__0__1650700319641029258 == sym__0__1650700319641029258 && (otherRec.sym__0___45_5413060736990914554 == sym__0___45_5413060736990914554 && (otherRec.sym__0__5395318601550732180 == sym__0__5395318601550732180 && (otherRec.sym__0___45_4041750310509064417 == sym__0___45_4041750310509064417 && otherRec.sym__0___45_6998494795726951254 == sym__0___45_6998494795726951254)))))))))))))))))))))))))))))))))))))))))))))))))))))))));
  }
  bool operator !=(const Record6& otherRec) const{
    return (otherRec.sym__0__751349491586783291 != sym__0__751349491586783291 || (otherRec.sym__0__354510891937955499 != sym__0__354510891937955499 || (otherRec.sym__0__8685870419913255269 != sym__0__8685870419913255269 || (otherRec.sym__0___45_1685896364158718066 != sym__0___45_1685896364158718066 || (otherRec.sym__0___45_5677596107407519400 != sym__0___45_5677596107407519400 || (otherRec.sym__0__861815074445021598 != sym__0__861815074445021598 || (otherRec.sym__0___45_3872891870093673981 != sym__0___45_3872891870093673981 || (otherRec.sym__0___45_6241898377327069772 != sym__0___45_6241898377327069772 || (otherRec.sym__0__642504737957706403 != sym__0__642504737957706403 || (otherRec.sym__0___45_1374976708771691557 != sym__0___45_1374976708771691557 || (otherRec.sym__0__2339057656064903933 != sym__0__2339057656064903933 || (otherRec.sym__0__89048769271346350 != sym__0__89048769271346350 || (otherRec.sym__0__6426708041019551759 != sym__0__6426708041019551759 || (otherRec.sym__0__7008835179244010327 != sym__0__7008835179244010327 || (otherRec.sym__0___45_4323628884972846406 != sym__0___45_4323628884972846406 || (otherRec.sym__0__7828159490610995250 != sym__0__7828159490610995250 || (otherRec.sym__0__2257718864796675488 != sym__0__2257718864796675488 || (otherRec.sym__0__730109080165272259 != sym__0__730109080165272259 || (otherRec.sym__0___45_8476449300885475093 != sym__0___45_8476449300885475093 || (otherRec.sym__0___45_991149214691090239 != sym__0___45_991149214691090239 || (otherRec.sym__0___45_2212122284055066105 != sym__0___45_2212122284055066105 || (otherRec.sym__0___45_2044948362686327715 != sym__0___45_2044948362686327715 || (otherRec.sym__0__3321043677072918300 != sym__0__3321043677072918300 || (otherRec.sym__0___45_226399795464070293 != sym__0___45_226399795464070293 || (otherRec.sym__0__7848733459393176335 != sym__0__7848733459393176335 || (otherRec.sym__0__4356580487975201936 != sym__0__4356580487975201936 || (otherRec.sym__0___45_9184441323043515765 != sym__0___45_9184441323043515765 || (otherRec.sym__0__6618707433631942345 != sym__0__6618707433631942345 || (otherRec.sym__0___45_6275907539891917001 != sym__0___45_6275907539891917001 || (otherRec.sym__0___45_2055641227140571803 != sym__0___45_2055641227140571803 || (otherRec.sym__0__2004584544714042516 != sym__0__2004584544714042516 || (otherRec.sym__0__4525776177764059147 != sym__0__4525776177764059147 || (otherRec.sym__0___45_4488020782418924777 != sym__0___45_4488020782418924777 || (otherRec.sym__0___45_6919306960004101059 != sym__0___45_6919306960004101059 || (otherRec.sym__0__6018430784935315013 != sym__0__6018430784935315013 || (otherRec.sym__0___45_140673424384154541 != sym__0___45_140673424384154541 || (otherRec.sym__0___45_6038639548629345048 != sym__0___45_6038639548629345048 || (otherRec.sym__0__1559790869847058897 != sym__0__1559790869847058897 || (otherRec.sym__0___45_4352805721407037080 != sym__0___45_4352805721407037080 || (otherRec.sym__0__4062351712071543146 != sym__0__4062351712071543146 || (otherRec.sym__0___45_6018880488104713787 != sym__0___45_6018880488104713787 || (otherRec.sym__0___45_6835853099986992139 != sym__0___45_6835853099986992139 || (otherRec.sym__0___45_8089668391442329833 != sym__0___45_8089668391442329833 || (otherRec.sym__0___45_8717135147929398223 != sym__0___45_8717135147929398223 || (otherRec.sym__0___45_7475819144393673057 != sym__0___45_7475819144393673057 || (otherRec.sym__0__9142595129731966875 != sym__0__9142595129731966875 || (otherRec.sym__0__2065559644984295980 != sym__0__2065559644984295980 || (otherRec.sym__0__2460723449183532278 != sym__0__2460723449183532278 || (otherRec.sym__0__470592171585028734 != sym__0__470592171585028734 || (otherRec.sym__0__8256595161360863541 != sym__0__8256595161360863541 || (otherRec.sym__0__2419198459165298437 != sym__0__2419198459165298437 || (otherRec.sym__0___45_5966236615078693830 != sym__0___45_5966236615078693830 || (otherRec.sym__0___45_1194673352705657408 != sym__0___45_1194673352705657408 || (otherRec.sym__0__1650700319641029258 != sym__0__1650700319641029258 || (otherRec.sym__0___45_5413060736990914554 != sym__0___45_5413060736990914554 || (otherRec.sym__0__5395318601550732180 != sym__0__5395318601550732180 || (otherRec.sym__0___45_4041750310509064417 != sym__0___45_4041750310509064417 || otherRec.sym__0___45_6998494795726951254 != sym__0___45_6998494795726951254)))))))))))))))))))))))))))))))))))))))))))))))))))))))));
  }
  unsigned sym__0__751349491586783291;
  fluidb_string<18> sym__0__354510891937955499;
  fluidb_string<9> sym__0__8685870419913255269;
  fluidb_string<9> sym__0___45_1685896364158718066;
  unsigned sym__0___45_5677596107407519400;
  unsigned sym__0__861815074445021598;
  fluidb_string<7> sym__0___45_3872891870093673981;
  unsigned sym__0___45_6241898377327069772;
  unsigned sym__0__642504737957706403;
  unsigned sym__0___45_1374976708771691557;
  unsigned sym__0__2339057656064903933;
  unsigned sym__0__89048769271346350;
  fluidb_string<15> sym__0__6426708041019551759;
  fluidb_string<2> sym__0__7008835179244010327;
  fluidb_string<2> sym__0___45_4323628884972846406;
  fluidb_string<2> sym__0__7828159490610995250;
  fluidb_string<2> sym__0__2257718864796675488;
  unsigned sym__0__730109080165272259;
  fluidb_string<18> sym__0___45_8476449300885475093;
  fluidb_string<40> sym__0___45_991149214691090239;
  fluidb_string<11> sym__0___45_2212122284055066105;
  fluidb_string<15> sym__0___45_2044948362686327715;
  fluidb_string<13> sym__0__3321043677072918300;
  fluidb_string<15> sym__0___45_226399795464070293;
  fluidb_string<21> sym__0__7848733459393176335;
  unsigned sym__0__4356580487975201936;
  fluidb_string<25> sym__0___45_9184441323043515765;
  fluidb_string<40> sym__0__6618707433631942345;
  fluidb_string<16> sym__0___45_6275907539891917001;
  fluidb_string<16> sym__0___45_2055641227140571803;
  fluidb_string<13> sym__0__2004584544714042516;
  fluidb_string<15> sym__0__4525776177764059147;
  unsigned sym__0___45_4488020782418924777;
  int sym__0___45_6919306960004101059;
  unsigned sym__0__6018430784935315013;
  unsigned sym__0___45_140673424384154541;
  unsigned sym__0___45_6038639548629345048;
  unsigned sym__0__1559790869847058897;
  fluidb_string<21> sym__0___45_4352805721407037080;
  unsigned sym__0__4062351712071543146;
  fluidb_string<10> sym__0___45_6018880488104713787;
  unsigned sym__0___45_6835853099986992139;
  double sym__0___45_8089668391442329833;
  unsigned sym__0___45_8717135147929398223;
  double sym__0___45_7475819144393673057;
  unsigned sym__0__9142595129731966875;
  unsigned sym__0__2065559644984295980;
  double sym__0__2460723449183532278;
  fluidb_string<13> sym__0__470592171585028734;
  unsigned sym__0__8256595161360863541;
  fluidb_string<55> sym__0__2419198459165298437;
  fluidb_string<25> sym__0___45_5966236615078693830;
  fluidb_string<7> sym__0___45_1194673352705657408;
  fluidb_string<10> sym__0__1650700319641029258;
  fluidb_string<11> sym__0___45_5413060736990914554;
  fluidb_string<25> sym__0__5395318601550732180;
  unsigned sym__0___45_4041750310509064417;
  fluidb_string<10> sym__0___45_6998494795726951254;
 private:
};


class Record1 {
 public:
  Record1(unsigned __sym__0__3417884924835104469, fluidb_string<18> __sym__0__9194555597461859141, fluidb_string<9> __sym__0___45_4691860520184547445, fluidb_string<9> __sym__0__3741070679626273796, unsigned __sym__0__8840336534235481146, unsigned __sym__0___45_2601796008016513516, fluidb_string<7> __sym__0___45_3953136938130284179, unsigned __sym__0__234071792478123262, unsigned __sym__0___45_8604890310897105587, unsigned __sym__0___45_2239084372876413259, unsigned __sym__0___45_517725291345247341, unsigned __sym__0___45_1274865342338026396, fluidb_string<15> __sym__0__5989226753506632929, fluidb_string<2> __sym__0___45_5104102107747484775, fluidb_string<2> __sym__0__845953941670768600, fluidb_string<2> __sym__0__4163215005619532800, fluidb_string<2> __sym__0__6549476080427480210, unsigned __sym__0__2790200619910287661, fluidb_string<18> __sym__0___45_7868072875935261051, fluidb_string<40> __sym__0__5192623653961885871, fluidb_string<11> __sym__0___45_6620426807825431159, fluidb_string<15> __sym__0__6415636528128403891, fluidb_string<13> __sym__0___45_7823645749172626442, fluidb_string<15> __sym__0__2549615706294044933, fluidb_string<21> __sym__0___45_2740665641693505567, unsigned __sym__0___45_1783229466525166718, fluidb_string<25> __sym__0__2964572898640888933, fluidb_string<40> __sym__0___45_7646744647346812089, fluidb_string<16> __sym__0___45_8890755693813724487, fluidb_string<16> __sym__0___45_2078956440869557365, fluidb_string<13> __sym__0___45_5867946786197862882, fluidb_string<15> __sym__0___45_7326821984155681819, unsigned __sym__0__231907318709496409, int __sym__0__2688255008669304275, unsigned __sym__0___45_8703327832315381333, unsigned __sym__0__8210285234396302525, unsigned __sym__0___45_1083461131540582838, unsigned __sym__0___45_332988430765002305, fluidb_string<21> __sym__0___45_1396883304971201334, unsigned __sym__0___45_7885307500036326584, fluidb_string<10> __sym__0__682239336532423467, unsigned __sym__0___45_9059733160469762021, double __sym__0___45_7496847221808812455, unsigned __sym__0__6851494848781582431, double __sym__0___45_3179925554639845007, unsigned __sym__0__6226923395275405685, unsigned __sym__0__7704927979988596358, double __sym__0__132562152831270940, fluidb_string<13> __sym__0___45_8948194292450663628, unsigned __sym__0___45_4156887634197537189, fluidb_string<55> __sym__0___45_3535814603226201749, fluidb_string<25> __sym__0___45_9042078870426525352, fluidb_string<7> __sym__0___45_4764068575183756814, fluidb_string<10> __sym__0__4398489032885548840, fluidb_string<11> __sym__0__7599029514332915116, fluidb_string<25> __sym__0___45_7529596597076085474, unsigned __sym__0__3609550136696087537, fluidb_string<10> __sym__0__6422429896779316872) : sym__0__3417884924835104469(__sym__0__3417884924835104469), sym__0__9194555597461859141(__sym__0__9194555597461859141), sym__0___45_4691860520184547445(__sym__0___45_4691860520184547445), sym__0__3741070679626273796(__sym__0__3741070679626273796), sym__0__8840336534235481146(__sym__0__8840336534235481146), sym__0___45_2601796008016513516(__sym__0___45_2601796008016513516), sym__0___45_3953136938130284179(__sym__0___45_3953136938130284179), sym__0__234071792478123262(__sym__0__234071792478123262), sym__0___45_8604890310897105587(__sym__0___45_8604890310897105587), sym__0___45_2239084372876413259(__sym__0___45_2239084372876413259), sym__0___45_517725291345247341(__sym__0___45_517725291345247341), sym__0___45_1274865342338026396(__sym__0___45_1274865342338026396), sym__0__5989226753506632929(__sym__0__5989226753506632929), sym__0___45_5104102107747484775(__sym__0___45_5104102107747484775), sym__0__845953941670768600(__sym__0__845953941670768600), sym__0__4163215005619532800(__sym__0__4163215005619532800), sym__0__6549476080427480210(__sym__0__6549476080427480210), sym__0__2790200619910287661(__sym__0__2790200619910287661), sym__0___45_7868072875935261051(__sym__0___45_7868072875935261051), sym__0__5192623653961885871(__sym__0__5192623653961885871), sym__0___45_6620426807825431159(__sym__0___45_6620426807825431159), sym__0__6415636528128403891(__sym__0__6415636528128403891), sym__0___45_7823645749172626442(__sym__0___45_7823645749172626442), sym__0__2549615706294044933(__sym__0__2549615706294044933), sym__0___45_2740665641693505567(__sym__0___45_2740665641693505567), sym__0___45_1783229466525166718(__sym__0___45_1783229466525166718), sym__0__2964572898640888933(__sym__0__2964572898640888933), sym__0___45_7646744647346812089(__sym__0___45_7646744647346812089), sym__0___45_8890755693813724487(__sym__0___45_8890755693813724487), sym__0___45_2078956440869557365(__sym__0___45_2078956440869557365), sym__0___45_5867946786197862882(__sym__0___45_5867946786197862882), sym__0___45_7326821984155681819(__sym__0___45_7326821984155681819), sym__0__231907318709496409(__sym__0__231907318709496409), sym__0__2688255008669304275(__sym__0__2688255008669304275), sym__0___45_8703327832315381333(__sym__0___45_8703327832315381333), sym__0__8210285234396302525(__sym__0__8210285234396302525), sym__0___45_1083461131540582838(__sym__0___45_1083461131540582838), sym__0___45_332988430765002305(__sym__0___45_332988430765002305), sym__0___45_1396883304971201334(__sym__0___45_1396883304971201334), sym__0___45_7885307500036326584(__sym__0___45_7885307500036326584), sym__0__682239336532423467(__sym__0__682239336532423467), sym__0___45_9059733160469762021(__sym__0___45_9059733160469762021), sym__0___45_7496847221808812455(__sym__0___45_7496847221808812455), sym__0__6851494848781582431(__sym__0__6851494848781582431), sym__0___45_3179925554639845007(__sym__0___45_3179925554639845007), sym__0__6226923395275405685(__sym__0__6226923395275405685), sym__0__7704927979988596358(__sym__0__7704927979988596358), sym__0__132562152831270940(__sym__0__132562152831270940), sym__0___45_8948194292450663628(__sym__0___45_8948194292450663628), sym__0___45_4156887634197537189(__sym__0___45_4156887634197537189), sym__0___45_3535814603226201749(__sym__0___45_3535814603226201749), sym__0___45_9042078870426525352(__sym__0___45_9042078870426525352), sym__0___45_4764068575183756814(__sym__0___45_4764068575183756814), sym__0__4398489032885548840(__sym__0__4398489032885548840), sym__0__7599029514332915116(__sym__0__7599029514332915116), sym__0___45_7529596597076085474(__sym__0___45_7529596597076085474), sym__0__3609550136696087537(__sym__0__3609550136696087537), sym__0__6422429896779316872(__sym__0__6422429896779316872)
  {
  }
  Record1() 
  {
  }
  std::string show() const{
    std::stringstream o;
    o << sym__0__3417884924835104469 << " | " << arrToString(sym__0__9194555597461859141) << " | " << arrToString(sym__0___45_4691860520184547445) << " | " << arrToString(sym__0__3741070679626273796) << " | " << sym__0__8840336534235481146 << " | " << sym__0___45_2601796008016513516 << " | " << arrToString(sym__0___45_3953136938130284179) << " | " << sym__0__234071792478123262 << " | " << sym__0___45_8604890310897105587 << " | " << sym__0___45_2239084372876413259 << " | " << sym__0___45_517725291345247341 << " | " << sym__0___45_1274865342338026396 << " | " << arrToString(sym__0__5989226753506632929) << " | " << arrToString(sym__0___45_5104102107747484775) << " | " << arrToString(sym__0__845953941670768600) << " | " << arrToString(sym__0__4163215005619532800) << " | " << arrToString(sym__0__6549476080427480210) << " | " << sym__0__2790200619910287661 << " | " << arrToString(sym__0___45_7868072875935261051) << " | " << arrToString(sym__0__5192623653961885871) << " | " << arrToString(sym__0___45_6620426807825431159) << " | " << arrToString(sym__0__6415636528128403891) << " | " << arrToString(sym__0___45_7823645749172626442) << " | " << arrToString(sym__0__2549615706294044933) << " | " << arrToString(sym__0___45_2740665641693505567) << " | " << sym__0___45_1783229466525166718 << " | " << arrToString(sym__0__2964572898640888933) << " | " << arrToString(sym__0___45_7646744647346812089) << " | " << arrToString(sym__0___45_8890755693813724487) << " | " << arrToString(sym__0___45_2078956440869557365) << " | " << arrToString(sym__0___45_5867946786197862882) << " | " << arrToString(sym__0___45_7326821984155681819) << " | " << sym__0__231907318709496409 << " | " << sym__0__2688255008669304275 << " | " << sym__0___45_8703327832315381333 << " | " << sym__0__8210285234396302525 << " | " << sym__0___45_1083461131540582838 << " | " << sym__0___45_332988430765002305 << " | " << arrToString(sym__0___45_1396883304971201334) << " | " << sym__0___45_7885307500036326584 << " | " << arrToString(sym__0__682239336532423467) << " | " << sym__0___45_9059733160469762021 << " | " << sym__0___45_7496847221808812455 << " | " << sym__0__6851494848781582431 << " | " << sym__0___45_3179925554639845007 << " | " << sym__0__6226923395275405685 << " | " << sym__0__7704927979988596358 << " | " << sym__0__132562152831270940 << " | " << arrToString(sym__0___45_8948194292450663628) << " | " << sym__0___45_4156887634197537189 << " | " << arrToString(sym__0___45_3535814603226201749) << " | " << arrToString(sym__0___45_9042078870426525352) << " | " << arrToString(sym__0___45_4764068575183756814) << " | " << arrToString(sym__0__4398489032885548840) << " | " << arrToString(sym__0__7599029514332915116) << " | " << arrToString(sym__0___45_7529596597076085474) << " | " << sym__0__3609550136696087537 << " | " << arrToString(sym__0__6422429896779316872);
    return o.str();
  }
  bool operator <(const Record1& otherRec) const{
    return (otherRec.sym__0__3417884924835104469 < sym__0__3417884924835104469 && (otherRec.sym__0__9194555597461859141 < sym__0__9194555597461859141 && (otherRec.sym__0___45_4691860520184547445 < sym__0___45_4691860520184547445 && (otherRec.sym__0__3741070679626273796 < sym__0__3741070679626273796 && (otherRec.sym__0__8840336534235481146 < sym__0__8840336534235481146 && (otherRec.sym__0___45_2601796008016513516 < sym__0___45_2601796008016513516 && (otherRec.sym__0___45_3953136938130284179 < sym__0___45_3953136938130284179 && (otherRec.sym__0__234071792478123262 < sym__0__234071792478123262 && (otherRec.sym__0___45_8604890310897105587 < sym__0___45_8604890310897105587 && (otherRec.sym__0___45_2239084372876413259 < sym__0___45_2239084372876413259 && (otherRec.sym__0___45_517725291345247341 < sym__0___45_517725291345247341 && (otherRec.sym__0___45_1274865342338026396 < sym__0___45_1274865342338026396 && (otherRec.sym__0__5989226753506632929 < sym__0__5989226753506632929 && (otherRec.sym__0___45_5104102107747484775 < sym__0___45_5104102107747484775 && (otherRec.sym__0__845953941670768600 < sym__0__845953941670768600 && (otherRec.sym__0__4163215005619532800 < sym__0__4163215005619532800 && (otherRec.sym__0__6549476080427480210 < sym__0__6549476080427480210 && (otherRec.sym__0__2790200619910287661 < sym__0__2790200619910287661 && (otherRec.sym__0___45_7868072875935261051 < sym__0___45_7868072875935261051 && (otherRec.sym__0__5192623653961885871 < sym__0__5192623653961885871 && (otherRec.sym__0___45_6620426807825431159 < sym__0___45_6620426807825431159 && (otherRec.sym__0__6415636528128403891 < sym__0__6415636528128403891 && (otherRec.sym__0___45_7823645749172626442 < sym__0___45_7823645749172626442 && (otherRec.sym__0__2549615706294044933 < sym__0__2549615706294044933 && (otherRec.sym__0___45_2740665641693505567 < sym__0___45_2740665641693505567 && (otherRec.sym__0___45_1783229466525166718 < sym__0___45_1783229466525166718 && (otherRec.sym__0__2964572898640888933 < sym__0__2964572898640888933 && (otherRec.sym__0___45_7646744647346812089 < sym__0___45_7646744647346812089 && (otherRec.sym__0___45_8890755693813724487 < sym__0___45_8890755693813724487 && (otherRec.sym__0___45_2078956440869557365 < sym__0___45_2078956440869557365 && (otherRec.sym__0___45_5867946786197862882 < sym__0___45_5867946786197862882 && (otherRec.sym__0___45_7326821984155681819 < sym__0___45_7326821984155681819 && (otherRec.sym__0__231907318709496409 < sym__0__231907318709496409 && (otherRec.sym__0__2688255008669304275 < sym__0__2688255008669304275 && (otherRec.sym__0___45_8703327832315381333 < sym__0___45_8703327832315381333 && (otherRec.sym__0__8210285234396302525 < sym__0__8210285234396302525 && (otherRec.sym__0___45_1083461131540582838 < sym__0___45_1083461131540582838 && (otherRec.sym__0___45_332988430765002305 < sym__0___45_332988430765002305 && (otherRec.sym__0___45_1396883304971201334 < sym__0___45_1396883304971201334 && (otherRec.sym__0___45_7885307500036326584 < sym__0___45_7885307500036326584 && (otherRec.sym__0__682239336532423467 < sym__0__682239336532423467 && (otherRec.sym__0___45_9059733160469762021 < sym__0___45_9059733160469762021 && (otherRec.sym__0___45_7496847221808812455 < sym__0___45_7496847221808812455 && (otherRec.sym__0__6851494848781582431 < sym__0__6851494848781582431 && (otherRec.sym__0___45_3179925554639845007 < sym__0___45_3179925554639845007 && (otherRec.sym__0__6226923395275405685 < sym__0__6226923395275405685 && (otherRec.sym__0__7704927979988596358 < sym__0__7704927979988596358 && (otherRec.sym__0__132562152831270940 < sym__0__132562152831270940 && (otherRec.sym__0___45_8948194292450663628 < sym__0___45_8948194292450663628 && (otherRec.sym__0___45_4156887634197537189 < sym__0___45_4156887634197537189 && (otherRec.sym__0___45_3535814603226201749 < sym__0___45_3535814603226201749 && (otherRec.sym__0___45_9042078870426525352 < sym__0___45_9042078870426525352 && (otherRec.sym__0___45_4764068575183756814 < sym__0___45_4764068575183756814 && (otherRec.sym__0__4398489032885548840 < sym__0__4398489032885548840 && (otherRec.sym__0__7599029514332915116 < sym__0__7599029514332915116 && (otherRec.sym__0___45_7529596597076085474 < sym__0___45_7529596597076085474 && (otherRec.sym__0__3609550136696087537 < sym__0__3609550136696087537 && otherRec.sym__0__6422429896779316872 < sym__0__6422429896779316872)))))))))))))))))))))))))))))))))))))))))))))))))))))))));
  }
  bool operator ==(const Record1& otherRec) const{
    return (otherRec.sym__0__3417884924835104469 == sym__0__3417884924835104469 && (otherRec.sym__0__9194555597461859141 == sym__0__9194555597461859141 && (otherRec.sym__0___45_4691860520184547445 == sym__0___45_4691860520184547445 && (otherRec.sym__0__3741070679626273796 == sym__0__3741070679626273796 && (otherRec.sym__0__8840336534235481146 == sym__0__8840336534235481146 && (otherRec.sym__0___45_2601796008016513516 == sym__0___45_2601796008016513516 && (otherRec.sym__0___45_3953136938130284179 == sym__0___45_3953136938130284179 && (otherRec.sym__0__234071792478123262 == sym__0__234071792478123262 && (otherRec.sym__0___45_8604890310897105587 == sym__0___45_8604890310897105587 && (otherRec.sym__0___45_2239084372876413259 == sym__0___45_2239084372876413259 && (otherRec.sym__0___45_517725291345247341 == sym__0___45_517725291345247341 && (otherRec.sym__0___45_1274865342338026396 == sym__0___45_1274865342338026396 && (otherRec.sym__0__5989226753506632929 == sym__0__5989226753506632929 && (otherRec.sym__0___45_5104102107747484775 == sym__0___45_5104102107747484775 && (otherRec.sym__0__845953941670768600 == sym__0__845953941670768600 && (otherRec.sym__0__4163215005619532800 == sym__0__4163215005619532800 && (otherRec.sym__0__6549476080427480210 == sym__0__6549476080427480210 && (otherRec.sym__0__2790200619910287661 == sym__0__2790200619910287661 && (otherRec.sym__0___45_7868072875935261051 == sym__0___45_7868072875935261051 && (otherRec.sym__0__5192623653961885871 == sym__0__5192623653961885871 && (otherRec.sym__0___45_6620426807825431159 == sym__0___45_6620426807825431159 && (otherRec.sym__0__6415636528128403891 == sym__0__6415636528128403891 && (otherRec.sym__0___45_7823645749172626442 == sym__0___45_7823645749172626442 && (otherRec.sym__0__2549615706294044933 == sym__0__2549615706294044933 && (otherRec.sym__0___45_2740665641693505567 == sym__0___45_2740665641693505567 && (otherRec.sym__0___45_1783229466525166718 == sym__0___45_1783229466525166718 && (otherRec.sym__0__2964572898640888933 == sym__0__2964572898640888933 && (otherRec.sym__0___45_7646744647346812089 == sym__0___45_7646744647346812089 && (otherRec.sym__0___45_8890755693813724487 == sym__0___45_8890755693813724487 && (otherRec.sym__0___45_2078956440869557365 == sym__0___45_2078956440869557365 && (otherRec.sym__0___45_5867946786197862882 == sym__0___45_5867946786197862882 && (otherRec.sym__0___45_7326821984155681819 == sym__0___45_7326821984155681819 && (otherRec.sym__0__231907318709496409 == sym__0__231907318709496409 && (otherRec.sym__0__2688255008669304275 == sym__0__2688255008669304275 && (otherRec.sym__0___45_8703327832315381333 == sym__0___45_8703327832315381333 && (otherRec.sym__0__8210285234396302525 == sym__0__8210285234396302525 && (otherRec.sym__0___45_1083461131540582838 == sym__0___45_1083461131540582838 && (otherRec.sym__0___45_332988430765002305 == sym__0___45_332988430765002305 && (otherRec.sym__0___45_1396883304971201334 == sym__0___45_1396883304971201334 && (otherRec.sym__0___45_7885307500036326584 == sym__0___45_7885307500036326584 && (otherRec.sym__0__682239336532423467 == sym__0__682239336532423467 && (otherRec.sym__0___45_9059733160469762021 == sym__0___45_9059733160469762021 && (otherRec.sym__0___45_7496847221808812455 == sym__0___45_7496847221808812455 && (otherRec.sym__0__6851494848781582431 == sym__0__6851494848781582431 && (otherRec.sym__0___45_3179925554639845007 == sym__0___45_3179925554639845007 && (otherRec.sym__0__6226923395275405685 == sym__0__6226923395275405685 && (otherRec.sym__0__7704927979988596358 == sym__0__7704927979988596358 && (otherRec.sym__0__132562152831270940 == sym__0__132562152831270940 && (otherRec.sym__0___45_8948194292450663628 == sym__0___45_8948194292450663628 && (otherRec.sym__0___45_4156887634197537189 == sym__0___45_4156887634197537189 && (otherRec.sym__0___45_3535814603226201749 == sym__0___45_3535814603226201749 && (otherRec.sym__0___45_9042078870426525352 == sym__0___45_9042078870426525352 && (otherRec.sym__0___45_4764068575183756814 == sym__0___45_4764068575183756814 && (otherRec.sym__0__4398489032885548840 == sym__0__4398489032885548840 && (otherRec.sym__0__7599029514332915116 == sym__0__7599029514332915116 && (otherRec.sym__0___45_7529596597076085474 == sym__0___45_7529596597076085474 && (otherRec.sym__0__3609550136696087537 == sym__0__3609550136696087537 && otherRec.sym__0__6422429896779316872 == sym__0__6422429896779316872)))))))))))))))))))))))))))))))))))))))))))))))))))))))));
  }
  bool operator !=(const Record1& otherRec) const{
    return (otherRec.sym__0__3417884924835104469 != sym__0__3417884924835104469 || (otherRec.sym__0__9194555597461859141 != sym__0__9194555597461859141 || (otherRec.sym__0___45_4691860520184547445 != sym__0___45_4691860520184547445 || (otherRec.sym__0__3741070679626273796 != sym__0__3741070679626273796 || (otherRec.sym__0__8840336534235481146 != sym__0__8840336534235481146 || (otherRec.sym__0___45_2601796008016513516 != sym__0___45_2601796008016513516 || (otherRec.sym__0___45_3953136938130284179 != sym__0___45_3953136938130284179 || (otherRec.sym__0__234071792478123262 != sym__0__234071792478123262 || (otherRec.sym__0___45_8604890310897105587 != sym__0___45_8604890310897105587 || (otherRec.sym__0___45_2239084372876413259 != sym__0___45_2239084372876413259 || (otherRec.sym__0___45_517725291345247341 != sym__0___45_517725291345247341 || (otherRec.sym__0___45_1274865342338026396 != sym__0___45_1274865342338026396 || (otherRec.sym__0__5989226753506632929 != sym__0__5989226753506632929 || (otherRec.sym__0___45_5104102107747484775 != sym__0___45_5104102107747484775 || (otherRec.sym__0__845953941670768600 != sym__0__845953941670768600 || (otherRec.sym__0__4163215005619532800 != sym__0__4163215005619532800 || (otherRec.sym__0__6549476080427480210 != sym__0__6549476080427480210 || (otherRec.sym__0__2790200619910287661 != sym__0__2790200619910287661 || (otherRec.sym__0___45_7868072875935261051 != sym__0___45_7868072875935261051 || (otherRec.sym__0__5192623653961885871 != sym__0__5192623653961885871 || (otherRec.sym__0___45_6620426807825431159 != sym__0___45_6620426807825431159 || (otherRec.sym__0__6415636528128403891 != sym__0__6415636528128403891 || (otherRec.sym__0___45_7823645749172626442 != sym__0___45_7823645749172626442 || (otherRec.sym__0__2549615706294044933 != sym__0__2549615706294044933 || (otherRec.sym__0___45_2740665641693505567 != sym__0___45_2740665641693505567 || (otherRec.sym__0___45_1783229466525166718 != sym__0___45_1783229466525166718 || (otherRec.sym__0__2964572898640888933 != sym__0__2964572898640888933 || (otherRec.sym__0___45_7646744647346812089 != sym__0___45_7646744647346812089 || (otherRec.sym__0___45_8890755693813724487 != sym__0___45_8890755693813724487 || (otherRec.sym__0___45_2078956440869557365 != sym__0___45_2078956440869557365 || (otherRec.sym__0___45_5867946786197862882 != sym__0___45_5867946786197862882 || (otherRec.sym__0___45_7326821984155681819 != sym__0___45_7326821984155681819 || (otherRec.sym__0__231907318709496409 != sym__0__231907318709496409 || (otherRec.sym__0__2688255008669304275 != sym__0__2688255008669304275 || (otherRec.sym__0___45_8703327832315381333 != sym__0___45_8703327832315381333 || (otherRec.sym__0__8210285234396302525 != sym__0__8210285234396302525 || (otherRec.sym__0___45_1083461131540582838 != sym__0___45_1083461131540582838 || (otherRec.sym__0___45_332988430765002305 != sym__0___45_332988430765002305 || (otherRec.sym__0___45_1396883304971201334 != sym__0___45_1396883304971201334 || (otherRec.sym__0___45_7885307500036326584 != sym__0___45_7885307500036326584 || (otherRec.sym__0__682239336532423467 != sym__0__682239336532423467 || (otherRec.sym__0___45_9059733160469762021 != sym__0___45_9059733160469762021 || (otherRec.sym__0___45_7496847221808812455 != sym__0___45_7496847221808812455 || (otherRec.sym__0__6851494848781582431 != sym__0__6851494848781582431 || (otherRec.sym__0___45_3179925554639845007 != sym__0___45_3179925554639845007 || (otherRec.sym__0__6226923395275405685 != sym__0__6226923395275405685 || (otherRec.sym__0__7704927979988596358 != sym__0__7704927979988596358 || (otherRec.sym__0__132562152831270940 != sym__0__132562152831270940 || (otherRec.sym__0___45_8948194292450663628 != sym__0___45_8948194292450663628 || (otherRec.sym__0___45_4156887634197537189 != sym__0___45_4156887634197537189 || (otherRec.sym__0___45_3535814603226201749 != sym__0___45_3535814603226201749 || (otherRec.sym__0___45_9042078870426525352 != sym__0___45_9042078870426525352 || (otherRec.sym__0___45_4764068575183756814 != sym__0___45_4764068575183756814 || (otherRec.sym__0__4398489032885548840 != sym__0__4398489032885548840 || (otherRec.sym__0__7599029514332915116 != sym__0__7599029514332915116 || (otherRec.sym__0___45_7529596597076085474 != sym__0___45_7529596597076085474 || (otherRec.sym__0__3609550136696087537 != sym__0__3609550136696087537 || otherRec.sym__0__6422429896779316872 != sym__0__6422429896779316872)))))))))))))))))))))))))))))))))))))))))))))))))))))))));
  }
  unsigned sym__0__3417884924835104469;
  fluidb_string<18> sym__0__9194555597461859141;
  fluidb_string<9> sym__0___45_4691860520184547445;
  fluidb_string<9> sym__0__3741070679626273796;
  unsigned sym__0__8840336534235481146;
  unsigned sym__0___45_2601796008016513516;
  fluidb_string<7> sym__0___45_3953136938130284179;
  unsigned sym__0__234071792478123262;
  unsigned sym__0___45_8604890310897105587;
  unsigned sym__0___45_2239084372876413259;
  unsigned sym__0___45_517725291345247341;
  unsigned sym__0___45_1274865342338026396;
  fluidb_string<15> sym__0__5989226753506632929;
  fluidb_string<2> sym__0___45_5104102107747484775;
  fluidb_string<2> sym__0__845953941670768600;
  fluidb_string<2> sym__0__4163215005619532800;
  fluidb_string<2> sym__0__6549476080427480210;
  unsigned sym__0__2790200619910287661;
  fluidb_string<18> sym__0___45_7868072875935261051;
  fluidb_string<40> sym__0__5192623653961885871;
  fluidb_string<11> sym__0___45_6620426807825431159;
  fluidb_string<15> sym__0__6415636528128403891;
  fluidb_string<13> sym__0___45_7823645749172626442;
  fluidb_string<15> sym__0__2549615706294044933;
  fluidb_string<21> sym__0___45_2740665641693505567;
  unsigned sym__0___45_1783229466525166718;
  fluidb_string<25> sym__0__2964572898640888933;
  fluidb_string<40> sym__0___45_7646744647346812089;
  fluidb_string<16> sym__0___45_8890755693813724487;
  fluidb_string<16> sym__0___45_2078956440869557365;
  fluidb_string<13> sym__0___45_5867946786197862882;
  fluidb_string<15> sym__0___45_7326821984155681819;
  unsigned sym__0__231907318709496409;
  int sym__0__2688255008669304275;
  unsigned sym__0___45_8703327832315381333;
  unsigned sym__0__8210285234396302525;
  unsigned sym__0___45_1083461131540582838;
  unsigned sym__0___45_332988430765002305;
  fluidb_string<21> sym__0___45_1396883304971201334;
  unsigned sym__0___45_7885307500036326584;
  fluidb_string<10> sym__0__682239336532423467;
  unsigned sym__0___45_9059733160469762021;
  double sym__0___45_7496847221808812455;
  unsigned sym__0__6851494848781582431;
  double sym__0___45_3179925554639845007;
  unsigned sym__0__6226923395275405685;
  unsigned sym__0__7704927979988596358;
  double sym__0__132562152831270940;
  fluidb_string<13> sym__0___45_8948194292450663628;
  unsigned sym__0___45_4156887634197537189;
  fluidb_string<55> sym__0___45_3535814603226201749;
  fluidb_string<25> sym__0___45_9042078870426525352;
  fluidb_string<7> sym__0___45_4764068575183756814;
  fluidb_string<10> sym__0__4398489032885548840;
  fluidb_string<11> sym__0__7599029514332915116;
  fluidb_string<25> sym__0___45_7529596597076085474;
  unsigned sym__0__3609550136696087537;
  fluidb_string<10> sym__0__6422429896779316872;
 private:
};


class CallableClass2 {
 public:
  bool operator()(const Record1& record0) {
    return ((like(record0.sym__0___45_7823645749172626442, "AMERICA") && like(record0.sym__0___45_5867946786197862882, "AMERICA")) && (like(record0.sym__0___45_9042078870426525352, "MFGR#1") || like(record0.sym__0___45_9042078870426525352, "MFGR#2")));
  }
  typedef bool Codomain;
  typedef Record1 Domain0;
 private:
};


class CallableClass11 {
 public:
  Record10 operator()(const Record6& record3) {
    return Record10(record3.sym__0___45_5677596107407519400, record3.sym__0___45_2044948362686327715);
  }
  typedef Record10 Codomain;
  typedef Record6 Domain0;
 private:
};


class CallableClass9 {
 public:
  Record4 operator()(const Record6& record3) {
    return Record4(vAggrFirst5(record3.sym__0___45_5677596107407519400), vAggrFirst7(record3.sym__0___45_2044948362686327715), vAggrSum8((record3.sym__0__9142595129731966875 - record3.sym__0__2065559644984295980)));
  }
  typedef Record4 Codomain;
  typedef Record6 Domain0;
 private:
  AggrFirst<unsigned> vAggrFirst5;
  AggrFirst<fluidb_string<15>> vAggrFirst7;
  AggrSum<unsigned> vAggrSum8;
};


class CallableClass13 {
 public:
  Record10 operator()(const Record4& record12) {
    return Record10(record12.sym__0___45_532509241117904863, record12.sym__0__6879476602096058762);
  }
  typedef Record10 Codomain;
  typedef Record4 Domain0;
 private:
};






int main() {
  // ForwardTrigger: (Just 
  //   (Right 
  //     [
  //      QSel 
  //         (P2 
  //           PAnd 
  //           (P2 
  //             PAnd 
  //             (P0 
  //               (R2 RLike 
  //                   (R0 (E0 (ESym "c_region"))) 
  //                   (R0 (E0 (EString "AMERICA"))))) 
  //             (P0 
  //               (R2 RLike 
  //                   (R0 (E0 (ESym "s_region"))) 
  //                   (R0 (E0 (EString "AMERICA")))))) 
  //           (P2 
  //             POr 
  //             (P0 
  //               (R2 RLike 
  //                   (R0 (E0 (ESym "p_mfgr"))) 
  //                   (R0 (E0 (EString "MFGR#1"))))) 
  //             (P0 
  //               (R2 RLike 
  //                   (R0 (E0 (ESym "p_mfgr"))) 
  //                   (R0 (E0 (EString "MFGR#2")))))))
  std::cout << "ForwardTrigger: (Just \n  (Right \n    [\n     QSel \n        (P2 \n          PAnd \n          (P2 \n            PAnd \n            (P0 \n              (R2 RLike \n                  (R0 (E0 (ESym \"c_region\"))) \n                  (R0 (E0 (EString \"AMERICA\"))))) \n            (P0 \n              (R2 RLike \n                  (R0 (E0 (ESym \"s_region\"))) \n                  (R0 (E0 (EString \"AMERICA\")))))) \n          (P2 \n            POr \n            (P0 \n              (R2 RLike \n                  (R0 (E0 (ESym \"p_mfgr\"))) \n                  (R0 (E0 (EString \"MFGR#1\"))))) \n            (P0 \n              (R2 RLike \n                  (R0 (E0 (ESym \"p_mfgr\"))) \n                  (R0 (E0 (EString \"MFGR#2\")))))))\n    ]))" << std::endl;
  {
    auto operation = mkSelect<CallableClass2>(Just<const std::string>("/tmp/fluidb_store/data290.dat"), Just<const std::string>("/tmp/fluidb_store/data291.dat"), "/tmp/fluidb_store/data286.dat");
    operation.run();
    operation.print_output(10);
  }
  // ForwardTrigger: (Just 
  //   (Right 
  //     [
  //      QGroup 
  //         [
  //          (ESym "d_year",E0 (NAggr AggrFirst (E0 (ESym "d_year")))),
  //          (ESym "c_nation",E0 (NAggr AggrFirst (E0 (ESym "c_nation")))),
  //          (
  //            ESym "profit",
  //            E0 
  //               (NAggr 
  //                 AggrSum 
  //                 (E2 ESub 
  //                     (E0 (ESym "lo_revenue")) 
  //                     (E0 (ESym "lo_supplycost"))))
  //           )
  //         ] 
  //         [E0 (ESym "d_year"),E0 (ESym "c_nation")]
  std::cout << "ForwardTrigger: (Just \n  (Right \n    [\n     QGroup \n        [\n         (ESym \"d_year\",E0 (NAggr AggrFirst (E0 (ESym \"d_year\")))),\n         (ESym \"c_nation\",E0 (NAggr AggrFirst (E0 (ESym \"c_nation\")))),\n         (\n           ESym \"profit\",\n           E0 \n              (NAggr \n                AggrSum \n                (E2 ESub \n                    (E0 (ESym \"lo_revenue\")) \n                    (E0 (ESym \"lo_supplycost\"))))\n          )\n        ] \n        [E0 (ESym \"d_year\"),E0 (ESym \"c_nation\")]\n    ]))" << std::endl;
  {
    auto operation = mkAggregation<CallableClass9, CallableClass11>(Just<const std::string>("/tmp/fluidb_store/data321.dat"), Just<const std::string>("/tmp/fluidb_store/data290.dat"), "/tmp/fluidb_store/data290.dat");
    operation.run();
    operation.print_output(10);
  }
  std::cout << "ForwardTrigger: (Just (Right [QSort [E0 (ESym \"d_year\"),E0 (ESym \"c_nation\")]]))" << std::endl;
  {
    auto operation = mkSort<CallableClass13>(Just<const std::string>("/tmp/fluidb_store/data322.dat"), Just<const std::string>("/tmp/fluidb_store/data321.dat"), "/tmp/fluidb_store/data321.dat");
    operation.run();
    operation.print_output(10);
  }
  return 0;
}
