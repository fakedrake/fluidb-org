#include <array>

#include <string>

#include <codegen.hh>
class Record3 {
 public:
  Record3(unsigned __sym__0__7006329499052305069, fluidb_string<18> __sym__0___45_7375008102809593795, fluidb_string<9> __sym__0__2242364852716712755, fluidb_string<9> __sym__0__6728315286780234668, unsigned __sym__0___45_8677392828688233166, unsigned __sym__0__18850878458266012, fluidb_string<7> __sym__0___45_1159840201402348011, unsigned __sym__0___45_5932405622557155626, unsigned __sym__0__3658619473869410293, unsigned __sym__0___45_2969077615773019251, unsigned __sym__0___45_7928450129262116629, unsigned __sym__0___45_5003085050689012084, fluidb_string<15> __sym__0___45_7233659590929121271, fluidb_string<2> __sym__0___45_8252988599155107311, fluidb_string<2> __sym__0___45_6694117543615583104, fluidb_string<2> __sym__0__1972896922281541208, fluidb_string<2> __sym__0__5700122004666508698, unsigned __sym__0__1994162191464814161, int __sym__0__1984067867163763371, unsigned __sym__0___45_7104475539713735981, unsigned __sym__0__655345745073949893, unsigned __sym__0___45_4852208023461630046, unsigned __sym__0___45_598227178364026473, fluidb_string<21> __sym__0__2417757603591057698, unsigned __sym__0___45_1241458878048723760, fluidb_string<10> __sym__0__9056114502195195731, unsigned __sym__0___45_364636368211538269, double __sym__0__5487193564431530577, unsigned __sym__0__1413667224251207351, double __sym__0__5863178220127954937, unsigned __sym__0__6560144715045217229, unsigned __sym__0__188275661929456398, double __sym__0___45_1513413182401850476, fluidb_string<13> __sym__0__326057931367946044, unsigned __sym__0__7186351916204705450, fluidb_string<25> __sym__0___45_1577817599228590883, fluidb_string<40> __sym__0___45_9214937451878055345, fluidb_string<16> __sym__0___45_34557952996518991, fluidb_string<16> __sym__0__1021755297466038067, fluidb_string<13> __sym__0___45_3581055782815722506, fluidb_string<15> __sym__0__1688219547246685533, unsigned __sym__0__2620353334396193365, fluidb_string<18> __sym__0___45_267780610899494147, fluidb_string<40> __sym__0__2680149802036874919, fluidb_string<11> __sym__0___45_7154879650325877919, fluidb_string<15> __sym__0___45_8331302550903876341, fluidb_string<13> __sym__0___45_1054571694106173922, fluidb_string<15> __sym__0___45_8919323026779499907, fluidb_string<21> __sym__0__8547044808085237001, unsigned __sym__0___45_3978399890453528733, fluidb_string<55> __sym__0___45_2093762769470357229, fluidb_string<25> __sym__0___45_62318847219994368, fluidb_string<7> __sym__0___45_4809984581900163974, fluidb_string<10> __sym__0__4388820372955556016, fluidb_string<11> __sym__0___45_6932155251265950204, fluidb_string<25> __sym__0___45_615799558530069258, unsigned __sym__0__2079736453969726841, fluidb_string<10> __sym__0__3389394596632584848) : sym__0__7006329499052305069(__sym__0__7006329499052305069), sym__0___45_7375008102809593795(__sym__0___45_7375008102809593795), sym__0__2242364852716712755(__sym__0__2242364852716712755), sym__0__6728315286780234668(__sym__0__6728315286780234668), sym__0___45_8677392828688233166(__sym__0___45_8677392828688233166), sym__0__18850878458266012(__sym__0__18850878458266012), sym__0___45_1159840201402348011(__sym__0___45_1159840201402348011), sym__0___45_5932405622557155626(__sym__0___45_5932405622557155626), sym__0__3658619473869410293(__sym__0__3658619473869410293), sym__0___45_2969077615773019251(__sym__0___45_2969077615773019251), sym__0___45_7928450129262116629(__sym__0___45_7928450129262116629), sym__0___45_5003085050689012084(__sym__0___45_5003085050689012084), sym__0___45_7233659590929121271(__sym__0___45_7233659590929121271), sym__0___45_8252988599155107311(__sym__0___45_8252988599155107311), sym__0___45_6694117543615583104(__sym__0___45_6694117543615583104), sym__0__1972896922281541208(__sym__0__1972896922281541208), sym__0__5700122004666508698(__sym__0__5700122004666508698), sym__0__1994162191464814161(__sym__0__1994162191464814161), sym__0__1984067867163763371(__sym__0__1984067867163763371), sym__0___45_7104475539713735981(__sym__0___45_7104475539713735981), sym__0__655345745073949893(__sym__0__655345745073949893), sym__0___45_4852208023461630046(__sym__0___45_4852208023461630046), sym__0___45_598227178364026473(__sym__0___45_598227178364026473), sym__0__2417757603591057698(__sym__0__2417757603591057698), sym__0___45_1241458878048723760(__sym__0___45_1241458878048723760), sym__0__9056114502195195731(__sym__0__9056114502195195731), sym__0___45_364636368211538269(__sym__0___45_364636368211538269), sym__0__5487193564431530577(__sym__0__5487193564431530577), sym__0__1413667224251207351(__sym__0__1413667224251207351), sym__0__5863178220127954937(__sym__0__5863178220127954937), sym__0__6560144715045217229(__sym__0__6560144715045217229), sym__0__188275661929456398(__sym__0__188275661929456398), sym__0___45_1513413182401850476(__sym__0___45_1513413182401850476), sym__0__326057931367946044(__sym__0__326057931367946044), sym__0__7186351916204705450(__sym__0__7186351916204705450), sym__0___45_1577817599228590883(__sym__0___45_1577817599228590883), sym__0___45_9214937451878055345(__sym__0___45_9214937451878055345), sym__0___45_34557952996518991(__sym__0___45_34557952996518991), sym__0__1021755297466038067(__sym__0__1021755297466038067), sym__0___45_3581055782815722506(__sym__0___45_3581055782815722506), sym__0__1688219547246685533(__sym__0__1688219547246685533), sym__0__2620353334396193365(__sym__0__2620353334396193365), sym__0___45_267780610899494147(__sym__0___45_267780610899494147), sym__0__2680149802036874919(__sym__0__2680149802036874919), sym__0___45_7154879650325877919(__sym__0___45_7154879650325877919), sym__0___45_8331302550903876341(__sym__0___45_8331302550903876341), sym__0___45_1054571694106173922(__sym__0___45_1054571694106173922), sym__0___45_8919323026779499907(__sym__0___45_8919323026779499907), sym__0__8547044808085237001(__sym__0__8547044808085237001), sym__0___45_3978399890453528733(__sym__0___45_3978399890453528733), sym__0___45_2093762769470357229(__sym__0___45_2093762769470357229), sym__0___45_62318847219994368(__sym__0___45_62318847219994368), sym__0___45_4809984581900163974(__sym__0___45_4809984581900163974), sym__0__4388820372955556016(__sym__0__4388820372955556016), sym__0___45_6932155251265950204(__sym__0___45_6932155251265950204), sym__0___45_615799558530069258(__sym__0___45_615799558530069258), sym__0__2079736453969726841(__sym__0__2079736453969726841), sym__0__3389394596632584848(__sym__0__3389394596632584848)
  {
  }
  Record3() 
  {
  }
  std::string show() const{
    std::stringstream o;
    o << sym__0__7006329499052305069 << " | " << arrToString(sym__0___45_7375008102809593795) << " | " << arrToString(sym__0__2242364852716712755) << " | " << arrToString(sym__0__6728315286780234668) << " | " << sym__0___45_8677392828688233166 << " | " << sym__0__18850878458266012 << " | " << arrToString(sym__0___45_1159840201402348011) << " | " << sym__0___45_5932405622557155626 << " | " << sym__0__3658619473869410293 << " | " << sym__0___45_2969077615773019251 << " | " << sym__0___45_7928450129262116629 << " | " << sym__0___45_5003085050689012084 << " | " << arrToString(sym__0___45_7233659590929121271) << " | " << arrToString(sym__0___45_8252988599155107311) << " | " << arrToString(sym__0___45_6694117543615583104) << " | " << arrToString(sym__0__1972896922281541208) << " | " << arrToString(sym__0__5700122004666508698) << " | " << sym__0__1994162191464814161 << " | " << sym__0__1984067867163763371 << " | " << sym__0___45_7104475539713735981 << " | " << sym__0__655345745073949893 << " | " << sym__0___45_4852208023461630046 << " | " << sym__0___45_598227178364026473 << " | " << arrToString(sym__0__2417757603591057698) << " | " << sym__0___45_1241458878048723760 << " | " << arrToString(sym__0__9056114502195195731) << " | " << sym__0___45_364636368211538269 << " | " << sym__0__5487193564431530577 << " | " << sym__0__1413667224251207351 << " | " << sym__0__5863178220127954937 << " | " << sym__0__6560144715045217229 << " | " << sym__0__188275661929456398 << " | " << sym__0___45_1513413182401850476 << " | " << arrToString(sym__0__326057931367946044) << " | " << sym__0__7186351916204705450 << " | " << arrToString(sym__0___45_1577817599228590883) << " | " << arrToString(sym__0___45_9214937451878055345) << " | " << arrToString(sym__0___45_34557952996518991) << " | " << arrToString(sym__0__1021755297466038067) << " | " << arrToString(sym__0___45_3581055782815722506) << " | " << arrToString(sym__0__1688219547246685533) << " | " << sym__0__2620353334396193365 << " | " << arrToString(sym__0___45_267780610899494147) << " | " << arrToString(sym__0__2680149802036874919) << " | " << arrToString(sym__0___45_7154879650325877919) << " | " << arrToString(sym__0___45_8331302550903876341) << " | " << arrToString(sym__0___45_1054571694106173922) << " | " << arrToString(sym__0___45_8919323026779499907) << " | " << arrToString(sym__0__8547044808085237001) << " | " << sym__0___45_3978399890453528733 << " | " << arrToString(sym__0___45_2093762769470357229) << " | " << arrToString(sym__0___45_62318847219994368) << " | " << arrToString(sym__0___45_4809984581900163974) << " | " << arrToString(sym__0__4388820372955556016) << " | " << arrToString(sym__0___45_6932155251265950204) << " | " << arrToString(sym__0___45_615799558530069258) << " | " << sym__0__2079736453969726841 << " | " << arrToString(sym__0__3389394596632584848);
    return o.str();
  }
  bool operator <(const Record3& otherRec) const{
    return (otherRec.sym__0__7006329499052305069 < sym__0__7006329499052305069 && (otherRec.sym__0___45_7375008102809593795 < sym__0___45_7375008102809593795 && (otherRec.sym__0__2242364852716712755 < sym__0__2242364852716712755 && (otherRec.sym__0__6728315286780234668 < sym__0__6728315286780234668 && (otherRec.sym__0___45_8677392828688233166 < sym__0___45_8677392828688233166 && (otherRec.sym__0__18850878458266012 < sym__0__18850878458266012 && (otherRec.sym__0___45_1159840201402348011 < sym__0___45_1159840201402348011 && (otherRec.sym__0___45_5932405622557155626 < sym__0___45_5932405622557155626 && (otherRec.sym__0__3658619473869410293 < sym__0__3658619473869410293 && (otherRec.sym__0___45_2969077615773019251 < sym__0___45_2969077615773019251 && (otherRec.sym__0___45_7928450129262116629 < sym__0___45_7928450129262116629 && (otherRec.sym__0___45_5003085050689012084 < sym__0___45_5003085050689012084 && (otherRec.sym__0___45_7233659590929121271 < sym__0___45_7233659590929121271 && (otherRec.sym__0___45_8252988599155107311 < sym__0___45_8252988599155107311 && (otherRec.sym__0___45_6694117543615583104 < sym__0___45_6694117543615583104 && (otherRec.sym__0__1972896922281541208 < sym__0__1972896922281541208 && (otherRec.sym__0__5700122004666508698 < sym__0__5700122004666508698 && (otherRec.sym__0__1994162191464814161 < sym__0__1994162191464814161 && (otherRec.sym__0__1984067867163763371 < sym__0__1984067867163763371 && (otherRec.sym__0___45_7104475539713735981 < sym__0___45_7104475539713735981 && (otherRec.sym__0__655345745073949893 < sym__0__655345745073949893 && (otherRec.sym__0___45_4852208023461630046 < sym__0___45_4852208023461630046 && (otherRec.sym__0___45_598227178364026473 < sym__0___45_598227178364026473 && (otherRec.sym__0__2417757603591057698 < sym__0__2417757603591057698 && (otherRec.sym__0___45_1241458878048723760 < sym__0___45_1241458878048723760 && (otherRec.sym__0__9056114502195195731 < sym__0__9056114502195195731 && (otherRec.sym__0___45_364636368211538269 < sym__0___45_364636368211538269 && (otherRec.sym__0__5487193564431530577 < sym__0__5487193564431530577 && (otherRec.sym__0__1413667224251207351 < sym__0__1413667224251207351 && (otherRec.sym__0__5863178220127954937 < sym__0__5863178220127954937 && (otherRec.sym__0__6560144715045217229 < sym__0__6560144715045217229 && (otherRec.sym__0__188275661929456398 < sym__0__188275661929456398 && (otherRec.sym__0___45_1513413182401850476 < sym__0___45_1513413182401850476 && (otherRec.sym__0__326057931367946044 < sym__0__326057931367946044 && (otherRec.sym__0__7186351916204705450 < sym__0__7186351916204705450 && (otherRec.sym__0___45_1577817599228590883 < sym__0___45_1577817599228590883 && (otherRec.sym__0___45_9214937451878055345 < sym__0___45_9214937451878055345 && (otherRec.sym__0___45_34557952996518991 < sym__0___45_34557952996518991 && (otherRec.sym__0__1021755297466038067 < sym__0__1021755297466038067 && (otherRec.sym__0___45_3581055782815722506 < sym__0___45_3581055782815722506 && (otherRec.sym__0__1688219547246685533 < sym__0__1688219547246685533 && (otherRec.sym__0__2620353334396193365 < sym__0__2620353334396193365 && (otherRec.sym__0___45_267780610899494147 < sym__0___45_267780610899494147 && (otherRec.sym__0__2680149802036874919 < sym__0__2680149802036874919 && (otherRec.sym__0___45_7154879650325877919 < sym__0___45_7154879650325877919 && (otherRec.sym__0___45_8331302550903876341 < sym__0___45_8331302550903876341 && (otherRec.sym__0___45_1054571694106173922 < sym__0___45_1054571694106173922 && (otherRec.sym__0___45_8919323026779499907 < sym__0___45_8919323026779499907 && (otherRec.sym__0__8547044808085237001 < sym__0__8547044808085237001 && (otherRec.sym__0___45_3978399890453528733 < sym__0___45_3978399890453528733 && (otherRec.sym__0___45_2093762769470357229 < sym__0___45_2093762769470357229 && (otherRec.sym__0___45_62318847219994368 < sym__0___45_62318847219994368 && (otherRec.sym__0___45_4809984581900163974 < sym__0___45_4809984581900163974 && (otherRec.sym__0__4388820372955556016 < sym__0__4388820372955556016 && (otherRec.sym__0___45_6932155251265950204 < sym__0___45_6932155251265950204 && (otherRec.sym__0___45_615799558530069258 < sym__0___45_615799558530069258 && (otherRec.sym__0__2079736453969726841 < sym__0__2079736453969726841 && otherRec.sym__0__3389394596632584848 < sym__0__3389394596632584848)))))))))))))))))))))))))))))))))))))))))))))))))))))))));
  }
  bool operator ==(const Record3& otherRec) const{
    return (otherRec.sym__0__7006329499052305069 == sym__0__7006329499052305069 && (otherRec.sym__0___45_7375008102809593795 == sym__0___45_7375008102809593795 && (otherRec.sym__0__2242364852716712755 == sym__0__2242364852716712755 && (otherRec.sym__0__6728315286780234668 == sym__0__6728315286780234668 && (otherRec.sym__0___45_8677392828688233166 == sym__0___45_8677392828688233166 && (otherRec.sym__0__18850878458266012 == sym__0__18850878458266012 && (otherRec.sym__0___45_1159840201402348011 == sym__0___45_1159840201402348011 && (otherRec.sym__0___45_5932405622557155626 == sym__0___45_5932405622557155626 && (otherRec.sym__0__3658619473869410293 == sym__0__3658619473869410293 && (otherRec.sym__0___45_2969077615773019251 == sym__0___45_2969077615773019251 && (otherRec.sym__0___45_7928450129262116629 == sym__0___45_7928450129262116629 && (otherRec.sym__0___45_5003085050689012084 == sym__0___45_5003085050689012084 && (otherRec.sym__0___45_7233659590929121271 == sym__0___45_7233659590929121271 && (otherRec.sym__0___45_8252988599155107311 == sym__0___45_8252988599155107311 && (otherRec.sym__0___45_6694117543615583104 == sym__0___45_6694117543615583104 && (otherRec.sym__0__1972896922281541208 == sym__0__1972896922281541208 && (otherRec.sym__0__5700122004666508698 == sym__0__5700122004666508698 && (otherRec.sym__0__1994162191464814161 == sym__0__1994162191464814161 && (otherRec.sym__0__1984067867163763371 == sym__0__1984067867163763371 && (otherRec.sym__0___45_7104475539713735981 == sym__0___45_7104475539713735981 && (otherRec.sym__0__655345745073949893 == sym__0__655345745073949893 && (otherRec.sym__0___45_4852208023461630046 == sym__0___45_4852208023461630046 && (otherRec.sym__0___45_598227178364026473 == sym__0___45_598227178364026473 && (otherRec.sym__0__2417757603591057698 == sym__0__2417757603591057698 && (otherRec.sym__0___45_1241458878048723760 == sym__0___45_1241458878048723760 && (otherRec.sym__0__9056114502195195731 == sym__0__9056114502195195731 && (otherRec.sym__0___45_364636368211538269 == sym__0___45_364636368211538269 && (otherRec.sym__0__5487193564431530577 == sym__0__5487193564431530577 && (otherRec.sym__0__1413667224251207351 == sym__0__1413667224251207351 && (otherRec.sym__0__5863178220127954937 == sym__0__5863178220127954937 && (otherRec.sym__0__6560144715045217229 == sym__0__6560144715045217229 && (otherRec.sym__0__188275661929456398 == sym__0__188275661929456398 && (otherRec.sym__0___45_1513413182401850476 == sym__0___45_1513413182401850476 && (otherRec.sym__0__326057931367946044 == sym__0__326057931367946044 && (otherRec.sym__0__7186351916204705450 == sym__0__7186351916204705450 && (otherRec.sym__0___45_1577817599228590883 == sym__0___45_1577817599228590883 && (otherRec.sym__0___45_9214937451878055345 == sym__0___45_9214937451878055345 && (otherRec.sym__0___45_34557952996518991 == sym__0___45_34557952996518991 && (otherRec.sym__0__1021755297466038067 == sym__0__1021755297466038067 && (otherRec.sym__0___45_3581055782815722506 == sym__0___45_3581055782815722506 && (otherRec.sym__0__1688219547246685533 == sym__0__1688219547246685533 && (otherRec.sym__0__2620353334396193365 == sym__0__2620353334396193365 && (otherRec.sym__0___45_267780610899494147 == sym__0___45_267780610899494147 && (otherRec.sym__0__2680149802036874919 == sym__0__2680149802036874919 && (otherRec.sym__0___45_7154879650325877919 == sym__0___45_7154879650325877919 && (otherRec.sym__0___45_8331302550903876341 == sym__0___45_8331302550903876341 && (otherRec.sym__0___45_1054571694106173922 == sym__0___45_1054571694106173922 && (otherRec.sym__0___45_8919323026779499907 == sym__0___45_8919323026779499907 && (otherRec.sym__0__8547044808085237001 == sym__0__8547044808085237001 && (otherRec.sym__0___45_3978399890453528733 == sym__0___45_3978399890453528733 && (otherRec.sym__0___45_2093762769470357229 == sym__0___45_2093762769470357229 && (otherRec.sym__0___45_62318847219994368 == sym__0___45_62318847219994368 && (otherRec.sym__0___45_4809984581900163974 == sym__0___45_4809984581900163974 && (otherRec.sym__0__4388820372955556016 == sym__0__4388820372955556016 && (otherRec.sym__0___45_6932155251265950204 == sym__0___45_6932155251265950204 && (otherRec.sym__0___45_615799558530069258 == sym__0___45_615799558530069258 && (otherRec.sym__0__2079736453969726841 == sym__0__2079736453969726841 && otherRec.sym__0__3389394596632584848 == sym__0__3389394596632584848)))))))))))))))))))))))))))))))))))))))))))))))))))))))));
  }
  bool operator !=(const Record3& otherRec) const{
    return (otherRec.sym__0__7006329499052305069 != sym__0__7006329499052305069 || (otherRec.sym__0___45_7375008102809593795 != sym__0___45_7375008102809593795 || (otherRec.sym__0__2242364852716712755 != sym__0__2242364852716712755 || (otherRec.sym__0__6728315286780234668 != sym__0__6728315286780234668 || (otherRec.sym__0___45_8677392828688233166 != sym__0___45_8677392828688233166 || (otherRec.sym__0__18850878458266012 != sym__0__18850878458266012 || (otherRec.sym__0___45_1159840201402348011 != sym__0___45_1159840201402348011 || (otherRec.sym__0___45_5932405622557155626 != sym__0___45_5932405622557155626 || (otherRec.sym__0__3658619473869410293 != sym__0__3658619473869410293 || (otherRec.sym__0___45_2969077615773019251 != sym__0___45_2969077615773019251 || (otherRec.sym__0___45_7928450129262116629 != sym__0___45_7928450129262116629 || (otherRec.sym__0___45_5003085050689012084 != sym__0___45_5003085050689012084 || (otherRec.sym__0___45_7233659590929121271 != sym__0___45_7233659590929121271 || (otherRec.sym__0___45_8252988599155107311 != sym__0___45_8252988599155107311 || (otherRec.sym__0___45_6694117543615583104 != sym__0___45_6694117543615583104 || (otherRec.sym__0__1972896922281541208 != sym__0__1972896922281541208 || (otherRec.sym__0__5700122004666508698 != sym__0__5700122004666508698 || (otherRec.sym__0__1994162191464814161 != sym__0__1994162191464814161 || (otherRec.sym__0__1984067867163763371 != sym__0__1984067867163763371 || (otherRec.sym__0___45_7104475539713735981 != sym__0___45_7104475539713735981 || (otherRec.sym__0__655345745073949893 != sym__0__655345745073949893 || (otherRec.sym__0___45_4852208023461630046 != sym__0___45_4852208023461630046 || (otherRec.sym__0___45_598227178364026473 != sym__0___45_598227178364026473 || (otherRec.sym__0__2417757603591057698 != sym__0__2417757603591057698 || (otherRec.sym__0___45_1241458878048723760 != sym__0___45_1241458878048723760 || (otherRec.sym__0__9056114502195195731 != sym__0__9056114502195195731 || (otherRec.sym__0___45_364636368211538269 != sym__0___45_364636368211538269 || (otherRec.sym__0__5487193564431530577 != sym__0__5487193564431530577 || (otherRec.sym__0__1413667224251207351 != sym__0__1413667224251207351 || (otherRec.sym__0__5863178220127954937 != sym__0__5863178220127954937 || (otherRec.sym__0__6560144715045217229 != sym__0__6560144715045217229 || (otherRec.sym__0__188275661929456398 != sym__0__188275661929456398 || (otherRec.sym__0___45_1513413182401850476 != sym__0___45_1513413182401850476 || (otherRec.sym__0__326057931367946044 != sym__0__326057931367946044 || (otherRec.sym__0__7186351916204705450 != sym__0__7186351916204705450 || (otherRec.sym__0___45_1577817599228590883 != sym__0___45_1577817599228590883 || (otherRec.sym__0___45_9214937451878055345 != sym__0___45_9214937451878055345 || (otherRec.sym__0___45_34557952996518991 != sym__0___45_34557952996518991 || (otherRec.sym__0__1021755297466038067 != sym__0__1021755297466038067 || (otherRec.sym__0___45_3581055782815722506 != sym__0___45_3581055782815722506 || (otherRec.sym__0__1688219547246685533 != sym__0__1688219547246685533 || (otherRec.sym__0__2620353334396193365 != sym__0__2620353334396193365 || (otherRec.sym__0___45_267780610899494147 != sym__0___45_267780610899494147 || (otherRec.sym__0__2680149802036874919 != sym__0__2680149802036874919 || (otherRec.sym__0___45_7154879650325877919 != sym__0___45_7154879650325877919 || (otherRec.sym__0___45_8331302550903876341 != sym__0___45_8331302550903876341 || (otherRec.sym__0___45_1054571694106173922 != sym__0___45_1054571694106173922 || (otherRec.sym__0___45_8919323026779499907 != sym__0___45_8919323026779499907 || (otherRec.sym__0__8547044808085237001 != sym__0__8547044808085237001 || (otherRec.sym__0___45_3978399890453528733 != sym__0___45_3978399890453528733 || (otherRec.sym__0___45_2093762769470357229 != sym__0___45_2093762769470357229 || (otherRec.sym__0___45_62318847219994368 != sym__0___45_62318847219994368 || (otherRec.sym__0___45_4809984581900163974 != sym__0___45_4809984581900163974 || (otherRec.sym__0__4388820372955556016 != sym__0__4388820372955556016 || (otherRec.sym__0___45_6932155251265950204 != sym__0___45_6932155251265950204 || (otherRec.sym__0___45_615799558530069258 != sym__0___45_615799558530069258 || (otherRec.sym__0__2079736453969726841 != sym__0__2079736453969726841 || otherRec.sym__0__3389394596632584848 != sym__0__3389394596632584848)))))))))))))))))))))))))))))))))))))))))))))))))))))))));
  }
  unsigned sym__0__7006329499052305069;
  fluidb_string<18> sym__0___45_7375008102809593795;
  fluidb_string<9> sym__0__2242364852716712755;
  fluidb_string<9> sym__0__6728315286780234668;
  unsigned sym__0___45_8677392828688233166;
  unsigned sym__0__18850878458266012;
  fluidb_string<7> sym__0___45_1159840201402348011;
  unsigned sym__0___45_5932405622557155626;
  unsigned sym__0__3658619473869410293;
  unsigned sym__0___45_2969077615773019251;
  unsigned sym__0___45_7928450129262116629;
  unsigned sym__0___45_5003085050689012084;
  fluidb_string<15> sym__0___45_7233659590929121271;
  fluidb_string<2> sym__0___45_8252988599155107311;
  fluidb_string<2> sym__0___45_6694117543615583104;
  fluidb_string<2> sym__0__1972896922281541208;
  fluidb_string<2> sym__0__5700122004666508698;
  unsigned sym__0__1994162191464814161;
  int sym__0__1984067867163763371;
  unsigned sym__0___45_7104475539713735981;
  unsigned sym__0__655345745073949893;
  unsigned sym__0___45_4852208023461630046;
  unsigned sym__0___45_598227178364026473;
  fluidb_string<21> sym__0__2417757603591057698;
  unsigned sym__0___45_1241458878048723760;
  fluidb_string<10> sym__0__9056114502195195731;
  unsigned sym__0___45_364636368211538269;
  double sym__0__5487193564431530577;
  unsigned sym__0__1413667224251207351;
  double sym__0__5863178220127954937;
  unsigned sym__0__6560144715045217229;
  unsigned sym__0__188275661929456398;
  double sym__0___45_1513413182401850476;
  fluidb_string<13> sym__0__326057931367946044;
  unsigned sym__0__7186351916204705450;
  fluidb_string<25> sym__0___45_1577817599228590883;
  fluidb_string<40> sym__0___45_9214937451878055345;
  fluidb_string<16> sym__0___45_34557952996518991;
  fluidb_string<16> sym__0__1021755297466038067;
  fluidb_string<13> sym__0___45_3581055782815722506;
  fluidb_string<15> sym__0__1688219547246685533;
  unsigned sym__0__2620353334396193365;
  fluidb_string<18> sym__0___45_267780610899494147;
  fluidb_string<40> sym__0__2680149802036874919;
  fluidb_string<11> sym__0___45_7154879650325877919;
  fluidb_string<15> sym__0___45_8331302550903876341;
  fluidb_string<13> sym__0___45_1054571694106173922;
  fluidb_string<15> sym__0___45_8919323026779499907;
  fluidb_string<21> sym__0__8547044808085237001;
  unsigned sym__0___45_3978399890453528733;
  fluidb_string<55> sym__0___45_2093762769470357229;
  fluidb_string<25> sym__0___45_62318847219994368;
  fluidb_string<7> sym__0___45_4809984581900163974;
  fluidb_string<10> sym__0__4388820372955556016;
  fluidb_string<11> sym__0___45_6932155251265950204;
  fluidb_string<25> sym__0___45_615799558530069258;
  unsigned sym__0__2079736453969726841;
  fluidb_string<10> sym__0__3389394596632584848;
 private:
};


class Record1 {
 public:
  Record1(unsigned __sym__0__2350038716092382120, fluidb_string<16> __sym__0__8611344027404304067, fluidb_string<7> __sym__0__8346724432435993936, unsigned __sym__0___45_2862115392470135952) : sym__0__2350038716092382120(__sym__0__2350038716092382120), sym__0__8611344027404304067(__sym__0__8611344027404304067), sym__0__8346724432435993936(__sym__0__8346724432435993936), sym__0___45_2862115392470135952(__sym__0___45_2862115392470135952)
  {
  }
  Record1() 
  {
  }
  std::string show() const{
    std::stringstream o;
    o << sym__0__2350038716092382120 << " | " << arrToString(sym__0__8611344027404304067) << " | " << arrToString(sym__0__8346724432435993936) << " | " << sym__0___45_2862115392470135952;
    return o.str();
  }
  bool operator <(const Record1& otherRec) const{
    return (otherRec.sym__0__2350038716092382120 < sym__0__2350038716092382120 && (otherRec.sym__0__8611344027404304067 < sym__0__8611344027404304067 && (otherRec.sym__0__8346724432435993936 < sym__0__8346724432435993936 && otherRec.sym__0___45_2862115392470135952 < sym__0___45_2862115392470135952)));
  }
  bool operator ==(const Record1& otherRec) const{
    return (otherRec.sym__0__2350038716092382120 == sym__0__2350038716092382120 && (otherRec.sym__0__8611344027404304067 == sym__0__8611344027404304067 && (otherRec.sym__0__8346724432435993936 == sym__0__8346724432435993936 && otherRec.sym__0___45_2862115392470135952 == sym__0___45_2862115392470135952)));
  }
  bool operator !=(const Record1& otherRec) const{
    return (otherRec.sym__0__2350038716092382120 != sym__0__2350038716092382120 || (otherRec.sym__0__8611344027404304067 != sym__0__8611344027404304067 || (otherRec.sym__0__8346724432435993936 != sym__0__8346724432435993936 || otherRec.sym__0___45_2862115392470135952 != sym__0___45_2862115392470135952)));
  }
  unsigned sym__0__2350038716092382120;
  fluidb_string<16> sym__0__8611344027404304067;
  fluidb_string<7> sym__0__8346724432435993936;
  unsigned sym__0___45_2862115392470135952;
 private:
};


class Record8 {
 public:
  Record8(unsigned __sortElem0, fluidb_string<16> __sortElem1, fluidb_string<7> __sortElem2) : sortElem0(__sortElem0), sortElem1(__sortElem1), sortElem2(__sortElem2)
  {
  }
  Record8() 
  {
  }
  std::string show() const{
    std::stringstream o;
    o << sortElem0 << " | " << arrToString(sortElem1) << " | " << arrToString(sortElem2);
    return o.str();
  }
  bool operator <(const Record8& otherRec) const{
    return (otherRec.sortElem0 < sortElem0 && (otherRec.sortElem1 < sortElem1 && otherRec.sortElem2 < sortElem2));
  }
  bool operator ==(const Record8& otherRec) const{
    return (otherRec.sortElem0 == sortElem0 && (otherRec.sortElem1 == sortElem1 && otherRec.sortElem2 == sortElem2));
  }
  bool operator !=(const Record8& otherRec) const{
    return (otherRec.sortElem0 != sortElem0 || (otherRec.sortElem1 != sortElem1 || otherRec.sortElem2 != sortElem2));
  }
  unsigned sortElem0;
  fluidb_string<16> sortElem1;
  fluidb_string<7> sortElem2;
 private:
};


class CallableClass7 {
 public:
  Record1 operator()(const Record3& record0) {
    return Record1(vAggrFirst2(record0.sym__0___45_8677392828688233166), vAggrFirst4(record0.sym__0__1021755297466038067), vAggrFirst5(record0.sym__0___45_4809984581900163974), vAggrSum6((record0.sym__0__6560144715045217229 - record0.sym__0__188275661929456398)));
  }
  typedef Record1 Codomain;
  typedef Record3 Domain0;
 private:
  AggrFirst<unsigned> vAggrFirst2;
  AggrFirst<fluidb_string<16>> vAggrFirst4;
  AggrFirst<fluidb_string<7>> vAggrFirst5;
  AggrSum<unsigned> vAggrSum6;
};


class CallableClass9 {
 public:
  Record8 operator()(const Record3& record0) {
    return Record8(record0.sym__0___45_8677392828688233166, record0.sym__0__1021755297466038067, record0.sym__0___45_4809984581900163974);
  }
  typedef Record8 Codomain;
  typedef Record3 Domain0;
 private:
};


class CallableClass11 {
 public:
  Record8 operator()(const Record1& record10) {
    return Record8(record10.sym__0__2350038716092382120, record10.sym__0__8611344027404304067, record10.sym__0__8346724432435993936);
  }
  typedef Record8 Codomain;
  typedef Record1 Domain0;
 private:
};






int main() {
  // ForwardTrigger: (Just 
  //   (Right 
  //     [
  //      QGroup 
  //         [
  //          (ESym "d_year",E0 (NAggr AggrFirst (E0 (ESym "d_year")))),
  //          (ESym "s_nation",E0 (NAggr AggrFirst (E0 (ESym "s_nation")))),
  //          (ESym "p_category",
  //           E0 (NAggr AggrFirst (E0 (ESym "p_category")))),
  //          (
  //            ESym "profit",
  //            E0 
  //               (NAggr 
  //                 AggrSum 
  //                 (E2 ESub 
  //                     (E0 (ESym "lo_revenue")) 
  //                     (E0 (ESym "lo_supplycost"))))
  //           )
  //         ] 
  //         [E0 (ESym "d_year"),E0 (ESym "s_nation"),E0 (ESym "p_category")]
  std::cout << "ForwardTrigger: (Just \n  (Right \n    [\n     QGroup \n        [\n         (ESym \"d_year\",E0 (NAggr AggrFirst (E0 (ESym \"d_year\")))),\n         (ESym \"s_nation\",E0 (NAggr AggrFirst (E0 (ESym \"s_nation\")))),\n         (ESym \"p_category\",\n          E0 (NAggr AggrFirst (E0 (ESym \"p_category\")))),\n         (\n           ESym \"profit\",\n           E0 \n              (NAggr \n                AggrSum \n                (E2 ESub \n                    (E0 (ESym \"lo_revenue\")) \n                    (E0 (ESym \"lo_supplycost\"))))\n          )\n        ] \n        [E0 (ESym \"d_year\"),E0 (ESym \"s_nation\"),E0 (ESym \"p_category\")]\n    ]))" << std::endl;
  {
    auto operation = mkAggregation<CallableClass7, CallableClass9>(Just<const std::string>("/tmp/fluidb_store/data341.dat"), Just<const std::string>("/tmp/fluidb_store/data313.dat"), "/tmp/fluidb_store/data313.dat");
    operation.run();
    operation.print_output(10);
  }
  // ForwardTrigger: (Just 
  //   (Right 
  //     [
  //      QSort 
  //         [E0 (ESym "d_year"),E0 (ESym "s_nation"),E0 (ESym "p_category")]
  std::cout << "ForwardTrigger: (Just \n  (Right \n    [\n     QSort \n        [E0 (ESym \"d_year\"),E0 (ESym \"s_nation\"),E0 (ESym \"p_category\")]\n    ]))" << std::endl;
  {
    auto operation = mkSort<CallableClass11>(Just<const std::string>("/tmp/fluidb_store/data342.dat"), Just<const std::string>("/tmp/fluidb_store/data341.dat"), "/tmp/fluidb_store/data341.dat");
    operation.run();
    operation.print_output(10);
  }
  report_counters();
  return 0;
}
