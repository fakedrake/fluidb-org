#include <array>

#include <string>

#include <codegen.hh>
class Record48 {
 public:
  Record48(unsigned __sortElem0, fluidb_string<10> __sortElem1) : sortElem0(__sortElem0), sortElem1(__sortElem1)
  {
  }
  Record48() 
  {
  }
  std::string show() const{
    std::stringstream o;
    o << sortElem0 << " | " << arrToString(sortElem1);
    return o.str();
  }
  bool operator <(const Record48& otherRec) const{
    return (otherRec.sortElem0 < sortElem0 && otherRec.sortElem1 < sortElem1);
  }
  bool operator ==(const Record48& otherRec) const{
    return (otherRec.sortElem0 == sortElem0 && otherRec.sortElem1 == sortElem1);
  }
  bool operator !=(const Record48& otherRec) const{
    return (otherRec.sortElem0 != sortElem0 || otherRec.sortElem1 != sortElem1);
  }
  unsigned sortElem0;
  fluidb_string<10> sortElem1;
 private:
};


class Record1 {
 public:
  Record1(unsigned __sym__0___45_8906884911160954364, fluidb_string<18> __sym__0__2799000292371979828, fluidb_string<9> __sym__0__8867920250735627162, fluidb_string<9> __sym__0___45_7576867150402000331, unsigned __sym__0___45_9125225545914939837, unsigned __sym__0__4589167397936411269, fluidb_string<7> __sym__0__8920142377705747532, unsigned __sym__0___45_4196858516486091897, unsigned __sym__0__1195773552714325740, unsigned __sym__0___45_38686532604732124, unsigned __sym__0__1274631840214437554, unsigned __sym__0__8445040522489018709, fluidb_string<15> __sym__0__2331348265799254080, fluidb_string<2> __sym__0___45_1510963300986711992, fluidb_string<2> __sym__0__5289830658136776009, fluidb_string<2> __sym__0__7499328126409916481, fluidb_string<2> __sym__0__7533033195406205003, unsigned __sym__0___45_6428147039213761908, fluidb_string<18> __sym__0__871736690247302132, fluidb_string<40> __sym__0___45_8362046498826819058, fluidb_string<11> __sym__0___45_7133132985918421512, fluidb_string<15> __sym__0___45_3959357838844936686, fluidb_string<13> __sym__0___45_7197031512662271633, fluidb_string<15> __sym__0__8583356070728849524, fluidb_string<21> __sym__0__1967597999057704256, unsigned __sym__0__5132421367677851272, int __sym__0__5071922315287763570, unsigned __sym__0___45_3637991104308692870, unsigned __sym__0__4948888373840408220, unsigned __sym__0___45_7808961130681314221, unsigned __sym__0__1746575405116951454, fluidb_string<21> __sym__0__2153939297276247251, unsigned __sym__0__5199185301403060729, fluidb_string<10> __sym__0__1712959636608595962, unsigned __sym__0___45_1741951889491243926, double __sym__0__227891603776809608, unsigned __sym__0__6207099447983295614, double __sym__0__335880342687986000, unsigned __sym__0__2784917890152007524, unsigned __sym__0___45_5840348331744817409, double __sym__0__3675426241071643741, fluidb_string<13> __sym__0___45_1268803172874807067, unsigned __sym__0__3110451695433832699, fluidb_string<25> __sym__0__5854013247755242004, fluidb_string<40> __sym__0___45_1478737863530599082, fluidb_string<16> __sym__0___45_6827442181954889560, fluidb_string<16> __sym__0__6943297173895896986, fluidb_string<13> __sym__0__5526031557462726759, fluidb_string<15> __sym__0__2016251883409854356) : sym__0___45_8906884911160954364(__sym__0___45_8906884911160954364), sym__0__2799000292371979828(__sym__0__2799000292371979828), sym__0__8867920250735627162(__sym__0__8867920250735627162), sym__0___45_7576867150402000331(__sym__0___45_7576867150402000331), sym__0___45_9125225545914939837(__sym__0___45_9125225545914939837), sym__0__4589167397936411269(__sym__0__4589167397936411269), sym__0__8920142377705747532(__sym__0__8920142377705747532), sym__0___45_4196858516486091897(__sym__0___45_4196858516486091897), sym__0__1195773552714325740(__sym__0__1195773552714325740), sym__0___45_38686532604732124(__sym__0___45_38686532604732124), sym__0__1274631840214437554(__sym__0__1274631840214437554), sym__0__8445040522489018709(__sym__0__8445040522489018709), sym__0__2331348265799254080(__sym__0__2331348265799254080), sym__0___45_1510963300986711992(__sym__0___45_1510963300986711992), sym__0__5289830658136776009(__sym__0__5289830658136776009), sym__0__7499328126409916481(__sym__0__7499328126409916481), sym__0__7533033195406205003(__sym__0__7533033195406205003), sym__0___45_6428147039213761908(__sym__0___45_6428147039213761908), sym__0__871736690247302132(__sym__0__871736690247302132), sym__0___45_8362046498826819058(__sym__0___45_8362046498826819058), sym__0___45_7133132985918421512(__sym__0___45_7133132985918421512), sym__0___45_3959357838844936686(__sym__0___45_3959357838844936686), sym__0___45_7197031512662271633(__sym__0___45_7197031512662271633), sym__0__8583356070728849524(__sym__0__8583356070728849524), sym__0__1967597999057704256(__sym__0__1967597999057704256), sym__0__5132421367677851272(__sym__0__5132421367677851272), sym__0__5071922315287763570(__sym__0__5071922315287763570), sym__0___45_3637991104308692870(__sym__0___45_3637991104308692870), sym__0__4948888373840408220(__sym__0__4948888373840408220), sym__0___45_7808961130681314221(__sym__0___45_7808961130681314221), sym__0__1746575405116951454(__sym__0__1746575405116951454), sym__0__2153939297276247251(__sym__0__2153939297276247251), sym__0__5199185301403060729(__sym__0__5199185301403060729), sym__0__1712959636608595962(__sym__0__1712959636608595962), sym__0___45_1741951889491243926(__sym__0___45_1741951889491243926), sym__0__227891603776809608(__sym__0__227891603776809608), sym__0__6207099447983295614(__sym__0__6207099447983295614), sym__0__335880342687986000(__sym__0__335880342687986000), sym__0__2784917890152007524(__sym__0__2784917890152007524), sym__0___45_5840348331744817409(__sym__0___45_5840348331744817409), sym__0__3675426241071643741(__sym__0__3675426241071643741), sym__0___45_1268803172874807067(__sym__0___45_1268803172874807067), sym__0__3110451695433832699(__sym__0__3110451695433832699), sym__0__5854013247755242004(__sym__0__5854013247755242004), sym__0___45_1478737863530599082(__sym__0___45_1478737863530599082), sym__0___45_6827442181954889560(__sym__0___45_6827442181954889560), sym__0__6943297173895896986(__sym__0__6943297173895896986), sym__0__5526031557462726759(__sym__0__5526031557462726759), sym__0__2016251883409854356(__sym__0__2016251883409854356)
  {
  }
  Record1() 
  {
  }
  std::string show() const{
    std::stringstream o;
    o << sym__0___45_8906884911160954364 << " | " << arrToString(sym__0__2799000292371979828) << " | " << arrToString(sym__0__8867920250735627162) << " | " << arrToString(sym__0___45_7576867150402000331) << " | " << sym__0___45_9125225545914939837 << " | " << sym__0__4589167397936411269 << " | " << arrToString(sym__0__8920142377705747532) << " | " << sym__0___45_4196858516486091897 << " | " << sym__0__1195773552714325740 << " | " << sym__0___45_38686532604732124 << " | " << sym__0__1274631840214437554 << " | " << sym__0__8445040522489018709 << " | " << arrToString(sym__0__2331348265799254080) << " | " << arrToString(sym__0___45_1510963300986711992) << " | " << arrToString(sym__0__5289830658136776009) << " | " << arrToString(sym__0__7499328126409916481) << " | " << arrToString(sym__0__7533033195406205003) << " | " << sym__0___45_6428147039213761908 << " | " << arrToString(sym__0__871736690247302132) << " | " << arrToString(sym__0___45_8362046498826819058) << " | " << arrToString(sym__0___45_7133132985918421512) << " | " << arrToString(sym__0___45_3959357838844936686) << " | " << arrToString(sym__0___45_7197031512662271633) << " | " << arrToString(sym__0__8583356070728849524) << " | " << arrToString(sym__0__1967597999057704256) << " | " << sym__0__5132421367677851272 << " | " << sym__0__5071922315287763570 << " | " << sym__0___45_3637991104308692870 << " | " << sym__0__4948888373840408220 << " | " << sym__0___45_7808961130681314221 << " | " << sym__0__1746575405116951454 << " | " << arrToString(sym__0__2153939297276247251) << " | " << sym__0__5199185301403060729 << " | " << arrToString(sym__0__1712959636608595962) << " | " << sym__0___45_1741951889491243926 << " | " << sym__0__227891603776809608 << " | " << sym__0__6207099447983295614 << " | " << sym__0__335880342687986000 << " | " << sym__0__2784917890152007524 << " | " << sym__0___45_5840348331744817409 << " | " << sym__0__3675426241071643741 << " | " << arrToString(sym__0___45_1268803172874807067) << " | " << sym__0__3110451695433832699 << " | " << arrToString(sym__0__5854013247755242004) << " | " << arrToString(sym__0___45_1478737863530599082) << " | " << arrToString(sym__0___45_6827442181954889560) << " | " << arrToString(sym__0__6943297173895896986) << " | " << arrToString(sym__0__5526031557462726759) << " | " << arrToString(sym__0__2016251883409854356);
    return o.str();
  }
  bool operator <(const Record1& otherRec) const{
    return (otherRec.sym__0___45_8906884911160954364 < sym__0___45_8906884911160954364 && (otherRec.sym__0__2799000292371979828 < sym__0__2799000292371979828 && (otherRec.sym__0__8867920250735627162 < sym__0__8867920250735627162 && (otherRec.sym__0___45_7576867150402000331 < sym__0___45_7576867150402000331 && (otherRec.sym__0___45_9125225545914939837 < sym__0___45_9125225545914939837 && (otherRec.sym__0__4589167397936411269 < sym__0__4589167397936411269 && (otherRec.sym__0__8920142377705747532 < sym__0__8920142377705747532 && (otherRec.sym__0___45_4196858516486091897 < sym__0___45_4196858516486091897 && (otherRec.sym__0__1195773552714325740 < sym__0__1195773552714325740 && (otherRec.sym__0___45_38686532604732124 < sym__0___45_38686532604732124 && (otherRec.sym__0__1274631840214437554 < sym__0__1274631840214437554 && (otherRec.sym__0__8445040522489018709 < sym__0__8445040522489018709 && (otherRec.sym__0__2331348265799254080 < sym__0__2331348265799254080 && (otherRec.sym__0___45_1510963300986711992 < sym__0___45_1510963300986711992 && (otherRec.sym__0__5289830658136776009 < sym__0__5289830658136776009 && (otherRec.sym__0__7499328126409916481 < sym__0__7499328126409916481 && (otherRec.sym__0__7533033195406205003 < sym__0__7533033195406205003 && (otherRec.sym__0___45_6428147039213761908 < sym__0___45_6428147039213761908 && (otherRec.sym__0__871736690247302132 < sym__0__871736690247302132 && (otherRec.sym__0___45_8362046498826819058 < sym__0___45_8362046498826819058 && (otherRec.sym__0___45_7133132985918421512 < sym__0___45_7133132985918421512 && (otherRec.sym__0___45_3959357838844936686 < sym__0___45_3959357838844936686 && (otherRec.sym__0___45_7197031512662271633 < sym__0___45_7197031512662271633 && (otherRec.sym__0__8583356070728849524 < sym__0__8583356070728849524 && (otherRec.sym__0__1967597999057704256 < sym__0__1967597999057704256 && (otherRec.sym__0__5132421367677851272 < sym__0__5132421367677851272 && (otherRec.sym__0__5071922315287763570 < sym__0__5071922315287763570 && (otherRec.sym__0___45_3637991104308692870 < sym__0___45_3637991104308692870 && (otherRec.sym__0__4948888373840408220 < sym__0__4948888373840408220 && (otherRec.sym__0___45_7808961130681314221 < sym__0___45_7808961130681314221 && (otherRec.sym__0__1746575405116951454 < sym__0__1746575405116951454 && (otherRec.sym__0__2153939297276247251 < sym__0__2153939297276247251 && (otherRec.sym__0__5199185301403060729 < sym__0__5199185301403060729 && (otherRec.sym__0__1712959636608595962 < sym__0__1712959636608595962 && (otherRec.sym__0___45_1741951889491243926 < sym__0___45_1741951889491243926 && (otherRec.sym__0__227891603776809608 < sym__0__227891603776809608 && (otherRec.sym__0__6207099447983295614 < sym__0__6207099447983295614 && (otherRec.sym__0__335880342687986000 < sym__0__335880342687986000 && (otherRec.sym__0__2784917890152007524 < sym__0__2784917890152007524 && (otherRec.sym__0___45_5840348331744817409 < sym__0___45_5840348331744817409 && (otherRec.sym__0__3675426241071643741 < sym__0__3675426241071643741 && (otherRec.sym__0___45_1268803172874807067 < sym__0___45_1268803172874807067 && (otherRec.sym__0__3110451695433832699 < sym__0__3110451695433832699 && (otherRec.sym__0__5854013247755242004 < sym__0__5854013247755242004 && (otherRec.sym__0___45_1478737863530599082 < sym__0___45_1478737863530599082 && (otherRec.sym__0___45_6827442181954889560 < sym__0___45_6827442181954889560 && (otherRec.sym__0__6943297173895896986 < sym__0__6943297173895896986 && (otherRec.sym__0__5526031557462726759 < sym__0__5526031557462726759 && otherRec.sym__0__2016251883409854356 < sym__0__2016251883409854356))))))))))))))))))))))))))))))))))))))))))))))));
  }
  bool operator ==(const Record1& otherRec) const{
    return (otherRec.sym__0___45_8906884911160954364 == sym__0___45_8906884911160954364 && (otherRec.sym__0__2799000292371979828 == sym__0__2799000292371979828 && (otherRec.sym__0__8867920250735627162 == sym__0__8867920250735627162 && (otherRec.sym__0___45_7576867150402000331 == sym__0___45_7576867150402000331 && (otherRec.sym__0___45_9125225545914939837 == sym__0___45_9125225545914939837 && (otherRec.sym__0__4589167397936411269 == sym__0__4589167397936411269 && (otherRec.sym__0__8920142377705747532 == sym__0__8920142377705747532 && (otherRec.sym__0___45_4196858516486091897 == sym__0___45_4196858516486091897 && (otherRec.sym__0__1195773552714325740 == sym__0__1195773552714325740 && (otherRec.sym__0___45_38686532604732124 == sym__0___45_38686532604732124 && (otherRec.sym__0__1274631840214437554 == sym__0__1274631840214437554 && (otherRec.sym__0__8445040522489018709 == sym__0__8445040522489018709 && (otherRec.sym__0__2331348265799254080 == sym__0__2331348265799254080 && (otherRec.sym__0___45_1510963300986711992 == sym__0___45_1510963300986711992 && (otherRec.sym__0__5289830658136776009 == sym__0__5289830658136776009 && (otherRec.sym__0__7499328126409916481 == sym__0__7499328126409916481 && (otherRec.sym__0__7533033195406205003 == sym__0__7533033195406205003 && (otherRec.sym__0___45_6428147039213761908 == sym__0___45_6428147039213761908 && (otherRec.sym__0__871736690247302132 == sym__0__871736690247302132 && (otherRec.sym__0___45_8362046498826819058 == sym__0___45_8362046498826819058 && (otherRec.sym__0___45_7133132985918421512 == sym__0___45_7133132985918421512 && (otherRec.sym__0___45_3959357838844936686 == sym__0___45_3959357838844936686 && (otherRec.sym__0___45_7197031512662271633 == sym__0___45_7197031512662271633 && (otherRec.sym__0__8583356070728849524 == sym__0__8583356070728849524 && (otherRec.sym__0__1967597999057704256 == sym__0__1967597999057704256 && (otherRec.sym__0__5132421367677851272 == sym__0__5132421367677851272 && (otherRec.sym__0__5071922315287763570 == sym__0__5071922315287763570 && (otherRec.sym__0___45_3637991104308692870 == sym__0___45_3637991104308692870 && (otherRec.sym__0__4948888373840408220 == sym__0__4948888373840408220 && (otherRec.sym__0___45_7808961130681314221 == sym__0___45_7808961130681314221 && (otherRec.sym__0__1746575405116951454 == sym__0__1746575405116951454 && (otherRec.sym__0__2153939297276247251 == sym__0__2153939297276247251 && (otherRec.sym__0__5199185301403060729 == sym__0__5199185301403060729 && (otherRec.sym__0__1712959636608595962 == sym__0__1712959636608595962 && (otherRec.sym__0___45_1741951889491243926 == sym__0___45_1741951889491243926 && (otherRec.sym__0__227891603776809608 == sym__0__227891603776809608 && (otherRec.sym__0__6207099447983295614 == sym__0__6207099447983295614 && (otherRec.sym__0__335880342687986000 == sym__0__335880342687986000 && (otherRec.sym__0__2784917890152007524 == sym__0__2784917890152007524 && (otherRec.sym__0___45_5840348331744817409 == sym__0___45_5840348331744817409 && (otherRec.sym__0__3675426241071643741 == sym__0__3675426241071643741 && (otherRec.sym__0___45_1268803172874807067 == sym__0___45_1268803172874807067 && (otherRec.sym__0__3110451695433832699 == sym__0__3110451695433832699 && (otherRec.sym__0__5854013247755242004 == sym__0__5854013247755242004 && (otherRec.sym__0___45_1478737863530599082 == sym__0___45_1478737863530599082 && (otherRec.sym__0___45_6827442181954889560 == sym__0___45_6827442181954889560 && (otherRec.sym__0__6943297173895896986 == sym__0__6943297173895896986 && (otherRec.sym__0__5526031557462726759 == sym__0__5526031557462726759 && otherRec.sym__0__2016251883409854356 == sym__0__2016251883409854356))))))))))))))))))))))))))))))))))))))))))))))));
  }
  bool operator !=(const Record1& otherRec) const{
    return (otherRec.sym__0___45_8906884911160954364 != sym__0___45_8906884911160954364 || (otherRec.sym__0__2799000292371979828 != sym__0__2799000292371979828 || (otherRec.sym__0__8867920250735627162 != sym__0__8867920250735627162 || (otherRec.sym__0___45_7576867150402000331 != sym__0___45_7576867150402000331 || (otherRec.sym__0___45_9125225545914939837 != sym__0___45_9125225545914939837 || (otherRec.sym__0__4589167397936411269 != sym__0__4589167397936411269 || (otherRec.sym__0__8920142377705747532 != sym__0__8920142377705747532 || (otherRec.sym__0___45_4196858516486091897 != sym__0___45_4196858516486091897 || (otherRec.sym__0__1195773552714325740 != sym__0__1195773552714325740 || (otherRec.sym__0___45_38686532604732124 != sym__0___45_38686532604732124 || (otherRec.sym__0__1274631840214437554 != sym__0__1274631840214437554 || (otherRec.sym__0__8445040522489018709 != sym__0__8445040522489018709 || (otherRec.sym__0__2331348265799254080 != sym__0__2331348265799254080 || (otherRec.sym__0___45_1510963300986711992 != sym__0___45_1510963300986711992 || (otherRec.sym__0__5289830658136776009 != sym__0__5289830658136776009 || (otherRec.sym__0__7499328126409916481 != sym__0__7499328126409916481 || (otherRec.sym__0__7533033195406205003 != sym__0__7533033195406205003 || (otherRec.sym__0___45_6428147039213761908 != sym__0___45_6428147039213761908 || (otherRec.sym__0__871736690247302132 != sym__0__871736690247302132 || (otherRec.sym__0___45_8362046498826819058 != sym__0___45_8362046498826819058 || (otherRec.sym__0___45_7133132985918421512 != sym__0___45_7133132985918421512 || (otherRec.sym__0___45_3959357838844936686 != sym__0___45_3959357838844936686 || (otherRec.sym__0___45_7197031512662271633 != sym__0___45_7197031512662271633 || (otherRec.sym__0__8583356070728849524 != sym__0__8583356070728849524 || (otherRec.sym__0__1967597999057704256 != sym__0__1967597999057704256 || (otherRec.sym__0__5132421367677851272 != sym__0__5132421367677851272 || (otherRec.sym__0__5071922315287763570 != sym__0__5071922315287763570 || (otherRec.sym__0___45_3637991104308692870 != sym__0___45_3637991104308692870 || (otherRec.sym__0__4948888373840408220 != sym__0__4948888373840408220 || (otherRec.sym__0___45_7808961130681314221 != sym__0___45_7808961130681314221 || (otherRec.sym__0__1746575405116951454 != sym__0__1746575405116951454 || (otherRec.sym__0__2153939297276247251 != sym__0__2153939297276247251 || (otherRec.sym__0__5199185301403060729 != sym__0__5199185301403060729 || (otherRec.sym__0__1712959636608595962 != sym__0__1712959636608595962 || (otherRec.sym__0___45_1741951889491243926 != sym__0___45_1741951889491243926 || (otherRec.sym__0__227891603776809608 != sym__0__227891603776809608 || (otherRec.sym__0__6207099447983295614 != sym__0__6207099447983295614 || (otherRec.sym__0__335880342687986000 != sym__0__335880342687986000 || (otherRec.sym__0__2784917890152007524 != sym__0__2784917890152007524 || (otherRec.sym__0___45_5840348331744817409 != sym__0___45_5840348331744817409 || (otherRec.sym__0__3675426241071643741 != sym__0__3675426241071643741 || (otherRec.sym__0___45_1268803172874807067 != sym__0___45_1268803172874807067 || (otherRec.sym__0__3110451695433832699 != sym__0__3110451695433832699 || (otherRec.sym__0__5854013247755242004 != sym__0__5854013247755242004 || (otherRec.sym__0___45_1478737863530599082 != sym__0___45_1478737863530599082 || (otherRec.sym__0___45_6827442181954889560 != sym__0___45_6827442181954889560 || (otherRec.sym__0__6943297173895896986 != sym__0__6943297173895896986 || (otherRec.sym__0__5526031557462726759 != sym__0__5526031557462726759 || otherRec.sym__0__2016251883409854356 != sym__0__2016251883409854356))))))))))))))))))))))))))))))))))))))))))))))));
  }
  unsigned sym__0___45_8906884911160954364;
  fluidb_string<18> sym__0__2799000292371979828;
  fluidb_string<9> sym__0__8867920250735627162;
  fluidb_string<9> sym__0___45_7576867150402000331;
  unsigned sym__0___45_9125225545914939837;
  unsigned sym__0__4589167397936411269;
  fluidb_string<7> sym__0__8920142377705747532;
  unsigned sym__0___45_4196858516486091897;
  unsigned sym__0__1195773552714325740;
  unsigned sym__0___45_38686532604732124;
  unsigned sym__0__1274631840214437554;
  unsigned sym__0__8445040522489018709;
  fluidb_string<15> sym__0__2331348265799254080;
  fluidb_string<2> sym__0___45_1510963300986711992;
  fluidb_string<2> sym__0__5289830658136776009;
  fluidb_string<2> sym__0__7499328126409916481;
  fluidb_string<2> sym__0__7533033195406205003;
  unsigned sym__0___45_6428147039213761908;
  fluidb_string<18> sym__0__871736690247302132;
  fluidb_string<40> sym__0___45_8362046498826819058;
  fluidb_string<11> sym__0___45_7133132985918421512;
  fluidb_string<15> sym__0___45_3959357838844936686;
  fluidb_string<13> sym__0___45_7197031512662271633;
  fluidb_string<15> sym__0__8583356070728849524;
  fluidb_string<21> sym__0__1967597999057704256;
  unsigned sym__0__5132421367677851272;
  int sym__0__5071922315287763570;
  unsigned sym__0___45_3637991104308692870;
  unsigned sym__0__4948888373840408220;
  unsigned sym__0___45_7808961130681314221;
  unsigned sym__0__1746575405116951454;
  fluidb_string<21> sym__0__2153939297276247251;
  unsigned sym__0__5199185301403060729;
  fluidb_string<10> sym__0__1712959636608595962;
  unsigned sym__0___45_1741951889491243926;
  double sym__0__227891603776809608;
  unsigned sym__0__6207099447983295614;
  double sym__0__335880342687986000;
  unsigned sym__0__2784917890152007524;
  unsigned sym__0___45_5840348331744817409;
  double sym__0__3675426241071643741;
  fluidb_string<13> sym__0___45_1268803172874807067;
  unsigned sym__0__3110451695433832699;
  fluidb_string<25> sym__0__5854013247755242004;
  fluidb_string<40> sym__0___45_1478737863530599082;
  fluidb_string<16> sym__0___45_6827442181954889560;
  fluidb_string<16> sym__0__6943297173895896986;
  fluidb_string<13> sym__0__5526031557462726759;
  fluidb_string<15> sym__0__2016251883409854356;
 private:
};


class Record2 {
 public:
  Record2(unsigned __sym__0___45_2544647080140891779, fluidb_string<18> __sym__0___45_4581931629044260499, fluidb_string<9> __sym__0__3511844764913402723, fluidb_string<9> __sym__0__2581750769096843740, unsigned __sym__0___45_6031048599860414622, unsigned __sym__0__8084343433543173228, fluidb_string<7> __sym__0___45_3664881058840515771, unsigned __sym__0___45_1924199962958349658, unsigned __sym__0__7769469128992998949, unsigned __sym__0__7818554603565865821, unsigned __sym__0__4360634980582143419, unsigned __sym__0___45_7492593539880285892, fluidb_string<15> __sym__0__1706094538935295417, fluidb_string<2> __sym__0__6114638120282452033, fluidb_string<2> __sym__0___45_78261027814563536, fluidb_string<2> __sym__0__2648420561950371368, fluidb_string<2> __sym__0__3807806894063626346, unsigned __sym__0__3010211381236373125, fluidb_string<18> __sym__0__3300613616795216173, fluidb_string<40> __sym__0___45_3130123223234281513, fluidb_string<11> __sym__0__8189415442579395633, fluidb_string<15> __sym__0__3248231192614790363, fluidb_string<13> __sym__0__1734593865430170446, fluidb_string<15> __sym__0___45_8167422549222682195, fluidb_string<21> __sym__0__2936268515493900473, unsigned __sym__0__2661490882974477953, int __sym__0___45_6833151998909895557, unsigned __sym__0___45_6379152824683587325, unsigned __sym__0__3389381886574775957, unsigned __sym__0___45_3006394417042584462, unsigned __sym__0__5708853396861436519, fluidb_string<21> __sym__0__2510302245253987058, unsigned __sym__0___45_8268616720440236384, fluidb_string<10> __sym__0___45_2145747097567105917, unsigned __sym__0___45_6747202196090936717, double __sym__0___45_980129616638612863, unsigned __sym__0__7935787287177824775, double __sym__0___45_1765426731373793463, unsigned __sym__0__2312911666975909277, unsigned __sym__0__8713898721580785886, double __sym__0__5274362417922015940, fluidb_string<13> __sym__0___45_5950462958936866676, unsigned __sym__0__5599391359954735578, fluidb_string<25> __sym__0__4014184007857207821, fluidb_string<40> __sym__0___45_7146441527183610849, fluidb_string<16> __sym__0___45_8891100078062559775, fluidb_string<16> __sym__0___45_5365202057839317149, fluidb_string<13> __sym__0__5177313860806756678, fluidb_string<15> __sym__0___45_6139660049171508851, unsigned __sym__0__5600261570499839795, fluidb_string<55> __sym__0__7033726162709406531, fluidb_string<25> __sym__0___45_2028921051824210768, fluidb_string<7> __sym__0__1510822012344354762, fluidb_string<10> __sym__0___45_2462553484168592128, fluidb_string<11> __sym__0__6826615390864986324, fluidb_string<25> __sym__0__1653057618405204038, unsigned __sym__0__1042393484014954953, fluidb_string<10> __sym__0___45_4797345940361177504) : sym__0___45_2544647080140891779(__sym__0___45_2544647080140891779), sym__0___45_4581931629044260499(__sym__0___45_4581931629044260499), sym__0__3511844764913402723(__sym__0__3511844764913402723), sym__0__2581750769096843740(__sym__0__2581750769096843740), sym__0___45_6031048599860414622(__sym__0___45_6031048599860414622), sym__0__8084343433543173228(__sym__0__8084343433543173228), sym__0___45_3664881058840515771(__sym__0___45_3664881058840515771), sym__0___45_1924199962958349658(__sym__0___45_1924199962958349658), sym__0__7769469128992998949(__sym__0__7769469128992998949), sym__0__7818554603565865821(__sym__0__7818554603565865821), sym__0__4360634980582143419(__sym__0__4360634980582143419), sym__0___45_7492593539880285892(__sym__0___45_7492593539880285892), sym__0__1706094538935295417(__sym__0__1706094538935295417), sym__0__6114638120282452033(__sym__0__6114638120282452033), sym__0___45_78261027814563536(__sym__0___45_78261027814563536), sym__0__2648420561950371368(__sym__0__2648420561950371368), sym__0__3807806894063626346(__sym__0__3807806894063626346), sym__0__3010211381236373125(__sym__0__3010211381236373125), sym__0__3300613616795216173(__sym__0__3300613616795216173), sym__0___45_3130123223234281513(__sym__0___45_3130123223234281513), sym__0__8189415442579395633(__sym__0__8189415442579395633), sym__0__3248231192614790363(__sym__0__3248231192614790363), sym__0__1734593865430170446(__sym__0__1734593865430170446), sym__0___45_8167422549222682195(__sym__0___45_8167422549222682195), sym__0__2936268515493900473(__sym__0__2936268515493900473), sym__0__2661490882974477953(__sym__0__2661490882974477953), sym__0___45_6833151998909895557(__sym__0___45_6833151998909895557), sym__0___45_6379152824683587325(__sym__0___45_6379152824683587325), sym__0__3389381886574775957(__sym__0__3389381886574775957), sym__0___45_3006394417042584462(__sym__0___45_3006394417042584462), sym__0__5708853396861436519(__sym__0__5708853396861436519), sym__0__2510302245253987058(__sym__0__2510302245253987058), sym__0___45_8268616720440236384(__sym__0___45_8268616720440236384), sym__0___45_2145747097567105917(__sym__0___45_2145747097567105917), sym__0___45_6747202196090936717(__sym__0___45_6747202196090936717), sym__0___45_980129616638612863(__sym__0___45_980129616638612863), sym__0__7935787287177824775(__sym__0__7935787287177824775), sym__0___45_1765426731373793463(__sym__0___45_1765426731373793463), sym__0__2312911666975909277(__sym__0__2312911666975909277), sym__0__8713898721580785886(__sym__0__8713898721580785886), sym__0__5274362417922015940(__sym__0__5274362417922015940), sym__0___45_5950462958936866676(__sym__0___45_5950462958936866676), sym__0__5599391359954735578(__sym__0__5599391359954735578), sym__0__4014184007857207821(__sym__0__4014184007857207821), sym__0___45_7146441527183610849(__sym__0___45_7146441527183610849), sym__0___45_8891100078062559775(__sym__0___45_8891100078062559775), sym__0___45_5365202057839317149(__sym__0___45_5365202057839317149), sym__0__5177313860806756678(__sym__0__5177313860806756678), sym__0___45_6139660049171508851(__sym__0___45_6139660049171508851), sym__0__5600261570499839795(__sym__0__5600261570499839795), sym__0__7033726162709406531(__sym__0__7033726162709406531), sym__0___45_2028921051824210768(__sym__0___45_2028921051824210768), sym__0__1510822012344354762(__sym__0__1510822012344354762), sym__0___45_2462553484168592128(__sym__0___45_2462553484168592128), sym__0__6826615390864986324(__sym__0__6826615390864986324), sym__0__1653057618405204038(__sym__0__1653057618405204038), sym__0__1042393484014954953(__sym__0__1042393484014954953), sym__0___45_4797345940361177504(__sym__0___45_4797345940361177504)
  {
  }
  Record2() 
  {
  }
  std::string show() const{
    std::stringstream o;
    o << sym__0___45_2544647080140891779 << " | " << arrToString(sym__0___45_4581931629044260499) << " | " << arrToString(sym__0__3511844764913402723) << " | " << arrToString(sym__0__2581750769096843740) << " | " << sym__0___45_6031048599860414622 << " | " << sym__0__8084343433543173228 << " | " << arrToString(sym__0___45_3664881058840515771) << " | " << sym__0___45_1924199962958349658 << " | " << sym__0__7769469128992998949 << " | " << sym__0__7818554603565865821 << " | " << sym__0__4360634980582143419 << " | " << sym__0___45_7492593539880285892 << " | " << arrToString(sym__0__1706094538935295417) << " | " << arrToString(sym__0__6114638120282452033) << " | " << arrToString(sym__0___45_78261027814563536) << " | " << arrToString(sym__0__2648420561950371368) << " | " << arrToString(sym__0__3807806894063626346) << " | " << sym__0__3010211381236373125 << " | " << arrToString(sym__0__3300613616795216173) << " | " << arrToString(sym__0___45_3130123223234281513) << " | " << arrToString(sym__0__8189415442579395633) << " | " << arrToString(sym__0__3248231192614790363) << " | " << arrToString(sym__0__1734593865430170446) << " | " << arrToString(sym__0___45_8167422549222682195) << " | " << arrToString(sym__0__2936268515493900473) << " | " << sym__0__2661490882974477953 << " | " << sym__0___45_6833151998909895557 << " | " << sym__0___45_6379152824683587325 << " | " << sym__0__3389381886574775957 << " | " << sym__0___45_3006394417042584462 << " | " << sym__0__5708853396861436519 << " | " << arrToString(sym__0__2510302245253987058) << " | " << sym__0___45_8268616720440236384 << " | " << arrToString(sym__0___45_2145747097567105917) << " | " << sym__0___45_6747202196090936717 << " | " << sym__0___45_980129616638612863 << " | " << sym__0__7935787287177824775 << " | " << sym__0___45_1765426731373793463 << " | " << sym__0__2312911666975909277 << " | " << sym__0__8713898721580785886 << " | " << sym__0__5274362417922015940 << " | " << arrToString(sym__0___45_5950462958936866676) << " | " << sym__0__5599391359954735578 << " | " << arrToString(sym__0__4014184007857207821) << " | " << arrToString(sym__0___45_7146441527183610849) << " | " << arrToString(sym__0___45_8891100078062559775) << " | " << arrToString(sym__0___45_5365202057839317149) << " | " << arrToString(sym__0__5177313860806756678) << " | " << arrToString(sym__0___45_6139660049171508851) << " | " << sym__0__5600261570499839795 << " | " << arrToString(sym__0__7033726162709406531) << " | " << arrToString(sym__0___45_2028921051824210768) << " | " << arrToString(sym__0__1510822012344354762) << " | " << arrToString(sym__0___45_2462553484168592128) << " | " << arrToString(sym__0__6826615390864986324) << " | " << arrToString(sym__0__1653057618405204038) << " | " << sym__0__1042393484014954953 << " | " << arrToString(sym__0___45_4797345940361177504);
    return o.str();
  }
  bool operator <(const Record2& otherRec) const{
    return (otherRec.sym__0___45_2544647080140891779 < sym__0___45_2544647080140891779 && (otherRec.sym__0___45_4581931629044260499 < sym__0___45_4581931629044260499 && (otherRec.sym__0__3511844764913402723 < sym__0__3511844764913402723 && (otherRec.sym__0__2581750769096843740 < sym__0__2581750769096843740 && (otherRec.sym__0___45_6031048599860414622 < sym__0___45_6031048599860414622 && (otherRec.sym__0__8084343433543173228 < sym__0__8084343433543173228 && (otherRec.sym__0___45_3664881058840515771 < sym__0___45_3664881058840515771 && (otherRec.sym__0___45_1924199962958349658 < sym__0___45_1924199962958349658 && (otherRec.sym__0__7769469128992998949 < sym__0__7769469128992998949 && (otherRec.sym__0__7818554603565865821 < sym__0__7818554603565865821 && (otherRec.sym__0__4360634980582143419 < sym__0__4360634980582143419 && (otherRec.sym__0___45_7492593539880285892 < sym__0___45_7492593539880285892 && (otherRec.sym__0__1706094538935295417 < sym__0__1706094538935295417 && (otherRec.sym__0__6114638120282452033 < sym__0__6114638120282452033 && (otherRec.sym__0___45_78261027814563536 < sym__0___45_78261027814563536 && (otherRec.sym__0__2648420561950371368 < sym__0__2648420561950371368 && (otherRec.sym__0__3807806894063626346 < sym__0__3807806894063626346 && (otherRec.sym__0__3010211381236373125 < sym__0__3010211381236373125 && (otherRec.sym__0__3300613616795216173 < sym__0__3300613616795216173 && (otherRec.sym__0___45_3130123223234281513 < sym__0___45_3130123223234281513 && (otherRec.sym__0__8189415442579395633 < sym__0__8189415442579395633 && (otherRec.sym__0__3248231192614790363 < sym__0__3248231192614790363 && (otherRec.sym__0__1734593865430170446 < sym__0__1734593865430170446 && (otherRec.sym__0___45_8167422549222682195 < sym__0___45_8167422549222682195 && (otherRec.sym__0__2936268515493900473 < sym__0__2936268515493900473 && (otherRec.sym__0__2661490882974477953 < sym__0__2661490882974477953 && (otherRec.sym__0___45_6833151998909895557 < sym__0___45_6833151998909895557 && (otherRec.sym__0___45_6379152824683587325 < sym__0___45_6379152824683587325 && (otherRec.sym__0__3389381886574775957 < sym__0__3389381886574775957 && (otherRec.sym__0___45_3006394417042584462 < sym__0___45_3006394417042584462 && (otherRec.sym__0__5708853396861436519 < sym__0__5708853396861436519 && (otherRec.sym__0__2510302245253987058 < sym__0__2510302245253987058 && (otherRec.sym__0___45_8268616720440236384 < sym__0___45_8268616720440236384 && (otherRec.sym__0___45_2145747097567105917 < sym__0___45_2145747097567105917 && (otherRec.sym__0___45_6747202196090936717 < sym__0___45_6747202196090936717 && (otherRec.sym__0___45_980129616638612863 < sym__0___45_980129616638612863 && (otherRec.sym__0__7935787287177824775 < sym__0__7935787287177824775 && (otherRec.sym__0___45_1765426731373793463 < sym__0___45_1765426731373793463 && (otherRec.sym__0__2312911666975909277 < sym__0__2312911666975909277 && (otherRec.sym__0__8713898721580785886 < sym__0__8713898721580785886 && (otherRec.sym__0__5274362417922015940 < sym__0__5274362417922015940 && (otherRec.sym__0___45_5950462958936866676 < sym__0___45_5950462958936866676 && (otherRec.sym__0__5599391359954735578 < sym__0__5599391359954735578 && (otherRec.sym__0__4014184007857207821 < sym__0__4014184007857207821 && (otherRec.sym__0___45_7146441527183610849 < sym__0___45_7146441527183610849 && (otherRec.sym__0___45_8891100078062559775 < sym__0___45_8891100078062559775 && (otherRec.sym__0___45_5365202057839317149 < sym__0___45_5365202057839317149 && (otherRec.sym__0__5177313860806756678 < sym__0__5177313860806756678 && (otherRec.sym__0___45_6139660049171508851 < sym__0___45_6139660049171508851 && (otherRec.sym__0__5600261570499839795 < sym__0__5600261570499839795 && (otherRec.sym__0__7033726162709406531 < sym__0__7033726162709406531 && (otherRec.sym__0___45_2028921051824210768 < sym__0___45_2028921051824210768 && (otherRec.sym__0__1510822012344354762 < sym__0__1510822012344354762 && (otherRec.sym__0___45_2462553484168592128 < sym__0___45_2462553484168592128 && (otherRec.sym__0__6826615390864986324 < sym__0__6826615390864986324 && (otherRec.sym__0__1653057618405204038 < sym__0__1653057618405204038 && (otherRec.sym__0__1042393484014954953 < sym__0__1042393484014954953 && otherRec.sym__0___45_4797345940361177504 < sym__0___45_4797345940361177504)))))))))))))))))))))))))))))))))))))))))))))))))))))))));
  }
  bool operator ==(const Record2& otherRec) const{
    return (otherRec.sym__0___45_2544647080140891779 == sym__0___45_2544647080140891779 && (otherRec.sym__0___45_4581931629044260499 == sym__0___45_4581931629044260499 && (otherRec.sym__0__3511844764913402723 == sym__0__3511844764913402723 && (otherRec.sym__0__2581750769096843740 == sym__0__2581750769096843740 && (otherRec.sym__0___45_6031048599860414622 == sym__0___45_6031048599860414622 && (otherRec.sym__0__8084343433543173228 == sym__0__8084343433543173228 && (otherRec.sym__0___45_3664881058840515771 == sym__0___45_3664881058840515771 && (otherRec.sym__0___45_1924199962958349658 == sym__0___45_1924199962958349658 && (otherRec.sym__0__7769469128992998949 == sym__0__7769469128992998949 && (otherRec.sym__0__7818554603565865821 == sym__0__7818554603565865821 && (otherRec.sym__0__4360634980582143419 == sym__0__4360634980582143419 && (otherRec.sym__0___45_7492593539880285892 == sym__0___45_7492593539880285892 && (otherRec.sym__0__1706094538935295417 == sym__0__1706094538935295417 && (otherRec.sym__0__6114638120282452033 == sym__0__6114638120282452033 && (otherRec.sym__0___45_78261027814563536 == sym__0___45_78261027814563536 && (otherRec.sym__0__2648420561950371368 == sym__0__2648420561950371368 && (otherRec.sym__0__3807806894063626346 == sym__0__3807806894063626346 && (otherRec.sym__0__3010211381236373125 == sym__0__3010211381236373125 && (otherRec.sym__0__3300613616795216173 == sym__0__3300613616795216173 && (otherRec.sym__0___45_3130123223234281513 == sym__0___45_3130123223234281513 && (otherRec.sym__0__8189415442579395633 == sym__0__8189415442579395633 && (otherRec.sym__0__3248231192614790363 == sym__0__3248231192614790363 && (otherRec.sym__0__1734593865430170446 == sym__0__1734593865430170446 && (otherRec.sym__0___45_8167422549222682195 == sym__0___45_8167422549222682195 && (otherRec.sym__0__2936268515493900473 == sym__0__2936268515493900473 && (otherRec.sym__0__2661490882974477953 == sym__0__2661490882974477953 && (otherRec.sym__0___45_6833151998909895557 == sym__0___45_6833151998909895557 && (otherRec.sym__0___45_6379152824683587325 == sym__0___45_6379152824683587325 && (otherRec.sym__0__3389381886574775957 == sym__0__3389381886574775957 && (otherRec.sym__0___45_3006394417042584462 == sym__0___45_3006394417042584462 && (otherRec.sym__0__5708853396861436519 == sym__0__5708853396861436519 && (otherRec.sym__0__2510302245253987058 == sym__0__2510302245253987058 && (otherRec.sym__0___45_8268616720440236384 == sym__0___45_8268616720440236384 && (otherRec.sym__0___45_2145747097567105917 == sym__0___45_2145747097567105917 && (otherRec.sym__0___45_6747202196090936717 == sym__0___45_6747202196090936717 && (otherRec.sym__0___45_980129616638612863 == sym__0___45_980129616638612863 && (otherRec.sym__0__7935787287177824775 == sym__0__7935787287177824775 && (otherRec.sym__0___45_1765426731373793463 == sym__0___45_1765426731373793463 && (otherRec.sym__0__2312911666975909277 == sym__0__2312911666975909277 && (otherRec.sym__0__8713898721580785886 == sym__0__8713898721580785886 && (otherRec.sym__0__5274362417922015940 == sym__0__5274362417922015940 && (otherRec.sym__0___45_5950462958936866676 == sym__0___45_5950462958936866676 && (otherRec.sym__0__5599391359954735578 == sym__0__5599391359954735578 && (otherRec.sym__0__4014184007857207821 == sym__0__4014184007857207821 && (otherRec.sym__0___45_7146441527183610849 == sym__0___45_7146441527183610849 && (otherRec.sym__0___45_8891100078062559775 == sym__0___45_8891100078062559775 && (otherRec.sym__0___45_5365202057839317149 == sym__0___45_5365202057839317149 && (otherRec.sym__0__5177313860806756678 == sym__0__5177313860806756678 && (otherRec.sym__0___45_6139660049171508851 == sym__0___45_6139660049171508851 && (otherRec.sym__0__5600261570499839795 == sym__0__5600261570499839795 && (otherRec.sym__0__7033726162709406531 == sym__0__7033726162709406531 && (otherRec.sym__0___45_2028921051824210768 == sym__0___45_2028921051824210768 && (otherRec.sym__0__1510822012344354762 == sym__0__1510822012344354762 && (otherRec.sym__0___45_2462553484168592128 == sym__0___45_2462553484168592128 && (otherRec.sym__0__6826615390864986324 == sym__0__6826615390864986324 && (otherRec.sym__0__1653057618405204038 == sym__0__1653057618405204038 && (otherRec.sym__0__1042393484014954953 == sym__0__1042393484014954953 && otherRec.sym__0___45_4797345940361177504 == sym__0___45_4797345940361177504)))))))))))))))))))))))))))))))))))))))))))))))))))))))));
  }
  bool operator !=(const Record2& otherRec) const{
    return (otherRec.sym__0___45_2544647080140891779 != sym__0___45_2544647080140891779 || (otherRec.sym__0___45_4581931629044260499 != sym__0___45_4581931629044260499 || (otherRec.sym__0__3511844764913402723 != sym__0__3511844764913402723 || (otherRec.sym__0__2581750769096843740 != sym__0__2581750769096843740 || (otherRec.sym__0___45_6031048599860414622 != sym__0___45_6031048599860414622 || (otherRec.sym__0__8084343433543173228 != sym__0__8084343433543173228 || (otherRec.sym__0___45_3664881058840515771 != sym__0___45_3664881058840515771 || (otherRec.sym__0___45_1924199962958349658 != sym__0___45_1924199962958349658 || (otherRec.sym__0__7769469128992998949 != sym__0__7769469128992998949 || (otherRec.sym__0__7818554603565865821 != sym__0__7818554603565865821 || (otherRec.sym__0__4360634980582143419 != sym__0__4360634980582143419 || (otherRec.sym__0___45_7492593539880285892 != sym__0___45_7492593539880285892 || (otherRec.sym__0__1706094538935295417 != sym__0__1706094538935295417 || (otherRec.sym__0__6114638120282452033 != sym__0__6114638120282452033 || (otherRec.sym__0___45_78261027814563536 != sym__0___45_78261027814563536 || (otherRec.sym__0__2648420561950371368 != sym__0__2648420561950371368 || (otherRec.sym__0__3807806894063626346 != sym__0__3807806894063626346 || (otherRec.sym__0__3010211381236373125 != sym__0__3010211381236373125 || (otherRec.sym__0__3300613616795216173 != sym__0__3300613616795216173 || (otherRec.sym__0___45_3130123223234281513 != sym__0___45_3130123223234281513 || (otherRec.sym__0__8189415442579395633 != sym__0__8189415442579395633 || (otherRec.sym__0__3248231192614790363 != sym__0__3248231192614790363 || (otherRec.sym__0__1734593865430170446 != sym__0__1734593865430170446 || (otherRec.sym__0___45_8167422549222682195 != sym__0___45_8167422549222682195 || (otherRec.sym__0__2936268515493900473 != sym__0__2936268515493900473 || (otherRec.sym__0__2661490882974477953 != sym__0__2661490882974477953 || (otherRec.sym__0___45_6833151998909895557 != sym__0___45_6833151998909895557 || (otherRec.sym__0___45_6379152824683587325 != sym__0___45_6379152824683587325 || (otherRec.sym__0__3389381886574775957 != sym__0__3389381886574775957 || (otherRec.sym__0___45_3006394417042584462 != sym__0___45_3006394417042584462 || (otherRec.sym__0__5708853396861436519 != sym__0__5708853396861436519 || (otherRec.sym__0__2510302245253987058 != sym__0__2510302245253987058 || (otherRec.sym__0___45_8268616720440236384 != sym__0___45_8268616720440236384 || (otherRec.sym__0___45_2145747097567105917 != sym__0___45_2145747097567105917 || (otherRec.sym__0___45_6747202196090936717 != sym__0___45_6747202196090936717 || (otherRec.sym__0___45_980129616638612863 != sym__0___45_980129616638612863 || (otherRec.sym__0__7935787287177824775 != sym__0__7935787287177824775 || (otherRec.sym__0___45_1765426731373793463 != sym__0___45_1765426731373793463 || (otherRec.sym__0__2312911666975909277 != sym__0__2312911666975909277 || (otherRec.sym__0__8713898721580785886 != sym__0__8713898721580785886 || (otherRec.sym__0__5274362417922015940 != sym__0__5274362417922015940 || (otherRec.sym__0___45_5950462958936866676 != sym__0___45_5950462958936866676 || (otherRec.sym__0__5599391359954735578 != sym__0__5599391359954735578 || (otherRec.sym__0__4014184007857207821 != sym__0__4014184007857207821 || (otherRec.sym__0___45_7146441527183610849 != sym__0___45_7146441527183610849 || (otherRec.sym__0___45_8891100078062559775 != sym__0___45_8891100078062559775 || (otherRec.sym__0___45_5365202057839317149 != sym__0___45_5365202057839317149 || (otherRec.sym__0__5177313860806756678 != sym__0__5177313860806756678 || (otherRec.sym__0___45_6139660049171508851 != sym__0___45_6139660049171508851 || (otherRec.sym__0__5600261570499839795 != sym__0__5600261570499839795 || (otherRec.sym__0__7033726162709406531 != sym__0__7033726162709406531 || (otherRec.sym__0___45_2028921051824210768 != sym__0___45_2028921051824210768 || (otherRec.sym__0__1510822012344354762 != sym__0__1510822012344354762 || (otherRec.sym__0___45_2462553484168592128 != sym__0___45_2462553484168592128 || (otherRec.sym__0__6826615390864986324 != sym__0__6826615390864986324 || (otherRec.sym__0__1653057618405204038 != sym__0__1653057618405204038 || (otherRec.sym__0__1042393484014954953 != sym__0__1042393484014954953 || otherRec.sym__0___45_4797345940361177504 != sym__0___45_4797345940361177504)))))))))))))))))))))))))))))))))))))))))))))))))))))))));
  }
  unsigned sym__0___45_2544647080140891779;
  fluidb_string<18> sym__0___45_4581931629044260499;
  fluidb_string<9> sym__0__3511844764913402723;
  fluidb_string<9> sym__0__2581750769096843740;
  unsigned sym__0___45_6031048599860414622;
  unsigned sym__0__8084343433543173228;
  fluidb_string<7> sym__0___45_3664881058840515771;
  unsigned sym__0___45_1924199962958349658;
  unsigned sym__0__7769469128992998949;
  unsigned sym__0__7818554603565865821;
  unsigned sym__0__4360634980582143419;
  unsigned sym__0___45_7492593539880285892;
  fluidb_string<15> sym__0__1706094538935295417;
  fluidb_string<2> sym__0__6114638120282452033;
  fluidb_string<2> sym__0___45_78261027814563536;
  fluidb_string<2> sym__0__2648420561950371368;
  fluidb_string<2> sym__0__3807806894063626346;
  unsigned sym__0__3010211381236373125;
  fluidb_string<18> sym__0__3300613616795216173;
  fluidb_string<40> sym__0___45_3130123223234281513;
  fluidb_string<11> sym__0__8189415442579395633;
  fluidb_string<15> sym__0__3248231192614790363;
  fluidb_string<13> sym__0__1734593865430170446;
  fluidb_string<15> sym__0___45_8167422549222682195;
  fluidb_string<21> sym__0__2936268515493900473;
  unsigned sym__0__2661490882974477953;
  int sym__0___45_6833151998909895557;
  unsigned sym__0___45_6379152824683587325;
  unsigned sym__0__3389381886574775957;
  unsigned sym__0___45_3006394417042584462;
  unsigned sym__0__5708853396861436519;
  fluidb_string<21> sym__0__2510302245253987058;
  unsigned sym__0___45_8268616720440236384;
  fluidb_string<10> sym__0___45_2145747097567105917;
  unsigned sym__0___45_6747202196090936717;
  double sym__0___45_980129616638612863;
  unsigned sym__0__7935787287177824775;
  double sym__0___45_1765426731373793463;
  unsigned sym__0__2312911666975909277;
  unsigned sym__0__8713898721580785886;
  double sym__0__5274362417922015940;
  fluidb_string<13> sym__0___45_5950462958936866676;
  unsigned sym__0__5599391359954735578;
  fluidb_string<25> sym__0__4014184007857207821;
  fluidb_string<40> sym__0___45_7146441527183610849;
  fluidb_string<16> sym__0___45_8891100078062559775;
  fluidb_string<16> sym__0___45_5365202057839317149;
  fluidb_string<13> sym__0__5177313860806756678;
  fluidb_string<15> sym__0___45_6139660049171508851;
  unsigned sym__0__5600261570499839795;
  fluidb_string<55> sym__0__7033726162709406531;
  fluidb_string<25> sym__0___45_2028921051824210768;
  fluidb_string<7> sym__0__1510822012344354762;
  fluidb_string<10> sym__0___45_2462553484168592128;
  fluidb_string<11> sym__0__6826615390864986324;
  fluidb_string<25> sym__0__1653057618405204038;
  unsigned sym__0__1042393484014954953;
  fluidb_string<10> sym__0___45_4797345940361177504;
 private:
};


class Record4 {
 public:
  Record4(unsigned __sym__0__7178003535380331304, fluidb_string<55> __sym__0___45_7020257275696364520, fluidb_string<25> __sym__0___45_6307179734719967033, fluidb_string<7> __sym__0__4568304886257136061, fluidb_string<10> __sym__0___45_6291097039630000265, fluidb_string<11> __sym__0__551327770031967739, fluidb_string<25> __sym__0__3827696365022297353, unsigned __sym__0___45_1779543743759935870, fluidb_string<10> __sym__0__3752090135924368535) : sym__0__7178003535380331304(__sym__0__7178003535380331304), sym__0___45_7020257275696364520(__sym__0___45_7020257275696364520), sym__0___45_6307179734719967033(__sym__0___45_6307179734719967033), sym__0__4568304886257136061(__sym__0__4568304886257136061), sym__0___45_6291097039630000265(__sym__0___45_6291097039630000265), sym__0__551327770031967739(__sym__0__551327770031967739), sym__0__3827696365022297353(__sym__0__3827696365022297353), sym__0___45_1779543743759935870(__sym__0___45_1779543743759935870), sym__0__3752090135924368535(__sym__0__3752090135924368535)
  {
  }
  Record4() 
  {
  }
  std::string show() const{
    std::stringstream o;
    o << sym__0__7178003535380331304 << " | " << arrToString(sym__0___45_7020257275696364520) << " | " << arrToString(sym__0___45_6307179734719967033) << " | " << arrToString(sym__0__4568304886257136061) << " | " << arrToString(sym__0___45_6291097039630000265) << " | " << arrToString(sym__0__551327770031967739) << " | " << arrToString(sym__0__3827696365022297353) << " | " << sym__0___45_1779543743759935870 << " | " << arrToString(sym__0__3752090135924368535);
    return o.str();
  }
  bool operator <(const Record4& otherRec) const{
    return (otherRec.sym__0__7178003535380331304 < sym__0__7178003535380331304 && (otherRec.sym__0___45_7020257275696364520 < sym__0___45_7020257275696364520 && (otherRec.sym__0___45_6307179734719967033 < sym__0___45_6307179734719967033 && (otherRec.sym__0__4568304886257136061 < sym__0__4568304886257136061 && (otherRec.sym__0___45_6291097039630000265 < sym__0___45_6291097039630000265 && (otherRec.sym__0__551327770031967739 < sym__0__551327770031967739 && (otherRec.sym__0__3827696365022297353 < sym__0__3827696365022297353 && (otherRec.sym__0___45_1779543743759935870 < sym__0___45_1779543743759935870 && otherRec.sym__0__3752090135924368535 < sym__0__3752090135924368535))))))));
  }
  bool operator ==(const Record4& otherRec) const{
    return (otherRec.sym__0__7178003535380331304 == sym__0__7178003535380331304 && (otherRec.sym__0___45_7020257275696364520 == sym__0___45_7020257275696364520 && (otherRec.sym__0___45_6307179734719967033 == sym__0___45_6307179734719967033 && (otherRec.sym__0__4568304886257136061 == sym__0__4568304886257136061 && (otherRec.sym__0___45_6291097039630000265 == sym__0___45_6291097039630000265 && (otherRec.sym__0__551327770031967739 == sym__0__551327770031967739 && (otherRec.sym__0__3827696365022297353 == sym__0__3827696365022297353 && (otherRec.sym__0___45_1779543743759935870 == sym__0___45_1779543743759935870 && otherRec.sym__0__3752090135924368535 == sym__0__3752090135924368535))))))));
  }
  bool operator !=(const Record4& otherRec) const{
    return (otherRec.sym__0__7178003535380331304 != sym__0__7178003535380331304 || (otherRec.sym__0___45_7020257275696364520 != sym__0___45_7020257275696364520 || (otherRec.sym__0___45_6307179734719967033 != sym__0___45_6307179734719967033 || (otherRec.sym__0__4568304886257136061 != sym__0__4568304886257136061 || (otherRec.sym__0___45_6291097039630000265 != sym__0___45_6291097039630000265 || (otherRec.sym__0__551327770031967739 != sym__0__551327770031967739 || (otherRec.sym__0__3827696365022297353 != sym__0__3827696365022297353 || (otherRec.sym__0___45_1779543743759935870 != sym__0___45_1779543743759935870 || otherRec.sym__0__3752090135924368535 != sym__0__3752090135924368535))))))));
  }
  unsigned sym__0__7178003535380331304;
  fluidb_string<55> sym__0___45_7020257275696364520;
  fluidb_string<25> sym__0___45_6307179734719967033;
  fluidb_string<7> sym__0__4568304886257136061;
  fluidb_string<10> sym__0___45_6291097039630000265;
  fluidb_string<11> sym__0__551327770031967739;
  fluidb_string<25> sym__0__3827696365022297353;
  unsigned sym__0___45_1779543743759935870;
  fluidb_string<10> sym__0__3752090135924368535;
 private:
};


class Record42 {
 public:
  Record42(unsigned __sym__0___45_7743617557643973661, unsigned __sym__0___45_6261698000977207925, fluidb_string<10> __sym__0__1631598784897141641) : sym__0___45_7743617557643973661(__sym__0___45_7743617557643973661), sym__0___45_6261698000977207925(__sym__0___45_6261698000977207925), sym__0__1631598784897141641(__sym__0__1631598784897141641)
  {
  }
  Record42() 
  {
  }
  std::string show() const{
    std::stringstream o;
    o << sym__0___45_7743617557643973661 << " | " << sym__0___45_6261698000977207925 << " | " << arrToString(sym__0__1631598784897141641);
    return o.str();
  }
  bool operator <(const Record42& otherRec) const{
    return (otherRec.sym__0___45_7743617557643973661 < sym__0___45_7743617557643973661 && (otherRec.sym__0___45_6261698000977207925 < sym__0___45_6261698000977207925 && otherRec.sym__0__1631598784897141641 < sym__0__1631598784897141641));
  }
  bool operator ==(const Record42& otherRec) const{
    return (otherRec.sym__0___45_7743617557643973661 == sym__0___45_7743617557643973661 && (otherRec.sym__0___45_6261698000977207925 == sym__0___45_6261698000977207925 && otherRec.sym__0__1631598784897141641 == sym__0__1631598784897141641));
  }
  bool operator !=(const Record42& otherRec) const{
    return (otherRec.sym__0___45_7743617557643973661 != sym__0___45_7743617557643973661 || (otherRec.sym__0___45_6261698000977207925 != sym__0___45_6261698000977207925 || otherRec.sym__0__1631598784897141641 != sym__0__1631598784897141641));
  }
  unsigned sym__0___45_7743617557643973661;
  unsigned sym__0___45_6261698000977207925;
  fluidb_string<10> sym__0__1631598784897141641;
 private:
};


class Record44 {
 public:
  Record44(unsigned __sym__0___45_531840894949671910, fluidb_string<25> __sym__0___45_7594568260455252811, fluidb_string<40> __sym__0___45_4224396157642132841, fluidb_string<16> __sym__0___45_5121813103072643223, fluidb_string<16> __sym__0__3627274254091843899, fluidb_string<13> __sym__0___45_519289659968682554, fluidb_string<15> __sym__0__5824930074457018933, unsigned __sym__0__8300140134385342025, int __sym__0___45_4363113810210080717, unsigned __sym__0___45_2180998471546424549, unsigned __sym__0___45_591129746765413155, unsigned __sym__0___45_4416720451126861422, unsigned __sym__0___45_2100514126469912481, fluidb_string<21> __sym__0__3750234095707159570, unsigned __sym__0___45_7960421939889289288, fluidb_string<10> __sym__0___45_8655770192480484197, unsigned __sym__0__2072590499357086155, double __sym__0__8268830136148095561, unsigned __sym__0___45_678210870537240385, double __sym__0__6112270341236569873, unsigned __sym__0__8598037934431251909, unsigned __sym__0__5291402561130019774, double __sym__0___45_7851524774395097220, fluidb_string<13> __sym__0__1291698872846441412, unsigned __sym__0__8986418791032324453, fluidb_string<18> __sym__0__2167360253537002837, fluidb_string<9> __sym__0__8141858625439628603, fluidb_string<9> __sym__0___45_7931886843684217772, unsigned __sym__0___45_2549139954849286782, unsigned __sym__0___45_1691445119060855580, fluidb_string<7> __sym__0__7474331622035256461, unsigned __sym__0___45_667953329600979866, unsigned __sym__0___45_3035057609626888019, unsigned __sym__0___45_8476599677752189563, unsigned __sym__0___45_6389391189957387661, unsigned __sym__0___45_6486695610681891724, fluidb_string<15> __sym__0__4796994603556539905, fluidb_string<2> __sym__0___45_6306286879286504951, fluidb_string<2> __sym__0___45_922796240211516024, fluidb_string<2> __sym__0__2810436566368623008, fluidb_string<2> __sym__0__7272995257348976042, unsigned __sym__0__1928421907625115531, fluidb_string<55> __sym__0__6254739572024865371, fluidb_string<25> __sym__0___45_5257913184343802104, fluidb_string<7> __sym__0___45_1520289822717538230, fluidb_string<10> __sym__0___45_8628415396103686184, fluidb_string<11> __sym__0__2109492732871942412, fluidb_string<25> __sym__0__5385658520341277382, unsigned __sym__0__3660583386293997969, fluidb_string<10> __sym__0___45_3013711856665730696) : sym__0___45_531840894949671910(__sym__0___45_531840894949671910), sym__0___45_7594568260455252811(__sym__0___45_7594568260455252811), sym__0___45_4224396157642132841(__sym__0___45_4224396157642132841), sym__0___45_5121813103072643223(__sym__0___45_5121813103072643223), sym__0__3627274254091843899(__sym__0__3627274254091843899), sym__0___45_519289659968682554(__sym__0___45_519289659968682554), sym__0__5824930074457018933(__sym__0__5824930074457018933), sym__0__8300140134385342025(__sym__0__8300140134385342025), sym__0___45_4363113810210080717(__sym__0___45_4363113810210080717), sym__0___45_2180998471546424549(__sym__0___45_2180998471546424549), sym__0___45_591129746765413155(__sym__0___45_591129746765413155), sym__0___45_4416720451126861422(__sym__0___45_4416720451126861422), sym__0___45_2100514126469912481(__sym__0___45_2100514126469912481), sym__0__3750234095707159570(__sym__0__3750234095707159570), sym__0___45_7960421939889289288(__sym__0___45_7960421939889289288), sym__0___45_8655770192480484197(__sym__0___45_8655770192480484197), sym__0__2072590499357086155(__sym__0__2072590499357086155), sym__0__8268830136148095561(__sym__0__8268830136148095561), sym__0___45_678210870537240385(__sym__0___45_678210870537240385), sym__0__6112270341236569873(__sym__0__6112270341236569873), sym__0__8598037934431251909(__sym__0__8598037934431251909), sym__0__5291402561130019774(__sym__0__5291402561130019774), sym__0___45_7851524774395097220(__sym__0___45_7851524774395097220), sym__0__1291698872846441412(__sym__0__1291698872846441412), sym__0__8986418791032324453(__sym__0__8986418791032324453), sym__0__2167360253537002837(__sym__0__2167360253537002837), sym__0__8141858625439628603(__sym__0__8141858625439628603), sym__0___45_7931886843684217772(__sym__0___45_7931886843684217772), sym__0___45_2549139954849286782(__sym__0___45_2549139954849286782), sym__0___45_1691445119060855580(__sym__0___45_1691445119060855580), sym__0__7474331622035256461(__sym__0__7474331622035256461), sym__0___45_667953329600979866(__sym__0___45_667953329600979866), sym__0___45_3035057609626888019(__sym__0___45_3035057609626888019), sym__0___45_8476599677752189563(__sym__0___45_8476599677752189563), sym__0___45_6389391189957387661(__sym__0___45_6389391189957387661), sym__0___45_6486695610681891724(__sym__0___45_6486695610681891724), sym__0__4796994603556539905(__sym__0__4796994603556539905), sym__0___45_6306286879286504951(__sym__0___45_6306286879286504951), sym__0___45_922796240211516024(__sym__0___45_922796240211516024), sym__0__2810436566368623008(__sym__0__2810436566368623008), sym__0__7272995257348976042(__sym__0__7272995257348976042), sym__0__1928421907625115531(__sym__0__1928421907625115531), sym__0__6254739572024865371(__sym__0__6254739572024865371), sym__0___45_5257913184343802104(__sym__0___45_5257913184343802104), sym__0___45_1520289822717538230(__sym__0___45_1520289822717538230), sym__0___45_8628415396103686184(__sym__0___45_8628415396103686184), sym__0__2109492732871942412(__sym__0__2109492732871942412), sym__0__5385658520341277382(__sym__0__5385658520341277382), sym__0__3660583386293997969(__sym__0__3660583386293997969), sym__0___45_3013711856665730696(__sym__0___45_3013711856665730696)
  {
  }
  Record44() 
  {
  }
  std::string show() const{
    std::stringstream o;
    o << sym__0___45_531840894949671910 << " | " << arrToString(sym__0___45_7594568260455252811) << " | " << arrToString(sym__0___45_4224396157642132841) << " | " << arrToString(sym__0___45_5121813103072643223) << " | " << arrToString(sym__0__3627274254091843899) << " | " << arrToString(sym__0___45_519289659968682554) << " | " << arrToString(sym__0__5824930074457018933) << " | " << sym__0__8300140134385342025 << " | " << sym__0___45_4363113810210080717 << " | " << sym__0___45_2180998471546424549 << " | " << sym__0___45_591129746765413155 << " | " << sym__0___45_4416720451126861422 << " | " << sym__0___45_2100514126469912481 << " | " << arrToString(sym__0__3750234095707159570) << " | " << sym__0___45_7960421939889289288 << " | " << arrToString(sym__0___45_8655770192480484197) << " | " << sym__0__2072590499357086155 << " | " << sym__0__8268830136148095561 << " | " << sym__0___45_678210870537240385 << " | " << sym__0__6112270341236569873 << " | " << sym__0__8598037934431251909 << " | " << sym__0__5291402561130019774 << " | " << sym__0___45_7851524774395097220 << " | " << arrToString(sym__0__1291698872846441412) << " | " << sym__0__8986418791032324453 << " | " << arrToString(sym__0__2167360253537002837) << " | " << arrToString(sym__0__8141858625439628603) << " | " << arrToString(sym__0___45_7931886843684217772) << " | " << sym__0___45_2549139954849286782 << " | " << sym__0___45_1691445119060855580 << " | " << arrToString(sym__0__7474331622035256461) << " | " << sym__0___45_667953329600979866 << " | " << sym__0___45_3035057609626888019 << " | " << sym__0___45_8476599677752189563 << " | " << sym__0___45_6389391189957387661 << " | " << sym__0___45_6486695610681891724 << " | " << arrToString(sym__0__4796994603556539905) << " | " << arrToString(sym__0___45_6306286879286504951) << " | " << arrToString(sym__0___45_922796240211516024) << " | " << arrToString(sym__0__2810436566368623008) << " | " << arrToString(sym__0__7272995257348976042) << " | " << sym__0__1928421907625115531 << " | " << arrToString(sym__0__6254739572024865371) << " | " << arrToString(sym__0___45_5257913184343802104) << " | " << arrToString(sym__0___45_1520289822717538230) << " | " << arrToString(sym__0___45_8628415396103686184) << " | " << arrToString(sym__0__2109492732871942412) << " | " << arrToString(sym__0__5385658520341277382) << " | " << sym__0__3660583386293997969 << " | " << arrToString(sym__0___45_3013711856665730696);
    return o.str();
  }
  bool operator <(const Record44& otherRec) const{
    return (otherRec.sym__0___45_531840894949671910 < sym__0___45_531840894949671910 && (otherRec.sym__0___45_7594568260455252811 < sym__0___45_7594568260455252811 && (otherRec.sym__0___45_4224396157642132841 < sym__0___45_4224396157642132841 && (otherRec.sym__0___45_5121813103072643223 < sym__0___45_5121813103072643223 && (otherRec.sym__0__3627274254091843899 < sym__0__3627274254091843899 && (otherRec.sym__0___45_519289659968682554 < sym__0___45_519289659968682554 && (otherRec.sym__0__5824930074457018933 < sym__0__5824930074457018933 && (otherRec.sym__0__8300140134385342025 < sym__0__8300140134385342025 && (otherRec.sym__0___45_4363113810210080717 < sym__0___45_4363113810210080717 && (otherRec.sym__0___45_2180998471546424549 < sym__0___45_2180998471546424549 && (otherRec.sym__0___45_591129746765413155 < sym__0___45_591129746765413155 && (otherRec.sym__0___45_4416720451126861422 < sym__0___45_4416720451126861422 && (otherRec.sym__0___45_2100514126469912481 < sym__0___45_2100514126469912481 && (otherRec.sym__0__3750234095707159570 < sym__0__3750234095707159570 && (otherRec.sym__0___45_7960421939889289288 < sym__0___45_7960421939889289288 && (otherRec.sym__0___45_8655770192480484197 < sym__0___45_8655770192480484197 && (otherRec.sym__0__2072590499357086155 < sym__0__2072590499357086155 && (otherRec.sym__0__8268830136148095561 < sym__0__8268830136148095561 && (otherRec.sym__0___45_678210870537240385 < sym__0___45_678210870537240385 && (otherRec.sym__0__6112270341236569873 < sym__0__6112270341236569873 && (otherRec.sym__0__8598037934431251909 < sym__0__8598037934431251909 && (otherRec.sym__0__5291402561130019774 < sym__0__5291402561130019774 && (otherRec.sym__0___45_7851524774395097220 < sym__0___45_7851524774395097220 && (otherRec.sym__0__1291698872846441412 < sym__0__1291698872846441412 && (otherRec.sym__0__8986418791032324453 < sym__0__8986418791032324453 && (otherRec.sym__0__2167360253537002837 < sym__0__2167360253537002837 && (otherRec.sym__0__8141858625439628603 < sym__0__8141858625439628603 && (otherRec.sym__0___45_7931886843684217772 < sym__0___45_7931886843684217772 && (otherRec.sym__0___45_2549139954849286782 < sym__0___45_2549139954849286782 && (otherRec.sym__0___45_1691445119060855580 < sym__0___45_1691445119060855580 && (otherRec.sym__0__7474331622035256461 < sym__0__7474331622035256461 && (otherRec.sym__0___45_667953329600979866 < sym__0___45_667953329600979866 && (otherRec.sym__0___45_3035057609626888019 < sym__0___45_3035057609626888019 && (otherRec.sym__0___45_8476599677752189563 < sym__0___45_8476599677752189563 && (otherRec.sym__0___45_6389391189957387661 < sym__0___45_6389391189957387661 && (otherRec.sym__0___45_6486695610681891724 < sym__0___45_6486695610681891724 && (otherRec.sym__0__4796994603556539905 < sym__0__4796994603556539905 && (otherRec.sym__0___45_6306286879286504951 < sym__0___45_6306286879286504951 && (otherRec.sym__0___45_922796240211516024 < sym__0___45_922796240211516024 && (otherRec.sym__0__2810436566368623008 < sym__0__2810436566368623008 && (otherRec.sym__0__7272995257348976042 < sym__0__7272995257348976042 && (otherRec.sym__0__1928421907625115531 < sym__0__1928421907625115531 && (otherRec.sym__0__6254739572024865371 < sym__0__6254739572024865371 && (otherRec.sym__0___45_5257913184343802104 < sym__0___45_5257913184343802104 && (otherRec.sym__0___45_1520289822717538230 < sym__0___45_1520289822717538230 && (otherRec.sym__0___45_8628415396103686184 < sym__0___45_8628415396103686184 && (otherRec.sym__0__2109492732871942412 < sym__0__2109492732871942412 && (otherRec.sym__0__5385658520341277382 < sym__0__5385658520341277382 && (otherRec.sym__0__3660583386293997969 < sym__0__3660583386293997969 && otherRec.sym__0___45_3013711856665730696 < sym__0___45_3013711856665730696)))))))))))))))))))))))))))))))))))))))))))))))));
  }
  bool operator ==(const Record44& otherRec) const{
    return (otherRec.sym__0___45_531840894949671910 == sym__0___45_531840894949671910 && (otherRec.sym__0___45_7594568260455252811 == sym__0___45_7594568260455252811 && (otherRec.sym__0___45_4224396157642132841 == sym__0___45_4224396157642132841 && (otherRec.sym__0___45_5121813103072643223 == sym__0___45_5121813103072643223 && (otherRec.sym__0__3627274254091843899 == sym__0__3627274254091843899 && (otherRec.sym__0___45_519289659968682554 == sym__0___45_519289659968682554 && (otherRec.sym__0__5824930074457018933 == sym__0__5824930074457018933 && (otherRec.sym__0__8300140134385342025 == sym__0__8300140134385342025 && (otherRec.sym__0___45_4363113810210080717 == sym__0___45_4363113810210080717 && (otherRec.sym__0___45_2180998471546424549 == sym__0___45_2180998471546424549 && (otherRec.sym__0___45_591129746765413155 == sym__0___45_591129746765413155 && (otherRec.sym__0___45_4416720451126861422 == sym__0___45_4416720451126861422 && (otherRec.sym__0___45_2100514126469912481 == sym__0___45_2100514126469912481 && (otherRec.sym__0__3750234095707159570 == sym__0__3750234095707159570 && (otherRec.sym__0___45_7960421939889289288 == sym__0___45_7960421939889289288 && (otherRec.sym__0___45_8655770192480484197 == sym__0___45_8655770192480484197 && (otherRec.sym__0__2072590499357086155 == sym__0__2072590499357086155 && (otherRec.sym__0__8268830136148095561 == sym__0__8268830136148095561 && (otherRec.sym__0___45_678210870537240385 == sym__0___45_678210870537240385 && (otherRec.sym__0__6112270341236569873 == sym__0__6112270341236569873 && (otherRec.sym__0__8598037934431251909 == sym__0__8598037934431251909 && (otherRec.sym__0__5291402561130019774 == sym__0__5291402561130019774 && (otherRec.sym__0___45_7851524774395097220 == sym__0___45_7851524774395097220 && (otherRec.sym__0__1291698872846441412 == sym__0__1291698872846441412 && (otherRec.sym__0__8986418791032324453 == sym__0__8986418791032324453 && (otherRec.sym__0__2167360253537002837 == sym__0__2167360253537002837 && (otherRec.sym__0__8141858625439628603 == sym__0__8141858625439628603 && (otherRec.sym__0___45_7931886843684217772 == sym__0___45_7931886843684217772 && (otherRec.sym__0___45_2549139954849286782 == sym__0___45_2549139954849286782 && (otherRec.sym__0___45_1691445119060855580 == sym__0___45_1691445119060855580 && (otherRec.sym__0__7474331622035256461 == sym__0__7474331622035256461 && (otherRec.sym__0___45_667953329600979866 == sym__0___45_667953329600979866 && (otherRec.sym__0___45_3035057609626888019 == sym__0___45_3035057609626888019 && (otherRec.sym__0___45_8476599677752189563 == sym__0___45_8476599677752189563 && (otherRec.sym__0___45_6389391189957387661 == sym__0___45_6389391189957387661 && (otherRec.sym__0___45_6486695610681891724 == sym__0___45_6486695610681891724 && (otherRec.sym__0__4796994603556539905 == sym__0__4796994603556539905 && (otherRec.sym__0___45_6306286879286504951 == sym__0___45_6306286879286504951 && (otherRec.sym__0___45_922796240211516024 == sym__0___45_922796240211516024 && (otherRec.sym__0__2810436566368623008 == sym__0__2810436566368623008 && (otherRec.sym__0__7272995257348976042 == sym__0__7272995257348976042 && (otherRec.sym__0__1928421907625115531 == sym__0__1928421907625115531 && (otherRec.sym__0__6254739572024865371 == sym__0__6254739572024865371 && (otherRec.sym__0___45_5257913184343802104 == sym__0___45_5257913184343802104 && (otherRec.sym__0___45_1520289822717538230 == sym__0___45_1520289822717538230 && (otherRec.sym__0___45_8628415396103686184 == sym__0___45_8628415396103686184 && (otherRec.sym__0__2109492732871942412 == sym__0__2109492732871942412 && (otherRec.sym__0__5385658520341277382 == sym__0__5385658520341277382 && (otherRec.sym__0__3660583386293997969 == sym__0__3660583386293997969 && otherRec.sym__0___45_3013711856665730696 == sym__0___45_3013711856665730696)))))))))))))))))))))))))))))))))))))))))))))))));
  }
  bool operator !=(const Record44& otherRec) const{
    return (otherRec.sym__0___45_531840894949671910 != sym__0___45_531840894949671910 || (otherRec.sym__0___45_7594568260455252811 != sym__0___45_7594568260455252811 || (otherRec.sym__0___45_4224396157642132841 != sym__0___45_4224396157642132841 || (otherRec.sym__0___45_5121813103072643223 != sym__0___45_5121813103072643223 || (otherRec.sym__0__3627274254091843899 != sym__0__3627274254091843899 || (otherRec.sym__0___45_519289659968682554 != sym__0___45_519289659968682554 || (otherRec.sym__0__5824930074457018933 != sym__0__5824930074457018933 || (otherRec.sym__0__8300140134385342025 != sym__0__8300140134385342025 || (otherRec.sym__0___45_4363113810210080717 != sym__0___45_4363113810210080717 || (otherRec.sym__0___45_2180998471546424549 != sym__0___45_2180998471546424549 || (otherRec.sym__0___45_591129746765413155 != sym__0___45_591129746765413155 || (otherRec.sym__0___45_4416720451126861422 != sym__0___45_4416720451126861422 || (otherRec.sym__0___45_2100514126469912481 != sym__0___45_2100514126469912481 || (otherRec.sym__0__3750234095707159570 != sym__0__3750234095707159570 || (otherRec.sym__0___45_7960421939889289288 != sym__0___45_7960421939889289288 || (otherRec.sym__0___45_8655770192480484197 != sym__0___45_8655770192480484197 || (otherRec.sym__0__2072590499357086155 != sym__0__2072590499357086155 || (otherRec.sym__0__8268830136148095561 != sym__0__8268830136148095561 || (otherRec.sym__0___45_678210870537240385 != sym__0___45_678210870537240385 || (otherRec.sym__0__6112270341236569873 != sym__0__6112270341236569873 || (otherRec.sym__0__8598037934431251909 != sym__0__8598037934431251909 || (otherRec.sym__0__5291402561130019774 != sym__0__5291402561130019774 || (otherRec.sym__0___45_7851524774395097220 != sym__0___45_7851524774395097220 || (otherRec.sym__0__1291698872846441412 != sym__0__1291698872846441412 || (otherRec.sym__0__8986418791032324453 != sym__0__8986418791032324453 || (otherRec.sym__0__2167360253537002837 != sym__0__2167360253537002837 || (otherRec.sym__0__8141858625439628603 != sym__0__8141858625439628603 || (otherRec.sym__0___45_7931886843684217772 != sym__0___45_7931886843684217772 || (otherRec.sym__0___45_2549139954849286782 != sym__0___45_2549139954849286782 || (otherRec.sym__0___45_1691445119060855580 != sym__0___45_1691445119060855580 || (otherRec.sym__0__7474331622035256461 != sym__0__7474331622035256461 || (otherRec.sym__0___45_667953329600979866 != sym__0___45_667953329600979866 || (otherRec.sym__0___45_3035057609626888019 != sym__0___45_3035057609626888019 || (otherRec.sym__0___45_8476599677752189563 != sym__0___45_8476599677752189563 || (otherRec.sym__0___45_6389391189957387661 != sym__0___45_6389391189957387661 || (otherRec.sym__0___45_6486695610681891724 != sym__0___45_6486695610681891724 || (otherRec.sym__0__4796994603556539905 != sym__0__4796994603556539905 || (otherRec.sym__0___45_6306286879286504951 != sym__0___45_6306286879286504951 || (otherRec.sym__0___45_922796240211516024 != sym__0___45_922796240211516024 || (otherRec.sym__0__2810436566368623008 != sym__0__2810436566368623008 || (otherRec.sym__0__7272995257348976042 != sym__0__7272995257348976042 || (otherRec.sym__0__1928421907625115531 != sym__0__1928421907625115531 || (otherRec.sym__0__6254739572024865371 != sym__0__6254739572024865371 || (otherRec.sym__0___45_5257913184343802104 != sym__0___45_5257913184343802104 || (otherRec.sym__0___45_1520289822717538230 != sym__0___45_1520289822717538230 || (otherRec.sym__0___45_8628415396103686184 != sym__0___45_8628415396103686184 || (otherRec.sym__0__2109492732871942412 != sym__0__2109492732871942412 || (otherRec.sym__0__5385658520341277382 != sym__0__5385658520341277382 || (otherRec.sym__0__3660583386293997969 != sym__0__3660583386293997969 || otherRec.sym__0___45_3013711856665730696 != sym__0___45_3013711856665730696)))))))))))))))))))))))))))))))))))))))))))))))));
  }
  unsigned sym__0___45_531840894949671910;
  fluidb_string<25> sym__0___45_7594568260455252811;
  fluidb_string<40> sym__0___45_4224396157642132841;
  fluidb_string<16> sym__0___45_5121813103072643223;
  fluidb_string<16> sym__0__3627274254091843899;
  fluidb_string<13> sym__0___45_519289659968682554;
  fluidb_string<15> sym__0__5824930074457018933;
  unsigned sym__0__8300140134385342025;
  int sym__0___45_4363113810210080717;
  unsigned sym__0___45_2180998471546424549;
  unsigned sym__0___45_591129746765413155;
  unsigned sym__0___45_4416720451126861422;
  unsigned sym__0___45_2100514126469912481;
  fluidb_string<21> sym__0__3750234095707159570;
  unsigned sym__0___45_7960421939889289288;
  fluidb_string<10> sym__0___45_8655770192480484197;
  unsigned sym__0__2072590499357086155;
  double sym__0__8268830136148095561;
  unsigned sym__0___45_678210870537240385;
  double sym__0__6112270341236569873;
  unsigned sym__0__8598037934431251909;
  unsigned sym__0__5291402561130019774;
  double sym__0___45_7851524774395097220;
  fluidb_string<13> sym__0__1291698872846441412;
  unsigned sym__0__8986418791032324453;
  fluidb_string<18> sym__0__2167360253537002837;
  fluidb_string<9> sym__0__8141858625439628603;
  fluidb_string<9> sym__0___45_7931886843684217772;
  unsigned sym__0___45_2549139954849286782;
  unsigned sym__0___45_1691445119060855580;
  fluidb_string<7> sym__0__7474331622035256461;
  unsigned sym__0___45_667953329600979866;
  unsigned sym__0___45_3035057609626888019;
  unsigned sym__0___45_8476599677752189563;
  unsigned sym__0___45_6389391189957387661;
  unsigned sym__0___45_6486695610681891724;
  fluidb_string<15> sym__0__4796994603556539905;
  fluidb_string<2> sym__0___45_6306286879286504951;
  fluidb_string<2> sym__0___45_922796240211516024;
  fluidb_string<2> sym__0__2810436566368623008;
  fluidb_string<2> sym__0__7272995257348976042;
  unsigned sym__0__1928421907625115531;
  fluidb_string<55> sym__0__6254739572024865371;
  fluidb_string<25> sym__0___45_5257913184343802104;
  fluidb_string<7> sym__0___45_1520289822717538230;
  fluidb_string<10> sym__0___45_8628415396103686184;
  fluidb_string<11> sym__0__2109492732871942412;
  fluidb_string<25> sym__0__5385658520341277382;
  unsigned sym__0__3660583386293997969;
  fluidb_string<10> sym__0___45_3013711856665730696;
 private:
};


class Record15 {
 public:
  Record15(unsigned __sym__0___45_7574074018531922998, int __sym__0__1125464382786937920, unsigned __sym__0___45_8257174981563598792, unsigned __sym__0__957746932829998382, unsigned __sym__0__934137931677987637, unsigned __sym__0___45_7332894783442362324, fluidb_string<21> __sym__0__8974811218372806325, unsigned __sym__0___45_5217562530132451785, fluidb_string<10> __sym__0__7851147553396318904, unsigned __sym__0___45_4975505511391694456, double __sym__0___45_7249986409969561654, unsigned __sym__0__4671626969570181580, double __sym__0___45_3666121704283105054, unsigned __sym__0__5495011930072844518, unsigned __sym__0___45_4423447118092167055, double __sym__0___45_1608082021099887893, fluidb_string<13> __sym__0__1584187396639360899) : sym__0___45_7574074018531922998(__sym__0___45_7574074018531922998), sym__0__1125464382786937920(__sym__0__1125464382786937920), sym__0___45_8257174981563598792(__sym__0___45_8257174981563598792), sym__0__957746932829998382(__sym__0__957746932829998382), sym__0__934137931677987637(__sym__0__934137931677987637), sym__0___45_7332894783442362324(__sym__0___45_7332894783442362324), sym__0__8974811218372806325(__sym__0__8974811218372806325), sym__0___45_5217562530132451785(__sym__0___45_5217562530132451785), sym__0__7851147553396318904(__sym__0__7851147553396318904), sym__0___45_4975505511391694456(__sym__0___45_4975505511391694456), sym__0___45_7249986409969561654(__sym__0___45_7249986409969561654), sym__0__4671626969570181580(__sym__0__4671626969570181580), sym__0___45_3666121704283105054(__sym__0___45_3666121704283105054), sym__0__5495011930072844518(__sym__0__5495011930072844518), sym__0___45_4423447118092167055(__sym__0___45_4423447118092167055), sym__0___45_1608082021099887893(__sym__0___45_1608082021099887893), sym__0__1584187396639360899(__sym__0__1584187396639360899)
  {
  }
  Record15() 
  {
  }
  std::string show() const{
    std::stringstream o;
    o << sym__0___45_7574074018531922998 << " | " << sym__0__1125464382786937920 << " | " << sym__0___45_8257174981563598792 << " | " << sym__0__957746932829998382 << " | " << sym__0__934137931677987637 << " | " << sym__0___45_7332894783442362324 << " | " << arrToString(sym__0__8974811218372806325) << " | " << sym__0___45_5217562530132451785 << " | " << arrToString(sym__0__7851147553396318904) << " | " << sym__0___45_4975505511391694456 << " | " << sym__0___45_7249986409969561654 << " | " << sym__0__4671626969570181580 << " | " << sym__0___45_3666121704283105054 << " | " << sym__0__5495011930072844518 << " | " << sym__0___45_4423447118092167055 << " | " << sym__0___45_1608082021099887893 << " | " << arrToString(sym__0__1584187396639360899);
    return o.str();
  }
  bool operator <(const Record15& otherRec) const{
    return (otherRec.sym__0___45_7574074018531922998 < sym__0___45_7574074018531922998 && (otherRec.sym__0__1125464382786937920 < sym__0__1125464382786937920 && (otherRec.sym__0___45_8257174981563598792 < sym__0___45_8257174981563598792 && (otherRec.sym__0__957746932829998382 < sym__0__957746932829998382 && (otherRec.sym__0__934137931677987637 < sym__0__934137931677987637 && (otherRec.sym__0___45_7332894783442362324 < sym__0___45_7332894783442362324 && (otherRec.sym__0__8974811218372806325 < sym__0__8974811218372806325 && (otherRec.sym__0___45_5217562530132451785 < sym__0___45_5217562530132451785 && (otherRec.sym__0__7851147553396318904 < sym__0__7851147553396318904 && (otherRec.sym__0___45_4975505511391694456 < sym__0___45_4975505511391694456 && (otherRec.sym__0___45_7249986409969561654 < sym__0___45_7249986409969561654 && (otherRec.sym__0__4671626969570181580 < sym__0__4671626969570181580 && (otherRec.sym__0___45_3666121704283105054 < sym__0___45_3666121704283105054 && (otherRec.sym__0__5495011930072844518 < sym__0__5495011930072844518 && (otherRec.sym__0___45_4423447118092167055 < sym__0___45_4423447118092167055 && (otherRec.sym__0___45_1608082021099887893 < sym__0___45_1608082021099887893 && otherRec.sym__0__1584187396639360899 < sym__0__1584187396639360899))))))))))))))));
  }
  bool operator ==(const Record15& otherRec) const{
    return (otherRec.sym__0___45_7574074018531922998 == sym__0___45_7574074018531922998 && (otherRec.sym__0__1125464382786937920 == sym__0__1125464382786937920 && (otherRec.sym__0___45_8257174981563598792 == sym__0___45_8257174981563598792 && (otherRec.sym__0__957746932829998382 == sym__0__957746932829998382 && (otherRec.sym__0__934137931677987637 == sym__0__934137931677987637 && (otherRec.sym__0___45_7332894783442362324 == sym__0___45_7332894783442362324 && (otherRec.sym__0__8974811218372806325 == sym__0__8974811218372806325 && (otherRec.sym__0___45_5217562530132451785 == sym__0___45_5217562530132451785 && (otherRec.sym__0__7851147553396318904 == sym__0__7851147553396318904 && (otherRec.sym__0___45_4975505511391694456 == sym__0___45_4975505511391694456 && (otherRec.sym__0___45_7249986409969561654 == sym__0___45_7249986409969561654 && (otherRec.sym__0__4671626969570181580 == sym__0__4671626969570181580 && (otherRec.sym__0___45_3666121704283105054 == sym__0___45_3666121704283105054 && (otherRec.sym__0__5495011930072844518 == sym__0__5495011930072844518 && (otherRec.sym__0___45_4423447118092167055 == sym__0___45_4423447118092167055 && (otherRec.sym__0___45_1608082021099887893 == sym__0___45_1608082021099887893 && otherRec.sym__0__1584187396639360899 == sym__0__1584187396639360899))))))))))))))));
  }
  bool operator !=(const Record15& otherRec) const{
    return (otherRec.sym__0___45_7574074018531922998 != sym__0___45_7574074018531922998 || (otherRec.sym__0__1125464382786937920 != sym__0__1125464382786937920 || (otherRec.sym__0___45_8257174981563598792 != sym__0___45_8257174981563598792 || (otherRec.sym__0__957746932829998382 != sym__0__957746932829998382 || (otherRec.sym__0__934137931677987637 != sym__0__934137931677987637 || (otherRec.sym__0___45_7332894783442362324 != sym__0___45_7332894783442362324 || (otherRec.sym__0__8974811218372806325 != sym__0__8974811218372806325 || (otherRec.sym__0___45_5217562530132451785 != sym__0___45_5217562530132451785 || (otherRec.sym__0__7851147553396318904 != sym__0__7851147553396318904 || (otherRec.sym__0___45_4975505511391694456 != sym__0___45_4975505511391694456 || (otherRec.sym__0___45_7249986409969561654 != sym__0___45_7249986409969561654 || (otherRec.sym__0__4671626969570181580 != sym__0__4671626969570181580 || (otherRec.sym__0___45_3666121704283105054 != sym__0___45_3666121704283105054 || (otherRec.sym__0__5495011930072844518 != sym__0__5495011930072844518 || (otherRec.sym__0___45_4423447118092167055 != sym__0___45_4423447118092167055 || (otherRec.sym__0___45_1608082021099887893 != sym__0___45_1608082021099887893 || otherRec.sym__0__1584187396639360899 != sym__0__1584187396639360899))))))))))))))));
  }
  unsigned sym__0___45_7574074018531922998;
  int sym__0__1125464382786937920;
  unsigned sym__0___45_8257174981563598792;
  unsigned sym__0__957746932829998382;
  unsigned sym__0__934137931677987637;
  unsigned sym__0___45_7332894783442362324;
  fluidb_string<21> sym__0__8974811218372806325;
  unsigned sym__0___45_5217562530132451785;
  fluidb_string<10> sym__0__7851147553396318904;
  unsigned sym__0___45_4975505511391694456;
  double sym__0___45_7249986409969561654;
  unsigned sym__0__4671626969570181580;
  double sym__0___45_3666121704283105054;
  unsigned sym__0__5495011930072844518;
  unsigned sym__0___45_4423447118092167055;
  double sym__0___45_1608082021099887893;
  fluidb_string<13> sym__0__1584187396639360899;
 private:
};


class Record18 {
 public:
  Record18(unsigned __sortElem0) : sortElem0(__sortElem0)
  {
  }
  Record18() 
  {
  }
  std::string show() const{
    std::stringstream o;
    o << sortElem0;
    return o.str();
  }
  bool operator <(const Record18& otherRec) const{
    return otherRec.sortElem0 < sortElem0;
  }
  bool operator ==(const Record18& otherRec) const{
    return otherRec.sortElem0 == sortElem0;
  }
  bool operator !=(const Record18& otherRec) const{
    return otherRec.sortElem0 != sortElem0;
  }
  unsigned sortElem0;
 private:
};


class Record14 {
 public:
  Record14(unsigned __sym__0__2037864888707786451, fluidb_string<18> __sym__0__8533656712666151747, fluidb_string<9> __sym__0__646314041574508429, fluidb_string<9> __sym__0__6064137978327902054, unsigned __sym__0__3754157776500852496, unsigned __sym__0__6284345160241949046, fluidb_string<7> __sym__0___45_773692805971570325, unsigned __sym__0___45_8399474032083007524, unsigned __sym__0___45_2038947427357444789, unsigned __sym__0__6071994954612827827, unsigned __sym__0__7742515703067448213, unsigned __sym__0__5201219213304227654, fluidb_string<15> __sym__0___45_5896625796158057241, fluidb_string<2> __sym__0___45_1108504872221226081, fluidb_string<2> __sym__0__1055103969674359346, fluidb_string<2> __sym__0__9115626546918942554, fluidb_string<2> __sym__0___45_6850413444013389848) : sym__0__2037864888707786451(__sym__0__2037864888707786451), sym__0__8533656712666151747(__sym__0__8533656712666151747), sym__0__646314041574508429(__sym__0__646314041574508429), sym__0__6064137978327902054(__sym__0__6064137978327902054), sym__0__3754157776500852496(__sym__0__3754157776500852496), sym__0__6284345160241949046(__sym__0__6284345160241949046), sym__0___45_773692805971570325(__sym__0___45_773692805971570325), sym__0___45_8399474032083007524(__sym__0___45_8399474032083007524), sym__0___45_2038947427357444789(__sym__0___45_2038947427357444789), sym__0__6071994954612827827(__sym__0__6071994954612827827), sym__0__7742515703067448213(__sym__0__7742515703067448213), sym__0__5201219213304227654(__sym__0__5201219213304227654), sym__0___45_5896625796158057241(__sym__0___45_5896625796158057241), sym__0___45_1108504872221226081(__sym__0___45_1108504872221226081), sym__0__1055103969674359346(__sym__0__1055103969674359346), sym__0__9115626546918942554(__sym__0__9115626546918942554), sym__0___45_6850413444013389848(__sym__0___45_6850413444013389848)
  {
  }
  Record14() 
  {
  }
  std::string show() const{
    std::stringstream o;
    o << sym__0__2037864888707786451 << " | " << arrToString(sym__0__8533656712666151747) << " | " << arrToString(sym__0__646314041574508429) << " | " << arrToString(sym__0__6064137978327902054) << " | " << sym__0__3754157776500852496 << " | " << sym__0__6284345160241949046 << " | " << arrToString(sym__0___45_773692805971570325) << " | " << sym__0___45_8399474032083007524 << " | " << sym__0___45_2038947427357444789 << " | " << sym__0__6071994954612827827 << " | " << sym__0__7742515703067448213 << " | " << sym__0__5201219213304227654 << " | " << arrToString(sym__0___45_5896625796158057241) << " | " << arrToString(sym__0___45_1108504872221226081) << " | " << arrToString(sym__0__1055103969674359346) << " | " << arrToString(sym__0__9115626546918942554) << " | " << arrToString(sym__0___45_6850413444013389848);
    return o.str();
  }
  bool operator <(const Record14& otherRec) const{
    return (otherRec.sym__0__2037864888707786451 < sym__0__2037864888707786451 && (otherRec.sym__0__8533656712666151747 < sym__0__8533656712666151747 && (otherRec.sym__0__646314041574508429 < sym__0__646314041574508429 && (otherRec.sym__0__6064137978327902054 < sym__0__6064137978327902054 && (otherRec.sym__0__3754157776500852496 < sym__0__3754157776500852496 && (otherRec.sym__0__6284345160241949046 < sym__0__6284345160241949046 && (otherRec.sym__0___45_773692805971570325 < sym__0___45_773692805971570325 && (otherRec.sym__0___45_8399474032083007524 < sym__0___45_8399474032083007524 && (otherRec.sym__0___45_2038947427357444789 < sym__0___45_2038947427357444789 && (otherRec.sym__0__6071994954612827827 < sym__0__6071994954612827827 && (otherRec.sym__0__7742515703067448213 < sym__0__7742515703067448213 && (otherRec.sym__0__5201219213304227654 < sym__0__5201219213304227654 && (otherRec.sym__0___45_5896625796158057241 < sym__0___45_5896625796158057241 && (otherRec.sym__0___45_1108504872221226081 < sym__0___45_1108504872221226081 && (otherRec.sym__0__1055103969674359346 < sym__0__1055103969674359346 && (otherRec.sym__0__9115626546918942554 < sym__0__9115626546918942554 && otherRec.sym__0___45_6850413444013389848 < sym__0___45_6850413444013389848))))))))))))))));
  }
  bool operator ==(const Record14& otherRec) const{
    return (otherRec.sym__0__2037864888707786451 == sym__0__2037864888707786451 && (otherRec.sym__0__8533656712666151747 == sym__0__8533656712666151747 && (otherRec.sym__0__646314041574508429 == sym__0__646314041574508429 && (otherRec.sym__0__6064137978327902054 == sym__0__6064137978327902054 && (otherRec.sym__0__3754157776500852496 == sym__0__3754157776500852496 && (otherRec.sym__0__6284345160241949046 == sym__0__6284345160241949046 && (otherRec.sym__0___45_773692805971570325 == sym__0___45_773692805971570325 && (otherRec.sym__0___45_8399474032083007524 == sym__0___45_8399474032083007524 && (otherRec.sym__0___45_2038947427357444789 == sym__0___45_2038947427357444789 && (otherRec.sym__0__6071994954612827827 == sym__0__6071994954612827827 && (otherRec.sym__0__7742515703067448213 == sym__0__7742515703067448213 && (otherRec.sym__0__5201219213304227654 == sym__0__5201219213304227654 && (otherRec.sym__0___45_5896625796158057241 == sym__0___45_5896625796158057241 && (otherRec.sym__0___45_1108504872221226081 == sym__0___45_1108504872221226081 && (otherRec.sym__0__1055103969674359346 == sym__0__1055103969674359346 && (otherRec.sym__0__9115626546918942554 == sym__0__9115626546918942554 && otherRec.sym__0___45_6850413444013389848 == sym__0___45_6850413444013389848))))))))))))))));
  }
  bool operator !=(const Record14& otherRec) const{
    return (otherRec.sym__0__2037864888707786451 != sym__0__2037864888707786451 || (otherRec.sym__0__8533656712666151747 != sym__0__8533656712666151747 || (otherRec.sym__0__646314041574508429 != sym__0__646314041574508429 || (otherRec.sym__0__6064137978327902054 != sym__0__6064137978327902054 || (otherRec.sym__0__3754157776500852496 != sym__0__3754157776500852496 || (otherRec.sym__0__6284345160241949046 != sym__0__6284345160241949046 || (otherRec.sym__0___45_773692805971570325 != sym__0___45_773692805971570325 || (otherRec.sym__0___45_8399474032083007524 != sym__0___45_8399474032083007524 || (otherRec.sym__0___45_2038947427357444789 != sym__0___45_2038947427357444789 || (otherRec.sym__0__6071994954612827827 != sym__0__6071994954612827827 || (otherRec.sym__0__7742515703067448213 != sym__0__7742515703067448213 || (otherRec.sym__0__5201219213304227654 != sym__0__5201219213304227654 || (otherRec.sym__0___45_5896625796158057241 != sym__0___45_5896625796158057241 || (otherRec.sym__0___45_1108504872221226081 != sym__0___45_1108504872221226081 || (otherRec.sym__0__1055103969674359346 != sym__0__1055103969674359346 || (otherRec.sym__0__9115626546918942554 != sym__0__9115626546918942554 || otherRec.sym__0___45_6850413444013389848 != sym__0___45_6850413444013389848))))))))))))))));
  }
  unsigned sym__0__2037864888707786451;
  fluidb_string<18> sym__0__8533656712666151747;
  fluidb_string<9> sym__0__646314041574508429;
  fluidb_string<9> sym__0__6064137978327902054;
  unsigned sym__0__3754157776500852496;
  unsigned sym__0__6284345160241949046;
  fluidb_string<7> sym__0___45_773692805971570325;
  unsigned sym__0___45_8399474032083007524;
  unsigned sym__0___45_2038947427357444789;
  unsigned sym__0__6071994954612827827;
  unsigned sym__0__7742515703067448213;
  unsigned sym__0__5201219213304227654;
  fluidb_string<15> sym__0___45_5896625796158057241;
  fluidb_string<2> sym__0___45_1108504872221226081;
  fluidb_string<2> sym__0__1055103969674359346;
  fluidb_string<2> sym__0__9115626546918942554;
  fluidb_string<2> sym__0___45_6850413444013389848;
 private:
};


class Record8 {
 public:
  Record8(unsigned __sym__0__2833764152503888409, fluidb_string<18> __sym__0__6938021140779677761, fluidb_string<40> __sym__0___45_4700201805806600089, fluidb_string<11> __sym__0__3362667619044778557, fluidb_string<15> __sym__0__2679827580767046755, fluidb_string<13> __sym__0___45_4186304031693649930, fluidb_string<15> __sym__0__8596564865999609793, fluidb_string<21> __sym__0___45_1671053890158572571, unsigned __sym__0__2256924431415148013, int __sym__0__347872876320563651, unsigned __sym__0___45_7666447219434903317, unsigned __sym__0__1272718151591622153, unsigned __sym__0__4584633926271658914, unsigned __sym__0___45_4610773208091240233, fluidb_string<21> __sym__0___45_5766638191766435038, unsigned __sym__0___45_5211223358204127380, fluidb_string<10> __sym__0__8435431464460332395, unsigned __sym__0___45_6450191115912157957, double __sym__0__7921907673157171693, unsigned __sym__0___45_1699747741436218441, double __sym__0___45_2985562469054236715, unsigned __sym__0__3746029949899912401, unsigned __sym__0___45_989155948099215770, double __sym__0___45_1667761180508152936, fluidb_string<13> __sym__0__5854462121170882944, unsigned __sym__0___45_1023382914117654422, fluidb_string<25> __sym__0__6224010339127806049, fluidb_string<40> __sym__0___45_8804639047977952305, fluidb_string<16> __sym__0__8926375957639307021, fluidb_string<16> __sym__0__5153200798583684363, fluidb_string<13> __sym__0___45_794494697990656050, fluidb_string<15> __sym__0__7308161412148661473) : sym__0__2833764152503888409(__sym__0__2833764152503888409), sym__0__6938021140779677761(__sym__0__6938021140779677761), sym__0___45_4700201805806600089(__sym__0___45_4700201805806600089), sym__0__3362667619044778557(__sym__0__3362667619044778557), sym__0__2679827580767046755(__sym__0__2679827580767046755), sym__0___45_4186304031693649930(__sym__0___45_4186304031693649930), sym__0__8596564865999609793(__sym__0__8596564865999609793), sym__0___45_1671053890158572571(__sym__0___45_1671053890158572571), sym__0__2256924431415148013(__sym__0__2256924431415148013), sym__0__347872876320563651(__sym__0__347872876320563651), sym__0___45_7666447219434903317(__sym__0___45_7666447219434903317), sym__0__1272718151591622153(__sym__0__1272718151591622153), sym__0__4584633926271658914(__sym__0__4584633926271658914), sym__0___45_4610773208091240233(__sym__0___45_4610773208091240233), sym__0___45_5766638191766435038(__sym__0___45_5766638191766435038), sym__0___45_5211223358204127380(__sym__0___45_5211223358204127380), sym__0__8435431464460332395(__sym__0__8435431464460332395), sym__0___45_6450191115912157957(__sym__0___45_6450191115912157957), sym__0__7921907673157171693(__sym__0__7921907673157171693), sym__0___45_1699747741436218441(__sym__0___45_1699747741436218441), sym__0___45_2985562469054236715(__sym__0___45_2985562469054236715), sym__0__3746029949899912401(__sym__0__3746029949899912401), sym__0___45_989155948099215770(__sym__0___45_989155948099215770), sym__0___45_1667761180508152936(__sym__0___45_1667761180508152936), sym__0__5854462121170882944(__sym__0__5854462121170882944), sym__0___45_1023382914117654422(__sym__0___45_1023382914117654422), sym__0__6224010339127806049(__sym__0__6224010339127806049), sym__0___45_8804639047977952305(__sym__0___45_8804639047977952305), sym__0__8926375957639307021(__sym__0__8926375957639307021), sym__0__5153200798583684363(__sym__0__5153200798583684363), sym__0___45_794494697990656050(__sym__0___45_794494697990656050), sym__0__7308161412148661473(__sym__0__7308161412148661473)
  {
  }
  Record8() 
  {
  }
  std::string show() const{
    std::stringstream o;
    o << sym__0__2833764152503888409 << " | " << arrToString(sym__0__6938021140779677761) << " | " << arrToString(sym__0___45_4700201805806600089) << " | " << arrToString(sym__0__3362667619044778557) << " | " << arrToString(sym__0__2679827580767046755) << " | " << arrToString(sym__0___45_4186304031693649930) << " | " << arrToString(sym__0__8596564865999609793) << " | " << arrToString(sym__0___45_1671053890158572571) << " | " << sym__0__2256924431415148013 << " | " << sym__0__347872876320563651 << " | " << sym__0___45_7666447219434903317 << " | " << sym__0__1272718151591622153 << " | " << sym__0__4584633926271658914 << " | " << sym__0___45_4610773208091240233 << " | " << arrToString(sym__0___45_5766638191766435038) << " | " << sym__0___45_5211223358204127380 << " | " << arrToString(sym__0__8435431464460332395) << " | " << sym__0___45_6450191115912157957 << " | " << sym__0__7921907673157171693 << " | " << sym__0___45_1699747741436218441 << " | " << sym__0___45_2985562469054236715 << " | " << sym__0__3746029949899912401 << " | " << sym__0___45_989155948099215770 << " | " << sym__0___45_1667761180508152936 << " | " << arrToString(sym__0__5854462121170882944) << " | " << sym__0___45_1023382914117654422 << " | " << arrToString(sym__0__6224010339127806049) << " | " << arrToString(sym__0___45_8804639047977952305) << " | " << arrToString(sym__0__8926375957639307021) << " | " << arrToString(sym__0__5153200798583684363) << " | " << arrToString(sym__0___45_794494697990656050) << " | " << arrToString(sym__0__7308161412148661473);
    return o.str();
  }
  bool operator <(const Record8& otherRec) const{
    return (otherRec.sym__0__2833764152503888409 < sym__0__2833764152503888409 && (otherRec.sym__0__6938021140779677761 < sym__0__6938021140779677761 && (otherRec.sym__0___45_4700201805806600089 < sym__0___45_4700201805806600089 && (otherRec.sym__0__3362667619044778557 < sym__0__3362667619044778557 && (otherRec.sym__0__2679827580767046755 < sym__0__2679827580767046755 && (otherRec.sym__0___45_4186304031693649930 < sym__0___45_4186304031693649930 && (otherRec.sym__0__8596564865999609793 < sym__0__8596564865999609793 && (otherRec.sym__0___45_1671053890158572571 < sym__0___45_1671053890158572571 && (otherRec.sym__0__2256924431415148013 < sym__0__2256924431415148013 && (otherRec.sym__0__347872876320563651 < sym__0__347872876320563651 && (otherRec.sym__0___45_7666447219434903317 < sym__0___45_7666447219434903317 && (otherRec.sym__0__1272718151591622153 < sym__0__1272718151591622153 && (otherRec.sym__0__4584633926271658914 < sym__0__4584633926271658914 && (otherRec.sym__0___45_4610773208091240233 < sym__0___45_4610773208091240233 && (otherRec.sym__0___45_5766638191766435038 < sym__0___45_5766638191766435038 && (otherRec.sym__0___45_5211223358204127380 < sym__0___45_5211223358204127380 && (otherRec.sym__0__8435431464460332395 < sym__0__8435431464460332395 && (otherRec.sym__0___45_6450191115912157957 < sym__0___45_6450191115912157957 && (otherRec.sym__0__7921907673157171693 < sym__0__7921907673157171693 && (otherRec.sym__0___45_1699747741436218441 < sym__0___45_1699747741436218441 && (otherRec.sym__0___45_2985562469054236715 < sym__0___45_2985562469054236715 && (otherRec.sym__0__3746029949899912401 < sym__0__3746029949899912401 && (otherRec.sym__0___45_989155948099215770 < sym__0___45_989155948099215770 && (otherRec.sym__0___45_1667761180508152936 < sym__0___45_1667761180508152936 && (otherRec.sym__0__5854462121170882944 < sym__0__5854462121170882944 && (otherRec.sym__0___45_1023382914117654422 < sym__0___45_1023382914117654422 && (otherRec.sym__0__6224010339127806049 < sym__0__6224010339127806049 && (otherRec.sym__0___45_8804639047977952305 < sym__0___45_8804639047977952305 && (otherRec.sym__0__8926375957639307021 < sym__0__8926375957639307021 && (otherRec.sym__0__5153200798583684363 < sym__0__5153200798583684363 && (otherRec.sym__0___45_794494697990656050 < sym__0___45_794494697990656050 && otherRec.sym__0__7308161412148661473 < sym__0__7308161412148661473)))))))))))))))))))))))))))))));
  }
  bool operator ==(const Record8& otherRec) const{
    return (otherRec.sym__0__2833764152503888409 == sym__0__2833764152503888409 && (otherRec.sym__0__6938021140779677761 == sym__0__6938021140779677761 && (otherRec.sym__0___45_4700201805806600089 == sym__0___45_4700201805806600089 && (otherRec.sym__0__3362667619044778557 == sym__0__3362667619044778557 && (otherRec.sym__0__2679827580767046755 == sym__0__2679827580767046755 && (otherRec.sym__0___45_4186304031693649930 == sym__0___45_4186304031693649930 && (otherRec.sym__0__8596564865999609793 == sym__0__8596564865999609793 && (otherRec.sym__0___45_1671053890158572571 == sym__0___45_1671053890158572571 && (otherRec.sym__0__2256924431415148013 == sym__0__2256924431415148013 && (otherRec.sym__0__347872876320563651 == sym__0__347872876320563651 && (otherRec.sym__0___45_7666447219434903317 == sym__0___45_7666447219434903317 && (otherRec.sym__0__1272718151591622153 == sym__0__1272718151591622153 && (otherRec.sym__0__4584633926271658914 == sym__0__4584633926271658914 && (otherRec.sym__0___45_4610773208091240233 == sym__0___45_4610773208091240233 && (otherRec.sym__0___45_5766638191766435038 == sym__0___45_5766638191766435038 && (otherRec.sym__0___45_5211223358204127380 == sym__0___45_5211223358204127380 && (otherRec.sym__0__8435431464460332395 == sym__0__8435431464460332395 && (otherRec.sym__0___45_6450191115912157957 == sym__0___45_6450191115912157957 && (otherRec.sym__0__7921907673157171693 == sym__0__7921907673157171693 && (otherRec.sym__0___45_1699747741436218441 == sym__0___45_1699747741436218441 && (otherRec.sym__0___45_2985562469054236715 == sym__0___45_2985562469054236715 && (otherRec.sym__0__3746029949899912401 == sym__0__3746029949899912401 && (otherRec.sym__0___45_989155948099215770 == sym__0___45_989155948099215770 && (otherRec.sym__0___45_1667761180508152936 == sym__0___45_1667761180508152936 && (otherRec.sym__0__5854462121170882944 == sym__0__5854462121170882944 && (otherRec.sym__0___45_1023382914117654422 == sym__0___45_1023382914117654422 && (otherRec.sym__0__6224010339127806049 == sym__0__6224010339127806049 && (otherRec.sym__0___45_8804639047977952305 == sym__0___45_8804639047977952305 && (otherRec.sym__0__8926375957639307021 == sym__0__8926375957639307021 && (otherRec.sym__0__5153200798583684363 == sym__0__5153200798583684363 && (otherRec.sym__0___45_794494697990656050 == sym__0___45_794494697990656050 && otherRec.sym__0__7308161412148661473 == sym__0__7308161412148661473)))))))))))))))))))))))))))))));
  }
  bool operator !=(const Record8& otherRec) const{
    return (otherRec.sym__0__2833764152503888409 != sym__0__2833764152503888409 || (otherRec.sym__0__6938021140779677761 != sym__0__6938021140779677761 || (otherRec.sym__0___45_4700201805806600089 != sym__0___45_4700201805806600089 || (otherRec.sym__0__3362667619044778557 != sym__0__3362667619044778557 || (otherRec.sym__0__2679827580767046755 != sym__0__2679827580767046755 || (otherRec.sym__0___45_4186304031693649930 != sym__0___45_4186304031693649930 || (otherRec.sym__0__8596564865999609793 != sym__0__8596564865999609793 || (otherRec.sym__0___45_1671053890158572571 != sym__0___45_1671053890158572571 || (otherRec.sym__0__2256924431415148013 != sym__0__2256924431415148013 || (otherRec.sym__0__347872876320563651 != sym__0__347872876320563651 || (otherRec.sym__0___45_7666447219434903317 != sym__0___45_7666447219434903317 || (otherRec.sym__0__1272718151591622153 != sym__0__1272718151591622153 || (otherRec.sym__0__4584633926271658914 != sym__0__4584633926271658914 || (otherRec.sym__0___45_4610773208091240233 != sym__0___45_4610773208091240233 || (otherRec.sym__0___45_5766638191766435038 != sym__0___45_5766638191766435038 || (otherRec.sym__0___45_5211223358204127380 != sym__0___45_5211223358204127380 || (otherRec.sym__0__8435431464460332395 != sym__0__8435431464460332395 || (otherRec.sym__0___45_6450191115912157957 != sym__0___45_6450191115912157957 || (otherRec.sym__0__7921907673157171693 != sym__0__7921907673157171693 || (otherRec.sym__0___45_1699747741436218441 != sym__0___45_1699747741436218441 || (otherRec.sym__0___45_2985562469054236715 != sym__0___45_2985562469054236715 || (otherRec.sym__0__3746029949899912401 != sym__0__3746029949899912401 || (otherRec.sym__0___45_989155948099215770 != sym__0___45_989155948099215770 || (otherRec.sym__0___45_1667761180508152936 != sym__0___45_1667761180508152936 || (otherRec.sym__0__5854462121170882944 != sym__0__5854462121170882944 || (otherRec.sym__0___45_1023382914117654422 != sym__0___45_1023382914117654422 || (otherRec.sym__0__6224010339127806049 != sym__0__6224010339127806049 || (otherRec.sym__0___45_8804639047977952305 != sym__0___45_8804639047977952305 || (otherRec.sym__0__8926375957639307021 != sym__0__8926375957639307021 || (otherRec.sym__0__5153200798583684363 != sym__0__5153200798583684363 || (otherRec.sym__0___45_794494697990656050 != sym__0___45_794494697990656050 || otherRec.sym__0__7308161412148661473 != sym__0__7308161412148661473)))))))))))))))))))))))))))))));
  }
  unsigned sym__0__2833764152503888409;
  fluidb_string<18> sym__0__6938021140779677761;
  fluidb_string<40> sym__0___45_4700201805806600089;
  fluidb_string<11> sym__0__3362667619044778557;
  fluidb_string<15> sym__0__2679827580767046755;
  fluidb_string<13> sym__0___45_4186304031693649930;
  fluidb_string<15> sym__0__8596564865999609793;
  fluidb_string<21> sym__0___45_1671053890158572571;
  unsigned sym__0__2256924431415148013;
  int sym__0__347872876320563651;
  unsigned sym__0___45_7666447219434903317;
  unsigned sym__0__1272718151591622153;
  unsigned sym__0__4584633926271658914;
  unsigned sym__0___45_4610773208091240233;
  fluidb_string<21> sym__0___45_5766638191766435038;
  unsigned sym__0___45_5211223358204127380;
  fluidb_string<10> sym__0__8435431464460332395;
  unsigned sym__0___45_6450191115912157957;
  double sym__0__7921907673157171693;
  unsigned sym__0___45_1699747741436218441;
  double sym__0___45_2985562469054236715;
  unsigned sym__0__3746029949899912401;
  unsigned sym__0___45_989155948099215770;
  double sym__0___45_1667761180508152936;
  fluidb_string<13> sym__0__5854462121170882944;
  unsigned sym__0___45_1023382914117654422;
  fluidb_string<25> sym__0__6224010339127806049;
  fluidb_string<40> sym__0___45_8804639047977952305;
  fluidb_string<16> sym__0__8926375957639307021;
  fluidb_string<16> sym__0__5153200798583684363;
  fluidb_string<13> sym__0___45_794494697990656050;
  fluidb_string<15> sym__0__7308161412148661473;
 private:
};


class Record33 {
 public:
  Record33(unsigned __sym__0___45_6023382929443007574, fluidb_string<25> __sym__0__3757555673004122949, fluidb_string<40> __sym__0__1932846229845525767, fluidb_string<16> __sym__0__4059433216492140793, fluidb_string<16> __sym__0___45_6828435464829114933, fluidb_string<13> __sym__0___45_8594673557260853450, fluidb_string<15> __sym__0__5584077748228284101, unsigned __sym__0___45_6850792598014803495, int __sym__0__126286655963242787, unsigned __sym__0__7152997497642012715, unsigned __sym__0__8152468447104541133, unsigned __sym__0___45_2162238796830376958, unsigned __sym__0__6201860754099051215, fluidb_string<21> __sym__0___45_5824526894106372990, unsigned __sym__0__4416113698023424168, fluidb_string<10> __sym__0___45_8427015020456163925, unsigned __sym__0__7002917659038590267, double __sym__0___45_6078771451505033767, unsigned __sym__0___45_5377847250793394897, double __sym__0__3980922738646169089, unsigned __sym__0___45_7099380938835867851, unsigned __sym__0__3234079111686344366, double __sym__0___45_7202603516002620404, fluidb_string<13> __sym__0__3246987919693648052, unsigned __sym__0___45_8983388521167719339, fluidb_string<18> __sym__0__7124422447978342501, fluidb_string<9> __sym__0___45_2999373940918343221, fluidb_string<9> __sym__0__9137930316880372580, unsigned __sym__0___45_6042632947114846446, unsigned __sym__0___45_6531105215362525228, fluidb_string<7> __sym__0___45_8818609540528204259, unsigned __sym__0___45_5244059388672011050, unsigned __sym__0___45_5105300302502028867, unsigned __sym__0___45_7093949592046849419, unsigned __sym__0___45_6761595971726391581, unsigned __sym__0___45_8542939857596337916, fluidb_string<15> __sym__0___45_7160886385939247343, fluidb_string<2> __sym__0__5745707657729186073, fluidb_string<2> __sym__0__3650682066716895000, fluidb_string<2> __sym__0__1619161068731802128, fluidb_string<2> __sym__0___45_3903279639330610662, unsigned __sym__0__8482931350020393083, fluidb_string<55> __sym__0___45_1661804984053491733, fluidb_string<25> __sym__0__5835224130676269208, fluidb_string<7> __sym__0__603002359744084410, fluidb_string<10> __sym__0__7152062580423916744, fluidb_string<11> __sym__0___45_6711767232839951748, fluidb_string<25> __sym__0__5249709580748201526, unsigned __sym__0___45_196550042660278143, fluidb_string<10> __sym__0__7818803168203943400) : sym__0___45_6023382929443007574(__sym__0___45_6023382929443007574), sym__0__3757555673004122949(__sym__0__3757555673004122949), sym__0__1932846229845525767(__sym__0__1932846229845525767), sym__0__4059433216492140793(__sym__0__4059433216492140793), sym__0___45_6828435464829114933(__sym__0___45_6828435464829114933), sym__0___45_8594673557260853450(__sym__0___45_8594673557260853450), sym__0__5584077748228284101(__sym__0__5584077748228284101), sym__0___45_6850792598014803495(__sym__0___45_6850792598014803495), sym__0__126286655963242787(__sym__0__126286655963242787), sym__0__7152997497642012715(__sym__0__7152997497642012715), sym__0__8152468447104541133(__sym__0__8152468447104541133), sym__0___45_2162238796830376958(__sym__0___45_2162238796830376958), sym__0__6201860754099051215(__sym__0__6201860754099051215), sym__0___45_5824526894106372990(__sym__0___45_5824526894106372990), sym__0__4416113698023424168(__sym__0__4416113698023424168), sym__0___45_8427015020456163925(__sym__0___45_8427015020456163925), sym__0__7002917659038590267(__sym__0__7002917659038590267), sym__0___45_6078771451505033767(__sym__0___45_6078771451505033767), sym__0___45_5377847250793394897(__sym__0___45_5377847250793394897), sym__0__3980922738646169089(__sym__0__3980922738646169089), sym__0___45_7099380938835867851(__sym__0___45_7099380938835867851), sym__0__3234079111686344366(__sym__0__3234079111686344366), sym__0___45_7202603516002620404(__sym__0___45_7202603516002620404), sym__0__3246987919693648052(__sym__0__3246987919693648052), sym__0___45_8983388521167719339(__sym__0___45_8983388521167719339), sym__0__7124422447978342501(__sym__0__7124422447978342501), sym__0___45_2999373940918343221(__sym__0___45_2999373940918343221), sym__0__9137930316880372580(__sym__0__9137930316880372580), sym__0___45_6042632947114846446(__sym__0___45_6042632947114846446), sym__0___45_6531105215362525228(__sym__0___45_6531105215362525228), sym__0___45_8818609540528204259(__sym__0___45_8818609540528204259), sym__0___45_5244059388672011050(__sym__0___45_5244059388672011050), sym__0___45_5105300302502028867(__sym__0___45_5105300302502028867), sym__0___45_7093949592046849419(__sym__0___45_7093949592046849419), sym__0___45_6761595971726391581(__sym__0___45_6761595971726391581), sym__0___45_8542939857596337916(__sym__0___45_8542939857596337916), sym__0___45_7160886385939247343(__sym__0___45_7160886385939247343), sym__0__5745707657729186073(__sym__0__5745707657729186073), sym__0__3650682066716895000(__sym__0__3650682066716895000), sym__0__1619161068731802128(__sym__0__1619161068731802128), sym__0___45_3903279639330610662(__sym__0___45_3903279639330610662), sym__0__8482931350020393083(__sym__0__8482931350020393083), sym__0___45_1661804984053491733(__sym__0___45_1661804984053491733), sym__0__5835224130676269208(__sym__0__5835224130676269208), sym__0__603002359744084410(__sym__0__603002359744084410), sym__0__7152062580423916744(__sym__0__7152062580423916744), sym__0___45_6711767232839951748(__sym__0___45_6711767232839951748), sym__0__5249709580748201526(__sym__0__5249709580748201526), sym__0___45_196550042660278143(__sym__0___45_196550042660278143), sym__0__7818803168203943400(__sym__0__7818803168203943400)
  {
  }
  Record33() 
  {
  }
  std::string show() const{
    std::stringstream o;
    o << sym__0___45_6023382929443007574 << " | " << arrToString(sym__0__3757555673004122949) << " | " << arrToString(sym__0__1932846229845525767) << " | " << arrToString(sym__0__4059433216492140793) << " | " << arrToString(sym__0___45_6828435464829114933) << " | " << arrToString(sym__0___45_8594673557260853450) << " | " << arrToString(sym__0__5584077748228284101) << " | " << sym__0___45_6850792598014803495 << " | " << sym__0__126286655963242787 << " | " << sym__0__7152997497642012715 << " | " << sym__0__8152468447104541133 << " | " << sym__0___45_2162238796830376958 << " | " << sym__0__6201860754099051215 << " | " << arrToString(sym__0___45_5824526894106372990) << " | " << sym__0__4416113698023424168 << " | " << arrToString(sym__0___45_8427015020456163925) << " | " << sym__0__7002917659038590267 << " | " << sym__0___45_6078771451505033767 << " | " << sym__0___45_5377847250793394897 << " | " << sym__0__3980922738646169089 << " | " << sym__0___45_7099380938835867851 << " | " << sym__0__3234079111686344366 << " | " << sym__0___45_7202603516002620404 << " | " << arrToString(sym__0__3246987919693648052) << " | " << sym__0___45_8983388521167719339 << " | " << arrToString(sym__0__7124422447978342501) << " | " << arrToString(sym__0___45_2999373940918343221) << " | " << arrToString(sym__0__9137930316880372580) << " | " << sym__0___45_6042632947114846446 << " | " << sym__0___45_6531105215362525228 << " | " << arrToString(sym__0___45_8818609540528204259) << " | " << sym__0___45_5244059388672011050 << " | " << sym__0___45_5105300302502028867 << " | " << sym__0___45_7093949592046849419 << " | " << sym__0___45_6761595971726391581 << " | " << sym__0___45_8542939857596337916 << " | " << arrToString(sym__0___45_7160886385939247343) << " | " << arrToString(sym__0__5745707657729186073) << " | " << arrToString(sym__0__3650682066716895000) << " | " << arrToString(sym__0__1619161068731802128) << " | " << arrToString(sym__0___45_3903279639330610662) << " | " << sym__0__8482931350020393083 << " | " << arrToString(sym__0___45_1661804984053491733) << " | " << arrToString(sym__0__5835224130676269208) << " | " << arrToString(sym__0__603002359744084410) << " | " << arrToString(sym__0__7152062580423916744) << " | " << arrToString(sym__0___45_6711767232839951748) << " | " << arrToString(sym__0__5249709580748201526) << " | " << sym__0___45_196550042660278143 << " | " << arrToString(sym__0__7818803168203943400);
    return o.str();
  }
  bool operator <(const Record33& otherRec) const{
    return (otherRec.sym__0___45_6023382929443007574 < sym__0___45_6023382929443007574 && (otherRec.sym__0__3757555673004122949 < sym__0__3757555673004122949 && (otherRec.sym__0__1932846229845525767 < sym__0__1932846229845525767 && (otherRec.sym__0__4059433216492140793 < sym__0__4059433216492140793 && (otherRec.sym__0___45_6828435464829114933 < sym__0___45_6828435464829114933 && (otherRec.sym__0___45_8594673557260853450 < sym__0___45_8594673557260853450 && (otherRec.sym__0__5584077748228284101 < sym__0__5584077748228284101 && (otherRec.sym__0___45_6850792598014803495 < sym__0___45_6850792598014803495 && (otherRec.sym__0__126286655963242787 < sym__0__126286655963242787 && (otherRec.sym__0__7152997497642012715 < sym__0__7152997497642012715 && (otherRec.sym__0__8152468447104541133 < sym__0__8152468447104541133 && (otherRec.sym__0___45_2162238796830376958 < sym__0___45_2162238796830376958 && (otherRec.sym__0__6201860754099051215 < sym__0__6201860754099051215 && (otherRec.sym__0___45_5824526894106372990 < sym__0___45_5824526894106372990 && (otherRec.sym__0__4416113698023424168 < sym__0__4416113698023424168 && (otherRec.sym__0___45_8427015020456163925 < sym__0___45_8427015020456163925 && (otherRec.sym__0__7002917659038590267 < sym__0__7002917659038590267 && (otherRec.sym__0___45_6078771451505033767 < sym__0___45_6078771451505033767 && (otherRec.sym__0___45_5377847250793394897 < sym__0___45_5377847250793394897 && (otherRec.sym__0__3980922738646169089 < sym__0__3980922738646169089 && (otherRec.sym__0___45_7099380938835867851 < sym__0___45_7099380938835867851 && (otherRec.sym__0__3234079111686344366 < sym__0__3234079111686344366 && (otherRec.sym__0___45_7202603516002620404 < sym__0___45_7202603516002620404 && (otherRec.sym__0__3246987919693648052 < sym__0__3246987919693648052 && (otherRec.sym__0___45_8983388521167719339 < sym__0___45_8983388521167719339 && (otherRec.sym__0__7124422447978342501 < sym__0__7124422447978342501 && (otherRec.sym__0___45_2999373940918343221 < sym__0___45_2999373940918343221 && (otherRec.sym__0__9137930316880372580 < sym__0__9137930316880372580 && (otherRec.sym__0___45_6042632947114846446 < sym__0___45_6042632947114846446 && (otherRec.sym__0___45_6531105215362525228 < sym__0___45_6531105215362525228 && (otherRec.sym__0___45_8818609540528204259 < sym__0___45_8818609540528204259 && (otherRec.sym__0___45_5244059388672011050 < sym__0___45_5244059388672011050 && (otherRec.sym__0___45_5105300302502028867 < sym__0___45_5105300302502028867 && (otherRec.sym__0___45_7093949592046849419 < sym__0___45_7093949592046849419 && (otherRec.sym__0___45_6761595971726391581 < sym__0___45_6761595971726391581 && (otherRec.sym__0___45_8542939857596337916 < sym__0___45_8542939857596337916 && (otherRec.sym__0___45_7160886385939247343 < sym__0___45_7160886385939247343 && (otherRec.sym__0__5745707657729186073 < sym__0__5745707657729186073 && (otherRec.sym__0__3650682066716895000 < sym__0__3650682066716895000 && (otherRec.sym__0__1619161068731802128 < sym__0__1619161068731802128 && (otherRec.sym__0___45_3903279639330610662 < sym__0___45_3903279639330610662 && (otherRec.sym__0__8482931350020393083 < sym__0__8482931350020393083 && (otherRec.sym__0___45_1661804984053491733 < sym__0___45_1661804984053491733 && (otherRec.sym__0__5835224130676269208 < sym__0__5835224130676269208 && (otherRec.sym__0__603002359744084410 < sym__0__603002359744084410 && (otherRec.sym__0__7152062580423916744 < sym__0__7152062580423916744 && (otherRec.sym__0___45_6711767232839951748 < sym__0___45_6711767232839951748 && (otherRec.sym__0__5249709580748201526 < sym__0__5249709580748201526 && (otherRec.sym__0___45_196550042660278143 < sym__0___45_196550042660278143 && otherRec.sym__0__7818803168203943400 < sym__0__7818803168203943400)))))))))))))))))))))))))))))))))))))))))))))))));
  }
  bool operator ==(const Record33& otherRec) const{
    return (otherRec.sym__0___45_6023382929443007574 == sym__0___45_6023382929443007574 && (otherRec.sym__0__3757555673004122949 == sym__0__3757555673004122949 && (otherRec.sym__0__1932846229845525767 == sym__0__1932846229845525767 && (otherRec.sym__0__4059433216492140793 == sym__0__4059433216492140793 && (otherRec.sym__0___45_6828435464829114933 == sym__0___45_6828435464829114933 && (otherRec.sym__0___45_8594673557260853450 == sym__0___45_8594673557260853450 && (otherRec.sym__0__5584077748228284101 == sym__0__5584077748228284101 && (otherRec.sym__0___45_6850792598014803495 == sym__0___45_6850792598014803495 && (otherRec.sym__0__126286655963242787 == sym__0__126286655963242787 && (otherRec.sym__0__7152997497642012715 == sym__0__7152997497642012715 && (otherRec.sym__0__8152468447104541133 == sym__0__8152468447104541133 && (otherRec.sym__0___45_2162238796830376958 == sym__0___45_2162238796830376958 && (otherRec.sym__0__6201860754099051215 == sym__0__6201860754099051215 && (otherRec.sym__0___45_5824526894106372990 == sym__0___45_5824526894106372990 && (otherRec.sym__0__4416113698023424168 == sym__0__4416113698023424168 && (otherRec.sym__0___45_8427015020456163925 == sym__0___45_8427015020456163925 && (otherRec.sym__0__7002917659038590267 == sym__0__7002917659038590267 && (otherRec.sym__0___45_6078771451505033767 == sym__0___45_6078771451505033767 && (otherRec.sym__0___45_5377847250793394897 == sym__0___45_5377847250793394897 && (otherRec.sym__0__3980922738646169089 == sym__0__3980922738646169089 && (otherRec.sym__0___45_7099380938835867851 == sym__0___45_7099380938835867851 && (otherRec.sym__0__3234079111686344366 == sym__0__3234079111686344366 && (otherRec.sym__0___45_7202603516002620404 == sym__0___45_7202603516002620404 && (otherRec.sym__0__3246987919693648052 == sym__0__3246987919693648052 && (otherRec.sym__0___45_8983388521167719339 == sym__0___45_8983388521167719339 && (otherRec.sym__0__7124422447978342501 == sym__0__7124422447978342501 && (otherRec.sym__0___45_2999373940918343221 == sym__0___45_2999373940918343221 && (otherRec.sym__0__9137930316880372580 == sym__0__9137930316880372580 && (otherRec.sym__0___45_6042632947114846446 == sym__0___45_6042632947114846446 && (otherRec.sym__0___45_6531105215362525228 == sym__0___45_6531105215362525228 && (otherRec.sym__0___45_8818609540528204259 == sym__0___45_8818609540528204259 && (otherRec.sym__0___45_5244059388672011050 == sym__0___45_5244059388672011050 && (otherRec.sym__0___45_5105300302502028867 == sym__0___45_5105300302502028867 && (otherRec.sym__0___45_7093949592046849419 == sym__0___45_7093949592046849419 && (otherRec.sym__0___45_6761595971726391581 == sym__0___45_6761595971726391581 && (otherRec.sym__0___45_8542939857596337916 == sym__0___45_8542939857596337916 && (otherRec.sym__0___45_7160886385939247343 == sym__0___45_7160886385939247343 && (otherRec.sym__0__5745707657729186073 == sym__0__5745707657729186073 && (otherRec.sym__0__3650682066716895000 == sym__0__3650682066716895000 && (otherRec.sym__0__1619161068731802128 == sym__0__1619161068731802128 && (otherRec.sym__0___45_3903279639330610662 == sym__0___45_3903279639330610662 && (otherRec.sym__0__8482931350020393083 == sym__0__8482931350020393083 && (otherRec.sym__0___45_1661804984053491733 == sym__0___45_1661804984053491733 && (otherRec.sym__0__5835224130676269208 == sym__0__5835224130676269208 && (otherRec.sym__0__603002359744084410 == sym__0__603002359744084410 && (otherRec.sym__0__7152062580423916744 == sym__0__7152062580423916744 && (otherRec.sym__0___45_6711767232839951748 == sym__0___45_6711767232839951748 && (otherRec.sym__0__5249709580748201526 == sym__0__5249709580748201526 && (otherRec.sym__0___45_196550042660278143 == sym__0___45_196550042660278143 && otherRec.sym__0__7818803168203943400 == sym__0__7818803168203943400)))))))))))))))))))))))))))))))))))))))))))))))));
  }
  bool operator !=(const Record33& otherRec) const{
    return (otherRec.sym__0___45_6023382929443007574 != sym__0___45_6023382929443007574 || (otherRec.sym__0__3757555673004122949 != sym__0__3757555673004122949 || (otherRec.sym__0__1932846229845525767 != sym__0__1932846229845525767 || (otherRec.sym__0__4059433216492140793 != sym__0__4059433216492140793 || (otherRec.sym__0___45_6828435464829114933 != sym__0___45_6828435464829114933 || (otherRec.sym__0___45_8594673557260853450 != sym__0___45_8594673557260853450 || (otherRec.sym__0__5584077748228284101 != sym__0__5584077748228284101 || (otherRec.sym__0___45_6850792598014803495 != sym__0___45_6850792598014803495 || (otherRec.sym__0__126286655963242787 != sym__0__126286655963242787 || (otherRec.sym__0__7152997497642012715 != sym__0__7152997497642012715 || (otherRec.sym__0__8152468447104541133 != sym__0__8152468447104541133 || (otherRec.sym__0___45_2162238796830376958 != sym__0___45_2162238796830376958 || (otherRec.sym__0__6201860754099051215 != sym__0__6201860754099051215 || (otherRec.sym__0___45_5824526894106372990 != sym__0___45_5824526894106372990 || (otherRec.sym__0__4416113698023424168 != sym__0__4416113698023424168 || (otherRec.sym__0___45_8427015020456163925 != sym__0___45_8427015020456163925 || (otherRec.sym__0__7002917659038590267 != sym__0__7002917659038590267 || (otherRec.sym__0___45_6078771451505033767 != sym__0___45_6078771451505033767 || (otherRec.sym__0___45_5377847250793394897 != sym__0___45_5377847250793394897 || (otherRec.sym__0__3980922738646169089 != sym__0__3980922738646169089 || (otherRec.sym__0___45_7099380938835867851 != sym__0___45_7099380938835867851 || (otherRec.sym__0__3234079111686344366 != sym__0__3234079111686344366 || (otherRec.sym__0___45_7202603516002620404 != sym__0___45_7202603516002620404 || (otherRec.sym__0__3246987919693648052 != sym__0__3246987919693648052 || (otherRec.sym__0___45_8983388521167719339 != sym__0___45_8983388521167719339 || (otherRec.sym__0__7124422447978342501 != sym__0__7124422447978342501 || (otherRec.sym__0___45_2999373940918343221 != sym__0___45_2999373940918343221 || (otherRec.sym__0__9137930316880372580 != sym__0__9137930316880372580 || (otherRec.sym__0___45_6042632947114846446 != sym__0___45_6042632947114846446 || (otherRec.sym__0___45_6531105215362525228 != sym__0___45_6531105215362525228 || (otherRec.sym__0___45_8818609540528204259 != sym__0___45_8818609540528204259 || (otherRec.sym__0___45_5244059388672011050 != sym__0___45_5244059388672011050 || (otherRec.sym__0___45_5105300302502028867 != sym__0___45_5105300302502028867 || (otherRec.sym__0___45_7093949592046849419 != sym__0___45_7093949592046849419 || (otherRec.sym__0___45_6761595971726391581 != sym__0___45_6761595971726391581 || (otherRec.sym__0___45_8542939857596337916 != sym__0___45_8542939857596337916 || (otherRec.sym__0___45_7160886385939247343 != sym__0___45_7160886385939247343 || (otherRec.sym__0__5745707657729186073 != sym__0__5745707657729186073 || (otherRec.sym__0__3650682066716895000 != sym__0__3650682066716895000 || (otherRec.sym__0__1619161068731802128 != sym__0__1619161068731802128 || (otherRec.sym__0___45_3903279639330610662 != sym__0___45_3903279639330610662 || (otherRec.sym__0__8482931350020393083 != sym__0__8482931350020393083 || (otherRec.sym__0___45_1661804984053491733 != sym__0___45_1661804984053491733 || (otherRec.sym__0__5835224130676269208 != sym__0__5835224130676269208 || (otherRec.sym__0__603002359744084410 != sym__0__603002359744084410 || (otherRec.sym__0__7152062580423916744 != sym__0__7152062580423916744 || (otherRec.sym__0___45_6711767232839951748 != sym__0___45_6711767232839951748 || (otherRec.sym__0__5249709580748201526 != sym__0__5249709580748201526 || (otherRec.sym__0___45_196550042660278143 != sym__0___45_196550042660278143 || otherRec.sym__0__7818803168203943400 != sym__0__7818803168203943400)))))))))))))))))))))))))))))))))))))))))))))))));
  }
  unsigned sym__0___45_6023382929443007574;
  fluidb_string<25> sym__0__3757555673004122949;
  fluidb_string<40> sym__0__1932846229845525767;
  fluidb_string<16> sym__0__4059433216492140793;
  fluidb_string<16> sym__0___45_6828435464829114933;
  fluidb_string<13> sym__0___45_8594673557260853450;
  fluidb_string<15> sym__0__5584077748228284101;
  unsigned sym__0___45_6850792598014803495;
  int sym__0__126286655963242787;
  unsigned sym__0__7152997497642012715;
  unsigned sym__0__8152468447104541133;
  unsigned sym__0___45_2162238796830376958;
  unsigned sym__0__6201860754099051215;
  fluidb_string<21> sym__0___45_5824526894106372990;
  unsigned sym__0__4416113698023424168;
  fluidb_string<10> sym__0___45_8427015020456163925;
  unsigned sym__0__7002917659038590267;
  double sym__0___45_6078771451505033767;
  unsigned sym__0___45_5377847250793394897;
  double sym__0__3980922738646169089;
  unsigned sym__0___45_7099380938835867851;
  unsigned sym__0__3234079111686344366;
  double sym__0___45_7202603516002620404;
  fluidb_string<13> sym__0__3246987919693648052;
  unsigned sym__0___45_8983388521167719339;
  fluidb_string<18> sym__0__7124422447978342501;
  fluidb_string<9> sym__0___45_2999373940918343221;
  fluidb_string<9> sym__0__9137930316880372580;
  unsigned sym__0___45_6042632947114846446;
  unsigned sym__0___45_6531105215362525228;
  fluidb_string<7> sym__0___45_8818609540528204259;
  unsigned sym__0___45_5244059388672011050;
  unsigned sym__0___45_5105300302502028867;
  unsigned sym__0___45_7093949592046849419;
  unsigned sym__0___45_6761595971726391581;
  unsigned sym__0___45_8542939857596337916;
  fluidb_string<15> sym__0___45_7160886385939247343;
  fluidb_string<2> sym__0__5745707657729186073;
  fluidb_string<2> sym__0__3650682066716895000;
  fluidb_string<2> sym__0__1619161068731802128;
  fluidb_string<2> sym__0___45_3903279639330610662;
  unsigned sym__0__8482931350020393083;
  fluidb_string<55> sym__0___45_1661804984053491733;
  fluidb_string<25> sym__0__5835224130676269208;
  fluidb_string<7> sym__0__603002359744084410;
  fluidb_string<10> sym__0__7152062580423916744;
  fluidb_string<11> sym__0___45_6711767232839951748;
  fluidb_string<25> sym__0__5249709580748201526;
  unsigned sym__0___45_196550042660278143;
  fluidb_string<10> sym__0__7818803168203943400;
 private:
};


class Record25 {
 public:
  Record25(unsigned __sym__0__2102316481828394123, fluidb_string<25> __sym__0__1780257040091145452, fluidb_string<40> __sym__0__3109939911660640430, fluidb_string<16> __sym__0___45_2175199227983174320, fluidb_string<16> __sym__0__2274992661292194562, fluidb_string<13> __sym__0___45_52536403880094569, fluidb_string<15> __sym__0__8474116574285927276, unsigned __sym__0__1835503384076924528, int __sym__0__586412267723269786, unsigned __sym__0__1353367320182642978, unsigned __sym__0___45_6351222752813626636, unsigned __sym__0___45_805067702695824989, unsigned __sym__0__914509637812701046, fluidb_string<21> __sym__0__7895450651221174051, unsigned __sym__0__5942285589324576545, fluidb_string<10> __sym__0__3979382234526804898, unsigned __sym__0___45_6103522369909819246, double __sym__0__1873148039180761712, unsigned __sym__0__1430551526674366102, double __sym__0__1048818672001592248, unsigned __sym__0__5723353836447658492, unsigned __sym__0___45_2233273278156881105, double __sym__0___45_1120880788595637835, fluidb_string<13> __sym__0___45_6361490230660137987, unsigned __sym__0___45_7131249874638266788, fluidb_string<18> __sym__0__7265729621635359692, fluidb_string<9> __sym__0___45_2986035740159621374, fluidb_string<9> __sym__0__5081664509798388941, unsigned __sym__0___45_8518596434939314413, unsigned __sym__0__1988221653138390749, fluidb_string<7> __sym__0___45_8801377200944175068, unsigned __sym__0___45_4634183629139578121, unsigned __sym__0__806472603637564420, unsigned __sym__0__1725829484083430844, unsigned __sym__0___45_5279274827282678566, unsigned __sym__0___45_9129247388617675603, fluidb_string<15> __sym__0__1232225844204183080, fluidb_string<2> __sym__0__9184663680502119984, fluidb_string<2> __sym__0___45_9023997483659527503, fluidb_string<2> __sym__0___45_1026604631201554135, fluidb_string<2> __sym__0___45_7189754320372197989) : sym__0__2102316481828394123(__sym__0__2102316481828394123), sym__0__1780257040091145452(__sym__0__1780257040091145452), sym__0__3109939911660640430(__sym__0__3109939911660640430), sym__0___45_2175199227983174320(__sym__0___45_2175199227983174320), sym__0__2274992661292194562(__sym__0__2274992661292194562), sym__0___45_52536403880094569(__sym__0___45_52536403880094569), sym__0__8474116574285927276(__sym__0__8474116574285927276), sym__0__1835503384076924528(__sym__0__1835503384076924528), sym__0__586412267723269786(__sym__0__586412267723269786), sym__0__1353367320182642978(__sym__0__1353367320182642978), sym__0___45_6351222752813626636(__sym__0___45_6351222752813626636), sym__0___45_805067702695824989(__sym__0___45_805067702695824989), sym__0__914509637812701046(__sym__0__914509637812701046), sym__0__7895450651221174051(__sym__0__7895450651221174051), sym__0__5942285589324576545(__sym__0__5942285589324576545), sym__0__3979382234526804898(__sym__0__3979382234526804898), sym__0___45_6103522369909819246(__sym__0___45_6103522369909819246), sym__0__1873148039180761712(__sym__0__1873148039180761712), sym__0__1430551526674366102(__sym__0__1430551526674366102), sym__0__1048818672001592248(__sym__0__1048818672001592248), sym__0__5723353836447658492(__sym__0__5723353836447658492), sym__0___45_2233273278156881105(__sym__0___45_2233273278156881105), sym__0___45_1120880788595637835(__sym__0___45_1120880788595637835), sym__0___45_6361490230660137987(__sym__0___45_6361490230660137987), sym__0___45_7131249874638266788(__sym__0___45_7131249874638266788), sym__0__7265729621635359692(__sym__0__7265729621635359692), sym__0___45_2986035740159621374(__sym__0___45_2986035740159621374), sym__0__5081664509798388941(__sym__0__5081664509798388941), sym__0___45_8518596434939314413(__sym__0___45_8518596434939314413), sym__0__1988221653138390749(__sym__0__1988221653138390749), sym__0___45_8801377200944175068(__sym__0___45_8801377200944175068), sym__0___45_4634183629139578121(__sym__0___45_4634183629139578121), sym__0__806472603637564420(__sym__0__806472603637564420), sym__0__1725829484083430844(__sym__0__1725829484083430844), sym__0___45_5279274827282678566(__sym__0___45_5279274827282678566), sym__0___45_9129247388617675603(__sym__0___45_9129247388617675603), sym__0__1232225844204183080(__sym__0__1232225844204183080), sym__0__9184663680502119984(__sym__0__9184663680502119984), sym__0___45_9023997483659527503(__sym__0___45_9023997483659527503), sym__0___45_1026604631201554135(__sym__0___45_1026604631201554135), sym__0___45_7189754320372197989(__sym__0___45_7189754320372197989)
  {
  }
  Record25() 
  {
  }
  std::string show() const{
    std::stringstream o;
    o << sym__0__2102316481828394123 << " | " << arrToString(sym__0__1780257040091145452) << " | " << arrToString(sym__0__3109939911660640430) << " | " << arrToString(sym__0___45_2175199227983174320) << " | " << arrToString(sym__0__2274992661292194562) << " | " << arrToString(sym__0___45_52536403880094569) << " | " << arrToString(sym__0__8474116574285927276) << " | " << sym__0__1835503384076924528 << " | " << sym__0__586412267723269786 << " | " << sym__0__1353367320182642978 << " | " << sym__0___45_6351222752813626636 << " | " << sym__0___45_805067702695824989 << " | " << sym__0__914509637812701046 << " | " << arrToString(sym__0__7895450651221174051) << " | " << sym__0__5942285589324576545 << " | " << arrToString(sym__0__3979382234526804898) << " | " << sym__0___45_6103522369909819246 << " | " << sym__0__1873148039180761712 << " | " << sym__0__1430551526674366102 << " | " << sym__0__1048818672001592248 << " | " << sym__0__5723353836447658492 << " | " << sym__0___45_2233273278156881105 << " | " << sym__0___45_1120880788595637835 << " | " << arrToString(sym__0___45_6361490230660137987) << " | " << sym__0___45_7131249874638266788 << " | " << arrToString(sym__0__7265729621635359692) << " | " << arrToString(sym__0___45_2986035740159621374) << " | " << arrToString(sym__0__5081664509798388941) << " | " << sym__0___45_8518596434939314413 << " | " << sym__0__1988221653138390749 << " | " << arrToString(sym__0___45_8801377200944175068) << " | " << sym__0___45_4634183629139578121 << " | " << sym__0__806472603637564420 << " | " << sym__0__1725829484083430844 << " | " << sym__0___45_5279274827282678566 << " | " << sym__0___45_9129247388617675603 << " | " << arrToString(sym__0__1232225844204183080) << " | " << arrToString(sym__0__9184663680502119984) << " | " << arrToString(sym__0___45_9023997483659527503) << " | " << arrToString(sym__0___45_1026604631201554135) << " | " << arrToString(sym__0___45_7189754320372197989);
    return o.str();
  }
  bool operator <(const Record25& otherRec) const{
    return (otherRec.sym__0__2102316481828394123 < sym__0__2102316481828394123 && (otherRec.sym__0__1780257040091145452 < sym__0__1780257040091145452 && (otherRec.sym__0__3109939911660640430 < sym__0__3109939911660640430 && (otherRec.sym__0___45_2175199227983174320 < sym__0___45_2175199227983174320 && (otherRec.sym__0__2274992661292194562 < sym__0__2274992661292194562 && (otherRec.sym__0___45_52536403880094569 < sym__0___45_52536403880094569 && (otherRec.sym__0__8474116574285927276 < sym__0__8474116574285927276 && (otherRec.sym__0__1835503384076924528 < sym__0__1835503384076924528 && (otherRec.sym__0__586412267723269786 < sym__0__586412267723269786 && (otherRec.sym__0__1353367320182642978 < sym__0__1353367320182642978 && (otherRec.sym__0___45_6351222752813626636 < sym__0___45_6351222752813626636 && (otherRec.sym__0___45_805067702695824989 < sym__0___45_805067702695824989 && (otherRec.sym__0__914509637812701046 < sym__0__914509637812701046 && (otherRec.sym__0__7895450651221174051 < sym__0__7895450651221174051 && (otherRec.sym__0__5942285589324576545 < sym__0__5942285589324576545 && (otherRec.sym__0__3979382234526804898 < sym__0__3979382234526804898 && (otherRec.sym__0___45_6103522369909819246 < sym__0___45_6103522369909819246 && (otherRec.sym__0__1873148039180761712 < sym__0__1873148039180761712 && (otherRec.sym__0__1430551526674366102 < sym__0__1430551526674366102 && (otherRec.sym__0__1048818672001592248 < sym__0__1048818672001592248 && (otherRec.sym__0__5723353836447658492 < sym__0__5723353836447658492 && (otherRec.sym__0___45_2233273278156881105 < sym__0___45_2233273278156881105 && (otherRec.sym__0___45_1120880788595637835 < sym__0___45_1120880788595637835 && (otherRec.sym__0___45_6361490230660137987 < sym__0___45_6361490230660137987 && (otherRec.sym__0___45_7131249874638266788 < sym__0___45_7131249874638266788 && (otherRec.sym__0__7265729621635359692 < sym__0__7265729621635359692 && (otherRec.sym__0___45_2986035740159621374 < sym__0___45_2986035740159621374 && (otherRec.sym__0__5081664509798388941 < sym__0__5081664509798388941 && (otherRec.sym__0___45_8518596434939314413 < sym__0___45_8518596434939314413 && (otherRec.sym__0__1988221653138390749 < sym__0__1988221653138390749 && (otherRec.sym__0___45_8801377200944175068 < sym__0___45_8801377200944175068 && (otherRec.sym__0___45_4634183629139578121 < sym__0___45_4634183629139578121 && (otherRec.sym__0__806472603637564420 < sym__0__806472603637564420 && (otherRec.sym__0__1725829484083430844 < sym__0__1725829484083430844 && (otherRec.sym__0___45_5279274827282678566 < sym__0___45_5279274827282678566 && (otherRec.sym__0___45_9129247388617675603 < sym__0___45_9129247388617675603 && (otherRec.sym__0__1232225844204183080 < sym__0__1232225844204183080 && (otherRec.sym__0__9184663680502119984 < sym__0__9184663680502119984 && (otherRec.sym__0___45_9023997483659527503 < sym__0___45_9023997483659527503 && (otherRec.sym__0___45_1026604631201554135 < sym__0___45_1026604631201554135 && otherRec.sym__0___45_7189754320372197989 < sym__0___45_7189754320372197989))))))))))))))))))))))))))))))))))))))));
  }
  bool operator ==(const Record25& otherRec) const{
    return (otherRec.sym__0__2102316481828394123 == sym__0__2102316481828394123 && (otherRec.sym__0__1780257040091145452 == sym__0__1780257040091145452 && (otherRec.sym__0__3109939911660640430 == sym__0__3109939911660640430 && (otherRec.sym__0___45_2175199227983174320 == sym__0___45_2175199227983174320 && (otherRec.sym__0__2274992661292194562 == sym__0__2274992661292194562 && (otherRec.sym__0___45_52536403880094569 == sym__0___45_52536403880094569 && (otherRec.sym__0__8474116574285927276 == sym__0__8474116574285927276 && (otherRec.sym__0__1835503384076924528 == sym__0__1835503384076924528 && (otherRec.sym__0__586412267723269786 == sym__0__586412267723269786 && (otherRec.sym__0__1353367320182642978 == sym__0__1353367320182642978 && (otherRec.sym__0___45_6351222752813626636 == sym__0___45_6351222752813626636 && (otherRec.sym__0___45_805067702695824989 == sym__0___45_805067702695824989 && (otherRec.sym__0__914509637812701046 == sym__0__914509637812701046 && (otherRec.sym__0__7895450651221174051 == sym__0__7895450651221174051 && (otherRec.sym__0__5942285589324576545 == sym__0__5942285589324576545 && (otherRec.sym__0__3979382234526804898 == sym__0__3979382234526804898 && (otherRec.sym__0___45_6103522369909819246 == sym__0___45_6103522369909819246 && (otherRec.sym__0__1873148039180761712 == sym__0__1873148039180761712 && (otherRec.sym__0__1430551526674366102 == sym__0__1430551526674366102 && (otherRec.sym__0__1048818672001592248 == sym__0__1048818672001592248 && (otherRec.sym__0__5723353836447658492 == sym__0__5723353836447658492 && (otherRec.sym__0___45_2233273278156881105 == sym__0___45_2233273278156881105 && (otherRec.sym__0___45_1120880788595637835 == sym__0___45_1120880788595637835 && (otherRec.sym__0___45_6361490230660137987 == sym__0___45_6361490230660137987 && (otherRec.sym__0___45_7131249874638266788 == sym__0___45_7131249874638266788 && (otherRec.sym__0__7265729621635359692 == sym__0__7265729621635359692 && (otherRec.sym__0___45_2986035740159621374 == sym__0___45_2986035740159621374 && (otherRec.sym__0__5081664509798388941 == sym__0__5081664509798388941 && (otherRec.sym__0___45_8518596434939314413 == sym__0___45_8518596434939314413 && (otherRec.sym__0__1988221653138390749 == sym__0__1988221653138390749 && (otherRec.sym__0___45_8801377200944175068 == sym__0___45_8801377200944175068 && (otherRec.sym__0___45_4634183629139578121 == sym__0___45_4634183629139578121 && (otherRec.sym__0__806472603637564420 == sym__0__806472603637564420 && (otherRec.sym__0__1725829484083430844 == sym__0__1725829484083430844 && (otherRec.sym__0___45_5279274827282678566 == sym__0___45_5279274827282678566 && (otherRec.sym__0___45_9129247388617675603 == sym__0___45_9129247388617675603 && (otherRec.sym__0__1232225844204183080 == sym__0__1232225844204183080 && (otherRec.sym__0__9184663680502119984 == sym__0__9184663680502119984 && (otherRec.sym__0___45_9023997483659527503 == sym__0___45_9023997483659527503 && (otherRec.sym__0___45_1026604631201554135 == sym__0___45_1026604631201554135 && otherRec.sym__0___45_7189754320372197989 == sym__0___45_7189754320372197989))))))))))))))))))))))))))))))))))))))));
  }
  bool operator !=(const Record25& otherRec) const{
    return (otherRec.sym__0__2102316481828394123 != sym__0__2102316481828394123 || (otherRec.sym__0__1780257040091145452 != sym__0__1780257040091145452 || (otherRec.sym__0__3109939911660640430 != sym__0__3109939911660640430 || (otherRec.sym__0___45_2175199227983174320 != sym__0___45_2175199227983174320 || (otherRec.sym__0__2274992661292194562 != sym__0__2274992661292194562 || (otherRec.sym__0___45_52536403880094569 != sym__0___45_52536403880094569 || (otherRec.sym__0__8474116574285927276 != sym__0__8474116574285927276 || (otherRec.sym__0__1835503384076924528 != sym__0__1835503384076924528 || (otherRec.sym__0__586412267723269786 != sym__0__586412267723269786 || (otherRec.sym__0__1353367320182642978 != sym__0__1353367320182642978 || (otherRec.sym__0___45_6351222752813626636 != sym__0___45_6351222752813626636 || (otherRec.sym__0___45_805067702695824989 != sym__0___45_805067702695824989 || (otherRec.sym__0__914509637812701046 != sym__0__914509637812701046 || (otherRec.sym__0__7895450651221174051 != sym__0__7895450651221174051 || (otherRec.sym__0__5942285589324576545 != sym__0__5942285589324576545 || (otherRec.sym__0__3979382234526804898 != sym__0__3979382234526804898 || (otherRec.sym__0___45_6103522369909819246 != sym__0___45_6103522369909819246 || (otherRec.sym__0__1873148039180761712 != sym__0__1873148039180761712 || (otherRec.sym__0__1430551526674366102 != sym__0__1430551526674366102 || (otherRec.sym__0__1048818672001592248 != sym__0__1048818672001592248 || (otherRec.sym__0__5723353836447658492 != sym__0__5723353836447658492 || (otherRec.sym__0___45_2233273278156881105 != sym__0___45_2233273278156881105 || (otherRec.sym__0___45_1120880788595637835 != sym__0___45_1120880788595637835 || (otherRec.sym__0___45_6361490230660137987 != sym__0___45_6361490230660137987 || (otherRec.sym__0___45_7131249874638266788 != sym__0___45_7131249874638266788 || (otherRec.sym__0__7265729621635359692 != sym__0__7265729621635359692 || (otherRec.sym__0___45_2986035740159621374 != sym__0___45_2986035740159621374 || (otherRec.sym__0__5081664509798388941 != sym__0__5081664509798388941 || (otherRec.sym__0___45_8518596434939314413 != sym__0___45_8518596434939314413 || (otherRec.sym__0__1988221653138390749 != sym__0__1988221653138390749 || (otherRec.sym__0___45_8801377200944175068 != sym__0___45_8801377200944175068 || (otherRec.sym__0___45_4634183629139578121 != sym__0___45_4634183629139578121 || (otherRec.sym__0__806472603637564420 != sym__0__806472603637564420 || (otherRec.sym__0__1725829484083430844 != sym__0__1725829484083430844 || (otherRec.sym__0___45_5279274827282678566 != sym__0___45_5279274827282678566 || (otherRec.sym__0___45_9129247388617675603 != sym__0___45_9129247388617675603 || (otherRec.sym__0__1232225844204183080 != sym__0__1232225844204183080 || (otherRec.sym__0__9184663680502119984 != sym__0__9184663680502119984 || (otherRec.sym__0___45_9023997483659527503 != sym__0___45_9023997483659527503 || (otherRec.sym__0___45_1026604631201554135 != sym__0___45_1026604631201554135 || otherRec.sym__0___45_7189754320372197989 != sym__0___45_7189754320372197989))))))))))))))))))))))))))))))))))))))));
  }
  unsigned sym__0__2102316481828394123;
  fluidb_string<25> sym__0__1780257040091145452;
  fluidb_string<40> sym__0__3109939911660640430;
  fluidb_string<16> sym__0___45_2175199227983174320;
  fluidb_string<16> sym__0__2274992661292194562;
  fluidb_string<13> sym__0___45_52536403880094569;
  fluidb_string<15> sym__0__8474116574285927276;
  unsigned sym__0__1835503384076924528;
  int sym__0__586412267723269786;
  unsigned sym__0__1353367320182642978;
  unsigned sym__0___45_6351222752813626636;
  unsigned sym__0___45_805067702695824989;
  unsigned sym__0__914509637812701046;
  fluidb_string<21> sym__0__7895450651221174051;
  unsigned sym__0__5942285589324576545;
  fluidb_string<10> sym__0__3979382234526804898;
  unsigned sym__0___45_6103522369909819246;
  double sym__0__1873148039180761712;
  unsigned sym__0__1430551526674366102;
  double sym__0__1048818672001592248;
  unsigned sym__0__5723353836447658492;
  unsigned sym__0___45_2233273278156881105;
  double sym__0___45_1120880788595637835;
  fluidb_string<13> sym__0___45_6361490230660137987;
  unsigned sym__0___45_7131249874638266788;
  fluidb_string<18> sym__0__7265729621635359692;
  fluidb_string<9> sym__0___45_2986035740159621374;
  fluidb_string<9> sym__0__5081664509798388941;
  unsigned sym__0___45_8518596434939314413;
  unsigned sym__0__1988221653138390749;
  fluidb_string<7> sym__0___45_8801377200944175068;
  unsigned sym__0___45_4634183629139578121;
  unsigned sym__0__806472603637564420;
  unsigned sym__0__1725829484083430844;
  unsigned sym__0___45_5279274827282678566;
  unsigned sym__0___45_9129247388617675603;
  fluidb_string<15> sym__0__1232225844204183080;
  fluidb_string<2> sym__0__9184663680502119984;
  fluidb_string<2> sym__0___45_9023997483659527503;
  fluidb_string<2> sym__0___45_1026604631201554135;
  fluidb_string<2> sym__0___45_7189754320372197989;
 private:
};


class Record16 {
 public:
  Record16(unsigned __sym__0___45_3961143035674407474, fluidb_string<18> __sym__0___45_6251899802584687138, fluidb_string<9> __sym__0__7895704682370371792, fluidb_string<9> __sym__0___45_4486276699369081973, unsigned __sym__0__1119005997298974989, unsigned __sym__0__3623076037790620667, fluidb_string<7> __sym__0___45_369211045765545994, unsigned __sym__0___45_2252349090140989903, unsigned __sym__0___45_6519715028980934506, unsigned __sym__0__6988144115678218478, unsigned __sym__0__1168585672581702408, unsigned __sym__0___45_1566345155802505557, fluidb_string<15> __sym__0___45_3812637469976556790, fluidb_string<2> __sym__0___45_2398128448016703502, fluidb_string<2> __sym__0__5574729781191990975, fluidb_string<2> __sym__0___45_5962954882039921225, fluidb_string<2> __sym__0___45_7276734914968453131, unsigned __sym__0__5341165382232817970, int __sym__0__5806605655987033032, unsigned __sym__0___45_6623407408063066704, unsigned __sym__0___45_1670026162273154778, unsigned __sym__0__2289386367904588797, unsigned __sym__0__8025829587274267860, fluidb_string<21> __sym__0__454237065112775549, unsigned __sym__0__608217599158647375, fluidb_string<10> __sym__0__4347069016709593136, unsigned __sym__0__4553650632168714688, double __sym__0__586349573025064242, unsigned __sym__0__144523031940788660, double __sym__0__2942207309637238010, unsigned __sym__0__1782085603058736686, unsigned __sym__0__3001704397998344329, double __sym__0___45_2662583778072919661, fluidb_string<13> __sym__0__8853539013824041307) : sym__0___45_3961143035674407474(__sym__0___45_3961143035674407474), sym__0___45_6251899802584687138(__sym__0___45_6251899802584687138), sym__0__7895704682370371792(__sym__0__7895704682370371792), sym__0___45_4486276699369081973(__sym__0___45_4486276699369081973), sym__0__1119005997298974989(__sym__0__1119005997298974989), sym__0__3623076037790620667(__sym__0__3623076037790620667), sym__0___45_369211045765545994(__sym__0___45_369211045765545994), sym__0___45_2252349090140989903(__sym__0___45_2252349090140989903), sym__0___45_6519715028980934506(__sym__0___45_6519715028980934506), sym__0__6988144115678218478(__sym__0__6988144115678218478), sym__0__1168585672581702408(__sym__0__1168585672581702408), sym__0___45_1566345155802505557(__sym__0___45_1566345155802505557), sym__0___45_3812637469976556790(__sym__0___45_3812637469976556790), sym__0___45_2398128448016703502(__sym__0___45_2398128448016703502), sym__0__5574729781191990975(__sym__0__5574729781191990975), sym__0___45_5962954882039921225(__sym__0___45_5962954882039921225), sym__0___45_7276734914968453131(__sym__0___45_7276734914968453131), sym__0__5341165382232817970(__sym__0__5341165382232817970), sym__0__5806605655987033032(__sym__0__5806605655987033032), sym__0___45_6623407408063066704(__sym__0___45_6623407408063066704), sym__0___45_1670026162273154778(__sym__0___45_1670026162273154778), sym__0__2289386367904588797(__sym__0__2289386367904588797), sym__0__8025829587274267860(__sym__0__8025829587274267860), sym__0__454237065112775549(__sym__0__454237065112775549), sym__0__608217599158647375(__sym__0__608217599158647375), sym__0__4347069016709593136(__sym__0__4347069016709593136), sym__0__4553650632168714688(__sym__0__4553650632168714688), sym__0__586349573025064242(__sym__0__586349573025064242), sym__0__144523031940788660(__sym__0__144523031940788660), sym__0__2942207309637238010(__sym__0__2942207309637238010), sym__0__1782085603058736686(__sym__0__1782085603058736686), sym__0__3001704397998344329(__sym__0__3001704397998344329), sym__0___45_2662583778072919661(__sym__0___45_2662583778072919661), sym__0__8853539013824041307(__sym__0__8853539013824041307)
  {
  }
  Record16() 
  {
  }
  std::string show() const{
    std::stringstream o;
    o << sym__0___45_3961143035674407474 << " | " << arrToString(sym__0___45_6251899802584687138) << " | " << arrToString(sym__0__7895704682370371792) << " | " << arrToString(sym__0___45_4486276699369081973) << " | " << sym__0__1119005997298974989 << " | " << sym__0__3623076037790620667 << " | " << arrToString(sym__0___45_369211045765545994) << " | " << sym__0___45_2252349090140989903 << " | " << sym__0___45_6519715028980934506 << " | " << sym__0__6988144115678218478 << " | " << sym__0__1168585672581702408 << " | " << sym__0___45_1566345155802505557 << " | " << arrToString(sym__0___45_3812637469976556790) << " | " << arrToString(sym__0___45_2398128448016703502) << " | " << arrToString(sym__0__5574729781191990975) << " | " << arrToString(sym__0___45_5962954882039921225) << " | " << arrToString(sym__0___45_7276734914968453131) << " | " << sym__0__5341165382232817970 << " | " << sym__0__5806605655987033032 << " | " << sym__0___45_6623407408063066704 << " | " << sym__0___45_1670026162273154778 << " | " << sym__0__2289386367904588797 << " | " << sym__0__8025829587274267860 << " | " << arrToString(sym__0__454237065112775549) << " | " << sym__0__608217599158647375 << " | " << arrToString(sym__0__4347069016709593136) << " | " << sym__0__4553650632168714688 << " | " << sym__0__586349573025064242 << " | " << sym__0__144523031940788660 << " | " << sym__0__2942207309637238010 << " | " << sym__0__1782085603058736686 << " | " << sym__0__3001704397998344329 << " | " << sym__0___45_2662583778072919661 << " | " << arrToString(sym__0__8853539013824041307);
    return o.str();
  }
  bool operator <(const Record16& otherRec) const{
    return (otherRec.sym__0___45_3961143035674407474 < sym__0___45_3961143035674407474 && (otherRec.sym__0___45_6251899802584687138 < sym__0___45_6251899802584687138 && (otherRec.sym__0__7895704682370371792 < sym__0__7895704682370371792 && (otherRec.sym__0___45_4486276699369081973 < sym__0___45_4486276699369081973 && (otherRec.sym__0__1119005997298974989 < sym__0__1119005997298974989 && (otherRec.sym__0__3623076037790620667 < sym__0__3623076037790620667 && (otherRec.sym__0___45_369211045765545994 < sym__0___45_369211045765545994 && (otherRec.sym__0___45_2252349090140989903 < sym__0___45_2252349090140989903 && (otherRec.sym__0___45_6519715028980934506 < sym__0___45_6519715028980934506 && (otherRec.sym__0__6988144115678218478 < sym__0__6988144115678218478 && (otherRec.sym__0__1168585672581702408 < sym__0__1168585672581702408 && (otherRec.sym__0___45_1566345155802505557 < sym__0___45_1566345155802505557 && (otherRec.sym__0___45_3812637469976556790 < sym__0___45_3812637469976556790 && (otherRec.sym__0___45_2398128448016703502 < sym__0___45_2398128448016703502 && (otherRec.sym__0__5574729781191990975 < sym__0__5574729781191990975 && (otherRec.sym__0___45_5962954882039921225 < sym__0___45_5962954882039921225 && (otherRec.sym__0___45_7276734914968453131 < sym__0___45_7276734914968453131 && (otherRec.sym__0__5341165382232817970 < sym__0__5341165382232817970 && (otherRec.sym__0__5806605655987033032 < sym__0__5806605655987033032 && (otherRec.sym__0___45_6623407408063066704 < sym__0___45_6623407408063066704 && (otherRec.sym__0___45_1670026162273154778 < sym__0___45_1670026162273154778 && (otherRec.sym__0__2289386367904588797 < sym__0__2289386367904588797 && (otherRec.sym__0__8025829587274267860 < sym__0__8025829587274267860 && (otherRec.sym__0__454237065112775549 < sym__0__454237065112775549 && (otherRec.sym__0__608217599158647375 < sym__0__608217599158647375 && (otherRec.sym__0__4347069016709593136 < sym__0__4347069016709593136 && (otherRec.sym__0__4553650632168714688 < sym__0__4553650632168714688 && (otherRec.sym__0__586349573025064242 < sym__0__586349573025064242 && (otherRec.sym__0__144523031940788660 < sym__0__144523031940788660 && (otherRec.sym__0__2942207309637238010 < sym__0__2942207309637238010 && (otherRec.sym__0__1782085603058736686 < sym__0__1782085603058736686 && (otherRec.sym__0__3001704397998344329 < sym__0__3001704397998344329 && (otherRec.sym__0___45_2662583778072919661 < sym__0___45_2662583778072919661 && otherRec.sym__0__8853539013824041307 < sym__0__8853539013824041307)))))))))))))))))))))))))))))))));
  }
  bool operator ==(const Record16& otherRec) const{
    return (otherRec.sym__0___45_3961143035674407474 == sym__0___45_3961143035674407474 && (otherRec.sym__0___45_6251899802584687138 == sym__0___45_6251899802584687138 && (otherRec.sym__0__7895704682370371792 == sym__0__7895704682370371792 && (otherRec.sym__0___45_4486276699369081973 == sym__0___45_4486276699369081973 && (otherRec.sym__0__1119005997298974989 == sym__0__1119005997298974989 && (otherRec.sym__0__3623076037790620667 == sym__0__3623076037790620667 && (otherRec.sym__0___45_369211045765545994 == sym__0___45_369211045765545994 && (otherRec.sym__0___45_2252349090140989903 == sym__0___45_2252349090140989903 && (otherRec.sym__0___45_6519715028980934506 == sym__0___45_6519715028980934506 && (otherRec.sym__0__6988144115678218478 == sym__0__6988144115678218478 && (otherRec.sym__0__1168585672581702408 == sym__0__1168585672581702408 && (otherRec.sym__0___45_1566345155802505557 == sym__0___45_1566345155802505557 && (otherRec.sym__0___45_3812637469976556790 == sym__0___45_3812637469976556790 && (otherRec.sym__0___45_2398128448016703502 == sym__0___45_2398128448016703502 && (otherRec.sym__0__5574729781191990975 == sym__0__5574729781191990975 && (otherRec.sym__0___45_5962954882039921225 == sym__0___45_5962954882039921225 && (otherRec.sym__0___45_7276734914968453131 == sym__0___45_7276734914968453131 && (otherRec.sym__0__5341165382232817970 == sym__0__5341165382232817970 && (otherRec.sym__0__5806605655987033032 == sym__0__5806605655987033032 && (otherRec.sym__0___45_6623407408063066704 == sym__0___45_6623407408063066704 && (otherRec.sym__0___45_1670026162273154778 == sym__0___45_1670026162273154778 && (otherRec.sym__0__2289386367904588797 == sym__0__2289386367904588797 && (otherRec.sym__0__8025829587274267860 == sym__0__8025829587274267860 && (otherRec.sym__0__454237065112775549 == sym__0__454237065112775549 && (otherRec.sym__0__608217599158647375 == sym__0__608217599158647375 && (otherRec.sym__0__4347069016709593136 == sym__0__4347069016709593136 && (otherRec.sym__0__4553650632168714688 == sym__0__4553650632168714688 && (otherRec.sym__0__586349573025064242 == sym__0__586349573025064242 && (otherRec.sym__0__144523031940788660 == sym__0__144523031940788660 && (otherRec.sym__0__2942207309637238010 == sym__0__2942207309637238010 && (otherRec.sym__0__1782085603058736686 == sym__0__1782085603058736686 && (otherRec.sym__0__3001704397998344329 == sym__0__3001704397998344329 && (otherRec.sym__0___45_2662583778072919661 == sym__0___45_2662583778072919661 && otherRec.sym__0__8853539013824041307 == sym__0__8853539013824041307)))))))))))))))))))))))))))))))));
  }
  bool operator !=(const Record16& otherRec) const{
    return (otherRec.sym__0___45_3961143035674407474 != sym__0___45_3961143035674407474 || (otherRec.sym__0___45_6251899802584687138 != sym__0___45_6251899802584687138 || (otherRec.sym__0__7895704682370371792 != sym__0__7895704682370371792 || (otherRec.sym__0___45_4486276699369081973 != sym__0___45_4486276699369081973 || (otherRec.sym__0__1119005997298974989 != sym__0__1119005997298974989 || (otherRec.sym__0__3623076037790620667 != sym__0__3623076037790620667 || (otherRec.sym__0___45_369211045765545994 != sym__0___45_369211045765545994 || (otherRec.sym__0___45_2252349090140989903 != sym__0___45_2252349090140989903 || (otherRec.sym__0___45_6519715028980934506 != sym__0___45_6519715028980934506 || (otherRec.sym__0__6988144115678218478 != sym__0__6988144115678218478 || (otherRec.sym__0__1168585672581702408 != sym__0__1168585672581702408 || (otherRec.sym__0___45_1566345155802505557 != sym__0___45_1566345155802505557 || (otherRec.sym__0___45_3812637469976556790 != sym__0___45_3812637469976556790 || (otherRec.sym__0___45_2398128448016703502 != sym__0___45_2398128448016703502 || (otherRec.sym__0__5574729781191990975 != sym__0__5574729781191990975 || (otherRec.sym__0___45_5962954882039921225 != sym__0___45_5962954882039921225 || (otherRec.sym__0___45_7276734914968453131 != sym__0___45_7276734914968453131 || (otherRec.sym__0__5341165382232817970 != sym__0__5341165382232817970 || (otherRec.sym__0__5806605655987033032 != sym__0__5806605655987033032 || (otherRec.sym__0___45_6623407408063066704 != sym__0___45_6623407408063066704 || (otherRec.sym__0___45_1670026162273154778 != sym__0___45_1670026162273154778 || (otherRec.sym__0__2289386367904588797 != sym__0__2289386367904588797 || (otherRec.sym__0__8025829587274267860 != sym__0__8025829587274267860 || (otherRec.sym__0__454237065112775549 != sym__0__454237065112775549 || (otherRec.sym__0__608217599158647375 != sym__0__608217599158647375 || (otherRec.sym__0__4347069016709593136 != sym__0__4347069016709593136 || (otherRec.sym__0__4553650632168714688 != sym__0__4553650632168714688 || (otherRec.sym__0__586349573025064242 != sym__0__586349573025064242 || (otherRec.sym__0__144523031940788660 != sym__0__144523031940788660 || (otherRec.sym__0__2942207309637238010 != sym__0__2942207309637238010 || (otherRec.sym__0__1782085603058736686 != sym__0__1782085603058736686 || (otherRec.sym__0__3001704397998344329 != sym__0__3001704397998344329 || (otherRec.sym__0___45_2662583778072919661 != sym__0___45_2662583778072919661 || otherRec.sym__0__8853539013824041307 != sym__0__8853539013824041307)))))))))))))))))))))))))))))))));
  }
  unsigned sym__0___45_3961143035674407474;
  fluidb_string<18> sym__0___45_6251899802584687138;
  fluidb_string<9> sym__0__7895704682370371792;
  fluidb_string<9> sym__0___45_4486276699369081973;
  unsigned sym__0__1119005997298974989;
  unsigned sym__0__3623076037790620667;
  fluidb_string<7> sym__0___45_369211045765545994;
  unsigned sym__0___45_2252349090140989903;
  unsigned sym__0___45_6519715028980934506;
  unsigned sym__0__6988144115678218478;
  unsigned sym__0__1168585672581702408;
  unsigned sym__0___45_1566345155802505557;
  fluidb_string<15> sym__0___45_3812637469976556790;
  fluidb_string<2> sym__0___45_2398128448016703502;
  fluidb_string<2> sym__0__5574729781191990975;
  fluidb_string<2> sym__0___45_5962954882039921225;
  fluidb_string<2> sym__0___45_7276734914968453131;
  unsigned sym__0__5341165382232817970;
  int sym__0__5806605655987033032;
  unsigned sym__0___45_6623407408063066704;
  unsigned sym__0___45_1670026162273154778;
  unsigned sym__0__2289386367904588797;
  unsigned sym__0__8025829587274267860;
  fluidb_string<21> sym__0__454237065112775549;
  unsigned sym__0__608217599158647375;
  fluidb_string<10> sym__0__4347069016709593136;
  unsigned sym__0__4553650632168714688;
  double sym__0__586349573025064242;
  unsigned sym__0__144523031940788660;
  double sym__0__2942207309637238010;
  unsigned sym__0__1782085603058736686;
  unsigned sym__0__3001704397998344329;
  double sym__0___45_2662583778072919661;
  fluidb_string<13> sym__0__8853539013824041307;
 private:
};


class Record10 {
 public:
  Record10(unsigned __sym__0___45_9117911789383871612, fluidb_string<25> __sym__0___45_1547112764757372609, fluidb_string<40> __sym__0___45_8663957751614366179, fluidb_string<16> __sym__0__1466641425010216931, fluidb_string<16> __sym__0__3672857626658041553, fluidb_string<13> __sym__0___45_3362440237381592032, fluidb_string<15> __sym__0___45_6631364176934158657) : sym__0___45_9117911789383871612(__sym__0___45_9117911789383871612), sym__0___45_1547112764757372609(__sym__0___45_1547112764757372609), sym__0___45_8663957751614366179(__sym__0___45_8663957751614366179), sym__0__1466641425010216931(__sym__0__1466641425010216931), sym__0__3672857626658041553(__sym__0__3672857626658041553), sym__0___45_3362440237381592032(__sym__0___45_3362440237381592032), sym__0___45_6631364176934158657(__sym__0___45_6631364176934158657)
  {
  }
  Record10() 
  {
  }
  std::string show() const{
    std::stringstream o;
    o << sym__0___45_9117911789383871612 << " | " << arrToString(sym__0___45_1547112764757372609) << " | " << arrToString(sym__0___45_8663957751614366179) << " | " << arrToString(sym__0__1466641425010216931) << " | " << arrToString(sym__0__3672857626658041553) << " | " << arrToString(sym__0___45_3362440237381592032) << " | " << arrToString(sym__0___45_6631364176934158657);
    return o.str();
  }
  bool operator <(const Record10& otherRec) const{
    return (otherRec.sym__0___45_9117911789383871612 < sym__0___45_9117911789383871612 && (otherRec.sym__0___45_1547112764757372609 < sym__0___45_1547112764757372609 && (otherRec.sym__0___45_8663957751614366179 < sym__0___45_8663957751614366179 && (otherRec.sym__0__1466641425010216931 < sym__0__1466641425010216931 && (otherRec.sym__0__3672857626658041553 < sym__0__3672857626658041553 && (otherRec.sym__0___45_3362440237381592032 < sym__0___45_3362440237381592032 && otherRec.sym__0___45_6631364176934158657 < sym__0___45_6631364176934158657))))));
  }
  bool operator ==(const Record10& otherRec) const{
    return (otherRec.sym__0___45_9117911789383871612 == sym__0___45_9117911789383871612 && (otherRec.sym__0___45_1547112764757372609 == sym__0___45_1547112764757372609 && (otherRec.sym__0___45_8663957751614366179 == sym__0___45_8663957751614366179 && (otherRec.sym__0__1466641425010216931 == sym__0__1466641425010216931 && (otherRec.sym__0__3672857626658041553 == sym__0__3672857626658041553 && (otherRec.sym__0___45_3362440237381592032 == sym__0___45_3362440237381592032 && otherRec.sym__0___45_6631364176934158657 == sym__0___45_6631364176934158657))))));
  }
  bool operator !=(const Record10& otherRec) const{
    return (otherRec.sym__0___45_9117911789383871612 != sym__0___45_9117911789383871612 || (otherRec.sym__0___45_1547112764757372609 != sym__0___45_1547112764757372609 || (otherRec.sym__0___45_8663957751614366179 != sym__0___45_8663957751614366179 || (otherRec.sym__0__1466641425010216931 != sym__0__1466641425010216931 || (otherRec.sym__0__3672857626658041553 != sym__0__3672857626658041553 || (otherRec.sym__0___45_3362440237381592032 != sym__0___45_3362440237381592032 || otherRec.sym__0___45_6631364176934158657 != sym__0___45_6631364176934158657))))));
  }
  unsigned sym__0___45_9117911789383871612;
  fluidb_string<25> sym__0___45_1547112764757372609;
  fluidb_string<40> sym__0___45_8663957751614366179;
  fluidb_string<16> sym__0__1466641425010216931;
  fluidb_string<16> sym__0__3672857626658041553;
  fluidb_string<13> sym__0___45_3362440237381592032;
  fluidb_string<15> sym__0___45_6631364176934158657;
 private:
};


class Record7 {
 public:
  Record7(unsigned __sym__0__9004647469590526899, fluidb_string<18> __sym__0___45_1621348641261898005, fluidb_string<40> __sym__0__614427126981106829, fluidb_string<11> __sym__0___45_2454293820925122065, fluidb_string<15> __sym__0__6553227872838818177, fluidb_string<13> __sym__0___45_4248174812301520048, fluidb_string<15> __sym__0___45_3914904628387332757, fluidb_string<21> __sym__0___45_5446426298209956761, unsigned __sym__0___45_2558673723420522753, int __sym__0___45_3519351712545876895, unsigned __sym__0___45_1754306014800131719, unsigned __sym__0__6212025267607306819, unsigned __sym__0__2772749593389396148, unsigned __sym__0___45_4019035565219397859, fluidb_string<21> __sym__0___45_6819607202635958988, unsigned __sym__0__4920008974061631994, fluidb_string<10> __sym__0___45_8128105244823042823, unsigned __sym__0___45_2374853137558343895, double __sym__0__930686933803596543, unsigned __sym__0__5145129428883827325, double __sym__0__1860202553700236407, unsigned __sym__0___45_20127004494246501, unsigned __sym__0___45_3013783536855820064, double __sym__0___45_288503368240108258, fluidb_string<13> __sym__0___45_2265690738963363690) : sym__0__9004647469590526899(__sym__0__9004647469590526899), sym__0___45_1621348641261898005(__sym__0___45_1621348641261898005), sym__0__614427126981106829(__sym__0__614427126981106829), sym__0___45_2454293820925122065(__sym__0___45_2454293820925122065), sym__0__6553227872838818177(__sym__0__6553227872838818177), sym__0___45_4248174812301520048(__sym__0___45_4248174812301520048), sym__0___45_3914904628387332757(__sym__0___45_3914904628387332757), sym__0___45_5446426298209956761(__sym__0___45_5446426298209956761), sym__0___45_2558673723420522753(__sym__0___45_2558673723420522753), sym__0___45_3519351712545876895(__sym__0___45_3519351712545876895), sym__0___45_1754306014800131719(__sym__0___45_1754306014800131719), sym__0__6212025267607306819(__sym__0__6212025267607306819), sym__0__2772749593389396148(__sym__0__2772749593389396148), sym__0___45_4019035565219397859(__sym__0___45_4019035565219397859), sym__0___45_6819607202635958988(__sym__0___45_6819607202635958988), sym__0__4920008974061631994(__sym__0__4920008974061631994), sym__0___45_8128105244823042823(__sym__0___45_8128105244823042823), sym__0___45_2374853137558343895(__sym__0___45_2374853137558343895), sym__0__930686933803596543(__sym__0__930686933803596543), sym__0__5145129428883827325(__sym__0__5145129428883827325), sym__0__1860202553700236407(__sym__0__1860202553700236407), sym__0___45_20127004494246501(__sym__0___45_20127004494246501), sym__0___45_3013783536855820064(__sym__0___45_3013783536855820064), sym__0___45_288503368240108258(__sym__0___45_288503368240108258), sym__0___45_2265690738963363690(__sym__0___45_2265690738963363690)
  {
  }
  Record7() 
  {
  }
  std::string show() const{
    std::stringstream o;
    o << sym__0__9004647469590526899 << " | " << arrToString(sym__0___45_1621348641261898005) << " | " << arrToString(sym__0__614427126981106829) << " | " << arrToString(sym__0___45_2454293820925122065) << " | " << arrToString(sym__0__6553227872838818177) << " | " << arrToString(sym__0___45_4248174812301520048) << " | " << arrToString(sym__0___45_3914904628387332757) << " | " << arrToString(sym__0___45_5446426298209956761) << " | " << sym__0___45_2558673723420522753 << " | " << sym__0___45_3519351712545876895 << " | " << sym__0___45_1754306014800131719 << " | " << sym__0__6212025267607306819 << " | " << sym__0__2772749593389396148 << " | " << sym__0___45_4019035565219397859 << " | " << arrToString(sym__0___45_6819607202635958988) << " | " << sym__0__4920008974061631994 << " | " << arrToString(sym__0___45_8128105244823042823) << " | " << sym__0___45_2374853137558343895 << " | " << sym__0__930686933803596543 << " | " << sym__0__5145129428883827325 << " | " << sym__0__1860202553700236407 << " | " << sym__0___45_20127004494246501 << " | " << sym__0___45_3013783536855820064 << " | " << sym__0___45_288503368240108258 << " | " << arrToString(sym__0___45_2265690738963363690);
    return o.str();
  }
  bool operator <(const Record7& otherRec) const{
    return (otherRec.sym__0__9004647469590526899 < sym__0__9004647469590526899 && (otherRec.sym__0___45_1621348641261898005 < sym__0___45_1621348641261898005 && (otherRec.sym__0__614427126981106829 < sym__0__614427126981106829 && (otherRec.sym__0___45_2454293820925122065 < sym__0___45_2454293820925122065 && (otherRec.sym__0__6553227872838818177 < sym__0__6553227872838818177 && (otherRec.sym__0___45_4248174812301520048 < sym__0___45_4248174812301520048 && (otherRec.sym__0___45_3914904628387332757 < sym__0___45_3914904628387332757 && (otherRec.sym__0___45_5446426298209956761 < sym__0___45_5446426298209956761 && (otherRec.sym__0___45_2558673723420522753 < sym__0___45_2558673723420522753 && (otherRec.sym__0___45_3519351712545876895 < sym__0___45_3519351712545876895 && (otherRec.sym__0___45_1754306014800131719 < sym__0___45_1754306014800131719 && (otherRec.sym__0__6212025267607306819 < sym__0__6212025267607306819 && (otherRec.sym__0__2772749593389396148 < sym__0__2772749593389396148 && (otherRec.sym__0___45_4019035565219397859 < sym__0___45_4019035565219397859 && (otherRec.sym__0___45_6819607202635958988 < sym__0___45_6819607202635958988 && (otherRec.sym__0__4920008974061631994 < sym__0__4920008974061631994 && (otherRec.sym__0___45_8128105244823042823 < sym__0___45_8128105244823042823 && (otherRec.sym__0___45_2374853137558343895 < sym__0___45_2374853137558343895 && (otherRec.sym__0__930686933803596543 < sym__0__930686933803596543 && (otherRec.sym__0__5145129428883827325 < sym__0__5145129428883827325 && (otherRec.sym__0__1860202553700236407 < sym__0__1860202553700236407 && (otherRec.sym__0___45_20127004494246501 < sym__0___45_20127004494246501 && (otherRec.sym__0___45_3013783536855820064 < sym__0___45_3013783536855820064 && (otherRec.sym__0___45_288503368240108258 < sym__0___45_288503368240108258 && otherRec.sym__0___45_2265690738963363690 < sym__0___45_2265690738963363690))))))))))))))))))))))));
  }
  bool operator ==(const Record7& otherRec) const{
    return (otherRec.sym__0__9004647469590526899 == sym__0__9004647469590526899 && (otherRec.sym__0___45_1621348641261898005 == sym__0___45_1621348641261898005 && (otherRec.sym__0__614427126981106829 == sym__0__614427126981106829 && (otherRec.sym__0___45_2454293820925122065 == sym__0___45_2454293820925122065 && (otherRec.sym__0__6553227872838818177 == sym__0__6553227872838818177 && (otherRec.sym__0___45_4248174812301520048 == sym__0___45_4248174812301520048 && (otherRec.sym__0___45_3914904628387332757 == sym__0___45_3914904628387332757 && (otherRec.sym__0___45_5446426298209956761 == sym__0___45_5446426298209956761 && (otherRec.sym__0___45_2558673723420522753 == sym__0___45_2558673723420522753 && (otherRec.sym__0___45_3519351712545876895 == sym__0___45_3519351712545876895 && (otherRec.sym__0___45_1754306014800131719 == sym__0___45_1754306014800131719 && (otherRec.sym__0__6212025267607306819 == sym__0__6212025267607306819 && (otherRec.sym__0__2772749593389396148 == sym__0__2772749593389396148 && (otherRec.sym__0___45_4019035565219397859 == sym__0___45_4019035565219397859 && (otherRec.sym__0___45_6819607202635958988 == sym__0___45_6819607202635958988 && (otherRec.sym__0__4920008974061631994 == sym__0__4920008974061631994 && (otherRec.sym__0___45_8128105244823042823 == sym__0___45_8128105244823042823 && (otherRec.sym__0___45_2374853137558343895 == sym__0___45_2374853137558343895 && (otherRec.sym__0__930686933803596543 == sym__0__930686933803596543 && (otherRec.sym__0__5145129428883827325 == sym__0__5145129428883827325 && (otherRec.sym__0__1860202553700236407 == sym__0__1860202553700236407 && (otherRec.sym__0___45_20127004494246501 == sym__0___45_20127004494246501 && (otherRec.sym__0___45_3013783536855820064 == sym__0___45_3013783536855820064 && (otherRec.sym__0___45_288503368240108258 == sym__0___45_288503368240108258 && otherRec.sym__0___45_2265690738963363690 == sym__0___45_2265690738963363690))))))))))))))))))))))));
  }
  bool operator !=(const Record7& otherRec) const{
    return (otherRec.sym__0__9004647469590526899 != sym__0__9004647469590526899 || (otherRec.sym__0___45_1621348641261898005 != sym__0___45_1621348641261898005 || (otherRec.sym__0__614427126981106829 != sym__0__614427126981106829 || (otherRec.sym__0___45_2454293820925122065 != sym__0___45_2454293820925122065 || (otherRec.sym__0__6553227872838818177 != sym__0__6553227872838818177 || (otherRec.sym__0___45_4248174812301520048 != sym__0___45_4248174812301520048 || (otherRec.sym__0___45_3914904628387332757 != sym__0___45_3914904628387332757 || (otherRec.sym__0___45_5446426298209956761 != sym__0___45_5446426298209956761 || (otherRec.sym__0___45_2558673723420522753 != sym__0___45_2558673723420522753 || (otherRec.sym__0___45_3519351712545876895 != sym__0___45_3519351712545876895 || (otherRec.sym__0___45_1754306014800131719 != sym__0___45_1754306014800131719 || (otherRec.sym__0__6212025267607306819 != sym__0__6212025267607306819 || (otherRec.sym__0__2772749593389396148 != sym__0__2772749593389396148 || (otherRec.sym__0___45_4019035565219397859 != sym__0___45_4019035565219397859 || (otherRec.sym__0___45_6819607202635958988 != sym__0___45_6819607202635958988 || (otherRec.sym__0__4920008974061631994 != sym__0__4920008974061631994 || (otherRec.sym__0___45_8128105244823042823 != sym__0___45_8128105244823042823 || (otherRec.sym__0___45_2374853137558343895 != sym__0___45_2374853137558343895 || (otherRec.sym__0__930686933803596543 != sym__0__930686933803596543 || (otherRec.sym__0__5145129428883827325 != sym__0__5145129428883827325 || (otherRec.sym__0__1860202553700236407 != sym__0__1860202553700236407 || (otherRec.sym__0___45_20127004494246501 != sym__0___45_20127004494246501 || (otherRec.sym__0___45_3013783536855820064 != sym__0___45_3013783536855820064 || (otherRec.sym__0___45_288503368240108258 != sym__0___45_288503368240108258 || otherRec.sym__0___45_2265690738963363690 != sym__0___45_2265690738963363690))))))))))))))))))))))));
  }
  unsigned sym__0__9004647469590526899;
  fluidb_string<18> sym__0___45_1621348641261898005;
  fluidb_string<40> sym__0__614427126981106829;
  fluidb_string<11> sym__0___45_2454293820925122065;
  fluidb_string<15> sym__0__6553227872838818177;
  fluidb_string<13> sym__0___45_4248174812301520048;
  fluidb_string<15> sym__0___45_3914904628387332757;
  fluidb_string<21> sym__0___45_5446426298209956761;
  unsigned sym__0___45_2558673723420522753;
  int sym__0___45_3519351712545876895;
  unsigned sym__0___45_1754306014800131719;
  unsigned sym__0__6212025267607306819;
  unsigned sym__0__2772749593389396148;
  unsigned sym__0___45_4019035565219397859;
  fluidb_string<21> sym__0___45_6819607202635958988;
  unsigned sym__0__4920008974061631994;
  fluidb_string<10> sym__0___45_8128105244823042823;
  unsigned sym__0___45_2374853137558343895;
  double sym__0__930686933803596543;
  unsigned sym__0__5145129428883827325;
  double sym__0__1860202553700236407;
  unsigned sym__0___45_20127004494246501;
  unsigned sym__0___45_3013783536855820064;
  double sym__0___45_288503368240108258;
  fluidb_string<13> sym__0___45_2265690738963363690;
 private:
};


class CallableClass26 {
 public:
  Record25 operator()(const Record16& record23, const Record10& record24) {
    return Record25(record24.sym__0___45_9117911789383871612, record24.sym__0___45_1547112764757372609, record24.sym__0___45_8663957751614366179, record24.sym__0__1466641425010216931, record24.sym__0__3672857626658041553, record24.sym__0___45_3362440237381592032, record24.sym__0___45_6631364176934158657, record23.sym__0__5341165382232817970, record23.sym__0__5806605655987033032, record23.sym__0___45_6623407408063066704, record23.sym__0___45_1670026162273154778, record23.sym__0__2289386367904588797, record23.sym__0__8025829587274267860, record23.sym__0__454237065112775549, record23.sym__0__608217599158647375, record23.sym__0__4347069016709593136, record23.sym__0__4553650632168714688, record23.sym__0__586349573025064242, record23.sym__0__144523031940788660, record23.sym__0__2942207309637238010, record23.sym__0__1782085603058736686, record23.sym__0__3001704397998344329, record23.sym__0___45_2662583778072919661, record23.sym__0__8853539013824041307, record23.sym__0___45_3961143035674407474, record23.sym__0___45_6251899802584687138, record23.sym__0__7895704682370371792, record23.sym__0___45_4486276699369081973, record23.sym__0__1119005997298974989, record23.sym__0__3623076037790620667, record23.sym__0___45_369211045765545994, record23.sym__0___45_2252349090140989903, record23.sym__0___45_6519715028980934506, record23.sym__0__6988144115678218478, record23.sym__0__1168585672581702408, record23.sym__0___45_1566345155802505557, record23.sym__0___45_3812637469976556790, record23.sym__0___45_2398128448016703502, record23.sym__0__5574729781191990975, record23.sym__0___45_5962954882039921225, record23.sym__0___45_7276734914968453131);
  }
  typedef Record25 Codomain;
  typedef Record16 Domain0;
  typedef Record10 Domain1;
 private:
};


class CallableClass38 {
 public:
  Record18 operator()(const Record4& record37) {
    return Record18(record37.sym__0__7178003535380331304);
  }
  typedef Record18 Codomain;
  typedef Record4 Domain0;
 private:
};


class CallableClass11 {
 public:
  Record10 operator()(const Record8& record6) {
    return Record10(record6.sym__0___45_1023382914117654422, record6.sym__0__6224010339127806049, record6.sym__0___45_8804639047977952305, record6.sym__0__8926375957639307021, record6.sym__0__5153200798583684363, record6.sym__0___45_794494697990656050, record6.sym__0__7308161412148661473);
  }
  typedef Record10 Codomain;
  typedef Record8 Domain0;
 private:
};


class CallableClass3 {
 public:
  Record1 operator()(const Record2& record0) {
    return Record1(record0.sym__0___45_2544647080140891779, record0.sym__0___45_4581931629044260499, record0.sym__0__3511844764913402723, record0.sym__0__2581750769096843740, record0.sym__0___45_6031048599860414622, record0.sym__0__8084343433543173228, record0.sym__0___45_3664881058840515771, record0.sym__0___45_1924199962958349658, record0.sym__0__7769469128992998949, record0.sym__0__7818554603565865821, record0.sym__0__4360634980582143419, record0.sym__0___45_7492593539880285892, record0.sym__0__1706094538935295417, record0.sym__0__6114638120282452033, record0.sym__0___45_78261027814563536, record0.sym__0__2648420561950371368, record0.sym__0__3807806894063626346, record0.sym__0__3010211381236373125, record0.sym__0__3300613616795216173, record0.sym__0___45_3130123223234281513, record0.sym__0__8189415442579395633, record0.sym__0__3248231192614790363, record0.sym__0__1734593865430170446, record0.sym__0___45_8167422549222682195, record0.sym__0__2936268515493900473, record0.sym__0__2661490882974477953, record0.sym__0___45_6833151998909895557, record0.sym__0___45_6379152824683587325, record0.sym__0__3389381886574775957, record0.sym__0___45_3006394417042584462, record0.sym__0__5708853396861436519, record0.sym__0__2510302245253987058, record0.sym__0___45_8268616720440236384, record0.sym__0___45_2145747097567105917, record0.sym__0___45_6747202196090936717, record0.sym__0___45_980129616638612863, record0.sym__0__7935787287177824775, record0.sym__0___45_1765426731373793463, record0.sym__0__2312911666975909277, record0.sym__0__8713898721580785886, record0.sym__0__5274362417922015940, record0.sym__0___45_5950462958936866676, record0.sym__0__5599391359954735578, record0.sym__0__4014184007857207821, record0.sym__0___45_7146441527183610849, record0.sym__0___45_8891100078062559775, record0.sym__0___45_5365202057839317149, record0.sym__0__5177313860806756678, record0.sym__0___45_6139660049171508851);
  }
  typedef Record1 Codomain;
  typedef Record2 Domain0;
 private:
};


class CallableClass40 {
 public:
  bool operator()(const Record33& record39) {
    return (like(record39.sym__0___45_8594673557260853450, "AMERICA") && like(record39.sym__0__603002359744084410, "MFGR#12"));
  }
  typedef bool Codomain;
  typedef Record33 Domain0;
 private:
};


class CallableClass51 {
 public:
  Record48 operator()(const Record42& record50) {
    return Record48(record50.sym__0___45_6261698000977207925, record50.sym__0__1631598784897141641);
  }
  typedef Record48 Codomain;
  typedef Record42 Domain0;
 private:
};


class CallableClass30 {
 public:
  Record18 operator()(const Record10& record29) {
    return Record18(record29.sym__0___45_9117911789383871612);
  }
  typedef Record18 Codomain;
  typedef Record10 Domain0;
 private:
};


class CallableClass5 {
 public:
  Record4 operator()(const Record2& record0) {
    return Record4(record0.sym__0__5600261570499839795, record0.sym__0__7033726162709406531, record0.sym__0___45_2028921051824210768, record0.sym__0__1510822012344354762, record0.sym__0___45_2462553484168592128, record0.sym__0__6826615390864986324, record0.sym__0__1653057618405204038, record0.sym__0__1042393484014954953, record0.sym__0___45_4797345940361177504);
  }
  typedef Record4 Codomain;
  typedef Record2 Domain0;
 private:
};


class CallableClass20 {
 public:
  Record18 operator()(const Record14& record19) {
    return Record18(record19.sym__0__2037864888707786451);
  }
  typedef Record18 Codomain;
  typedef Record14 Domain0;
 private:
};


class CallableClass17 {
 public:
  Record16 operator()(const Record14& record12, const Record15& record13) {
    return Record16(record12.sym__0__2037864888707786451, record12.sym__0__8533656712666151747, record12.sym__0__646314041574508429, record12.sym__0__6064137978327902054, record12.sym__0__3754157776500852496, record12.sym__0__6284345160241949046, record12.sym__0___45_773692805971570325, record12.sym__0___45_8399474032083007524, record12.sym__0___45_2038947427357444789, record12.sym__0__6071994954612827827, record12.sym__0__7742515703067448213, record12.sym__0__5201219213304227654, record12.sym__0___45_5896625796158057241, record12.sym__0___45_1108504872221226081, record12.sym__0__1055103969674359346, record12.sym__0__9115626546918942554, record12.sym__0___45_6850413444013389848, record13.sym__0___45_7574074018531922998, record13.sym__0__1125464382786937920, record13.sym__0___45_8257174981563598792, record13.sym__0__957746932829998382, record13.sym__0__934137931677987637, record13.sym__0___45_7332894783442362324, record13.sym__0__8974811218372806325, record13.sym__0___45_5217562530132451785, record13.sym__0__7851147553396318904, record13.sym__0___45_4975505511391694456, record13.sym__0___45_7249986409969561654, record13.sym__0__4671626969570181580, record13.sym__0___45_3666121704283105054, record13.sym__0__5495011930072844518, record13.sym__0___45_4423447118092167055, record13.sym__0___45_1608082021099887893, record13.sym__0__1584187396639360899);
  }
  typedef Record16 Codomain;
  typedef Record14 Domain0;
  typedef Record15 Domain1;
 private:
};


class CallableClass49 {
 public:
  Record48 operator()(const Record44& record41) {
    return Record48(record41.sym__0___45_2549139954849286782, record41.sym__0___45_8628415396103686184);
  }
  typedef Record48 Codomain;
  typedef Record44 Domain0;
 private:
};


class CallableClass34 {
 public:
  Record33 operator()(const Record25& record31, const Record4& record32) {
    return Record33(record31.sym__0__2102316481828394123, record31.sym__0__1780257040091145452, record31.sym__0__3109939911660640430, record31.sym__0___45_2175199227983174320, record31.sym__0__2274992661292194562, record31.sym__0___45_52536403880094569, record31.sym__0__8474116574285927276, record31.sym__0__1835503384076924528, record31.sym__0__586412267723269786, record31.sym__0__1353367320182642978, record31.sym__0___45_6351222752813626636, record31.sym__0___45_805067702695824989, record31.sym__0__914509637812701046, record31.sym__0__7895450651221174051, record31.sym__0__5942285589324576545, record31.sym__0__3979382234526804898, record31.sym__0___45_6103522369909819246, record31.sym__0__1873148039180761712, record31.sym__0__1430551526674366102, record31.sym__0__1048818672001592248, record31.sym__0__5723353836447658492, record31.sym__0___45_2233273278156881105, record31.sym__0___45_1120880788595637835, record31.sym__0___45_6361490230660137987, record31.sym__0___45_7131249874638266788, record31.sym__0__7265729621635359692, record31.sym__0___45_2986035740159621374, record31.sym__0__5081664509798388941, record31.sym__0___45_8518596434939314413, record31.sym__0__1988221653138390749, record31.sym__0___45_8801377200944175068, record31.sym__0___45_4634183629139578121, record31.sym__0__806472603637564420, record31.sym__0__1725829484083430844, record31.sym__0___45_5279274827282678566, record31.sym__0___45_9129247388617675603, record31.sym__0__1232225844204183080, record31.sym__0__9184663680502119984, record31.sym__0___45_9023997483659527503, record31.sym__0___45_1026604631201554135, record31.sym__0___45_7189754320372197989, record32.sym__0__7178003535380331304, record32.sym__0___45_7020257275696364520, record32.sym__0___45_6307179734719967033, record32.sym__0__4568304886257136061, record32.sym__0___45_6291097039630000265, record32.sym__0__551327770031967739, record32.sym__0__3827696365022297353, record32.sym__0___45_1779543743759935870, record32.sym__0__3752090135924368535);
  }
  typedef Record33 Codomain;
  typedef Record25 Domain0;
  typedef Record4 Domain1;
 private:
};


class CallableClass9 {
 public:
  Record7 operator()(const Record8& record6) {
    return Record7(record6.sym__0__2833764152503888409, record6.sym__0__6938021140779677761, record6.sym__0___45_4700201805806600089, record6.sym__0__3362667619044778557, record6.sym__0__2679827580767046755, record6.sym__0___45_4186304031693649930, record6.sym__0__8596564865999609793, record6.sym__0___45_1671053890158572571, record6.sym__0__2256924431415148013, record6.sym__0__347872876320563651, record6.sym__0___45_7666447219434903317, record6.sym__0__1272718151591622153, record6.sym__0__4584633926271658914, record6.sym__0___45_4610773208091240233, record6.sym__0___45_5766638191766435038, record6.sym__0___45_5211223358204127380, record6.sym__0__8435431464460332395, record6.sym__0___45_6450191115912157957, record6.sym__0__7921907673157171693, record6.sym__0___45_1699747741436218441, record6.sym__0___45_2985562469054236715, record6.sym__0__3746029949899912401, record6.sym__0___45_989155948099215770, record6.sym__0___45_1667761180508152936, record6.sym__0__5854462121170882944);
  }
  typedef Record7 Codomain;
  typedef Record8 Domain0;
 private:
};


class CallableClass36 {
 public:
  Record18 operator()(const Record25& record35) {
    return Record18(record35.sym__0___45_6351222752813626636);
  }
  typedef Record18 Codomain;
  typedef Record25 Domain0;
 private:
};


class CallableClass22 {
 public:
  Record18 operator()(const Record15& record21) {
    return Record18(record21.sym__0___45_7332894783442362324);
  }
  typedef Record18 Codomain;
  typedef Record15 Domain0;
 private:
};


class CallableClass28 {
 public:
  Record18 operator()(const Record16& record27) {
    return Record18(record27.sym__0__2289386367904588797);
  }
  typedef Record18 Codomain;
  typedef Record16 Domain0;
 private:
};


class CallableClass47 {
 public:
  Record42 operator()(const Record44& record41) {
    return Record42(vAggrSum43(record41.sym__0__8598037934431251909), vAggrFirst45(record41.sym__0___45_2549139954849286782), vAggrFirst46(record41.sym__0___45_8628415396103686184));
  }
  typedef Record42 Codomain;
  typedef Record44 Domain0;
 private:
  AggrSum<unsigned> vAggrSum43;
  AggrFirst<unsigned> vAggrFirst45;
  AggrFirst<fluidb_string<10>> vAggrFirst46;
};






int main() {
  // ReverseTrigger: (Just 
  //   (Left 
  //     [
  //      QJoin 
  //         (P0 
  //           (R2 REq 
  //               (R0 (E0 (ESym "lo_partkey"))) 
  //               (R0 (E0 (ESym "p_partkey")))))
  std::cout << "ReverseTrigger: (Just \n  (Left \n    [\n     QJoin \n        (P0 \n          (R2 REq \n              (R0 (E0 (ESym \"lo_partkey\"))) \n              (R0 (E0 (ESym \"p_partkey\")))))\n    ]))" << std::endl;
  {
    auto operation = mkUnJoin<CallableClass3, CallableClass5>(Just("/tmp/fluidb_store/data316.dat"), Nothing(), Just("/tmp/fluidb_store/data317.dat"), Nothing(), Just("/tmp/fluidb_store/data2.dat"));
    operation.run();
    operation.print_output(10);
  }
  // ReverseTrigger: (Just 
  //   (Left 
  //     [
  //      QJoin 
  //         (P0 
  //           (R2 REq 
  //               (R0 (E0 (ESym "lo_suppkey"))) 
  //               (R0 (E0 (ESym "s_suppkey")))))
  std::cout << "ReverseTrigger: (Just \n  (Left \n    [\n     QJoin \n        (P0 \n          (R2 REq \n              (R0 (E0 (ESym \"lo_suppkey\"))) \n              (R0 (E0 (ESym \"s_suppkey\")))))\n    ]))" << std::endl;
  {
    auto operation = mkUnJoin<CallableClass9, CallableClass11>(Just("/tmp/fluidb_store/data306.dat"), Nothing(), Just("/tmp/fluidb_store/data307.dat"), Nothing(), Just("/tmp/fluidb_store/data3.dat"));
    operation.run();
    operation.print_output(10);
  }
  // Delete: (S 
  //   (P1 
  //     PNot 
  //     (P2 
  //       PAnd 
  //       (P0 
  //         (R2 REq (R0 (E0 (ESym "d_weeknuminyear"))) (R0 (E0 (EInt 6))))) 
  //       (P0 (R2 REq (R0 (E0 (ESym "d_year"))) (R0 (E0 (EInt 1994))))))) 
  std::cout << "Delete: (S \n  (P1 \n    PNot \n    (P2 \n      PAnd \n      (P0 \n        (R2 REq (R0 (E0 (ESym \"d_weeknuminyear\"))) (R0 (E0 (EInt 6))))) \n      (P0 (R2 REq (R0 (E0 (ESym \"d_year\"))) (R0 (E0 (EInt 1994))))))) \n  (Q0 (TSymbol \"date\")))" << std::endl;
  deleteFile("/tmp/fluidb_store/data26.dat");
  // Delete: (Q1 
  //   (QGroup 
  //     [
  //      (
  //        ESym "revenue",
  //        E0 
  //           (NAggr 
  //             AggrSum 
  //             (E2 EMul 
  //                 (E0 (ESym "lo_extendedprice")) 
  //                 (E0 (ESym "lo_discount"))))
  //       )
  //     ] 
  //     []) 
  //   (S 
  //     (P2 
  //       PAnd 
  //       (P2 
  //         PAnd 
  //         (P2 
  //           PAnd 
  //           (P0 
  //             (R2 RLe (R0 (E0 (EInt 5))) (R0 (E0 (ESym "lo_discount"))))) 
  //           (P0 
  //             (R2 RLe (R0 (E0 (ESym "lo_discount"))) (R0 (E0 (EInt 7)))))) 
  //         (P0 (R2 RLe (R0 (E0 (EInt 26))) (R0 (E0 (ESym "lo_quantity")))))) 
  //       (P0 (R2 RLe (R0 (E0 (ESym "lo_quantity"))) (R0 (E0 (EInt 35)))))) 
  //     (J 
  //       (P0 
  //         (R2 REq 
  //             (R0 (E0 (ESym "lo_orderdate"))) 
  //             (R0 (E0 (ESym "d_datekey"))))) 
  //       (S 
  //         (P2 
  //           PAnd 
  //           (P0 
  //             (R2 REq 
  //                 (R0 (E0 (ESym "d_weeknuminyear"))) 
  //                 (R0 (E0 (EInt 6))))) 
  //           (P0 (R2 REq (R0 (E0 (ESym "d_year"))) (R0 (E0 (EInt 1994)))))) 
  //         (Q0 (TSymbol "date"))) 
  std::cout << "Delete: (Q1 \n  (QGroup \n    [\n     (\n       ESym \"revenue\",\n       E0 \n          (NAggr \n            AggrSum \n            (E2 EMul \n                (E0 (ESym \"lo_extendedprice\")) \n                (E0 (ESym \"lo_discount\"))))\n      )\n    ] \n    []) \n  (S \n    (P2 \n      PAnd \n      (P2 \n        PAnd \n        (P2 \n          PAnd \n          (P0 \n            (R2 RLe (R0 (E0 (EInt 5))) (R0 (E0 (ESym \"lo_discount\"))))) \n          (P0 \n            (R2 RLe (R0 (E0 (ESym \"lo_discount\"))) (R0 (E0 (EInt 7)))))) \n        (P0 (R2 RLe (R0 (E0 (EInt 26))) (R0 (E0 (ESym \"lo_quantity\")))))) \n      (P0 (R2 RLe (R0 (E0 (ESym \"lo_quantity\"))) (R0 (E0 (EInt 35)))))) \n    (J \n      (P0 \n        (R2 REq \n            (R0 (E0 (ESym \"lo_orderdate\"))) \n            (R0 (E0 (ESym \"d_datekey\"))))) \n      (S \n        (P2 \n          PAnd \n          (P0 \n            (R2 REq \n                (R0 (E0 (ESym \"d_weeknuminyear\"))) \n                (R0 (E0 (EInt 6))))) \n          (P0 (R2 REq (R0 (E0 (ESym \"d_year\"))) (R0 (E0 (EInt 1994)))))) \n        (Q0 (TSymbol \"date\"))) \n      (Q0 (TSymbol \"lineorder\")))))" << std::endl;
  deleteFile("/tmp/fluidb_store/data34.dat");
  // Delete: (S 
  //   (P2 
  //     PAnd 
  //     (P2 
  //       PAnd 
  //       (P2 PAnd 
  //           (P0 (R2 RLe (R0 (E0 (EInt 5))) (R0 (E0 (ESym "lo_discount"))))) 
  //           (P0 (R2 RLe (R0 (E0 (ESym "lo_discount"))) (R0 (E0 (EInt 7)))))) 
  //       (P0 (R2 RLe (R0 (E0 (EInt 26))) (R0 (E0 (ESym "lo_quantity")))))) 
  //     (P0 (R2 RLe (R0 (E0 (ESym "lo_quantity"))) (R0 (E0 (EInt 35)))))) 
  //   (J 
  //     (P0 
  //       (R2 REq 
  //           (R0 (E0 (ESym "lo_orderdate"))) 
  //           (R0 (E0 (ESym "d_datekey"))))) 
  //     (S 
  //       (P2 
  //         PAnd 
  //         (P0 
  //           (R2 REq (R0 (E0 (ESym "d_weeknuminyear"))) (R0 (E0 (EInt 6))))) 
  //         (P0 (R2 REq (R0 (E0 (ESym "d_year"))) (R0 (E0 (EInt 1994)))))) 
  //       (Q0 (TSymbol "date"))) 
  std::cout << "Delete: (S \n  (P2 \n    PAnd \n    (P2 \n      PAnd \n      (P2 PAnd \n          (P0 (R2 RLe (R0 (E0 (EInt 5))) (R0 (E0 (ESym \"lo_discount\"))))) \n          (P0 (R2 RLe (R0 (E0 (ESym \"lo_discount\"))) (R0 (E0 (EInt 7)))))) \n      (P0 (R2 RLe (R0 (E0 (EInt 26))) (R0 (E0 (ESym \"lo_quantity\")))))) \n    (P0 (R2 RLe (R0 (E0 (ESym \"lo_quantity\"))) (R0 (E0 (EInt 35)))))) \n  (J \n    (P0 \n      (R2 REq \n          (R0 (E0 (ESym \"lo_orderdate\"))) \n          (R0 (E0 (ESym \"d_datekey\"))))) \n    (S \n      (P2 \n        PAnd \n        (P0 \n          (R2 REq (R0 (E0 (ESym \"d_weeknuminyear\"))) (R0 (E0 (EInt 6))))) \n        (P0 (R2 REq (R0 (E0 (ESym \"d_year\"))) (R0 (E0 (EInt 1994)))))) \n      (Q0 (TSymbol \"date\"))) \n    (Q0 (TSymbol \"lineorder\"))))" << std::endl;
  deleteFile("/tmp/fluidb_store/data32.dat");
  // Delete: (Q2 
  //   (QLeftAntijoin 
  //     (P0 
  //       (R2 REq 
  //           (R0 (E0 (ESym "lo_orderdate"))) 
  //           (R0 (E0 (ESym "d_datekey")))))) 
  //   (S 
  //     (P2 
  //       PAnd 
  //       (P0 
  //         (R2 REq (R0 (E0 (ESym "d_weeknuminyear"))) (R0 (E0 (EInt 6))))) 
  //       (P0 (R2 REq (R0 (E0 (ESym "d_year"))) (R0 (E0 (EInt 1994)))))) 
  //     (Q0 (TSymbol "date"))) 
  std::cout << "Delete: (Q2 \n  (QLeftAntijoin \n    (P0 \n      (R2 REq \n          (R0 (E0 (ESym \"lo_orderdate\"))) \n          (R0 (E0 (ESym \"d_datekey\")))))) \n  (S \n    (P2 \n      PAnd \n      (P0 \n        (R2 REq (R0 (E0 (ESym \"d_weeknuminyear\"))) (R0 (E0 (EInt 6))))) \n      (P0 (R2 REq (R0 (E0 (ESym \"d_year\"))) (R0 (E0 (EInt 1994)))))) \n    (Q0 (TSymbol \"date\"))) \n  (Q0 (TSymbol \"lineorder\")))" << std::endl;
  deleteFile("/tmp/fluidb_store/data27.dat");
  // Delete: (Q2 
  //   (QRightAntijoin 
  //     (P0 
  //       (R2 REq 
  //           (R0 (E0 (ESym "lo_orderdate"))) 
  //           (R0 (E0 (ESym "d_datekey")))))) 
  //   (S 
  //     (P2 
  //       PAnd 
  //       (P0 
  //         (R2 REq (R0 (E0 (ESym "d_weeknuminyear"))) (R0 (E0 (EInt 6))))) 
  //       (P0 (R2 REq (R0 (E0 (ESym "d_year"))) (R0 (E0 (EInt 1994)))))) 
  //     (Q0 (TSymbol "date"))) 
  std::cout << "Delete: (Q2 \n  (QRightAntijoin \n    (P0 \n      (R2 REq \n          (R0 (E0 (ESym \"lo_orderdate\"))) \n          (R0 (E0 (ESym \"d_datekey\")))))) \n  (S \n    (P2 \n      PAnd \n      (P0 \n        (R2 REq (R0 (E0 (ESym \"d_weeknuminyear\"))) (R0 (E0 (EInt 6))))) \n      (P0 (R2 REq (R0 (E0 (ESym \"d_year\"))) (R0 (E0 (EInt 1994)))))) \n    (Q0 (TSymbol \"date\"))) \n  (Q0 (TSymbol \"lineorder\")))" << std::endl;
  deleteFile("/tmp/fluidb_store/data29.dat");
  // Delete: (J 
  //   (P0 
  //     (R2 REq 
  //         (R0 (E0 (ESym "lo_orderdate"))) 
  //         (R0 (E0 (ESym "d_datekey"))))) 
  //   (S 
  //     (P2 
  //       PAnd 
  //       (P0 
  //         (R2 REq (R0 (E0 (ESym "d_weeknuminyear"))) (R0 (E0 (EInt 6))))) 
  //       (P0 (R2 REq (R0 (E0 (ESym "d_year"))) (R0 (E0 (EInt 1994)))))) 
  //     (Q0 (TSymbol "date"))) 
  std::cout << "Delete: (J \n  (P0 \n    (R2 REq \n        (R0 (E0 (ESym \"lo_orderdate\"))) \n        (R0 (E0 (ESym \"d_datekey\"))))) \n  (S \n    (P2 \n      PAnd \n      (P0 \n        (R2 REq (R0 (E0 (ESym \"d_weeknuminyear\"))) (R0 (E0 (EInt 6))))) \n      (P0 (R2 REq (R0 (E0 (ESym \"d_year\"))) (R0 (E0 (EInt 1994)))))) \n    (Q0 (TSymbol \"date\"))) \n  (Q0 (TSymbol \"lineorder\")))" << std::endl;
  deleteFile("/tmp/fluidb_store/data28.dat");
  // ForwardTrigger: (Just 
  //   (Left 
  //     [
  //      QJoin 
  //         (P0 
  //           (R2 REq 
  //               (R0 (E0 (ESym "lo_orderdate"))) 
  //               (R0 (E0 (ESym "d_datekey")))))
  std::cout << "ForwardTrigger: (Just \n  (Left \n    [\n     QJoin \n        (P0 \n          (R2 REq \n              (R0 (E0 (ESym \"lo_orderdate\"))) \n              (R0 (E0 (ESym \"d_datekey\")))))\n    ]))" << std::endl;
  {
    auto operation = mkEquiJoin<CallableClass20, CallableClass22, CallableClass17>(Just<const std::string>("/tmp/fluidb_store/data149.dat"), Just<const std::string>("/tmp/fluidb_store/data148.dat"), Just<const std::string>("/tmp/fluidb_store/data150.dat"), "/tmp/fluidb_store/data1.dat", "/tmp/fluidb_store/data0.dat");
    operation.run();
    operation.print_output(10);
  }
  // Delete: (S 
  //   (P1 
  //     PNot 
  //     (P2 
  //       PAnd 
  //       (P2 
  //         PAnd 
  //         (P2 
  //           PAnd 
  //           (P0 
  //             (R2 RLe (R0 (E0 (EInt 5))) (R0 (E0 (ESym "lo_discount"))))) 
  //           (P0 
  //             (R2 RLe (R0 (E0 (ESym "lo_discount"))) (R0 (E0 (EInt 7)))))) 
  //         (P0 (R2 RLe (R0 (E0 (EInt 26))) (R0 (E0 (ESym "lo_quantity")))))) 
  //       (P0 (R2 RLe (R0 (E0 (ESym "lo_quantity"))) (R0 (E0 (EInt 35))))))) 
  //   (J 
  //     (P0 
  //       (R2 REq 
  //           (R0 (E0 (ESym "lo_orderdate"))) 
  //           (R0 (E0 (ESym "d_datekey"))))) 
  //     (S 
  //       (P2 
  //         PAnd 
  //         (P0 
  //           (R2 REq (R0 (E0 (ESym "d_weeknuminyear"))) (R0 (E0 (EInt 6))))) 
  //         (P0 (R2 REq (R0 (E0 (ESym "d_year"))) (R0 (E0 (EInt 1994)))))) 
  //       (Q0 (TSymbol "date"))) 
  std::cout << "Delete: (S \n  (P1 \n    PNot \n    (P2 \n      PAnd \n      (P2 \n        PAnd \n        (P2 \n          PAnd \n          (P0 \n            (R2 RLe (R0 (E0 (EInt 5))) (R0 (E0 (ESym \"lo_discount\"))))) \n          (P0 \n            (R2 RLe (R0 (E0 (ESym \"lo_discount\"))) (R0 (E0 (EInt 7)))))) \n        (P0 (R2 RLe (R0 (E0 (EInt 26))) (R0 (E0 (ESym \"lo_quantity\")))))) \n      (P0 (R2 RLe (R0 (E0 (ESym \"lo_quantity\"))) (R0 (E0 (EInt 35))))))) \n  (J \n    (P0 \n      (R2 REq \n          (R0 (E0 (ESym \"lo_orderdate\"))) \n          (R0 (E0 (ESym \"d_datekey\"))))) \n    (S \n      (P2 \n        PAnd \n        (P0 \n          (R2 REq (R0 (E0 (ESym \"d_weeknuminyear\"))) (R0 (E0 (EInt 6))))) \n        (P0 (R2 REq (R0 (E0 (ESym \"d_year\"))) (R0 (E0 (EInt 1994)))))) \n      (Q0 (TSymbol \"date\"))) \n    (Q0 (TSymbol \"lineorder\"))))" << std::endl;
  deleteFile("/tmp/fluidb_store/data33.dat");
  // Delete: (S (P0 (R2 REq (R0 (E0 (ESym "d_yearmonthnum"))) (R0 (E0 (EInt 199401))))) 
  std::cout << "Delete: (S (P0 (R2 REq (R0 (E0 (ESym \"d_yearmonthnum\"))) (R0 (E0 (EInt 199401))))) \n   (Q0 (TSymbol \"date\")))" << std::endl;
  deleteFile("/tmp/fluidb_store/data5.dat");
  // Delete: (S (P0 (R2 REq (R0 (E0 (ESym "d_year"))) (R0 (E0 (EInt 1993))))) 
  std::cout << "Delete: (S (P0 (R2 REq (R0 (E0 (ESym \"d_year\"))) (R0 (E0 (EInt 1993))))) \n   (Q0 (TSymbol \"date\")))" << std::endl;
  deleteFile("/tmp/fluidb_store/data15.dat");
  // Delete: (S 
  //   (P2 PAnd 
  //       (P0 (R2 REq (R0 (E0 (ESym "d_weeknuminyear"))) (R0 (E0 (EInt 6))))) 
  //       (P0 (R2 REq (R0 (E0 (ESym "d_year"))) (R0 (E0 (EInt 1994)))))) 
  std::cout << "Delete: (S \n  (P2 PAnd \n      (P0 (R2 REq (R0 (E0 (ESym \"d_weeknuminyear\"))) (R0 (E0 (EInt 6))))) \n      (P0 (R2 REq (R0 (E0 (ESym \"d_year\"))) (R0 (E0 (EInt 1994)))))) \n  (Q0 (TSymbol \"date\")))" << std::endl;
  deleteFile("/tmp/fluidb_store/data25.dat");
  // Delete: (S 
  //   (P1 
  //     PNot 
  //     (P2 
  //       POr 
  //       (P0 
  //         (R2 RLike 
  //             (R0 (E0 (ESym "p_mfgr"))) 
  //             (R0 (E0 (EString "MFGR#1"))))) 
  //       (P0 
  //         (R2 RLike 
  //             (R0 (E0 (ESym "p_mfgr"))) 
  //             (R0 (E0 (EString "MFGR#2"))))))) 
  //   (J 
  //     (P0 
  //       (R2 REq 
  //           (R0 (E0 (ESym "lo_partkey"))) 
  //           (R0 (E0 (ESym "p_partkey"))))) 
  //     (S 
  //       (P2 
  //         PAnd 
  //         (P0 
  //           (R2 RLike 
  //               (R0 (E0 (ESym "s_region"))) 
  //               (R0 (E0 (EString "AMERICA"))))) 
  //         (P0 
  //           (R2 RLike 
  //               (R0 (E0 (ESym "c_region"))) 
  //               (R0 (E0 (EString "AMERICA")))))) 
  //       (J 
  //         (P0 
  //           (R2 REq 
  //               (R0 (E0 (ESym "lo_custkey"))) 
  //               (R0 (E0 (ESym "c_custkey"))))) 
  //         (J 
  //           (P0 
  //             (R2 REq 
  //                 (R0 (E0 (ESym "lo_suppkey"))) 
  //                 (R0 (E0 (ESym "s_suppkey"))))) 
  //           (J 
  //             (P0 
  //               (R2 REq 
  //                   (R0 (E0 (ESym "lo_orderdate"))) 
  //                   (R0 (E0 (ESym "d_datekey"))))) 
  //             (Q0 (TSymbol "date")) 
  //             (Q0 (TSymbol "lineorder"))) 
  //           (Q0 (TSymbol "supplier"))) 
  //         (Q0 (TSymbol "customer")))) 
  std::cout << "Delete: (S \n  (P1 \n    PNot \n    (P2 \n      POr \n      (P0 \n        (R2 RLike \n            (R0 (E0 (ESym \"p_mfgr\"))) \n            (R0 (E0 (EString \"MFGR#1\"))))) \n      (P0 \n        (R2 RLike \n            (R0 (E0 (ESym \"p_mfgr\"))) \n            (R0 (E0 (EString \"MFGR#2\"))))))) \n  (J \n    (P0 \n      (R2 REq \n          (R0 (E0 (ESym \"lo_partkey\"))) \n          (R0 (E0 (ESym \"p_partkey\"))))) \n    (S \n      (P2 \n        PAnd \n        (P0 \n          (R2 RLike \n              (R0 (E0 (ESym \"s_region\"))) \n              (R0 (E0 (EString \"AMERICA\"))))) \n        (P0 \n          (R2 RLike \n              (R0 (E0 (ESym \"c_region\"))) \n              (R0 (E0 (EString \"AMERICA\")))))) \n      (J \n        (P0 \n          (R2 REq \n              (R0 (E0 (ESym \"lo_custkey\"))) \n              (R0 (E0 (ESym \"c_custkey\"))))) \n        (J \n          (P0 \n            (R2 REq \n                (R0 (E0 (ESym \"lo_suppkey\"))) \n                (R0 (E0 (ESym \"s_suppkey\"))))) \n          (J \n            (P0 \n              (R2 REq \n                  (R0 (E0 (ESym \"lo_orderdate\"))) \n                  (R0 (E0 (ESym \"d_datekey\"))))) \n            (Q0 (TSymbol \"date\")) \n            (Q0 (TSymbol \"lineorder\"))) \n          (Q0 (TSymbol \"supplier\"))) \n        (Q0 (TSymbol \"customer\")))) \n    (Q0 (TSymbol \"part\"))))" << std::endl;
  deleteFile("/tmp/fluidb_store/data320.dat");
  // Delete: (S 
  //   (P2 
  //     PAnd 
  //     (P0 
  //       (R2 RLike 
  //           (R0 (E0 (ESym "c_region"))) 
  //           (R0 (E0 (EString "AMERICA"))))) 
  //     (P0 
  //       (R2 RLike 
  //           (R0 (E0 (ESym "s_region"))) 
  //           (R0 (E0 (EString "AMERICA")))))) 
  //   (J 
  //     (P0 
  //       (R2 REq 
  //           (R0 (E0 (ESym "lo_suppkey"))) 
  //           (R0 (E0 (ESym "s_suppkey"))))) 
  //     (J 
  //       (P0 
  //         (R2 REq 
  //             (R0 (E0 (ESym "lo_custkey"))) 
  //             (R0 (E0 (ESym "c_custkey"))))) 
  //       (Q0 (TSymbol "customer")) 
  //       (Q0 (TSymbol "lineorder"))) 
  std::cout << "Delete: (S \n  (P2 \n    PAnd \n    (P0 \n      (R2 RLike \n          (R0 (E0 (ESym \"c_region\"))) \n          (R0 (E0 (EString \"AMERICA\"))))) \n    (P0 \n      (R2 RLike \n          (R0 (E0 (ESym \"s_region\"))) \n          (R0 (E0 (EString \"AMERICA\")))))) \n  (J \n    (P0 \n      (R2 REq \n          (R0 (E0 (ESym \"lo_suppkey\"))) \n          (R0 (E0 (ESym \"s_suppkey\"))))) \n    (J \n      (P0 \n        (R2 REq \n            (R0 (E0 (ESym \"lo_custkey\"))) \n            (R0 (E0 (ESym \"c_custkey\"))))) \n      (Q0 (TSymbol \"customer\")) \n      (Q0 (TSymbol \"lineorder\"))) \n    (Q0 (TSymbol \"supplier\"))))" << std::endl;
  deleteFile("/tmp/fluidb_store/data301.dat");
  // ForwardTrigger: (Just 
  //   (Left 
  //     [
  //      QJoin 
  //         (P0 
  //           (R2 REq 
  //               (R0 (E0 (ESym "lo_suppkey"))) 
  //               (R0 (E0 (ESym "s_suppkey")))))
  std::cout << "ForwardTrigger: (Just \n  (Left \n    [\n     QJoin \n        (P0 \n          (R2 REq \n              (R0 (E0 (ESym \"lo_suppkey\"))) \n              (R0 (E0 (ESym \"s_suppkey\")))))\n    ]))" << std::endl;
  {
    auto operation = mkEquiJoin<CallableClass28, CallableClass30, CallableClass26>(Just<const std::string>("/tmp/fluidb_store/data41.dat"), Just<const std::string>("/tmp/fluidb_store/data268.dat"), Just<const std::string>("/tmp/fluidb_store/data269.dat"), "/tmp/fluidb_store/data149.dat", "/tmp/fluidb_store/data3.dat");
    operation.run();
    operation.print_output(10);
  }
  // Delete: (Q2 
  //   (QLeftAntijoin 
  //     (P0 
  //       (R2 REq 
  //           (R0 (E0 (ESym "lo_orderdate"))) 
  //           (R0 (E0 (ESym "d_datekey")))))) 
  //   (Q0 (TSymbol "date")) 
  std::cout << "Delete: (Q2 \n  (QLeftAntijoin \n    (P0 \n      (R2 REq \n          (R0 (E0 (ESym \"lo_orderdate\"))) \n          (R0 (E0 (ESym \"d_datekey\")))))) \n  (Q0 (TSymbol \"date\")) \n  (Q0 (TSymbol \"lineorder\")))" << std::endl;
  deleteFile("/tmp/fluidb_store/data148.dat");
  // Delete: (Q2 
  //   (QRightAntijoin 
  //     (P0 
  //       (R2 REq 
  //           (R0 (E0 (ESym "lo_orderdate"))) 
  //           (R0 (E0 (ESym "d_datekey")))))) 
  //   (Q0 (TSymbol "date")) 
  std::cout << "Delete: (Q2 \n  (QRightAntijoin \n    (P0 \n      (R2 REq \n          (R0 (E0 (ESym \"lo_orderdate\"))) \n          (R0 (E0 (ESym \"d_datekey\")))))) \n  (Q0 (TSymbol \"date\")) \n  (Q0 (TSymbol \"lineorder\")))" << std::endl;
  deleteFile("/tmp/fluidb_store/data150.dat");
  // Delete: (Q2 
  //   (QRightAntijoin 
  //     (P0 
  //       (R2 REq 
  //           (R0 (E0 (ESym "lo_suppkey"))) 
  //           (R0 (E0 (ESym "s_suppkey")))))) 
  //   (S 
  //     (P0 
  //       (R2 RLike 
  //           (R0 (E0 (ESym "c_region"))) 
  //           (R0 (E0 (EString "AMERICA"))))) 
  //     (J 
  //       (P0 
  //         (R2 REq 
  //             (R0 (E0 (ESym "lo_custkey"))) 
  //             (R0 (E0 (ESym "c_custkey"))))) 
  //       (Q0 (TSymbol "customer")) 
  //       (Q0 (TSymbol "lineorder")))) 
  std::cout << "Delete: (Q2 \n  (QRightAntijoin \n    (P0 \n      (R2 REq \n          (R0 (E0 (ESym \"lo_suppkey\"))) \n          (R0 (E0 (ESym \"s_suppkey\")))))) \n  (S \n    (P0 \n      (R2 RLike \n          (R0 (E0 (ESym \"c_region\"))) \n          (R0 (E0 (EString \"AMERICA\"))))) \n    (J \n      (P0 \n        (R2 REq \n            (R0 (E0 (ESym \"lo_custkey\"))) \n            (R0 (E0 (ESym \"c_custkey\"))))) \n      (Q0 (TSymbol \"customer\")) \n      (Q0 (TSymbol \"lineorder\")))) \n  (Q0 (TSymbol \"supplier\")))" << std::endl;
  deleteFile("/tmp/fluidb_store/data307.dat");
  // Delete: (Q2 
  //   (QLeftAntijoin 
  //     (P0 
  //       (R2 REq 
  //           (R0 (E0 (ESym "lo_suppkey"))) 
  //           (R0 (E0 (ESym "s_suppkey")))))) 
  //   (J 
  //     (P0 
  //       (R2 REq 
  //           (R0 (E0 (ESym "lo_orderdate"))) 
  //           (R0 (E0 (ESym "d_datekey"))))) 
  //     (Q0 (TSymbol "date")) 
  //     (Q0 (TSymbol "lineorder"))) 
  std::cout << "Delete: (Q2 \n  (QLeftAntijoin \n    (P0 \n      (R2 REq \n          (R0 (E0 (ESym \"lo_suppkey\"))) \n          (R0 (E0 (ESym \"s_suppkey\")))))) \n  (J \n    (P0 \n      (R2 REq \n          (R0 (E0 (ESym \"lo_orderdate\"))) \n          (R0 (E0 (ESym \"d_datekey\"))))) \n    (Q0 (TSymbol \"date\")) \n    (Q0 (TSymbol \"lineorder\"))) \n  (Q0 (TSymbol \"supplier\")))" << std::endl;
  deleteFile("/tmp/fluidb_store/data268.dat");
  std::cout << "Delete: (Q0 (TSymbol \"supplier\"))" << std::endl;
  deleteFile("/tmp/fluidb_store/data3.dat");
  // Delete: (J 
  //   (P0 
  //     (R2 REq 
  //         (R0 (E0 (ESym "lo_orderdate"))) 
  //         (R0 (E0 (ESym "d_datekey"))))) 
  //   (Q0 (TSymbol "date")) 
  std::cout << "Delete: (J \n  (P0 \n    (R2 REq \n        (R0 (E0 (ESym \"lo_orderdate\"))) \n        (R0 (E0 (ESym \"d_datekey\"))))) \n  (Q0 (TSymbol \"date\")) \n  (Q0 (TSymbol \"lineorder\")))" << std::endl;
  deleteFile("/tmp/fluidb_store/data149.dat");
  // Delete: (Q2 
  //   (QRightAntijoin 
  //     (P0 
  //       (R2 REq 
  //           (R0 (E0 (ESym "lo_partkey"))) 
  //           (R0 (E0 (ESym "p_partkey")))))) 
  //   (S 
  //     (P0 
  //       (R2 RLike 
  //           (R0 (E0 (ESym "c_region"))) 
  //           (R0 (E0 (EString "AMERICA"))))) 
  //     (J 
  //       (P0 
  //         (R2 REq 
  //             (R0 (E0 (ESym "lo_custkey"))) 
  //             (R0 (E0 (ESym "c_custkey"))))) 
  //       (S 
  //         (P0 
  //           (R2 RLike 
  //               (R0 (E0 (ESym "s_region"))) 
  //               (R0 (E0 (EString "AMERICA"))))) 
  //         (J 
  //           (P0 
  //             (R2 REq 
  //                 (R0 (E0 (ESym "lo_suppkey"))) 
  //                 (R0 (E0 (ESym "s_suppkey"))))) 
  //           (J 
  //             (P0 
  //               (R2 REq 
  //                   (R0 (E0 (ESym "lo_orderdate"))) 
  //                   (R0 (E0 (ESym "d_datekey"))))) 
  //             (Q0 (TSymbol "date")) 
  //             (Q0 (TSymbol "lineorder"))) 
  //           (Q0 (TSymbol "supplier")))) 
  //       (Q0 (TSymbol "customer")))) 
  std::cout << "Delete: (Q2 \n  (QRightAntijoin \n    (P0 \n      (R2 REq \n          (R0 (E0 (ESym \"lo_partkey\"))) \n          (R0 (E0 (ESym \"p_partkey\")))))) \n  (S \n    (P0 \n      (R2 RLike \n          (R0 (E0 (ESym \"c_region\"))) \n          (R0 (E0 (EString \"AMERICA\"))))) \n    (J \n      (P0 \n        (R2 REq \n            (R0 (E0 (ESym \"lo_custkey\"))) \n            (R0 (E0 (ESym \"c_custkey\"))))) \n      (S \n        (P0 \n          (R2 RLike \n              (R0 (E0 (ESym \"s_region\"))) \n              (R0 (E0 (EString \"AMERICA\"))))) \n        (J \n          (P0 \n            (R2 REq \n                (R0 (E0 (ESym \"lo_suppkey\"))) \n                (R0 (E0 (ESym \"s_suppkey\"))))) \n          (J \n            (P0 \n              (R2 REq \n                  (R0 (E0 (ESym \"lo_orderdate\"))) \n                  (R0 (E0 (ESym \"d_datekey\"))))) \n            (Q0 (TSymbol \"date\")) \n            (Q0 (TSymbol \"lineorder\"))) \n          (Q0 (TSymbol \"supplier\")))) \n      (Q0 (TSymbol \"customer\")))) \n  (Q0 (TSymbol \"part\")))" << std::endl;
  deleteFile("/tmp/fluidb_store/data317.dat");
  // Delete: (J 
  //   (P0 
  //     (R2 REq (R0 (E0 (ESym "lo_suppkey"))) (R0 (E0 (ESym "s_suppkey"))))) 
  //   (S 
  //     (P0 
  //       (R2 RLike 
  //           (R0 (E0 (ESym "c_region"))) 
  //           (R0 (E0 (EString "AMERICA"))))) 
  //     (J 
  //       (P0 
  //         (R2 REq 
  //             (R0 (E0 (ESym "lo_custkey"))) 
  //             (R0 (E0 (ESym "c_custkey"))))) 
  //       (Q0 (TSymbol "customer")) 
  //       (Q0 (TSymbol "lineorder")))) 
  std::cout << "Delete: (J \n  (P0 \n    (R2 REq (R0 (E0 (ESym \"lo_suppkey\"))) (R0 (E0 (ESym \"s_suppkey\"))))) \n  (S \n    (P0 \n      (R2 RLike \n          (R0 (E0 (ESym \"c_region\"))) \n          (R0 (E0 (EString \"AMERICA\"))))) \n    (J \n      (P0 \n        (R2 REq \n            (R0 (E0 (ESym \"lo_custkey\"))) \n            (R0 (E0 (ESym \"c_custkey\"))))) \n      (Q0 (TSymbol \"customer\")) \n      (Q0 (TSymbol \"lineorder\")))) \n  (Q0 (TSymbol \"supplier\")))" << std::endl;
  deleteFile("/tmp/fluidb_store/data306.dat");
  // Delete: (J 
  //   (P0 
  //     (R2 REq (R0 (E0 (ESym "lo_partkey"))) (R0 (E0 (ESym "p_partkey"))))) 
  //   (S 
  //     (P0 
  //       (R2 RLike 
  //           (R0 (E0 (ESym "c_region"))) 
  //           (R0 (E0 (EString "AMERICA"))))) 
  //     (J 
  //       (P0 
  //         (R2 REq 
  //             (R0 (E0 (ESym "lo_custkey"))) 
  //             (R0 (E0 (ESym "c_custkey"))))) 
  //       (S 
  //         (P0 
  //           (R2 RLike 
  //               (R0 (E0 (ESym "s_region"))) 
  //               (R0 (E0 (EString "AMERICA"))))) 
  //         (J 
  //           (P0 
  //             (R2 REq 
  //                 (R0 (E0 (ESym "lo_suppkey"))) 
  //                 (R0 (E0 (ESym "s_suppkey"))))) 
  //           (J 
  //             (P0 
  //               (R2 REq 
  //                   (R0 (E0 (ESym "lo_orderdate"))) 
  //                   (R0 (E0 (ESym "d_datekey"))))) 
  //             (Q0 (TSymbol "date")) 
  //             (Q0 (TSymbol "lineorder"))) 
  //           (Q0 (TSymbol "supplier")))) 
  //       (Q0 (TSymbol "customer")))) 
  std::cout << "Delete: (J \n  (P0 \n    (R2 REq (R0 (E0 (ESym \"lo_partkey\"))) (R0 (E0 (ESym \"p_partkey\"))))) \n  (S \n    (P0 \n      (R2 RLike \n          (R0 (E0 (ESym \"c_region\"))) \n          (R0 (E0 (EString \"AMERICA\"))))) \n    (J \n      (P0 \n        (R2 REq \n            (R0 (E0 (ESym \"lo_custkey\"))) \n            (R0 (E0 (ESym \"c_custkey\"))))) \n      (S \n        (P0 \n          (R2 RLike \n              (R0 (E0 (ESym \"s_region\"))) \n              (R0 (E0 (EString \"AMERICA\"))))) \n        (J \n          (P0 \n            (R2 REq \n                (R0 (E0 (ESym \"lo_suppkey\"))) \n                (R0 (E0 (ESym \"s_suppkey\"))))) \n          (J \n            (P0 \n              (R2 REq \n                  (R0 (E0 (ESym \"lo_orderdate\"))) \n                  (R0 (E0 (ESym \"d_datekey\"))))) \n            (Q0 (TSymbol \"date\")) \n            (Q0 (TSymbol \"lineorder\"))) \n          (Q0 (TSymbol \"supplier\")))) \n      (Q0 (TSymbol \"customer\")))) \n  (Q0 (TSymbol \"part\")))" << std::endl;
  deleteFile("/tmp/fluidb_store/data316.dat");
  // ForwardTrigger: (Just 
  //   (Left 
  //     [
  //      QJoin 
  //         (P0 
  //           (R2 REq 
  //               (R0 (E0 (ESym "lo_partkey"))) 
  //               (R0 (E0 (ESym "p_partkey")))))
  std::cout << "ForwardTrigger: (Just \n  (Left \n    [\n     QJoin \n        (P0 \n          (R2 REq \n              (R0 (E0 (ESym \"lo_partkey\"))) \n              (R0 (E0 (ESym \"p_partkey\")))))\n    ]))" << std::endl;
  {
    auto operation = mkEquiJoin<CallableClass36, CallableClass38, CallableClass34>(Just<const std::string>("/tmp/fluidb_store/data46.dat"), Just<const std::string>("/tmp/fluidb_store/data45.dat"), Just<const std::string>("/tmp/fluidb_store/data47.dat"), "/tmp/fluidb_store/data41.dat", "/tmp/fluidb_store/data2.dat");
    operation.run();
    operation.print_output(10);
  }
  // ForwardTrigger: (Just 
  //   (Right 
  //     [
  //      QSel 
  //         (P2 
  //           PAnd 
  //           (P0 
  //             (R2 RLike 
  //                 (R0 (E0 (ESym "s_region"))) 
  //                 (R0 (E0 (EString "AMERICA"))))) 
  //           (P0 
  //             (R2 RLike 
  //                 (R0 (E0 (ESym "p_category"))) 
  //                 (R0 (E0 (EString "MFGR#12"))))))
  std::cout << "ForwardTrigger: (Just \n  (Right \n    [\n     QSel \n        (P2 \n          PAnd \n          (P0 \n            (R2 RLike \n                (R0 (E0 (ESym \"s_region\"))) \n                (R0 (E0 (EString \"AMERICA\"))))) \n          (P0 \n            (R2 RLike \n                (R0 (E0 (ESym \"p_category\"))) \n                (R0 (E0 (EString \"MFGR#12\"))))))\n    ]))" << std::endl;
  {
    auto operation = mkSelect<CallableClass40>(Just<const std::string>("/tmp/fluidb_store/data50.dat"), Nothing<const std::string>(), "/tmp/fluidb_store/data46.dat");
    operation.run();
    operation.print_output(10);
  }
  // ForwardTrigger: (Just 
  //   (Right 
  //     [
  //      QGroup 
  //         [(ESym "tmpSym0",E0 (NAggr AggrSum (E0 (ESym "lo_revenue")))),
  //          (ESym "d_year",E0 (NAggr AggrFirst (E0 (ESym "d_year")))),
  //          (ESym "p_brand1",E0 (NAggr AggrFirst (E0 (ESym "p_brand1"))))] 
  //         [E0 (ESym "d_year"),E0 (ESym "p_brand1")]
  std::cout << "ForwardTrigger: (Just \n  (Right \n    [\n     QGroup \n        [(ESym \"tmpSym0\",E0 (NAggr AggrSum (E0 (ESym \"lo_revenue\")))),\n         (ESym \"d_year\",E0 (NAggr AggrFirst (E0 (ESym \"d_year\")))),\n         (ESym \"p_brand1\",E0 (NAggr AggrFirst (E0 (ESym \"p_brand1\"))))] \n        [E0 (ESym \"d_year\"),E0 (ESym \"p_brand1\")]\n    ]))" << std::endl;
  {
    auto operation = mkAggregation<CallableClass47, CallableClass49>(Just<const std::string>("/tmp/fluidb_store/data90.dat"), Just<const std::string>("/tmp/fluidb_store/data50.dat"), "/tmp/fluidb_store/data50.dat");
    operation.run();
    operation.print_output(10);
  }
  std::cout << "ForwardTrigger: (Just (Right [QSort [E0 (ESym \"d_year\"),E0 (ESym \"p_brand1\")]]))" << std::endl;
  {
    auto operation = mkSort<CallableClass51>(Just<const std::string>("/tmp/fluidb_store/data91.dat"), Just<const std::string>("/tmp/fluidb_store/data90.dat"), "/tmp/fluidb_store/data90.dat");
    operation.run();
    operation.print_output(10);
  }
  report_counters();
  return 0;
}
