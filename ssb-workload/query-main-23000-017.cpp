#include <array>

#include <string>

#include <codegen.hh>
class Record48 {
 public:
  Record48(unsigned __sortElem0, fluidb_string<10> __sortElem1) : sortElem0(__sortElem0), sortElem1(__sortElem1)
  {
  }
  Record48() 
  {
  }
  std::string show() const{
    std::stringstream o;
    o << sortElem0 << " | " << arrToString(sortElem1);
    return o.str();
  }
  bool operator <(const Record48& otherRec) const{
    return (otherRec.sortElem0 < sortElem0 && otherRec.sortElem1 < sortElem1);
  }
  bool operator ==(const Record48& otherRec) const{
    return (otherRec.sortElem0 == sortElem0 && otherRec.sortElem1 == sortElem1);
  }
  bool operator !=(const Record48& otherRec) const{
    return (otherRec.sortElem0 != sortElem0 || otherRec.sortElem1 != sortElem1);
  }
  unsigned sortElem0;
  fluidb_string<10> sortElem1;
 private:
};


class Record4 {
 public:
  Record4(unsigned __sym__0__7178003535380331304, fluidb_string<55> __sym__0___45_7020257275696364520, fluidb_string<25> __sym__0___45_6307179734719967033, fluidb_string<7> __sym__0__4568304886257136061, fluidb_string<10> __sym__0___45_6291097039630000265, fluidb_string<11> __sym__0__551327770031967739, fluidb_string<25> __sym__0__3827696365022297353, unsigned __sym__0___45_1779543743759935870, fluidb_string<10> __sym__0__3752090135924368535) : sym__0__7178003535380331304(__sym__0__7178003535380331304), sym__0___45_7020257275696364520(__sym__0___45_7020257275696364520), sym__0___45_6307179734719967033(__sym__0___45_6307179734719967033), sym__0__4568304886257136061(__sym__0__4568304886257136061), sym__0___45_6291097039630000265(__sym__0___45_6291097039630000265), sym__0__551327770031967739(__sym__0__551327770031967739), sym__0__3827696365022297353(__sym__0__3827696365022297353), sym__0___45_1779543743759935870(__sym__0___45_1779543743759935870), sym__0__3752090135924368535(__sym__0__3752090135924368535)
  {
  }
  Record4() 
  {
  }
  std::string show() const{
    std::stringstream o;
    o << sym__0__7178003535380331304 << " | " << arrToString(sym__0___45_7020257275696364520) << " | " << arrToString(sym__0___45_6307179734719967033) << " | " << arrToString(sym__0__4568304886257136061) << " | " << arrToString(sym__0___45_6291097039630000265) << " | " << arrToString(sym__0__551327770031967739) << " | " << arrToString(sym__0__3827696365022297353) << " | " << sym__0___45_1779543743759935870 << " | " << arrToString(sym__0__3752090135924368535);
    return o.str();
  }
  bool operator <(const Record4& otherRec) const{
    return (otherRec.sym__0__7178003535380331304 < sym__0__7178003535380331304 && (otherRec.sym__0___45_7020257275696364520 < sym__0___45_7020257275696364520 && (otherRec.sym__0___45_6307179734719967033 < sym__0___45_6307179734719967033 && (otherRec.sym__0__4568304886257136061 < sym__0__4568304886257136061 && (otherRec.sym__0___45_6291097039630000265 < sym__0___45_6291097039630000265 && (otherRec.sym__0__551327770031967739 < sym__0__551327770031967739 && (otherRec.sym__0__3827696365022297353 < sym__0__3827696365022297353 && (otherRec.sym__0___45_1779543743759935870 < sym__0___45_1779543743759935870 && otherRec.sym__0__3752090135924368535 < sym__0__3752090135924368535))))))));
  }
  bool operator ==(const Record4& otherRec) const{
    return (otherRec.sym__0__7178003535380331304 == sym__0__7178003535380331304 && (otherRec.sym__0___45_7020257275696364520 == sym__0___45_7020257275696364520 && (otherRec.sym__0___45_6307179734719967033 == sym__0___45_6307179734719967033 && (otherRec.sym__0__4568304886257136061 == sym__0__4568304886257136061 && (otherRec.sym__0___45_6291097039630000265 == sym__0___45_6291097039630000265 && (otherRec.sym__0__551327770031967739 == sym__0__551327770031967739 && (otherRec.sym__0__3827696365022297353 == sym__0__3827696365022297353 && (otherRec.sym__0___45_1779543743759935870 == sym__0___45_1779543743759935870 && otherRec.sym__0__3752090135924368535 == sym__0__3752090135924368535))))))));
  }
  bool operator !=(const Record4& otherRec) const{
    return (otherRec.sym__0__7178003535380331304 != sym__0__7178003535380331304 || (otherRec.sym__0___45_7020257275696364520 != sym__0___45_7020257275696364520 || (otherRec.sym__0___45_6307179734719967033 != sym__0___45_6307179734719967033 || (otherRec.sym__0__4568304886257136061 != sym__0__4568304886257136061 || (otherRec.sym__0___45_6291097039630000265 != sym__0___45_6291097039630000265 || (otherRec.sym__0__551327770031967739 != sym__0__551327770031967739 || (otherRec.sym__0__3827696365022297353 != sym__0__3827696365022297353 || (otherRec.sym__0___45_1779543743759935870 != sym__0___45_1779543743759935870 || otherRec.sym__0__3752090135924368535 != sym__0__3752090135924368535))))))));
  }
  unsigned sym__0__7178003535380331304;
  fluidb_string<55> sym__0___45_7020257275696364520;
  fluidb_string<25> sym__0___45_6307179734719967033;
  fluidb_string<7> sym__0__4568304886257136061;
  fluidb_string<10> sym__0___45_6291097039630000265;
  fluidb_string<11> sym__0__551327770031967739;
  fluidb_string<25> sym__0__3827696365022297353;
  unsigned sym__0___45_1779543743759935870;
  fluidb_string<10> sym__0__3752090135924368535;
 private:
};


class Record42 {
 public:
  Record42(unsigned __sym__0___45_7743617557643973661, unsigned __sym__0___45_6261698000977207925, fluidb_string<10> __sym__0__1631598784897141641) : sym__0___45_7743617557643973661(__sym__0___45_7743617557643973661), sym__0___45_6261698000977207925(__sym__0___45_6261698000977207925), sym__0__1631598784897141641(__sym__0__1631598784897141641)
  {
  }
  Record42() 
  {
  }
  std::string show() const{
    std::stringstream o;
    o << sym__0___45_7743617557643973661 << " | " << sym__0___45_6261698000977207925 << " | " << arrToString(sym__0__1631598784897141641);
    return o.str();
  }
  bool operator <(const Record42& otherRec) const{
    return (otherRec.sym__0___45_7743617557643973661 < sym__0___45_7743617557643973661 && (otherRec.sym__0___45_6261698000977207925 < sym__0___45_6261698000977207925 && otherRec.sym__0__1631598784897141641 < sym__0__1631598784897141641));
  }
  bool operator ==(const Record42& otherRec) const{
    return (otherRec.sym__0___45_7743617557643973661 == sym__0___45_7743617557643973661 && (otherRec.sym__0___45_6261698000977207925 == sym__0___45_6261698000977207925 && otherRec.sym__0__1631598784897141641 == sym__0__1631598784897141641));
  }
  bool operator !=(const Record42& otherRec) const{
    return (otherRec.sym__0___45_7743617557643973661 != sym__0___45_7743617557643973661 || (otherRec.sym__0___45_6261698000977207925 != sym__0___45_6261698000977207925 || otherRec.sym__0__1631598784897141641 != sym__0__1631598784897141641));
  }
  unsigned sym__0___45_7743617557643973661;
  unsigned sym__0___45_6261698000977207925;
  fluidb_string<10> sym__0__1631598784897141641;
 private:
};


class Record44 {
 public:
  Record44(unsigned __sym__0___45_531840894949671910, fluidb_string<25> __sym__0___45_7594568260455252811, fluidb_string<40> __sym__0___45_4224396157642132841, fluidb_string<16> __sym__0___45_5121813103072643223, fluidb_string<16> __sym__0__3627274254091843899, fluidb_string<13> __sym__0___45_519289659968682554, fluidb_string<15> __sym__0__5824930074457018933, unsigned __sym__0__8300140134385342025, int __sym__0___45_4363113810210080717, unsigned __sym__0___45_2180998471546424549, unsigned __sym__0___45_591129746765413155, unsigned __sym__0___45_4416720451126861422, unsigned __sym__0___45_2100514126469912481, fluidb_string<21> __sym__0__3750234095707159570, unsigned __sym__0___45_7960421939889289288, fluidb_string<10> __sym__0___45_8655770192480484197, unsigned __sym__0__2072590499357086155, double __sym__0__8268830136148095561, unsigned __sym__0___45_678210870537240385, double __sym__0__6112270341236569873, unsigned __sym__0__8598037934431251909, unsigned __sym__0__5291402561130019774, double __sym__0___45_7851524774395097220, fluidb_string<13> __sym__0__1291698872846441412, unsigned __sym__0__8986418791032324453, fluidb_string<18> __sym__0__2167360253537002837, fluidb_string<9> __sym__0__8141858625439628603, fluidb_string<9> __sym__0___45_7931886843684217772, unsigned __sym__0___45_2549139954849286782, unsigned __sym__0___45_1691445119060855580, fluidb_string<7> __sym__0__7474331622035256461, unsigned __sym__0___45_667953329600979866, unsigned __sym__0___45_3035057609626888019, unsigned __sym__0___45_8476599677752189563, unsigned __sym__0___45_6389391189957387661, unsigned __sym__0___45_6486695610681891724, fluidb_string<15> __sym__0__4796994603556539905, fluidb_string<2> __sym__0___45_6306286879286504951, fluidb_string<2> __sym__0___45_922796240211516024, fluidb_string<2> __sym__0__2810436566368623008, fluidb_string<2> __sym__0__7272995257348976042, unsigned __sym__0__1928421907625115531, fluidb_string<55> __sym__0__6254739572024865371, fluidb_string<25> __sym__0___45_5257913184343802104, fluidb_string<7> __sym__0___45_1520289822717538230, fluidb_string<10> __sym__0___45_8628415396103686184, fluidb_string<11> __sym__0__2109492732871942412, fluidb_string<25> __sym__0__5385658520341277382, unsigned __sym__0__3660583386293997969, fluidb_string<10> __sym__0___45_3013711856665730696) : sym__0___45_531840894949671910(__sym__0___45_531840894949671910), sym__0___45_7594568260455252811(__sym__0___45_7594568260455252811), sym__0___45_4224396157642132841(__sym__0___45_4224396157642132841), sym__0___45_5121813103072643223(__sym__0___45_5121813103072643223), sym__0__3627274254091843899(__sym__0__3627274254091843899), sym__0___45_519289659968682554(__sym__0___45_519289659968682554), sym__0__5824930074457018933(__sym__0__5824930074457018933), sym__0__8300140134385342025(__sym__0__8300140134385342025), sym__0___45_4363113810210080717(__sym__0___45_4363113810210080717), sym__0___45_2180998471546424549(__sym__0___45_2180998471546424549), sym__0___45_591129746765413155(__sym__0___45_591129746765413155), sym__0___45_4416720451126861422(__sym__0___45_4416720451126861422), sym__0___45_2100514126469912481(__sym__0___45_2100514126469912481), sym__0__3750234095707159570(__sym__0__3750234095707159570), sym__0___45_7960421939889289288(__sym__0___45_7960421939889289288), sym__0___45_8655770192480484197(__sym__0___45_8655770192480484197), sym__0__2072590499357086155(__sym__0__2072590499357086155), sym__0__8268830136148095561(__sym__0__8268830136148095561), sym__0___45_678210870537240385(__sym__0___45_678210870537240385), sym__0__6112270341236569873(__sym__0__6112270341236569873), sym__0__8598037934431251909(__sym__0__8598037934431251909), sym__0__5291402561130019774(__sym__0__5291402561130019774), sym__0___45_7851524774395097220(__sym__0___45_7851524774395097220), sym__0__1291698872846441412(__sym__0__1291698872846441412), sym__0__8986418791032324453(__sym__0__8986418791032324453), sym__0__2167360253537002837(__sym__0__2167360253537002837), sym__0__8141858625439628603(__sym__0__8141858625439628603), sym__0___45_7931886843684217772(__sym__0___45_7931886843684217772), sym__0___45_2549139954849286782(__sym__0___45_2549139954849286782), sym__0___45_1691445119060855580(__sym__0___45_1691445119060855580), sym__0__7474331622035256461(__sym__0__7474331622035256461), sym__0___45_667953329600979866(__sym__0___45_667953329600979866), sym__0___45_3035057609626888019(__sym__0___45_3035057609626888019), sym__0___45_8476599677752189563(__sym__0___45_8476599677752189563), sym__0___45_6389391189957387661(__sym__0___45_6389391189957387661), sym__0___45_6486695610681891724(__sym__0___45_6486695610681891724), sym__0__4796994603556539905(__sym__0__4796994603556539905), sym__0___45_6306286879286504951(__sym__0___45_6306286879286504951), sym__0___45_922796240211516024(__sym__0___45_922796240211516024), sym__0__2810436566368623008(__sym__0__2810436566368623008), sym__0__7272995257348976042(__sym__0__7272995257348976042), sym__0__1928421907625115531(__sym__0__1928421907625115531), sym__0__6254739572024865371(__sym__0__6254739572024865371), sym__0___45_5257913184343802104(__sym__0___45_5257913184343802104), sym__0___45_1520289822717538230(__sym__0___45_1520289822717538230), sym__0___45_8628415396103686184(__sym__0___45_8628415396103686184), sym__0__2109492732871942412(__sym__0__2109492732871942412), sym__0__5385658520341277382(__sym__0__5385658520341277382), sym__0__3660583386293997969(__sym__0__3660583386293997969), sym__0___45_3013711856665730696(__sym__0___45_3013711856665730696)
  {
  }
  Record44() 
  {
  }
  std::string show() const{
    std::stringstream o;
    o << sym__0___45_531840894949671910 << " | " << arrToString(sym__0___45_7594568260455252811) << " | " << arrToString(sym__0___45_4224396157642132841) << " | " << arrToString(sym__0___45_5121813103072643223) << " | " << arrToString(sym__0__3627274254091843899) << " | " << arrToString(sym__0___45_519289659968682554) << " | " << arrToString(sym__0__5824930074457018933) << " | " << sym__0__8300140134385342025 << " | " << sym__0___45_4363113810210080717 << " | " << sym__0___45_2180998471546424549 << " | " << sym__0___45_591129746765413155 << " | " << sym__0___45_4416720451126861422 << " | " << sym__0___45_2100514126469912481 << " | " << arrToString(sym__0__3750234095707159570) << " | " << sym__0___45_7960421939889289288 << " | " << arrToString(sym__0___45_8655770192480484197) << " | " << sym__0__2072590499357086155 << " | " << sym__0__8268830136148095561 << " | " << sym__0___45_678210870537240385 << " | " << sym__0__6112270341236569873 << " | " << sym__0__8598037934431251909 << " | " << sym__0__5291402561130019774 << " | " << sym__0___45_7851524774395097220 << " | " << arrToString(sym__0__1291698872846441412) << " | " << sym__0__8986418791032324453 << " | " << arrToString(sym__0__2167360253537002837) << " | " << arrToString(sym__0__8141858625439628603) << " | " << arrToString(sym__0___45_7931886843684217772) << " | " << sym__0___45_2549139954849286782 << " | " << sym__0___45_1691445119060855580 << " | " << arrToString(sym__0__7474331622035256461) << " | " << sym__0___45_667953329600979866 << " | " << sym__0___45_3035057609626888019 << " | " << sym__0___45_8476599677752189563 << " | " << sym__0___45_6389391189957387661 << " | " << sym__0___45_6486695610681891724 << " | " << arrToString(sym__0__4796994603556539905) << " | " << arrToString(sym__0___45_6306286879286504951) << " | " << arrToString(sym__0___45_922796240211516024) << " | " << arrToString(sym__0__2810436566368623008) << " | " << arrToString(sym__0__7272995257348976042) << " | " << sym__0__1928421907625115531 << " | " << arrToString(sym__0__6254739572024865371) << " | " << arrToString(sym__0___45_5257913184343802104) << " | " << arrToString(sym__0___45_1520289822717538230) << " | " << arrToString(sym__0___45_8628415396103686184) << " | " << arrToString(sym__0__2109492732871942412) << " | " << arrToString(sym__0__5385658520341277382) << " | " << sym__0__3660583386293997969 << " | " << arrToString(sym__0___45_3013711856665730696);
    return o.str();
  }
  bool operator <(const Record44& otherRec) const{
    return (otherRec.sym__0___45_531840894949671910 < sym__0___45_531840894949671910 && (otherRec.sym__0___45_7594568260455252811 < sym__0___45_7594568260455252811 && (otherRec.sym__0___45_4224396157642132841 < sym__0___45_4224396157642132841 && (otherRec.sym__0___45_5121813103072643223 < sym__0___45_5121813103072643223 && (otherRec.sym__0__3627274254091843899 < sym__0__3627274254091843899 && (otherRec.sym__0___45_519289659968682554 < sym__0___45_519289659968682554 && (otherRec.sym__0__5824930074457018933 < sym__0__5824930074457018933 && (otherRec.sym__0__8300140134385342025 < sym__0__8300140134385342025 && (otherRec.sym__0___45_4363113810210080717 < sym__0___45_4363113810210080717 && (otherRec.sym__0___45_2180998471546424549 < sym__0___45_2180998471546424549 && (otherRec.sym__0___45_591129746765413155 < sym__0___45_591129746765413155 && (otherRec.sym__0___45_4416720451126861422 < sym__0___45_4416720451126861422 && (otherRec.sym__0___45_2100514126469912481 < sym__0___45_2100514126469912481 && (otherRec.sym__0__3750234095707159570 < sym__0__3750234095707159570 && (otherRec.sym__0___45_7960421939889289288 < sym__0___45_7960421939889289288 && (otherRec.sym__0___45_8655770192480484197 < sym__0___45_8655770192480484197 && (otherRec.sym__0__2072590499357086155 < sym__0__2072590499357086155 && (otherRec.sym__0__8268830136148095561 < sym__0__8268830136148095561 && (otherRec.sym__0___45_678210870537240385 < sym__0___45_678210870537240385 && (otherRec.sym__0__6112270341236569873 < sym__0__6112270341236569873 && (otherRec.sym__0__8598037934431251909 < sym__0__8598037934431251909 && (otherRec.sym__0__5291402561130019774 < sym__0__5291402561130019774 && (otherRec.sym__0___45_7851524774395097220 < sym__0___45_7851524774395097220 && (otherRec.sym__0__1291698872846441412 < sym__0__1291698872846441412 && (otherRec.sym__0__8986418791032324453 < sym__0__8986418791032324453 && (otherRec.sym__0__2167360253537002837 < sym__0__2167360253537002837 && (otherRec.sym__0__8141858625439628603 < sym__0__8141858625439628603 && (otherRec.sym__0___45_7931886843684217772 < sym__0___45_7931886843684217772 && (otherRec.sym__0___45_2549139954849286782 < sym__0___45_2549139954849286782 && (otherRec.sym__0___45_1691445119060855580 < sym__0___45_1691445119060855580 && (otherRec.sym__0__7474331622035256461 < sym__0__7474331622035256461 && (otherRec.sym__0___45_667953329600979866 < sym__0___45_667953329600979866 && (otherRec.sym__0___45_3035057609626888019 < sym__0___45_3035057609626888019 && (otherRec.sym__0___45_8476599677752189563 < sym__0___45_8476599677752189563 && (otherRec.sym__0___45_6389391189957387661 < sym__0___45_6389391189957387661 && (otherRec.sym__0___45_6486695610681891724 < sym__0___45_6486695610681891724 && (otherRec.sym__0__4796994603556539905 < sym__0__4796994603556539905 && (otherRec.sym__0___45_6306286879286504951 < sym__0___45_6306286879286504951 && (otherRec.sym__0___45_922796240211516024 < sym__0___45_922796240211516024 && (otherRec.sym__0__2810436566368623008 < sym__0__2810436566368623008 && (otherRec.sym__0__7272995257348976042 < sym__0__7272995257348976042 && (otherRec.sym__0__1928421907625115531 < sym__0__1928421907625115531 && (otherRec.sym__0__6254739572024865371 < sym__0__6254739572024865371 && (otherRec.sym__0___45_5257913184343802104 < sym__0___45_5257913184343802104 && (otherRec.sym__0___45_1520289822717538230 < sym__0___45_1520289822717538230 && (otherRec.sym__0___45_8628415396103686184 < sym__0___45_8628415396103686184 && (otherRec.sym__0__2109492732871942412 < sym__0__2109492732871942412 && (otherRec.sym__0__5385658520341277382 < sym__0__5385658520341277382 && (otherRec.sym__0__3660583386293997969 < sym__0__3660583386293997969 && otherRec.sym__0___45_3013711856665730696 < sym__0___45_3013711856665730696)))))))))))))))))))))))))))))))))))))))))))))))));
  }
  bool operator ==(const Record44& otherRec) const{
    return (otherRec.sym__0___45_531840894949671910 == sym__0___45_531840894949671910 && (otherRec.sym__0___45_7594568260455252811 == sym__0___45_7594568260455252811 && (otherRec.sym__0___45_4224396157642132841 == sym__0___45_4224396157642132841 && (otherRec.sym__0___45_5121813103072643223 == sym__0___45_5121813103072643223 && (otherRec.sym__0__3627274254091843899 == sym__0__3627274254091843899 && (otherRec.sym__0___45_519289659968682554 == sym__0___45_519289659968682554 && (otherRec.sym__0__5824930074457018933 == sym__0__5824930074457018933 && (otherRec.sym__0__8300140134385342025 == sym__0__8300140134385342025 && (otherRec.sym__0___45_4363113810210080717 == sym__0___45_4363113810210080717 && (otherRec.sym__0___45_2180998471546424549 == sym__0___45_2180998471546424549 && (otherRec.sym__0___45_591129746765413155 == sym__0___45_591129746765413155 && (otherRec.sym__0___45_4416720451126861422 == sym__0___45_4416720451126861422 && (otherRec.sym__0___45_2100514126469912481 == sym__0___45_2100514126469912481 && (otherRec.sym__0__3750234095707159570 == sym__0__3750234095707159570 && (otherRec.sym__0___45_7960421939889289288 == sym__0___45_7960421939889289288 && (otherRec.sym__0___45_8655770192480484197 == sym__0___45_8655770192480484197 && (otherRec.sym__0__2072590499357086155 == sym__0__2072590499357086155 && (otherRec.sym__0__8268830136148095561 == sym__0__8268830136148095561 && (otherRec.sym__0___45_678210870537240385 == sym__0___45_678210870537240385 && (otherRec.sym__0__6112270341236569873 == sym__0__6112270341236569873 && (otherRec.sym__0__8598037934431251909 == sym__0__8598037934431251909 && (otherRec.sym__0__5291402561130019774 == sym__0__5291402561130019774 && (otherRec.sym__0___45_7851524774395097220 == sym__0___45_7851524774395097220 && (otherRec.sym__0__1291698872846441412 == sym__0__1291698872846441412 && (otherRec.sym__0__8986418791032324453 == sym__0__8986418791032324453 && (otherRec.sym__0__2167360253537002837 == sym__0__2167360253537002837 && (otherRec.sym__0__8141858625439628603 == sym__0__8141858625439628603 && (otherRec.sym__0___45_7931886843684217772 == sym__0___45_7931886843684217772 && (otherRec.sym__0___45_2549139954849286782 == sym__0___45_2549139954849286782 && (otherRec.sym__0___45_1691445119060855580 == sym__0___45_1691445119060855580 && (otherRec.sym__0__7474331622035256461 == sym__0__7474331622035256461 && (otherRec.sym__0___45_667953329600979866 == sym__0___45_667953329600979866 && (otherRec.sym__0___45_3035057609626888019 == sym__0___45_3035057609626888019 && (otherRec.sym__0___45_8476599677752189563 == sym__0___45_8476599677752189563 && (otherRec.sym__0___45_6389391189957387661 == sym__0___45_6389391189957387661 && (otherRec.sym__0___45_6486695610681891724 == sym__0___45_6486695610681891724 && (otherRec.sym__0__4796994603556539905 == sym__0__4796994603556539905 && (otherRec.sym__0___45_6306286879286504951 == sym__0___45_6306286879286504951 && (otherRec.sym__0___45_922796240211516024 == sym__0___45_922796240211516024 && (otherRec.sym__0__2810436566368623008 == sym__0__2810436566368623008 && (otherRec.sym__0__7272995257348976042 == sym__0__7272995257348976042 && (otherRec.sym__0__1928421907625115531 == sym__0__1928421907625115531 && (otherRec.sym__0__6254739572024865371 == sym__0__6254739572024865371 && (otherRec.sym__0___45_5257913184343802104 == sym__0___45_5257913184343802104 && (otherRec.sym__0___45_1520289822717538230 == sym__0___45_1520289822717538230 && (otherRec.sym__0___45_8628415396103686184 == sym__0___45_8628415396103686184 && (otherRec.sym__0__2109492732871942412 == sym__0__2109492732871942412 && (otherRec.sym__0__5385658520341277382 == sym__0__5385658520341277382 && (otherRec.sym__0__3660583386293997969 == sym__0__3660583386293997969 && otherRec.sym__0___45_3013711856665730696 == sym__0___45_3013711856665730696)))))))))))))))))))))))))))))))))))))))))))))))));
  }
  bool operator !=(const Record44& otherRec) const{
    return (otherRec.sym__0___45_531840894949671910 != sym__0___45_531840894949671910 || (otherRec.sym__0___45_7594568260455252811 != sym__0___45_7594568260455252811 || (otherRec.sym__0___45_4224396157642132841 != sym__0___45_4224396157642132841 || (otherRec.sym__0___45_5121813103072643223 != sym__0___45_5121813103072643223 || (otherRec.sym__0__3627274254091843899 != sym__0__3627274254091843899 || (otherRec.sym__0___45_519289659968682554 != sym__0___45_519289659968682554 || (otherRec.sym__0__5824930074457018933 != sym__0__5824930074457018933 || (otherRec.sym__0__8300140134385342025 != sym__0__8300140134385342025 || (otherRec.sym__0___45_4363113810210080717 != sym__0___45_4363113810210080717 || (otherRec.sym__0___45_2180998471546424549 != sym__0___45_2180998471546424549 || (otherRec.sym__0___45_591129746765413155 != sym__0___45_591129746765413155 || (otherRec.sym__0___45_4416720451126861422 != sym__0___45_4416720451126861422 || (otherRec.sym__0___45_2100514126469912481 != sym__0___45_2100514126469912481 || (otherRec.sym__0__3750234095707159570 != sym__0__3750234095707159570 || (otherRec.sym__0___45_7960421939889289288 != sym__0___45_7960421939889289288 || (otherRec.sym__0___45_8655770192480484197 != sym__0___45_8655770192480484197 || (otherRec.sym__0__2072590499357086155 != sym__0__2072590499357086155 || (otherRec.sym__0__8268830136148095561 != sym__0__8268830136148095561 || (otherRec.sym__0___45_678210870537240385 != sym__0___45_678210870537240385 || (otherRec.sym__0__6112270341236569873 != sym__0__6112270341236569873 || (otherRec.sym__0__8598037934431251909 != sym__0__8598037934431251909 || (otherRec.sym__0__5291402561130019774 != sym__0__5291402561130019774 || (otherRec.sym__0___45_7851524774395097220 != sym__0___45_7851524774395097220 || (otherRec.sym__0__1291698872846441412 != sym__0__1291698872846441412 || (otherRec.sym__0__8986418791032324453 != sym__0__8986418791032324453 || (otherRec.sym__0__2167360253537002837 != sym__0__2167360253537002837 || (otherRec.sym__0__8141858625439628603 != sym__0__8141858625439628603 || (otherRec.sym__0___45_7931886843684217772 != sym__0___45_7931886843684217772 || (otherRec.sym__0___45_2549139954849286782 != sym__0___45_2549139954849286782 || (otherRec.sym__0___45_1691445119060855580 != sym__0___45_1691445119060855580 || (otherRec.sym__0__7474331622035256461 != sym__0__7474331622035256461 || (otherRec.sym__0___45_667953329600979866 != sym__0___45_667953329600979866 || (otherRec.sym__0___45_3035057609626888019 != sym__0___45_3035057609626888019 || (otherRec.sym__0___45_8476599677752189563 != sym__0___45_8476599677752189563 || (otherRec.sym__0___45_6389391189957387661 != sym__0___45_6389391189957387661 || (otherRec.sym__0___45_6486695610681891724 != sym__0___45_6486695610681891724 || (otherRec.sym__0__4796994603556539905 != sym__0__4796994603556539905 || (otherRec.sym__0___45_6306286879286504951 != sym__0___45_6306286879286504951 || (otherRec.sym__0___45_922796240211516024 != sym__0___45_922796240211516024 || (otherRec.sym__0__2810436566368623008 != sym__0__2810436566368623008 || (otherRec.sym__0__7272995257348976042 != sym__0__7272995257348976042 || (otherRec.sym__0__1928421907625115531 != sym__0__1928421907625115531 || (otherRec.sym__0__6254739572024865371 != sym__0__6254739572024865371 || (otherRec.sym__0___45_5257913184343802104 != sym__0___45_5257913184343802104 || (otherRec.sym__0___45_1520289822717538230 != sym__0___45_1520289822717538230 || (otherRec.sym__0___45_8628415396103686184 != sym__0___45_8628415396103686184 || (otherRec.sym__0__2109492732871942412 != sym__0__2109492732871942412 || (otherRec.sym__0__5385658520341277382 != sym__0__5385658520341277382 || (otherRec.sym__0__3660583386293997969 != sym__0__3660583386293997969 || otherRec.sym__0___45_3013711856665730696 != sym__0___45_3013711856665730696)))))))))))))))))))))))))))))))))))))))))))))))));
  }
  unsigned sym__0___45_531840894949671910;
  fluidb_string<25> sym__0___45_7594568260455252811;
  fluidb_string<40> sym__0___45_4224396157642132841;
  fluidb_string<16> sym__0___45_5121813103072643223;
  fluidb_string<16> sym__0__3627274254091843899;
  fluidb_string<13> sym__0___45_519289659968682554;
  fluidb_string<15> sym__0__5824930074457018933;
  unsigned sym__0__8300140134385342025;
  int sym__0___45_4363113810210080717;
  unsigned sym__0___45_2180998471546424549;
  unsigned sym__0___45_591129746765413155;
  unsigned sym__0___45_4416720451126861422;
  unsigned sym__0___45_2100514126469912481;
  fluidb_string<21> sym__0__3750234095707159570;
  unsigned sym__0___45_7960421939889289288;
  fluidb_string<10> sym__0___45_8655770192480484197;
  unsigned sym__0__2072590499357086155;
  double sym__0__8268830136148095561;
  unsigned sym__0___45_678210870537240385;
  double sym__0__6112270341236569873;
  unsigned sym__0__8598037934431251909;
  unsigned sym__0__5291402561130019774;
  double sym__0___45_7851524774395097220;
  fluidb_string<13> sym__0__1291698872846441412;
  unsigned sym__0__8986418791032324453;
  fluidb_string<18> sym__0__2167360253537002837;
  fluidb_string<9> sym__0__8141858625439628603;
  fluidb_string<9> sym__0___45_7931886843684217772;
  unsigned sym__0___45_2549139954849286782;
  unsigned sym__0___45_1691445119060855580;
  fluidb_string<7> sym__0__7474331622035256461;
  unsigned sym__0___45_667953329600979866;
  unsigned sym__0___45_3035057609626888019;
  unsigned sym__0___45_8476599677752189563;
  unsigned sym__0___45_6389391189957387661;
  unsigned sym__0___45_6486695610681891724;
  fluidb_string<15> sym__0__4796994603556539905;
  fluidb_string<2> sym__0___45_6306286879286504951;
  fluidb_string<2> sym__0___45_922796240211516024;
  fluidb_string<2> sym__0__2810436566368623008;
  fluidb_string<2> sym__0__7272995257348976042;
  unsigned sym__0__1928421907625115531;
  fluidb_string<55> sym__0__6254739572024865371;
  fluidb_string<25> sym__0___45_5257913184343802104;
  fluidb_string<7> sym__0___45_1520289822717538230;
  fluidb_string<10> sym__0___45_8628415396103686184;
  fluidb_string<11> sym__0__2109492732871942412;
  fluidb_string<25> sym__0__5385658520341277382;
  unsigned sym__0__3660583386293997969;
  fluidb_string<10> sym__0___45_3013711856665730696;
 private:
};


class Record2 {
 public:
  Record2(unsigned __sym__0__7183756631487345723, fluidb_string<18> __sym__0__4004283392749253291, fluidb_string<9> __sym__0__7402856733199756645, fluidb_string<9> __sym__0___45_7276118071870614642, unsigned __sym__0__7689696364618968408, unsigned __sym__0__265232048543772062, fluidb_string<7> __sym__0___45_7391712330109786621, unsigned __sym__0__9093515676270508468, unsigned __sym__0__2039577949113231011, unsigned __sym__0___45_5518709817667950629, unsigned __sym__0__7446880365925781245, unsigned __sym__0__3933602404904280238, fluidb_string<15> __sym__0__839558304030626831, fluidb_string<2> __sym__0__1895092311538388823, fluidb_string<2> __sym__0__2442462535421269690, fluidb_string<2> __sym__0___45_3615474655229170638, fluidb_string<2> __sym__0__8806662867934001568, unsigned __sym__0__9165007797673129751, int __sym__0__6736597523581036605, unsigned __sym__0___45_3324970871059066299, unsigned __sym__0__8802187528961009747, unsigned __sym__0___45_8153453103254980376, unsigned __sym__0___45_878170619108389423, fluidb_string<21> __sym__0___45_874194379502172824, unsigned __sym__0__8610439003510773098, fluidb_string<10> __sym__0__984338793883944389, unsigned __sym__0___45_241371384806950923, double __sym__0__4499056235050439447, unsigned __sym__0___45_602104477057249231, double __sym__0__2154432795296205471, unsigned __sym__0__8120436674510863259, unsigned __sym__0__8733838863403650604, double __sym__0__6144840941019744502, fluidb_string<13> __sym__0___45_4519435874778032514, unsigned __sym__0__2592840547366705296, fluidb_string<25> __sym__0__2788895063297001099, fluidb_string<40> __sym__0__1545257135384253129, fluidb_string<16> __sym__0___45_4622664073058890953, fluidb_string<16> __sym__0__7774459284859713893, fluidb_string<13> __sym__0__5464006631725545620, fluidb_string<15> __sym__0___45_3247512146210145269, unsigned __sym__0___45_4159199765988317501, fluidb_string<18> __sym__0___45_5417534366741502741, fluidb_string<40> __sym__0__4597400568918183105, fluidb_string<11> __sym__0__8819540415296482823, fluidb_string<15> __sym__0___45_623355213379307427, fluidb_string<13> __sym__0__7994108978447880988, fluidb_string<15> __sym__0__7664015906371024747, fluidb_string<21> __sym__0___45_6006206227144636657, unsigned __sym__0__3122376255932122421, fluidb_string<55> __sym__0__5682795704482796293, fluidb_string<25> __sym__0__4547320860663492666, fluidb_string<7> __sym__0___45_8670773565387601472, fluidb_string<10> __sym__0___45_13570145613494646, fluidb_string<11> __sym__0__219157410367458310, fluidb_string<25> __sym__0__698480510036799380, unsigned __sym__0__5321414200743551775, fluidb_string<10> __sym__0__4130486035242774698) : sym__0__7183756631487345723(__sym__0__7183756631487345723), sym__0__4004283392749253291(__sym__0__4004283392749253291), sym__0__7402856733199756645(__sym__0__7402856733199756645), sym__0___45_7276118071870614642(__sym__0___45_7276118071870614642), sym__0__7689696364618968408(__sym__0__7689696364618968408), sym__0__265232048543772062(__sym__0__265232048543772062), sym__0___45_7391712330109786621(__sym__0___45_7391712330109786621), sym__0__9093515676270508468(__sym__0__9093515676270508468), sym__0__2039577949113231011(__sym__0__2039577949113231011), sym__0___45_5518709817667950629(__sym__0___45_5518709817667950629), sym__0__7446880365925781245(__sym__0__7446880365925781245), sym__0__3933602404904280238(__sym__0__3933602404904280238), sym__0__839558304030626831(__sym__0__839558304030626831), sym__0__1895092311538388823(__sym__0__1895092311538388823), sym__0__2442462535421269690(__sym__0__2442462535421269690), sym__0___45_3615474655229170638(__sym__0___45_3615474655229170638), sym__0__8806662867934001568(__sym__0__8806662867934001568), sym__0__9165007797673129751(__sym__0__9165007797673129751), sym__0__6736597523581036605(__sym__0__6736597523581036605), sym__0___45_3324970871059066299(__sym__0___45_3324970871059066299), sym__0__8802187528961009747(__sym__0__8802187528961009747), sym__0___45_8153453103254980376(__sym__0___45_8153453103254980376), sym__0___45_878170619108389423(__sym__0___45_878170619108389423), sym__0___45_874194379502172824(__sym__0___45_874194379502172824), sym__0__8610439003510773098(__sym__0__8610439003510773098), sym__0__984338793883944389(__sym__0__984338793883944389), sym__0___45_241371384806950923(__sym__0___45_241371384806950923), sym__0__4499056235050439447(__sym__0__4499056235050439447), sym__0___45_602104477057249231(__sym__0___45_602104477057249231), sym__0__2154432795296205471(__sym__0__2154432795296205471), sym__0__8120436674510863259(__sym__0__8120436674510863259), sym__0__8733838863403650604(__sym__0__8733838863403650604), sym__0__6144840941019744502(__sym__0__6144840941019744502), sym__0___45_4519435874778032514(__sym__0___45_4519435874778032514), sym__0__2592840547366705296(__sym__0__2592840547366705296), sym__0__2788895063297001099(__sym__0__2788895063297001099), sym__0__1545257135384253129(__sym__0__1545257135384253129), sym__0___45_4622664073058890953(__sym__0___45_4622664073058890953), sym__0__7774459284859713893(__sym__0__7774459284859713893), sym__0__5464006631725545620(__sym__0__5464006631725545620), sym__0___45_3247512146210145269(__sym__0___45_3247512146210145269), sym__0___45_4159199765988317501(__sym__0___45_4159199765988317501), sym__0___45_5417534366741502741(__sym__0___45_5417534366741502741), sym__0__4597400568918183105(__sym__0__4597400568918183105), sym__0__8819540415296482823(__sym__0__8819540415296482823), sym__0___45_623355213379307427(__sym__0___45_623355213379307427), sym__0__7994108978447880988(__sym__0__7994108978447880988), sym__0__7664015906371024747(__sym__0__7664015906371024747), sym__0___45_6006206227144636657(__sym__0___45_6006206227144636657), sym__0__3122376255932122421(__sym__0__3122376255932122421), sym__0__5682795704482796293(__sym__0__5682795704482796293), sym__0__4547320860663492666(__sym__0__4547320860663492666), sym__0___45_8670773565387601472(__sym__0___45_8670773565387601472), sym__0___45_13570145613494646(__sym__0___45_13570145613494646), sym__0__219157410367458310(__sym__0__219157410367458310), sym__0__698480510036799380(__sym__0__698480510036799380), sym__0__5321414200743551775(__sym__0__5321414200743551775), sym__0__4130486035242774698(__sym__0__4130486035242774698)
  {
  }
  Record2() 
  {
  }
  std::string show() const{
    std::stringstream o;
    o << sym__0__7183756631487345723 << " | " << arrToString(sym__0__4004283392749253291) << " | " << arrToString(sym__0__7402856733199756645) << " | " << arrToString(sym__0___45_7276118071870614642) << " | " << sym__0__7689696364618968408 << " | " << sym__0__265232048543772062 << " | " << arrToString(sym__0___45_7391712330109786621) << " | " << sym__0__9093515676270508468 << " | " << sym__0__2039577949113231011 << " | " << sym__0___45_5518709817667950629 << " | " << sym__0__7446880365925781245 << " | " << sym__0__3933602404904280238 << " | " << arrToString(sym__0__839558304030626831) << " | " << arrToString(sym__0__1895092311538388823) << " | " << arrToString(sym__0__2442462535421269690) << " | " << arrToString(sym__0___45_3615474655229170638) << " | " << arrToString(sym__0__8806662867934001568) << " | " << sym__0__9165007797673129751 << " | " << sym__0__6736597523581036605 << " | " << sym__0___45_3324970871059066299 << " | " << sym__0__8802187528961009747 << " | " << sym__0___45_8153453103254980376 << " | " << sym__0___45_878170619108389423 << " | " << arrToString(sym__0___45_874194379502172824) << " | " << sym__0__8610439003510773098 << " | " << arrToString(sym__0__984338793883944389) << " | " << sym__0___45_241371384806950923 << " | " << sym__0__4499056235050439447 << " | " << sym__0___45_602104477057249231 << " | " << sym__0__2154432795296205471 << " | " << sym__0__8120436674510863259 << " | " << sym__0__8733838863403650604 << " | " << sym__0__6144840941019744502 << " | " << arrToString(sym__0___45_4519435874778032514) << " | " << sym__0__2592840547366705296 << " | " << arrToString(sym__0__2788895063297001099) << " | " << arrToString(sym__0__1545257135384253129) << " | " << arrToString(sym__0___45_4622664073058890953) << " | " << arrToString(sym__0__7774459284859713893) << " | " << arrToString(sym__0__5464006631725545620) << " | " << arrToString(sym__0___45_3247512146210145269) << " | " << sym__0___45_4159199765988317501 << " | " << arrToString(sym__0___45_5417534366741502741) << " | " << arrToString(sym__0__4597400568918183105) << " | " << arrToString(sym__0__8819540415296482823) << " | " << arrToString(sym__0___45_623355213379307427) << " | " << arrToString(sym__0__7994108978447880988) << " | " << arrToString(sym__0__7664015906371024747) << " | " << arrToString(sym__0___45_6006206227144636657) << " | " << sym__0__3122376255932122421 << " | " << arrToString(sym__0__5682795704482796293) << " | " << arrToString(sym__0__4547320860663492666) << " | " << arrToString(sym__0___45_8670773565387601472) << " | " << arrToString(sym__0___45_13570145613494646) << " | " << arrToString(sym__0__219157410367458310) << " | " << arrToString(sym__0__698480510036799380) << " | " << sym__0__5321414200743551775 << " | " << arrToString(sym__0__4130486035242774698);
    return o.str();
  }
  bool operator <(const Record2& otherRec) const{
    return (otherRec.sym__0__7183756631487345723 < sym__0__7183756631487345723 && (otherRec.sym__0__4004283392749253291 < sym__0__4004283392749253291 && (otherRec.sym__0__7402856733199756645 < sym__0__7402856733199756645 && (otherRec.sym__0___45_7276118071870614642 < sym__0___45_7276118071870614642 && (otherRec.sym__0__7689696364618968408 < sym__0__7689696364618968408 && (otherRec.sym__0__265232048543772062 < sym__0__265232048543772062 && (otherRec.sym__0___45_7391712330109786621 < sym__0___45_7391712330109786621 && (otherRec.sym__0__9093515676270508468 < sym__0__9093515676270508468 && (otherRec.sym__0__2039577949113231011 < sym__0__2039577949113231011 && (otherRec.sym__0___45_5518709817667950629 < sym__0___45_5518709817667950629 && (otherRec.sym__0__7446880365925781245 < sym__0__7446880365925781245 && (otherRec.sym__0__3933602404904280238 < sym__0__3933602404904280238 && (otherRec.sym__0__839558304030626831 < sym__0__839558304030626831 && (otherRec.sym__0__1895092311538388823 < sym__0__1895092311538388823 && (otherRec.sym__0__2442462535421269690 < sym__0__2442462535421269690 && (otherRec.sym__0___45_3615474655229170638 < sym__0___45_3615474655229170638 && (otherRec.sym__0__8806662867934001568 < sym__0__8806662867934001568 && (otherRec.sym__0__9165007797673129751 < sym__0__9165007797673129751 && (otherRec.sym__0__6736597523581036605 < sym__0__6736597523581036605 && (otherRec.sym__0___45_3324970871059066299 < sym__0___45_3324970871059066299 && (otherRec.sym__0__8802187528961009747 < sym__0__8802187528961009747 && (otherRec.sym__0___45_8153453103254980376 < sym__0___45_8153453103254980376 && (otherRec.sym__0___45_878170619108389423 < sym__0___45_878170619108389423 && (otherRec.sym__0___45_874194379502172824 < sym__0___45_874194379502172824 && (otherRec.sym__0__8610439003510773098 < sym__0__8610439003510773098 && (otherRec.sym__0__984338793883944389 < sym__0__984338793883944389 && (otherRec.sym__0___45_241371384806950923 < sym__0___45_241371384806950923 && (otherRec.sym__0__4499056235050439447 < sym__0__4499056235050439447 && (otherRec.sym__0___45_602104477057249231 < sym__0___45_602104477057249231 && (otherRec.sym__0__2154432795296205471 < sym__0__2154432795296205471 && (otherRec.sym__0__8120436674510863259 < sym__0__8120436674510863259 && (otherRec.sym__0__8733838863403650604 < sym__0__8733838863403650604 && (otherRec.sym__0__6144840941019744502 < sym__0__6144840941019744502 && (otherRec.sym__0___45_4519435874778032514 < sym__0___45_4519435874778032514 && (otherRec.sym__0__2592840547366705296 < sym__0__2592840547366705296 && (otherRec.sym__0__2788895063297001099 < sym__0__2788895063297001099 && (otherRec.sym__0__1545257135384253129 < sym__0__1545257135384253129 && (otherRec.sym__0___45_4622664073058890953 < sym__0___45_4622664073058890953 && (otherRec.sym__0__7774459284859713893 < sym__0__7774459284859713893 && (otherRec.sym__0__5464006631725545620 < sym__0__5464006631725545620 && (otherRec.sym__0___45_3247512146210145269 < sym__0___45_3247512146210145269 && (otherRec.sym__0___45_4159199765988317501 < sym__0___45_4159199765988317501 && (otherRec.sym__0___45_5417534366741502741 < sym__0___45_5417534366741502741 && (otherRec.sym__0__4597400568918183105 < sym__0__4597400568918183105 && (otherRec.sym__0__8819540415296482823 < sym__0__8819540415296482823 && (otherRec.sym__0___45_623355213379307427 < sym__0___45_623355213379307427 && (otherRec.sym__0__7994108978447880988 < sym__0__7994108978447880988 && (otherRec.sym__0__7664015906371024747 < sym__0__7664015906371024747 && (otherRec.sym__0___45_6006206227144636657 < sym__0___45_6006206227144636657 && (otherRec.sym__0__3122376255932122421 < sym__0__3122376255932122421 && (otherRec.sym__0__5682795704482796293 < sym__0__5682795704482796293 && (otherRec.sym__0__4547320860663492666 < sym__0__4547320860663492666 && (otherRec.sym__0___45_8670773565387601472 < sym__0___45_8670773565387601472 && (otherRec.sym__0___45_13570145613494646 < sym__0___45_13570145613494646 && (otherRec.sym__0__219157410367458310 < sym__0__219157410367458310 && (otherRec.sym__0__698480510036799380 < sym__0__698480510036799380 && (otherRec.sym__0__5321414200743551775 < sym__0__5321414200743551775 && otherRec.sym__0__4130486035242774698 < sym__0__4130486035242774698)))))))))))))))))))))))))))))))))))))))))))))))))))))))));
  }
  bool operator ==(const Record2& otherRec) const{
    return (otherRec.sym__0__7183756631487345723 == sym__0__7183756631487345723 && (otherRec.sym__0__4004283392749253291 == sym__0__4004283392749253291 && (otherRec.sym__0__7402856733199756645 == sym__0__7402856733199756645 && (otherRec.sym__0___45_7276118071870614642 == sym__0___45_7276118071870614642 && (otherRec.sym__0__7689696364618968408 == sym__0__7689696364618968408 && (otherRec.sym__0__265232048543772062 == sym__0__265232048543772062 && (otherRec.sym__0___45_7391712330109786621 == sym__0___45_7391712330109786621 && (otherRec.sym__0__9093515676270508468 == sym__0__9093515676270508468 && (otherRec.sym__0__2039577949113231011 == sym__0__2039577949113231011 && (otherRec.sym__0___45_5518709817667950629 == sym__0___45_5518709817667950629 && (otherRec.sym__0__7446880365925781245 == sym__0__7446880365925781245 && (otherRec.sym__0__3933602404904280238 == sym__0__3933602404904280238 && (otherRec.sym__0__839558304030626831 == sym__0__839558304030626831 && (otherRec.sym__0__1895092311538388823 == sym__0__1895092311538388823 && (otherRec.sym__0__2442462535421269690 == sym__0__2442462535421269690 && (otherRec.sym__0___45_3615474655229170638 == sym__0___45_3615474655229170638 && (otherRec.sym__0__8806662867934001568 == sym__0__8806662867934001568 && (otherRec.sym__0__9165007797673129751 == sym__0__9165007797673129751 && (otherRec.sym__0__6736597523581036605 == sym__0__6736597523581036605 && (otherRec.sym__0___45_3324970871059066299 == sym__0___45_3324970871059066299 && (otherRec.sym__0__8802187528961009747 == sym__0__8802187528961009747 && (otherRec.sym__0___45_8153453103254980376 == sym__0___45_8153453103254980376 && (otherRec.sym__0___45_878170619108389423 == sym__0___45_878170619108389423 && (otherRec.sym__0___45_874194379502172824 == sym__0___45_874194379502172824 && (otherRec.sym__0__8610439003510773098 == sym__0__8610439003510773098 && (otherRec.sym__0__984338793883944389 == sym__0__984338793883944389 && (otherRec.sym__0___45_241371384806950923 == sym__0___45_241371384806950923 && (otherRec.sym__0__4499056235050439447 == sym__0__4499056235050439447 && (otherRec.sym__0___45_602104477057249231 == sym__0___45_602104477057249231 && (otherRec.sym__0__2154432795296205471 == sym__0__2154432795296205471 && (otherRec.sym__0__8120436674510863259 == sym__0__8120436674510863259 && (otherRec.sym__0__8733838863403650604 == sym__0__8733838863403650604 && (otherRec.sym__0__6144840941019744502 == sym__0__6144840941019744502 && (otherRec.sym__0___45_4519435874778032514 == sym__0___45_4519435874778032514 && (otherRec.sym__0__2592840547366705296 == sym__0__2592840547366705296 && (otherRec.sym__0__2788895063297001099 == sym__0__2788895063297001099 && (otherRec.sym__0__1545257135384253129 == sym__0__1545257135384253129 && (otherRec.sym__0___45_4622664073058890953 == sym__0___45_4622664073058890953 && (otherRec.sym__0__7774459284859713893 == sym__0__7774459284859713893 && (otherRec.sym__0__5464006631725545620 == sym__0__5464006631725545620 && (otherRec.sym__0___45_3247512146210145269 == sym__0___45_3247512146210145269 && (otherRec.sym__0___45_4159199765988317501 == sym__0___45_4159199765988317501 && (otherRec.sym__0___45_5417534366741502741 == sym__0___45_5417534366741502741 && (otherRec.sym__0__4597400568918183105 == sym__0__4597400568918183105 && (otherRec.sym__0__8819540415296482823 == sym__0__8819540415296482823 && (otherRec.sym__0___45_623355213379307427 == sym__0___45_623355213379307427 && (otherRec.sym__0__7994108978447880988 == sym__0__7994108978447880988 && (otherRec.sym__0__7664015906371024747 == sym__0__7664015906371024747 && (otherRec.sym__0___45_6006206227144636657 == sym__0___45_6006206227144636657 && (otherRec.sym__0__3122376255932122421 == sym__0__3122376255932122421 && (otherRec.sym__0__5682795704482796293 == sym__0__5682795704482796293 && (otherRec.sym__0__4547320860663492666 == sym__0__4547320860663492666 && (otherRec.sym__0___45_8670773565387601472 == sym__0___45_8670773565387601472 && (otherRec.sym__0___45_13570145613494646 == sym__0___45_13570145613494646 && (otherRec.sym__0__219157410367458310 == sym__0__219157410367458310 && (otherRec.sym__0__698480510036799380 == sym__0__698480510036799380 && (otherRec.sym__0__5321414200743551775 == sym__0__5321414200743551775 && otherRec.sym__0__4130486035242774698 == sym__0__4130486035242774698)))))))))))))))))))))))))))))))))))))))))))))))))))))))));
  }
  bool operator !=(const Record2& otherRec) const{
    return (otherRec.sym__0__7183756631487345723 != sym__0__7183756631487345723 || (otherRec.sym__0__4004283392749253291 != sym__0__4004283392749253291 || (otherRec.sym__0__7402856733199756645 != sym__0__7402856733199756645 || (otherRec.sym__0___45_7276118071870614642 != sym__0___45_7276118071870614642 || (otherRec.sym__0__7689696364618968408 != sym__0__7689696364618968408 || (otherRec.sym__0__265232048543772062 != sym__0__265232048543772062 || (otherRec.sym__0___45_7391712330109786621 != sym__0___45_7391712330109786621 || (otherRec.sym__0__9093515676270508468 != sym__0__9093515676270508468 || (otherRec.sym__0__2039577949113231011 != sym__0__2039577949113231011 || (otherRec.sym__0___45_5518709817667950629 != sym__0___45_5518709817667950629 || (otherRec.sym__0__7446880365925781245 != sym__0__7446880365925781245 || (otherRec.sym__0__3933602404904280238 != sym__0__3933602404904280238 || (otherRec.sym__0__839558304030626831 != sym__0__839558304030626831 || (otherRec.sym__0__1895092311538388823 != sym__0__1895092311538388823 || (otherRec.sym__0__2442462535421269690 != sym__0__2442462535421269690 || (otherRec.sym__0___45_3615474655229170638 != sym__0___45_3615474655229170638 || (otherRec.sym__0__8806662867934001568 != sym__0__8806662867934001568 || (otherRec.sym__0__9165007797673129751 != sym__0__9165007797673129751 || (otherRec.sym__0__6736597523581036605 != sym__0__6736597523581036605 || (otherRec.sym__0___45_3324970871059066299 != sym__0___45_3324970871059066299 || (otherRec.sym__0__8802187528961009747 != sym__0__8802187528961009747 || (otherRec.sym__0___45_8153453103254980376 != sym__0___45_8153453103254980376 || (otherRec.sym__0___45_878170619108389423 != sym__0___45_878170619108389423 || (otherRec.sym__0___45_874194379502172824 != sym__0___45_874194379502172824 || (otherRec.sym__0__8610439003510773098 != sym__0__8610439003510773098 || (otherRec.sym__0__984338793883944389 != sym__0__984338793883944389 || (otherRec.sym__0___45_241371384806950923 != sym__0___45_241371384806950923 || (otherRec.sym__0__4499056235050439447 != sym__0__4499056235050439447 || (otherRec.sym__0___45_602104477057249231 != sym__0___45_602104477057249231 || (otherRec.sym__0__2154432795296205471 != sym__0__2154432795296205471 || (otherRec.sym__0__8120436674510863259 != sym__0__8120436674510863259 || (otherRec.sym__0__8733838863403650604 != sym__0__8733838863403650604 || (otherRec.sym__0__6144840941019744502 != sym__0__6144840941019744502 || (otherRec.sym__0___45_4519435874778032514 != sym__0___45_4519435874778032514 || (otherRec.sym__0__2592840547366705296 != sym__0__2592840547366705296 || (otherRec.sym__0__2788895063297001099 != sym__0__2788895063297001099 || (otherRec.sym__0__1545257135384253129 != sym__0__1545257135384253129 || (otherRec.sym__0___45_4622664073058890953 != sym__0___45_4622664073058890953 || (otherRec.sym__0__7774459284859713893 != sym__0__7774459284859713893 || (otherRec.sym__0__5464006631725545620 != sym__0__5464006631725545620 || (otherRec.sym__0___45_3247512146210145269 != sym__0___45_3247512146210145269 || (otherRec.sym__0___45_4159199765988317501 != sym__0___45_4159199765988317501 || (otherRec.sym__0___45_5417534366741502741 != sym__0___45_5417534366741502741 || (otherRec.sym__0__4597400568918183105 != sym__0__4597400568918183105 || (otherRec.sym__0__8819540415296482823 != sym__0__8819540415296482823 || (otherRec.sym__0___45_623355213379307427 != sym__0___45_623355213379307427 || (otherRec.sym__0__7994108978447880988 != sym__0__7994108978447880988 || (otherRec.sym__0__7664015906371024747 != sym__0__7664015906371024747 || (otherRec.sym__0___45_6006206227144636657 != sym__0___45_6006206227144636657 || (otherRec.sym__0__3122376255932122421 != sym__0__3122376255932122421 || (otherRec.sym__0__5682795704482796293 != sym__0__5682795704482796293 || (otherRec.sym__0__4547320860663492666 != sym__0__4547320860663492666 || (otherRec.sym__0___45_8670773565387601472 != sym__0___45_8670773565387601472 || (otherRec.sym__0___45_13570145613494646 != sym__0___45_13570145613494646 || (otherRec.sym__0__219157410367458310 != sym__0__219157410367458310 || (otherRec.sym__0__698480510036799380 != sym__0__698480510036799380 || (otherRec.sym__0__5321414200743551775 != sym__0__5321414200743551775 || otherRec.sym__0__4130486035242774698 != sym__0__4130486035242774698)))))))))))))))))))))))))))))))))))))))))))))))))))))))));
  }
  unsigned sym__0__7183756631487345723;
  fluidb_string<18> sym__0__4004283392749253291;
  fluidb_string<9> sym__0__7402856733199756645;
  fluidb_string<9> sym__0___45_7276118071870614642;
  unsigned sym__0__7689696364618968408;
  unsigned sym__0__265232048543772062;
  fluidb_string<7> sym__0___45_7391712330109786621;
  unsigned sym__0__9093515676270508468;
  unsigned sym__0__2039577949113231011;
  unsigned sym__0___45_5518709817667950629;
  unsigned sym__0__7446880365925781245;
  unsigned sym__0__3933602404904280238;
  fluidb_string<15> sym__0__839558304030626831;
  fluidb_string<2> sym__0__1895092311538388823;
  fluidb_string<2> sym__0__2442462535421269690;
  fluidb_string<2> sym__0___45_3615474655229170638;
  fluidb_string<2> sym__0__8806662867934001568;
  unsigned sym__0__9165007797673129751;
  int sym__0__6736597523581036605;
  unsigned sym__0___45_3324970871059066299;
  unsigned sym__0__8802187528961009747;
  unsigned sym__0___45_8153453103254980376;
  unsigned sym__0___45_878170619108389423;
  fluidb_string<21> sym__0___45_874194379502172824;
  unsigned sym__0__8610439003510773098;
  fluidb_string<10> sym__0__984338793883944389;
  unsigned sym__0___45_241371384806950923;
  double sym__0__4499056235050439447;
  unsigned sym__0___45_602104477057249231;
  double sym__0__2154432795296205471;
  unsigned sym__0__8120436674510863259;
  unsigned sym__0__8733838863403650604;
  double sym__0__6144840941019744502;
  fluidb_string<13> sym__0___45_4519435874778032514;
  unsigned sym__0__2592840547366705296;
  fluidb_string<25> sym__0__2788895063297001099;
  fluidb_string<40> sym__0__1545257135384253129;
  fluidb_string<16> sym__0___45_4622664073058890953;
  fluidb_string<16> sym__0__7774459284859713893;
  fluidb_string<13> sym__0__5464006631725545620;
  fluidb_string<15> sym__0___45_3247512146210145269;
  unsigned sym__0___45_4159199765988317501;
  fluidb_string<18> sym__0___45_5417534366741502741;
  fluidb_string<40> sym__0__4597400568918183105;
  fluidb_string<11> sym__0__8819540415296482823;
  fluidb_string<15> sym__0___45_623355213379307427;
  fluidb_string<13> sym__0__7994108978447880988;
  fluidb_string<15> sym__0__7664015906371024747;
  fluidb_string<21> sym__0___45_6006206227144636657;
  unsigned sym__0__3122376255932122421;
  fluidb_string<55> sym__0__5682795704482796293;
  fluidb_string<25> sym__0__4547320860663492666;
  fluidb_string<7> sym__0___45_8670773565387601472;
  fluidb_string<10> sym__0___45_13570145613494646;
  fluidb_string<11> sym__0__219157410367458310;
  fluidb_string<25> sym__0__698480510036799380;
  unsigned sym__0__5321414200743551775;
  fluidb_string<10> sym__0__4130486035242774698;
 private:
};


class Record15 {
 public:
  Record15(unsigned __sym__0___45_7574074018531922998, int __sym__0__1125464382786937920, unsigned __sym__0___45_8257174981563598792, unsigned __sym__0__957746932829998382, unsigned __sym__0__934137931677987637, unsigned __sym__0___45_7332894783442362324, fluidb_string<21> __sym__0__8974811218372806325, unsigned __sym__0___45_5217562530132451785, fluidb_string<10> __sym__0__7851147553396318904, unsigned __sym__0___45_4975505511391694456, double __sym__0___45_7249986409969561654, unsigned __sym__0__4671626969570181580, double __sym__0___45_3666121704283105054, unsigned __sym__0__5495011930072844518, unsigned __sym__0___45_4423447118092167055, double __sym__0___45_1608082021099887893, fluidb_string<13> __sym__0__1584187396639360899) : sym__0___45_7574074018531922998(__sym__0___45_7574074018531922998), sym__0__1125464382786937920(__sym__0__1125464382786937920), sym__0___45_8257174981563598792(__sym__0___45_8257174981563598792), sym__0__957746932829998382(__sym__0__957746932829998382), sym__0__934137931677987637(__sym__0__934137931677987637), sym__0___45_7332894783442362324(__sym__0___45_7332894783442362324), sym__0__8974811218372806325(__sym__0__8974811218372806325), sym__0___45_5217562530132451785(__sym__0___45_5217562530132451785), sym__0__7851147553396318904(__sym__0__7851147553396318904), sym__0___45_4975505511391694456(__sym__0___45_4975505511391694456), sym__0___45_7249986409969561654(__sym__0___45_7249986409969561654), sym__0__4671626969570181580(__sym__0__4671626969570181580), sym__0___45_3666121704283105054(__sym__0___45_3666121704283105054), sym__0__5495011930072844518(__sym__0__5495011930072844518), sym__0___45_4423447118092167055(__sym__0___45_4423447118092167055), sym__0___45_1608082021099887893(__sym__0___45_1608082021099887893), sym__0__1584187396639360899(__sym__0__1584187396639360899)
  {
  }
  Record15() 
  {
  }
  std::string show() const{
    std::stringstream o;
    o << sym__0___45_7574074018531922998 << " | " << sym__0__1125464382786937920 << " | " << sym__0___45_8257174981563598792 << " | " << sym__0__957746932829998382 << " | " << sym__0__934137931677987637 << " | " << sym__0___45_7332894783442362324 << " | " << arrToString(sym__0__8974811218372806325) << " | " << sym__0___45_5217562530132451785 << " | " << arrToString(sym__0__7851147553396318904) << " | " << sym__0___45_4975505511391694456 << " | " << sym__0___45_7249986409969561654 << " | " << sym__0__4671626969570181580 << " | " << sym__0___45_3666121704283105054 << " | " << sym__0__5495011930072844518 << " | " << sym__0___45_4423447118092167055 << " | " << sym__0___45_1608082021099887893 << " | " << arrToString(sym__0__1584187396639360899);
    return o.str();
  }
  bool operator <(const Record15& otherRec) const{
    return (otherRec.sym__0___45_7574074018531922998 < sym__0___45_7574074018531922998 && (otherRec.sym__0__1125464382786937920 < sym__0__1125464382786937920 && (otherRec.sym__0___45_8257174981563598792 < sym__0___45_8257174981563598792 && (otherRec.sym__0__957746932829998382 < sym__0__957746932829998382 && (otherRec.sym__0__934137931677987637 < sym__0__934137931677987637 && (otherRec.sym__0___45_7332894783442362324 < sym__0___45_7332894783442362324 && (otherRec.sym__0__8974811218372806325 < sym__0__8974811218372806325 && (otherRec.sym__0___45_5217562530132451785 < sym__0___45_5217562530132451785 && (otherRec.sym__0__7851147553396318904 < sym__0__7851147553396318904 && (otherRec.sym__0___45_4975505511391694456 < sym__0___45_4975505511391694456 && (otherRec.sym__0___45_7249986409969561654 < sym__0___45_7249986409969561654 && (otherRec.sym__0__4671626969570181580 < sym__0__4671626969570181580 && (otherRec.sym__0___45_3666121704283105054 < sym__0___45_3666121704283105054 && (otherRec.sym__0__5495011930072844518 < sym__0__5495011930072844518 && (otherRec.sym__0___45_4423447118092167055 < sym__0___45_4423447118092167055 && (otherRec.sym__0___45_1608082021099887893 < sym__0___45_1608082021099887893 && otherRec.sym__0__1584187396639360899 < sym__0__1584187396639360899))))))))))))))));
  }
  bool operator ==(const Record15& otherRec) const{
    return (otherRec.sym__0___45_7574074018531922998 == sym__0___45_7574074018531922998 && (otherRec.sym__0__1125464382786937920 == sym__0__1125464382786937920 && (otherRec.sym__0___45_8257174981563598792 == sym__0___45_8257174981563598792 && (otherRec.sym__0__957746932829998382 == sym__0__957746932829998382 && (otherRec.sym__0__934137931677987637 == sym__0__934137931677987637 && (otherRec.sym__0___45_7332894783442362324 == sym__0___45_7332894783442362324 && (otherRec.sym__0__8974811218372806325 == sym__0__8974811218372806325 && (otherRec.sym__0___45_5217562530132451785 == sym__0___45_5217562530132451785 && (otherRec.sym__0__7851147553396318904 == sym__0__7851147553396318904 && (otherRec.sym__0___45_4975505511391694456 == sym__0___45_4975505511391694456 && (otherRec.sym__0___45_7249986409969561654 == sym__0___45_7249986409969561654 && (otherRec.sym__0__4671626969570181580 == sym__0__4671626969570181580 && (otherRec.sym__0___45_3666121704283105054 == sym__0___45_3666121704283105054 && (otherRec.sym__0__5495011930072844518 == sym__0__5495011930072844518 && (otherRec.sym__0___45_4423447118092167055 == sym__0___45_4423447118092167055 && (otherRec.sym__0___45_1608082021099887893 == sym__0___45_1608082021099887893 && otherRec.sym__0__1584187396639360899 == sym__0__1584187396639360899))))))))))))))));
  }
  bool operator !=(const Record15& otherRec) const{
    return (otherRec.sym__0___45_7574074018531922998 != sym__0___45_7574074018531922998 || (otherRec.sym__0__1125464382786937920 != sym__0__1125464382786937920 || (otherRec.sym__0___45_8257174981563598792 != sym__0___45_8257174981563598792 || (otherRec.sym__0__957746932829998382 != sym__0__957746932829998382 || (otherRec.sym__0__934137931677987637 != sym__0__934137931677987637 || (otherRec.sym__0___45_7332894783442362324 != sym__0___45_7332894783442362324 || (otherRec.sym__0__8974811218372806325 != sym__0__8974811218372806325 || (otherRec.sym__0___45_5217562530132451785 != sym__0___45_5217562530132451785 || (otherRec.sym__0__7851147553396318904 != sym__0__7851147553396318904 || (otherRec.sym__0___45_4975505511391694456 != sym__0___45_4975505511391694456 || (otherRec.sym__0___45_7249986409969561654 != sym__0___45_7249986409969561654 || (otherRec.sym__0__4671626969570181580 != sym__0__4671626969570181580 || (otherRec.sym__0___45_3666121704283105054 != sym__0___45_3666121704283105054 || (otherRec.sym__0__5495011930072844518 != sym__0__5495011930072844518 || (otherRec.sym__0___45_4423447118092167055 != sym__0___45_4423447118092167055 || (otherRec.sym__0___45_1608082021099887893 != sym__0___45_1608082021099887893 || otherRec.sym__0__1584187396639360899 != sym__0__1584187396639360899))))))))))))))));
  }
  unsigned sym__0___45_7574074018531922998;
  int sym__0__1125464382786937920;
  unsigned sym__0___45_8257174981563598792;
  unsigned sym__0__957746932829998382;
  unsigned sym__0__934137931677987637;
  unsigned sym__0___45_7332894783442362324;
  fluidb_string<21> sym__0__8974811218372806325;
  unsigned sym__0___45_5217562530132451785;
  fluidb_string<10> sym__0__7851147553396318904;
  unsigned sym__0___45_4975505511391694456;
  double sym__0___45_7249986409969561654;
  unsigned sym__0__4671626969570181580;
  double sym__0___45_3666121704283105054;
  unsigned sym__0__5495011930072844518;
  unsigned sym__0___45_4423447118092167055;
  double sym__0___45_1608082021099887893;
  fluidb_string<13> sym__0__1584187396639360899;
 private:
};


class Record18 {
 public:
  Record18(unsigned __sortElem0) : sortElem0(__sortElem0)
  {
  }
  Record18() 
  {
  }
  std::string show() const{
    std::stringstream o;
    o << sortElem0;
    return o.str();
  }
  bool operator <(const Record18& otherRec) const{
    return otherRec.sortElem0 < sortElem0;
  }
  bool operator ==(const Record18& otherRec) const{
    return otherRec.sortElem0 == sortElem0;
  }
  bool operator !=(const Record18& otherRec) const{
    return otherRec.sortElem0 != sortElem0;
  }
  unsigned sortElem0;
 private:
};


class Record14 {
 public:
  Record14(unsigned __sym__0__2037864888707786451, fluidb_string<18> __sym__0__8533656712666151747, fluidb_string<9> __sym__0__646314041574508429, fluidb_string<9> __sym__0__6064137978327902054, unsigned __sym__0__3754157776500852496, unsigned __sym__0__6284345160241949046, fluidb_string<7> __sym__0___45_773692805971570325, unsigned __sym__0___45_8399474032083007524, unsigned __sym__0___45_2038947427357444789, unsigned __sym__0__6071994954612827827, unsigned __sym__0__7742515703067448213, unsigned __sym__0__5201219213304227654, fluidb_string<15> __sym__0___45_5896625796158057241, fluidb_string<2> __sym__0___45_1108504872221226081, fluidb_string<2> __sym__0__1055103969674359346, fluidb_string<2> __sym__0__9115626546918942554, fluidb_string<2> __sym__0___45_6850413444013389848) : sym__0__2037864888707786451(__sym__0__2037864888707786451), sym__0__8533656712666151747(__sym__0__8533656712666151747), sym__0__646314041574508429(__sym__0__646314041574508429), sym__0__6064137978327902054(__sym__0__6064137978327902054), sym__0__3754157776500852496(__sym__0__3754157776500852496), sym__0__6284345160241949046(__sym__0__6284345160241949046), sym__0___45_773692805971570325(__sym__0___45_773692805971570325), sym__0___45_8399474032083007524(__sym__0___45_8399474032083007524), sym__0___45_2038947427357444789(__sym__0___45_2038947427357444789), sym__0__6071994954612827827(__sym__0__6071994954612827827), sym__0__7742515703067448213(__sym__0__7742515703067448213), sym__0__5201219213304227654(__sym__0__5201219213304227654), sym__0___45_5896625796158057241(__sym__0___45_5896625796158057241), sym__0___45_1108504872221226081(__sym__0___45_1108504872221226081), sym__0__1055103969674359346(__sym__0__1055103969674359346), sym__0__9115626546918942554(__sym__0__9115626546918942554), sym__0___45_6850413444013389848(__sym__0___45_6850413444013389848)
  {
  }
  Record14() 
  {
  }
  std::string show() const{
    std::stringstream o;
    o << sym__0__2037864888707786451 << " | " << arrToString(sym__0__8533656712666151747) << " | " << arrToString(sym__0__646314041574508429) << " | " << arrToString(sym__0__6064137978327902054) << " | " << sym__0__3754157776500852496 << " | " << sym__0__6284345160241949046 << " | " << arrToString(sym__0___45_773692805971570325) << " | " << sym__0___45_8399474032083007524 << " | " << sym__0___45_2038947427357444789 << " | " << sym__0__6071994954612827827 << " | " << sym__0__7742515703067448213 << " | " << sym__0__5201219213304227654 << " | " << arrToString(sym__0___45_5896625796158057241) << " | " << arrToString(sym__0___45_1108504872221226081) << " | " << arrToString(sym__0__1055103969674359346) << " | " << arrToString(sym__0__9115626546918942554) << " | " << arrToString(sym__0___45_6850413444013389848);
    return o.str();
  }
  bool operator <(const Record14& otherRec) const{
    return (otherRec.sym__0__2037864888707786451 < sym__0__2037864888707786451 && (otherRec.sym__0__8533656712666151747 < sym__0__8533656712666151747 && (otherRec.sym__0__646314041574508429 < sym__0__646314041574508429 && (otherRec.sym__0__6064137978327902054 < sym__0__6064137978327902054 && (otherRec.sym__0__3754157776500852496 < sym__0__3754157776500852496 && (otherRec.sym__0__6284345160241949046 < sym__0__6284345160241949046 && (otherRec.sym__0___45_773692805971570325 < sym__0___45_773692805971570325 && (otherRec.sym__0___45_8399474032083007524 < sym__0___45_8399474032083007524 && (otherRec.sym__0___45_2038947427357444789 < sym__0___45_2038947427357444789 && (otherRec.sym__0__6071994954612827827 < sym__0__6071994954612827827 && (otherRec.sym__0__7742515703067448213 < sym__0__7742515703067448213 && (otherRec.sym__0__5201219213304227654 < sym__0__5201219213304227654 && (otherRec.sym__0___45_5896625796158057241 < sym__0___45_5896625796158057241 && (otherRec.sym__0___45_1108504872221226081 < sym__0___45_1108504872221226081 && (otherRec.sym__0__1055103969674359346 < sym__0__1055103969674359346 && (otherRec.sym__0__9115626546918942554 < sym__0__9115626546918942554 && otherRec.sym__0___45_6850413444013389848 < sym__0___45_6850413444013389848))))))))))))))));
  }
  bool operator ==(const Record14& otherRec) const{
    return (otherRec.sym__0__2037864888707786451 == sym__0__2037864888707786451 && (otherRec.sym__0__8533656712666151747 == sym__0__8533656712666151747 && (otherRec.sym__0__646314041574508429 == sym__0__646314041574508429 && (otherRec.sym__0__6064137978327902054 == sym__0__6064137978327902054 && (otherRec.sym__0__3754157776500852496 == sym__0__3754157776500852496 && (otherRec.sym__0__6284345160241949046 == sym__0__6284345160241949046 && (otherRec.sym__0___45_773692805971570325 == sym__0___45_773692805971570325 && (otherRec.sym__0___45_8399474032083007524 == sym__0___45_8399474032083007524 && (otherRec.sym__0___45_2038947427357444789 == sym__0___45_2038947427357444789 && (otherRec.sym__0__6071994954612827827 == sym__0__6071994954612827827 && (otherRec.sym__0__7742515703067448213 == sym__0__7742515703067448213 && (otherRec.sym__0__5201219213304227654 == sym__0__5201219213304227654 && (otherRec.sym__0___45_5896625796158057241 == sym__0___45_5896625796158057241 && (otherRec.sym__0___45_1108504872221226081 == sym__0___45_1108504872221226081 && (otherRec.sym__0__1055103969674359346 == sym__0__1055103969674359346 && (otherRec.sym__0__9115626546918942554 == sym__0__9115626546918942554 && otherRec.sym__0___45_6850413444013389848 == sym__0___45_6850413444013389848))))))))))))))));
  }
  bool operator !=(const Record14& otherRec) const{
    return (otherRec.sym__0__2037864888707786451 != sym__0__2037864888707786451 || (otherRec.sym__0__8533656712666151747 != sym__0__8533656712666151747 || (otherRec.sym__0__646314041574508429 != sym__0__646314041574508429 || (otherRec.sym__0__6064137978327902054 != sym__0__6064137978327902054 || (otherRec.sym__0__3754157776500852496 != sym__0__3754157776500852496 || (otherRec.sym__0__6284345160241949046 != sym__0__6284345160241949046 || (otherRec.sym__0___45_773692805971570325 != sym__0___45_773692805971570325 || (otherRec.sym__0___45_8399474032083007524 != sym__0___45_8399474032083007524 || (otherRec.sym__0___45_2038947427357444789 != sym__0___45_2038947427357444789 || (otherRec.sym__0__6071994954612827827 != sym__0__6071994954612827827 || (otherRec.sym__0__7742515703067448213 != sym__0__7742515703067448213 || (otherRec.sym__0__5201219213304227654 != sym__0__5201219213304227654 || (otherRec.sym__0___45_5896625796158057241 != sym__0___45_5896625796158057241 || (otherRec.sym__0___45_1108504872221226081 != sym__0___45_1108504872221226081 || (otherRec.sym__0__1055103969674359346 != sym__0__1055103969674359346 || (otherRec.sym__0__9115626546918942554 != sym__0__9115626546918942554 || otherRec.sym__0___45_6850413444013389848 != sym__0___45_6850413444013389848))))))))))))))));
  }
  unsigned sym__0__2037864888707786451;
  fluidb_string<18> sym__0__8533656712666151747;
  fluidb_string<9> sym__0__646314041574508429;
  fluidb_string<9> sym__0__6064137978327902054;
  unsigned sym__0__3754157776500852496;
  unsigned sym__0__6284345160241949046;
  fluidb_string<7> sym__0___45_773692805971570325;
  unsigned sym__0___45_8399474032083007524;
  unsigned sym__0___45_2038947427357444789;
  unsigned sym__0__6071994954612827827;
  unsigned sym__0__7742515703067448213;
  unsigned sym__0__5201219213304227654;
  fluidb_string<15> sym__0___45_5896625796158057241;
  fluidb_string<2> sym__0___45_1108504872221226081;
  fluidb_string<2> sym__0__1055103969674359346;
  fluidb_string<2> sym__0__9115626546918942554;
  fluidb_string<2> sym__0___45_6850413444013389848;
 private:
};


class Record8 {
 public:
  Record8(unsigned __sym__0__2833764152503888409, fluidb_string<18> __sym__0__6938021140779677761, fluidb_string<40> __sym__0___45_4700201805806600089, fluidb_string<11> __sym__0__3362667619044778557, fluidb_string<15> __sym__0__2679827580767046755, fluidb_string<13> __sym__0___45_4186304031693649930, fluidb_string<15> __sym__0__8596564865999609793, fluidb_string<21> __sym__0___45_1671053890158572571, unsigned __sym__0__2256924431415148013, int __sym__0__347872876320563651, unsigned __sym__0___45_7666447219434903317, unsigned __sym__0__1272718151591622153, unsigned __sym__0__4584633926271658914, unsigned __sym__0___45_4610773208091240233, fluidb_string<21> __sym__0___45_5766638191766435038, unsigned __sym__0___45_5211223358204127380, fluidb_string<10> __sym__0__8435431464460332395, unsigned __sym__0___45_6450191115912157957, double __sym__0__7921907673157171693, unsigned __sym__0___45_1699747741436218441, double __sym__0___45_2985562469054236715, unsigned __sym__0__3746029949899912401, unsigned __sym__0___45_989155948099215770, double __sym__0___45_1667761180508152936, fluidb_string<13> __sym__0__5854462121170882944, unsigned __sym__0___45_1023382914117654422, fluidb_string<25> __sym__0__6224010339127806049, fluidb_string<40> __sym__0___45_8804639047977952305, fluidb_string<16> __sym__0__8926375957639307021, fluidb_string<16> __sym__0__5153200798583684363, fluidb_string<13> __sym__0___45_794494697990656050, fluidb_string<15> __sym__0__7308161412148661473) : sym__0__2833764152503888409(__sym__0__2833764152503888409), sym__0__6938021140779677761(__sym__0__6938021140779677761), sym__0___45_4700201805806600089(__sym__0___45_4700201805806600089), sym__0__3362667619044778557(__sym__0__3362667619044778557), sym__0__2679827580767046755(__sym__0__2679827580767046755), sym__0___45_4186304031693649930(__sym__0___45_4186304031693649930), sym__0__8596564865999609793(__sym__0__8596564865999609793), sym__0___45_1671053890158572571(__sym__0___45_1671053890158572571), sym__0__2256924431415148013(__sym__0__2256924431415148013), sym__0__347872876320563651(__sym__0__347872876320563651), sym__0___45_7666447219434903317(__sym__0___45_7666447219434903317), sym__0__1272718151591622153(__sym__0__1272718151591622153), sym__0__4584633926271658914(__sym__0__4584633926271658914), sym__0___45_4610773208091240233(__sym__0___45_4610773208091240233), sym__0___45_5766638191766435038(__sym__0___45_5766638191766435038), sym__0___45_5211223358204127380(__sym__0___45_5211223358204127380), sym__0__8435431464460332395(__sym__0__8435431464460332395), sym__0___45_6450191115912157957(__sym__0___45_6450191115912157957), sym__0__7921907673157171693(__sym__0__7921907673157171693), sym__0___45_1699747741436218441(__sym__0___45_1699747741436218441), sym__0___45_2985562469054236715(__sym__0___45_2985562469054236715), sym__0__3746029949899912401(__sym__0__3746029949899912401), sym__0___45_989155948099215770(__sym__0___45_989155948099215770), sym__0___45_1667761180508152936(__sym__0___45_1667761180508152936), sym__0__5854462121170882944(__sym__0__5854462121170882944), sym__0___45_1023382914117654422(__sym__0___45_1023382914117654422), sym__0__6224010339127806049(__sym__0__6224010339127806049), sym__0___45_8804639047977952305(__sym__0___45_8804639047977952305), sym__0__8926375957639307021(__sym__0__8926375957639307021), sym__0__5153200798583684363(__sym__0__5153200798583684363), sym__0___45_794494697990656050(__sym__0___45_794494697990656050), sym__0__7308161412148661473(__sym__0__7308161412148661473)
  {
  }
  Record8() 
  {
  }
  std::string show() const{
    std::stringstream o;
    o << sym__0__2833764152503888409 << " | " << arrToString(sym__0__6938021140779677761) << " | " << arrToString(sym__0___45_4700201805806600089) << " | " << arrToString(sym__0__3362667619044778557) << " | " << arrToString(sym__0__2679827580767046755) << " | " << arrToString(sym__0___45_4186304031693649930) << " | " << arrToString(sym__0__8596564865999609793) << " | " << arrToString(sym__0___45_1671053890158572571) << " | " << sym__0__2256924431415148013 << " | " << sym__0__347872876320563651 << " | " << sym__0___45_7666447219434903317 << " | " << sym__0__1272718151591622153 << " | " << sym__0__4584633926271658914 << " | " << sym__0___45_4610773208091240233 << " | " << arrToString(sym__0___45_5766638191766435038) << " | " << sym__0___45_5211223358204127380 << " | " << arrToString(sym__0__8435431464460332395) << " | " << sym__0___45_6450191115912157957 << " | " << sym__0__7921907673157171693 << " | " << sym__0___45_1699747741436218441 << " | " << sym__0___45_2985562469054236715 << " | " << sym__0__3746029949899912401 << " | " << sym__0___45_989155948099215770 << " | " << sym__0___45_1667761180508152936 << " | " << arrToString(sym__0__5854462121170882944) << " | " << sym__0___45_1023382914117654422 << " | " << arrToString(sym__0__6224010339127806049) << " | " << arrToString(sym__0___45_8804639047977952305) << " | " << arrToString(sym__0__8926375957639307021) << " | " << arrToString(sym__0__5153200798583684363) << " | " << arrToString(sym__0___45_794494697990656050) << " | " << arrToString(sym__0__7308161412148661473);
    return o.str();
  }
  bool operator <(const Record8& otherRec) const{
    return (otherRec.sym__0__2833764152503888409 < sym__0__2833764152503888409 && (otherRec.sym__0__6938021140779677761 < sym__0__6938021140779677761 && (otherRec.sym__0___45_4700201805806600089 < sym__0___45_4700201805806600089 && (otherRec.sym__0__3362667619044778557 < sym__0__3362667619044778557 && (otherRec.sym__0__2679827580767046755 < sym__0__2679827580767046755 && (otherRec.sym__0___45_4186304031693649930 < sym__0___45_4186304031693649930 && (otherRec.sym__0__8596564865999609793 < sym__0__8596564865999609793 && (otherRec.sym__0___45_1671053890158572571 < sym__0___45_1671053890158572571 && (otherRec.sym__0__2256924431415148013 < sym__0__2256924431415148013 && (otherRec.sym__0__347872876320563651 < sym__0__347872876320563651 && (otherRec.sym__0___45_7666447219434903317 < sym__0___45_7666447219434903317 && (otherRec.sym__0__1272718151591622153 < sym__0__1272718151591622153 && (otherRec.sym__0__4584633926271658914 < sym__0__4584633926271658914 && (otherRec.sym__0___45_4610773208091240233 < sym__0___45_4610773208091240233 && (otherRec.sym__0___45_5766638191766435038 < sym__0___45_5766638191766435038 && (otherRec.sym__0___45_5211223358204127380 < sym__0___45_5211223358204127380 && (otherRec.sym__0__8435431464460332395 < sym__0__8435431464460332395 && (otherRec.sym__0___45_6450191115912157957 < sym__0___45_6450191115912157957 && (otherRec.sym__0__7921907673157171693 < sym__0__7921907673157171693 && (otherRec.sym__0___45_1699747741436218441 < sym__0___45_1699747741436218441 && (otherRec.sym__0___45_2985562469054236715 < sym__0___45_2985562469054236715 && (otherRec.sym__0__3746029949899912401 < sym__0__3746029949899912401 && (otherRec.sym__0___45_989155948099215770 < sym__0___45_989155948099215770 && (otherRec.sym__0___45_1667761180508152936 < sym__0___45_1667761180508152936 && (otherRec.sym__0__5854462121170882944 < sym__0__5854462121170882944 && (otherRec.sym__0___45_1023382914117654422 < sym__0___45_1023382914117654422 && (otherRec.sym__0__6224010339127806049 < sym__0__6224010339127806049 && (otherRec.sym__0___45_8804639047977952305 < sym__0___45_8804639047977952305 && (otherRec.sym__0__8926375957639307021 < sym__0__8926375957639307021 && (otherRec.sym__0__5153200798583684363 < sym__0__5153200798583684363 && (otherRec.sym__0___45_794494697990656050 < sym__0___45_794494697990656050 && otherRec.sym__0__7308161412148661473 < sym__0__7308161412148661473)))))))))))))))))))))))))))))));
  }
  bool operator ==(const Record8& otherRec) const{
    return (otherRec.sym__0__2833764152503888409 == sym__0__2833764152503888409 && (otherRec.sym__0__6938021140779677761 == sym__0__6938021140779677761 && (otherRec.sym__0___45_4700201805806600089 == sym__0___45_4700201805806600089 && (otherRec.sym__0__3362667619044778557 == sym__0__3362667619044778557 && (otherRec.sym__0__2679827580767046755 == sym__0__2679827580767046755 && (otherRec.sym__0___45_4186304031693649930 == sym__0___45_4186304031693649930 && (otherRec.sym__0__8596564865999609793 == sym__0__8596564865999609793 && (otherRec.sym__0___45_1671053890158572571 == sym__0___45_1671053890158572571 && (otherRec.sym__0__2256924431415148013 == sym__0__2256924431415148013 && (otherRec.sym__0__347872876320563651 == sym__0__347872876320563651 && (otherRec.sym__0___45_7666447219434903317 == sym__0___45_7666447219434903317 && (otherRec.sym__0__1272718151591622153 == sym__0__1272718151591622153 && (otherRec.sym__0__4584633926271658914 == sym__0__4584633926271658914 && (otherRec.sym__0___45_4610773208091240233 == sym__0___45_4610773208091240233 && (otherRec.sym__0___45_5766638191766435038 == sym__0___45_5766638191766435038 && (otherRec.sym__0___45_5211223358204127380 == sym__0___45_5211223358204127380 && (otherRec.sym__0__8435431464460332395 == sym__0__8435431464460332395 && (otherRec.sym__0___45_6450191115912157957 == sym__0___45_6450191115912157957 && (otherRec.sym__0__7921907673157171693 == sym__0__7921907673157171693 && (otherRec.sym__0___45_1699747741436218441 == sym__0___45_1699747741436218441 && (otherRec.sym__0___45_2985562469054236715 == sym__0___45_2985562469054236715 && (otherRec.sym__0__3746029949899912401 == sym__0__3746029949899912401 && (otherRec.sym__0___45_989155948099215770 == sym__0___45_989155948099215770 && (otherRec.sym__0___45_1667761180508152936 == sym__0___45_1667761180508152936 && (otherRec.sym__0__5854462121170882944 == sym__0__5854462121170882944 && (otherRec.sym__0___45_1023382914117654422 == sym__0___45_1023382914117654422 && (otherRec.sym__0__6224010339127806049 == sym__0__6224010339127806049 && (otherRec.sym__0___45_8804639047977952305 == sym__0___45_8804639047977952305 && (otherRec.sym__0__8926375957639307021 == sym__0__8926375957639307021 && (otherRec.sym__0__5153200798583684363 == sym__0__5153200798583684363 && (otherRec.sym__0___45_794494697990656050 == sym__0___45_794494697990656050 && otherRec.sym__0__7308161412148661473 == sym__0__7308161412148661473)))))))))))))))))))))))))))))));
  }
  bool operator !=(const Record8& otherRec) const{
    return (otherRec.sym__0__2833764152503888409 != sym__0__2833764152503888409 || (otherRec.sym__0__6938021140779677761 != sym__0__6938021140779677761 || (otherRec.sym__0___45_4700201805806600089 != sym__0___45_4700201805806600089 || (otherRec.sym__0__3362667619044778557 != sym__0__3362667619044778557 || (otherRec.sym__0__2679827580767046755 != sym__0__2679827580767046755 || (otherRec.sym__0___45_4186304031693649930 != sym__0___45_4186304031693649930 || (otherRec.sym__0__8596564865999609793 != sym__0__8596564865999609793 || (otherRec.sym__0___45_1671053890158572571 != sym__0___45_1671053890158572571 || (otherRec.sym__0__2256924431415148013 != sym__0__2256924431415148013 || (otherRec.sym__0__347872876320563651 != sym__0__347872876320563651 || (otherRec.sym__0___45_7666447219434903317 != sym__0___45_7666447219434903317 || (otherRec.sym__0__1272718151591622153 != sym__0__1272718151591622153 || (otherRec.sym__0__4584633926271658914 != sym__0__4584633926271658914 || (otherRec.sym__0___45_4610773208091240233 != sym__0___45_4610773208091240233 || (otherRec.sym__0___45_5766638191766435038 != sym__0___45_5766638191766435038 || (otherRec.sym__0___45_5211223358204127380 != sym__0___45_5211223358204127380 || (otherRec.sym__0__8435431464460332395 != sym__0__8435431464460332395 || (otherRec.sym__0___45_6450191115912157957 != sym__0___45_6450191115912157957 || (otherRec.sym__0__7921907673157171693 != sym__0__7921907673157171693 || (otherRec.sym__0___45_1699747741436218441 != sym__0___45_1699747741436218441 || (otherRec.sym__0___45_2985562469054236715 != sym__0___45_2985562469054236715 || (otherRec.sym__0__3746029949899912401 != sym__0__3746029949899912401 || (otherRec.sym__0___45_989155948099215770 != sym__0___45_989155948099215770 || (otherRec.sym__0___45_1667761180508152936 != sym__0___45_1667761180508152936 || (otherRec.sym__0__5854462121170882944 != sym__0__5854462121170882944 || (otherRec.sym__0___45_1023382914117654422 != sym__0___45_1023382914117654422 || (otherRec.sym__0__6224010339127806049 != sym__0__6224010339127806049 || (otherRec.sym__0___45_8804639047977952305 != sym__0___45_8804639047977952305 || (otherRec.sym__0__8926375957639307021 != sym__0__8926375957639307021 || (otherRec.sym__0__5153200798583684363 != sym__0__5153200798583684363 || (otherRec.sym__0___45_794494697990656050 != sym__0___45_794494697990656050 || otherRec.sym__0__7308161412148661473 != sym__0__7308161412148661473)))))))))))))))))))))))))))))));
  }
  unsigned sym__0__2833764152503888409;
  fluidb_string<18> sym__0__6938021140779677761;
  fluidb_string<40> sym__0___45_4700201805806600089;
  fluidb_string<11> sym__0__3362667619044778557;
  fluidb_string<15> sym__0__2679827580767046755;
  fluidb_string<13> sym__0___45_4186304031693649930;
  fluidb_string<15> sym__0__8596564865999609793;
  fluidb_string<21> sym__0___45_1671053890158572571;
  unsigned sym__0__2256924431415148013;
  int sym__0__347872876320563651;
  unsigned sym__0___45_7666447219434903317;
  unsigned sym__0__1272718151591622153;
  unsigned sym__0__4584633926271658914;
  unsigned sym__0___45_4610773208091240233;
  fluidb_string<21> sym__0___45_5766638191766435038;
  unsigned sym__0___45_5211223358204127380;
  fluidb_string<10> sym__0__8435431464460332395;
  unsigned sym__0___45_6450191115912157957;
  double sym__0__7921907673157171693;
  unsigned sym__0___45_1699747741436218441;
  double sym__0___45_2985562469054236715;
  unsigned sym__0__3746029949899912401;
  unsigned sym__0___45_989155948099215770;
  double sym__0___45_1667761180508152936;
  fluidb_string<13> sym__0__5854462121170882944;
  unsigned sym__0___45_1023382914117654422;
  fluidb_string<25> sym__0__6224010339127806049;
  fluidb_string<40> sym__0___45_8804639047977952305;
  fluidb_string<16> sym__0__8926375957639307021;
  fluidb_string<16> sym__0__5153200798583684363;
  fluidb_string<13> sym__0___45_794494697990656050;
  fluidb_string<15> sym__0__7308161412148661473;
 private:
};


class Record1 {
 public:
  Record1(unsigned __sym__0___45_2600703832754715382, fluidb_string<18> __sym__0___45_7578273935239857990, fluidb_string<9> __sym__0__875191355534311252, fluidb_string<9> __sym__0___45_6042256660357361193, unsigned __sym__0__2251162898911166857, unsigned __sym__0__8322995032561243047, fluidb_string<7> __sym__0__3359760786864885346, unsigned __sym__0__4755955500146647717, unsigned __sym__0__825634143835399618, unsigned __sym__0___45_5673193308586008598, unsigned __sym__0__2344416604488212124, unsigned __sym__0__996127159005129399, fluidb_string<15> __sym__0___45_8445295692641080722, fluidb_string<2> __sym__0___45_9133478590074263962, fluidb_string<2> __sym__0___45_1949673146646224253, fluidb_string<2> __sym__0___45_3693142685708191253, fluidb_string<2> __sym__0___45_7021098367134788127, unsigned __sym__0___45_1631867111754601434, int __sym__0__5956167765210805980, unsigned __sym__0___45_4504547450980902284, unsigned __sym__0__2571611128943656626, unsigned __sym__0___45_7797291820866539495, unsigned __sym__0__8112696983606547888, fluidb_string<21> __sym__0___45_8859514051634859623, unsigned __sym__0__1155613969670303859, fluidb_string<10> __sym__0__6875278589307593972, unsigned __sym__0___45_961680512448388956, double __sym__0___45_674541735213940698, unsigned __sym__0___45_821091676724229936, double __sym__0___45_4702801186563994626, unsigned __sym__0___45_3023845865529546326, unsigned __sym__0__5284478023732558701, double __sym__0__253975703545414575, fluidb_string<13> __sym__0__2038562371344131399, unsigned __sym__0___45_6180681665671689455, fluidb_string<25> __sym__0___45_7492215985175491366, fluidb_string<40> __sym__0__3108260102440442872, fluidb_string<16> __sym__0__4242088751554333190, fluidb_string<16> __sym__0__4419222406440371028, fluidb_string<13> __sym__0___45_4395878808383970875, fluidb_string<15> __sym__0__5421156455815400282, unsigned __sym__0__1445832851994825762, fluidb_string<18> __sym__0__4538888751267676410, fluidb_string<40> __sym__0__6214774548635804832, fluidb_string<11> __sym__0__5647889798153721686, fluidb_string<15> __sym__0__7215382845017137468, fluidb_string<13> __sym__0___45_7064023331726131555, fluidb_string<15> __sym__0__2464748358755927674, fluidb_string<21> __sym__0__1701416785032206702) : sym__0___45_2600703832754715382(__sym__0___45_2600703832754715382), sym__0___45_7578273935239857990(__sym__0___45_7578273935239857990), sym__0__875191355534311252(__sym__0__875191355534311252), sym__0___45_6042256660357361193(__sym__0___45_6042256660357361193), sym__0__2251162898911166857(__sym__0__2251162898911166857), sym__0__8322995032561243047(__sym__0__8322995032561243047), sym__0__3359760786864885346(__sym__0__3359760786864885346), sym__0__4755955500146647717(__sym__0__4755955500146647717), sym__0__825634143835399618(__sym__0__825634143835399618), sym__0___45_5673193308586008598(__sym__0___45_5673193308586008598), sym__0__2344416604488212124(__sym__0__2344416604488212124), sym__0__996127159005129399(__sym__0__996127159005129399), sym__0___45_8445295692641080722(__sym__0___45_8445295692641080722), sym__0___45_9133478590074263962(__sym__0___45_9133478590074263962), sym__0___45_1949673146646224253(__sym__0___45_1949673146646224253), sym__0___45_3693142685708191253(__sym__0___45_3693142685708191253), sym__0___45_7021098367134788127(__sym__0___45_7021098367134788127), sym__0___45_1631867111754601434(__sym__0___45_1631867111754601434), sym__0__5956167765210805980(__sym__0__5956167765210805980), sym__0___45_4504547450980902284(__sym__0___45_4504547450980902284), sym__0__2571611128943656626(__sym__0__2571611128943656626), sym__0___45_7797291820866539495(__sym__0___45_7797291820866539495), sym__0__8112696983606547888(__sym__0__8112696983606547888), sym__0___45_8859514051634859623(__sym__0___45_8859514051634859623), sym__0__1155613969670303859(__sym__0__1155613969670303859), sym__0__6875278589307593972(__sym__0__6875278589307593972), sym__0___45_961680512448388956(__sym__0___45_961680512448388956), sym__0___45_674541735213940698(__sym__0___45_674541735213940698), sym__0___45_821091676724229936(__sym__0___45_821091676724229936), sym__0___45_4702801186563994626(__sym__0___45_4702801186563994626), sym__0___45_3023845865529546326(__sym__0___45_3023845865529546326), sym__0__5284478023732558701(__sym__0__5284478023732558701), sym__0__253975703545414575(__sym__0__253975703545414575), sym__0__2038562371344131399(__sym__0__2038562371344131399), sym__0___45_6180681665671689455(__sym__0___45_6180681665671689455), sym__0___45_7492215985175491366(__sym__0___45_7492215985175491366), sym__0__3108260102440442872(__sym__0__3108260102440442872), sym__0__4242088751554333190(__sym__0__4242088751554333190), sym__0__4419222406440371028(__sym__0__4419222406440371028), sym__0___45_4395878808383970875(__sym__0___45_4395878808383970875), sym__0__5421156455815400282(__sym__0__5421156455815400282), sym__0__1445832851994825762(__sym__0__1445832851994825762), sym__0__4538888751267676410(__sym__0__4538888751267676410), sym__0__6214774548635804832(__sym__0__6214774548635804832), sym__0__5647889798153721686(__sym__0__5647889798153721686), sym__0__7215382845017137468(__sym__0__7215382845017137468), sym__0___45_7064023331726131555(__sym__0___45_7064023331726131555), sym__0__2464748358755927674(__sym__0__2464748358755927674), sym__0__1701416785032206702(__sym__0__1701416785032206702)
  {
  }
  Record1() 
  {
  }
  std::string show() const{
    std::stringstream o;
    o << sym__0___45_2600703832754715382 << " | " << arrToString(sym__0___45_7578273935239857990) << " | " << arrToString(sym__0__875191355534311252) << " | " << arrToString(sym__0___45_6042256660357361193) << " | " << sym__0__2251162898911166857 << " | " << sym__0__8322995032561243047 << " | " << arrToString(sym__0__3359760786864885346) << " | " << sym__0__4755955500146647717 << " | " << sym__0__825634143835399618 << " | " << sym__0___45_5673193308586008598 << " | " << sym__0__2344416604488212124 << " | " << sym__0__996127159005129399 << " | " << arrToString(sym__0___45_8445295692641080722) << " | " << arrToString(sym__0___45_9133478590074263962) << " | " << arrToString(sym__0___45_1949673146646224253) << " | " << arrToString(sym__0___45_3693142685708191253) << " | " << arrToString(sym__0___45_7021098367134788127) << " | " << sym__0___45_1631867111754601434 << " | " << sym__0__5956167765210805980 << " | " << sym__0___45_4504547450980902284 << " | " << sym__0__2571611128943656626 << " | " << sym__0___45_7797291820866539495 << " | " << sym__0__8112696983606547888 << " | " << arrToString(sym__0___45_8859514051634859623) << " | " << sym__0__1155613969670303859 << " | " << arrToString(sym__0__6875278589307593972) << " | " << sym__0___45_961680512448388956 << " | " << sym__0___45_674541735213940698 << " | " << sym__0___45_821091676724229936 << " | " << sym__0___45_4702801186563994626 << " | " << sym__0___45_3023845865529546326 << " | " << sym__0__5284478023732558701 << " | " << sym__0__253975703545414575 << " | " << arrToString(sym__0__2038562371344131399) << " | " << sym__0___45_6180681665671689455 << " | " << arrToString(sym__0___45_7492215985175491366) << " | " << arrToString(sym__0__3108260102440442872) << " | " << arrToString(sym__0__4242088751554333190) << " | " << arrToString(sym__0__4419222406440371028) << " | " << arrToString(sym__0___45_4395878808383970875) << " | " << arrToString(sym__0__5421156455815400282) << " | " << sym__0__1445832851994825762 << " | " << arrToString(sym__0__4538888751267676410) << " | " << arrToString(sym__0__6214774548635804832) << " | " << arrToString(sym__0__5647889798153721686) << " | " << arrToString(sym__0__7215382845017137468) << " | " << arrToString(sym__0___45_7064023331726131555) << " | " << arrToString(sym__0__2464748358755927674) << " | " << arrToString(sym__0__1701416785032206702);
    return o.str();
  }
  bool operator <(const Record1& otherRec) const{
    return (otherRec.sym__0___45_2600703832754715382 < sym__0___45_2600703832754715382 && (otherRec.sym__0___45_7578273935239857990 < sym__0___45_7578273935239857990 && (otherRec.sym__0__875191355534311252 < sym__0__875191355534311252 && (otherRec.sym__0___45_6042256660357361193 < sym__0___45_6042256660357361193 && (otherRec.sym__0__2251162898911166857 < sym__0__2251162898911166857 && (otherRec.sym__0__8322995032561243047 < sym__0__8322995032561243047 && (otherRec.sym__0__3359760786864885346 < sym__0__3359760786864885346 && (otherRec.sym__0__4755955500146647717 < sym__0__4755955500146647717 && (otherRec.sym__0__825634143835399618 < sym__0__825634143835399618 && (otherRec.sym__0___45_5673193308586008598 < sym__0___45_5673193308586008598 && (otherRec.sym__0__2344416604488212124 < sym__0__2344416604488212124 && (otherRec.sym__0__996127159005129399 < sym__0__996127159005129399 && (otherRec.sym__0___45_8445295692641080722 < sym__0___45_8445295692641080722 && (otherRec.sym__0___45_9133478590074263962 < sym__0___45_9133478590074263962 && (otherRec.sym__0___45_1949673146646224253 < sym__0___45_1949673146646224253 && (otherRec.sym__0___45_3693142685708191253 < sym__0___45_3693142685708191253 && (otherRec.sym__0___45_7021098367134788127 < sym__0___45_7021098367134788127 && (otherRec.sym__0___45_1631867111754601434 < sym__0___45_1631867111754601434 && (otherRec.sym__0__5956167765210805980 < sym__0__5956167765210805980 && (otherRec.sym__0___45_4504547450980902284 < sym__0___45_4504547450980902284 && (otherRec.sym__0__2571611128943656626 < sym__0__2571611128943656626 && (otherRec.sym__0___45_7797291820866539495 < sym__0___45_7797291820866539495 && (otherRec.sym__0__8112696983606547888 < sym__0__8112696983606547888 && (otherRec.sym__0___45_8859514051634859623 < sym__0___45_8859514051634859623 && (otherRec.sym__0__1155613969670303859 < sym__0__1155613969670303859 && (otherRec.sym__0__6875278589307593972 < sym__0__6875278589307593972 && (otherRec.sym__0___45_961680512448388956 < sym__0___45_961680512448388956 && (otherRec.sym__0___45_674541735213940698 < sym__0___45_674541735213940698 && (otherRec.sym__0___45_821091676724229936 < sym__0___45_821091676724229936 && (otherRec.sym__0___45_4702801186563994626 < sym__0___45_4702801186563994626 && (otherRec.sym__0___45_3023845865529546326 < sym__0___45_3023845865529546326 && (otherRec.sym__0__5284478023732558701 < sym__0__5284478023732558701 && (otherRec.sym__0__253975703545414575 < sym__0__253975703545414575 && (otherRec.sym__0__2038562371344131399 < sym__0__2038562371344131399 && (otherRec.sym__0___45_6180681665671689455 < sym__0___45_6180681665671689455 && (otherRec.sym__0___45_7492215985175491366 < sym__0___45_7492215985175491366 && (otherRec.sym__0__3108260102440442872 < sym__0__3108260102440442872 && (otherRec.sym__0__4242088751554333190 < sym__0__4242088751554333190 && (otherRec.sym__0__4419222406440371028 < sym__0__4419222406440371028 && (otherRec.sym__0___45_4395878808383970875 < sym__0___45_4395878808383970875 && (otherRec.sym__0__5421156455815400282 < sym__0__5421156455815400282 && (otherRec.sym__0__1445832851994825762 < sym__0__1445832851994825762 && (otherRec.sym__0__4538888751267676410 < sym__0__4538888751267676410 && (otherRec.sym__0__6214774548635804832 < sym__0__6214774548635804832 && (otherRec.sym__0__5647889798153721686 < sym__0__5647889798153721686 && (otherRec.sym__0__7215382845017137468 < sym__0__7215382845017137468 && (otherRec.sym__0___45_7064023331726131555 < sym__0___45_7064023331726131555 && (otherRec.sym__0__2464748358755927674 < sym__0__2464748358755927674 && otherRec.sym__0__1701416785032206702 < sym__0__1701416785032206702))))))))))))))))))))))))))))))))))))))))))))))));
  }
  bool operator ==(const Record1& otherRec) const{
    return (otherRec.sym__0___45_2600703832754715382 == sym__0___45_2600703832754715382 && (otherRec.sym__0___45_7578273935239857990 == sym__0___45_7578273935239857990 && (otherRec.sym__0__875191355534311252 == sym__0__875191355534311252 && (otherRec.sym__0___45_6042256660357361193 == sym__0___45_6042256660357361193 && (otherRec.sym__0__2251162898911166857 == sym__0__2251162898911166857 && (otherRec.sym__0__8322995032561243047 == sym__0__8322995032561243047 && (otherRec.sym__0__3359760786864885346 == sym__0__3359760786864885346 && (otherRec.sym__0__4755955500146647717 == sym__0__4755955500146647717 && (otherRec.sym__0__825634143835399618 == sym__0__825634143835399618 && (otherRec.sym__0___45_5673193308586008598 == sym__0___45_5673193308586008598 && (otherRec.sym__0__2344416604488212124 == sym__0__2344416604488212124 && (otherRec.sym__0__996127159005129399 == sym__0__996127159005129399 && (otherRec.sym__0___45_8445295692641080722 == sym__0___45_8445295692641080722 && (otherRec.sym__0___45_9133478590074263962 == sym__0___45_9133478590074263962 && (otherRec.sym__0___45_1949673146646224253 == sym__0___45_1949673146646224253 && (otherRec.sym__0___45_3693142685708191253 == sym__0___45_3693142685708191253 && (otherRec.sym__0___45_7021098367134788127 == sym__0___45_7021098367134788127 && (otherRec.sym__0___45_1631867111754601434 == sym__0___45_1631867111754601434 && (otherRec.sym__0__5956167765210805980 == sym__0__5956167765210805980 && (otherRec.sym__0___45_4504547450980902284 == sym__0___45_4504547450980902284 && (otherRec.sym__0__2571611128943656626 == sym__0__2571611128943656626 && (otherRec.sym__0___45_7797291820866539495 == sym__0___45_7797291820866539495 && (otherRec.sym__0__8112696983606547888 == sym__0__8112696983606547888 && (otherRec.sym__0___45_8859514051634859623 == sym__0___45_8859514051634859623 && (otherRec.sym__0__1155613969670303859 == sym__0__1155613969670303859 && (otherRec.sym__0__6875278589307593972 == sym__0__6875278589307593972 && (otherRec.sym__0___45_961680512448388956 == sym__0___45_961680512448388956 && (otherRec.sym__0___45_674541735213940698 == sym__0___45_674541735213940698 && (otherRec.sym__0___45_821091676724229936 == sym__0___45_821091676724229936 && (otherRec.sym__0___45_4702801186563994626 == sym__0___45_4702801186563994626 && (otherRec.sym__0___45_3023845865529546326 == sym__0___45_3023845865529546326 && (otherRec.sym__0__5284478023732558701 == sym__0__5284478023732558701 && (otherRec.sym__0__253975703545414575 == sym__0__253975703545414575 && (otherRec.sym__0__2038562371344131399 == sym__0__2038562371344131399 && (otherRec.sym__0___45_6180681665671689455 == sym__0___45_6180681665671689455 && (otherRec.sym__0___45_7492215985175491366 == sym__0___45_7492215985175491366 && (otherRec.sym__0__3108260102440442872 == sym__0__3108260102440442872 && (otherRec.sym__0__4242088751554333190 == sym__0__4242088751554333190 && (otherRec.sym__0__4419222406440371028 == sym__0__4419222406440371028 && (otherRec.sym__0___45_4395878808383970875 == sym__0___45_4395878808383970875 && (otherRec.sym__0__5421156455815400282 == sym__0__5421156455815400282 && (otherRec.sym__0__1445832851994825762 == sym__0__1445832851994825762 && (otherRec.sym__0__4538888751267676410 == sym__0__4538888751267676410 && (otherRec.sym__0__6214774548635804832 == sym__0__6214774548635804832 && (otherRec.sym__0__5647889798153721686 == sym__0__5647889798153721686 && (otherRec.sym__0__7215382845017137468 == sym__0__7215382845017137468 && (otherRec.sym__0___45_7064023331726131555 == sym__0___45_7064023331726131555 && (otherRec.sym__0__2464748358755927674 == sym__0__2464748358755927674 && otherRec.sym__0__1701416785032206702 == sym__0__1701416785032206702))))))))))))))))))))))))))))))))))))))))))))))));
  }
  bool operator !=(const Record1& otherRec) const{
    return (otherRec.sym__0___45_2600703832754715382 != sym__0___45_2600703832754715382 || (otherRec.sym__0___45_7578273935239857990 != sym__0___45_7578273935239857990 || (otherRec.sym__0__875191355534311252 != sym__0__875191355534311252 || (otherRec.sym__0___45_6042256660357361193 != sym__0___45_6042256660357361193 || (otherRec.sym__0__2251162898911166857 != sym__0__2251162898911166857 || (otherRec.sym__0__8322995032561243047 != sym__0__8322995032561243047 || (otherRec.sym__0__3359760786864885346 != sym__0__3359760786864885346 || (otherRec.sym__0__4755955500146647717 != sym__0__4755955500146647717 || (otherRec.sym__0__825634143835399618 != sym__0__825634143835399618 || (otherRec.sym__0___45_5673193308586008598 != sym__0___45_5673193308586008598 || (otherRec.sym__0__2344416604488212124 != sym__0__2344416604488212124 || (otherRec.sym__0__996127159005129399 != sym__0__996127159005129399 || (otherRec.sym__0___45_8445295692641080722 != sym__0___45_8445295692641080722 || (otherRec.sym__0___45_9133478590074263962 != sym__0___45_9133478590074263962 || (otherRec.sym__0___45_1949673146646224253 != sym__0___45_1949673146646224253 || (otherRec.sym__0___45_3693142685708191253 != sym__0___45_3693142685708191253 || (otherRec.sym__0___45_7021098367134788127 != sym__0___45_7021098367134788127 || (otherRec.sym__0___45_1631867111754601434 != sym__0___45_1631867111754601434 || (otherRec.sym__0__5956167765210805980 != sym__0__5956167765210805980 || (otherRec.sym__0___45_4504547450980902284 != sym__0___45_4504547450980902284 || (otherRec.sym__0__2571611128943656626 != sym__0__2571611128943656626 || (otherRec.sym__0___45_7797291820866539495 != sym__0___45_7797291820866539495 || (otherRec.sym__0__8112696983606547888 != sym__0__8112696983606547888 || (otherRec.sym__0___45_8859514051634859623 != sym__0___45_8859514051634859623 || (otherRec.sym__0__1155613969670303859 != sym__0__1155613969670303859 || (otherRec.sym__0__6875278589307593972 != sym__0__6875278589307593972 || (otherRec.sym__0___45_961680512448388956 != sym__0___45_961680512448388956 || (otherRec.sym__0___45_674541735213940698 != sym__0___45_674541735213940698 || (otherRec.sym__0___45_821091676724229936 != sym__0___45_821091676724229936 || (otherRec.sym__0___45_4702801186563994626 != sym__0___45_4702801186563994626 || (otherRec.sym__0___45_3023845865529546326 != sym__0___45_3023845865529546326 || (otherRec.sym__0__5284478023732558701 != sym__0__5284478023732558701 || (otherRec.sym__0__253975703545414575 != sym__0__253975703545414575 || (otherRec.sym__0__2038562371344131399 != sym__0__2038562371344131399 || (otherRec.sym__0___45_6180681665671689455 != sym__0___45_6180681665671689455 || (otherRec.sym__0___45_7492215985175491366 != sym__0___45_7492215985175491366 || (otherRec.sym__0__3108260102440442872 != sym__0__3108260102440442872 || (otherRec.sym__0__4242088751554333190 != sym__0__4242088751554333190 || (otherRec.sym__0__4419222406440371028 != sym__0__4419222406440371028 || (otherRec.sym__0___45_4395878808383970875 != sym__0___45_4395878808383970875 || (otherRec.sym__0__5421156455815400282 != sym__0__5421156455815400282 || (otherRec.sym__0__1445832851994825762 != sym__0__1445832851994825762 || (otherRec.sym__0__4538888751267676410 != sym__0__4538888751267676410 || (otherRec.sym__0__6214774548635804832 != sym__0__6214774548635804832 || (otherRec.sym__0__5647889798153721686 != sym__0__5647889798153721686 || (otherRec.sym__0__7215382845017137468 != sym__0__7215382845017137468 || (otherRec.sym__0___45_7064023331726131555 != sym__0___45_7064023331726131555 || (otherRec.sym__0__2464748358755927674 != sym__0__2464748358755927674 || otherRec.sym__0__1701416785032206702 != sym__0__1701416785032206702))))))))))))))))))))))))))))))))))))))))))))))));
  }
  unsigned sym__0___45_2600703832754715382;
  fluidb_string<18> sym__0___45_7578273935239857990;
  fluidb_string<9> sym__0__875191355534311252;
  fluidb_string<9> sym__0___45_6042256660357361193;
  unsigned sym__0__2251162898911166857;
  unsigned sym__0__8322995032561243047;
  fluidb_string<7> sym__0__3359760786864885346;
  unsigned sym__0__4755955500146647717;
  unsigned sym__0__825634143835399618;
  unsigned sym__0___45_5673193308586008598;
  unsigned sym__0__2344416604488212124;
  unsigned sym__0__996127159005129399;
  fluidb_string<15> sym__0___45_8445295692641080722;
  fluidb_string<2> sym__0___45_9133478590074263962;
  fluidb_string<2> sym__0___45_1949673146646224253;
  fluidb_string<2> sym__0___45_3693142685708191253;
  fluidb_string<2> sym__0___45_7021098367134788127;
  unsigned sym__0___45_1631867111754601434;
  int sym__0__5956167765210805980;
  unsigned sym__0___45_4504547450980902284;
  unsigned sym__0__2571611128943656626;
  unsigned sym__0___45_7797291820866539495;
  unsigned sym__0__8112696983606547888;
  fluidb_string<21> sym__0___45_8859514051634859623;
  unsigned sym__0__1155613969670303859;
  fluidb_string<10> sym__0__6875278589307593972;
  unsigned sym__0___45_961680512448388956;
  double sym__0___45_674541735213940698;
  unsigned sym__0___45_821091676724229936;
  double sym__0___45_4702801186563994626;
  unsigned sym__0___45_3023845865529546326;
  unsigned sym__0__5284478023732558701;
  double sym__0__253975703545414575;
  fluidb_string<13> sym__0__2038562371344131399;
  unsigned sym__0___45_6180681665671689455;
  fluidb_string<25> sym__0___45_7492215985175491366;
  fluidb_string<40> sym__0__3108260102440442872;
  fluidb_string<16> sym__0__4242088751554333190;
  fluidb_string<16> sym__0__4419222406440371028;
  fluidb_string<13> sym__0___45_4395878808383970875;
  fluidb_string<15> sym__0__5421156455815400282;
  unsigned sym__0__1445832851994825762;
  fluidb_string<18> sym__0__4538888751267676410;
  fluidb_string<40> sym__0__6214774548635804832;
  fluidb_string<11> sym__0__5647889798153721686;
  fluidb_string<15> sym__0__7215382845017137468;
  fluidb_string<13> sym__0___45_7064023331726131555;
  fluidb_string<15> sym__0__2464748358755927674;
  fluidb_string<21> sym__0__1701416785032206702;
 private:
};


class Record33 {
 public:
  Record33(unsigned __sym__0___45_6023382929443007574, fluidb_string<25> __sym__0__3757555673004122949, fluidb_string<40> __sym__0__1932846229845525767, fluidb_string<16> __sym__0__4059433216492140793, fluidb_string<16> __sym__0___45_6828435464829114933, fluidb_string<13> __sym__0___45_8594673557260853450, fluidb_string<15> __sym__0__5584077748228284101, unsigned __sym__0___45_6850792598014803495, int __sym__0__126286655963242787, unsigned __sym__0__7152997497642012715, unsigned __sym__0__8152468447104541133, unsigned __sym__0___45_2162238796830376958, unsigned __sym__0__6201860754099051215, fluidb_string<21> __sym__0___45_5824526894106372990, unsigned __sym__0__4416113698023424168, fluidb_string<10> __sym__0___45_8427015020456163925, unsigned __sym__0__7002917659038590267, double __sym__0___45_6078771451505033767, unsigned __sym__0___45_5377847250793394897, double __sym__0__3980922738646169089, unsigned __sym__0___45_7099380938835867851, unsigned __sym__0__3234079111686344366, double __sym__0___45_7202603516002620404, fluidb_string<13> __sym__0__3246987919693648052, unsigned __sym__0___45_8983388521167719339, fluidb_string<18> __sym__0__7124422447978342501, fluidb_string<9> __sym__0___45_2999373940918343221, fluidb_string<9> __sym__0__9137930316880372580, unsigned __sym__0___45_6042632947114846446, unsigned __sym__0___45_6531105215362525228, fluidb_string<7> __sym__0___45_8818609540528204259, unsigned __sym__0___45_5244059388672011050, unsigned __sym__0___45_5105300302502028867, unsigned __sym__0___45_7093949592046849419, unsigned __sym__0___45_6761595971726391581, unsigned __sym__0___45_8542939857596337916, fluidb_string<15> __sym__0___45_7160886385939247343, fluidb_string<2> __sym__0__5745707657729186073, fluidb_string<2> __sym__0__3650682066716895000, fluidb_string<2> __sym__0__1619161068731802128, fluidb_string<2> __sym__0___45_3903279639330610662, unsigned __sym__0__8482931350020393083, fluidb_string<55> __sym__0___45_1661804984053491733, fluidb_string<25> __sym__0__5835224130676269208, fluidb_string<7> __sym__0__603002359744084410, fluidb_string<10> __sym__0__7152062580423916744, fluidb_string<11> __sym__0___45_6711767232839951748, fluidb_string<25> __sym__0__5249709580748201526, unsigned __sym__0___45_196550042660278143, fluidb_string<10> __sym__0__7818803168203943400) : sym__0___45_6023382929443007574(__sym__0___45_6023382929443007574), sym__0__3757555673004122949(__sym__0__3757555673004122949), sym__0__1932846229845525767(__sym__0__1932846229845525767), sym__0__4059433216492140793(__sym__0__4059433216492140793), sym__0___45_6828435464829114933(__sym__0___45_6828435464829114933), sym__0___45_8594673557260853450(__sym__0___45_8594673557260853450), sym__0__5584077748228284101(__sym__0__5584077748228284101), sym__0___45_6850792598014803495(__sym__0___45_6850792598014803495), sym__0__126286655963242787(__sym__0__126286655963242787), sym__0__7152997497642012715(__sym__0__7152997497642012715), sym__0__8152468447104541133(__sym__0__8152468447104541133), sym__0___45_2162238796830376958(__sym__0___45_2162238796830376958), sym__0__6201860754099051215(__sym__0__6201860754099051215), sym__0___45_5824526894106372990(__sym__0___45_5824526894106372990), sym__0__4416113698023424168(__sym__0__4416113698023424168), sym__0___45_8427015020456163925(__sym__0___45_8427015020456163925), sym__0__7002917659038590267(__sym__0__7002917659038590267), sym__0___45_6078771451505033767(__sym__0___45_6078771451505033767), sym__0___45_5377847250793394897(__sym__0___45_5377847250793394897), sym__0__3980922738646169089(__sym__0__3980922738646169089), sym__0___45_7099380938835867851(__sym__0___45_7099380938835867851), sym__0__3234079111686344366(__sym__0__3234079111686344366), sym__0___45_7202603516002620404(__sym__0___45_7202603516002620404), sym__0__3246987919693648052(__sym__0__3246987919693648052), sym__0___45_8983388521167719339(__sym__0___45_8983388521167719339), sym__0__7124422447978342501(__sym__0__7124422447978342501), sym__0___45_2999373940918343221(__sym__0___45_2999373940918343221), sym__0__9137930316880372580(__sym__0__9137930316880372580), sym__0___45_6042632947114846446(__sym__0___45_6042632947114846446), sym__0___45_6531105215362525228(__sym__0___45_6531105215362525228), sym__0___45_8818609540528204259(__sym__0___45_8818609540528204259), sym__0___45_5244059388672011050(__sym__0___45_5244059388672011050), sym__0___45_5105300302502028867(__sym__0___45_5105300302502028867), sym__0___45_7093949592046849419(__sym__0___45_7093949592046849419), sym__0___45_6761595971726391581(__sym__0___45_6761595971726391581), sym__0___45_8542939857596337916(__sym__0___45_8542939857596337916), sym__0___45_7160886385939247343(__sym__0___45_7160886385939247343), sym__0__5745707657729186073(__sym__0__5745707657729186073), sym__0__3650682066716895000(__sym__0__3650682066716895000), sym__0__1619161068731802128(__sym__0__1619161068731802128), sym__0___45_3903279639330610662(__sym__0___45_3903279639330610662), sym__0__8482931350020393083(__sym__0__8482931350020393083), sym__0___45_1661804984053491733(__sym__0___45_1661804984053491733), sym__0__5835224130676269208(__sym__0__5835224130676269208), sym__0__603002359744084410(__sym__0__603002359744084410), sym__0__7152062580423916744(__sym__0__7152062580423916744), sym__0___45_6711767232839951748(__sym__0___45_6711767232839951748), sym__0__5249709580748201526(__sym__0__5249709580748201526), sym__0___45_196550042660278143(__sym__0___45_196550042660278143), sym__0__7818803168203943400(__sym__0__7818803168203943400)
  {
  }
  Record33() 
  {
  }
  std::string show() const{
    std::stringstream o;
    o << sym__0___45_6023382929443007574 << " | " << arrToString(sym__0__3757555673004122949) << " | " << arrToString(sym__0__1932846229845525767) << " | " << arrToString(sym__0__4059433216492140793) << " | " << arrToString(sym__0___45_6828435464829114933) << " | " << arrToString(sym__0___45_8594673557260853450) << " | " << arrToString(sym__0__5584077748228284101) << " | " << sym__0___45_6850792598014803495 << " | " << sym__0__126286655963242787 << " | " << sym__0__7152997497642012715 << " | " << sym__0__8152468447104541133 << " | " << sym__0___45_2162238796830376958 << " | " << sym__0__6201860754099051215 << " | " << arrToString(sym__0___45_5824526894106372990) << " | " << sym__0__4416113698023424168 << " | " << arrToString(sym__0___45_8427015020456163925) << " | " << sym__0__7002917659038590267 << " | " << sym__0___45_6078771451505033767 << " | " << sym__0___45_5377847250793394897 << " | " << sym__0__3980922738646169089 << " | " << sym__0___45_7099380938835867851 << " | " << sym__0__3234079111686344366 << " | " << sym__0___45_7202603516002620404 << " | " << arrToString(sym__0__3246987919693648052) << " | " << sym__0___45_8983388521167719339 << " | " << arrToString(sym__0__7124422447978342501) << " | " << arrToString(sym__0___45_2999373940918343221) << " | " << arrToString(sym__0__9137930316880372580) << " | " << sym__0___45_6042632947114846446 << " | " << sym__0___45_6531105215362525228 << " | " << arrToString(sym__0___45_8818609540528204259) << " | " << sym__0___45_5244059388672011050 << " | " << sym__0___45_5105300302502028867 << " | " << sym__0___45_7093949592046849419 << " | " << sym__0___45_6761595971726391581 << " | " << sym__0___45_8542939857596337916 << " | " << arrToString(sym__0___45_7160886385939247343) << " | " << arrToString(sym__0__5745707657729186073) << " | " << arrToString(sym__0__3650682066716895000) << " | " << arrToString(sym__0__1619161068731802128) << " | " << arrToString(sym__0___45_3903279639330610662) << " | " << sym__0__8482931350020393083 << " | " << arrToString(sym__0___45_1661804984053491733) << " | " << arrToString(sym__0__5835224130676269208) << " | " << arrToString(sym__0__603002359744084410) << " | " << arrToString(sym__0__7152062580423916744) << " | " << arrToString(sym__0___45_6711767232839951748) << " | " << arrToString(sym__0__5249709580748201526) << " | " << sym__0___45_196550042660278143 << " | " << arrToString(sym__0__7818803168203943400);
    return o.str();
  }
  bool operator <(const Record33& otherRec) const{
    return (otherRec.sym__0___45_6023382929443007574 < sym__0___45_6023382929443007574 && (otherRec.sym__0__3757555673004122949 < sym__0__3757555673004122949 && (otherRec.sym__0__1932846229845525767 < sym__0__1932846229845525767 && (otherRec.sym__0__4059433216492140793 < sym__0__4059433216492140793 && (otherRec.sym__0___45_6828435464829114933 < sym__0___45_6828435464829114933 && (otherRec.sym__0___45_8594673557260853450 < sym__0___45_8594673557260853450 && (otherRec.sym__0__5584077748228284101 < sym__0__5584077748228284101 && (otherRec.sym__0___45_6850792598014803495 < sym__0___45_6850792598014803495 && (otherRec.sym__0__126286655963242787 < sym__0__126286655963242787 && (otherRec.sym__0__7152997497642012715 < sym__0__7152997497642012715 && (otherRec.sym__0__8152468447104541133 < sym__0__8152468447104541133 && (otherRec.sym__0___45_2162238796830376958 < sym__0___45_2162238796830376958 && (otherRec.sym__0__6201860754099051215 < sym__0__6201860754099051215 && (otherRec.sym__0___45_5824526894106372990 < sym__0___45_5824526894106372990 && (otherRec.sym__0__4416113698023424168 < sym__0__4416113698023424168 && (otherRec.sym__0___45_8427015020456163925 < sym__0___45_8427015020456163925 && (otherRec.sym__0__7002917659038590267 < sym__0__7002917659038590267 && (otherRec.sym__0___45_6078771451505033767 < sym__0___45_6078771451505033767 && (otherRec.sym__0___45_5377847250793394897 < sym__0___45_5377847250793394897 && (otherRec.sym__0__3980922738646169089 < sym__0__3980922738646169089 && (otherRec.sym__0___45_7099380938835867851 < sym__0___45_7099380938835867851 && (otherRec.sym__0__3234079111686344366 < sym__0__3234079111686344366 && (otherRec.sym__0___45_7202603516002620404 < sym__0___45_7202603516002620404 && (otherRec.sym__0__3246987919693648052 < sym__0__3246987919693648052 && (otherRec.sym__0___45_8983388521167719339 < sym__0___45_8983388521167719339 && (otherRec.sym__0__7124422447978342501 < sym__0__7124422447978342501 && (otherRec.sym__0___45_2999373940918343221 < sym__0___45_2999373940918343221 && (otherRec.sym__0__9137930316880372580 < sym__0__9137930316880372580 && (otherRec.sym__0___45_6042632947114846446 < sym__0___45_6042632947114846446 && (otherRec.sym__0___45_6531105215362525228 < sym__0___45_6531105215362525228 && (otherRec.sym__0___45_8818609540528204259 < sym__0___45_8818609540528204259 && (otherRec.sym__0___45_5244059388672011050 < sym__0___45_5244059388672011050 && (otherRec.sym__0___45_5105300302502028867 < sym__0___45_5105300302502028867 && (otherRec.sym__0___45_7093949592046849419 < sym__0___45_7093949592046849419 && (otherRec.sym__0___45_6761595971726391581 < sym__0___45_6761595971726391581 && (otherRec.sym__0___45_8542939857596337916 < sym__0___45_8542939857596337916 && (otherRec.sym__0___45_7160886385939247343 < sym__0___45_7160886385939247343 && (otherRec.sym__0__5745707657729186073 < sym__0__5745707657729186073 && (otherRec.sym__0__3650682066716895000 < sym__0__3650682066716895000 && (otherRec.sym__0__1619161068731802128 < sym__0__1619161068731802128 && (otherRec.sym__0___45_3903279639330610662 < sym__0___45_3903279639330610662 && (otherRec.sym__0__8482931350020393083 < sym__0__8482931350020393083 && (otherRec.sym__0___45_1661804984053491733 < sym__0___45_1661804984053491733 && (otherRec.sym__0__5835224130676269208 < sym__0__5835224130676269208 && (otherRec.sym__0__603002359744084410 < sym__0__603002359744084410 && (otherRec.sym__0__7152062580423916744 < sym__0__7152062580423916744 && (otherRec.sym__0___45_6711767232839951748 < sym__0___45_6711767232839951748 && (otherRec.sym__0__5249709580748201526 < sym__0__5249709580748201526 && (otherRec.sym__0___45_196550042660278143 < sym__0___45_196550042660278143 && otherRec.sym__0__7818803168203943400 < sym__0__7818803168203943400)))))))))))))))))))))))))))))))))))))))))))))))));
  }
  bool operator ==(const Record33& otherRec) const{
    return (otherRec.sym__0___45_6023382929443007574 == sym__0___45_6023382929443007574 && (otherRec.sym__0__3757555673004122949 == sym__0__3757555673004122949 && (otherRec.sym__0__1932846229845525767 == sym__0__1932846229845525767 && (otherRec.sym__0__4059433216492140793 == sym__0__4059433216492140793 && (otherRec.sym__0___45_6828435464829114933 == sym__0___45_6828435464829114933 && (otherRec.sym__0___45_8594673557260853450 == sym__0___45_8594673557260853450 && (otherRec.sym__0__5584077748228284101 == sym__0__5584077748228284101 && (otherRec.sym__0___45_6850792598014803495 == sym__0___45_6850792598014803495 && (otherRec.sym__0__126286655963242787 == sym__0__126286655963242787 && (otherRec.sym__0__7152997497642012715 == sym__0__7152997497642012715 && (otherRec.sym__0__8152468447104541133 == sym__0__8152468447104541133 && (otherRec.sym__0___45_2162238796830376958 == sym__0___45_2162238796830376958 && (otherRec.sym__0__6201860754099051215 == sym__0__6201860754099051215 && (otherRec.sym__0___45_5824526894106372990 == sym__0___45_5824526894106372990 && (otherRec.sym__0__4416113698023424168 == sym__0__4416113698023424168 && (otherRec.sym__0___45_8427015020456163925 == sym__0___45_8427015020456163925 && (otherRec.sym__0__7002917659038590267 == sym__0__7002917659038590267 && (otherRec.sym__0___45_6078771451505033767 == sym__0___45_6078771451505033767 && (otherRec.sym__0___45_5377847250793394897 == sym__0___45_5377847250793394897 && (otherRec.sym__0__3980922738646169089 == sym__0__3980922738646169089 && (otherRec.sym__0___45_7099380938835867851 == sym__0___45_7099380938835867851 && (otherRec.sym__0__3234079111686344366 == sym__0__3234079111686344366 && (otherRec.sym__0___45_7202603516002620404 == sym__0___45_7202603516002620404 && (otherRec.sym__0__3246987919693648052 == sym__0__3246987919693648052 && (otherRec.sym__0___45_8983388521167719339 == sym__0___45_8983388521167719339 && (otherRec.sym__0__7124422447978342501 == sym__0__7124422447978342501 && (otherRec.sym__0___45_2999373940918343221 == sym__0___45_2999373940918343221 && (otherRec.sym__0__9137930316880372580 == sym__0__9137930316880372580 && (otherRec.sym__0___45_6042632947114846446 == sym__0___45_6042632947114846446 && (otherRec.sym__0___45_6531105215362525228 == sym__0___45_6531105215362525228 && (otherRec.sym__0___45_8818609540528204259 == sym__0___45_8818609540528204259 && (otherRec.sym__0___45_5244059388672011050 == sym__0___45_5244059388672011050 && (otherRec.sym__0___45_5105300302502028867 == sym__0___45_5105300302502028867 && (otherRec.sym__0___45_7093949592046849419 == sym__0___45_7093949592046849419 && (otherRec.sym__0___45_6761595971726391581 == sym__0___45_6761595971726391581 && (otherRec.sym__0___45_8542939857596337916 == sym__0___45_8542939857596337916 && (otherRec.sym__0___45_7160886385939247343 == sym__0___45_7160886385939247343 && (otherRec.sym__0__5745707657729186073 == sym__0__5745707657729186073 && (otherRec.sym__0__3650682066716895000 == sym__0__3650682066716895000 && (otherRec.sym__0__1619161068731802128 == sym__0__1619161068731802128 && (otherRec.sym__0___45_3903279639330610662 == sym__0___45_3903279639330610662 && (otherRec.sym__0__8482931350020393083 == sym__0__8482931350020393083 && (otherRec.sym__0___45_1661804984053491733 == sym__0___45_1661804984053491733 && (otherRec.sym__0__5835224130676269208 == sym__0__5835224130676269208 && (otherRec.sym__0__603002359744084410 == sym__0__603002359744084410 && (otherRec.sym__0__7152062580423916744 == sym__0__7152062580423916744 && (otherRec.sym__0___45_6711767232839951748 == sym__0___45_6711767232839951748 && (otherRec.sym__0__5249709580748201526 == sym__0__5249709580748201526 && (otherRec.sym__0___45_196550042660278143 == sym__0___45_196550042660278143 && otherRec.sym__0__7818803168203943400 == sym__0__7818803168203943400)))))))))))))))))))))))))))))))))))))))))))))))));
  }
  bool operator !=(const Record33& otherRec) const{
    return (otherRec.sym__0___45_6023382929443007574 != sym__0___45_6023382929443007574 || (otherRec.sym__0__3757555673004122949 != sym__0__3757555673004122949 || (otherRec.sym__0__1932846229845525767 != sym__0__1932846229845525767 || (otherRec.sym__0__4059433216492140793 != sym__0__4059433216492140793 || (otherRec.sym__0___45_6828435464829114933 != sym__0___45_6828435464829114933 || (otherRec.sym__0___45_8594673557260853450 != sym__0___45_8594673557260853450 || (otherRec.sym__0__5584077748228284101 != sym__0__5584077748228284101 || (otherRec.sym__0___45_6850792598014803495 != sym__0___45_6850792598014803495 || (otherRec.sym__0__126286655963242787 != sym__0__126286655963242787 || (otherRec.sym__0__7152997497642012715 != sym__0__7152997497642012715 || (otherRec.sym__0__8152468447104541133 != sym__0__8152468447104541133 || (otherRec.sym__0___45_2162238796830376958 != sym__0___45_2162238796830376958 || (otherRec.sym__0__6201860754099051215 != sym__0__6201860754099051215 || (otherRec.sym__0___45_5824526894106372990 != sym__0___45_5824526894106372990 || (otherRec.sym__0__4416113698023424168 != sym__0__4416113698023424168 || (otherRec.sym__0___45_8427015020456163925 != sym__0___45_8427015020456163925 || (otherRec.sym__0__7002917659038590267 != sym__0__7002917659038590267 || (otherRec.sym__0___45_6078771451505033767 != sym__0___45_6078771451505033767 || (otherRec.sym__0___45_5377847250793394897 != sym__0___45_5377847250793394897 || (otherRec.sym__0__3980922738646169089 != sym__0__3980922738646169089 || (otherRec.sym__0___45_7099380938835867851 != sym__0___45_7099380938835867851 || (otherRec.sym__0__3234079111686344366 != sym__0__3234079111686344366 || (otherRec.sym__0___45_7202603516002620404 != sym__0___45_7202603516002620404 || (otherRec.sym__0__3246987919693648052 != sym__0__3246987919693648052 || (otherRec.sym__0___45_8983388521167719339 != sym__0___45_8983388521167719339 || (otherRec.sym__0__7124422447978342501 != sym__0__7124422447978342501 || (otherRec.sym__0___45_2999373940918343221 != sym__0___45_2999373940918343221 || (otherRec.sym__0__9137930316880372580 != sym__0__9137930316880372580 || (otherRec.sym__0___45_6042632947114846446 != sym__0___45_6042632947114846446 || (otherRec.sym__0___45_6531105215362525228 != sym__0___45_6531105215362525228 || (otherRec.sym__0___45_8818609540528204259 != sym__0___45_8818609540528204259 || (otherRec.sym__0___45_5244059388672011050 != sym__0___45_5244059388672011050 || (otherRec.sym__0___45_5105300302502028867 != sym__0___45_5105300302502028867 || (otherRec.sym__0___45_7093949592046849419 != sym__0___45_7093949592046849419 || (otherRec.sym__0___45_6761595971726391581 != sym__0___45_6761595971726391581 || (otherRec.sym__0___45_8542939857596337916 != sym__0___45_8542939857596337916 || (otherRec.sym__0___45_7160886385939247343 != sym__0___45_7160886385939247343 || (otherRec.sym__0__5745707657729186073 != sym__0__5745707657729186073 || (otherRec.sym__0__3650682066716895000 != sym__0__3650682066716895000 || (otherRec.sym__0__1619161068731802128 != sym__0__1619161068731802128 || (otherRec.sym__0___45_3903279639330610662 != sym__0___45_3903279639330610662 || (otherRec.sym__0__8482931350020393083 != sym__0__8482931350020393083 || (otherRec.sym__0___45_1661804984053491733 != sym__0___45_1661804984053491733 || (otherRec.sym__0__5835224130676269208 != sym__0__5835224130676269208 || (otherRec.sym__0__603002359744084410 != sym__0__603002359744084410 || (otherRec.sym__0__7152062580423916744 != sym__0__7152062580423916744 || (otherRec.sym__0___45_6711767232839951748 != sym__0___45_6711767232839951748 || (otherRec.sym__0__5249709580748201526 != sym__0__5249709580748201526 || (otherRec.sym__0___45_196550042660278143 != sym__0___45_196550042660278143 || otherRec.sym__0__7818803168203943400 != sym__0__7818803168203943400)))))))))))))))))))))))))))))))))))))))))))))))));
  }
  unsigned sym__0___45_6023382929443007574;
  fluidb_string<25> sym__0__3757555673004122949;
  fluidb_string<40> sym__0__1932846229845525767;
  fluidb_string<16> sym__0__4059433216492140793;
  fluidb_string<16> sym__0___45_6828435464829114933;
  fluidb_string<13> sym__0___45_8594673557260853450;
  fluidb_string<15> sym__0__5584077748228284101;
  unsigned sym__0___45_6850792598014803495;
  int sym__0__126286655963242787;
  unsigned sym__0__7152997497642012715;
  unsigned sym__0__8152468447104541133;
  unsigned sym__0___45_2162238796830376958;
  unsigned sym__0__6201860754099051215;
  fluidb_string<21> sym__0___45_5824526894106372990;
  unsigned sym__0__4416113698023424168;
  fluidb_string<10> sym__0___45_8427015020456163925;
  unsigned sym__0__7002917659038590267;
  double sym__0___45_6078771451505033767;
  unsigned sym__0___45_5377847250793394897;
  double sym__0__3980922738646169089;
  unsigned sym__0___45_7099380938835867851;
  unsigned sym__0__3234079111686344366;
  double sym__0___45_7202603516002620404;
  fluidb_string<13> sym__0__3246987919693648052;
  unsigned sym__0___45_8983388521167719339;
  fluidb_string<18> sym__0__7124422447978342501;
  fluidb_string<9> sym__0___45_2999373940918343221;
  fluidb_string<9> sym__0__9137930316880372580;
  unsigned sym__0___45_6042632947114846446;
  unsigned sym__0___45_6531105215362525228;
  fluidb_string<7> sym__0___45_8818609540528204259;
  unsigned sym__0___45_5244059388672011050;
  unsigned sym__0___45_5105300302502028867;
  unsigned sym__0___45_7093949592046849419;
  unsigned sym__0___45_6761595971726391581;
  unsigned sym__0___45_8542939857596337916;
  fluidb_string<15> sym__0___45_7160886385939247343;
  fluidb_string<2> sym__0__5745707657729186073;
  fluidb_string<2> sym__0__3650682066716895000;
  fluidb_string<2> sym__0__1619161068731802128;
  fluidb_string<2> sym__0___45_3903279639330610662;
  unsigned sym__0__8482931350020393083;
  fluidb_string<55> sym__0___45_1661804984053491733;
  fluidb_string<25> sym__0__5835224130676269208;
  fluidb_string<7> sym__0__603002359744084410;
  fluidb_string<10> sym__0__7152062580423916744;
  fluidb_string<11> sym__0___45_6711767232839951748;
  fluidb_string<25> sym__0__5249709580748201526;
  unsigned sym__0___45_196550042660278143;
  fluidb_string<10> sym__0__7818803168203943400;
 private:
};


class Record25 {
 public:
  Record25(unsigned __sym__0__2102316481828394123, fluidb_string<25> __sym__0__1780257040091145452, fluidb_string<40> __sym__0__3109939911660640430, fluidb_string<16> __sym__0___45_2175199227983174320, fluidb_string<16> __sym__0__2274992661292194562, fluidb_string<13> __sym__0___45_52536403880094569, fluidb_string<15> __sym__0__8474116574285927276, unsigned __sym__0__1835503384076924528, int __sym__0__586412267723269786, unsigned __sym__0__1353367320182642978, unsigned __sym__0___45_6351222752813626636, unsigned __sym__0___45_805067702695824989, unsigned __sym__0__914509637812701046, fluidb_string<21> __sym__0__7895450651221174051, unsigned __sym__0__5942285589324576545, fluidb_string<10> __sym__0__3979382234526804898, unsigned __sym__0___45_6103522369909819246, double __sym__0__1873148039180761712, unsigned __sym__0__1430551526674366102, double __sym__0__1048818672001592248, unsigned __sym__0__5723353836447658492, unsigned __sym__0___45_2233273278156881105, double __sym__0___45_1120880788595637835, fluidb_string<13> __sym__0___45_6361490230660137987, unsigned __sym__0___45_7131249874638266788, fluidb_string<18> __sym__0__7265729621635359692, fluidb_string<9> __sym__0___45_2986035740159621374, fluidb_string<9> __sym__0__5081664509798388941, unsigned __sym__0___45_8518596434939314413, unsigned __sym__0__1988221653138390749, fluidb_string<7> __sym__0___45_8801377200944175068, unsigned __sym__0___45_4634183629139578121, unsigned __sym__0__806472603637564420, unsigned __sym__0__1725829484083430844, unsigned __sym__0___45_5279274827282678566, unsigned __sym__0___45_9129247388617675603, fluidb_string<15> __sym__0__1232225844204183080, fluidb_string<2> __sym__0__9184663680502119984, fluidb_string<2> __sym__0___45_9023997483659527503, fluidb_string<2> __sym__0___45_1026604631201554135, fluidb_string<2> __sym__0___45_7189754320372197989) : sym__0__2102316481828394123(__sym__0__2102316481828394123), sym__0__1780257040091145452(__sym__0__1780257040091145452), sym__0__3109939911660640430(__sym__0__3109939911660640430), sym__0___45_2175199227983174320(__sym__0___45_2175199227983174320), sym__0__2274992661292194562(__sym__0__2274992661292194562), sym__0___45_52536403880094569(__sym__0___45_52536403880094569), sym__0__8474116574285927276(__sym__0__8474116574285927276), sym__0__1835503384076924528(__sym__0__1835503384076924528), sym__0__586412267723269786(__sym__0__586412267723269786), sym__0__1353367320182642978(__sym__0__1353367320182642978), sym__0___45_6351222752813626636(__sym__0___45_6351222752813626636), sym__0___45_805067702695824989(__sym__0___45_805067702695824989), sym__0__914509637812701046(__sym__0__914509637812701046), sym__0__7895450651221174051(__sym__0__7895450651221174051), sym__0__5942285589324576545(__sym__0__5942285589324576545), sym__0__3979382234526804898(__sym__0__3979382234526804898), sym__0___45_6103522369909819246(__sym__0___45_6103522369909819246), sym__0__1873148039180761712(__sym__0__1873148039180761712), sym__0__1430551526674366102(__sym__0__1430551526674366102), sym__0__1048818672001592248(__sym__0__1048818672001592248), sym__0__5723353836447658492(__sym__0__5723353836447658492), sym__0___45_2233273278156881105(__sym__0___45_2233273278156881105), sym__0___45_1120880788595637835(__sym__0___45_1120880788595637835), sym__0___45_6361490230660137987(__sym__0___45_6361490230660137987), sym__0___45_7131249874638266788(__sym__0___45_7131249874638266788), sym__0__7265729621635359692(__sym__0__7265729621635359692), sym__0___45_2986035740159621374(__sym__0___45_2986035740159621374), sym__0__5081664509798388941(__sym__0__5081664509798388941), sym__0___45_8518596434939314413(__sym__0___45_8518596434939314413), sym__0__1988221653138390749(__sym__0__1988221653138390749), sym__0___45_8801377200944175068(__sym__0___45_8801377200944175068), sym__0___45_4634183629139578121(__sym__0___45_4634183629139578121), sym__0__806472603637564420(__sym__0__806472603637564420), sym__0__1725829484083430844(__sym__0__1725829484083430844), sym__0___45_5279274827282678566(__sym__0___45_5279274827282678566), sym__0___45_9129247388617675603(__sym__0___45_9129247388617675603), sym__0__1232225844204183080(__sym__0__1232225844204183080), sym__0__9184663680502119984(__sym__0__9184663680502119984), sym__0___45_9023997483659527503(__sym__0___45_9023997483659527503), sym__0___45_1026604631201554135(__sym__0___45_1026604631201554135), sym__0___45_7189754320372197989(__sym__0___45_7189754320372197989)
  {
  }
  Record25() 
  {
  }
  std::string show() const{
    std::stringstream o;
    o << sym__0__2102316481828394123 << " | " << arrToString(sym__0__1780257040091145452) << " | " << arrToString(sym__0__3109939911660640430) << " | " << arrToString(sym__0___45_2175199227983174320) << " | " << arrToString(sym__0__2274992661292194562) << " | " << arrToString(sym__0___45_52536403880094569) << " | " << arrToString(sym__0__8474116574285927276) << " | " << sym__0__1835503384076924528 << " | " << sym__0__586412267723269786 << " | " << sym__0__1353367320182642978 << " | " << sym__0___45_6351222752813626636 << " | " << sym__0___45_805067702695824989 << " | " << sym__0__914509637812701046 << " | " << arrToString(sym__0__7895450651221174051) << " | " << sym__0__5942285589324576545 << " | " << arrToString(sym__0__3979382234526804898) << " | " << sym__0___45_6103522369909819246 << " | " << sym__0__1873148039180761712 << " | " << sym__0__1430551526674366102 << " | " << sym__0__1048818672001592248 << " | " << sym__0__5723353836447658492 << " | " << sym__0___45_2233273278156881105 << " | " << sym__0___45_1120880788595637835 << " | " << arrToString(sym__0___45_6361490230660137987) << " | " << sym__0___45_7131249874638266788 << " | " << arrToString(sym__0__7265729621635359692) << " | " << arrToString(sym__0___45_2986035740159621374) << " | " << arrToString(sym__0__5081664509798388941) << " | " << sym__0___45_8518596434939314413 << " | " << sym__0__1988221653138390749 << " | " << arrToString(sym__0___45_8801377200944175068) << " | " << sym__0___45_4634183629139578121 << " | " << sym__0__806472603637564420 << " | " << sym__0__1725829484083430844 << " | " << sym__0___45_5279274827282678566 << " | " << sym__0___45_9129247388617675603 << " | " << arrToString(sym__0__1232225844204183080) << " | " << arrToString(sym__0__9184663680502119984) << " | " << arrToString(sym__0___45_9023997483659527503) << " | " << arrToString(sym__0___45_1026604631201554135) << " | " << arrToString(sym__0___45_7189754320372197989);
    return o.str();
  }
  bool operator <(const Record25& otherRec) const{
    return (otherRec.sym__0__2102316481828394123 < sym__0__2102316481828394123 && (otherRec.sym__0__1780257040091145452 < sym__0__1780257040091145452 && (otherRec.sym__0__3109939911660640430 < sym__0__3109939911660640430 && (otherRec.sym__0___45_2175199227983174320 < sym__0___45_2175199227983174320 && (otherRec.sym__0__2274992661292194562 < sym__0__2274992661292194562 && (otherRec.sym__0___45_52536403880094569 < sym__0___45_52536403880094569 && (otherRec.sym__0__8474116574285927276 < sym__0__8474116574285927276 && (otherRec.sym__0__1835503384076924528 < sym__0__1835503384076924528 && (otherRec.sym__0__586412267723269786 < sym__0__586412267723269786 && (otherRec.sym__0__1353367320182642978 < sym__0__1353367320182642978 && (otherRec.sym__0___45_6351222752813626636 < sym__0___45_6351222752813626636 && (otherRec.sym__0___45_805067702695824989 < sym__0___45_805067702695824989 && (otherRec.sym__0__914509637812701046 < sym__0__914509637812701046 && (otherRec.sym__0__7895450651221174051 < sym__0__7895450651221174051 && (otherRec.sym__0__5942285589324576545 < sym__0__5942285589324576545 && (otherRec.sym__0__3979382234526804898 < sym__0__3979382234526804898 && (otherRec.sym__0___45_6103522369909819246 < sym__0___45_6103522369909819246 && (otherRec.sym__0__1873148039180761712 < sym__0__1873148039180761712 && (otherRec.sym__0__1430551526674366102 < sym__0__1430551526674366102 && (otherRec.sym__0__1048818672001592248 < sym__0__1048818672001592248 && (otherRec.sym__0__5723353836447658492 < sym__0__5723353836447658492 && (otherRec.sym__0___45_2233273278156881105 < sym__0___45_2233273278156881105 && (otherRec.sym__0___45_1120880788595637835 < sym__0___45_1120880788595637835 && (otherRec.sym__0___45_6361490230660137987 < sym__0___45_6361490230660137987 && (otherRec.sym__0___45_7131249874638266788 < sym__0___45_7131249874638266788 && (otherRec.sym__0__7265729621635359692 < sym__0__7265729621635359692 && (otherRec.sym__0___45_2986035740159621374 < sym__0___45_2986035740159621374 && (otherRec.sym__0__5081664509798388941 < sym__0__5081664509798388941 && (otherRec.sym__0___45_8518596434939314413 < sym__0___45_8518596434939314413 && (otherRec.sym__0__1988221653138390749 < sym__0__1988221653138390749 && (otherRec.sym__0___45_8801377200944175068 < sym__0___45_8801377200944175068 && (otherRec.sym__0___45_4634183629139578121 < sym__0___45_4634183629139578121 && (otherRec.sym__0__806472603637564420 < sym__0__806472603637564420 && (otherRec.sym__0__1725829484083430844 < sym__0__1725829484083430844 && (otherRec.sym__0___45_5279274827282678566 < sym__0___45_5279274827282678566 && (otherRec.sym__0___45_9129247388617675603 < sym__0___45_9129247388617675603 && (otherRec.sym__0__1232225844204183080 < sym__0__1232225844204183080 && (otherRec.sym__0__9184663680502119984 < sym__0__9184663680502119984 && (otherRec.sym__0___45_9023997483659527503 < sym__0___45_9023997483659527503 && (otherRec.sym__0___45_1026604631201554135 < sym__0___45_1026604631201554135 && otherRec.sym__0___45_7189754320372197989 < sym__0___45_7189754320372197989))))))))))))))))))))))))))))))))))))))));
  }
  bool operator ==(const Record25& otherRec) const{
    return (otherRec.sym__0__2102316481828394123 == sym__0__2102316481828394123 && (otherRec.sym__0__1780257040091145452 == sym__0__1780257040091145452 && (otherRec.sym__0__3109939911660640430 == sym__0__3109939911660640430 && (otherRec.sym__0___45_2175199227983174320 == sym__0___45_2175199227983174320 && (otherRec.sym__0__2274992661292194562 == sym__0__2274992661292194562 && (otherRec.sym__0___45_52536403880094569 == sym__0___45_52536403880094569 && (otherRec.sym__0__8474116574285927276 == sym__0__8474116574285927276 && (otherRec.sym__0__1835503384076924528 == sym__0__1835503384076924528 && (otherRec.sym__0__586412267723269786 == sym__0__586412267723269786 && (otherRec.sym__0__1353367320182642978 == sym__0__1353367320182642978 && (otherRec.sym__0___45_6351222752813626636 == sym__0___45_6351222752813626636 && (otherRec.sym__0___45_805067702695824989 == sym__0___45_805067702695824989 && (otherRec.sym__0__914509637812701046 == sym__0__914509637812701046 && (otherRec.sym__0__7895450651221174051 == sym__0__7895450651221174051 && (otherRec.sym__0__5942285589324576545 == sym__0__5942285589324576545 && (otherRec.sym__0__3979382234526804898 == sym__0__3979382234526804898 && (otherRec.sym__0___45_6103522369909819246 == sym__0___45_6103522369909819246 && (otherRec.sym__0__1873148039180761712 == sym__0__1873148039180761712 && (otherRec.sym__0__1430551526674366102 == sym__0__1430551526674366102 && (otherRec.sym__0__1048818672001592248 == sym__0__1048818672001592248 && (otherRec.sym__0__5723353836447658492 == sym__0__5723353836447658492 && (otherRec.sym__0___45_2233273278156881105 == sym__0___45_2233273278156881105 && (otherRec.sym__0___45_1120880788595637835 == sym__0___45_1120880788595637835 && (otherRec.sym__0___45_6361490230660137987 == sym__0___45_6361490230660137987 && (otherRec.sym__0___45_7131249874638266788 == sym__0___45_7131249874638266788 && (otherRec.sym__0__7265729621635359692 == sym__0__7265729621635359692 && (otherRec.sym__0___45_2986035740159621374 == sym__0___45_2986035740159621374 && (otherRec.sym__0__5081664509798388941 == sym__0__5081664509798388941 && (otherRec.sym__0___45_8518596434939314413 == sym__0___45_8518596434939314413 && (otherRec.sym__0__1988221653138390749 == sym__0__1988221653138390749 && (otherRec.sym__0___45_8801377200944175068 == sym__0___45_8801377200944175068 && (otherRec.sym__0___45_4634183629139578121 == sym__0___45_4634183629139578121 && (otherRec.sym__0__806472603637564420 == sym__0__806472603637564420 && (otherRec.sym__0__1725829484083430844 == sym__0__1725829484083430844 && (otherRec.sym__0___45_5279274827282678566 == sym__0___45_5279274827282678566 && (otherRec.sym__0___45_9129247388617675603 == sym__0___45_9129247388617675603 && (otherRec.sym__0__1232225844204183080 == sym__0__1232225844204183080 && (otherRec.sym__0__9184663680502119984 == sym__0__9184663680502119984 && (otherRec.sym__0___45_9023997483659527503 == sym__0___45_9023997483659527503 && (otherRec.sym__0___45_1026604631201554135 == sym__0___45_1026604631201554135 && otherRec.sym__0___45_7189754320372197989 == sym__0___45_7189754320372197989))))))))))))))))))))))))))))))))))))))));
  }
  bool operator !=(const Record25& otherRec) const{
    return (otherRec.sym__0__2102316481828394123 != sym__0__2102316481828394123 || (otherRec.sym__0__1780257040091145452 != sym__0__1780257040091145452 || (otherRec.sym__0__3109939911660640430 != sym__0__3109939911660640430 || (otherRec.sym__0___45_2175199227983174320 != sym__0___45_2175199227983174320 || (otherRec.sym__0__2274992661292194562 != sym__0__2274992661292194562 || (otherRec.sym__0___45_52536403880094569 != sym__0___45_52536403880094569 || (otherRec.sym__0__8474116574285927276 != sym__0__8474116574285927276 || (otherRec.sym__0__1835503384076924528 != sym__0__1835503384076924528 || (otherRec.sym__0__586412267723269786 != sym__0__586412267723269786 || (otherRec.sym__0__1353367320182642978 != sym__0__1353367320182642978 || (otherRec.sym__0___45_6351222752813626636 != sym__0___45_6351222752813626636 || (otherRec.sym__0___45_805067702695824989 != sym__0___45_805067702695824989 || (otherRec.sym__0__914509637812701046 != sym__0__914509637812701046 || (otherRec.sym__0__7895450651221174051 != sym__0__7895450651221174051 || (otherRec.sym__0__5942285589324576545 != sym__0__5942285589324576545 || (otherRec.sym__0__3979382234526804898 != sym__0__3979382234526804898 || (otherRec.sym__0___45_6103522369909819246 != sym__0___45_6103522369909819246 || (otherRec.sym__0__1873148039180761712 != sym__0__1873148039180761712 || (otherRec.sym__0__1430551526674366102 != sym__0__1430551526674366102 || (otherRec.sym__0__1048818672001592248 != sym__0__1048818672001592248 || (otherRec.sym__0__5723353836447658492 != sym__0__5723353836447658492 || (otherRec.sym__0___45_2233273278156881105 != sym__0___45_2233273278156881105 || (otherRec.sym__0___45_1120880788595637835 != sym__0___45_1120880788595637835 || (otherRec.sym__0___45_6361490230660137987 != sym__0___45_6361490230660137987 || (otherRec.sym__0___45_7131249874638266788 != sym__0___45_7131249874638266788 || (otherRec.sym__0__7265729621635359692 != sym__0__7265729621635359692 || (otherRec.sym__0___45_2986035740159621374 != sym__0___45_2986035740159621374 || (otherRec.sym__0__5081664509798388941 != sym__0__5081664509798388941 || (otherRec.sym__0___45_8518596434939314413 != sym__0___45_8518596434939314413 || (otherRec.sym__0__1988221653138390749 != sym__0__1988221653138390749 || (otherRec.sym__0___45_8801377200944175068 != sym__0___45_8801377200944175068 || (otherRec.sym__0___45_4634183629139578121 != sym__0___45_4634183629139578121 || (otherRec.sym__0__806472603637564420 != sym__0__806472603637564420 || (otherRec.sym__0__1725829484083430844 != sym__0__1725829484083430844 || (otherRec.sym__0___45_5279274827282678566 != sym__0___45_5279274827282678566 || (otherRec.sym__0___45_9129247388617675603 != sym__0___45_9129247388617675603 || (otherRec.sym__0__1232225844204183080 != sym__0__1232225844204183080 || (otherRec.sym__0__9184663680502119984 != sym__0__9184663680502119984 || (otherRec.sym__0___45_9023997483659527503 != sym__0___45_9023997483659527503 || (otherRec.sym__0___45_1026604631201554135 != sym__0___45_1026604631201554135 || otherRec.sym__0___45_7189754320372197989 != sym__0___45_7189754320372197989))))))))))))))))))))))))))))))))))))))));
  }
  unsigned sym__0__2102316481828394123;
  fluidb_string<25> sym__0__1780257040091145452;
  fluidb_string<40> sym__0__3109939911660640430;
  fluidb_string<16> sym__0___45_2175199227983174320;
  fluidb_string<16> sym__0__2274992661292194562;
  fluidb_string<13> sym__0___45_52536403880094569;
  fluidb_string<15> sym__0__8474116574285927276;
  unsigned sym__0__1835503384076924528;
  int sym__0__586412267723269786;
  unsigned sym__0__1353367320182642978;
  unsigned sym__0___45_6351222752813626636;
  unsigned sym__0___45_805067702695824989;
  unsigned sym__0__914509637812701046;
  fluidb_string<21> sym__0__7895450651221174051;
  unsigned sym__0__5942285589324576545;
  fluidb_string<10> sym__0__3979382234526804898;
  unsigned sym__0___45_6103522369909819246;
  double sym__0__1873148039180761712;
  unsigned sym__0__1430551526674366102;
  double sym__0__1048818672001592248;
  unsigned sym__0__5723353836447658492;
  unsigned sym__0___45_2233273278156881105;
  double sym__0___45_1120880788595637835;
  fluidb_string<13> sym__0___45_6361490230660137987;
  unsigned sym__0___45_7131249874638266788;
  fluidb_string<18> sym__0__7265729621635359692;
  fluidb_string<9> sym__0___45_2986035740159621374;
  fluidb_string<9> sym__0__5081664509798388941;
  unsigned sym__0___45_8518596434939314413;
  unsigned sym__0__1988221653138390749;
  fluidb_string<7> sym__0___45_8801377200944175068;
  unsigned sym__0___45_4634183629139578121;
  unsigned sym__0__806472603637564420;
  unsigned sym__0__1725829484083430844;
  unsigned sym__0___45_5279274827282678566;
  unsigned sym__0___45_9129247388617675603;
  fluidb_string<15> sym__0__1232225844204183080;
  fluidb_string<2> sym__0__9184663680502119984;
  fluidb_string<2> sym__0___45_9023997483659527503;
  fluidb_string<2> sym__0___45_1026604631201554135;
  fluidb_string<2> sym__0___45_7189754320372197989;
 private:
};


class Record16 {
 public:
  Record16(unsigned __sym__0___45_3961143035674407474, fluidb_string<18> __sym__0___45_6251899802584687138, fluidb_string<9> __sym__0__7895704682370371792, fluidb_string<9> __sym__0___45_4486276699369081973, unsigned __sym__0__1119005997298974989, unsigned __sym__0__3623076037790620667, fluidb_string<7> __sym__0___45_369211045765545994, unsigned __sym__0___45_2252349090140989903, unsigned __sym__0___45_6519715028980934506, unsigned __sym__0__6988144115678218478, unsigned __sym__0__1168585672581702408, unsigned __sym__0___45_1566345155802505557, fluidb_string<15> __sym__0___45_3812637469976556790, fluidb_string<2> __sym__0___45_2398128448016703502, fluidb_string<2> __sym__0__5574729781191990975, fluidb_string<2> __sym__0___45_5962954882039921225, fluidb_string<2> __sym__0___45_7276734914968453131, unsigned __sym__0__5341165382232817970, int __sym__0__5806605655987033032, unsigned __sym__0___45_6623407408063066704, unsigned __sym__0___45_1670026162273154778, unsigned __sym__0__2289386367904588797, unsigned __sym__0__8025829587274267860, fluidb_string<21> __sym__0__454237065112775549, unsigned __sym__0__608217599158647375, fluidb_string<10> __sym__0__4347069016709593136, unsigned __sym__0__4553650632168714688, double __sym__0__586349573025064242, unsigned __sym__0__144523031940788660, double __sym__0__2942207309637238010, unsigned __sym__0__1782085603058736686, unsigned __sym__0__3001704397998344329, double __sym__0___45_2662583778072919661, fluidb_string<13> __sym__0__8853539013824041307) : sym__0___45_3961143035674407474(__sym__0___45_3961143035674407474), sym__0___45_6251899802584687138(__sym__0___45_6251899802584687138), sym__0__7895704682370371792(__sym__0__7895704682370371792), sym__0___45_4486276699369081973(__sym__0___45_4486276699369081973), sym__0__1119005997298974989(__sym__0__1119005997298974989), sym__0__3623076037790620667(__sym__0__3623076037790620667), sym__0___45_369211045765545994(__sym__0___45_369211045765545994), sym__0___45_2252349090140989903(__sym__0___45_2252349090140989903), sym__0___45_6519715028980934506(__sym__0___45_6519715028980934506), sym__0__6988144115678218478(__sym__0__6988144115678218478), sym__0__1168585672581702408(__sym__0__1168585672581702408), sym__0___45_1566345155802505557(__sym__0___45_1566345155802505557), sym__0___45_3812637469976556790(__sym__0___45_3812637469976556790), sym__0___45_2398128448016703502(__sym__0___45_2398128448016703502), sym__0__5574729781191990975(__sym__0__5574729781191990975), sym__0___45_5962954882039921225(__sym__0___45_5962954882039921225), sym__0___45_7276734914968453131(__sym__0___45_7276734914968453131), sym__0__5341165382232817970(__sym__0__5341165382232817970), sym__0__5806605655987033032(__sym__0__5806605655987033032), sym__0___45_6623407408063066704(__sym__0___45_6623407408063066704), sym__0___45_1670026162273154778(__sym__0___45_1670026162273154778), sym__0__2289386367904588797(__sym__0__2289386367904588797), sym__0__8025829587274267860(__sym__0__8025829587274267860), sym__0__454237065112775549(__sym__0__454237065112775549), sym__0__608217599158647375(__sym__0__608217599158647375), sym__0__4347069016709593136(__sym__0__4347069016709593136), sym__0__4553650632168714688(__sym__0__4553650632168714688), sym__0__586349573025064242(__sym__0__586349573025064242), sym__0__144523031940788660(__sym__0__144523031940788660), sym__0__2942207309637238010(__sym__0__2942207309637238010), sym__0__1782085603058736686(__sym__0__1782085603058736686), sym__0__3001704397998344329(__sym__0__3001704397998344329), sym__0___45_2662583778072919661(__sym__0___45_2662583778072919661), sym__0__8853539013824041307(__sym__0__8853539013824041307)
  {
  }
  Record16() 
  {
  }
  std::string show() const{
    std::stringstream o;
    o << sym__0___45_3961143035674407474 << " | " << arrToString(sym__0___45_6251899802584687138) << " | " << arrToString(sym__0__7895704682370371792) << " | " << arrToString(sym__0___45_4486276699369081973) << " | " << sym__0__1119005997298974989 << " | " << sym__0__3623076037790620667 << " | " << arrToString(sym__0___45_369211045765545994) << " | " << sym__0___45_2252349090140989903 << " | " << sym__0___45_6519715028980934506 << " | " << sym__0__6988144115678218478 << " | " << sym__0__1168585672581702408 << " | " << sym__0___45_1566345155802505557 << " | " << arrToString(sym__0___45_3812637469976556790) << " | " << arrToString(sym__0___45_2398128448016703502) << " | " << arrToString(sym__0__5574729781191990975) << " | " << arrToString(sym__0___45_5962954882039921225) << " | " << arrToString(sym__0___45_7276734914968453131) << " | " << sym__0__5341165382232817970 << " | " << sym__0__5806605655987033032 << " | " << sym__0___45_6623407408063066704 << " | " << sym__0___45_1670026162273154778 << " | " << sym__0__2289386367904588797 << " | " << sym__0__8025829587274267860 << " | " << arrToString(sym__0__454237065112775549) << " | " << sym__0__608217599158647375 << " | " << arrToString(sym__0__4347069016709593136) << " | " << sym__0__4553650632168714688 << " | " << sym__0__586349573025064242 << " | " << sym__0__144523031940788660 << " | " << sym__0__2942207309637238010 << " | " << sym__0__1782085603058736686 << " | " << sym__0__3001704397998344329 << " | " << sym__0___45_2662583778072919661 << " | " << arrToString(sym__0__8853539013824041307);
    return o.str();
  }
  bool operator <(const Record16& otherRec) const{
    return (otherRec.sym__0___45_3961143035674407474 < sym__0___45_3961143035674407474 && (otherRec.sym__0___45_6251899802584687138 < sym__0___45_6251899802584687138 && (otherRec.sym__0__7895704682370371792 < sym__0__7895704682370371792 && (otherRec.sym__0___45_4486276699369081973 < sym__0___45_4486276699369081973 && (otherRec.sym__0__1119005997298974989 < sym__0__1119005997298974989 && (otherRec.sym__0__3623076037790620667 < sym__0__3623076037790620667 && (otherRec.sym__0___45_369211045765545994 < sym__0___45_369211045765545994 && (otherRec.sym__0___45_2252349090140989903 < sym__0___45_2252349090140989903 && (otherRec.sym__0___45_6519715028980934506 < sym__0___45_6519715028980934506 && (otherRec.sym__0__6988144115678218478 < sym__0__6988144115678218478 && (otherRec.sym__0__1168585672581702408 < sym__0__1168585672581702408 && (otherRec.sym__0___45_1566345155802505557 < sym__0___45_1566345155802505557 && (otherRec.sym__0___45_3812637469976556790 < sym__0___45_3812637469976556790 && (otherRec.sym__0___45_2398128448016703502 < sym__0___45_2398128448016703502 && (otherRec.sym__0__5574729781191990975 < sym__0__5574729781191990975 && (otherRec.sym__0___45_5962954882039921225 < sym__0___45_5962954882039921225 && (otherRec.sym__0___45_7276734914968453131 < sym__0___45_7276734914968453131 && (otherRec.sym__0__5341165382232817970 < sym__0__5341165382232817970 && (otherRec.sym__0__5806605655987033032 < sym__0__5806605655987033032 && (otherRec.sym__0___45_6623407408063066704 < sym__0___45_6623407408063066704 && (otherRec.sym__0___45_1670026162273154778 < sym__0___45_1670026162273154778 && (otherRec.sym__0__2289386367904588797 < sym__0__2289386367904588797 && (otherRec.sym__0__8025829587274267860 < sym__0__8025829587274267860 && (otherRec.sym__0__454237065112775549 < sym__0__454237065112775549 && (otherRec.sym__0__608217599158647375 < sym__0__608217599158647375 && (otherRec.sym__0__4347069016709593136 < sym__0__4347069016709593136 && (otherRec.sym__0__4553650632168714688 < sym__0__4553650632168714688 && (otherRec.sym__0__586349573025064242 < sym__0__586349573025064242 && (otherRec.sym__0__144523031940788660 < sym__0__144523031940788660 && (otherRec.sym__0__2942207309637238010 < sym__0__2942207309637238010 && (otherRec.sym__0__1782085603058736686 < sym__0__1782085603058736686 && (otherRec.sym__0__3001704397998344329 < sym__0__3001704397998344329 && (otherRec.sym__0___45_2662583778072919661 < sym__0___45_2662583778072919661 && otherRec.sym__0__8853539013824041307 < sym__0__8853539013824041307)))))))))))))))))))))))))))))))));
  }
  bool operator ==(const Record16& otherRec) const{
    return (otherRec.sym__0___45_3961143035674407474 == sym__0___45_3961143035674407474 && (otherRec.sym__0___45_6251899802584687138 == sym__0___45_6251899802584687138 && (otherRec.sym__0__7895704682370371792 == sym__0__7895704682370371792 && (otherRec.sym__0___45_4486276699369081973 == sym__0___45_4486276699369081973 && (otherRec.sym__0__1119005997298974989 == sym__0__1119005997298974989 && (otherRec.sym__0__3623076037790620667 == sym__0__3623076037790620667 && (otherRec.sym__0___45_369211045765545994 == sym__0___45_369211045765545994 && (otherRec.sym__0___45_2252349090140989903 == sym__0___45_2252349090140989903 && (otherRec.sym__0___45_6519715028980934506 == sym__0___45_6519715028980934506 && (otherRec.sym__0__6988144115678218478 == sym__0__6988144115678218478 && (otherRec.sym__0__1168585672581702408 == sym__0__1168585672581702408 && (otherRec.sym__0___45_1566345155802505557 == sym__0___45_1566345155802505557 && (otherRec.sym__0___45_3812637469976556790 == sym__0___45_3812637469976556790 && (otherRec.sym__0___45_2398128448016703502 == sym__0___45_2398128448016703502 && (otherRec.sym__0__5574729781191990975 == sym__0__5574729781191990975 && (otherRec.sym__0___45_5962954882039921225 == sym__0___45_5962954882039921225 && (otherRec.sym__0___45_7276734914968453131 == sym__0___45_7276734914968453131 && (otherRec.sym__0__5341165382232817970 == sym__0__5341165382232817970 && (otherRec.sym__0__5806605655987033032 == sym__0__5806605655987033032 && (otherRec.sym__0___45_6623407408063066704 == sym__0___45_6623407408063066704 && (otherRec.sym__0___45_1670026162273154778 == sym__0___45_1670026162273154778 && (otherRec.sym__0__2289386367904588797 == sym__0__2289386367904588797 && (otherRec.sym__0__8025829587274267860 == sym__0__8025829587274267860 && (otherRec.sym__0__454237065112775549 == sym__0__454237065112775549 && (otherRec.sym__0__608217599158647375 == sym__0__608217599158647375 && (otherRec.sym__0__4347069016709593136 == sym__0__4347069016709593136 && (otherRec.sym__0__4553650632168714688 == sym__0__4553650632168714688 && (otherRec.sym__0__586349573025064242 == sym__0__586349573025064242 && (otherRec.sym__0__144523031940788660 == sym__0__144523031940788660 && (otherRec.sym__0__2942207309637238010 == sym__0__2942207309637238010 && (otherRec.sym__0__1782085603058736686 == sym__0__1782085603058736686 && (otherRec.sym__0__3001704397998344329 == sym__0__3001704397998344329 && (otherRec.sym__0___45_2662583778072919661 == sym__0___45_2662583778072919661 && otherRec.sym__0__8853539013824041307 == sym__0__8853539013824041307)))))))))))))))))))))))))))))))));
  }
  bool operator !=(const Record16& otherRec) const{
    return (otherRec.sym__0___45_3961143035674407474 != sym__0___45_3961143035674407474 || (otherRec.sym__0___45_6251899802584687138 != sym__0___45_6251899802584687138 || (otherRec.sym__0__7895704682370371792 != sym__0__7895704682370371792 || (otherRec.sym__0___45_4486276699369081973 != sym__0___45_4486276699369081973 || (otherRec.sym__0__1119005997298974989 != sym__0__1119005997298974989 || (otherRec.sym__0__3623076037790620667 != sym__0__3623076037790620667 || (otherRec.sym__0___45_369211045765545994 != sym__0___45_369211045765545994 || (otherRec.sym__0___45_2252349090140989903 != sym__0___45_2252349090140989903 || (otherRec.sym__0___45_6519715028980934506 != sym__0___45_6519715028980934506 || (otherRec.sym__0__6988144115678218478 != sym__0__6988144115678218478 || (otherRec.sym__0__1168585672581702408 != sym__0__1168585672581702408 || (otherRec.sym__0___45_1566345155802505557 != sym__0___45_1566345155802505557 || (otherRec.sym__0___45_3812637469976556790 != sym__0___45_3812637469976556790 || (otherRec.sym__0___45_2398128448016703502 != sym__0___45_2398128448016703502 || (otherRec.sym__0__5574729781191990975 != sym__0__5574729781191990975 || (otherRec.sym__0___45_5962954882039921225 != sym__0___45_5962954882039921225 || (otherRec.sym__0___45_7276734914968453131 != sym__0___45_7276734914968453131 || (otherRec.sym__0__5341165382232817970 != sym__0__5341165382232817970 || (otherRec.sym__0__5806605655987033032 != sym__0__5806605655987033032 || (otherRec.sym__0___45_6623407408063066704 != sym__0___45_6623407408063066704 || (otherRec.sym__0___45_1670026162273154778 != sym__0___45_1670026162273154778 || (otherRec.sym__0__2289386367904588797 != sym__0__2289386367904588797 || (otherRec.sym__0__8025829587274267860 != sym__0__8025829587274267860 || (otherRec.sym__0__454237065112775549 != sym__0__454237065112775549 || (otherRec.sym__0__608217599158647375 != sym__0__608217599158647375 || (otherRec.sym__0__4347069016709593136 != sym__0__4347069016709593136 || (otherRec.sym__0__4553650632168714688 != sym__0__4553650632168714688 || (otherRec.sym__0__586349573025064242 != sym__0__586349573025064242 || (otherRec.sym__0__144523031940788660 != sym__0__144523031940788660 || (otherRec.sym__0__2942207309637238010 != sym__0__2942207309637238010 || (otherRec.sym__0__1782085603058736686 != sym__0__1782085603058736686 || (otherRec.sym__0__3001704397998344329 != sym__0__3001704397998344329 || (otherRec.sym__0___45_2662583778072919661 != sym__0___45_2662583778072919661 || otherRec.sym__0__8853539013824041307 != sym__0__8853539013824041307)))))))))))))))))))))))))))))))));
  }
  unsigned sym__0___45_3961143035674407474;
  fluidb_string<18> sym__0___45_6251899802584687138;
  fluidb_string<9> sym__0__7895704682370371792;
  fluidb_string<9> sym__0___45_4486276699369081973;
  unsigned sym__0__1119005997298974989;
  unsigned sym__0__3623076037790620667;
  fluidb_string<7> sym__0___45_369211045765545994;
  unsigned sym__0___45_2252349090140989903;
  unsigned sym__0___45_6519715028980934506;
  unsigned sym__0__6988144115678218478;
  unsigned sym__0__1168585672581702408;
  unsigned sym__0___45_1566345155802505557;
  fluidb_string<15> sym__0___45_3812637469976556790;
  fluidb_string<2> sym__0___45_2398128448016703502;
  fluidb_string<2> sym__0__5574729781191990975;
  fluidb_string<2> sym__0___45_5962954882039921225;
  fluidb_string<2> sym__0___45_7276734914968453131;
  unsigned sym__0__5341165382232817970;
  int sym__0__5806605655987033032;
  unsigned sym__0___45_6623407408063066704;
  unsigned sym__0___45_1670026162273154778;
  unsigned sym__0__2289386367904588797;
  unsigned sym__0__8025829587274267860;
  fluidb_string<21> sym__0__454237065112775549;
  unsigned sym__0__608217599158647375;
  fluidb_string<10> sym__0__4347069016709593136;
  unsigned sym__0__4553650632168714688;
  double sym__0__586349573025064242;
  unsigned sym__0__144523031940788660;
  double sym__0__2942207309637238010;
  unsigned sym__0__1782085603058736686;
  unsigned sym__0__3001704397998344329;
  double sym__0___45_2662583778072919661;
  fluidb_string<13> sym__0__8853539013824041307;
 private:
};


class Record10 {
 public:
  Record10(unsigned __sym__0___45_9117911789383871612, fluidb_string<25> __sym__0___45_1547112764757372609, fluidb_string<40> __sym__0___45_8663957751614366179, fluidb_string<16> __sym__0__1466641425010216931, fluidb_string<16> __sym__0__3672857626658041553, fluidb_string<13> __sym__0___45_3362440237381592032, fluidb_string<15> __sym__0___45_6631364176934158657) : sym__0___45_9117911789383871612(__sym__0___45_9117911789383871612), sym__0___45_1547112764757372609(__sym__0___45_1547112764757372609), sym__0___45_8663957751614366179(__sym__0___45_8663957751614366179), sym__0__1466641425010216931(__sym__0__1466641425010216931), sym__0__3672857626658041553(__sym__0__3672857626658041553), sym__0___45_3362440237381592032(__sym__0___45_3362440237381592032), sym__0___45_6631364176934158657(__sym__0___45_6631364176934158657)
  {
  }
  Record10() 
  {
  }
  std::string show() const{
    std::stringstream o;
    o << sym__0___45_9117911789383871612 << " | " << arrToString(sym__0___45_1547112764757372609) << " | " << arrToString(sym__0___45_8663957751614366179) << " | " << arrToString(sym__0__1466641425010216931) << " | " << arrToString(sym__0__3672857626658041553) << " | " << arrToString(sym__0___45_3362440237381592032) << " | " << arrToString(sym__0___45_6631364176934158657);
    return o.str();
  }
  bool operator <(const Record10& otherRec) const{
    return (otherRec.sym__0___45_9117911789383871612 < sym__0___45_9117911789383871612 && (otherRec.sym__0___45_1547112764757372609 < sym__0___45_1547112764757372609 && (otherRec.sym__0___45_8663957751614366179 < sym__0___45_8663957751614366179 && (otherRec.sym__0__1466641425010216931 < sym__0__1466641425010216931 && (otherRec.sym__0__3672857626658041553 < sym__0__3672857626658041553 && (otherRec.sym__0___45_3362440237381592032 < sym__0___45_3362440237381592032 && otherRec.sym__0___45_6631364176934158657 < sym__0___45_6631364176934158657))))));
  }
  bool operator ==(const Record10& otherRec) const{
    return (otherRec.sym__0___45_9117911789383871612 == sym__0___45_9117911789383871612 && (otherRec.sym__0___45_1547112764757372609 == sym__0___45_1547112764757372609 && (otherRec.sym__0___45_8663957751614366179 == sym__0___45_8663957751614366179 && (otherRec.sym__0__1466641425010216931 == sym__0__1466641425010216931 && (otherRec.sym__0__3672857626658041553 == sym__0__3672857626658041553 && (otherRec.sym__0___45_3362440237381592032 == sym__0___45_3362440237381592032 && otherRec.sym__0___45_6631364176934158657 == sym__0___45_6631364176934158657))))));
  }
  bool operator !=(const Record10& otherRec) const{
    return (otherRec.sym__0___45_9117911789383871612 != sym__0___45_9117911789383871612 || (otherRec.sym__0___45_1547112764757372609 != sym__0___45_1547112764757372609 || (otherRec.sym__0___45_8663957751614366179 != sym__0___45_8663957751614366179 || (otherRec.sym__0__1466641425010216931 != sym__0__1466641425010216931 || (otherRec.sym__0__3672857626658041553 != sym__0__3672857626658041553 || (otherRec.sym__0___45_3362440237381592032 != sym__0___45_3362440237381592032 || otherRec.sym__0___45_6631364176934158657 != sym__0___45_6631364176934158657))))));
  }
  unsigned sym__0___45_9117911789383871612;
  fluidb_string<25> sym__0___45_1547112764757372609;
  fluidb_string<40> sym__0___45_8663957751614366179;
  fluidb_string<16> sym__0__1466641425010216931;
  fluidb_string<16> sym__0__3672857626658041553;
  fluidb_string<13> sym__0___45_3362440237381592032;
  fluidb_string<15> sym__0___45_6631364176934158657;
 private:
};


class Record7 {
 public:
  Record7(unsigned __sym__0__9004647469590526899, fluidb_string<18> __sym__0___45_1621348641261898005, fluidb_string<40> __sym__0__614427126981106829, fluidb_string<11> __sym__0___45_2454293820925122065, fluidb_string<15> __sym__0__6553227872838818177, fluidb_string<13> __sym__0___45_4248174812301520048, fluidb_string<15> __sym__0___45_3914904628387332757, fluidb_string<21> __sym__0___45_5446426298209956761, unsigned __sym__0___45_2558673723420522753, int __sym__0___45_3519351712545876895, unsigned __sym__0___45_1754306014800131719, unsigned __sym__0__6212025267607306819, unsigned __sym__0__2772749593389396148, unsigned __sym__0___45_4019035565219397859, fluidb_string<21> __sym__0___45_6819607202635958988, unsigned __sym__0__4920008974061631994, fluidb_string<10> __sym__0___45_8128105244823042823, unsigned __sym__0___45_2374853137558343895, double __sym__0__930686933803596543, unsigned __sym__0__5145129428883827325, double __sym__0__1860202553700236407, unsigned __sym__0___45_20127004494246501, unsigned __sym__0___45_3013783536855820064, double __sym__0___45_288503368240108258, fluidb_string<13> __sym__0___45_2265690738963363690) : sym__0__9004647469590526899(__sym__0__9004647469590526899), sym__0___45_1621348641261898005(__sym__0___45_1621348641261898005), sym__0__614427126981106829(__sym__0__614427126981106829), sym__0___45_2454293820925122065(__sym__0___45_2454293820925122065), sym__0__6553227872838818177(__sym__0__6553227872838818177), sym__0___45_4248174812301520048(__sym__0___45_4248174812301520048), sym__0___45_3914904628387332757(__sym__0___45_3914904628387332757), sym__0___45_5446426298209956761(__sym__0___45_5446426298209956761), sym__0___45_2558673723420522753(__sym__0___45_2558673723420522753), sym__0___45_3519351712545876895(__sym__0___45_3519351712545876895), sym__0___45_1754306014800131719(__sym__0___45_1754306014800131719), sym__0__6212025267607306819(__sym__0__6212025267607306819), sym__0__2772749593389396148(__sym__0__2772749593389396148), sym__0___45_4019035565219397859(__sym__0___45_4019035565219397859), sym__0___45_6819607202635958988(__sym__0___45_6819607202635958988), sym__0__4920008974061631994(__sym__0__4920008974061631994), sym__0___45_8128105244823042823(__sym__0___45_8128105244823042823), sym__0___45_2374853137558343895(__sym__0___45_2374853137558343895), sym__0__930686933803596543(__sym__0__930686933803596543), sym__0__5145129428883827325(__sym__0__5145129428883827325), sym__0__1860202553700236407(__sym__0__1860202553700236407), sym__0___45_20127004494246501(__sym__0___45_20127004494246501), sym__0___45_3013783536855820064(__sym__0___45_3013783536855820064), sym__0___45_288503368240108258(__sym__0___45_288503368240108258), sym__0___45_2265690738963363690(__sym__0___45_2265690738963363690)
  {
  }
  Record7() 
  {
  }
  std::string show() const{
    std::stringstream o;
    o << sym__0__9004647469590526899 << " | " << arrToString(sym__0___45_1621348641261898005) << " | " << arrToString(sym__0__614427126981106829) << " | " << arrToString(sym__0___45_2454293820925122065) << " | " << arrToString(sym__0__6553227872838818177) << " | " << arrToString(sym__0___45_4248174812301520048) << " | " << arrToString(sym__0___45_3914904628387332757) << " | " << arrToString(sym__0___45_5446426298209956761) << " | " << sym__0___45_2558673723420522753 << " | " << sym__0___45_3519351712545876895 << " | " << sym__0___45_1754306014800131719 << " | " << sym__0__6212025267607306819 << " | " << sym__0__2772749593389396148 << " | " << sym__0___45_4019035565219397859 << " | " << arrToString(sym__0___45_6819607202635958988) << " | " << sym__0__4920008974061631994 << " | " << arrToString(sym__0___45_8128105244823042823) << " | " << sym__0___45_2374853137558343895 << " | " << sym__0__930686933803596543 << " | " << sym__0__5145129428883827325 << " | " << sym__0__1860202553700236407 << " | " << sym__0___45_20127004494246501 << " | " << sym__0___45_3013783536855820064 << " | " << sym__0___45_288503368240108258 << " | " << arrToString(sym__0___45_2265690738963363690);
    return o.str();
  }
  bool operator <(const Record7& otherRec) const{
    return (otherRec.sym__0__9004647469590526899 < sym__0__9004647469590526899 && (otherRec.sym__0___45_1621348641261898005 < sym__0___45_1621348641261898005 && (otherRec.sym__0__614427126981106829 < sym__0__614427126981106829 && (otherRec.sym__0___45_2454293820925122065 < sym__0___45_2454293820925122065 && (otherRec.sym__0__6553227872838818177 < sym__0__6553227872838818177 && (otherRec.sym__0___45_4248174812301520048 < sym__0___45_4248174812301520048 && (otherRec.sym__0___45_3914904628387332757 < sym__0___45_3914904628387332757 && (otherRec.sym__0___45_5446426298209956761 < sym__0___45_5446426298209956761 && (otherRec.sym__0___45_2558673723420522753 < sym__0___45_2558673723420522753 && (otherRec.sym__0___45_3519351712545876895 < sym__0___45_3519351712545876895 && (otherRec.sym__0___45_1754306014800131719 < sym__0___45_1754306014800131719 && (otherRec.sym__0__6212025267607306819 < sym__0__6212025267607306819 && (otherRec.sym__0__2772749593389396148 < sym__0__2772749593389396148 && (otherRec.sym__0___45_4019035565219397859 < sym__0___45_4019035565219397859 && (otherRec.sym__0___45_6819607202635958988 < sym__0___45_6819607202635958988 && (otherRec.sym__0__4920008974061631994 < sym__0__4920008974061631994 && (otherRec.sym__0___45_8128105244823042823 < sym__0___45_8128105244823042823 && (otherRec.sym__0___45_2374853137558343895 < sym__0___45_2374853137558343895 && (otherRec.sym__0__930686933803596543 < sym__0__930686933803596543 && (otherRec.sym__0__5145129428883827325 < sym__0__5145129428883827325 && (otherRec.sym__0__1860202553700236407 < sym__0__1860202553700236407 && (otherRec.sym__0___45_20127004494246501 < sym__0___45_20127004494246501 && (otherRec.sym__0___45_3013783536855820064 < sym__0___45_3013783536855820064 && (otherRec.sym__0___45_288503368240108258 < sym__0___45_288503368240108258 && otherRec.sym__0___45_2265690738963363690 < sym__0___45_2265690738963363690))))))))))))))))))))))));
  }
  bool operator ==(const Record7& otherRec) const{
    return (otherRec.sym__0__9004647469590526899 == sym__0__9004647469590526899 && (otherRec.sym__0___45_1621348641261898005 == sym__0___45_1621348641261898005 && (otherRec.sym__0__614427126981106829 == sym__0__614427126981106829 && (otherRec.sym__0___45_2454293820925122065 == sym__0___45_2454293820925122065 && (otherRec.sym__0__6553227872838818177 == sym__0__6553227872838818177 && (otherRec.sym__0___45_4248174812301520048 == sym__0___45_4248174812301520048 && (otherRec.sym__0___45_3914904628387332757 == sym__0___45_3914904628387332757 && (otherRec.sym__0___45_5446426298209956761 == sym__0___45_5446426298209956761 && (otherRec.sym__0___45_2558673723420522753 == sym__0___45_2558673723420522753 && (otherRec.sym__0___45_3519351712545876895 == sym__0___45_3519351712545876895 && (otherRec.sym__0___45_1754306014800131719 == sym__0___45_1754306014800131719 && (otherRec.sym__0__6212025267607306819 == sym__0__6212025267607306819 && (otherRec.sym__0__2772749593389396148 == sym__0__2772749593389396148 && (otherRec.sym__0___45_4019035565219397859 == sym__0___45_4019035565219397859 && (otherRec.sym__0___45_6819607202635958988 == sym__0___45_6819607202635958988 && (otherRec.sym__0__4920008974061631994 == sym__0__4920008974061631994 && (otherRec.sym__0___45_8128105244823042823 == sym__0___45_8128105244823042823 && (otherRec.sym__0___45_2374853137558343895 == sym__0___45_2374853137558343895 && (otherRec.sym__0__930686933803596543 == sym__0__930686933803596543 && (otherRec.sym__0__5145129428883827325 == sym__0__5145129428883827325 && (otherRec.sym__0__1860202553700236407 == sym__0__1860202553700236407 && (otherRec.sym__0___45_20127004494246501 == sym__0___45_20127004494246501 && (otherRec.sym__0___45_3013783536855820064 == sym__0___45_3013783536855820064 && (otherRec.sym__0___45_288503368240108258 == sym__0___45_288503368240108258 && otherRec.sym__0___45_2265690738963363690 == sym__0___45_2265690738963363690))))))))))))))))))))))));
  }
  bool operator !=(const Record7& otherRec) const{
    return (otherRec.sym__0__9004647469590526899 != sym__0__9004647469590526899 || (otherRec.sym__0___45_1621348641261898005 != sym__0___45_1621348641261898005 || (otherRec.sym__0__614427126981106829 != sym__0__614427126981106829 || (otherRec.sym__0___45_2454293820925122065 != sym__0___45_2454293820925122065 || (otherRec.sym__0__6553227872838818177 != sym__0__6553227872838818177 || (otherRec.sym__0___45_4248174812301520048 != sym__0___45_4248174812301520048 || (otherRec.sym__0___45_3914904628387332757 != sym__0___45_3914904628387332757 || (otherRec.sym__0___45_5446426298209956761 != sym__0___45_5446426298209956761 || (otherRec.sym__0___45_2558673723420522753 != sym__0___45_2558673723420522753 || (otherRec.sym__0___45_3519351712545876895 != sym__0___45_3519351712545876895 || (otherRec.sym__0___45_1754306014800131719 != sym__0___45_1754306014800131719 || (otherRec.sym__0__6212025267607306819 != sym__0__6212025267607306819 || (otherRec.sym__0__2772749593389396148 != sym__0__2772749593389396148 || (otherRec.sym__0___45_4019035565219397859 != sym__0___45_4019035565219397859 || (otherRec.sym__0___45_6819607202635958988 != sym__0___45_6819607202635958988 || (otherRec.sym__0__4920008974061631994 != sym__0__4920008974061631994 || (otherRec.sym__0___45_8128105244823042823 != sym__0___45_8128105244823042823 || (otherRec.sym__0___45_2374853137558343895 != sym__0___45_2374853137558343895 || (otherRec.sym__0__930686933803596543 != sym__0__930686933803596543 || (otherRec.sym__0__5145129428883827325 != sym__0__5145129428883827325 || (otherRec.sym__0__1860202553700236407 != sym__0__1860202553700236407 || (otherRec.sym__0___45_20127004494246501 != sym__0___45_20127004494246501 || (otherRec.sym__0___45_3013783536855820064 != sym__0___45_3013783536855820064 || (otherRec.sym__0___45_288503368240108258 != sym__0___45_288503368240108258 || otherRec.sym__0___45_2265690738963363690 != sym__0___45_2265690738963363690))))))))))))))))))))))));
  }
  unsigned sym__0__9004647469590526899;
  fluidb_string<18> sym__0___45_1621348641261898005;
  fluidb_string<40> sym__0__614427126981106829;
  fluidb_string<11> sym__0___45_2454293820925122065;
  fluidb_string<15> sym__0__6553227872838818177;
  fluidb_string<13> sym__0___45_4248174812301520048;
  fluidb_string<15> sym__0___45_3914904628387332757;
  fluidb_string<21> sym__0___45_5446426298209956761;
  unsigned sym__0___45_2558673723420522753;
  int sym__0___45_3519351712545876895;
  unsigned sym__0___45_1754306014800131719;
  unsigned sym__0__6212025267607306819;
  unsigned sym__0__2772749593389396148;
  unsigned sym__0___45_4019035565219397859;
  fluidb_string<21> sym__0___45_6819607202635958988;
  unsigned sym__0__4920008974061631994;
  fluidb_string<10> sym__0___45_8128105244823042823;
  unsigned sym__0___45_2374853137558343895;
  double sym__0__930686933803596543;
  unsigned sym__0__5145129428883827325;
  double sym__0__1860202553700236407;
  unsigned sym__0___45_20127004494246501;
  unsigned sym__0___45_3013783536855820064;
  double sym__0___45_288503368240108258;
  fluidb_string<13> sym__0___45_2265690738963363690;
 private:
};


class CallableClass26 {
 public:
  Record25 operator()(const Record16& record23, const Record10& record24) {
    return Record25(record24.sym__0___45_9117911789383871612, record24.sym__0___45_1547112764757372609, record24.sym__0___45_8663957751614366179, record24.sym__0__1466641425010216931, record24.sym__0__3672857626658041553, record24.sym__0___45_3362440237381592032, record24.sym__0___45_6631364176934158657, record23.sym__0__5341165382232817970, record23.sym__0__5806605655987033032, record23.sym__0___45_6623407408063066704, record23.sym__0___45_1670026162273154778, record23.sym__0__2289386367904588797, record23.sym__0__8025829587274267860, record23.sym__0__454237065112775549, record23.sym__0__608217599158647375, record23.sym__0__4347069016709593136, record23.sym__0__4553650632168714688, record23.sym__0__586349573025064242, record23.sym__0__144523031940788660, record23.sym__0__2942207309637238010, record23.sym__0__1782085603058736686, record23.sym__0__3001704397998344329, record23.sym__0___45_2662583778072919661, record23.sym__0__8853539013824041307, record23.sym__0___45_3961143035674407474, record23.sym__0___45_6251899802584687138, record23.sym__0__7895704682370371792, record23.sym__0___45_4486276699369081973, record23.sym__0__1119005997298974989, record23.sym__0__3623076037790620667, record23.sym__0___45_369211045765545994, record23.sym__0___45_2252349090140989903, record23.sym__0___45_6519715028980934506, record23.sym__0__6988144115678218478, record23.sym__0__1168585672581702408, record23.sym__0___45_1566345155802505557, record23.sym__0___45_3812637469976556790, record23.sym__0___45_2398128448016703502, record23.sym__0__5574729781191990975, record23.sym__0___45_5962954882039921225, record23.sym__0___45_7276734914968453131);
  }
  typedef Record25 Codomain;
  typedef Record16 Domain0;
  typedef Record10 Domain1;
 private:
};


class CallableClass38 {
 public:
  Record18 operator()(const Record4& record37) {
    return Record18(record37.sym__0__7178003535380331304);
  }
  typedef Record18 Codomain;
  typedef Record4 Domain0;
 private:
};


class CallableClass11 {
 public:
  Record10 operator()(const Record8& record6) {
    return Record10(record6.sym__0___45_1023382914117654422, record6.sym__0__6224010339127806049, record6.sym__0___45_8804639047977952305, record6.sym__0__8926375957639307021, record6.sym__0__5153200798583684363, record6.sym__0___45_794494697990656050, record6.sym__0__7308161412148661473);
  }
  typedef Record10 Codomain;
  typedef Record8 Domain0;
 private:
};


class CallableClass40 {
 public:
  bool operator()(const Record33& record39) {
    return (like(record39.sym__0___45_8594673557260853450, "AMERICA") && like(record39.sym__0__603002359744084410, "MFGR#12"));
  }
  typedef bool Codomain;
  typedef Record33 Domain0;
 private:
};


class CallableClass51 {
 public:
  Record48 operator()(const Record42& record50) {
    return Record48(record50.sym__0___45_6261698000977207925, record50.sym__0__1631598784897141641);
  }
  typedef Record48 Codomain;
  typedef Record42 Domain0;
 private:
};


class CallableClass30 {
 public:
  Record18 operator()(const Record10& record29) {
    return Record18(record29.sym__0___45_9117911789383871612);
  }
  typedef Record18 Codomain;
  typedef Record10 Domain0;
 private:
};


class CallableClass20 {
 public:
  Record18 operator()(const Record14& record19) {
    return Record18(record19.sym__0__2037864888707786451);
  }
  typedef Record18 Codomain;
  typedef Record14 Domain0;
 private:
};


class CallableClass17 {
 public:
  Record16 operator()(const Record14& record12, const Record15& record13) {
    return Record16(record12.sym__0__2037864888707786451, record12.sym__0__8533656712666151747, record12.sym__0__646314041574508429, record12.sym__0__6064137978327902054, record12.sym__0__3754157776500852496, record12.sym__0__6284345160241949046, record12.sym__0___45_773692805971570325, record12.sym__0___45_8399474032083007524, record12.sym__0___45_2038947427357444789, record12.sym__0__6071994954612827827, record12.sym__0__7742515703067448213, record12.sym__0__5201219213304227654, record12.sym__0___45_5896625796158057241, record12.sym__0___45_1108504872221226081, record12.sym__0__1055103969674359346, record12.sym__0__9115626546918942554, record12.sym__0___45_6850413444013389848, record13.sym__0___45_7574074018531922998, record13.sym__0__1125464382786937920, record13.sym__0___45_8257174981563598792, record13.sym__0__957746932829998382, record13.sym__0__934137931677987637, record13.sym__0___45_7332894783442362324, record13.sym__0__8974811218372806325, record13.sym__0___45_5217562530132451785, record13.sym__0__7851147553396318904, record13.sym__0___45_4975505511391694456, record13.sym__0___45_7249986409969561654, record13.sym__0__4671626969570181580, record13.sym__0___45_3666121704283105054, record13.sym__0__5495011930072844518, record13.sym__0___45_4423447118092167055, record13.sym__0___45_1608082021099887893, record13.sym__0__1584187396639360899);
  }
  typedef Record16 Codomain;
  typedef Record14 Domain0;
  typedef Record15 Domain1;
 private:
};


class CallableClass49 {
 public:
  Record48 operator()(const Record44& record41) {
    return Record48(record41.sym__0___45_2549139954849286782, record41.sym__0___45_8628415396103686184);
  }
  typedef Record48 Codomain;
  typedef Record44 Domain0;
 private:
};


class CallableClass34 {
 public:
  Record33 operator()(const Record25& record31, const Record4& record32) {
    return Record33(record31.sym__0__2102316481828394123, record31.sym__0__1780257040091145452, record31.sym__0__3109939911660640430, record31.sym__0___45_2175199227983174320, record31.sym__0__2274992661292194562, record31.sym__0___45_52536403880094569, record31.sym__0__8474116574285927276, record31.sym__0__1835503384076924528, record31.sym__0__586412267723269786, record31.sym__0__1353367320182642978, record31.sym__0___45_6351222752813626636, record31.sym__0___45_805067702695824989, record31.sym__0__914509637812701046, record31.sym__0__7895450651221174051, record31.sym__0__5942285589324576545, record31.sym__0__3979382234526804898, record31.sym__0___45_6103522369909819246, record31.sym__0__1873148039180761712, record31.sym__0__1430551526674366102, record31.sym__0__1048818672001592248, record31.sym__0__5723353836447658492, record31.sym__0___45_2233273278156881105, record31.sym__0___45_1120880788595637835, record31.sym__0___45_6361490230660137987, record31.sym__0___45_7131249874638266788, record31.sym__0__7265729621635359692, record31.sym__0___45_2986035740159621374, record31.sym__0__5081664509798388941, record31.sym__0___45_8518596434939314413, record31.sym__0__1988221653138390749, record31.sym__0___45_8801377200944175068, record31.sym__0___45_4634183629139578121, record31.sym__0__806472603637564420, record31.sym__0__1725829484083430844, record31.sym__0___45_5279274827282678566, record31.sym__0___45_9129247388617675603, record31.sym__0__1232225844204183080, record31.sym__0__9184663680502119984, record31.sym__0___45_9023997483659527503, record31.sym__0___45_1026604631201554135, record31.sym__0___45_7189754320372197989, record32.sym__0__7178003535380331304, record32.sym__0___45_7020257275696364520, record32.sym__0___45_6307179734719967033, record32.sym__0__4568304886257136061, record32.sym__0___45_6291097039630000265, record32.sym__0__551327770031967739, record32.sym__0__3827696365022297353, record32.sym__0___45_1779543743759935870, record32.sym__0__3752090135924368535);
  }
  typedef Record33 Codomain;
  typedef Record25 Domain0;
  typedef Record4 Domain1;
 private:
};


class CallableClass9 {
 public:
  Record7 operator()(const Record8& record6) {
    return Record7(record6.sym__0__2833764152503888409, record6.sym__0__6938021140779677761, record6.sym__0___45_4700201805806600089, record6.sym__0__3362667619044778557, record6.sym__0__2679827580767046755, record6.sym__0___45_4186304031693649930, record6.sym__0__8596564865999609793, record6.sym__0___45_1671053890158572571, record6.sym__0__2256924431415148013, record6.sym__0__347872876320563651, record6.sym__0___45_7666447219434903317, record6.sym__0__1272718151591622153, record6.sym__0__4584633926271658914, record6.sym__0___45_4610773208091240233, record6.sym__0___45_5766638191766435038, record6.sym__0___45_5211223358204127380, record6.sym__0__8435431464460332395, record6.sym__0___45_6450191115912157957, record6.sym__0__7921907673157171693, record6.sym__0___45_1699747741436218441, record6.sym__0___45_2985562469054236715, record6.sym__0__3746029949899912401, record6.sym__0___45_989155948099215770, record6.sym__0___45_1667761180508152936, record6.sym__0__5854462121170882944);
  }
  typedef Record7 Codomain;
  typedef Record8 Domain0;
 private:
};


class CallableClass5 {
 public:
  Record4 operator()(const Record2& record0) {
    return Record4(record0.sym__0__3122376255932122421, record0.sym__0__5682795704482796293, record0.sym__0__4547320860663492666, record0.sym__0___45_8670773565387601472, record0.sym__0___45_13570145613494646, record0.sym__0__219157410367458310, record0.sym__0__698480510036799380, record0.sym__0__5321414200743551775, record0.sym__0__4130486035242774698);
  }
  typedef Record4 Codomain;
  typedef Record2 Domain0;
 private:
};


class CallableClass36 {
 public:
  Record18 operator()(const Record25& record35) {
    return Record18(record35.sym__0___45_6351222752813626636);
  }
  typedef Record18 Codomain;
  typedef Record25 Domain0;
 private:
};


class CallableClass22 {
 public:
  Record18 operator()(const Record15& record21) {
    return Record18(record21.sym__0___45_7332894783442362324);
  }
  typedef Record18 Codomain;
  typedef Record15 Domain0;
 private:
};


class CallableClass28 {
 public:
  Record18 operator()(const Record16& record27) {
    return Record18(record27.sym__0__2289386367904588797);
  }
  typedef Record18 Codomain;
  typedef Record16 Domain0;
 private:
};


class CallableClass3 {
 public:
  Record1 operator()(const Record2& record0) {
    return Record1(record0.sym__0__7183756631487345723, record0.sym__0__4004283392749253291, record0.sym__0__7402856733199756645, record0.sym__0___45_7276118071870614642, record0.sym__0__7689696364618968408, record0.sym__0__265232048543772062, record0.sym__0___45_7391712330109786621, record0.sym__0__9093515676270508468, record0.sym__0__2039577949113231011, record0.sym__0___45_5518709817667950629, record0.sym__0__7446880365925781245, record0.sym__0__3933602404904280238, record0.sym__0__839558304030626831, record0.sym__0__1895092311538388823, record0.sym__0__2442462535421269690, record0.sym__0___45_3615474655229170638, record0.sym__0__8806662867934001568, record0.sym__0__9165007797673129751, record0.sym__0__6736597523581036605, record0.sym__0___45_3324970871059066299, record0.sym__0__8802187528961009747, record0.sym__0___45_8153453103254980376, record0.sym__0___45_878170619108389423, record0.sym__0___45_874194379502172824, record0.sym__0__8610439003510773098, record0.sym__0__984338793883944389, record0.sym__0___45_241371384806950923, record0.sym__0__4499056235050439447, record0.sym__0___45_602104477057249231, record0.sym__0__2154432795296205471, record0.sym__0__8120436674510863259, record0.sym__0__8733838863403650604, record0.sym__0__6144840941019744502, record0.sym__0___45_4519435874778032514, record0.sym__0__2592840547366705296, record0.sym__0__2788895063297001099, record0.sym__0__1545257135384253129, record0.sym__0___45_4622664073058890953, record0.sym__0__7774459284859713893, record0.sym__0__5464006631725545620, record0.sym__0___45_3247512146210145269, record0.sym__0___45_4159199765988317501, record0.sym__0___45_5417534366741502741, record0.sym__0__4597400568918183105, record0.sym__0__8819540415296482823, record0.sym__0___45_623355213379307427, record0.sym__0__7994108978447880988, record0.sym__0__7664015906371024747, record0.sym__0___45_6006206227144636657);
  }
  typedef Record1 Codomain;
  typedef Record2 Domain0;
 private:
};


class CallableClass47 {
 public:
  Record42 operator()(const Record44& record41) {
    return Record42(vAggrSum43(record41.sym__0__8598037934431251909), vAggrFirst45(record41.sym__0___45_2549139954849286782), vAggrFirst46(record41.sym__0___45_8628415396103686184));
  }
  typedef Record42 Codomain;
  typedef Record44 Domain0;
 private:
  AggrSum<unsigned> vAggrSum43;
  AggrFirst<unsigned> vAggrFirst45;
  AggrFirst<fluidb_string<10>> vAggrFirst46;
};






int main() {
  // ReverseTrigger: (Just 
  //   (Left 
  //     [
  //      QJoin 
  //         (P0 
  //           (R2 REq 
  //               (R0 (E0 (ESym "lo_partkey"))) 
  //               (R0 (E0 (ESym "p_partkey")))))
  std::cout << "ReverseTrigger: (Just \n  (Left \n    [\n     QJoin \n        (P0 \n          (R2 REq \n              (R0 (E0 (ESym \"lo_partkey\"))) \n              (R0 (E0 (ESym \"p_partkey\")))))\n    ]))" << std::endl;
  {
    auto operation = mkUnJoin<CallableClass3, CallableClass5>(Just("/tmp/fluidb_store/data367.dat"), Nothing(), Just("/tmp/fluidb_store/data368.dat"), Nothing(), Just("/tmp/fluidb_store/data2.dat"));
    operation.run();
    operation.print_output(10);
  }
  // ReverseTrigger: (Just 
  //   (Left 
  //     [
  //      QJoin 
  //         (P0 
  //           (R2 REq 
  //               (R0 (E0 (ESym "lo_suppkey"))) 
  //               (R0 (E0 (ESym "s_suppkey")))))
  std::cout << "ReverseTrigger: (Just \n  (Left \n    [\n     QJoin \n        (P0 \n          (R2 REq \n              (R0 (E0 (ESym \"lo_suppkey\"))) \n              (R0 (E0 (ESym \"s_suppkey\")))))\n    ]))" << std::endl;
  {
    auto operation = mkUnJoin<CallableClass9, CallableClass11>(Just("/tmp/fluidb_store/data296.dat"), Nothing(), Just("/tmp/fluidb_store/data297.dat"), Nothing(), Just("/tmp/fluidb_store/data3.dat"));
    operation.run();
    operation.print_output(10);
  }
  // Delete: (Q1 
  //   (QGroup 
  //     [
  //      (
  //        ESym "revenue",
  //        E0 
  //           (NAggr 
  //             AggrSum 
  //             (E2 EMul 
  //                 (E0 (ESym "lo_extendedprice")) 
  //                 (E0 (ESym "lo_discount"))))
  //       )
  //     ] 
  //     []) 
  //   (S 
  //     (P2 
  //       PAnd 
  //       (P2 
  //         PAnd 
  //         (P2 
  //           PAnd 
  //           (P0 
  //             (R2 RLe (R0 (E0 (EInt 4))) (R0 (E0 (ESym "lo_discount"))))) 
  //           (P0 
  //             (R2 RLe (R0 (E0 (ESym "lo_discount"))) (R0 (E0 (EInt 6)))))) 
  //         (P0 (R2 RLe (R0 (E0 (EInt 26))) (R0 (E0 (ESym "lo_quantity")))))) 
  //       (P0 (R2 RLe (R0 (E0 (ESym "lo_quantity"))) (R0 (E0 (EInt 35)))))) 
  //     (J 
  //       (P0 
  //         (R2 REq 
  //             (R0 (E0 (ESym "lo_orderdate"))) 
  //             (R0 (E0 (ESym "d_datekey"))))) 
  //       (S 
  //         (P0 
  //           (R2 REq 
  //               (R0 (E0 (ESym "d_yearmonthnum"))) 
  //               (R0 (E0 (EInt 199401))))) 
  //         (Q0 (TSymbol "date"))) 
  std::cout << "Delete: N14" << std::endl;
  deleteFile("/tmp/fluidb_store/data14.dat");
  // Delete: (S 
  //   (P2 
  //     PAnd 
  //     (P2 
  //       PAnd 
  //       (P2 PAnd 
  //           (P0 (R2 RLe (R0 (E0 (EInt 4))) (R0 (E0 (ESym "lo_discount"))))) 
  //           (P0 (R2 RLe (R0 (E0 (ESym "lo_discount"))) (R0 (E0 (EInt 6)))))) 
  //       (P0 (R2 RLe (R0 (E0 (EInt 26))) (R0 (E0 (ESym "lo_quantity")))))) 
  //     (P0 (R2 RLe (R0 (E0 (ESym "lo_quantity"))) (R0 (E0 (EInt 35)))))) 
  //   (J 
  //     (P0 
  //       (R2 REq 
  //           (R0 (E0 (ESym "lo_orderdate"))) 
  //           (R0 (E0 (ESym "d_datekey"))))) 
  //     (S 
  //       (P0 
  //         (R2 REq 
  //             (R0 (E0 (ESym "d_yearmonthnum"))) 
  //             (R0 (E0 (EInt 199401))))) 
  //       (Q0 (TSymbol "date"))) 
  std::cout << "Delete: N12" << std::endl;
  deleteFile("/tmp/fluidb_store/data12.dat");
  // Delete: (Q2 
  //   (QLeftAntijoin 
  //     (P0 
  //       (R2 REq 
  //           (R0 (E0 (ESym "lo_orderdate"))) 
  //           (R0 (E0 (ESym "d_datekey")))))) 
  //   (S 
  //     (P0 
  //       (R2 REq (R0 (E0 (ESym "d_yearmonthnum"))) (R0 (E0 (EInt 199401))))) 
  //     (Q0 (TSymbol "date"))) 
  std::cout << "Delete: N7" << std::endl;
  deleteFile("/tmp/fluidb_store/data7.dat");
  // Delete: (Q2 
  //   (QRightAntijoin 
  //     (P0 
  //       (R2 REq 
  //           (R0 (E0 (ESym "lo_orderdate"))) 
  //           (R0 (E0 (ESym "d_datekey")))))) 
  //   (S 
  //     (P0 
  //       (R2 REq (R0 (E0 (ESym "d_yearmonthnum"))) (R0 (E0 (EInt 199401))))) 
  //     (Q0 (TSymbol "date"))) 
  std::cout << "Delete: N9" << std::endl;
  deleteFile("/tmp/fluidb_store/data9.dat");
  // Delete: (J 
  //   (P0 
  //     (R2 REq 
  //         (R0 (E0 (ESym "lo_orderdate"))) 
  //         (R0 (E0 (ESym "d_datekey"))))) 
  //   (S 
  //     (P0 
  //       (R2 REq (R0 (E0 (ESym "d_yearmonthnum"))) (R0 (E0 (EInt 199401))))) 
  //     (Q0 (TSymbol "date"))) 
  std::cout << "Delete: N8" << std::endl;
  deleteFile("/tmp/fluidb_store/data8.dat");
  // ForwardTrigger: (Just 
  //   (Left 
  //     [
  //      QJoin 
  //         (P0 
  //           (R2 REq 
  //               (R0 (E0 (ESym "lo_orderdate"))) 
  //               (R0 (E0 (ESym "d_datekey")))))
  std::cout << "ForwardTrigger: (Just \n  (Left \n    [\n     QJoin \n        (P0 \n          (R2 REq \n              (R0 (E0 (ESym \"lo_orderdate\"))) \n              (R0 (E0 (ESym \"d_datekey\")))))\n    ]))" << std::endl;
  {
    auto operation = mkEquiJoin<CallableClass20, CallableClass22, CallableClass17>(Just<const std::string>("/tmp/fluidb_store/data139.dat"), Just<const std::string>("/tmp/fluidb_store/data138.dat"), Just<const std::string>("/tmp/fluidb_store/data140.dat"), "/tmp/fluidb_store/data1.dat", "/tmp/fluidb_store/data0.dat");
    operation.run();
    operation.print_output(10);
  }
  // Delete: (Q2 
  //   (QLeftAntijoin 
  //     (P0 
  //       (R2 REq 
  //           (R0 (E0 (ESym "lo_orderdate"))) 
  //           (R0 (E0 (ESym "d_datekey")))))) 
  //   (Q0 (TSymbol "date")) 
  std::cout << "Delete: N138" << std::endl;
  deleteFile("/tmp/fluidb_store/data138.dat");
  // Delete: (Q2 
  //   (QRightAntijoin 
  //     (P0 
  //       (R2 REq 
  //           (R0 (E0 (ESym "lo_orderdate"))) 
  //           (R0 (E0 (ESym "d_datekey")))))) 
  //   (Q0 (TSymbol "date")) 
  std::cout << "Delete: N140" << std::endl;
  deleteFile("/tmp/fluidb_store/data140.dat");
  // Delete: (Q2 
  //   (QRightAntijoin 
  //     (P0 
  //       (R2 REq 
  //           (R0 (E0 (ESym "lo_suppkey"))) 
  //           (R0 (E0 (ESym "s_suppkey")))))) 
  //   (S 
  //     (P0 
  //       (R2 RLike 
  //           (R0 (E0 (ESym "c_region"))) 
  //           (R0 (E0 (EString "AMERICA"))))) 
  //     (J 
  //       (P0 
  //         (R2 REq 
  //             (R0 (E0 (ESym "lo_custkey"))) 
  //             (R0 (E0 (ESym "c_custkey"))))) 
  //       (Q0 (TSymbol "customer")) 
  //       (Q0 (TSymbol "lineorder")))) 
  std::cout << "Delete: N297" << std::endl;
  deleteFile("/tmp/fluidb_store/data297.dat");
  // Delete: (S 
  //   (P1 
  //     PNot 
  //     (P2 
  //       PAnd 
  //       (P2 PAnd 
  //           (P0 (R2 RLe (R0 (E0 (EInt 1))) (R0 (E0 (ESym "lo_discount"))))) 
  //           (P0 (R2 RLe (R0 (E0 (ESym "lo_discount"))) (R0 (E0 (EInt 3)))))) 
  //       (P0 (R2 RLt (R0 (E0 (ESym "lo_quantity"))) (R0 (E0 (EInt 25))))))) 
  //   (J 
  //     (P0 
  //       (R2 REq 
  //           (R0 (E0 (ESym "lo_orderdate"))) 
  //           (R0 (E0 (ESym "d_datekey"))))) 
  //     (S (P0 (R2 REq (R0 (E0 (ESym "d_year"))) (R0 (E0 (EInt 1993))))) 
  //        (Q0 (TSymbol "date"))) 
  std::cout << "Delete: N23" << std::endl;
  deleteFile("/tmp/fluidb_store/data23.dat");
  // Delete: (S (P0 (R2 REq (R0 (E0 (ESym "d_yearmonthnum"))) (R0 (E0 (EInt 199401))))) 
  std::cout << "Delete: N5" << std::endl;
  deleteFile("/tmp/fluidb_store/data5.dat");
  // Delete: (S (P0 (R2 REq (R0 (E0 (ESym "d_year"))) (R0 (E0 (EInt 1993))))) 
  std::cout << "Delete: N15" << std::endl;
  deleteFile("/tmp/fluidb_store/data15.dat");
  // Delete: (Q2 
  //   (QRightAntijoin 
  //     (P0 
  //       (R2 REq 
  //           (R0 (E0 (ESym "lo_partkey"))) 
  //           (R0 (E0 (ESym "p_partkey")))))) 
  //   (S 
  //     (P0 
  //       (R2 RLike 
  //           (R0 (E0 (ESym "c_region"))) 
  //           (R0 (E0 (EString "AMERICA"))))) 
  //     (J 
  //       (P0 
  //         (R2 REq 
  //             (R0 (E0 (ESym "lo_custkey"))) 
  //             (R0 (E0 (ESym "c_custkey"))))) 
  //       (S 
  //         (P2 
  //           PAnd 
  //           (P2 
  //             POr 
  //             (P0 
  //               (R2 REq (R0 (E0 (ESym "d_year"))) (R0 (E0 (EInt 1997))))) 
  //             (P0 
  //               (R2 REq (R0 (E0 (ESym "d_year"))) (R0 (E0 (EInt 1998)))))) 
  //           (P0 
  //             (R2 RLike 
  //                 (R0 (E0 (ESym "s_nation"))) 
  //                 (R0 (E0 (EString "UNITED STATES")))))) 
  //         (J 
  //           (P0 
  //             (R2 REq 
  //                 (R0 (E0 (ESym "lo_suppkey"))) 
  //                 (R0 (E0 (ESym "s_suppkey"))))) 
  //           (J 
  //             (P0 
  //               (R2 REq 
  //                   (R0 (E0 (ESym "lo_orderdate"))) 
  //                   (R0 (E0 (ESym "d_datekey"))))) 
  //             (Q0 (TSymbol "date")) 
  //             (Q0 (TSymbol "lineorder"))) 
  //           (Q0 (TSymbol "supplier")))) 
  //       (Q0 (TSymbol "customer")))) 
  std::cout << "Delete: N368" << std::endl;
  deleteFile("/tmp/fluidb_store/data368.dat");
  // Delete: (J 
  //   (P0 
  //     (R2 REq (R0 (E0 (ESym "lo_suppkey"))) (R0 (E0 (ESym "s_suppkey"))))) 
  //   (S 
  //     (P0 
  //       (R2 RLike 
  //           (R0 (E0 (ESym "c_region"))) 
  //           (R0 (E0 (EString "AMERICA"))))) 
  //     (J 
  //       (P0 
  //         (R2 REq 
  //             (R0 (E0 (ESym "lo_custkey"))) 
  //             (R0 (E0 (ESym "c_custkey"))))) 
  //       (Q0 (TSymbol "customer")) 
  //       (Q0 (TSymbol "lineorder")))) 
  std::cout << "Delete: N296" << std::endl;
  deleteFile("/tmp/fluidb_store/data296.dat");
  // Delete: (S 
  //   (P1 
  //     PNot 
  //     (P0 
  //       (R2 RLike 
  //           (R0 (E0 (ESym "p_category"))) 
  //           (R0 (E0 (EString "MFGR#14")))))) 
  //   (J 
  //     (P0 
  //       (R2 REq 
  //           (R0 (E0 (ESym "lo_partkey"))) 
  //           (R0 (E0 (ESym "p_partkey"))))) 
  //     (S 
  //       (P2 
  //         PAnd 
  //         (P2 
  //           PAnd 
  //           (P0 
  //             (R2 RLike 
  //                 (R0 (E0 (ESym "s_nation"))) 
  //                 (R0 (E0 (EString "UNITED STATES"))))) 
  //           (P2 
  //             POr 
  //             (P0 
  //               (R2 REq (R0 (E0 (ESym "d_year"))) (R0 (E0 (EInt 1997))))) 
  //             (P0 
  //               (R2 REq (R0 (E0 (ESym "d_year"))) (R0 (E0 (EInt 1998))))))) 
  //         (P0 
  //           (R2 RLike 
  //               (R0 (E0 (ESym "c_region"))) 
  //               (R0 (E0 (EString "AMERICA")))))) 
  //       (J 
  //         (P0 
  //           (R2 REq 
  //               (R0 (E0 (ESym "lo_custkey"))) 
  //               (R0 (E0 (ESym "c_custkey"))))) 
  //         (J 
  //           (P0 
  //             (R2 REq 
  //                 (R0 (E0 (ESym "lo_suppkey"))) 
  //                 (R0 (E0 (ESym "s_suppkey"))))) 
  //           (J 
  //             (P0 
  //               (R2 REq 
  //                   (R0 (E0 (ESym "lo_orderdate"))) 
  //                   (R0 (E0 (ESym "d_datekey"))))) 
  //             (Q0 (TSymbol "date")) 
  //             (Q0 (TSymbol "lineorder"))) 
  //           (Q0 (TSymbol "supplier"))) 
  //         (Q0 (TSymbol "customer")))) 
  std::cout << "Delete: N371" << std::endl;
  deleteFile("/tmp/fluidb_store/data371.dat");
  // Delete: (J 
  //   (P0 
  //     (R2 REq (R0 (E0 (ESym "lo_partkey"))) (R0 (E0 (ESym "p_partkey"))))) 
  //   (S 
  //     (P0 
  //       (R2 RLike 
  //           (R0 (E0 (ESym "c_region"))) 
  //           (R0 (E0 (EString "AMERICA"))))) 
  //     (J 
  //       (P0 
  //         (R2 REq 
  //             (R0 (E0 (ESym "lo_custkey"))) 
  //             (R0 (E0 (ESym "c_custkey"))))) 
  //       (S 
  //         (P2 
  //           PAnd 
  //           (P2 
  //             POr 
  //             (P0 
  //               (R2 REq (R0 (E0 (ESym "d_year"))) (R0 (E0 (EInt 1997))))) 
  //             (P0 
  //               (R2 REq (R0 (E0 (ESym "d_year"))) (R0 (E0 (EInt 1998)))))) 
  //           (P0 
  //             (R2 RLike 
  //                 (R0 (E0 (ESym "s_nation"))) 
  //                 (R0 (E0 (EString "UNITED STATES")))))) 
  //         (J 
  //           (P0 
  //             (R2 REq 
  //                 (R0 (E0 (ESym "lo_suppkey"))) 
  //                 (R0 (E0 (ESym "s_suppkey"))))) 
  //           (J 
  //             (P0 
  //               (R2 REq 
  //                   (R0 (E0 (ESym "lo_orderdate"))) 
  //                   (R0 (E0 (ESym "d_datekey"))))) 
  //             (Q0 (TSymbol "date")) 
  //             (Q0 (TSymbol "lineorder"))) 
  //           (Q0 (TSymbol "supplier")))) 
  //       (Q0 (TSymbol "customer")))) 
  std::cout << "Delete: N367" << std::endl;
  deleteFile("/tmp/fluidb_store/data367.dat");
  // ForwardTrigger: (Just 
  //   (Left 
  //     [
  //      QJoin 
  //         (P0 
  //           (R2 REq 
  //               (R0 (E0 (ESym "lo_suppkey"))) 
  //               (R0 (E0 (ESym "s_suppkey")))))
  std::cout << "ForwardTrigger: (Just \n  (Left \n    [\n     QJoin \n        (P0 \n          (R2 REq \n              (R0 (E0 (ESym \"lo_suppkey\"))) \n              (R0 (E0 (ESym \"s_suppkey\")))))\n    ]))" << std::endl;
  {
    auto operation = mkEquiJoin<CallableClass28, CallableClass30, CallableClass26>(Just<const std::string>("/tmp/fluidb_store/data31.dat"), Just<const std::string>("/tmp/fluidb_store/data258.dat"), Just<const std::string>("/tmp/fluidb_store/data259.dat"), "/tmp/fluidb_store/data139.dat", "/tmp/fluidb_store/data3.dat");
    operation.run();
    operation.print_output(10);
  }
  // ForwardTrigger: (Just 
  //   (Left 
  //     [
  //      QJoin 
  //         (P0 
  //           (R2 REq 
  //               (R0 (E0 (ESym "lo_partkey"))) 
  //               (R0 (E0 (ESym "p_partkey")))))
  std::cout << "ForwardTrigger: (Just \n  (Left \n    [\n     QJoin \n        (P0 \n          (R2 REq \n              (R0 (E0 (ESym \"lo_partkey\"))) \n              (R0 (E0 (ESym \"p_partkey\")))))\n    ]))" << std::endl;
  {
    auto operation = mkEquiJoin<CallableClass36, CallableClass38, CallableClass34>(Just<const std::string>("/tmp/fluidb_store/data36.dat"), Just<const std::string>("/tmp/fluidb_store/data35.dat"), Just<const std::string>("/tmp/fluidb_store/data37.dat"), "/tmp/fluidb_store/data31.dat", "/tmp/fluidb_store/data2.dat");
    operation.run();
    operation.print_output(10);
  }
  // Delete: (Q2 
  //   (QLeftAntijoin 
  //     (P0 
  //       (R2 REq 
  //           (R0 (E0 (ESym "lo_suppkey"))) 
  //           (R0 (E0 (ESym "s_suppkey")))))) 
  //   (J 
  //     (P0 
  //       (R2 REq 
  //           (R0 (E0 (ESym "lo_orderdate"))) 
  //           (R0 (E0 (ESym "d_datekey"))))) 
  //     (Q0 (TSymbol "date")) 
  //     (Q0 (TSymbol "lineorder"))) 
  std::cout << "Delete: N258" << std::endl;
  deleteFile("/tmp/fluidb_store/data258.dat");
  std::cout << "Delete: N3" << std::endl;
  deleteFile("/tmp/fluidb_store/data3.dat");
  // Delete: (J 
  //   (P0 
  //     (R2 REq 
  //         (R0 (E0 (ESym "lo_orderdate"))) 
  //         (R0 (E0 (ESym "d_datekey"))))) 
  //   (Q0 (TSymbol "date")) 
  std::cout << "Delete: N139" << std::endl;
  deleteFile("/tmp/fluidb_store/data139.dat");
  // Delete: (Q2 
  //   (QLeftAntijoin 
  //     (P0 
  //       (R2 REq 
  //           (R0 (E0 (ESym "lo_partkey"))) 
  //           (R0 (E0 (ESym "p_partkey")))))) 
  //   (J 
  //     (P0 
  //       (R2 REq 
  //           (R0 (E0 (ESym "lo_orderdate"))) 
  //           (R0 (E0 (ESym "d_datekey"))))) 
  //     (J 
  //       (P0 
  //         (R2 REq 
  //             (R0 (E0 (ESym "lo_suppkey"))) 
  //             (R0 (E0 (ESym "s_suppkey"))))) 
  //       (Q0 (TSymbol "supplier")) 
  //       (Q0 (TSymbol "lineorder"))) 
  //     (Q0 (TSymbol "date"))) 
  std::cout << "Delete: N35" << std::endl;
  deleteFile("/tmp/fluidb_store/data35.dat");
  // Delete: (Q2 
  //   (QRightAntijoin 
  //     (P0 
  //       (R2 REq 
  //           (R0 (E0 (ESym "lo_partkey"))) 
  //           (R0 (E0 (ESym "p_partkey")))))) 
  //   (J 
  //     (P0 
  //       (R2 REq 
  //           (R0 (E0 (ESym "lo_orderdate"))) 
  //           (R0 (E0 (ESym "d_datekey"))))) 
  //     (J 
  //       (P0 
  //         (R2 REq 
  //             (R0 (E0 (ESym "lo_suppkey"))) 
  //             (R0 (E0 (ESym "s_suppkey"))))) 
  //       (Q0 (TSymbol "supplier")) 
  //       (Q0 (TSymbol "lineorder"))) 
  //     (Q0 (TSymbol "date"))) 
  std::cout << "Delete: N37" << std::endl;
  deleteFile("/tmp/fluidb_store/data37.dat");
  // Delete: (J 
  //   (P0 
  //     (R2 REq (R0 (E0 (ESym "lo_custkey"))) (R0 (E0 (ESym "c_custkey"))))) 
  //   (S 
  //     (P0 
  //       (R2 RLike 
  //           (R0 (E0 (ESym "s_region"))) 
  //           (R0 (E0 (EString "AMERICA"))))) 
  //     (J 
  //       (P0 
  //         (R2 REq 
  //             (R0 (E0 (ESym "lo_suppkey"))) 
  //             (R0 (E0 (ESym "s_suppkey"))))) 
  //       (S 
  //         (P2 POr 
  //             (P0 (R2 REq (R0 (E0 (ESym "d_year"))) (R0 (E0 (EInt 1997))))) 
  //             (P0 (R2 REq (R0 (E0 (ESym "d_year"))) (R0 (E0 (EInt 1998)))))) 
  //         (J 
  //           (P0 
  //             (R2 REq 
  //                 (R0 (E0 (ESym "lo_orderdate"))) 
  //                 (R0 (E0 (ESym "d_datekey"))))) 
  //           (Q0 (TSymbol "date")) 
  //           (Q0 (TSymbol "lineorder")))) 
  //       (Q0 (TSymbol "supplier")))) 
  std::cout << "Delete: N328" << std::endl;
  deleteFile("/tmp/fluidb_store/data328.dat");
  // ForwardTrigger: (Just 
  //   (Right 
  //     [
  //      QSel 
  //         (P2 
  //           PAnd 
  //           (P0 
  //             (R2 RLike 
  //                 (R0 (E0 (ESym "s_region"))) 
  //                 (R0 (E0 (EString "AMERICA"))))) 
  //           (P0 
  //             (R2 RLike 
  //                 (R0 (E0 (ESym "p_category"))) 
  //                 (R0 (E0 (EString "MFGR#12"))))))
  std::cout << "ForwardTrigger: (Just \n  (Right \n    [\n     QSel \n        (P2 \n          PAnd \n          (P0 \n            (R2 RLike \n                (R0 (E0 (ESym \"s_region\"))) \n                (R0 (E0 (EString \"AMERICA\"))))) \n          (P0 \n            (R2 RLike \n                (R0 (E0 (ESym \"p_category\"))) \n                (R0 (E0 (EString \"MFGR#12\"))))))\n    ]))" << std::endl;
  {
    auto operation = mkSelect<CallableClass40>(Just<const std::string>("/tmp/fluidb_store/data40.dat"), Nothing<const std::string>(), "/tmp/fluidb_store/data36.dat");
    operation.run();
    operation.print_output(10);
  }
  // ForwardTrigger: (Just 
  //   (Right 
  //     [
  //      QGroup 
  //         [(ESym "tmpSym0",E0 (NAggr AggrSum (E0 (ESym "lo_revenue")))),
  //          (ESym "d_year",E0 (NAggr AggrFirst (E0 (ESym "d_year")))),
  //          (ESym "p_brand1",E0 (NAggr AggrFirst (E0 (ESym "p_brand1"))))] 
  //         [E0 (ESym "d_year"),E0 (ESym "p_brand1")]
  std::cout << "ForwardTrigger: (Just \n  (Right \n    [\n     QGroup \n        [(ESym \"tmpSym0\",E0 (NAggr AggrSum (E0 (ESym \"lo_revenue\")))),\n         (ESym \"d_year\",E0 (NAggr AggrFirst (E0 (ESym \"d_year\")))),\n         (ESym \"p_brand1\",E0 (NAggr AggrFirst (E0 (ESym \"p_brand1\"))))] \n        [E0 (ESym \"d_year\"),E0 (ESym \"p_brand1\")]\n    ]))" << std::endl;
  {
    auto operation = mkAggregation<CallableClass47, CallableClass49>(Just<const std::string>("/tmp/fluidb_store/data80.dat"), Just<const std::string>("/tmp/fluidb_store/data40.dat"), "/tmp/fluidb_store/data40.dat");
    operation.run();
    operation.print_output(10);
  }
  std::cout << "ForwardTrigger: (Just (Right [QSort [E0 (ESym \"d_year\"),E0 (ESym \"p_brand1\")]]))" << std::endl;
  {
    auto operation = mkSort<CallableClass51>(Just<const std::string>("/tmp/fluidb_store/data81.dat"), Just<const std::string>("/tmp/fluidb_store/data80.dat"), "/tmp/fluidb_store/data80.dat");
    operation.run();
    operation.print_output(10);
  }
  report_counters();
  return 0;
}
