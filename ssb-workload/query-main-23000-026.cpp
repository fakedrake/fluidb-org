#include <array>

#include <string>

#include <codegen.hh>
class Record4 {
 public:
  Record4(unsigned __sym__0__7178003535380331304, fluidb_string<55> __sym__0___45_7020257275696364520, fluidb_string<25> __sym__0___45_6307179734719967033, fluidb_string<7> __sym__0__4568304886257136061, fluidb_string<10> __sym__0___45_6291097039630000265, fluidb_string<11> __sym__0__551327770031967739, fluidb_string<25> __sym__0__3827696365022297353, unsigned __sym__0___45_1779543743759935870, fluidb_string<10> __sym__0__3752090135924368535) : sym__0__7178003535380331304(__sym__0__7178003535380331304), sym__0___45_7020257275696364520(__sym__0___45_7020257275696364520), sym__0___45_6307179734719967033(__sym__0___45_6307179734719967033), sym__0__4568304886257136061(__sym__0__4568304886257136061), sym__0___45_6291097039630000265(__sym__0___45_6291097039630000265), sym__0__551327770031967739(__sym__0__551327770031967739), sym__0__3827696365022297353(__sym__0__3827696365022297353), sym__0___45_1779543743759935870(__sym__0___45_1779543743759935870), sym__0__3752090135924368535(__sym__0__3752090135924368535)
  {
  }
  Record4() 
  {
  }
  std::string show() const{
    std::stringstream o;
    o << sym__0__7178003535380331304 << " | " << arrToString(sym__0___45_7020257275696364520) << " | " << arrToString(sym__0___45_6307179734719967033) << " | " << arrToString(sym__0__4568304886257136061) << " | " << arrToString(sym__0___45_6291097039630000265) << " | " << arrToString(sym__0__551327770031967739) << " | " << arrToString(sym__0__3827696365022297353) << " | " << sym__0___45_1779543743759935870 << " | " << arrToString(sym__0__3752090135924368535);
    return o.str();
  }
  bool operator <(const Record4& otherRec) const{
    return (otherRec.sym__0__7178003535380331304 < sym__0__7178003535380331304 && (otherRec.sym__0___45_7020257275696364520 < sym__0___45_7020257275696364520 && (otherRec.sym__0___45_6307179734719967033 < sym__0___45_6307179734719967033 && (otherRec.sym__0__4568304886257136061 < sym__0__4568304886257136061 && (otherRec.sym__0___45_6291097039630000265 < sym__0___45_6291097039630000265 && (otherRec.sym__0__551327770031967739 < sym__0__551327770031967739 && (otherRec.sym__0__3827696365022297353 < sym__0__3827696365022297353 && (otherRec.sym__0___45_1779543743759935870 < sym__0___45_1779543743759935870 && otherRec.sym__0__3752090135924368535 < sym__0__3752090135924368535))))))));
  }
  bool operator ==(const Record4& otherRec) const{
    return (otherRec.sym__0__7178003535380331304 == sym__0__7178003535380331304 && (otherRec.sym__0___45_7020257275696364520 == sym__0___45_7020257275696364520 && (otherRec.sym__0___45_6307179734719967033 == sym__0___45_6307179734719967033 && (otherRec.sym__0__4568304886257136061 == sym__0__4568304886257136061 && (otherRec.sym__0___45_6291097039630000265 == sym__0___45_6291097039630000265 && (otherRec.sym__0__551327770031967739 == sym__0__551327770031967739 && (otherRec.sym__0__3827696365022297353 == sym__0__3827696365022297353 && (otherRec.sym__0___45_1779543743759935870 == sym__0___45_1779543743759935870 && otherRec.sym__0__3752090135924368535 == sym__0__3752090135924368535))))))));
  }
  bool operator !=(const Record4& otherRec) const{
    return (otherRec.sym__0__7178003535380331304 != sym__0__7178003535380331304 || (otherRec.sym__0___45_7020257275696364520 != sym__0___45_7020257275696364520 || (otherRec.sym__0___45_6307179734719967033 != sym__0___45_6307179734719967033 || (otherRec.sym__0__4568304886257136061 != sym__0__4568304886257136061 || (otherRec.sym__0___45_6291097039630000265 != sym__0___45_6291097039630000265 || (otherRec.sym__0__551327770031967739 != sym__0__551327770031967739 || (otherRec.sym__0__3827696365022297353 != sym__0__3827696365022297353 || (otherRec.sym__0___45_1779543743759935870 != sym__0___45_1779543743759935870 || otherRec.sym__0__3752090135924368535 != sym__0__3752090135924368535))))))));
  }
  unsigned sym__0__7178003535380331304;
  fluidb_string<55> sym__0___45_7020257275696364520;
  fluidb_string<25> sym__0___45_6307179734719967033;
  fluidb_string<7> sym__0__4568304886257136061;
  fluidb_string<10> sym__0___45_6291097039630000265;
  fluidb_string<11> sym__0__551327770031967739;
  fluidb_string<25> sym__0__3827696365022297353;
  unsigned sym__0___45_1779543743759935870;
  fluidb_string<10> sym__0__3752090135924368535;
 private:
};


class Record25 {
 public:
  Record25(unsigned __sym__0__7183756631487345723, fluidb_string<18> __sym__0__4004283392749253291, fluidb_string<9> __sym__0__7402856733199756645, fluidb_string<9> __sym__0___45_7276118071870614642, unsigned __sym__0__7689696364618968408, unsigned __sym__0__265232048543772062, fluidb_string<7> __sym__0___45_7391712330109786621, unsigned __sym__0__9093515676270508468, unsigned __sym__0__2039577949113231011, unsigned __sym__0___45_5518709817667950629, unsigned __sym__0__7446880365925781245, unsigned __sym__0__3933602404904280238, fluidb_string<15> __sym__0__839558304030626831, fluidb_string<2> __sym__0__1895092311538388823, fluidb_string<2> __sym__0__2442462535421269690, fluidb_string<2> __sym__0___45_3615474655229170638, fluidb_string<2> __sym__0__8806662867934001568, unsigned __sym__0__9165007797673129751, int __sym__0__6736597523581036605, unsigned __sym__0___45_3324970871059066299, unsigned __sym__0__8802187528961009747, unsigned __sym__0___45_8153453103254980376, unsigned __sym__0___45_878170619108389423, fluidb_string<21> __sym__0___45_874194379502172824, unsigned __sym__0__8610439003510773098, fluidb_string<10> __sym__0__984338793883944389, unsigned __sym__0___45_241371384806950923, double __sym__0__4499056235050439447, unsigned __sym__0___45_602104477057249231, double __sym__0__2154432795296205471, unsigned __sym__0__8120436674510863259, unsigned __sym__0__8733838863403650604, double __sym__0__6144840941019744502, fluidb_string<13> __sym__0___45_4519435874778032514, unsigned __sym__0__2592840547366705296, fluidb_string<25> __sym__0__2788895063297001099, fluidb_string<40> __sym__0__1545257135384253129, fluidb_string<16> __sym__0___45_4622664073058890953, fluidb_string<16> __sym__0__7774459284859713893, fluidb_string<13> __sym__0__5464006631725545620, fluidb_string<15> __sym__0___45_3247512146210145269, unsigned __sym__0___45_4159199765988317501, fluidb_string<18> __sym__0___45_5417534366741502741, fluidb_string<40> __sym__0__4597400568918183105, fluidb_string<11> __sym__0__8819540415296482823, fluidb_string<15> __sym__0___45_623355213379307427, fluidb_string<13> __sym__0__7994108978447880988, fluidb_string<15> __sym__0__7664015906371024747, fluidb_string<21> __sym__0___45_6006206227144636657, unsigned __sym__0__3122376255932122421, fluidb_string<55> __sym__0__5682795704482796293, fluidb_string<25> __sym__0__4547320860663492666, fluidb_string<7> __sym__0___45_8670773565387601472, fluidb_string<10> __sym__0___45_13570145613494646, fluidb_string<11> __sym__0__219157410367458310, fluidb_string<25> __sym__0__698480510036799380, unsigned __sym__0__5321414200743551775, fluidb_string<10> __sym__0__4130486035242774698) : sym__0__7183756631487345723(__sym__0__7183756631487345723), sym__0__4004283392749253291(__sym__0__4004283392749253291), sym__0__7402856733199756645(__sym__0__7402856733199756645), sym__0___45_7276118071870614642(__sym__0___45_7276118071870614642), sym__0__7689696364618968408(__sym__0__7689696364618968408), sym__0__265232048543772062(__sym__0__265232048543772062), sym__0___45_7391712330109786621(__sym__0___45_7391712330109786621), sym__0__9093515676270508468(__sym__0__9093515676270508468), sym__0__2039577949113231011(__sym__0__2039577949113231011), sym__0___45_5518709817667950629(__sym__0___45_5518709817667950629), sym__0__7446880365925781245(__sym__0__7446880365925781245), sym__0__3933602404904280238(__sym__0__3933602404904280238), sym__0__839558304030626831(__sym__0__839558304030626831), sym__0__1895092311538388823(__sym__0__1895092311538388823), sym__0__2442462535421269690(__sym__0__2442462535421269690), sym__0___45_3615474655229170638(__sym__0___45_3615474655229170638), sym__0__8806662867934001568(__sym__0__8806662867934001568), sym__0__9165007797673129751(__sym__0__9165007797673129751), sym__0__6736597523581036605(__sym__0__6736597523581036605), sym__0___45_3324970871059066299(__sym__0___45_3324970871059066299), sym__0__8802187528961009747(__sym__0__8802187528961009747), sym__0___45_8153453103254980376(__sym__0___45_8153453103254980376), sym__0___45_878170619108389423(__sym__0___45_878170619108389423), sym__0___45_874194379502172824(__sym__0___45_874194379502172824), sym__0__8610439003510773098(__sym__0__8610439003510773098), sym__0__984338793883944389(__sym__0__984338793883944389), sym__0___45_241371384806950923(__sym__0___45_241371384806950923), sym__0__4499056235050439447(__sym__0__4499056235050439447), sym__0___45_602104477057249231(__sym__0___45_602104477057249231), sym__0__2154432795296205471(__sym__0__2154432795296205471), sym__0__8120436674510863259(__sym__0__8120436674510863259), sym__0__8733838863403650604(__sym__0__8733838863403650604), sym__0__6144840941019744502(__sym__0__6144840941019744502), sym__0___45_4519435874778032514(__sym__0___45_4519435874778032514), sym__0__2592840547366705296(__sym__0__2592840547366705296), sym__0__2788895063297001099(__sym__0__2788895063297001099), sym__0__1545257135384253129(__sym__0__1545257135384253129), sym__0___45_4622664073058890953(__sym__0___45_4622664073058890953), sym__0__7774459284859713893(__sym__0__7774459284859713893), sym__0__5464006631725545620(__sym__0__5464006631725545620), sym__0___45_3247512146210145269(__sym__0___45_3247512146210145269), sym__0___45_4159199765988317501(__sym__0___45_4159199765988317501), sym__0___45_5417534366741502741(__sym__0___45_5417534366741502741), sym__0__4597400568918183105(__sym__0__4597400568918183105), sym__0__8819540415296482823(__sym__0__8819540415296482823), sym__0___45_623355213379307427(__sym__0___45_623355213379307427), sym__0__7994108978447880988(__sym__0__7994108978447880988), sym__0__7664015906371024747(__sym__0__7664015906371024747), sym__0___45_6006206227144636657(__sym__0___45_6006206227144636657), sym__0__3122376255932122421(__sym__0__3122376255932122421), sym__0__5682795704482796293(__sym__0__5682795704482796293), sym__0__4547320860663492666(__sym__0__4547320860663492666), sym__0___45_8670773565387601472(__sym__0___45_8670773565387601472), sym__0___45_13570145613494646(__sym__0___45_13570145613494646), sym__0__219157410367458310(__sym__0__219157410367458310), sym__0__698480510036799380(__sym__0__698480510036799380), sym__0__5321414200743551775(__sym__0__5321414200743551775), sym__0__4130486035242774698(__sym__0__4130486035242774698)
  {
  }
  Record25() 
  {
  }
  std::string show() const{
    std::stringstream o;
    o << sym__0__7183756631487345723 << " | " << arrToString(sym__0__4004283392749253291) << " | " << arrToString(sym__0__7402856733199756645) << " | " << arrToString(sym__0___45_7276118071870614642) << " | " << sym__0__7689696364618968408 << " | " << sym__0__265232048543772062 << " | " << arrToString(sym__0___45_7391712330109786621) << " | " << sym__0__9093515676270508468 << " | " << sym__0__2039577949113231011 << " | " << sym__0___45_5518709817667950629 << " | " << sym__0__7446880365925781245 << " | " << sym__0__3933602404904280238 << " | " << arrToString(sym__0__839558304030626831) << " | " << arrToString(sym__0__1895092311538388823) << " | " << arrToString(sym__0__2442462535421269690) << " | " << arrToString(sym__0___45_3615474655229170638) << " | " << arrToString(sym__0__8806662867934001568) << " | " << sym__0__9165007797673129751 << " | " << sym__0__6736597523581036605 << " | " << sym__0___45_3324970871059066299 << " | " << sym__0__8802187528961009747 << " | " << sym__0___45_8153453103254980376 << " | " << sym__0___45_878170619108389423 << " | " << arrToString(sym__0___45_874194379502172824) << " | " << sym__0__8610439003510773098 << " | " << arrToString(sym__0__984338793883944389) << " | " << sym__0___45_241371384806950923 << " | " << sym__0__4499056235050439447 << " | " << sym__0___45_602104477057249231 << " | " << sym__0__2154432795296205471 << " | " << sym__0__8120436674510863259 << " | " << sym__0__8733838863403650604 << " | " << sym__0__6144840941019744502 << " | " << arrToString(sym__0___45_4519435874778032514) << " | " << sym__0__2592840547366705296 << " | " << arrToString(sym__0__2788895063297001099) << " | " << arrToString(sym__0__1545257135384253129) << " | " << arrToString(sym__0___45_4622664073058890953) << " | " << arrToString(sym__0__7774459284859713893) << " | " << arrToString(sym__0__5464006631725545620) << " | " << arrToString(sym__0___45_3247512146210145269) << " | " << sym__0___45_4159199765988317501 << " | " << arrToString(sym__0___45_5417534366741502741) << " | " << arrToString(sym__0__4597400568918183105) << " | " << arrToString(sym__0__8819540415296482823) << " | " << arrToString(sym__0___45_623355213379307427) << " | " << arrToString(sym__0__7994108978447880988) << " | " << arrToString(sym__0__7664015906371024747) << " | " << arrToString(sym__0___45_6006206227144636657) << " | " << sym__0__3122376255932122421 << " | " << arrToString(sym__0__5682795704482796293) << " | " << arrToString(sym__0__4547320860663492666) << " | " << arrToString(sym__0___45_8670773565387601472) << " | " << arrToString(sym__0___45_13570145613494646) << " | " << arrToString(sym__0__219157410367458310) << " | " << arrToString(sym__0__698480510036799380) << " | " << sym__0__5321414200743551775 << " | " << arrToString(sym__0__4130486035242774698);
    return o.str();
  }
  bool operator <(const Record25& otherRec) const{
    return (otherRec.sym__0__7183756631487345723 < sym__0__7183756631487345723 && (otherRec.sym__0__4004283392749253291 < sym__0__4004283392749253291 && (otherRec.sym__0__7402856733199756645 < sym__0__7402856733199756645 && (otherRec.sym__0___45_7276118071870614642 < sym__0___45_7276118071870614642 && (otherRec.sym__0__7689696364618968408 < sym__0__7689696364618968408 && (otherRec.sym__0__265232048543772062 < sym__0__265232048543772062 && (otherRec.sym__0___45_7391712330109786621 < sym__0___45_7391712330109786621 && (otherRec.sym__0__9093515676270508468 < sym__0__9093515676270508468 && (otherRec.sym__0__2039577949113231011 < sym__0__2039577949113231011 && (otherRec.sym__0___45_5518709817667950629 < sym__0___45_5518709817667950629 && (otherRec.sym__0__7446880365925781245 < sym__0__7446880365925781245 && (otherRec.sym__0__3933602404904280238 < sym__0__3933602404904280238 && (otherRec.sym__0__839558304030626831 < sym__0__839558304030626831 && (otherRec.sym__0__1895092311538388823 < sym__0__1895092311538388823 && (otherRec.sym__0__2442462535421269690 < sym__0__2442462535421269690 && (otherRec.sym__0___45_3615474655229170638 < sym__0___45_3615474655229170638 && (otherRec.sym__0__8806662867934001568 < sym__0__8806662867934001568 && (otherRec.sym__0__9165007797673129751 < sym__0__9165007797673129751 && (otherRec.sym__0__6736597523581036605 < sym__0__6736597523581036605 && (otherRec.sym__0___45_3324970871059066299 < sym__0___45_3324970871059066299 && (otherRec.sym__0__8802187528961009747 < sym__0__8802187528961009747 && (otherRec.sym__0___45_8153453103254980376 < sym__0___45_8153453103254980376 && (otherRec.sym__0___45_878170619108389423 < sym__0___45_878170619108389423 && (otherRec.sym__0___45_874194379502172824 < sym__0___45_874194379502172824 && (otherRec.sym__0__8610439003510773098 < sym__0__8610439003510773098 && (otherRec.sym__0__984338793883944389 < sym__0__984338793883944389 && (otherRec.sym__0___45_241371384806950923 < sym__0___45_241371384806950923 && (otherRec.sym__0__4499056235050439447 < sym__0__4499056235050439447 && (otherRec.sym__0___45_602104477057249231 < sym__0___45_602104477057249231 && (otherRec.sym__0__2154432795296205471 < sym__0__2154432795296205471 && (otherRec.sym__0__8120436674510863259 < sym__0__8120436674510863259 && (otherRec.sym__0__8733838863403650604 < sym__0__8733838863403650604 && (otherRec.sym__0__6144840941019744502 < sym__0__6144840941019744502 && (otherRec.sym__0___45_4519435874778032514 < sym__0___45_4519435874778032514 && (otherRec.sym__0__2592840547366705296 < sym__0__2592840547366705296 && (otherRec.sym__0__2788895063297001099 < sym__0__2788895063297001099 && (otherRec.sym__0__1545257135384253129 < sym__0__1545257135384253129 && (otherRec.sym__0___45_4622664073058890953 < sym__0___45_4622664073058890953 && (otherRec.sym__0__7774459284859713893 < sym__0__7774459284859713893 && (otherRec.sym__0__5464006631725545620 < sym__0__5464006631725545620 && (otherRec.sym__0___45_3247512146210145269 < sym__0___45_3247512146210145269 && (otherRec.sym__0___45_4159199765988317501 < sym__0___45_4159199765988317501 && (otherRec.sym__0___45_5417534366741502741 < sym__0___45_5417534366741502741 && (otherRec.sym__0__4597400568918183105 < sym__0__4597400568918183105 && (otherRec.sym__0__8819540415296482823 < sym__0__8819540415296482823 && (otherRec.sym__0___45_623355213379307427 < sym__0___45_623355213379307427 && (otherRec.sym__0__7994108978447880988 < sym__0__7994108978447880988 && (otherRec.sym__0__7664015906371024747 < sym__0__7664015906371024747 && (otherRec.sym__0___45_6006206227144636657 < sym__0___45_6006206227144636657 && (otherRec.sym__0__3122376255932122421 < sym__0__3122376255932122421 && (otherRec.sym__0__5682795704482796293 < sym__0__5682795704482796293 && (otherRec.sym__0__4547320860663492666 < sym__0__4547320860663492666 && (otherRec.sym__0___45_8670773565387601472 < sym__0___45_8670773565387601472 && (otherRec.sym__0___45_13570145613494646 < sym__0___45_13570145613494646 && (otherRec.sym__0__219157410367458310 < sym__0__219157410367458310 && (otherRec.sym__0__698480510036799380 < sym__0__698480510036799380 && (otherRec.sym__0__5321414200743551775 < sym__0__5321414200743551775 && otherRec.sym__0__4130486035242774698 < sym__0__4130486035242774698)))))))))))))))))))))))))))))))))))))))))))))))))))))))));
  }
  bool operator ==(const Record25& otherRec) const{
    return (otherRec.sym__0__7183756631487345723 == sym__0__7183756631487345723 && (otherRec.sym__0__4004283392749253291 == sym__0__4004283392749253291 && (otherRec.sym__0__7402856733199756645 == sym__0__7402856733199756645 && (otherRec.sym__0___45_7276118071870614642 == sym__0___45_7276118071870614642 && (otherRec.sym__0__7689696364618968408 == sym__0__7689696364618968408 && (otherRec.sym__0__265232048543772062 == sym__0__265232048543772062 && (otherRec.sym__0___45_7391712330109786621 == sym__0___45_7391712330109786621 && (otherRec.sym__0__9093515676270508468 == sym__0__9093515676270508468 && (otherRec.sym__0__2039577949113231011 == sym__0__2039577949113231011 && (otherRec.sym__0___45_5518709817667950629 == sym__0___45_5518709817667950629 && (otherRec.sym__0__7446880365925781245 == sym__0__7446880365925781245 && (otherRec.sym__0__3933602404904280238 == sym__0__3933602404904280238 && (otherRec.sym__0__839558304030626831 == sym__0__839558304030626831 && (otherRec.sym__0__1895092311538388823 == sym__0__1895092311538388823 && (otherRec.sym__0__2442462535421269690 == sym__0__2442462535421269690 && (otherRec.sym__0___45_3615474655229170638 == sym__0___45_3615474655229170638 && (otherRec.sym__0__8806662867934001568 == sym__0__8806662867934001568 && (otherRec.sym__0__9165007797673129751 == sym__0__9165007797673129751 && (otherRec.sym__0__6736597523581036605 == sym__0__6736597523581036605 && (otherRec.sym__0___45_3324970871059066299 == sym__0___45_3324970871059066299 && (otherRec.sym__0__8802187528961009747 == sym__0__8802187528961009747 && (otherRec.sym__0___45_8153453103254980376 == sym__0___45_8153453103254980376 && (otherRec.sym__0___45_878170619108389423 == sym__0___45_878170619108389423 && (otherRec.sym__0___45_874194379502172824 == sym__0___45_874194379502172824 && (otherRec.sym__0__8610439003510773098 == sym__0__8610439003510773098 && (otherRec.sym__0__984338793883944389 == sym__0__984338793883944389 && (otherRec.sym__0___45_241371384806950923 == sym__0___45_241371384806950923 && (otherRec.sym__0__4499056235050439447 == sym__0__4499056235050439447 && (otherRec.sym__0___45_602104477057249231 == sym__0___45_602104477057249231 && (otherRec.sym__0__2154432795296205471 == sym__0__2154432795296205471 && (otherRec.sym__0__8120436674510863259 == sym__0__8120436674510863259 && (otherRec.sym__0__8733838863403650604 == sym__0__8733838863403650604 && (otherRec.sym__0__6144840941019744502 == sym__0__6144840941019744502 && (otherRec.sym__0___45_4519435874778032514 == sym__0___45_4519435874778032514 && (otherRec.sym__0__2592840547366705296 == sym__0__2592840547366705296 && (otherRec.sym__0__2788895063297001099 == sym__0__2788895063297001099 && (otherRec.sym__0__1545257135384253129 == sym__0__1545257135384253129 && (otherRec.sym__0___45_4622664073058890953 == sym__0___45_4622664073058890953 && (otherRec.sym__0__7774459284859713893 == sym__0__7774459284859713893 && (otherRec.sym__0__5464006631725545620 == sym__0__5464006631725545620 && (otherRec.sym__0___45_3247512146210145269 == sym__0___45_3247512146210145269 && (otherRec.sym__0___45_4159199765988317501 == sym__0___45_4159199765988317501 && (otherRec.sym__0___45_5417534366741502741 == sym__0___45_5417534366741502741 && (otherRec.sym__0__4597400568918183105 == sym__0__4597400568918183105 && (otherRec.sym__0__8819540415296482823 == sym__0__8819540415296482823 && (otherRec.sym__0___45_623355213379307427 == sym__0___45_623355213379307427 && (otherRec.sym__0__7994108978447880988 == sym__0__7994108978447880988 && (otherRec.sym__0__7664015906371024747 == sym__0__7664015906371024747 && (otherRec.sym__0___45_6006206227144636657 == sym__0___45_6006206227144636657 && (otherRec.sym__0__3122376255932122421 == sym__0__3122376255932122421 && (otherRec.sym__0__5682795704482796293 == sym__0__5682795704482796293 && (otherRec.sym__0__4547320860663492666 == sym__0__4547320860663492666 && (otherRec.sym__0___45_8670773565387601472 == sym__0___45_8670773565387601472 && (otherRec.sym__0___45_13570145613494646 == sym__0___45_13570145613494646 && (otherRec.sym__0__219157410367458310 == sym__0__219157410367458310 && (otherRec.sym__0__698480510036799380 == sym__0__698480510036799380 && (otherRec.sym__0__5321414200743551775 == sym__0__5321414200743551775 && otherRec.sym__0__4130486035242774698 == sym__0__4130486035242774698)))))))))))))))))))))))))))))))))))))))))))))))))))))))));
  }
  bool operator !=(const Record25& otherRec) const{
    return (otherRec.sym__0__7183756631487345723 != sym__0__7183756631487345723 || (otherRec.sym__0__4004283392749253291 != sym__0__4004283392749253291 || (otherRec.sym__0__7402856733199756645 != sym__0__7402856733199756645 || (otherRec.sym__0___45_7276118071870614642 != sym__0___45_7276118071870614642 || (otherRec.sym__0__7689696364618968408 != sym__0__7689696364618968408 || (otherRec.sym__0__265232048543772062 != sym__0__265232048543772062 || (otherRec.sym__0___45_7391712330109786621 != sym__0___45_7391712330109786621 || (otherRec.sym__0__9093515676270508468 != sym__0__9093515676270508468 || (otherRec.sym__0__2039577949113231011 != sym__0__2039577949113231011 || (otherRec.sym__0___45_5518709817667950629 != sym__0___45_5518709817667950629 || (otherRec.sym__0__7446880365925781245 != sym__0__7446880365925781245 || (otherRec.sym__0__3933602404904280238 != sym__0__3933602404904280238 || (otherRec.sym__0__839558304030626831 != sym__0__839558304030626831 || (otherRec.sym__0__1895092311538388823 != sym__0__1895092311538388823 || (otherRec.sym__0__2442462535421269690 != sym__0__2442462535421269690 || (otherRec.sym__0___45_3615474655229170638 != sym__0___45_3615474655229170638 || (otherRec.sym__0__8806662867934001568 != sym__0__8806662867934001568 || (otherRec.sym__0__9165007797673129751 != sym__0__9165007797673129751 || (otherRec.sym__0__6736597523581036605 != sym__0__6736597523581036605 || (otherRec.sym__0___45_3324970871059066299 != sym__0___45_3324970871059066299 || (otherRec.sym__0__8802187528961009747 != sym__0__8802187528961009747 || (otherRec.sym__0___45_8153453103254980376 != sym__0___45_8153453103254980376 || (otherRec.sym__0___45_878170619108389423 != sym__0___45_878170619108389423 || (otherRec.sym__0___45_874194379502172824 != sym__0___45_874194379502172824 || (otherRec.sym__0__8610439003510773098 != sym__0__8610439003510773098 || (otherRec.sym__0__984338793883944389 != sym__0__984338793883944389 || (otherRec.sym__0___45_241371384806950923 != sym__0___45_241371384806950923 || (otherRec.sym__0__4499056235050439447 != sym__0__4499056235050439447 || (otherRec.sym__0___45_602104477057249231 != sym__0___45_602104477057249231 || (otherRec.sym__0__2154432795296205471 != sym__0__2154432795296205471 || (otherRec.sym__0__8120436674510863259 != sym__0__8120436674510863259 || (otherRec.sym__0__8733838863403650604 != sym__0__8733838863403650604 || (otherRec.sym__0__6144840941019744502 != sym__0__6144840941019744502 || (otherRec.sym__0___45_4519435874778032514 != sym__0___45_4519435874778032514 || (otherRec.sym__0__2592840547366705296 != sym__0__2592840547366705296 || (otherRec.sym__0__2788895063297001099 != sym__0__2788895063297001099 || (otherRec.sym__0__1545257135384253129 != sym__0__1545257135384253129 || (otherRec.sym__0___45_4622664073058890953 != sym__0___45_4622664073058890953 || (otherRec.sym__0__7774459284859713893 != sym__0__7774459284859713893 || (otherRec.sym__0__5464006631725545620 != sym__0__5464006631725545620 || (otherRec.sym__0___45_3247512146210145269 != sym__0___45_3247512146210145269 || (otherRec.sym__0___45_4159199765988317501 != sym__0___45_4159199765988317501 || (otherRec.sym__0___45_5417534366741502741 != sym__0___45_5417534366741502741 || (otherRec.sym__0__4597400568918183105 != sym__0__4597400568918183105 || (otherRec.sym__0__8819540415296482823 != sym__0__8819540415296482823 || (otherRec.sym__0___45_623355213379307427 != sym__0___45_623355213379307427 || (otherRec.sym__0__7994108978447880988 != sym__0__7994108978447880988 || (otherRec.sym__0__7664015906371024747 != sym__0__7664015906371024747 || (otherRec.sym__0___45_6006206227144636657 != sym__0___45_6006206227144636657 || (otherRec.sym__0__3122376255932122421 != sym__0__3122376255932122421 || (otherRec.sym__0__5682795704482796293 != sym__0__5682795704482796293 || (otherRec.sym__0__4547320860663492666 != sym__0__4547320860663492666 || (otherRec.sym__0___45_8670773565387601472 != sym__0___45_8670773565387601472 || (otherRec.sym__0___45_13570145613494646 != sym__0___45_13570145613494646 || (otherRec.sym__0__219157410367458310 != sym__0__219157410367458310 || (otherRec.sym__0__698480510036799380 != sym__0__698480510036799380 || (otherRec.sym__0__5321414200743551775 != sym__0__5321414200743551775 || otherRec.sym__0__4130486035242774698 != sym__0__4130486035242774698)))))))))))))))))))))))))))))))))))))))))))))))))))))))));
  }
  unsigned sym__0__7183756631487345723;
  fluidb_string<18> sym__0__4004283392749253291;
  fluidb_string<9> sym__0__7402856733199756645;
  fluidb_string<9> sym__0___45_7276118071870614642;
  unsigned sym__0__7689696364618968408;
  unsigned sym__0__265232048543772062;
  fluidb_string<7> sym__0___45_7391712330109786621;
  unsigned sym__0__9093515676270508468;
  unsigned sym__0__2039577949113231011;
  unsigned sym__0___45_5518709817667950629;
  unsigned sym__0__7446880365925781245;
  unsigned sym__0__3933602404904280238;
  fluidb_string<15> sym__0__839558304030626831;
  fluidb_string<2> sym__0__1895092311538388823;
  fluidb_string<2> sym__0__2442462535421269690;
  fluidb_string<2> sym__0___45_3615474655229170638;
  fluidb_string<2> sym__0__8806662867934001568;
  unsigned sym__0__9165007797673129751;
  int sym__0__6736597523581036605;
  unsigned sym__0___45_3324970871059066299;
  unsigned sym__0__8802187528961009747;
  unsigned sym__0___45_8153453103254980376;
  unsigned sym__0___45_878170619108389423;
  fluidb_string<21> sym__0___45_874194379502172824;
  unsigned sym__0__8610439003510773098;
  fluidb_string<10> sym__0__984338793883944389;
  unsigned sym__0___45_241371384806950923;
  double sym__0__4499056235050439447;
  unsigned sym__0___45_602104477057249231;
  double sym__0__2154432795296205471;
  unsigned sym__0__8120436674510863259;
  unsigned sym__0__8733838863403650604;
  double sym__0__6144840941019744502;
  fluidb_string<13> sym__0___45_4519435874778032514;
  unsigned sym__0__2592840547366705296;
  fluidb_string<25> sym__0__2788895063297001099;
  fluidb_string<40> sym__0__1545257135384253129;
  fluidb_string<16> sym__0___45_4622664073058890953;
  fluidb_string<16> sym__0__7774459284859713893;
  fluidb_string<13> sym__0__5464006631725545620;
  fluidb_string<15> sym__0___45_3247512146210145269;
  unsigned sym__0___45_4159199765988317501;
  fluidb_string<18> sym__0___45_5417534366741502741;
  fluidb_string<40> sym__0__4597400568918183105;
  fluidb_string<11> sym__0__8819540415296482823;
  fluidb_string<15> sym__0___45_623355213379307427;
  fluidb_string<13> sym__0__7994108978447880988;
  fluidb_string<15> sym__0__7664015906371024747;
  fluidb_string<21> sym__0___45_6006206227144636657;
  unsigned sym__0__3122376255932122421;
  fluidb_string<55> sym__0__5682795704482796293;
  fluidb_string<25> sym__0__4547320860663492666;
  fluidb_string<7> sym__0___45_8670773565387601472;
  fluidb_string<10> sym__0___45_13570145613494646;
  fluidb_string<11> sym__0__219157410367458310;
  fluidb_string<25> sym__0__698480510036799380;
  unsigned sym__0__5321414200743551775;
  fluidb_string<10> sym__0__4130486035242774698;
 private:
};


class Record2 {
 public:
  Record2(unsigned __sym__0__3621650489550753899, fluidb_string<18> __sym__0___45_2948215607211369349, fluidb_string<9> __sym__0___45_8856885663442357963, fluidb_string<9> __sym__0___45_8916023721409687458, unsigned __sym__0__8946000790400782120, unsigned __sym__0___45_2342846251621573170, fluidb_string<7> __sym__0__1032112610168018387, unsigned __sym__0__7011664169603445220, unsigned __sym__0__4324933040532830835, unsigned __sym__0___45_4021802192502517237, unsigned __sym__0___45_3995179909498575571, unsigned __sym__0__5024632712808532094, fluidb_string<15> __sym__0___45_2888940964904426273, fluidb_string<2> __sym__0__388284026989546791, fluidb_string<2> __sym__0__7857167294786104330, fluidb_string<2> __sym__0__4687998046624254050, fluidb_string<2> __sym__0__6006260245622319568, unsigned __sym__0___45_6094952503271846681, int __sym__0___45_4584467813004062355, unsigned __sym__0___45_626375228995803371, unsigned __sym__0___45_1921065565269642365, unsigned __sym__0__8159540803036597784, unsigned __sym__0___45_3799099060194420991, fluidb_string<21> __sym__0___45_46659435107143272, unsigned __sym__0__974718074128111770, fluidb_string<10> __sym__0___45_6853763430966553195, unsigned __sym__0___45_3390830821838262747, double __sym__0___45_3119614841511366425, unsigned __sym__0___45_2252607189598367, double __sym__0___45_8964179892079168049, unsigned __sym__0___45_2159923936634862133, unsigned __sym__0___45_8423263630379754148, double __sym__0__3945318628861617222, fluidb_string<13> __sym__0__884810496370279086, unsigned __sym__0___45_4626225858345901984, fluidb_string<25> __sym__0___45_9053558893173472421, fluidb_string<40> __sym__0__7782476241138750585, fluidb_string<16> __sym__0__2792235255099272583, fluidb_string<16> __sym__0___45_5693560869534272203, fluidb_string<13> __sym__0__2412297939095727556, fluidb_string<15> __sym__0__2007415003408133595, unsigned __sym__0___45_5951663584277409901, fluidb_string<18> __sym__0__1069716994239709627, fluidb_string<40> __sym__0__5325598899940282257, fluidb_string<11> __sym__0__6177928352879073975, fluidb_string<15> __sym__0___45_6830131149002033523, fluidb_string<13> __sym__0__4606794854636421868, fluidb_string<15> __sym__0__4310971986799422779, fluidb_string<21> __sym__0___45_329020162802994721, unsigned __sym__0__475106436053698917, fluidb_string<55> __sym__0__2091979395855916501, fluidb_string<25> __sym__0___45_8342080612972883318, fluidb_string<7> __sym__0___45_5674057173303846288, fluidb_string<10> __sym__0__3631223897369402426, fluidb_string<11> __sym__0___45_7986370385586055242, fluidb_string<25> __sym__0___45_385650784014629180, unsigned __sym__0__5959307721228335951, fluidb_string<10> __sym__0___45_5759464174332942374) : sym__0__3621650489550753899(__sym__0__3621650489550753899), sym__0___45_2948215607211369349(__sym__0___45_2948215607211369349), sym__0___45_8856885663442357963(__sym__0___45_8856885663442357963), sym__0___45_8916023721409687458(__sym__0___45_8916023721409687458), sym__0__8946000790400782120(__sym__0__8946000790400782120), sym__0___45_2342846251621573170(__sym__0___45_2342846251621573170), sym__0__1032112610168018387(__sym__0__1032112610168018387), sym__0__7011664169603445220(__sym__0__7011664169603445220), sym__0__4324933040532830835(__sym__0__4324933040532830835), sym__0___45_4021802192502517237(__sym__0___45_4021802192502517237), sym__0___45_3995179909498575571(__sym__0___45_3995179909498575571), sym__0__5024632712808532094(__sym__0__5024632712808532094), sym__0___45_2888940964904426273(__sym__0___45_2888940964904426273), sym__0__388284026989546791(__sym__0__388284026989546791), sym__0__7857167294786104330(__sym__0__7857167294786104330), sym__0__4687998046624254050(__sym__0__4687998046624254050), sym__0__6006260245622319568(__sym__0__6006260245622319568), sym__0___45_6094952503271846681(__sym__0___45_6094952503271846681), sym__0___45_4584467813004062355(__sym__0___45_4584467813004062355), sym__0___45_626375228995803371(__sym__0___45_626375228995803371), sym__0___45_1921065565269642365(__sym__0___45_1921065565269642365), sym__0__8159540803036597784(__sym__0__8159540803036597784), sym__0___45_3799099060194420991(__sym__0___45_3799099060194420991), sym__0___45_46659435107143272(__sym__0___45_46659435107143272), sym__0__974718074128111770(__sym__0__974718074128111770), sym__0___45_6853763430966553195(__sym__0___45_6853763430966553195), sym__0___45_3390830821838262747(__sym__0___45_3390830821838262747), sym__0___45_3119614841511366425(__sym__0___45_3119614841511366425), sym__0___45_2252607189598367(__sym__0___45_2252607189598367), sym__0___45_8964179892079168049(__sym__0___45_8964179892079168049), sym__0___45_2159923936634862133(__sym__0___45_2159923936634862133), sym__0___45_8423263630379754148(__sym__0___45_8423263630379754148), sym__0__3945318628861617222(__sym__0__3945318628861617222), sym__0__884810496370279086(__sym__0__884810496370279086), sym__0___45_4626225858345901984(__sym__0___45_4626225858345901984), sym__0___45_9053558893173472421(__sym__0___45_9053558893173472421), sym__0__7782476241138750585(__sym__0__7782476241138750585), sym__0__2792235255099272583(__sym__0__2792235255099272583), sym__0___45_5693560869534272203(__sym__0___45_5693560869534272203), sym__0__2412297939095727556(__sym__0__2412297939095727556), sym__0__2007415003408133595(__sym__0__2007415003408133595), sym__0___45_5951663584277409901(__sym__0___45_5951663584277409901), sym__0__1069716994239709627(__sym__0__1069716994239709627), sym__0__5325598899940282257(__sym__0__5325598899940282257), sym__0__6177928352879073975(__sym__0__6177928352879073975), sym__0___45_6830131149002033523(__sym__0___45_6830131149002033523), sym__0__4606794854636421868(__sym__0__4606794854636421868), sym__0__4310971986799422779(__sym__0__4310971986799422779), sym__0___45_329020162802994721(__sym__0___45_329020162802994721), sym__0__475106436053698917(__sym__0__475106436053698917), sym__0__2091979395855916501(__sym__0__2091979395855916501), sym__0___45_8342080612972883318(__sym__0___45_8342080612972883318), sym__0___45_5674057173303846288(__sym__0___45_5674057173303846288), sym__0__3631223897369402426(__sym__0__3631223897369402426), sym__0___45_7986370385586055242(__sym__0___45_7986370385586055242), sym__0___45_385650784014629180(__sym__0___45_385650784014629180), sym__0__5959307721228335951(__sym__0__5959307721228335951), sym__0___45_5759464174332942374(__sym__0___45_5759464174332942374)
  {
  }
  Record2() 
  {
  }
  std::string show() const{
    std::stringstream o;
    o << sym__0__3621650489550753899 << " | " << arrToString(sym__0___45_2948215607211369349) << " | " << arrToString(sym__0___45_8856885663442357963) << " | " << arrToString(sym__0___45_8916023721409687458) << " | " << sym__0__8946000790400782120 << " | " << sym__0___45_2342846251621573170 << " | " << arrToString(sym__0__1032112610168018387) << " | " << sym__0__7011664169603445220 << " | " << sym__0__4324933040532830835 << " | " << sym__0___45_4021802192502517237 << " | " << sym__0___45_3995179909498575571 << " | " << sym__0__5024632712808532094 << " | " << arrToString(sym__0___45_2888940964904426273) << " | " << arrToString(sym__0__388284026989546791) << " | " << arrToString(sym__0__7857167294786104330) << " | " << arrToString(sym__0__4687998046624254050) << " | " << arrToString(sym__0__6006260245622319568) << " | " << sym__0___45_6094952503271846681 << " | " << sym__0___45_4584467813004062355 << " | " << sym__0___45_626375228995803371 << " | " << sym__0___45_1921065565269642365 << " | " << sym__0__8159540803036597784 << " | " << sym__0___45_3799099060194420991 << " | " << arrToString(sym__0___45_46659435107143272) << " | " << sym__0__974718074128111770 << " | " << arrToString(sym__0___45_6853763430966553195) << " | " << sym__0___45_3390830821838262747 << " | " << sym__0___45_3119614841511366425 << " | " << sym__0___45_2252607189598367 << " | " << sym__0___45_8964179892079168049 << " | " << sym__0___45_2159923936634862133 << " | " << sym__0___45_8423263630379754148 << " | " << sym__0__3945318628861617222 << " | " << arrToString(sym__0__884810496370279086) << " | " << sym__0___45_4626225858345901984 << " | " << arrToString(sym__0___45_9053558893173472421) << " | " << arrToString(sym__0__7782476241138750585) << " | " << arrToString(sym__0__2792235255099272583) << " | " << arrToString(sym__0___45_5693560869534272203) << " | " << arrToString(sym__0__2412297939095727556) << " | " << arrToString(sym__0__2007415003408133595) << " | " << sym__0___45_5951663584277409901 << " | " << arrToString(sym__0__1069716994239709627) << " | " << arrToString(sym__0__5325598899940282257) << " | " << arrToString(sym__0__6177928352879073975) << " | " << arrToString(sym__0___45_6830131149002033523) << " | " << arrToString(sym__0__4606794854636421868) << " | " << arrToString(sym__0__4310971986799422779) << " | " << arrToString(sym__0___45_329020162802994721) << " | " << sym__0__475106436053698917 << " | " << arrToString(sym__0__2091979395855916501) << " | " << arrToString(sym__0___45_8342080612972883318) << " | " << arrToString(sym__0___45_5674057173303846288) << " | " << arrToString(sym__0__3631223897369402426) << " | " << arrToString(sym__0___45_7986370385586055242) << " | " << arrToString(sym__0___45_385650784014629180) << " | " << sym__0__5959307721228335951 << " | " << arrToString(sym__0___45_5759464174332942374);
    return o.str();
  }
  bool operator <(const Record2& otherRec) const{
    return (otherRec.sym__0__3621650489550753899 < sym__0__3621650489550753899 && (otherRec.sym__0___45_2948215607211369349 < sym__0___45_2948215607211369349 && (otherRec.sym__0___45_8856885663442357963 < sym__0___45_8856885663442357963 && (otherRec.sym__0___45_8916023721409687458 < sym__0___45_8916023721409687458 && (otherRec.sym__0__8946000790400782120 < sym__0__8946000790400782120 && (otherRec.sym__0___45_2342846251621573170 < sym__0___45_2342846251621573170 && (otherRec.sym__0__1032112610168018387 < sym__0__1032112610168018387 && (otherRec.sym__0__7011664169603445220 < sym__0__7011664169603445220 && (otherRec.sym__0__4324933040532830835 < sym__0__4324933040532830835 && (otherRec.sym__0___45_4021802192502517237 < sym__0___45_4021802192502517237 && (otherRec.sym__0___45_3995179909498575571 < sym__0___45_3995179909498575571 && (otherRec.sym__0__5024632712808532094 < sym__0__5024632712808532094 && (otherRec.sym__0___45_2888940964904426273 < sym__0___45_2888940964904426273 && (otherRec.sym__0__388284026989546791 < sym__0__388284026989546791 && (otherRec.sym__0__7857167294786104330 < sym__0__7857167294786104330 && (otherRec.sym__0__4687998046624254050 < sym__0__4687998046624254050 && (otherRec.sym__0__6006260245622319568 < sym__0__6006260245622319568 && (otherRec.sym__0___45_6094952503271846681 < sym__0___45_6094952503271846681 && (otherRec.sym__0___45_4584467813004062355 < sym__0___45_4584467813004062355 && (otherRec.sym__0___45_626375228995803371 < sym__0___45_626375228995803371 && (otherRec.sym__0___45_1921065565269642365 < sym__0___45_1921065565269642365 && (otherRec.sym__0__8159540803036597784 < sym__0__8159540803036597784 && (otherRec.sym__0___45_3799099060194420991 < sym__0___45_3799099060194420991 && (otherRec.sym__0___45_46659435107143272 < sym__0___45_46659435107143272 && (otherRec.sym__0__974718074128111770 < sym__0__974718074128111770 && (otherRec.sym__0___45_6853763430966553195 < sym__0___45_6853763430966553195 && (otherRec.sym__0___45_3390830821838262747 < sym__0___45_3390830821838262747 && (otherRec.sym__0___45_3119614841511366425 < sym__0___45_3119614841511366425 && (otherRec.sym__0___45_2252607189598367 < sym__0___45_2252607189598367 && (otherRec.sym__0___45_8964179892079168049 < sym__0___45_8964179892079168049 && (otherRec.sym__0___45_2159923936634862133 < sym__0___45_2159923936634862133 && (otherRec.sym__0___45_8423263630379754148 < sym__0___45_8423263630379754148 && (otherRec.sym__0__3945318628861617222 < sym__0__3945318628861617222 && (otherRec.sym__0__884810496370279086 < sym__0__884810496370279086 && (otherRec.sym__0___45_4626225858345901984 < sym__0___45_4626225858345901984 && (otherRec.sym__0___45_9053558893173472421 < sym__0___45_9053558893173472421 && (otherRec.sym__0__7782476241138750585 < sym__0__7782476241138750585 && (otherRec.sym__0__2792235255099272583 < sym__0__2792235255099272583 && (otherRec.sym__0___45_5693560869534272203 < sym__0___45_5693560869534272203 && (otherRec.sym__0__2412297939095727556 < sym__0__2412297939095727556 && (otherRec.sym__0__2007415003408133595 < sym__0__2007415003408133595 && (otherRec.sym__0___45_5951663584277409901 < sym__0___45_5951663584277409901 && (otherRec.sym__0__1069716994239709627 < sym__0__1069716994239709627 && (otherRec.sym__0__5325598899940282257 < sym__0__5325598899940282257 && (otherRec.sym__0__6177928352879073975 < sym__0__6177928352879073975 && (otherRec.sym__0___45_6830131149002033523 < sym__0___45_6830131149002033523 && (otherRec.sym__0__4606794854636421868 < sym__0__4606794854636421868 && (otherRec.sym__0__4310971986799422779 < sym__0__4310971986799422779 && (otherRec.sym__0___45_329020162802994721 < sym__0___45_329020162802994721 && (otherRec.sym__0__475106436053698917 < sym__0__475106436053698917 && (otherRec.sym__0__2091979395855916501 < sym__0__2091979395855916501 && (otherRec.sym__0___45_8342080612972883318 < sym__0___45_8342080612972883318 && (otherRec.sym__0___45_5674057173303846288 < sym__0___45_5674057173303846288 && (otherRec.sym__0__3631223897369402426 < sym__0__3631223897369402426 && (otherRec.sym__0___45_7986370385586055242 < sym__0___45_7986370385586055242 && (otherRec.sym__0___45_385650784014629180 < sym__0___45_385650784014629180 && (otherRec.sym__0__5959307721228335951 < sym__0__5959307721228335951 && otherRec.sym__0___45_5759464174332942374 < sym__0___45_5759464174332942374)))))))))))))))))))))))))))))))))))))))))))))))))))))))));
  }
  bool operator ==(const Record2& otherRec) const{
    return (otherRec.sym__0__3621650489550753899 == sym__0__3621650489550753899 && (otherRec.sym__0___45_2948215607211369349 == sym__0___45_2948215607211369349 && (otherRec.sym__0___45_8856885663442357963 == sym__0___45_8856885663442357963 && (otherRec.sym__0___45_8916023721409687458 == sym__0___45_8916023721409687458 && (otherRec.sym__0__8946000790400782120 == sym__0__8946000790400782120 && (otherRec.sym__0___45_2342846251621573170 == sym__0___45_2342846251621573170 && (otherRec.sym__0__1032112610168018387 == sym__0__1032112610168018387 && (otherRec.sym__0__7011664169603445220 == sym__0__7011664169603445220 && (otherRec.sym__0__4324933040532830835 == sym__0__4324933040532830835 && (otherRec.sym__0___45_4021802192502517237 == sym__0___45_4021802192502517237 && (otherRec.sym__0___45_3995179909498575571 == sym__0___45_3995179909498575571 && (otherRec.sym__0__5024632712808532094 == sym__0__5024632712808532094 && (otherRec.sym__0___45_2888940964904426273 == sym__0___45_2888940964904426273 && (otherRec.sym__0__388284026989546791 == sym__0__388284026989546791 && (otherRec.sym__0__7857167294786104330 == sym__0__7857167294786104330 && (otherRec.sym__0__4687998046624254050 == sym__0__4687998046624254050 && (otherRec.sym__0__6006260245622319568 == sym__0__6006260245622319568 && (otherRec.sym__0___45_6094952503271846681 == sym__0___45_6094952503271846681 && (otherRec.sym__0___45_4584467813004062355 == sym__0___45_4584467813004062355 && (otherRec.sym__0___45_626375228995803371 == sym__0___45_626375228995803371 && (otherRec.sym__0___45_1921065565269642365 == sym__0___45_1921065565269642365 && (otherRec.sym__0__8159540803036597784 == sym__0__8159540803036597784 && (otherRec.sym__0___45_3799099060194420991 == sym__0___45_3799099060194420991 && (otherRec.sym__0___45_46659435107143272 == sym__0___45_46659435107143272 && (otherRec.sym__0__974718074128111770 == sym__0__974718074128111770 && (otherRec.sym__0___45_6853763430966553195 == sym__0___45_6853763430966553195 && (otherRec.sym__0___45_3390830821838262747 == sym__0___45_3390830821838262747 && (otherRec.sym__0___45_3119614841511366425 == sym__0___45_3119614841511366425 && (otherRec.sym__0___45_2252607189598367 == sym__0___45_2252607189598367 && (otherRec.sym__0___45_8964179892079168049 == sym__0___45_8964179892079168049 && (otherRec.sym__0___45_2159923936634862133 == sym__0___45_2159923936634862133 && (otherRec.sym__0___45_8423263630379754148 == sym__0___45_8423263630379754148 && (otherRec.sym__0__3945318628861617222 == sym__0__3945318628861617222 && (otherRec.sym__0__884810496370279086 == sym__0__884810496370279086 && (otherRec.sym__0___45_4626225858345901984 == sym__0___45_4626225858345901984 && (otherRec.sym__0___45_9053558893173472421 == sym__0___45_9053558893173472421 && (otherRec.sym__0__7782476241138750585 == sym__0__7782476241138750585 && (otherRec.sym__0__2792235255099272583 == sym__0__2792235255099272583 && (otherRec.sym__0___45_5693560869534272203 == sym__0___45_5693560869534272203 && (otherRec.sym__0__2412297939095727556 == sym__0__2412297939095727556 && (otherRec.sym__0__2007415003408133595 == sym__0__2007415003408133595 && (otherRec.sym__0___45_5951663584277409901 == sym__0___45_5951663584277409901 && (otherRec.sym__0__1069716994239709627 == sym__0__1069716994239709627 && (otherRec.sym__0__5325598899940282257 == sym__0__5325598899940282257 && (otherRec.sym__0__6177928352879073975 == sym__0__6177928352879073975 && (otherRec.sym__0___45_6830131149002033523 == sym__0___45_6830131149002033523 && (otherRec.sym__0__4606794854636421868 == sym__0__4606794854636421868 && (otherRec.sym__0__4310971986799422779 == sym__0__4310971986799422779 && (otherRec.sym__0___45_329020162802994721 == sym__0___45_329020162802994721 && (otherRec.sym__0__475106436053698917 == sym__0__475106436053698917 && (otherRec.sym__0__2091979395855916501 == sym__0__2091979395855916501 && (otherRec.sym__0___45_8342080612972883318 == sym__0___45_8342080612972883318 && (otherRec.sym__0___45_5674057173303846288 == sym__0___45_5674057173303846288 && (otherRec.sym__0__3631223897369402426 == sym__0__3631223897369402426 && (otherRec.sym__0___45_7986370385586055242 == sym__0___45_7986370385586055242 && (otherRec.sym__0___45_385650784014629180 == sym__0___45_385650784014629180 && (otherRec.sym__0__5959307721228335951 == sym__0__5959307721228335951 && otherRec.sym__0___45_5759464174332942374 == sym__0___45_5759464174332942374)))))))))))))))))))))))))))))))))))))))))))))))))))))))));
  }
  bool operator !=(const Record2& otherRec) const{
    return (otherRec.sym__0__3621650489550753899 != sym__0__3621650489550753899 || (otherRec.sym__0___45_2948215607211369349 != sym__0___45_2948215607211369349 || (otherRec.sym__0___45_8856885663442357963 != sym__0___45_8856885663442357963 || (otherRec.sym__0___45_8916023721409687458 != sym__0___45_8916023721409687458 || (otherRec.sym__0__8946000790400782120 != sym__0__8946000790400782120 || (otherRec.sym__0___45_2342846251621573170 != sym__0___45_2342846251621573170 || (otherRec.sym__0__1032112610168018387 != sym__0__1032112610168018387 || (otherRec.sym__0__7011664169603445220 != sym__0__7011664169603445220 || (otherRec.sym__0__4324933040532830835 != sym__0__4324933040532830835 || (otherRec.sym__0___45_4021802192502517237 != sym__0___45_4021802192502517237 || (otherRec.sym__0___45_3995179909498575571 != sym__0___45_3995179909498575571 || (otherRec.sym__0__5024632712808532094 != sym__0__5024632712808532094 || (otherRec.sym__0___45_2888940964904426273 != sym__0___45_2888940964904426273 || (otherRec.sym__0__388284026989546791 != sym__0__388284026989546791 || (otherRec.sym__0__7857167294786104330 != sym__0__7857167294786104330 || (otherRec.sym__0__4687998046624254050 != sym__0__4687998046624254050 || (otherRec.sym__0__6006260245622319568 != sym__0__6006260245622319568 || (otherRec.sym__0___45_6094952503271846681 != sym__0___45_6094952503271846681 || (otherRec.sym__0___45_4584467813004062355 != sym__0___45_4584467813004062355 || (otherRec.sym__0___45_626375228995803371 != sym__0___45_626375228995803371 || (otherRec.sym__0___45_1921065565269642365 != sym__0___45_1921065565269642365 || (otherRec.sym__0__8159540803036597784 != sym__0__8159540803036597784 || (otherRec.sym__0___45_3799099060194420991 != sym__0___45_3799099060194420991 || (otherRec.sym__0___45_46659435107143272 != sym__0___45_46659435107143272 || (otherRec.sym__0__974718074128111770 != sym__0__974718074128111770 || (otherRec.sym__0___45_6853763430966553195 != sym__0___45_6853763430966553195 || (otherRec.sym__0___45_3390830821838262747 != sym__0___45_3390830821838262747 || (otherRec.sym__0___45_3119614841511366425 != sym__0___45_3119614841511366425 || (otherRec.sym__0___45_2252607189598367 != sym__0___45_2252607189598367 || (otherRec.sym__0___45_8964179892079168049 != sym__0___45_8964179892079168049 || (otherRec.sym__0___45_2159923936634862133 != sym__0___45_2159923936634862133 || (otherRec.sym__0___45_8423263630379754148 != sym__0___45_8423263630379754148 || (otherRec.sym__0__3945318628861617222 != sym__0__3945318628861617222 || (otherRec.sym__0__884810496370279086 != sym__0__884810496370279086 || (otherRec.sym__0___45_4626225858345901984 != sym__0___45_4626225858345901984 || (otherRec.sym__0___45_9053558893173472421 != sym__0___45_9053558893173472421 || (otherRec.sym__0__7782476241138750585 != sym__0__7782476241138750585 || (otherRec.sym__0__2792235255099272583 != sym__0__2792235255099272583 || (otherRec.sym__0___45_5693560869534272203 != sym__0___45_5693560869534272203 || (otherRec.sym__0__2412297939095727556 != sym__0__2412297939095727556 || (otherRec.sym__0__2007415003408133595 != sym__0__2007415003408133595 || (otherRec.sym__0___45_5951663584277409901 != sym__0___45_5951663584277409901 || (otherRec.sym__0__1069716994239709627 != sym__0__1069716994239709627 || (otherRec.sym__0__5325598899940282257 != sym__0__5325598899940282257 || (otherRec.sym__0__6177928352879073975 != sym__0__6177928352879073975 || (otherRec.sym__0___45_6830131149002033523 != sym__0___45_6830131149002033523 || (otherRec.sym__0__4606794854636421868 != sym__0__4606794854636421868 || (otherRec.sym__0__4310971986799422779 != sym__0__4310971986799422779 || (otherRec.sym__0___45_329020162802994721 != sym__0___45_329020162802994721 || (otherRec.sym__0__475106436053698917 != sym__0__475106436053698917 || (otherRec.sym__0__2091979395855916501 != sym__0__2091979395855916501 || (otherRec.sym__0___45_8342080612972883318 != sym__0___45_8342080612972883318 || (otherRec.sym__0___45_5674057173303846288 != sym__0___45_5674057173303846288 || (otherRec.sym__0__3631223897369402426 != sym__0__3631223897369402426 || (otherRec.sym__0___45_7986370385586055242 != sym__0___45_7986370385586055242 || (otherRec.sym__0___45_385650784014629180 != sym__0___45_385650784014629180 || (otherRec.sym__0__5959307721228335951 != sym__0__5959307721228335951 || otherRec.sym__0___45_5759464174332942374 != sym__0___45_5759464174332942374)))))))))))))))))))))))))))))))))))))))))))))))))))))))));
  }
  unsigned sym__0__3621650489550753899;
  fluidb_string<18> sym__0___45_2948215607211369349;
  fluidb_string<9> sym__0___45_8856885663442357963;
  fluidb_string<9> sym__0___45_8916023721409687458;
  unsigned sym__0__8946000790400782120;
  unsigned sym__0___45_2342846251621573170;
  fluidb_string<7> sym__0__1032112610168018387;
  unsigned sym__0__7011664169603445220;
  unsigned sym__0__4324933040532830835;
  unsigned sym__0___45_4021802192502517237;
  unsigned sym__0___45_3995179909498575571;
  unsigned sym__0__5024632712808532094;
  fluidb_string<15> sym__0___45_2888940964904426273;
  fluidb_string<2> sym__0__388284026989546791;
  fluidb_string<2> sym__0__7857167294786104330;
  fluidb_string<2> sym__0__4687998046624254050;
  fluidb_string<2> sym__0__6006260245622319568;
  unsigned sym__0___45_6094952503271846681;
  int sym__0___45_4584467813004062355;
  unsigned sym__0___45_626375228995803371;
  unsigned sym__0___45_1921065565269642365;
  unsigned sym__0__8159540803036597784;
  unsigned sym__0___45_3799099060194420991;
  fluidb_string<21> sym__0___45_46659435107143272;
  unsigned sym__0__974718074128111770;
  fluidb_string<10> sym__0___45_6853763430966553195;
  unsigned sym__0___45_3390830821838262747;
  double sym__0___45_3119614841511366425;
  unsigned sym__0___45_2252607189598367;
  double sym__0___45_8964179892079168049;
  unsigned sym__0___45_2159923936634862133;
  unsigned sym__0___45_8423263630379754148;
  double sym__0__3945318628861617222;
  fluidb_string<13> sym__0__884810496370279086;
  unsigned sym__0___45_4626225858345901984;
  fluidb_string<25> sym__0___45_9053558893173472421;
  fluidb_string<40> sym__0__7782476241138750585;
  fluidb_string<16> sym__0__2792235255099272583;
  fluidb_string<16> sym__0___45_5693560869534272203;
  fluidb_string<13> sym__0__2412297939095727556;
  fluidb_string<15> sym__0__2007415003408133595;
  unsigned sym__0___45_5951663584277409901;
  fluidb_string<18> sym__0__1069716994239709627;
  fluidb_string<40> sym__0__5325598899940282257;
  fluidb_string<11> sym__0__6177928352879073975;
  fluidb_string<15> sym__0___45_6830131149002033523;
  fluidb_string<13> sym__0__4606794854636421868;
  fluidb_string<15> sym__0__4310971986799422779;
  fluidb_string<21> sym__0___45_329020162802994721;
  unsigned sym__0__475106436053698917;
  fluidb_string<55> sym__0__2091979395855916501;
  fluidb_string<25> sym__0___45_8342080612972883318;
  fluidb_string<7> sym__0___45_5674057173303846288;
  fluidb_string<10> sym__0__3631223897369402426;
  fluidb_string<11> sym__0___45_7986370385586055242;
  fluidb_string<25> sym__0___45_385650784014629180;
  unsigned sym__0__5959307721228335951;
  fluidb_string<10> sym__0___45_5759464174332942374;
 private:
};


class Record15 {
 public:
  Record15(unsigned __sortElem0) : sortElem0(__sortElem0)
  {
  }
  Record15() 
  {
  }
  std::string show() const{
    std::stringstream o;
    o << sortElem0;
    return o.str();
  }
  bool operator <(const Record15& otherRec) const{
    return otherRec.sortElem0 < sortElem0;
  }
  bool operator ==(const Record15& otherRec) const{
    return otherRec.sortElem0 == sortElem0;
  }
  bool operator !=(const Record15& otherRec) const{
    return otherRec.sortElem0 != sortElem0;
  }
  unsigned sortElem0;
 private:
};


class Record41 {
 public:
  Record41(unsigned __sortElem0, fluidb_string<16> __sortElem1, fluidb_string<10> __sortElem2) : sortElem0(__sortElem0), sortElem1(__sortElem1), sortElem2(__sortElem2)
  {
  }
  Record41() 
  {
  }
  std::string show() const{
    std::stringstream o;
    o << sortElem0 << " | " << arrToString(sortElem1) << " | " << arrToString(sortElem2);
    return o.str();
  }
  bool operator <(const Record41& otherRec) const{
    return (otherRec.sortElem0 < sortElem0 && (otherRec.sortElem1 < sortElem1 && otherRec.sortElem2 < sortElem2));
  }
  bool operator ==(const Record41& otherRec) const{
    return (otherRec.sortElem0 == sortElem0 && (otherRec.sortElem1 == sortElem1 && otherRec.sortElem2 == sortElem2));
  }
  bool operator !=(const Record41& otherRec) const{
    return (otherRec.sortElem0 != sortElem0 || (otherRec.sortElem1 != sortElem1 || otherRec.sortElem2 != sortElem2));
  }
  unsigned sortElem0;
  fluidb_string<16> sortElem1;
  fluidb_string<10> sortElem2;
 private:
};


class Record11 {
 public:
  Record11(unsigned __sym__0__2037864888707786451, fluidb_string<18> __sym__0__8533656712666151747, fluidb_string<9> __sym__0__646314041574508429, fluidb_string<9> __sym__0__6064137978327902054, unsigned __sym__0__3754157776500852496, unsigned __sym__0__6284345160241949046, fluidb_string<7> __sym__0___45_773692805971570325, unsigned __sym__0___45_8399474032083007524, unsigned __sym__0___45_2038947427357444789, unsigned __sym__0__6071994954612827827, unsigned __sym__0__7742515703067448213, unsigned __sym__0__5201219213304227654, fluidb_string<15> __sym__0___45_5896625796158057241, fluidb_string<2> __sym__0___45_1108504872221226081, fluidb_string<2> __sym__0__1055103969674359346, fluidb_string<2> __sym__0__9115626546918942554, fluidb_string<2> __sym__0___45_6850413444013389848) : sym__0__2037864888707786451(__sym__0__2037864888707786451), sym__0__8533656712666151747(__sym__0__8533656712666151747), sym__0__646314041574508429(__sym__0__646314041574508429), sym__0__6064137978327902054(__sym__0__6064137978327902054), sym__0__3754157776500852496(__sym__0__3754157776500852496), sym__0__6284345160241949046(__sym__0__6284345160241949046), sym__0___45_773692805971570325(__sym__0___45_773692805971570325), sym__0___45_8399474032083007524(__sym__0___45_8399474032083007524), sym__0___45_2038947427357444789(__sym__0___45_2038947427357444789), sym__0__6071994954612827827(__sym__0__6071994954612827827), sym__0__7742515703067448213(__sym__0__7742515703067448213), sym__0__5201219213304227654(__sym__0__5201219213304227654), sym__0___45_5896625796158057241(__sym__0___45_5896625796158057241), sym__0___45_1108504872221226081(__sym__0___45_1108504872221226081), sym__0__1055103969674359346(__sym__0__1055103969674359346), sym__0__9115626546918942554(__sym__0__9115626546918942554), sym__0___45_6850413444013389848(__sym__0___45_6850413444013389848)
  {
  }
  Record11() 
  {
  }
  std::string show() const{
    std::stringstream o;
    o << sym__0__2037864888707786451 << " | " << arrToString(sym__0__8533656712666151747) << " | " << arrToString(sym__0__646314041574508429) << " | " << arrToString(sym__0__6064137978327902054) << " | " << sym__0__3754157776500852496 << " | " << sym__0__6284345160241949046 << " | " << arrToString(sym__0___45_773692805971570325) << " | " << sym__0___45_8399474032083007524 << " | " << sym__0___45_2038947427357444789 << " | " << sym__0__6071994954612827827 << " | " << sym__0__7742515703067448213 << " | " << sym__0__5201219213304227654 << " | " << arrToString(sym__0___45_5896625796158057241) << " | " << arrToString(sym__0___45_1108504872221226081) << " | " << arrToString(sym__0__1055103969674359346) << " | " << arrToString(sym__0__9115626546918942554) << " | " << arrToString(sym__0___45_6850413444013389848);
    return o.str();
  }
  bool operator <(const Record11& otherRec) const{
    return (otherRec.sym__0__2037864888707786451 < sym__0__2037864888707786451 && (otherRec.sym__0__8533656712666151747 < sym__0__8533656712666151747 && (otherRec.sym__0__646314041574508429 < sym__0__646314041574508429 && (otherRec.sym__0__6064137978327902054 < sym__0__6064137978327902054 && (otherRec.sym__0__3754157776500852496 < sym__0__3754157776500852496 && (otherRec.sym__0__6284345160241949046 < sym__0__6284345160241949046 && (otherRec.sym__0___45_773692805971570325 < sym__0___45_773692805971570325 && (otherRec.sym__0___45_8399474032083007524 < sym__0___45_8399474032083007524 && (otherRec.sym__0___45_2038947427357444789 < sym__0___45_2038947427357444789 && (otherRec.sym__0__6071994954612827827 < sym__0__6071994954612827827 && (otherRec.sym__0__7742515703067448213 < sym__0__7742515703067448213 && (otherRec.sym__0__5201219213304227654 < sym__0__5201219213304227654 && (otherRec.sym__0___45_5896625796158057241 < sym__0___45_5896625796158057241 && (otherRec.sym__0___45_1108504872221226081 < sym__0___45_1108504872221226081 && (otherRec.sym__0__1055103969674359346 < sym__0__1055103969674359346 && (otherRec.sym__0__9115626546918942554 < sym__0__9115626546918942554 && otherRec.sym__0___45_6850413444013389848 < sym__0___45_6850413444013389848))))))))))))))));
  }
  bool operator ==(const Record11& otherRec) const{
    return (otherRec.sym__0__2037864888707786451 == sym__0__2037864888707786451 && (otherRec.sym__0__8533656712666151747 == sym__0__8533656712666151747 && (otherRec.sym__0__646314041574508429 == sym__0__646314041574508429 && (otherRec.sym__0__6064137978327902054 == sym__0__6064137978327902054 && (otherRec.sym__0__3754157776500852496 == sym__0__3754157776500852496 && (otherRec.sym__0__6284345160241949046 == sym__0__6284345160241949046 && (otherRec.sym__0___45_773692805971570325 == sym__0___45_773692805971570325 && (otherRec.sym__0___45_8399474032083007524 == sym__0___45_8399474032083007524 && (otherRec.sym__0___45_2038947427357444789 == sym__0___45_2038947427357444789 && (otherRec.sym__0__6071994954612827827 == sym__0__6071994954612827827 && (otherRec.sym__0__7742515703067448213 == sym__0__7742515703067448213 && (otherRec.sym__0__5201219213304227654 == sym__0__5201219213304227654 && (otherRec.sym__0___45_5896625796158057241 == sym__0___45_5896625796158057241 && (otherRec.sym__0___45_1108504872221226081 == sym__0___45_1108504872221226081 && (otherRec.sym__0__1055103969674359346 == sym__0__1055103969674359346 && (otherRec.sym__0__9115626546918942554 == sym__0__9115626546918942554 && otherRec.sym__0___45_6850413444013389848 == sym__0___45_6850413444013389848))))))))))))))));
  }
  bool operator !=(const Record11& otherRec) const{
    return (otherRec.sym__0__2037864888707786451 != sym__0__2037864888707786451 || (otherRec.sym__0__8533656712666151747 != sym__0__8533656712666151747 || (otherRec.sym__0__646314041574508429 != sym__0__646314041574508429 || (otherRec.sym__0__6064137978327902054 != sym__0__6064137978327902054 || (otherRec.sym__0__3754157776500852496 != sym__0__3754157776500852496 || (otherRec.sym__0__6284345160241949046 != sym__0__6284345160241949046 || (otherRec.sym__0___45_773692805971570325 != sym__0___45_773692805971570325 || (otherRec.sym__0___45_8399474032083007524 != sym__0___45_8399474032083007524 || (otherRec.sym__0___45_2038947427357444789 != sym__0___45_2038947427357444789 || (otherRec.sym__0__6071994954612827827 != sym__0__6071994954612827827 || (otherRec.sym__0__7742515703067448213 != sym__0__7742515703067448213 || (otherRec.sym__0__5201219213304227654 != sym__0__5201219213304227654 || (otherRec.sym__0___45_5896625796158057241 != sym__0___45_5896625796158057241 || (otherRec.sym__0___45_1108504872221226081 != sym__0___45_1108504872221226081 || (otherRec.sym__0__1055103969674359346 != sym__0__1055103969674359346 || (otherRec.sym__0__9115626546918942554 != sym__0__9115626546918942554 || otherRec.sym__0___45_6850413444013389848 != sym__0___45_6850413444013389848))))))))))))))));
  }
  unsigned sym__0__2037864888707786451;
  fluidb_string<18> sym__0__8533656712666151747;
  fluidb_string<9> sym__0__646314041574508429;
  fluidb_string<9> sym__0__6064137978327902054;
  unsigned sym__0__3754157776500852496;
  unsigned sym__0__6284345160241949046;
  fluidb_string<7> sym__0___45_773692805971570325;
  unsigned sym__0___45_8399474032083007524;
  unsigned sym__0___45_2038947427357444789;
  unsigned sym__0__6071994954612827827;
  unsigned sym__0__7742515703067448213;
  unsigned sym__0__5201219213304227654;
  fluidb_string<15> sym__0___45_5896625796158057241;
  fluidb_string<2> sym__0___45_1108504872221226081;
  fluidb_string<2> sym__0__1055103969674359346;
  fluidb_string<2> sym__0__9115626546918942554;
  fluidb_string<2> sym__0___45_6850413444013389848;
 private:
};


class Record36 {
 public:
  Record36(unsigned __sym__0__1547076744925930880, fluidb_string<18> __sym__0__3079651708208385520, fluidb_string<9> __sym__0__722488589300315522, fluidb_string<9> __sym__0__5728736137952035521, unsigned __sym__0__1016643266231007683, unsigned __sym__0__7488963553490858577, fluidb_string<7> __sym__0___45_5912777685800611816, unsigned __sym__0__5163174048669277343, unsigned __sym__0__1804747360158272504, unsigned __sym__0___45_8585488438570493216, unsigned __sym__0___45_5255213217507996278, unsigned __sym__0__922056654626502433, fluidb_string<15> __sym__0__8167091386086901924, fluidb_string<2> __sym__0___45_6557548601784909220, fluidb_string<2> __sym__0__3982600392097801133, fluidb_string<2> __sym__0___45_2639369843693128107, fluidb_string<2> __sym__0___45_2892948589959819237, unsigned __sym__0___45_3083177374599918180, int __sym__0___45_4767370105190669238, unsigned __sym__0__7622263690412824738, unsigned __sym__0__51540186613445224, unsigned __sym__0__5816250341010414547, unsigned __sym__0___45_4395275123805465570, fluidb_string<21> __sym__0___45_7314445511356925101, unsigned __sym__0__1160535804228364061, fluidb_string<10> __sym__0___45_658439635996140254, unsigned __sym__0__5408690261773440146, double __sym__0__4735189913708153244, unsigned __sym__0___45_8984691491589025986, double __sym__0__4667820012727147444, unsigned __sym__0__2342925512217931808, unsigned __sym__0__1214124832604663335, double __sym__0__3255112656206796761, fluidb_string<13> __sym__0__4481647413238555121, unsigned __sym__0___45_8432259835637048949, fluidb_string<25> __sym__0__4548729478722910608, fluidb_string<40> __sym__0___45_121547008029878490, fluidb_string<16> __sym__0__3269568155542253564, fluidb_string<16> __sym__0__3982220672063046018, fluidb_string<13> __sym__0__4693536182358499263, fluidb_string<15> __sym__0__2984872593914002448, unsigned __sym__0__6297984954898127448, fluidb_string<18> __sym__0___45_2539705795808102992, fluidb_string<40> __sym__0__4925130884886294926, fluidb_string<11> __sym__0___45_6056498752508205364, fluidb_string<15> __sym__0___45_5529708794626966486, fluidb_string<13> __sym__0___45_4737680138599499881, fluidb_string<15> __sym__0__6984993766776696624, fluidb_string<21> __sym__0___45_8393949379764847708, unsigned __sym__0__4462919605968504146, fluidb_string<55> __sym__0__6874577426955441634, fluidb_string<25> __sym__0___45_1088065985843605459, fluidb_string<7> __sym__0__228349805477520123, fluidb_string<10> __sym__0___45_3813708782342371331, fluidb_string<11> __sym__0__2924304181004936681, fluidb_string<25> __sym__0___45_812065277175253313, unsigned __sym__0___45_879260575341141708, fluidb_string<10> __sym__0___45_5047397743832953891) : sym__0__1547076744925930880(__sym__0__1547076744925930880), sym__0__3079651708208385520(__sym__0__3079651708208385520), sym__0__722488589300315522(__sym__0__722488589300315522), sym__0__5728736137952035521(__sym__0__5728736137952035521), sym__0__1016643266231007683(__sym__0__1016643266231007683), sym__0__7488963553490858577(__sym__0__7488963553490858577), sym__0___45_5912777685800611816(__sym__0___45_5912777685800611816), sym__0__5163174048669277343(__sym__0__5163174048669277343), sym__0__1804747360158272504(__sym__0__1804747360158272504), sym__0___45_8585488438570493216(__sym__0___45_8585488438570493216), sym__0___45_5255213217507996278(__sym__0___45_5255213217507996278), sym__0__922056654626502433(__sym__0__922056654626502433), sym__0__8167091386086901924(__sym__0__8167091386086901924), sym__0___45_6557548601784909220(__sym__0___45_6557548601784909220), sym__0__3982600392097801133(__sym__0__3982600392097801133), sym__0___45_2639369843693128107(__sym__0___45_2639369843693128107), sym__0___45_2892948589959819237(__sym__0___45_2892948589959819237), sym__0___45_3083177374599918180(__sym__0___45_3083177374599918180), sym__0___45_4767370105190669238(__sym__0___45_4767370105190669238), sym__0__7622263690412824738(__sym__0__7622263690412824738), sym__0__51540186613445224(__sym__0__51540186613445224), sym__0__5816250341010414547(__sym__0__5816250341010414547), sym__0___45_4395275123805465570(__sym__0___45_4395275123805465570), sym__0___45_7314445511356925101(__sym__0___45_7314445511356925101), sym__0__1160535804228364061(__sym__0__1160535804228364061), sym__0___45_658439635996140254(__sym__0___45_658439635996140254), sym__0__5408690261773440146(__sym__0__5408690261773440146), sym__0__4735189913708153244(__sym__0__4735189913708153244), sym__0___45_8984691491589025986(__sym__0___45_8984691491589025986), sym__0__4667820012727147444(__sym__0__4667820012727147444), sym__0__2342925512217931808(__sym__0__2342925512217931808), sym__0__1214124832604663335(__sym__0__1214124832604663335), sym__0__3255112656206796761(__sym__0__3255112656206796761), sym__0__4481647413238555121(__sym__0__4481647413238555121), sym__0___45_8432259835637048949(__sym__0___45_8432259835637048949), sym__0__4548729478722910608(__sym__0__4548729478722910608), sym__0___45_121547008029878490(__sym__0___45_121547008029878490), sym__0__3269568155542253564(__sym__0__3269568155542253564), sym__0__3982220672063046018(__sym__0__3982220672063046018), sym__0__4693536182358499263(__sym__0__4693536182358499263), sym__0__2984872593914002448(__sym__0__2984872593914002448), sym__0__6297984954898127448(__sym__0__6297984954898127448), sym__0___45_2539705795808102992(__sym__0___45_2539705795808102992), sym__0__4925130884886294926(__sym__0__4925130884886294926), sym__0___45_6056498752508205364(__sym__0___45_6056498752508205364), sym__0___45_5529708794626966486(__sym__0___45_5529708794626966486), sym__0___45_4737680138599499881(__sym__0___45_4737680138599499881), sym__0__6984993766776696624(__sym__0__6984993766776696624), sym__0___45_8393949379764847708(__sym__0___45_8393949379764847708), sym__0__4462919605968504146(__sym__0__4462919605968504146), sym__0__6874577426955441634(__sym__0__6874577426955441634), sym__0___45_1088065985843605459(__sym__0___45_1088065985843605459), sym__0__228349805477520123(__sym__0__228349805477520123), sym__0___45_3813708782342371331(__sym__0___45_3813708782342371331), sym__0__2924304181004936681(__sym__0__2924304181004936681), sym__0___45_812065277175253313(__sym__0___45_812065277175253313), sym__0___45_879260575341141708(__sym__0___45_879260575341141708), sym__0___45_5047397743832953891(__sym__0___45_5047397743832953891)
  {
  }
  Record36() 
  {
  }
  std::string show() const{
    std::stringstream o;
    o << sym__0__1547076744925930880 << " | " << arrToString(sym__0__3079651708208385520) << " | " << arrToString(sym__0__722488589300315522) << " | " << arrToString(sym__0__5728736137952035521) << " | " << sym__0__1016643266231007683 << " | " << sym__0__7488963553490858577 << " | " << arrToString(sym__0___45_5912777685800611816) << " | " << sym__0__5163174048669277343 << " | " << sym__0__1804747360158272504 << " | " << sym__0___45_8585488438570493216 << " | " << sym__0___45_5255213217507996278 << " | " << sym__0__922056654626502433 << " | " << arrToString(sym__0__8167091386086901924) << " | " << arrToString(sym__0___45_6557548601784909220) << " | " << arrToString(sym__0__3982600392097801133) << " | " << arrToString(sym__0___45_2639369843693128107) << " | " << arrToString(sym__0___45_2892948589959819237) << " | " << sym__0___45_3083177374599918180 << " | " << sym__0___45_4767370105190669238 << " | " << sym__0__7622263690412824738 << " | " << sym__0__51540186613445224 << " | " << sym__0__5816250341010414547 << " | " << sym__0___45_4395275123805465570 << " | " << arrToString(sym__0___45_7314445511356925101) << " | " << sym__0__1160535804228364061 << " | " << arrToString(sym__0___45_658439635996140254) << " | " << sym__0__5408690261773440146 << " | " << sym__0__4735189913708153244 << " | " << sym__0___45_8984691491589025986 << " | " << sym__0__4667820012727147444 << " | " << sym__0__2342925512217931808 << " | " << sym__0__1214124832604663335 << " | " << sym__0__3255112656206796761 << " | " << arrToString(sym__0__4481647413238555121) << " | " << sym__0___45_8432259835637048949 << " | " << arrToString(sym__0__4548729478722910608) << " | " << arrToString(sym__0___45_121547008029878490) << " | " << arrToString(sym__0__3269568155542253564) << " | " << arrToString(sym__0__3982220672063046018) << " | " << arrToString(sym__0__4693536182358499263) << " | " << arrToString(sym__0__2984872593914002448) << " | " << sym__0__6297984954898127448 << " | " << arrToString(sym__0___45_2539705795808102992) << " | " << arrToString(sym__0__4925130884886294926) << " | " << arrToString(sym__0___45_6056498752508205364) << " | " << arrToString(sym__0___45_5529708794626966486) << " | " << arrToString(sym__0___45_4737680138599499881) << " | " << arrToString(sym__0__6984993766776696624) << " | " << arrToString(sym__0___45_8393949379764847708) << " | " << sym__0__4462919605968504146 << " | " << arrToString(sym__0__6874577426955441634) << " | " << arrToString(sym__0___45_1088065985843605459) << " | " << arrToString(sym__0__228349805477520123) << " | " << arrToString(sym__0___45_3813708782342371331) << " | " << arrToString(sym__0__2924304181004936681) << " | " << arrToString(sym__0___45_812065277175253313) << " | " << sym__0___45_879260575341141708 << " | " << arrToString(sym__0___45_5047397743832953891);
    return o.str();
  }
  bool operator <(const Record36& otherRec) const{
    return (otherRec.sym__0__1547076744925930880 < sym__0__1547076744925930880 && (otherRec.sym__0__3079651708208385520 < sym__0__3079651708208385520 && (otherRec.sym__0__722488589300315522 < sym__0__722488589300315522 && (otherRec.sym__0__5728736137952035521 < sym__0__5728736137952035521 && (otherRec.sym__0__1016643266231007683 < sym__0__1016643266231007683 && (otherRec.sym__0__7488963553490858577 < sym__0__7488963553490858577 && (otherRec.sym__0___45_5912777685800611816 < sym__0___45_5912777685800611816 && (otherRec.sym__0__5163174048669277343 < sym__0__5163174048669277343 && (otherRec.sym__0__1804747360158272504 < sym__0__1804747360158272504 && (otherRec.sym__0___45_8585488438570493216 < sym__0___45_8585488438570493216 && (otherRec.sym__0___45_5255213217507996278 < sym__0___45_5255213217507996278 && (otherRec.sym__0__922056654626502433 < sym__0__922056654626502433 && (otherRec.sym__0__8167091386086901924 < sym__0__8167091386086901924 && (otherRec.sym__0___45_6557548601784909220 < sym__0___45_6557548601784909220 && (otherRec.sym__0__3982600392097801133 < sym__0__3982600392097801133 && (otherRec.sym__0___45_2639369843693128107 < sym__0___45_2639369843693128107 && (otherRec.sym__0___45_2892948589959819237 < sym__0___45_2892948589959819237 && (otherRec.sym__0___45_3083177374599918180 < sym__0___45_3083177374599918180 && (otherRec.sym__0___45_4767370105190669238 < sym__0___45_4767370105190669238 && (otherRec.sym__0__7622263690412824738 < sym__0__7622263690412824738 && (otherRec.sym__0__51540186613445224 < sym__0__51540186613445224 && (otherRec.sym__0__5816250341010414547 < sym__0__5816250341010414547 && (otherRec.sym__0___45_4395275123805465570 < sym__0___45_4395275123805465570 && (otherRec.sym__0___45_7314445511356925101 < sym__0___45_7314445511356925101 && (otherRec.sym__0__1160535804228364061 < sym__0__1160535804228364061 && (otherRec.sym__0___45_658439635996140254 < sym__0___45_658439635996140254 && (otherRec.sym__0__5408690261773440146 < sym__0__5408690261773440146 && (otherRec.sym__0__4735189913708153244 < sym__0__4735189913708153244 && (otherRec.sym__0___45_8984691491589025986 < sym__0___45_8984691491589025986 && (otherRec.sym__0__4667820012727147444 < sym__0__4667820012727147444 && (otherRec.sym__0__2342925512217931808 < sym__0__2342925512217931808 && (otherRec.sym__0__1214124832604663335 < sym__0__1214124832604663335 && (otherRec.sym__0__3255112656206796761 < sym__0__3255112656206796761 && (otherRec.sym__0__4481647413238555121 < sym__0__4481647413238555121 && (otherRec.sym__0___45_8432259835637048949 < sym__0___45_8432259835637048949 && (otherRec.sym__0__4548729478722910608 < sym__0__4548729478722910608 && (otherRec.sym__0___45_121547008029878490 < sym__0___45_121547008029878490 && (otherRec.sym__0__3269568155542253564 < sym__0__3269568155542253564 && (otherRec.sym__0__3982220672063046018 < sym__0__3982220672063046018 && (otherRec.sym__0__4693536182358499263 < sym__0__4693536182358499263 && (otherRec.sym__0__2984872593914002448 < sym__0__2984872593914002448 && (otherRec.sym__0__6297984954898127448 < sym__0__6297984954898127448 && (otherRec.sym__0___45_2539705795808102992 < sym__0___45_2539705795808102992 && (otherRec.sym__0__4925130884886294926 < sym__0__4925130884886294926 && (otherRec.sym__0___45_6056498752508205364 < sym__0___45_6056498752508205364 && (otherRec.sym__0___45_5529708794626966486 < sym__0___45_5529708794626966486 && (otherRec.sym__0___45_4737680138599499881 < sym__0___45_4737680138599499881 && (otherRec.sym__0__6984993766776696624 < sym__0__6984993766776696624 && (otherRec.sym__0___45_8393949379764847708 < sym__0___45_8393949379764847708 && (otherRec.sym__0__4462919605968504146 < sym__0__4462919605968504146 && (otherRec.sym__0__6874577426955441634 < sym__0__6874577426955441634 && (otherRec.sym__0___45_1088065985843605459 < sym__0___45_1088065985843605459 && (otherRec.sym__0__228349805477520123 < sym__0__228349805477520123 && (otherRec.sym__0___45_3813708782342371331 < sym__0___45_3813708782342371331 && (otherRec.sym__0__2924304181004936681 < sym__0__2924304181004936681 && (otherRec.sym__0___45_812065277175253313 < sym__0___45_812065277175253313 && (otherRec.sym__0___45_879260575341141708 < sym__0___45_879260575341141708 && otherRec.sym__0___45_5047397743832953891 < sym__0___45_5047397743832953891)))))))))))))))))))))))))))))))))))))))))))))))))))))))));
  }
  bool operator ==(const Record36& otherRec) const{
    return (otherRec.sym__0__1547076744925930880 == sym__0__1547076744925930880 && (otherRec.sym__0__3079651708208385520 == sym__0__3079651708208385520 && (otherRec.sym__0__722488589300315522 == sym__0__722488589300315522 && (otherRec.sym__0__5728736137952035521 == sym__0__5728736137952035521 && (otherRec.sym__0__1016643266231007683 == sym__0__1016643266231007683 && (otherRec.sym__0__7488963553490858577 == sym__0__7488963553490858577 && (otherRec.sym__0___45_5912777685800611816 == sym__0___45_5912777685800611816 && (otherRec.sym__0__5163174048669277343 == sym__0__5163174048669277343 && (otherRec.sym__0__1804747360158272504 == sym__0__1804747360158272504 && (otherRec.sym__0___45_8585488438570493216 == sym__0___45_8585488438570493216 && (otherRec.sym__0___45_5255213217507996278 == sym__0___45_5255213217507996278 && (otherRec.sym__0__922056654626502433 == sym__0__922056654626502433 && (otherRec.sym__0__8167091386086901924 == sym__0__8167091386086901924 && (otherRec.sym__0___45_6557548601784909220 == sym__0___45_6557548601784909220 && (otherRec.sym__0__3982600392097801133 == sym__0__3982600392097801133 && (otherRec.sym__0___45_2639369843693128107 == sym__0___45_2639369843693128107 && (otherRec.sym__0___45_2892948589959819237 == sym__0___45_2892948589959819237 && (otherRec.sym__0___45_3083177374599918180 == sym__0___45_3083177374599918180 && (otherRec.sym__0___45_4767370105190669238 == sym__0___45_4767370105190669238 && (otherRec.sym__0__7622263690412824738 == sym__0__7622263690412824738 && (otherRec.sym__0__51540186613445224 == sym__0__51540186613445224 && (otherRec.sym__0__5816250341010414547 == sym__0__5816250341010414547 && (otherRec.sym__0___45_4395275123805465570 == sym__0___45_4395275123805465570 && (otherRec.sym__0___45_7314445511356925101 == sym__0___45_7314445511356925101 && (otherRec.sym__0__1160535804228364061 == sym__0__1160535804228364061 && (otherRec.sym__0___45_658439635996140254 == sym__0___45_658439635996140254 && (otherRec.sym__0__5408690261773440146 == sym__0__5408690261773440146 && (otherRec.sym__0__4735189913708153244 == sym__0__4735189913708153244 && (otherRec.sym__0___45_8984691491589025986 == sym__0___45_8984691491589025986 && (otherRec.sym__0__4667820012727147444 == sym__0__4667820012727147444 && (otherRec.sym__0__2342925512217931808 == sym__0__2342925512217931808 && (otherRec.sym__0__1214124832604663335 == sym__0__1214124832604663335 && (otherRec.sym__0__3255112656206796761 == sym__0__3255112656206796761 && (otherRec.sym__0__4481647413238555121 == sym__0__4481647413238555121 && (otherRec.sym__0___45_8432259835637048949 == sym__0___45_8432259835637048949 && (otherRec.sym__0__4548729478722910608 == sym__0__4548729478722910608 && (otherRec.sym__0___45_121547008029878490 == sym__0___45_121547008029878490 && (otherRec.sym__0__3269568155542253564 == sym__0__3269568155542253564 && (otherRec.sym__0__3982220672063046018 == sym__0__3982220672063046018 && (otherRec.sym__0__4693536182358499263 == sym__0__4693536182358499263 && (otherRec.sym__0__2984872593914002448 == sym__0__2984872593914002448 && (otherRec.sym__0__6297984954898127448 == sym__0__6297984954898127448 && (otherRec.sym__0___45_2539705795808102992 == sym__0___45_2539705795808102992 && (otherRec.sym__0__4925130884886294926 == sym__0__4925130884886294926 && (otherRec.sym__0___45_6056498752508205364 == sym__0___45_6056498752508205364 && (otherRec.sym__0___45_5529708794626966486 == sym__0___45_5529708794626966486 && (otherRec.sym__0___45_4737680138599499881 == sym__0___45_4737680138599499881 && (otherRec.sym__0__6984993766776696624 == sym__0__6984993766776696624 && (otherRec.sym__0___45_8393949379764847708 == sym__0___45_8393949379764847708 && (otherRec.sym__0__4462919605968504146 == sym__0__4462919605968504146 && (otherRec.sym__0__6874577426955441634 == sym__0__6874577426955441634 && (otherRec.sym__0___45_1088065985843605459 == sym__0___45_1088065985843605459 && (otherRec.sym__0__228349805477520123 == sym__0__228349805477520123 && (otherRec.sym__0___45_3813708782342371331 == sym__0___45_3813708782342371331 && (otherRec.sym__0__2924304181004936681 == sym__0__2924304181004936681 && (otherRec.sym__0___45_812065277175253313 == sym__0___45_812065277175253313 && (otherRec.sym__0___45_879260575341141708 == sym__0___45_879260575341141708 && otherRec.sym__0___45_5047397743832953891 == sym__0___45_5047397743832953891)))))))))))))))))))))))))))))))))))))))))))))))))))))))));
  }
  bool operator !=(const Record36& otherRec) const{
    return (otherRec.sym__0__1547076744925930880 != sym__0__1547076744925930880 || (otherRec.sym__0__3079651708208385520 != sym__0__3079651708208385520 || (otherRec.sym__0__722488589300315522 != sym__0__722488589300315522 || (otherRec.sym__0__5728736137952035521 != sym__0__5728736137952035521 || (otherRec.sym__0__1016643266231007683 != sym__0__1016643266231007683 || (otherRec.sym__0__7488963553490858577 != sym__0__7488963553490858577 || (otherRec.sym__0___45_5912777685800611816 != sym__0___45_5912777685800611816 || (otherRec.sym__0__5163174048669277343 != sym__0__5163174048669277343 || (otherRec.sym__0__1804747360158272504 != sym__0__1804747360158272504 || (otherRec.sym__0___45_8585488438570493216 != sym__0___45_8585488438570493216 || (otherRec.sym__0___45_5255213217507996278 != sym__0___45_5255213217507996278 || (otherRec.sym__0__922056654626502433 != sym__0__922056654626502433 || (otherRec.sym__0__8167091386086901924 != sym__0__8167091386086901924 || (otherRec.sym__0___45_6557548601784909220 != sym__0___45_6557548601784909220 || (otherRec.sym__0__3982600392097801133 != sym__0__3982600392097801133 || (otherRec.sym__0___45_2639369843693128107 != sym__0___45_2639369843693128107 || (otherRec.sym__0___45_2892948589959819237 != sym__0___45_2892948589959819237 || (otherRec.sym__0___45_3083177374599918180 != sym__0___45_3083177374599918180 || (otherRec.sym__0___45_4767370105190669238 != sym__0___45_4767370105190669238 || (otherRec.sym__0__7622263690412824738 != sym__0__7622263690412824738 || (otherRec.sym__0__51540186613445224 != sym__0__51540186613445224 || (otherRec.sym__0__5816250341010414547 != sym__0__5816250341010414547 || (otherRec.sym__0___45_4395275123805465570 != sym__0___45_4395275123805465570 || (otherRec.sym__0___45_7314445511356925101 != sym__0___45_7314445511356925101 || (otherRec.sym__0__1160535804228364061 != sym__0__1160535804228364061 || (otherRec.sym__0___45_658439635996140254 != sym__0___45_658439635996140254 || (otherRec.sym__0__5408690261773440146 != sym__0__5408690261773440146 || (otherRec.sym__0__4735189913708153244 != sym__0__4735189913708153244 || (otherRec.sym__0___45_8984691491589025986 != sym__0___45_8984691491589025986 || (otherRec.sym__0__4667820012727147444 != sym__0__4667820012727147444 || (otherRec.sym__0__2342925512217931808 != sym__0__2342925512217931808 || (otherRec.sym__0__1214124832604663335 != sym__0__1214124832604663335 || (otherRec.sym__0__3255112656206796761 != sym__0__3255112656206796761 || (otherRec.sym__0__4481647413238555121 != sym__0__4481647413238555121 || (otherRec.sym__0___45_8432259835637048949 != sym__0___45_8432259835637048949 || (otherRec.sym__0__4548729478722910608 != sym__0__4548729478722910608 || (otherRec.sym__0___45_121547008029878490 != sym__0___45_121547008029878490 || (otherRec.sym__0__3269568155542253564 != sym__0__3269568155542253564 || (otherRec.sym__0__3982220672063046018 != sym__0__3982220672063046018 || (otherRec.sym__0__4693536182358499263 != sym__0__4693536182358499263 || (otherRec.sym__0__2984872593914002448 != sym__0__2984872593914002448 || (otherRec.sym__0__6297984954898127448 != sym__0__6297984954898127448 || (otherRec.sym__0___45_2539705795808102992 != sym__0___45_2539705795808102992 || (otherRec.sym__0__4925130884886294926 != sym__0__4925130884886294926 || (otherRec.sym__0___45_6056498752508205364 != sym__0___45_6056498752508205364 || (otherRec.sym__0___45_5529708794626966486 != sym__0___45_5529708794626966486 || (otherRec.sym__0___45_4737680138599499881 != sym__0___45_4737680138599499881 || (otherRec.sym__0__6984993766776696624 != sym__0__6984993766776696624 || (otherRec.sym__0___45_8393949379764847708 != sym__0___45_8393949379764847708 || (otherRec.sym__0__4462919605968504146 != sym__0__4462919605968504146 || (otherRec.sym__0__6874577426955441634 != sym__0__6874577426955441634 || (otherRec.sym__0___45_1088065985843605459 != sym__0___45_1088065985843605459 || (otherRec.sym__0__228349805477520123 != sym__0__228349805477520123 || (otherRec.sym__0___45_3813708782342371331 != sym__0___45_3813708782342371331 || (otherRec.sym__0__2924304181004936681 != sym__0__2924304181004936681 || (otherRec.sym__0___45_812065277175253313 != sym__0___45_812065277175253313 || (otherRec.sym__0___45_879260575341141708 != sym__0___45_879260575341141708 || otherRec.sym__0___45_5047397743832953891 != sym__0___45_5047397743832953891)))))))))))))))))))))))))))))))))))))))))))))))))))))))));
  }
  unsigned sym__0__1547076744925930880;
  fluidb_string<18> sym__0__3079651708208385520;
  fluidb_string<9> sym__0__722488589300315522;
  fluidb_string<9> sym__0__5728736137952035521;
  unsigned sym__0__1016643266231007683;
  unsigned sym__0__7488963553490858577;
  fluidb_string<7> sym__0___45_5912777685800611816;
  unsigned sym__0__5163174048669277343;
  unsigned sym__0__1804747360158272504;
  unsigned sym__0___45_8585488438570493216;
  unsigned sym__0___45_5255213217507996278;
  unsigned sym__0__922056654626502433;
  fluidb_string<15> sym__0__8167091386086901924;
  fluidb_string<2> sym__0___45_6557548601784909220;
  fluidb_string<2> sym__0__3982600392097801133;
  fluidb_string<2> sym__0___45_2639369843693128107;
  fluidb_string<2> sym__0___45_2892948589959819237;
  unsigned sym__0___45_3083177374599918180;
  int sym__0___45_4767370105190669238;
  unsigned sym__0__7622263690412824738;
  unsigned sym__0__51540186613445224;
  unsigned sym__0__5816250341010414547;
  unsigned sym__0___45_4395275123805465570;
  fluidb_string<21> sym__0___45_7314445511356925101;
  unsigned sym__0__1160535804228364061;
  fluidb_string<10> sym__0___45_658439635996140254;
  unsigned sym__0__5408690261773440146;
  double sym__0__4735189913708153244;
  unsigned sym__0___45_8984691491589025986;
  double sym__0__4667820012727147444;
  unsigned sym__0__2342925512217931808;
  unsigned sym__0__1214124832604663335;
  double sym__0__3255112656206796761;
  fluidb_string<13> sym__0__4481647413238555121;
  unsigned sym__0___45_8432259835637048949;
  fluidb_string<25> sym__0__4548729478722910608;
  fluidb_string<40> sym__0___45_121547008029878490;
  fluidb_string<16> sym__0__3269568155542253564;
  fluidb_string<16> sym__0__3982220672063046018;
  fluidb_string<13> sym__0__4693536182358499263;
  fluidb_string<15> sym__0__2984872593914002448;
  unsigned sym__0__6297984954898127448;
  fluidb_string<18> sym__0___45_2539705795808102992;
  fluidb_string<40> sym__0__4925130884886294926;
  fluidb_string<11> sym__0___45_6056498752508205364;
  fluidb_string<15> sym__0___45_5529708794626966486;
  fluidb_string<13> sym__0___45_4737680138599499881;
  fluidb_string<15> sym__0__6984993766776696624;
  fluidb_string<21> sym__0___45_8393949379764847708;
  unsigned sym__0__4462919605968504146;
  fluidb_string<55> sym__0__6874577426955441634;
  fluidb_string<25> sym__0___45_1088065985843605459;
  fluidb_string<7> sym__0__228349805477520123;
  fluidb_string<10> sym__0___45_3813708782342371331;
  fluidb_string<11> sym__0__2924304181004936681;
  fluidb_string<25> sym__0___45_812065277175253313;
  unsigned sym__0___45_879260575341141708;
  fluidb_string<10> sym__0___45_5047397743832953891;
 private:
};


class Record7 {
 public:
  Record7(unsigned __sym__0__2833764152503888409, fluidb_string<18> __sym__0__6938021140779677761, fluidb_string<40> __sym__0___45_4700201805806600089, fluidb_string<11> __sym__0__3362667619044778557, fluidb_string<15> __sym__0__2679827580767046755, fluidb_string<13> __sym__0___45_4186304031693649930, fluidb_string<15> __sym__0__8596564865999609793, fluidb_string<21> __sym__0___45_1671053890158572571, unsigned __sym__0__2256924431415148013, int __sym__0__347872876320563651, unsigned __sym__0___45_7666447219434903317, unsigned __sym__0__1272718151591622153, unsigned __sym__0__4584633926271658914, unsigned __sym__0___45_4610773208091240233, fluidb_string<21> __sym__0___45_5766638191766435038, unsigned __sym__0___45_5211223358204127380, fluidb_string<10> __sym__0__8435431464460332395, unsigned __sym__0___45_6450191115912157957, double __sym__0__7921907673157171693, unsigned __sym__0___45_1699747741436218441, double __sym__0___45_2985562469054236715, unsigned __sym__0__3746029949899912401, unsigned __sym__0___45_989155948099215770, double __sym__0___45_1667761180508152936, fluidb_string<13> __sym__0__5854462121170882944, unsigned __sym__0___45_1023382914117654422, fluidb_string<25> __sym__0__6224010339127806049, fluidb_string<40> __sym__0___45_8804639047977952305, fluidb_string<16> __sym__0__8926375957639307021, fluidb_string<16> __sym__0__5153200798583684363, fluidb_string<13> __sym__0___45_794494697990656050, fluidb_string<15> __sym__0__7308161412148661473) : sym__0__2833764152503888409(__sym__0__2833764152503888409), sym__0__6938021140779677761(__sym__0__6938021140779677761), sym__0___45_4700201805806600089(__sym__0___45_4700201805806600089), sym__0__3362667619044778557(__sym__0__3362667619044778557), sym__0__2679827580767046755(__sym__0__2679827580767046755), sym__0___45_4186304031693649930(__sym__0___45_4186304031693649930), sym__0__8596564865999609793(__sym__0__8596564865999609793), sym__0___45_1671053890158572571(__sym__0___45_1671053890158572571), sym__0__2256924431415148013(__sym__0__2256924431415148013), sym__0__347872876320563651(__sym__0__347872876320563651), sym__0___45_7666447219434903317(__sym__0___45_7666447219434903317), sym__0__1272718151591622153(__sym__0__1272718151591622153), sym__0__4584633926271658914(__sym__0__4584633926271658914), sym__0___45_4610773208091240233(__sym__0___45_4610773208091240233), sym__0___45_5766638191766435038(__sym__0___45_5766638191766435038), sym__0___45_5211223358204127380(__sym__0___45_5211223358204127380), sym__0__8435431464460332395(__sym__0__8435431464460332395), sym__0___45_6450191115912157957(__sym__0___45_6450191115912157957), sym__0__7921907673157171693(__sym__0__7921907673157171693), sym__0___45_1699747741436218441(__sym__0___45_1699747741436218441), sym__0___45_2985562469054236715(__sym__0___45_2985562469054236715), sym__0__3746029949899912401(__sym__0__3746029949899912401), sym__0___45_989155948099215770(__sym__0___45_989155948099215770), sym__0___45_1667761180508152936(__sym__0___45_1667761180508152936), sym__0__5854462121170882944(__sym__0__5854462121170882944), sym__0___45_1023382914117654422(__sym__0___45_1023382914117654422), sym__0__6224010339127806049(__sym__0__6224010339127806049), sym__0___45_8804639047977952305(__sym__0___45_8804639047977952305), sym__0__8926375957639307021(__sym__0__8926375957639307021), sym__0__5153200798583684363(__sym__0__5153200798583684363), sym__0___45_794494697990656050(__sym__0___45_794494697990656050), sym__0__7308161412148661473(__sym__0__7308161412148661473)
  {
  }
  Record7() 
  {
  }
  std::string show() const{
    std::stringstream o;
    o << sym__0__2833764152503888409 << " | " << arrToString(sym__0__6938021140779677761) << " | " << arrToString(sym__0___45_4700201805806600089) << " | " << arrToString(sym__0__3362667619044778557) << " | " << arrToString(sym__0__2679827580767046755) << " | " << arrToString(sym__0___45_4186304031693649930) << " | " << arrToString(sym__0__8596564865999609793) << " | " << arrToString(sym__0___45_1671053890158572571) << " | " << sym__0__2256924431415148013 << " | " << sym__0__347872876320563651 << " | " << sym__0___45_7666447219434903317 << " | " << sym__0__1272718151591622153 << " | " << sym__0__4584633926271658914 << " | " << sym__0___45_4610773208091240233 << " | " << arrToString(sym__0___45_5766638191766435038) << " | " << sym__0___45_5211223358204127380 << " | " << arrToString(sym__0__8435431464460332395) << " | " << sym__0___45_6450191115912157957 << " | " << sym__0__7921907673157171693 << " | " << sym__0___45_1699747741436218441 << " | " << sym__0___45_2985562469054236715 << " | " << sym__0__3746029949899912401 << " | " << sym__0___45_989155948099215770 << " | " << sym__0___45_1667761180508152936 << " | " << arrToString(sym__0__5854462121170882944) << " | " << sym__0___45_1023382914117654422 << " | " << arrToString(sym__0__6224010339127806049) << " | " << arrToString(sym__0___45_8804639047977952305) << " | " << arrToString(sym__0__8926375957639307021) << " | " << arrToString(sym__0__5153200798583684363) << " | " << arrToString(sym__0___45_794494697990656050) << " | " << arrToString(sym__0__7308161412148661473);
    return o.str();
  }
  bool operator <(const Record7& otherRec) const{
    return (otherRec.sym__0__2833764152503888409 < sym__0__2833764152503888409 && (otherRec.sym__0__6938021140779677761 < sym__0__6938021140779677761 && (otherRec.sym__0___45_4700201805806600089 < sym__0___45_4700201805806600089 && (otherRec.sym__0__3362667619044778557 < sym__0__3362667619044778557 && (otherRec.sym__0__2679827580767046755 < sym__0__2679827580767046755 && (otherRec.sym__0___45_4186304031693649930 < sym__0___45_4186304031693649930 && (otherRec.sym__0__8596564865999609793 < sym__0__8596564865999609793 && (otherRec.sym__0___45_1671053890158572571 < sym__0___45_1671053890158572571 && (otherRec.sym__0__2256924431415148013 < sym__0__2256924431415148013 && (otherRec.sym__0__347872876320563651 < sym__0__347872876320563651 && (otherRec.sym__0___45_7666447219434903317 < sym__0___45_7666447219434903317 && (otherRec.sym__0__1272718151591622153 < sym__0__1272718151591622153 && (otherRec.sym__0__4584633926271658914 < sym__0__4584633926271658914 && (otherRec.sym__0___45_4610773208091240233 < sym__0___45_4610773208091240233 && (otherRec.sym__0___45_5766638191766435038 < sym__0___45_5766638191766435038 && (otherRec.sym__0___45_5211223358204127380 < sym__0___45_5211223358204127380 && (otherRec.sym__0__8435431464460332395 < sym__0__8435431464460332395 && (otherRec.sym__0___45_6450191115912157957 < sym__0___45_6450191115912157957 && (otherRec.sym__0__7921907673157171693 < sym__0__7921907673157171693 && (otherRec.sym__0___45_1699747741436218441 < sym__0___45_1699747741436218441 && (otherRec.sym__0___45_2985562469054236715 < sym__0___45_2985562469054236715 && (otherRec.sym__0__3746029949899912401 < sym__0__3746029949899912401 && (otherRec.sym__0___45_989155948099215770 < sym__0___45_989155948099215770 && (otherRec.sym__0___45_1667761180508152936 < sym__0___45_1667761180508152936 && (otherRec.sym__0__5854462121170882944 < sym__0__5854462121170882944 && (otherRec.sym__0___45_1023382914117654422 < sym__0___45_1023382914117654422 && (otherRec.sym__0__6224010339127806049 < sym__0__6224010339127806049 && (otherRec.sym__0___45_8804639047977952305 < sym__0___45_8804639047977952305 && (otherRec.sym__0__8926375957639307021 < sym__0__8926375957639307021 && (otherRec.sym__0__5153200798583684363 < sym__0__5153200798583684363 && (otherRec.sym__0___45_794494697990656050 < sym__0___45_794494697990656050 && otherRec.sym__0__7308161412148661473 < sym__0__7308161412148661473)))))))))))))))))))))))))))))));
  }
  bool operator ==(const Record7& otherRec) const{
    return (otherRec.sym__0__2833764152503888409 == sym__0__2833764152503888409 && (otherRec.sym__0__6938021140779677761 == sym__0__6938021140779677761 && (otherRec.sym__0___45_4700201805806600089 == sym__0___45_4700201805806600089 && (otherRec.sym__0__3362667619044778557 == sym__0__3362667619044778557 && (otherRec.sym__0__2679827580767046755 == sym__0__2679827580767046755 && (otherRec.sym__0___45_4186304031693649930 == sym__0___45_4186304031693649930 && (otherRec.sym__0__8596564865999609793 == sym__0__8596564865999609793 && (otherRec.sym__0___45_1671053890158572571 == sym__0___45_1671053890158572571 && (otherRec.sym__0__2256924431415148013 == sym__0__2256924431415148013 && (otherRec.sym__0__347872876320563651 == sym__0__347872876320563651 && (otherRec.sym__0___45_7666447219434903317 == sym__0___45_7666447219434903317 && (otherRec.sym__0__1272718151591622153 == sym__0__1272718151591622153 && (otherRec.sym__0__4584633926271658914 == sym__0__4584633926271658914 && (otherRec.sym__0___45_4610773208091240233 == sym__0___45_4610773208091240233 && (otherRec.sym__0___45_5766638191766435038 == sym__0___45_5766638191766435038 && (otherRec.sym__0___45_5211223358204127380 == sym__0___45_5211223358204127380 && (otherRec.sym__0__8435431464460332395 == sym__0__8435431464460332395 && (otherRec.sym__0___45_6450191115912157957 == sym__0___45_6450191115912157957 && (otherRec.sym__0__7921907673157171693 == sym__0__7921907673157171693 && (otherRec.sym__0___45_1699747741436218441 == sym__0___45_1699747741436218441 && (otherRec.sym__0___45_2985562469054236715 == sym__0___45_2985562469054236715 && (otherRec.sym__0__3746029949899912401 == sym__0__3746029949899912401 && (otherRec.sym__0___45_989155948099215770 == sym__0___45_989155948099215770 && (otherRec.sym__0___45_1667761180508152936 == sym__0___45_1667761180508152936 && (otherRec.sym__0__5854462121170882944 == sym__0__5854462121170882944 && (otherRec.sym__0___45_1023382914117654422 == sym__0___45_1023382914117654422 && (otherRec.sym__0__6224010339127806049 == sym__0__6224010339127806049 && (otherRec.sym__0___45_8804639047977952305 == sym__0___45_8804639047977952305 && (otherRec.sym__0__8926375957639307021 == sym__0__8926375957639307021 && (otherRec.sym__0__5153200798583684363 == sym__0__5153200798583684363 && (otherRec.sym__0___45_794494697990656050 == sym__0___45_794494697990656050 && otherRec.sym__0__7308161412148661473 == sym__0__7308161412148661473)))))))))))))))))))))))))))))));
  }
  bool operator !=(const Record7& otherRec) const{
    return (otherRec.sym__0__2833764152503888409 != sym__0__2833764152503888409 || (otherRec.sym__0__6938021140779677761 != sym__0__6938021140779677761 || (otherRec.sym__0___45_4700201805806600089 != sym__0___45_4700201805806600089 || (otherRec.sym__0__3362667619044778557 != sym__0__3362667619044778557 || (otherRec.sym__0__2679827580767046755 != sym__0__2679827580767046755 || (otherRec.sym__0___45_4186304031693649930 != sym__0___45_4186304031693649930 || (otherRec.sym__0__8596564865999609793 != sym__0__8596564865999609793 || (otherRec.sym__0___45_1671053890158572571 != sym__0___45_1671053890158572571 || (otherRec.sym__0__2256924431415148013 != sym__0__2256924431415148013 || (otherRec.sym__0__347872876320563651 != sym__0__347872876320563651 || (otherRec.sym__0___45_7666447219434903317 != sym__0___45_7666447219434903317 || (otherRec.sym__0__1272718151591622153 != sym__0__1272718151591622153 || (otherRec.sym__0__4584633926271658914 != sym__0__4584633926271658914 || (otherRec.sym__0___45_4610773208091240233 != sym__0___45_4610773208091240233 || (otherRec.sym__0___45_5766638191766435038 != sym__0___45_5766638191766435038 || (otherRec.sym__0___45_5211223358204127380 != sym__0___45_5211223358204127380 || (otherRec.sym__0__8435431464460332395 != sym__0__8435431464460332395 || (otherRec.sym__0___45_6450191115912157957 != sym__0___45_6450191115912157957 || (otherRec.sym__0__7921907673157171693 != sym__0__7921907673157171693 || (otherRec.sym__0___45_1699747741436218441 != sym__0___45_1699747741436218441 || (otherRec.sym__0___45_2985562469054236715 != sym__0___45_2985562469054236715 || (otherRec.sym__0__3746029949899912401 != sym__0__3746029949899912401 || (otherRec.sym__0___45_989155948099215770 != sym__0___45_989155948099215770 || (otherRec.sym__0___45_1667761180508152936 != sym__0___45_1667761180508152936 || (otherRec.sym__0__5854462121170882944 != sym__0__5854462121170882944 || (otherRec.sym__0___45_1023382914117654422 != sym__0___45_1023382914117654422 || (otherRec.sym__0__6224010339127806049 != sym__0__6224010339127806049 || (otherRec.sym__0___45_8804639047977952305 != sym__0___45_8804639047977952305 || (otherRec.sym__0__8926375957639307021 != sym__0__8926375957639307021 || (otherRec.sym__0__5153200798583684363 != sym__0__5153200798583684363 || (otherRec.sym__0___45_794494697990656050 != sym__0___45_794494697990656050 || otherRec.sym__0__7308161412148661473 != sym__0__7308161412148661473)))))))))))))))))))))))))))))));
  }
  unsigned sym__0__2833764152503888409;
  fluidb_string<18> sym__0__6938021140779677761;
  fluidb_string<40> sym__0___45_4700201805806600089;
  fluidb_string<11> sym__0__3362667619044778557;
  fluidb_string<15> sym__0__2679827580767046755;
  fluidb_string<13> sym__0___45_4186304031693649930;
  fluidb_string<15> sym__0__8596564865999609793;
  fluidb_string<21> sym__0___45_1671053890158572571;
  unsigned sym__0__2256924431415148013;
  int sym__0__347872876320563651;
  unsigned sym__0___45_7666447219434903317;
  unsigned sym__0__1272718151591622153;
  unsigned sym__0__4584633926271658914;
  unsigned sym__0___45_4610773208091240233;
  fluidb_string<21> sym__0___45_5766638191766435038;
  unsigned sym__0___45_5211223358204127380;
  fluidb_string<10> sym__0__8435431464460332395;
  unsigned sym__0___45_6450191115912157957;
  double sym__0__7921907673157171693;
  unsigned sym__0___45_1699747741436218441;
  double sym__0___45_2985562469054236715;
  unsigned sym__0__3746029949899912401;
  unsigned sym__0___45_989155948099215770;
  double sym__0___45_1667761180508152936;
  fluidb_string<13> sym__0__5854462121170882944;
  unsigned sym__0___45_1023382914117654422;
  fluidb_string<25> sym__0__6224010339127806049;
  fluidb_string<40> sym__0___45_8804639047977952305;
  fluidb_string<16> sym__0__8926375957639307021;
  fluidb_string<16> sym__0__5153200798583684363;
  fluidb_string<13> sym__0___45_794494697990656050;
  fluidb_string<15> sym__0__7308161412148661473;
 private:
};


class Record24 {
 public:
  Record24(unsigned __sym__0___45_2600703832754715382, fluidb_string<18> __sym__0___45_7578273935239857990, fluidb_string<9> __sym__0__875191355534311252, fluidb_string<9> __sym__0___45_6042256660357361193, unsigned __sym__0__2251162898911166857, unsigned __sym__0__8322995032561243047, fluidb_string<7> __sym__0__3359760786864885346, unsigned __sym__0__4755955500146647717, unsigned __sym__0__825634143835399618, unsigned __sym__0___45_5673193308586008598, unsigned __sym__0__2344416604488212124, unsigned __sym__0__996127159005129399, fluidb_string<15> __sym__0___45_8445295692641080722, fluidb_string<2> __sym__0___45_9133478590074263962, fluidb_string<2> __sym__0___45_1949673146646224253, fluidb_string<2> __sym__0___45_3693142685708191253, fluidb_string<2> __sym__0___45_7021098367134788127, unsigned __sym__0___45_1631867111754601434, int __sym__0__5956167765210805980, unsigned __sym__0___45_4504547450980902284, unsigned __sym__0__2571611128943656626, unsigned __sym__0___45_7797291820866539495, unsigned __sym__0__8112696983606547888, fluidb_string<21> __sym__0___45_8859514051634859623, unsigned __sym__0__1155613969670303859, fluidb_string<10> __sym__0__6875278589307593972, unsigned __sym__0___45_961680512448388956, double __sym__0___45_674541735213940698, unsigned __sym__0___45_821091676724229936, double __sym__0___45_4702801186563994626, unsigned __sym__0___45_3023845865529546326, unsigned __sym__0__5284478023732558701, double __sym__0__253975703545414575, fluidb_string<13> __sym__0__2038562371344131399, unsigned __sym__0___45_6180681665671689455, fluidb_string<25> __sym__0___45_7492215985175491366, fluidb_string<40> __sym__0__3108260102440442872, fluidb_string<16> __sym__0__4242088751554333190, fluidb_string<16> __sym__0__4419222406440371028, fluidb_string<13> __sym__0___45_4395878808383970875, fluidb_string<15> __sym__0__5421156455815400282, unsigned __sym__0__1445832851994825762, fluidb_string<18> __sym__0__4538888751267676410, fluidb_string<40> __sym__0__6214774548635804832, fluidb_string<11> __sym__0__5647889798153721686, fluidb_string<15> __sym__0__7215382845017137468, fluidb_string<13> __sym__0___45_7064023331726131555, fluidb_string<15> __sym__0__2464748358755927674, fluidb_string<21> __sym__0__1701416785032206702) : sym__0___45_2600703832754715382(__sym__0___45_2600703832754715382), sym__0___45_7578273935239857990(__sym__0___45_7578273935239857990), sym__0__875191355534311252(__sym__0__875191355534311252), sym__0___45_6042256660357361193(__sym__0___45_6042256660357361193), sym__0__2251162898911166857(__sym__0__2251162898911166857), sym__0__8322995032561243047(__sym__0__8322995032561243047), sym__0__3359760786864885346(__sym__0__3359760786864885346), sym__0__4755955500146647717(__sym__0__4755955500146647717), sym__0__825634143835399618(__sym__0__825634143835399618), sym__0___45_5673193308586008598(__sym__0___45_5673193308586008598), sym__0__2344416604488212124(__sym__0__2344416604488212124), sym__0__996127159005129399(__sym__0__996127159005129399), sym__0___45_8445295692641080722(__sym__0___45_8445295692641080722), sym__0___45_9133478590074263962(__sym__0___45_9133478590074263962), sym__0___45_1949673146646224253(__sym__0___45_1949673146646224253), sym__0___45_3693142685708191253(__sym__0___45_3693142685708191253), sym__0___45_7021098367134788127(__sym__0___45_7021098367134788127), sym__0___45_1631867111754601434(__sym__0___45_1631867111754601434), sym__0__5956167765210805980(__sym__0__5956167765210805980), sym__0___45_4504547450980902284(__sym__0___45_4504547450980902284), sym__0__2571611128943656626(__sym__0__2571611128943656626), sym__0___45_7797291820866539495(__sym__0___45_7797291820866539495), sym__0__8112696983606547888(__sym__0__8112696983606547888), sym__0___45_8859514051634859623(__sym__0___45_8859514051634859623), sym__0__1155613969670303859(__sym__0__1155613969670303859), sym__0__6875278589307593972(__sym__0__6875278589307593972), sym__0___45_961680512448388956(__sym__0___45_961680512448388956), sym__0___45_674541735213940698(__sym__0___45_674541735213940698), sym__0___45_821091676724229936(__sym__0___45_821091676724229936), sym__0___45_4702801186563994626(__sym__0___45_4702801186563994626), sym__0___45_3023845865529546326(__sym__0___45_3023845865529546326), sym__0__5284478023732558701(__sym__0__5284478023732558701), sym__0__253975703545414575(__sym__0__253975703545414575), sym__0__2038562371344131399(__sym__0__2038562371344131399), sym__0___45_6180681665671689455(__sym__0___45_6180681665671689455), sym__0___45_7492215985175491366(__sym__0___45_7492215985175491366), sym__0__3108260102440442872(__sym__0__3108260102440442872), sym__0__4242088751554333190(__sym__0__4242088751554333190), sym__0__4419222406440371028(__sym__0__4419222406440371028), sym__0___45_4395878808383970875(__sym__0___45_4395878808383970875), sym__0__5421156455815400282(__sym__0__5421156455815400282), sym__0__1445832851994825762(__sym__0__1445832851994825762), sym__0__4538888751267676410(__sym__0__4538888751267676410), sym__0__6214774548635804832(__sym__0__6214774548635804832), sym__0__5647889798153721686(__sym__0__5647889798153721686), sym__0__7215382845017137468(__sym__0__7215382845017137468), sym__0___45_7064023331726131555(__sym__0___45_7064023331726131555), sym__0__2464748358755927674(__sym__0__2464748358755927674), sym__0__1701416785032206702(__sym__0__1701416785032206702)
  {
  }
  Record24() 
  {
  }
  std::string show() const{
    std::stringstream o;
    o << sym__0___45_2600703832754715382 << " | " << arrToString(sym__0___45_7578273935239857990) << " | " << arrToString(sym__0__875191355534311252) << " | " << arrToString(sym__0___45_6042256660357361193) << " | " << sym__0__2251162898911166857 << " | " << sym__0__8322995032561243047 << " | " << arrToString(sym__0__3359760786864885346) << " | " << sym__0__4755955500146647717 << " | " << sym__0__825634143835399618 << " | " << sym__0___45_5673193308586008598 << " | " << sym__0__2344416604488212124 << " | " << sym__0__996127159005129399 << " | " << arrToString(sym__0___45_8445295692641080722) << " | " << arrToString(sym__0___45_9133478590074263962) << " | " << arrToString(sym__0___45_1949673146646224253) << " | " << arrToString(sym__0___45_3693142685708191253) << " | " << arrToString(sym__0___45_7021098367134788127) << " | " << sym__0___45_1631867111754601434 << " | " << sym__0__5956167765210805980 << " | " << sym__0___45_4504547450980902284 << " | " << sym__0__2571611128943656626 << " | " << sym__0___45_7797291820866539495 << " | " << sym__0__8112696983606547888 << " | " << arrToString(sym__0___45_8859514051634859623) << " | " << sym__0__1155613969670303859 << " | " << arrToString(sym__0__6875278589307593972) << " | " << sym__0___45_961680512448388956 << " | " << sym__0___45_674541735213940698 << " | " << sym__0___45_821091676724229936 << " | " << sym__0___45_4702801186563994626 << " | " << sym__0___45_3023845865529546326 << " | " << sym__0__5284478023732558701 << " | " << sym__0__253975703545414575 << " | " << arrToString(sym__0__2038562371344131399) << " | " << sym__0___45_6180681665671689455 << " | " << arrToString(sym__0___45_7492215985175491366) << " | " << arrToString(sym__0__3108260102440442872) << " | " << arrToString(sym__0__4242088751554333190) << " | " << arrToString(sym__0__4419222406440371028) << " | " << arrToString(sym__0___45_4395878808383970875) << " | " << arrToString(sym__0__5421156455815400282) << " | " << sym__0__1445832851994825762 << " | " << arrToString(sym__0__4538888751267676410) << " | " << arrToString(sym__0__6214774548635804832) << " | " << arrToString(sym__0__5647889798153721686) << " | " << arrToString(sym__0__7215382845017137468) << " | " << arrToString(sym__0___45_7064023331726131555) << " | " << arrToString(sym__0__2464748358755927674) << " | " << arrToString(sym__0__1701416785032206702);
    return o.str();
  }
  bool operator <(const Record24& otherRec) const{
    return (otherRec.sym__0___45_2600703832754715382 < sym__0___45_2600703832754715382 && (otherRec.sym__0___45_7578273935239857990 < sym__0___45_7578273935239857990 && (otherRec.sym__0__875191355534311252 < sym__0__875191355534311252 && (otherRec.sym__0___45_6042256660357361193 < sym__0___45_6042256660357361193 && (otherRec.sym__0__2251162898911166857 < sym__0__2251162898911166857 && (otherRec.sym__0__8322995032561243047 < sym__0__8322995032561243047 && (otherRec.sym__0__3359760786864885346 < sym__0__3359760786864885346 && (otherRec.sym__0__4755955500146647717 < sym__0__4755955500146647717 && (otherRec.sym__0__825634143835399618 < sym__0__825634143835399618 && (otherRec.sym__0___45_5673193308586008598 < sym__0___45_5673193308586008598 && (otherRec.sym__0__2344416604488212124 < sym__0__2344416604488212124 && (otherRec.sym__0__996127159005129399 < sym__0__996127159005129399 && (otherRec.sym__0___45_8445295692641080722 < sym__0___45_8445295692641080722 && (otherRec.sym__0___45_9133478590074263962 < sym__0___45_9133478590074263962 && (otherRec.sym__0___45_1949673146646224253 < sym__0___45_1949673146646224253 && (otherRec.sym__0___45_3693142685708191253 < sym__0___45_3693142685708191253 && (otherRec.sym__0___45_7021098367134788127 < sym__0___45_7021098367134788127 && (otherRec.sym__0___45_1631867111754601434 < sym__0___45_1631867111754601434 && (otherRec.sym__0__5956167765210805980 < sym__0__5956167765210805980 && (otherRec.sym__0___45_4504547450980902284 < sym__0___45_4504547450980902284 && (otherRec.sym__0__2571611128943656626 < sym__0__2571611128943656626 && (otherRec.sym__0___45_7797291820866539495 < sym__0___45_7797291820866539495 && (otherRec.sym__0__8112696983606547888 < sym__0__8112696983606547888 && (otherRec.sym__0___45_8859514051634859623 < sym__0___45_8859514051634859623 && (otherRec.sym__0__1155613969670303859 < sym__0__1155613969670303859 && (otherRec.sym__0__6875278589307593972 < sym__0__6875278589307593972 && (otherRec.sym__0___45_961680512448388956 < sym__0___45_961680512448388956 && (otherRec.sym__0___45_674541735213940698 < sym__0___45_674541735213940698 && (otherRec.sym__0___45_821091676724229936 < sym__0___45_821091676724229936 && (otherRec.sym__0___45_4702801186563994626 < sym__0___45_4702801186563994626 && (otherRec.sym__0___45_3023845865529546326 < sym__0___45_3023845865529546326 && (otherRec.sym__0__5284478023732558701 < sym__0__5284478023732558701 && (otherRec.sym__0__253975703545414575 < sym__0__253975703545414575 && (otherRec.sym__0__2038562371344131399 < sym__0__2038562371344131399 && (otherRec.sym__0___45_6180681665671689455 < sym__0___45_6180681665671689455 && (otherRec.sym__0___45_7492215985175491366 < sym__0___45_7492215985175491366 && (otherRec.sym__0__3108260102440442872 < sym__0__3108260102440442872 && (otherRec.sym__0__4242088751554333190 < sym__0__4242088751554333190 && (otherRec.sym__0__4419222406440371028 < sym__0__4419222406440371028 && (otherRec.sym__0___45_4395878808383970875 < sym__0___45_4395878808383970875 && (otherRec.sym__0__5421156455815400282 < sym__0__5421156455815400282 && (otherRec.sym__0__1445832851994825762 < sym__0__1445832851994825762 && (otherRec.sym__0__4538888751267676410 < sym__0__4538888751267676410 && (otherRec.sym__0__6214774548635804832 < sym__0__6214774548635804832 && (otherRec.sym__0__5647889798153721686 < sym__0__5647889798153721686 && (otherRec.sym__0__7215382845017137468 < sym__0__7215382845017137468 && (otherRec.sym__0___45_7064023331726131555 < sym__0___45_7064023331726131555 && (otherRec.sym__0__2464748358755927674 < sym__0__2464748358755927674 && otherRec.sym__0__1701416785032206702 < sym__0__1701416785032206702))))))))))))))))))))))))))))))))))))))))))))))));
  }
  bool operator ==(const Record24& otherRec) const{
    return (otherRec.sym__0___45_2600703832754715382 == sym__0___45_2600703832754715382 && (otherRec.sym__0___45_7578273935239857990 == sym__0___45_7578273935239857990 && (otherRec.sym__0__875191355534311252 == sym__0__875191355534311252 && (otherRec.sym__0___45_6042256660357361193 == sym__0___45_6042256660357361193 && (otherRec.sym__0__2251162898911166857 == sym__0__2251162898911166857 && (otherRec.sym__0__8322995032561243047 == sym__0__8322995032561243047 && (otherRec.sym__0__3359760786864885346 == sym__0__3359760786864885346 && (otherRec.sym__0__4755955500146647717 == sym__0__4755955500146647717 && (otherRec.sym__0__825634143835399618 == sym__0__825634143835399618 && (otherRec.sym__0___45_5673193308586008598 == sym__0___45_5673193308586008598 && (otherRec.sym__0__2344416604488212124 == sym__0__2344416604488212124 && (otherRec.sym__0__996127159005129399 == sym__0__996127159005129399 && (otherRec.sym__0___45_8445295692641080722 == sym__0___45_8445295692641080722 && (otherRec.sym__0___45_9133478590074263962 == sym__0___45_9133478590074263962 && (otherRec.sym__0___45_1949673146646224253 == sym__0___45_1949673146646224253 && (otherRec.sym__0___45_3693142685708191253 == sym__0___45_3693142685708191253 && (otherRec.sym__0___45_7021098367134788127 == sym__0___45_7021098367134788127 && (otherRec.sym__0___45_1631867111754601434 == sym__0___45_1631867111754601434 && (otherRec.sym__0__5956167765210805980 == sym__0__5956167765210805980 && (otherRec.sym__0___45_4504547450980902284 == sym__0___45_4504547450980902284 && (otherRec.sym__0__2571611128943656626 == sym__0__2571611128943656626 && (otherRec.sym__0___45_7797291820866539495 == sym__0___45_7797291820866539495 && (otherRec.sym__0__8112696983606547888 == sym__0__8112696983606547888 && (otherRec.sym__0___45_8859514051634859623 == sym__0___45_8859514051634859623 && (otherRec.sym__0__1155613969670303859 == sym__0__1155613969670303859 && (otherRec.sym__0__6875278589307593972 == sym__0__6875278589307593972 && (otherRec.sym__0___45_961680512448388956 == sym__0___45_961680512448388956 && (otherRec.sym__0___45_674541735213940698 == sym__0___45_674541735213940698 && (otherRec.sym__0___45_821091676724229936 == sym__0___45_821091676724229936 && (otherRec.sym__0___45_4702801186563994626 == sym__0___45_4702801186563994626 && (otherRec.sym__0___45_3023845865529546326 == sym__0___45_3023845865529546326 && (otherRec.sym__0__5284478023732558701 == sym__0__5284478023732558701 && (otherRec.sym__0__253975703545414575 == sym__0__253975703545414575 && (otherRec.sym__0__2038562371344131399 == sym__0__2038562371344131399 && (otherRec.sym__0___45_6180681665671689455 == sym__0___45_6180681665671689455 && (otherRec.sym__0___45_7492215985175491366 == sym__0___45_7492215985175491366 && (otherRec.sym__0__3108260102440442872 == sym__0__3108260102440442872 && (otherRec.sym__0__4242088751554333190 == sym__0__4242088751554333190 && (otherRec.sym__0__4419222406440371028 == sym__0__4419222406440371028 && (otherRec.sym__0___45_4395878808383970875 == sym__0___45_4395878808383970875 && (otherRec.sym__0__5421156455815400282 == sym__0__5421156455815400282 && (otherRec.sym__0__1445832851994825762 == sym__0__1445832851994825762 && (otherRec.sym__0__4538888751267676410 == sym__0__4538888751267676410 && (otherRec.sym__0__6214774548635804832 == sym__0__6214774548635804832 && (otherRec.sym__0__5647889798153721686 == sym__0__5647889798153721686 && (otherRec.sym__0__7215382845017137468 == sym__0__7215382845017137468 && (otherRec.sym__0___45_7064023331726131555 == sym__0___45_7064023331726131555 && (otherRec.sym__0__2464748358755927674 == sym__0__2464748358755927674 && otherRec.sym__0__1701416785032206702 == sym__0__1701416785032206702))))))))))))))))))))))))))))))))))))))))))))))));
  }
  bool operator !=(const Record24& otherRec) const{
    return (otherRec.sym__0___45_2600703832754715382 != sym__0___45_2600703832754715382 || (otherRec.sym__0___45_7578273935239857990 != sym__0___45_7578273935239857990 || (otherRec.sym__0__875191355534311252 != sym__0__875191355534311252 || (otherRec.sym__0___45_6042256660357361193 != sym__0___45_6042256660357361193 || (otherRec.sym__0__2251162898911166857 != sym__0__2251162898911166857 || (otherRec.sym__0__8322995032561243047 != sym__0__8322995032561243047 || (otherRec.sym__0__3359760786864885346 != sym__0__3359760786864885346 || (otherRec.sym__0__4755955500146647717 != sym__0__4755955500146647717 || (otherRec.sym__0__825634143835399618 != sym__0__825634143835399618 || (otherRec.sym__0___45_5673193308586008598 != sym__0___45_5673193308586008598 || (otherRec.sym__0__2344416604488212124 != sym__0__2344416604488212124 || (otherRec.sym__0__996127159005129399 != sym__0__996127159005129399 || (otherRec.sym__0___45_8445295692641080722 != sym__0___45_8445295692641080722 || (otherRec.sym__0___45_9133478590074263962 != sym__0___45_9133478590074263962 || (otherRec.sym__0___45_1949673146646224253 != sym__0___45_1949673146646224253 || (otherRec.sym__0___45_3693142685708191253 != sym__0___45_3693142685708191253 || (otherRec.sym__0___45_7021098367134788127 != sym__0___45_7021098367134788127 || (otherRec.sym__0___45_1631867111754601434 != sym__0___45_1631867111754601434 || (otherRec.sym__0__5956167765210805980 != sym__0__5956167765210805980 || (otherRec.sym__0___45_4504547450980902284 != sym__0___45_4504547450980902284 || (otherRec.sym__0__2571611128943656626 != sym__0__2571611128943656626 || (otherRec.sym__0___45_7797291820866539495 != sym__0___45_7797291820866539495 || (otherRec.sym__0__8112696983606547888 != sym__0__8112696983606547888 || (otherRec.sym__0___45_8859514051634859623 != sym__0___45_8859514051634859623 || (otherRec.sym__0__1155613969670303859 != sym__0__1155613969670303859 || (otherRec.sym__0__6875278589307593972 != sym__0__6875278589307593972 || (otherRec.sym__0___45_961680512448388956 != sym__0___45_961680512448388956 || (otherRec.sym__0___45_674541735213940698 != sym__0___45_674541735213940698 || (otherRec.sym__0___45_821091676724229936 != sym__0___45_821091676724229936 || (otherRec.sym__0___45_4702801186563994626 != sym__0___45_4702801186563994626 || (otherRec.sym__0___45_3023845865529546326 != sym__0___45_3023845865529546326 || (otherRec.sym__0__5284478023732558701 != sym__0__5284478023732558701 || (otherRec.sym__0__253975703545414575 != sym__0__253975703545414575 || (otherRec.sym__0__2038562371344131399 != sym__0__2038562371344131399 || (otherRec.sym__0___45_6180681665671689455 != sym__0___45_6180681665671689455 || (otherRec.sym__0___45_7492215985175491366 != sym__0___45_7492215985175491366 || (otherRec.sym__0__3108260102440442872 != sym__0__3108260102440442872 || (otherRec.sym__0__4242088751554333190 != sym__0__4242088751554333190 || (otherRec.sym__0__4419222406440371028 != sym__0__4419222406440371028 || (otherRec.sym__0___45_4395878808383970875 != sym__0___45_4395878808383970875 || (otherRec.sym__0__5421156455815400282 != sym__0__5421156455815400282 || (otherRec.sym__0__1445832851994825762 != sym__0__1445832851994825762 || (otherRec.sym__0__4538888751267676410 != sym__0__4538888751267676410 || (otherRec.sym__0__6214774548635804832 != sym__0__6214774548635804832 || (otherRec.sym__0__5647889798153721686 != sym__0__5647889798153721686 || (otherRec.sym__0__7215382845017137468 != sym__0__7215382845017137468 || (otherRec.sym__0___45_7064023331726131555 != sym__0___45_7064023331726131555 || (otherRec.sym__0__2464748358755927674 != sym__0__2464748358755927674 || otherRec.sym__0__1701416785032206702 != sym__0__1701416785032206702))))))))))))))))))))))))))))))))))))))))))))))));
  }
  unsigned sym__0___45_2600703832754715382;
  fluidb_string<18> sym__0___45_7578273935239857990;
  fluidb_string<9> sym__0__875191355534311252;
  fluidb_string<9> sym__0___45_6042256660357361193;
  unsigned sym__0__2251162898911166857;
  unsigned sym__0__8322995032561243047;
  fluidb_string<7> sym__0__3359760786864885346;
  unsigned sym__0__4755955500146647717;
  unsigned sym__0__825634143835399618;
  unsigned sym__0___45_5673193308586008598;
  unsigned sym__0__2344416604488212124;
  unsigned sym__0__996127159005129399;
  fluidb_string<15> sym__0___45_8445295692641080722;
  fluidb_string<2> sym__0___45_9133478590074263962;
  fluidb_string<2> sym__0___45_1949673146646224253;
  fluidb_string<2> sym__0___45_3693142685708191253;
  fluidb_string<2> sym__0___45_7021098367134788127;
  unsigned sym__0___45_1631867111754601434;
  int sym__0__5956167765210805980;
  unsigned sym__0___45_4504547450980902284;
  unsigned sym__0__2571611128943656626;
  unsigned sym__0___45_7797291820866539495;
  unsigned sym__0__8112696983606547888;
  fluidb_string<21> sym__0___45_8859514051634859623;
  unsigned sym__0__1155613969670303859;
  fluidb_string<10> sym__0__6875278589307593972;
  unsigned sym__0___45_961680512448388956;
  double sym__0___45_674541735213940698;
  unsigned sym__0___45_821091676724229936;
  double sym__0___45_4702801186563994626;
  unsigned sym__0___45_3023845865529546326;
  unsigned sym__0__5284478023732558701;
  double sym__0__253975703545414575;
  fluidb_string<13> sym__0__2038562371344131399;
  unsigned sym__0___45_6180681665671689455;
  fluidb_string<25> sym__0___45_7492215985175491366;
  fluidb_string<40> sym__0__3108260102440442872;
  fluidb_string<16> sym__0__4242088751554333190;
  fluidb_string<16> sym__0__4419222406440371028;
  fluidb_string<13> sym__0___45_4395878808383970875;
  fluidb_string<15> sym__0__5421156455815400282;
  unsigned sym__0__1445832851994825762;
  fluidb_string<18> sym__0__4538888751267676410;
  fluidb_string<40> sym__0__6214774548635804832;
  fluidb_string<11> sym__0__5647889798153721686;
  fluidb_string<15> sym__0__7215382845017137468;
  fluidb_string<13> sym__0___45_7064023331726131555;
  fluidb_string<15> sym__0__2464748358755927674;
  fluidb_string<21> sym__0__1701416785032206702;
 private:
};


class Record12 {
 public:
  Record12(unsigned __sym__0___45_5611752679662454596, fluidb_string<18> __sym__0__8284710813937453156, fluidb_string<40> __sym__0___45_4842680096876089794, fluidb_string<11> __sym__0___45_710354479664384056, fluidb_string<15> __sym__0__5226734655493777314, fluidb_string<13> __sym__0___45_2050270109046259233, fluidb_string<15> __sym__0__1720445878674149604, fluidb_string<21> __sym__0__9096038743290410480, unsigned __sym__0__6229494737797221560, int __sym__0___45_3154053534972437950, unsigned __sym__0__7126726395099527914, unsigned __sym__0___45_1226908566486043092, unsigned __sym__0___45_2487625519499816861, unsigned __sym__0___45_4525186447111677138, fluidb_string<21> __sym__0__1039710532624158435, unsigned __sym__0___45_8355580593941930551, fluidb_string<10> __sym__0___45_5420657802690122646, unsigned __sym__0__1486337980340211258, double __sym__0__7085283162505185464, unsigned __sym__0___45_4478538497674719666, double __sym__0__5097645924271741792, unsigned __sym__0__8433010502365585204, unsigned __sym__0___45_3951444146024940337, double __sym__0___45_7906654096231217651, fluidb_string<13> __sym__0__6489248170966942389, unsigned __sym__0__3433246303390161259, fluidb_string<25> __sym__0___45_7936747949400285628, fluidb_string<40> __sym__0__6634602724841732454, fluidb_string<16> __sym__0___45_7093877196445790056, fluidb_string<16> __sym__0___45_720782153361267254, fluidb_string<13> __sym__0___45_8411076280103187401, fluidb_string<15> __sym__0___45_5530358790515034684) : sym__0___45_5611752679662454596(__sym__0___45_5611752679662454596), sym__0__8284710813937453156(__sym__0__8284710813937453156), sym__0___45_4842680096876089794(__sym__0___45_4842680096876089794), sym__0___45_710354479664384056(__sym__0___45_710354479664384056), sym__0__5226734655493777314(__sym__0__5226734655493777314), sym__0___45_2050270109046259233(__sym__0___45_2050270109046259233), sym__0__1720445878674149604(__sym__0__1720445878674149604), sym__0__9096038743290410480(__sym__0__9096038743290410480), sym__0__6229494737797221560(__sym__0__6229494737797221560), sym__0___45_3154053534972437950(__sym__0___45_3154053534972437950), sym__0__7126726395099527914(__sym__0__7126726395099527914), sym__0___45_1226908566486043092(__sym__0___45_1226908566486043092), sym__0___45_2487625519499816861(__sym__0___45_2487625519499816861), sym__0___45_4525186447111677138(__sym__0___45_4525186447111677138), sym__0__1039710532624158435(__sym__0__1039710532624158435), sym__0___45_8355580593941930551(__sym__0___45_8355580593941930551), sym__0___45_5420657802690122646(__sym__0___45_5420657802690122646), sym__0__1486337980340211258(__sym__0__1486337980340211258), sym__0__7085283162505185464(__sym__0__7085283162505185464), sym__0___45_4478538497674719666(__sym__0___45_4478538497674719666), sym__0__5097645924271741792(__sym__0__5097645924271741792), sym__0__8433010502365585204(__sym__0__8433010502365585204), sym__0___45_3951444146024940337(__sym__0___45_3951444146024940337), sym__0___45_7906654096231217651(__sym__0___45_7906654096231217651), sym__0__6489248170966942389(__sym__0__6489248170966942389), sym__0__3433246303390161259(__sym__0__3433246303390161259), sym__0___45_7936747949400285628(__sym__0___45_7936747949400285628), sym__0__6634602724841732454(__sym__0__6634602724841732454), sym__0___45_7093877196445790056(__sym__0___45_7093877196445790056), sym__0___45_720782153361267254(__sym__0___45_720782153361267254), sym__0___45_8411076280103187401(__sym__0___45_8411076280103187401), sym__0___45_5530358790515034684(__sym__0___45_5530358790515034684)
  {
  }
  Record12() 
  {
  }
  std::string show() const{
    std::stringstream o;
    o << sym__0___45_5611752679662454596 << " | " << arrToString(sym__0__8284710813937453156) << " | " << arrToString(sym__0___45_4842680096876089794) << " | " << arrToString(sym__0___45_710354479664384056) << " | " << arrToString(sym__0__5226734655493777314) << " | " << arrToString(sym__0___45_2050270109046259233) << " | " << arrToString(sym__0__1720445878674149604) << " | " << arrToString(sym__0__9096038743290410480) << " | " << sym__0__6229494737797221560 << " | " << sym__0___45_3154053534972437950 << " | " << sym__0__7126726395099527914 << " | " << sym__0___45_1226908566486043092 << " | " << sym__0___45_2487625519499816861 << " | " << sym__0___45_4525186447111677138 << " | " << arrToString(sym__0__1039710532624158435) << " | " << sym__0___45_8355580593941930551 << " | " << arrToString(sym__0___45_5420657802690122646) << " | " << sym__0__1486337980340211258 << " | " << sym__0__7085283162505185464 << " | " << sym__0___45_4478538497674719666 << " | " << sym__0__5097645924271741792 << " | " << sym__0__8433010502365585204 << " | " << sym__0___45_3951444146024940337 << " | " << sym__0___45_7906654096231217651 << " | " << arrToString(sym__0__6489248170966942389) << " | " << sym__0__3433246303390161259 << " | " << arrToString(sym__0___45_7936747949400285628) << " | " << arrToString(sym__0__6634602724841732454) << " | " << arrToString(sym__0___45_7093877196445790056) << " | " << arrToString(sym__0___45_720782153361267254) << " | " << arrToString(sym__0___45_8411076280103187401) << " | " << arrToString(sym__0___45_5530358790515034684);
    return o.str();
  }
  bool operator <(const Record12& otherRec) const{
    return (otherRec.sym__0___45_5611752679662454596 < sym__0___45_5611752679662454596 && (otherRec.sym__0__8284710813937453156 < sym__0__8284710813937453156 && (otherRec.sym__0___45_4842680096876089794 < sym__0___45_4842680096876089794 && (otherRec.sym__0___45_710354479664384056 < sym__0___45_710354479664384056 && (otherRec.sym__0__5226734655493777314 < sym__0__5226734655493777314 && (otherRec.sym__0___45_2050270109046259233 < sym__0___45_2050270109046259233 && (otherRec.sym__0__1720445878674149604 < sym__0__1720445878674149604 && (otherRec.sym__0__9096038743290410480 < sym__0__9096038743290410480 && (otherRec.sym__0__6229494737797221560 < sym__0__6229494737797221560 && (otherRec.sym__0___45_3154053534972437950 < sym__0___45_3154053534972437950 && (otherRec.sym__0__7126726395099527914 < sym__0__7126726395099527914 && (otherRec.sym__0___45_1226908566486043092 < sym__0___45_1226908566486043092 && (otherRec.sym__0___45_2487625519499816861 < sym__0___45_2487625519499816861 && (otherRec.sym__0___45_4525186447111677138 < sym__0___45_4525186447111677138 && (otherRec.sym__0__1039710532624158435 < sym__0__1039710532624158435 && (otherRec.sym__0___45_8355580593941930551 < sym__0___45_8355580593941930551 && (otherRec.sym__0___45_5420657802690122646 < sym__0___45_5420657802690122646 && (otherRec.sym__0__1486337980340211258 < sym__0__1486337980340211258 && (otherRec.sym__0__7085283162505185464 < sym__0__7085283162505185464 && (otherRec.sym__0___45_4478538497674719666 < sym__0___45_4478538497674719666 && (otherRec.sym__0__5097645924271741792 < sym__0__5097645924271741792 && (otherRec.sym__0__8433010502365585204 < sym__0__8433010502365585204 && (otherRec.sym__0___45_3951444146024940337 < sym__0___45_3951444146024940337 && (otherRec.sym__0___45_7906654096231217651 < sym__0___45_7906654096231217651 && (otherRec.sym__0__6489248170966942389 < sym__0__6489248170966942389 && (otherRec.sym__0__3433246303390161259 < sym__0__3433246303390161259 && (otherRec.sym__0___45_7936747949400285628 < sym__0___45_7936747949400285628 && (otherRec.sym__0__6634602724841732454 < sym__0__6634602724841732454 && (otherRec.sym__0___45_7093877196445790056 < sym__0___45_7093877196445790056 && (otherRec.sym__0___45_720782153361267254 < sym__0___45_720782153361267254 && (otherRec.sym__0___45_8411076280103187401 < sym__0___45_8411076280103187401 && otherRec.sym__0___45_5530358790515034684 < sym__0___45_5530358790515034684)))))))))))))))))))))))))))))));
  }
  bool operator ==(const Record12& otherRec) const{
    return (otherRec.sym__0___45_5611752679662454596 == sym__0___45_5611752679662454596 && (otherRec.sym__0__8284710813937453156 == sym__0__8284710813937453156 && (otherRec.sym__0___45_4842680096876089794 == sym__0___45_4842680096876089794 && (otherRec.sym__0___45_710354479664384056 == sym__0___45_710354479664384056 && (otherRec.sym__0__5226734655493777314 == sym__0__5226734655493777314 && (otherRec.sym__0___45_2050270109046259233 == sym__0___45_2050270109046259233 && (otherRec.sym__0__1720445878674149604 == sym__0__1720445878674149604 && (otherRec.sym__0__9096038743290410480 == sym__0__9096038743290410480 && (otherRec.sym__0__6229494737797221560 == sym__0__6229494737797221560 && (otherRec.sym__0___45_3154053534972437950 == sym__0___45_3154053534972437950 && (otherRec.sym__0__7126726395099527914 == sym__0__7126726395099527914 && (otherRec.sym__0___45_1226908566486043092 == sym__0___45_1226908566486043092 && (otherRec.sym__0___45_2487625519499816861 == sym__0___45_2487625519499816861 && (otherRec.sym__0___45_4525186447111677138 == sym__0___45_4525186447111677138 && (otherRec.sym__0__1039710532624158435 == sym__0__1039710532624158435 && (otherRec.sym__0___45_8355580593941930551 == sym__0___45_8355580593941930551 && (otherRec.sym__0___45_5420657802690122646 == sym__0___45_5420657802690122646 && (otherRec.sym__0__1486337980340211258 == sym__0__1486337980340211258 && (otherRec.sym__0__7085283162505185464 == sym__0__7085283162505185464 && (otherRec.sym__0___45_4478538497674719666 == sym__0___45_4478538497674719666 && (otherRec.sym__0__5097645924271741792 == sym__0__5097645924271741792 && (otherRec.sym__0__8433010502365585204 == sym__0__8433010502365585204 && (otherRec.sym__0___45_3951444146024940337 == sym__0___45_3951444146024940337 && (otherRec.sym__0___45_7906654096231217651 == sym__0___45_7906654096231217651 && (otherRec.sym__0__6489248170966942389 == sym__0__6489248170966942389 && (otherRec.sym__0__3433246303390161259 == sym__0__3433246303390161259 && (otherRec.sym__0___45_7936747949400285628 == sym__0___45_7936747949400285628 && (otherRec.sym__0__6634602724841732454 == sym__0__6634602724841732454 && (otherRec.sym__0___45_7093877196445790056 == sym__0___45_7093877196445790056 && (otherRec.sym__0___45_720782153361267254 == sym__0___45_720782153361267254 && (otherRec.sym__0___45_8411076280103187401 == sym__0___45_8411076280103187401 && otherRec.sym__0___45_5530358790515034684 == sym__0___45_5530358790515034684)))))))))))))))))))))))))))))));
  }
  bool operator !=(const Record12& otherRec) const{
    return (otherRec.sym__0___45_5611752679662454596 != sym__0___45_5611752679662454596 || (otherRec.sym__0__8284710813937453156 != sym__0__8284710813937453156 || (otherRec.sym__0___45_4842680096876089794 != sym__0___45_4842680096876089794 || (otherRec.sym__0___45_710354479664384056 != sym__0___45_710354479664384056 || (otherRec.sym__0__5226734655493777314 != sym__0__5226734655493777314 || (otherRec.sym__0___45_2050270109046259233 != sym__0___45_2050270109046259233 || (otherRec.sym__0__1720445878674149604 != sym__0__1720445878674149604 || (otherRec.sym__0__9096038743290410480 != sym__0__9096038743290410480 || (otherRec.sym__0__6229494737797221560 != sym__0__6229494737797221560 || (otherRec.sym__0___45_3154053534972437950 != sym__0___45_3154053534972437950 || (otherRec.sym__0__7126726395099527914 != sym__0__7126726395099527914 || (otherRec.sym__0___45_1226908566486043092 != sym__0___45_1226908566486043092 || (otherRec.sym__0___45_2487625519499816861 != sym__0___45_2487625519499816861 || (otherRec.sym__0___45_4525186447111677138 != sym__0___45_4525186447111677138 || (otherRec.sym__0__1039710532624158435 != sym__0__1039710532624158435 || (otherRec.sym__0___45_8355580593941930551 != sym__0___45_8355580593941930551 || (otherRec.sym__0___45_5420657802690122646 != sym__0___45_5420657802690122646 || (otherRec.sym__0__1486337980340211258 != sym__0__1486337980340211258 || (otherRec.sym__0__7085283162505185464 != sym__0__7085283162505185464 || (otherRec.sym__0___45_4478538497674719666 != sym__0___45_4478538497674719666 || (otherRec.sym__0__5097645924271741792 != sym__0__5097645924271741792 || (otherRec.sym__0__8433010502365585204 != sym__0__8433010502365585204 || (otherRec.sym__0___45_3951444146024940337 != sym__0___45_3951444146024940337 || (otherRec.sym__0___45_7906654096231217651 != sym__0___45_7906654096231217651 || (otherRec.sym__0__6489248170966942389 != sym__0__6489248170966942389 || (otherRec.sym__0__3433246303390161259 != sym__0__3433246303390161259 || (otherRec.sym__0___45_7936747949400285628 != sym__0___45_7936747949400285628 || (otherRec.sym__0__6634602724841732454 != sym__0__6634602724841732454 || (otherRec.sym__0___45_7093877196445790056 != sym__0___45_7093877196445790056 || (otherRec.sym__0___45_720782153361267254 != sym__0___45_720782153361267254 || (otherRec.sym__0___45_8411076280103187401 != sym__0___45_8411076280103187401 || otherRec.sym__0___45_5530358790515034684 != sym__0___45_5530358790515034684)))))))))))))))))))))))))))))));
  }
  unsigned sym__0___45_5611752679662454596;
  fluidb_string<18> sym__0__8284710813937453156;
  fluidb_string<40> sym__0___45_4842680096876089794;
  fluidb_string<11> sym__0___45_710354479664384056;
  fluidb_string<15> sym__0__5226734655493777314;
  fluidb_string<13> sym__0___45_2050270109046259233;
  fluidb_string<15> sym__0__1720445878674149604;
  fluidb_string<21> sym__0__9096038743290410480;
  unsigned sym__0__6229494737797221560;
  int sym__0___45_3154053534972437950;
  unsigned sym__0__7126726395099527914;
  unsigned sym__0___45_1226908566486043092;
  unsigned sym__0___45_2487625519499816861;
  unsigned sym__0___45_4525186447111677138;
  fluidb_string<21> sym__0__1039710532624158435;
  unsigned sym__0___45_8355580593941930551;
  fluidb_string<10> sym__0___45_5420657802690122646;
  unsigned sym__0__1486337980340211258;
  double sym__0__7085283162505185464;
  unsigned sym__0___45_4478538497674719666;
  double sym__0__5097645924271741792;
  unsigned sym__0__8433010502365585204;
  unsigned sym__0___45_3951444146024940337;
  double sym__0___45_7906654096231217651;
  fluidb_string<13> sym__0__6489248170966942389;
  unsigned sym__0__3433246303390161259;
  fluidb_string<25> sym__0___45_7936747949400285628;
  fluidb_string<40> sym__0__6634602724841732454;
  fluidb_string<16> sym__0___45_7093877196445790056;
  fluidb_string<16> sym__0___45_720782153361267254;
  fluidb_string<13> sym__0___45_8411076280103187401;
  fluidb_string<15> sym__0___45_5530358790515034684;
 private:
};


class Record34 {
 public:
  Record34(unsigned __sym__0___45_3626104775580424569, fluidb_string<16> __sym__0__2860600750035231010, fluidb_string<10> __sym__0__8292664984119007321, unsigned __sym__0___45_6555077712838142657) : sym__0___45_3626104775580424569(__sym__0___45_3626104775580424569), sym__0__2860600750035231010(__sym__0__2860600750035231010), sym__0__8292664984119007321(__sym__0__8292664984119007321), sym__0___45_6555077712838142657(__sym__0___45_6555077712838142657)
  {
  }
  Record34() 
  {
  }
  std::string show() const{
    std::stringstream o;
    o << sym__0___45_3626104775580424569 << " | " << arrToString(sym__0__2860600750035231010) << " | " << arrToString(sym__0__8292664984119007321) << " | " << sym__0___45_6555077712838142657;
    return o.str();
  }
  bool operator <(const Record34& otherRec) const{
    return (otherRec.sym__0___45_3626104775580424569 < sym__0___45_3626104775580424569 && (otherRec.sym__0__2860600750035231010 < sym__0__2860600750035231010 && (otherRec.sym__0__8292664984119007321 < sym__0__8292664984119007321 && otherRec.sym__0___45_6555077712838142657 < sym__0___45_6555077712838142657)));
  }
  bool operator ==(const Record34& otherRec) const{
    return (otherRec.sym__0___45_3626104775580424569 == sym__0___45_3626104775580424569 && (otherRec.sym__0__2860600750035231010 == sym__0__2860600750035231010 && (otherRec.sym__0__8292664984119007321 == sym__0__8292664984119007321 && otherRec.sym__0___45_6555077712838142657 == sym__0___45_6555077712838142657)));
  }
  bool operator !=(const Record34& otherRec) const{
    return (otherRec.sym__0___45_3626104775580424569 != sym__0___45_3626104775580424569 || (otherRec.sym__0__2860600750035231010 != sym__0__2860600750035231010 || (otherRec.sym__0__8292664984119007321 != sym__0__8292664984119007321 || otherRec.sym__0___45_6555077712838142657 != sym__0___45_6555077712838142657)));
  }
  unsigned sym__0___45_3626104775580424569;
  fluidb_string<16> sym__0__2860600750035231010;
  fluidb_string<10> sym__0__8292664984119007321;
  unsigned sym__0___45_6555077712838142657;
 private:
};


class Record1 {
 public:
  Record1(unsigned __sym__0___45_5022535542243704710, fluidb_string<18> __sym__0___45_1787376491092531126, fluidb_string<9> __sym__0__1794599500078494180, fluidb_string<9> __sym__0__3504526357581681255, unsigned __sym__0___45_3538247220115815847, unsigned __sym__0___45_8490563090509246185, fluidb_string<7> __sym__0__7912812290691120690, unsigned __sym__0___45_8737637263679152107, unsigned __sym__0__8047491221284574610, unsigned __sym__0___45_6269766180242592166, unsigned __sym__0___45_7640802177453871412, unsigned __sym__0___45_5373284368264652217, fluidb_string<15> __sym__0__8444953784357023550, fluidb_string<2> __sym__0__4417297774308162358, fluidb_string<2> __sym__0___45_4637626103078907309, fluidb_string<2> __sym__0___45_8485149193020004517, fluidb_string<2> __sym__0___45_2377257467813948591, unsigned __sym__0___45_36447550095630858, int __sym__0___45_4571237191815489268, unsigned __sym__0__5859261980497791492, unsigned __sym__0__6356302675304611298, unsigned __sym__0___45_7802949452745359543, unsigned __sym__0__7521688076231004384, fluidb_string<21> __sym__0___45_2513776183032217143, unsigned __sym__0___45_2396884490376822877, fluidb_string<10> __sym__0___45_5999640426069083772, unsigned __sym__0__2832464336988697364, double __sym__0__7758886340050530806, unsigned __sym__0___45_2986568091977901312, double __sym__0___45_5093030022830106066, unsigned __sym__0___45_6949801323594541286, unsigned __sym__0__6879353985735461853, double __sym__0___45_4693548478308764801, fluidb_string<13> __sym__0___45_5899864176262810185, unsigned __sym__0___45_4745906627054176095, fluidb_string<25> __sym__0___45_8104684152988778134, fluidb_string<40> __sym__0__5679940805842000168, fluidb_string<16> __sym__0__1998069300503629014, fluidb_string<16> __sym__0__5053648343318218212, fluidb_string<13> __sym__0___45_6937215324756479947, fluidb_string<15> __sym__0__7346985942697523434, unsigned __sym__0___45_3899760551975893518, fluidb_string<18> __sym__0__4769700736509849738, fluidb_string<40> __sym__0__5718739266127451248, fluidb_string<11> __sym__0__623483990156027782, fluidb_string<15> __sym__0___45_587879708325432980, fluidb_string<13> __sym__0___45_1723468156536033747, fluidb_string<15> __sym__0__4933073327123913482, fluidb_string<21> __sym__0___45_893026833634796994) : sym__0___45_5022535542243704710(__sym__0___45_5022535542243704710), sym__0___45_1787376491092531126(__sym__0___45_1787376491092531126), sym__0__1794599500078494180(__sym__0__1794599500078494180), sym__0__3504526357581681255(__sym__0__3504526357581681255), sym__0___45_3538247220115815847(__sym__0___45_3538247220115815847), sym__0___45_8490563090509246185(__sym__0___45_8490563090509246185), sym__0__7912812290691120690(__sym__0__7912812290691120690), sym__0___45_8737637263679152107(__sym__0___45_8737637263679152107), sym__0__8047491221284574610(__sym__0__8047491221284574610), sym__0___45_6269766180242592166(__sym__0___45_6269766180242592166), sym__0___45_7640802177453871412(__sym__0___45_7640802177453871412), sym__0___45_5373284368264652217(__sym__0___45_5373284368264652217), sym__0__8444953784357023550(__sym__0__8444953784357023550), sym__0__4417297774308162358(__sym__0__4417297774308162358), sym__0___45_4637626103078907309(__sym__0___45_4637626103078907309), sym__0___45_8485149193020004517(__sym__0___45_8485149193020004517), sym__0___45_2377257467813948591(__sym__0___45_2377257467813948591), sym__0___45_36447550095630858(__sym__0___45_36447550095630858), sym__0___45_4571237191815489268(__sym__0___45_4571237191815489268), sym__0__5859261980497791492(__sym__0__5859261980497791492), sym__0__6356302675304611298(__sym__0__6356302675304611298), sym__0___45_7802949452745359543(__sym__0___45_7802949452745359543), sym__0__7521688076231004384(__sym__0__7521688076231004384), sym__0___45_2513776183032217143(__sym__0___45_2513776183032217143), sym__0___45_2396884490376822877(__sym__0___45_2396884490376822877), sym__0___45_5999640426069083772(__sym__0___45_5999640426069083772), sym__0__2832464336988697364(__sym__0__2832464336988697364), sym__0__7758886340050530806(__sym__0__7758886340050530806), sym__0___45_2986568091977901312(__sym__0___45_2986568091977901312), sym__0___45_5093030022830106066(__sym__0___45_5093030022830106066), sym__0___45_6949801323594541286(__sym__0___45_6949801323594541286), sym__0__6879353985735461853(__sym__0__6879353985735461853), sym__0___45_4693548478308764801(__sym__0___45_4693548478308764801), sym__0___45_5899864176262810185(__sym__0___45_5899864176262810185), sym__0___45_4745906627054176095(__sym__0___45_4745906627054176095), sym__0___45_8104684152988778134(__sym__0___45_8104684152988778134), sym__0__5679940805842000168(__sym__0__5679940805842000168), sym__0__1998069300503629014(__sym__0__1998069300503629014), sym__0__5053648343318218212(__sym__0__5053648343318218212), sym__0___45_6937215324756479947(__sym__0___45_6937215324756479947), sym__0__7346985942697523434(__sym__0__7346985942697523434), sym__0___45_3899760551975893518(__sym__0___45_3899760551975893518), sym__0__4769700736509849738(__sym__0__4769700736509849738), sym__0__5718739266127451248(__sym__0__5718739266127451248), sym__0__623483990156027782(__sym__0__623483990156027782), sym__0___45_587879708325432980(__sym__0___45_587879708325432980), sym__0___45_1723468156536033747(__sym__0___45_1723468156536033747), sym__0__4933073327123913482(__sym__0__4933073327123913482), sym__0___45_893026833634796994(__sym__0___45_893026833634796994)
  {
  }
  Record1() 
  {
  }
  std::string show() const{
    std::stringstream o;
    o << sym__0___45_5022535542243704710 << " | " << arrToString(sym__0___45_1787376491092531126) << " | " << arrToString(sym__0__1794599500078494180) << " | " << arrToString(sym__0__3504526357581681255) << " | " << sym__0___45_3538247220115815847 << " | " << sym__0___45_8490563090509246185 << " | " << arrToString(sym__0__7912812290691120690) << " | " << sym__0___45_8737637263679152107 << " | " << sym__0__8047491221284574610 << " | " << sym__0___45_6269766180242592166 << " | " << sym__0___45_7640802177453871412 << " | " << sym__0___45_5373284368264652217 << " | " << arrToString(sym__0__8444953784357023550) << " | " << arrToString(sym__0__4417297774308162358) << " | " << arrToString(sym__0___45_4637626103078907309) << " | " << arrToString(sym__0___45_8485149193020004517) << " | " << arrToString(sym__0___45_2377257467813948591) << " | " << sym__0___45_36447550095630858 << " | " << sym__0___45_4571237191815489268 << " | " << sym__0__5859261980497791492 << " | " << sym__0__6356302675304611298 << " | " << sym__0___45_7802949452745359543 << " | " << sym__0__7521688076231004384 << " | " << arrToString(sym__0___45_2513776183032217143) << " | " << sym__0___45_2396884490376822877 << " | " << arrToString(sym__0___45_5999640426069083772) << " | " << sym__0__2832464336988697364 << " | " << sym__0__7758886340050530806 << " | " << sym__0___45_2986568091977901312 << " | " << sym__0___45_5093030022830106066 << " | " << sym__0___45_6949801323594541286 << " | " << sym__0__6879353985735461853 << " | " << sym__0___45_4693548478308764801 << " | " << arrToString(sym__0___45_5899864176262810185) << " | " << sym__0___45_4745906627054176095 << " | " << arrToString(sym__0___45_8104684152988778134) << " | " << arrToString(sym__0__5679940805842000168) << " | " << arrToString(sym__0__1998069300503629014) << " | " << arrToString(sym__0__5053648343318218212) << " | " << arrToString(sym__0___45_6937215324756479947) << " | " << arrToString(sym__0__7346985942697523434) << " | " << sym__0___45_3899760551975893518 << " | " << arrToString(sym__0__4769700736509849738) << " | " << arrToString(sym__0__5718739266127451248) << " | " << arrToString(sym__0__623483990156027782) << " | " << arrToString(sym__0___45_587879708325432980) << " | " << arrToString(sym__0___45_1723468156536033747) << " | " << arrToString(sym__0__4933073327123913482) << " | " << arrToString(sym__0___45_893026833634796994);
    return o.str();
  }
  bool operator <(const Record1& otherRec) const{
    return (otherRec.sym__0___45_5022535542243704710 < sym__0___45_5022535542243704710 && (otherRec.sym__0___45_1787376491092531126 < sym__0___45_1787376491092531126 && (otherRec.sym__0__1794599500078494180 < sym__0__1794599500078494180 && (otherRec.sym__0__3504526357581681255 < sym__0__3504526357581681255 && (otherRec.sym__0___45_3538247220115815847 < sym__0___45_3538247220115815847 && (otherRec.sym__0___45_8490563090509246185 < sym__0___45_8490563090509246185 && (otherRec.sym__0__7912812290691120690 < sym__0__7912812290691120690 && (otherRec.sym__0___45_8737637263679152107 < sym__0___45_8737637263679152107 && (otherRec.sym__0__8047491221284574610 < sym__0__8047491221284574610 && (otherRec.sym__0___45_6269766180242592166 < sym__0___45_6269766180242592166 && (otherRec.sym__0___45_7640802177453871412 < sym__0___45_7640802177453871412 && (otherRec.sym__0___45_5373284368264652217 < sym__0___45_5373284368264652217 && (otherRec.sym__0__8444953784357023550 < sym__0__8444953784357023550 && (otherRec.sym__0__4417297774308162358 < sym__0__4417297774308162358 && (otherRec.sym__0___45_4637626103078907309 < sym__0___45_4637626103078907309 && (otherRec.sym__0___45_8485149193020004517 < sym__0___45_8485149193020004517 && (otherRec.sym__0___45_2377257467813948591 < sym__0___45_2377257467813948591 && (otherRec.sym__0___45_36447550095630858 < sym__0___45_36447550095630858 && (otherRec.sym__0___45_4571237191815489268 < sym__0___45_4571237191815489268 && (otherRec.sym__0__5859261980497791492 < sym__0__5859261980497791492 && (otherRec.sym__0__6356302675304611298 < sym__0__6356302675304611298 && (otherRec.sym__0___45_7802949452745359543 < sym__0___45_7802949452745359543 && (otherRec.sym__0__7521688076231004384 < sym__0__7521688076231004384 && (otherRec.sym__0___45_2513776183032217143 < sym__0___45_2513776183032217143 && (otherRec.sym__0___45_2396884490376822877 < sym__0___45_2396884490376822877 && (otherRec.sym__0___45_5999640426069083772 < sym__0___45_5999640426069083772 && (otherRec.sym__0__2832464336988697364 < sym__0__2832464336988697364 && (otherRec.sym__0__7758886340050530806 < sym__0__7758886340050530806 && (otherRec.sym__0___45_2986568091977901312 < sym__0___45_2986568091977901312 && (otherRec.sym__0___45_5093030022830106066 < sym__0___45_5093030022830106066 && (otherRec.sym__0___45_6949801323594541286 < sym__0___45_6949801323594541286 && (otherRec.sym__0__6879353985735461853 < sym__0__6879353985735461853 && (otherRec.sym__0___45_4693548478308764801 < sym__0___45_4693548478308764801 && (otherRec.sym__0___45_5899864176262810185 < sym__0___45_5899864176262810185 && (otherRec.sym__0___45_4745906627054176095 < sym__0___45_4745906627054176095 && (otherRec.sym__0___45_8104684152988778134 < sym__0___45_8104684152988778134 && (otherRec.sym__0__5679940805842000168 < sym__0__5679940805842000168 && (otherRec.sym__0__1998069300503629014 < sym__0__1998069300503629014 && (otherRec.sym__0__5053648343318218212 < sym__0__5053648343318218212 && (otherRec.sym__0___45_6937215324756479947 < sym__0___45_6937215324756479947 && (otherRec.sym__0__7346985942697523434 < sym__0__7346985942697523434 && (otherRec.sym__0___45_3899760551975893518 < sym__0___45_3899760551975893518 && (otherRec.sym__0__4769700736509849738 < sym__0__4769700736509849738 && (otherRec.sym__0__5718739266127451248 < sym__0__5718739266127451248 && (otherRec.sym__0__623483990156027782 < sym__0__623483990156027782 && (otherRec.sym__0___45_587879708325432980 < sym__0___45_587879708325432980 && (otherRec.sym__0___45_1723468156536033747 < sym__0___45_1723468156536033747 && (otherRec.sym__0__4933073327123913482 < sym__0__4933073327123913482 && otherRec.sym__0___45_893026833634796994 < sym__0___45_893026833634796994))))))))))))))))))))))))))))))))))))))))))))))));
  }
  bool operator ==(const Record1& otherRec) const{
    return (otherRec.sym__0___45_5022535542243704710 == sym__0___45_5022535542243704710 && (otherRec.sym__0___45_1787376491092531126 == sym__0___45_1787376491092531126 && (otherRec.sym__0__1794599500078494180 == sym__0__1794599500078494180 && (otherRec.sym__0__3504526357581681255 == sym__0__3504526357581681255 && (otherRec.sym__0___45_3538247220115815847 == sym__0___45_3538247220115815847 && (otherRec.sym__0___45_8490563090509246185 == sym__0___45_8490563090509246185 && (otherRec.sym__0__7912812290691120690 == sym__0__7912812290691120690 && (otherRec.sym__0___45_8737637263679152107 == sym__0___45_8737637263679152107 && (otherRec.sym__0__8047491221284574610 == sym__0__8047491221284574610 && (otherRec.sym__0___45_6269766180242592166 == sym__0___45_6269766180242592166 && (otherRec.sym__0___45_7640802177453871412 == sym__0___45_7640802177453871412 && (otherRec.sym__0___45_5373284368264652217 == sym__0___45_5373284368264652217 && (otherRec.sym__0__8444953784357023550 == sym__0__8444953784357023550 && (otherRec.sym__0__4417297774308162358 == sym__0__4417297774308162358 && (otherRec.sym__0___45_4637626103078907309 == sym__0___45_4637626103078907309 && (otherRec.sym__0___45_8485149193020004517 == sym__0___45_8485149193020004517 && (otherRec.sym__0___45_2377257467813948591 == sym__0___45_2377257467813948591 && (otherRec.sym__0___45_36447550095630858 == sym__0___45_36447550095630858 && (otherRec.sym__0___45_4571237191815489268 == sym__0___45_4571237191815489268 && (otherRec.sym__0__5859261980497791492 == sym__0__5859261980497791492 && (otherRec.sym__0__6356302675304611298 == sym__0__6356302675304611298 && (otherRec.sym__0___45_7802949452745359543 == sym__0___45_7802949452745359543 && (otherRec.sym__0__7521688076231004384 == sym__0__7521688076231004384 && (otherRec.sym__0___45_2513776183032217143 == sym__0___45_2513776183032217143 && (otherRec.sym__0___45_2396884490376822877 == sym__0___45_2396884490376822877 && (otherRec.sym__0___45_5999640426069083772 == sym__0___45_5999640426069083772 && (otherRec.sym__0__2832464336988697364 == sym__0__2832464336988697364 && (otherRec.sym__0__7758886340050530806 == sym__0__7758886340050530806 && (otherRec.sym__0___45_2986568091977901312 == sym__0___45_2986568091977901312 && (otherRec.sym__0___45_5093030022830106066 == sym__0___45_5093030022830106066 && (otherRec.sym__0___45_6949801323594541286 == sym__0___45_6949801323594541286 && (otherRec.sym__0__6879353985735461853 == sym__0__6879353985735461853 && (otherRec.sym__0___45_4693548478308764801 == sym__0___45_4693548478308764801 && (otherRec.sym__0___45_5899864176262810185 == sym__0___45_5899864176262810185 && (otherRec.sym__0___45_4745906627054176095 == sym__0___45_4745906627054176095 && (otherRec.sym__0___45_8104684152988778134 == sym__0___45_8104684152988778134 && (otherRec.sym__0__5679940805842000168 == sym__0__5679940805842000168 && (otherRec.sym__0__1998069300503629014 == sym__0__1998069300503629014 && (otherRec.sym__0__5053648343318218212 == sym__0__5053648343318218212 && (otherRec.sym__0___45_6937215324756479947 == sym__0___45_6937215324756479947 && (otherRec.sym__0__7346985942697523434 == sym__0__7346985942697523434 && (otherRec.sym__0___45_3899760551975893518 == sym__0___45_3899760551975893518 && (otherRec.sym__0__4769700736509849738 == sym__0__4769700736509849738 && (otherRec.sym__0__5718739266127451248 == sym__0__5718739266127451248 && (otherRec.sym__0__623483990156027782 == sym__0__623483990156027782 && (otherRec.sym__0___45_587879708325432980 == sym__0___45_587879708325432980 && (otherRec.sym__0___45_1723468156536033747 == sym__0___45_1723468156536033747 && (otherRec.sym__0__4933073327123913482 == sym__0__4933073327123913482 && otherRec.sym__0___45_893026833634796994 == sym__0___45_893026833634796994))))))))))))))))))))))))))))))))))))))))))))))));
  }
  bool operator !=(const Record1& otherRec) const{
    return (otherRec.sym__0___45_5022535542243704710 != sym__0___45_5022535542243704710 || (otherRec.sym__0___45_1787376491092531126 != sym__0___45_1787376491092531126 || (otherRec.sym__0__1794599500078494180 != sym__0__1794599500078494180 || (otherRec.sym__0__3504526357581681255 != sym__0__3504526357581681255 || (otherRec.sym__0___45_3538247220115815847 != sym__0___45_3538247220115815847 || (otherRec.sym__0___45_8490563090509246185 != sym__0___45_8490563090509246185 || (otherRec.sym__0__7912812290691120690 != sym__0__7912812290691120690 || (otherRec.sym__0___45_8737637263679152107 != sym__0___45_8737637263679152107 || (otherRec.sym__0__8047491221284574610 != sym__0__8047491221284574610 || (otherRec.sym__0___45_6269766180242592166 != sym__0___45_6269766180242592166 || (otherRec.sym__0___45_7640802177453871412 != sym__0___45_7640802177453871412 || (otherRec.sym__0___45_5373284368264652217 != sym__0___45_5373284368264652217 || (otherRec.sym__0__8444953784357023550 != sym__0__8444953784357023550 || (otherRec.sym__0__4417297774308162358 != sym__0__4417297774308162358 || (otherRec.sym__0___45_4637626103078907309 != sym__0___45_4637626103078907309 || (otherRec.sym__0___45_8485149193020004517 != sym__0___45_8485149193020004517 || (otherRec.sym__0___45_2377257467813948591 != sym__0___45_2377257467813948591 || (otherRec.sym__0___45_36447550095630858 != sym__0___45_36447550095630858 || (otherRec.sym__0___45_4571237191815489268 != sym__0___45_4571237191815489268 || (otherRec.sym__0__5859261980497791492 != sym__0__5859261980497791492 || (otherRec.sym__0__6356302675304611298 != sym__0__6356302675304611298 || (otherRec.sym__0___45_7802949452745359543 != sym__0___45_7802949452745359543 || (otherRec.sym__0__7521688076231004384 != sym__0__7521688076231004384 || (otherRec.sym__0___45_2513776183032217143 != sym__0___45_2513776183032217143 || (otherRec.sym__0___45_2396884490376822877 != sym__0___45_2396884490376822877 || (otherRec.sym__0___45_5999640426069083772 != sym__0___45_5999640426069083772 || (otherRec.sym__0__2832464336988697364 != sym__0__2832464336988697364 || (otherRec.sym__0__7758886340050530806 != sym__0__7758886340050530806 || (otherRec.sym__0___45_2986568091977901312 != sym__0___45_2986568091977901312 || (otherRec.sym__0___45_5093030022830106066 != sym__0___45_5093030022830106066 || (otherRec.sym__0___45_6949801323594541286 != sym__0___45_6949801323594541286 || (otherRec.sym__0__6879353985735461853 != sym__0__6879353985735461853 || (otherRec.sym__0___45_4693548478308764801 != sym__0___45_4693548478308764801 || (otherRec.sym__0___45_5899864176262810185 != sym__0___45_5899864176262810185 || (otherRec.sym__0___45_4745906627054176095 != sym__0___45_4745906627054176095 || (otherRec.sym__0___45_8104684152988778134 != sym__0___45_8104684152988778134 || (otherRec.sym__0__5679940805842000168 != sym__0__5679940805842000168 || (otherRec.sym__0__1998069300503629014 != sym__0__1998069300503629014 || (otherRec.sym__0__5053648343318218212 != sym__0__5053648343318218212 || (otherRec.sym__0___45_6937215324756479947 != sym__0___45_6937215324756479947 || (otherRec.sym__0__7346985942697523434 != sym__0__7346985942697523434 || (otherRec.sym__0___45_3899760551975893518 != sym__0___45_3899760551975893518 || (otherRec.sym__0__4769700736509849738 != sym__0__4769700736509849738 || (otherRec.sym__0__5718739266127451248 != sym__0__5718739266127451248 || (otherRec.sym__0__623483990156027782 != sym__0__623483990156027782 || (otherRec.sym__0___45_587879708325432980 != sym__0___45_587879708325432980 || (otherRec.sym__0___45_1723468156536033747 != sym__0___45_1723468156536033747 || (otherRec.sym__0__4933073327123913482 != sym__0__4933073327123913482 || otherRec.sym__0___45_893026833634796994 != sym__0___45_893026833634796994))))))))))))))))))))))))))))))))))))))))))))))));
  }
  unsigned sym__0___45_5022535542243704710;
  fluidb_string<18> sym__0___45_1787376491092531126;
  fluidb_string<9> sym__0__1794599500078494180;
  fluidb_string<9> sym__0__3504526357581681255;
  unsigned sym__0___45_3538247220115815847;
  unsigned sym__0___45_8490563090509246185;
  fluidb_string<7> sym__0__7912812290691120690;
  unsigned sym__0___45_8737637263679152107;
  unsigned sym__0__8047491221284574610;
  unsigned sym__0___45_6269766180242592166;
  unsigned sym__0___45_7640802177453871412;
  unsigned sym__0___45_5373284368264652217;
  fluidb_string<15> sym__0__8444953784357023550;
  fluidb_string<2> sym__0__4417297774308162358;
  fluidb_string<2> sym__0___45_4637626103078907309;
  fluidb_string<2> sym__0___45_8485149193020004517;
  fluidb_string<2> sym__0___45_2377257467813948591;
  unsigned sym__0___45_36447550095630858;
  int sym__0___45_4571237191815489268;
  unsigned sym__0__5859261980497791492;
  unsigned sym__0__6356302675304611298;
  unsigned sym__0___45_7802949452745359543;
  unsigned sym__0__7521688076231004384;
  fluidb_string<21> sym__0___45_2513776183032217143;
  unsigned sym__0___45_2396884490376822877;
  fluidb_string<10> sym__0___45_5999640426069083772;
  unsigned sym__0__2832464336988697364;
  double sym__0__7758886340050530806;
  unsigned sym__0___45_2986568091977901312;
  double sym__0___45_5093030022830106066;
  unsigned sym__0___45_6949801323594541286;
  unsigned sym__0__6879353985735461853;
  double sym__0___45_4693548478308764801;
  fluidb_string<13> sym__0___45_5899864176262810185;
  unsigned sym__0___45_4745906627054176095;
  fluidb_string<25> sym__0___45_8104684152988778134;
  fluidb_string<40> sym__0__5679940805842000168;
  fluidb_string<16> sym__0__1998069300503629014;
  fluidb_string<16> sym__0__5053648343318218212;
  fluidb_string<13> sym__0___45_6937215324756479947;
  fluidb_string<15> sym__0__7346985942697523434;
  unsigned sym__0___45_3899760551975893518;
  fluidb_string<18> sym__0__4769700736509849738;
  fluidb_string<40> sym__0__5718739266127451248;
  fluidb_string<11> sym__0__623483990156027782;
  fluidb_string<15> sym__0___45_587879708325432980;
  fluidb_string<13> sym__0___45_1723468156536033747;
  fluidb_string<15> sym__0__4933073327123913482;
  fluidb_string<21> sym__0___45_893026833634796994;
 private:
};


class Record13 {
 public:
  Record13(unsigned __sym__0__7154476739614218196, fluidb_string<18> __sym__0__915231614437968932, fluidb_string<9> __sym__0__37028222996400778, fluidb_string<9> __sym__0__6251536504348528741, unsigned __sym__0__1709176701279413427, unsigned __sym__0___45_2659621666018905195, fluidb_string<7> __sym__0___45_5637313367644824964, unsigned __sym__0___45_4407752905887362921, unsigned __sym__0__2685452258859673180, unsigned __sym__0__5597372632819274036, unsigned __sym__0__7381131061197816450, unsigned __sym__0__7041718244351321413, fluidb_string<15> __sym__0__8146610856700609392, fluidb_string<2> __sym__0__3940433477622007480, fluidb_string<2> __sym__0___45_1811664569933558919, fluidb_string<2> __sym__0___45_988899978273627119, fluidb_string<2> __sym__0___45_4036920836355128293, unsigned __sym__0__739308532018820796, fluidb_string<18> __sym__0__3070122341850796004, fluidb_string<40> __sym__0__6417102677086974014, fluidb_string<11> __sym__0__2905008832211369096, fluidb_string<15> __sym__0__1015640929639550114, fluidb_string<13> __sym__0___45_6701167315677712481, fluidb_string<15> __sym__0___45_7011024518358033052, fluidb_string<21> __sym__0__5127801756037217904, unsigned __sym__0__249840800709918712, int __sym__0___45_4628977507139130302, unsigned __sym__0__4641483936646316458, unsigned __sym__0__1039411420117778476, unsigned __sym__0___45_2817575825443992797, unsigned __sym__0__7950430201749646638, fluidb_string<21> __sym__0___45_81866487574187869, unsigned __sym__0__4491052391778921673, fluidb_string<10> __sym__0___45_3372972002109402582, unsigned __sym__0___45_3526459911746853062, double __sym__0__3888656611007454200, unsigned __sym__0___45_2486248916800489394, double __sym__0__8394331336990370272, unsigned __sym__0___45_4769387547076984204, unsigned __sym__0__2921980375679127951, double __sym__0__8529234028810628493, fluidb_string<13> __sym__0___45_9121259344041446475, unsigned __sym__0__348558693647595, fluidb_string<25> __sym__0__5914240982740365380, fluidb_string<40> __sym__0__4386296335266496550, fluidb_string<16> __sym__0___45_7565954230697746984, fluidb_string<16> __sym__0__4103166551933433482, fluidb_string<13> __sym__0__3915783908859429175, fluidb_string<15> __sym__0__5009970556314156228) : sym__0__7154476739614218196(__sym__0__7154476739614218196), sym__0__915231614437968932(__sym__0__915231614437968932), sym__0__37028222996400778(__sym__0__37028222996400778), sym__0__6251536504348528741(__sym__0__6251536504348528741), sym__0__1709176701279413427(__sym__0__1709176701279413427), sym__0___45_2659621666018905195(__sym__0___45_2659621666018905195), sym__0___45_5637313367644824964(__sym__0___45_5637313367644824964), sym__0___45_4407752905887362921(__sym__0___45_4407752905887362921), sym__0__2685452258859673180(__sym__0__2685452258859673180), sym__0__5597372632819274036(__sym__0__5597372632819274036), sym__0__7381131061197816450(__sym__0__7381131061197816450), sym__0__7041718244351321413(__sym__0__7041718244351321413), sym__0__8146610856700609392(__sym__0__8146610856700609392), sym__0__3940433477622007480(__sym__0__3940433477622007480), sym__0___45_1811664569933558919(__sym__0___45_1811664569933558919), sym__0___45_988899978273627119(__sym__0___45_988899978273627119), sym__0___45_4036920836355128293(__sym__0___45_4036920836355128293), sym__0__739308532018820796(__sym__0__739308532018820796), sym__0__3070122341850796004(__sym__0__3070122341850796004), sym__0__6417102677086974014(__sym__0__6417102677086974014), sym__0__2905008832211369096(__sym__0__2905008832211369096), sym__0__1015640929639550114(__sym__0__1015640929639550114), sym__0___45_6701167315677712481(__sym__0___45_6701167315677712481), sym__0___45_7011024518358033052(__sym__0___45_7011024518358033052), sym__0__5127801756037217904(__sym__0__5127801756037217904), sym__0__249840800709918712(__sym__0__249840800709918712), sym__0___45_4628977507139130302(__sym__0___45_4628977507139130302), sym__0__4641483936646316458(__sym__0__4641483936646316458), sym__0__1039411420117778476(__sym__0__1039411420117778476), sym__0___45_2817575825443992797(__sym__0___45_2817575825443992797), sym__0__7950430201749646638(__sym__0__7950430201749646638), sym__0___45_81866487574187869(__sym__0___45_81866487574187869), sym__0__4491052391778921673(__sym__0__4491052391778921673), sym__0___45_3372972002109402582(__sym__0___45_3372972002109402582), sym__0___45_3526459911746853062(__sym__0___45_3526459911746853062), sym__0__3888656611007454200(__sym__0__3888656611007454200), sym__0___45_2486248916800489394(__sym__0___45_2486248916800489394), sym__0__8394331336990370272(__sym__0__8394331336990370272), sym__0___45_4769387547076984204(__sym__0___45_4769387547076984204), sym__0__2921980375679127951(__sym__0__2921980375679127951), sym__0__8529234028810628493(__sym__0__8529234028810628493), sym__0___45_9121259344041446475(__sym__0___45_9121259344041446475), sym__0__348558693647595(__sym__0__348558693647595), sym__0__5914240982740365380(__sym__0__5914240982740365380), sym__0__4386296335266496550(__sym__0__4386296335266496550), sym__0___45_7565954230697746984(__sym__0___45_7565954230697746984), sym__0__4103166551933433482(__sym__0__4103166551933433482), sym__0__3915783908859429175(__sym__0__3915783908859429175), sym__0__5009970556314156228(__sym__0__5009970556314156228)
  {
  }
  Record13() 
  {
  }
  std::string show() const{
    std::stringstream o;
    o << sym__0__7154476739614218196 << " | " << arrToString(sym__0__915231614437968932) << " | " << arrToString(sym__0__37028222996400778) << " | " << arrToString(sym__0__6251536504348528741) << " | " << sym__0__1709176701279413427 << " | " << sym__0___45_2659621666018905195 << " | " << arrToString(sym__0___45_5637313367644824964) << " | " << sym__0___45_4407752905887362921 << " | " << sym__0__2685452258859673180 << " | " << sym__0__5597372632819274036 << " | " << sym__0__7381131061197816450 << " | " << sym__0__7041718244351321413 << " | " << arrToString(sym__0__8146610856700609392) << " | " << arrToString(sym__0__3940433477622007480) << " | " << arrToString(sym__0___45_1811664569933558919) << " | " << arrToString(sym__0___45_988899978273627119) << " | " << arrToString(sym__0___45_4036920836355128293) << " | " << sym__0__739308532018820796 << " | " << arrToString(sym__0__3070122341850796004) << " | " << arrToString(sym__0__6417102677086974014) << " | " << arrToString(sym__0__2905008832211369096) << " | " << arrToString(sym__0__1015640929639550114) << " | " << arrToString(sym__0___45_6701167315677712481) << " | " << arrToString(sym__0___45_7011024518358033052) << " | " << arrToString(sym__0__5127801756037217904) << " | " << sym__0__249840800709918712 << " | " << sym__0___45_4628977507139130302 << " | " << sym__0__4641483936646316458 << " | " << sym__0__1039411420117778476 << " | " << sym__0___45_2817575825443992797 << " | " << sym__0__7950430201749646638 << " | " << arrToString(sym__0___45_81866487574187869) << " | " << sym__0__4491052391778921673 << " | " << arrToString(sym__0___45_3372972002109402582) << " | " << sym__0___45_3526459911746853062 << " | " << sym__0__3888656611007454200 << " | " << sym__0___45_2486248916800489394 << " | " << sym__0__8394331336990370272 << " | " << sym__0___45_4769387547076984204 << " | " << sym__0__2921980375679127951 << " | " << sym__0__8529234028810628493 << " | " << arrToString(sym__0___45_9121259344041446475) << " | " << sym__0__348558693647595 << " | " << arrToString(sym__0__5914240982740365380) << " | " << arrToString(sym__0__4386296335266496550) << " | " << arrToString(sym__0___45_7565954230697746984) << " | " << arrToString(sym__0__4103166551933433482) << " | " << arrToString(sym__0__3915783908859429175) << " | " << arrToString(sym__0__5009970556314156228);
    return o.str();
  }
  bool operator <(const Record13& otherRec) const{
    return (otherRec.sym__0__7154476739614218196 < sym__0__7154476739614218196 && (otherRec.sym__0__915231614437968932 < sym__0__915231614437968932 && (otherRec.sym__0__37028222996400778 < sym__0__37028222996400778 && (otherRec.sym__0__6251536504348528741 < sym__0__6251536504348528741 && (otherRec.sym__0__1709176701279413427 < sym__0__1709176701279413427 && (otherRec.sym__0___45_2659621666018905195 < sym__0___45_2659621666018905195 && (otherRec.sym__0___45_5637313367644824964 < sym__0___45_5637313367644824964 && (otherRec.sym__0___45_4407752905887362921 < sym__0___45_4407752905887362921 && (otherRec.sym__0__2685452258859673180 < sym__0__2685452258859673180 && (otherRec.sym__0__5597372632819274036 < sym__0__5597372632819274036 && (otherRec.sym__0__7381131061197816450 < sym__0__7381131061197816450 && (otherRec.sym__0__7041718244351321413 < sym__0__7041718244351321413 && (otherRec.sym__0__8146610856700609392 < sym__0__8146610856700609392 && (otherRec.sym__0__3940433477622007480 < sym__0__3940433477622007480 && (otherRec.sym__0___45_1811664569933558919 < sym__0___45_1811664569933558919 && (otherRec.sym__0___45_988899978273627119 < sym__0___45_988899978273627119 && (otherRec.sym__0___45_4036920836355128293 < sym__0___45_4036920836355128293 && (otherRec.sym__0__739308532018820796 < sym__0__739308532018820796 && (otherRec.sym__0__3070122341850796004 < sym__0__3070122341850796004 && (otherRec.sym__0__6417102677086974014 < sym__0__6417102677086974014 && (otherRec.sym__0__2905008832211369096 < sym__0__2905008832211369096 && (otherRec.sym__0__1015640929639550114 < sym__0__1015640929639550114 && (otherRec.sym__0___45_6701167315677712481 < sym__0___45_6701167315677712481 && (otherRec.sym__0___45_7011024518358033052 < sym__0___45_7011024518358033052 && (otherRec.sym__0__5127801756037217904 < sym__0__5127801756037217904 && (otherRec.sym__0__249840800709918712 < sym__0__249840800709918712 && (otherRec.sym__0___45_4628977507139130302 < sym__0___45_4628977507139130302 && (otherRec.sym__0__4641483936646316458 < sym__0__4641483936646316458 && (otherRec.sym__0__1039411420117778476 < sym__0__1039411420117778476 && (otherRec.sym__0___45_2817575825443992797 < sym__0___45_2817575825443992797 && (otherRec.sym__0__7950430201749646638 < sym__0__7950430201749646638 && (otherRec.sym__0___45_81866487574187869 < sym__0___45_81866487574187869 && (otherRec.sym__0__4491052391778921673 < sym__0__4491052391778921673 && (otherRec.sym__0___45_3372972002109402582 < sym__0___45_3372972002109402582 && (otherRec.sym__0___45_3526459911746853062 < sym__0___45_3526459911746853062 && (otherRec.sym__0__3888656611007454200 < sym__0__3888656611007454200 && (otherRec.sym__0___45_2486248916800489394 < sym__0___45_2486248916800489394 && (otherRec.sym__0__8394331336990370272 < sym__0__8394331336990370272 && (otherRec.sym__0___45_4769387547076984204 < sym__0___45_4769387547076984204 && (otherRec.sym__0__2921980375679127951 < sym__0__2921980375679127951 && (otherRec.sym__0__8529234028810628493 < sym__0__8529234028810628493 && (otherRec.sym__0___45_9121259344041446475 < sym__0___45_9121259344041446475 && (otherRec.sym__0__348558693647595 < sym__0__348558693647595 && (otherRec.sym__0__5914240982740365380 < sym__0__5914240982740365380 && (otherRec.sym__0__4386296335266496550 < sym__0__4386296335266496550 && (otherRec.sym__0___45_7565954230697746984 < sym__0___45_7565954230697746984 && (otherRec.sym__0__4103166551933433482 < sym__0__4103166551933433482 && (otherRec.sym__0__3915783908859429175 < sym__0__3915783908859429175 && otherRec.sym__0__5009970556314156228 < sym__0__5009970556314156228))))))))))))))))))))))))))))))))))))))))))))))));
  }
  bool operator ==(const Record13& otherRec) const{
    return (otherRec.sym__0__7154476739614218196 == sym__0__7154476739614218196 && (otherRec.sym__0__915231614437968932 == sym__0__915231614437968932 && (otherRec.sym__0__37028222996400778 == sym__0__37028222996400778 && (otherRec.sym__0__6251536504348528741 == sym__0__6251536504348528741 && (otherRec.sym__0__1709176701279413427 == sym__0__1709176701279413427 && (otherRec.sym__0___45_2659621666018905195 == sym__0___45_2659621666018905195 && (otherRec.sym__0___45_5637313367644824964 == sym__0___45_5637313367644824964 && (otherRec.sym__0___45_4407752905887362921 == sym__0___45_4407752905887362921 && (otherRec.sym__0__2685452258859673180 == sym__0__2685452258859673180 && (otherRec.sym__0__5597372632819274036 == sym__0__5597372632819274036 && (otherRec.sym__0__7381131061197816450 == sym__0__7381131061197816450 && (otherRec.sym__0__7041718244351321413 == sym__0__7041718244351321413 && (otherRec.sym__0__8146610856700609392 == sym__0__8146610856700609392 && (otherRec.sym__0__3940433477622007480 == sym__0__3940433477622007480 && (otherRec.sym__0___45_1811664569933558919 == sym__0___45_1811664569933558919 && (otherRec.sym__0___45_988899978273627119 == sym__0___45_988899978273627119 && (otherRec.sym__0___45_4036920836355128293 == sym__0___45_4036920836355128293 && (otherRec.sym__0__739308532018820796 == sym__0__739308532018820796 && (otherRec.sym__0__3070122341850796004 == sym__0__3070122341850796004 && (otherRec.sym__0__6417102677086974014 == sym__0__6417102677086974014 && (otherRec.sym__0__2905008832211369096 == sym__0__2905008832211369096 && (otherRec.sym__0__1015640929639550114 == sym__0__1015640929639550114 && (otherRec.sym__0___45_6701167315677712481 == sym__0___45_6701167315677712481 && (otherRec.sym__0___45_7011024518358033052 == sym__0___45_7011024518358033052 && (otherRec.sym__0__5127801756037217904 == sym__0__5127801756037217904 && (otherRec.sym__0__249840800709918712 == sym__0__249840800709918712 && (otherRec.sym__0___45_4628977507139130302 == sym__0___45_4628977507139130302 && (otherRec.sym__0__4641483936646316458 == sym__0__4641483936646316458 && (otherRec.sym__0__1039411420117778476 == sym__0__1039411420117778476 && (otherRec.sym__0___45_2817575825443992797 == sym__0___45_2817575825443992797 && (otherRec.sym__0__7950430201749646638 == sym__0__7950430201749646638 && (otherRec.sym__0___45_81866487574187869 == sym__0___45_81866487574187869 && (otherRec.sym__0__4491052391778921673 == sym__0__4491052391778921673 && (otherRec.sym__0___45_3372972002109402582 == sym__0___45_3372972002109402582 && (otherRec.sym__0___45_3526459911746853062 == sym__0___45_3526459911746853062 && (otherRec.sym__0__3888656611007454200 == sym__0__3888656611007454200 && (otherRec.sym__0___45_2486248916800489394 == sym__0___45_2486248916800489394 && (otherRec.sym__0__8394331336990370272 == sym__0__8394331336990370272 && (otherRec.sym__0___45_4769387547076984204 == sym__0___45_4769387547076984204 && (otherRec.sym__0__2921980375679127951 == sym__0__2921980375679127951 && (otherRec.sym__0__8529234028810628493 == sym__0__8529234028810628493 && (otherRec.sym__0___45_9121259344041446475 == sym__0___45_9121259344041446475 && (otherRec.sym__0__348558693647595 == sym__0__348558693647595 && (otherRec.sym__0__5914240982740365380 == sym__0__5914240982740365380 && (otherRec.sym__0__4386296335266496550 == sym__0__4386296335266496550 && (otherRec.sym__0___45_7565954230697746984 == sym__0___45_7565954230697746984 && (otherRec.sym__0__4103166551933433482 == sym__0__4103166551933433482 && (otherRec.sym__0__3915783908859429175 == sym__0__3915783908859429175 && otherRec.sym__0__5009970556314156228 == sym__0__5009970556314156228))))))))))))))))))))))))))))))))))))))))))))))));
  }
  bool operator !=(const Record13& otherRec) const{
    return (otherRec.sym__0__7154476739614218196 != sym__0__7154476739614218196 || (otherRec.sym__0__915231614437968932 != sym__0__915231614437968932 || (otherRec.sym__0__37028222996400778 != sym__0__37028222996400778 || (otherRec.sym__0__6251536504348528741 != sym__0__6251536504348528741 || (otherRec.sym__0__1709176701279413427 != sym__0__1709176701279413427 || (otherRec.sym__0___45_2659621666018905195 != sym__0___45_2659621666018905195 || (otherRec.sym__0___45_5637313367644824964 != sym__0___45_5637313367644824964 || (otherRec.sym__0___45_4407752905887362921 != sym__0___45_4407752905887362921 || (otherRec.sym__0__2685452258859673180 != sym__0__2685452258859673180 || (otherRec.sym__0__5597372632819274036 != sym__0__5597372632819274036 || (otherRec.sym__0__7381131061197816450 != sym__0__7381131061197816450 || (otherRec.sym__0__7041718244351321413 != sym__0__7041718244351321413 || (otherRec.sym__0__8146610856700609392 != sym__0__8146610856700609392 || (otherRec.sym__0__3940433477622007480 != sym__0__3940433477622007480 || (otherRec.sym__0___45_1811664569933558919 != sym__0___45_1811664569933558919 || (otherRec.sym__0___45_988899978273627119 != sym__0___45_988899978273627119 || (otherRec.sym__0___45_4036920836355128293 != sym__0___45_4036920836355128293 || (otherRec.sym__0__739308532018820796 != sym__0__739308532018820796 || (otherRec.sym__0__3070122341850796004 != sym__0__3070122341850796004 || (otherRec.sym__0__6417102677086974014 != sym__0__6417102677086974014 || (otherRec.sym__0__2905008832211369096 != sym__0__2905008832211369096 || (otherRec.sym__0__1015640929639550114 != sym__0__1015640929639550114 || (otherRec.sym__0___45_6701167315677712481 != sym__0___45_6701167315677712481 || (otherRec.sym__0___45_7011024518358033052 != sym__0___45_7011024518358033052 || (otherRec.sym__0__5127801756037217904 != sym__0__5127801756037217904 || (otherRec.sym__0__249840800709918712 != sym__0__249840800709918712 || (otherRec.sym__0___45_4628977507139130302 != sym__0___45_4628977507139130302 || (otherRec.sym__0__4641483936646316458 != sym__0__4641483936646316458 || (otherRec.sym__0__1039411420117778476 != sym__0__1039411420117778476 || (otherRec.sym__0___45_2817575825443992797 != sym__0___45_2817575825443992797 || (otherRec.sym__0__7950430201749646638 != sym__0__7950430201749646638 || (otherRec.sym__0___45_81866487574187869 != sym__0___45_81866487574187869 || (otherRec.sym__0__4491052391778921673 != sym__0__4491052391778921673 || (otherRec.sym__0___45_3372972002109402582 != sym__0___45_3372972002109402582 || (otherRec.sym__0___45_3526459911746853062 != sym__0___45_3526459911746853062 || (otherRec.sym__0__3888656611007454200 != sym__0__3888656611007454200 || (otherRec.sym__0___45_2486248916800489394 != sym__0___45_2486248916800489394 || (otherRec.sym__0__8394331336990370272 != sym__0__8394331336990370272 || (otherRec.sym__0___45_4769387547076984204 != sym__0___45_4769387547076984204 || (otherRec.sym__0__2921980375679127951 != sym__0__2921980375679127951 || (otherRec.sym__0__8529234028810628493 != sym__0__8529234028810628493 || (otherRec.sym__0___45_9121259344041446475 != sym__0___45_9121259344041446475 || (otherRec.sym__0__348558693647595 != sym__0__348558693647595 || (otherRec.sym__0__5914240982740365380 != sym__0__5914240982740365380 || (otherRec.sym__0__4386296335266496550 != sym__0__4386296335266496550 || (otherRec.sym__0___45_7565954230697746984 != sym__0___45_7565954230697746984 || (otherRec.sym__0__4103166551933433482 != sym__0__4103166551933433482 || (otherRec.sym__0__3915783908859429175 != sym__0__3915783908859429175 || otherRec.sym__0__5009970556314156228 != sym__0__5009970556314156228))))))))))))))))))))))))))))))))))))))))))))))));
  }
  unsigned sym__0__7154476739614218196;
  fluidb_string<18> sym__0__915231614437968932;
  fluidb_string<9> sym__0__37028222996400778;
  fluidb_string<9> sym__0__6251536504348528741;
  unsigned sym__0__1709176701279413427;
  unsigned sym__0___45_2659621666018905195;
  fluidb_string<7> sym__0___45_5637313367644824964;
  unsigned sym__0___45_4407752905887362921;
  unsigned sym__0__2685452258859673180;
  unsigned sym__0__5597372632819274036;
  unsigned sym__0__7381131061197816450;
  unsigned sym__0__7041718244351321413;
  fluidb_string<15> sym__0__8146610856700609392;
  fluidb_string<2> sym__0__3940433477622007480;
  fluidb_string<2> sym__0___45_1811664569933558919;
  fluidb_string<2> sym__0___45_988899978273627119;
  fluidb_string<2> sym__0___45_4036920836355128293;
  unsigned sym__0__739308532018820796;
  fluidb_string<18> sym__0__3070122341850796004;
  fluidb_string<40> sym__0__6417102677086974014;
  fluidb_string<11> sym__0__2905008832211369096;
  fluidb_string<15> sym__0__1015640929639550114;
  fluidb_string<13> sym__0___45_6701167315677712481;
  fluidb_string<15> sym__0___45_7011024518358033052;
  fluidb_string<21> sym__0__5127801756037217904;
  unsigned sym__0__249840800709918712;
  int sym__0___45_4628977507139130302;
  unsigned sym__0__4641483936646316458;
  unsigned sym__0__1039411420117778476;
  unsigned sym__0___45_2817575825443992797;
  unsigned sym__0__7950430201749646638;
  fluidb_string<21> sym__0___45_81866487574187869;
  unsigned sym__0__4491052391778921673;
  fluidb_string<10> sym__0___45_3372972002109402582;
  unsigned sym__0___45_3526459911746853062;
  double sym__0__3888656611007454200;
  unsigned sym__0___45_2486248916800489394;
  double sym__0__8394331336990370272;
  unsigned sym__0___45_4769387547076984204;
  unsigned sym__0__2921980375679127951;
  double sym__0__8529234028810628493;
  fluidb_string<13> sym__0___45_9121259344041446475;
  unsigned sym__0__348558693647595;
  fluidb_string<25> sym__0__5914240982740365380;
  fluidb_string<40> sym__0__4386296335266496550;
  fluidb_string<16> sym__0___45_7565954230697746984;
  fluidb_string<16> sym__0__4103166551933433482;
  fluidb_string<13> sym__0__3915783908859429175;
  fluidb_string<15> sym__0__5009970556314156228;
 private:
};


class CallableClass40 {
 public:
  Record34 operator()(const Record36& record33) {
    return Record34(vAggrFirst35(record33.sym__0__1016643266231007683), vAggrFirst37(record33.sym__0__3269568155542253564), vAggrFirst38(record33.sym__0___45_3813708782342371331), vAggrSum39((record33.sym__0__2342925512217931808 - record33.sym__0__1214124832604663335)));
  }
  typedef Record34 Codomain;
  typedef Record36 Domain0;
 private:
  AggrFirst<unsigned> vAggrFirst35;
  AggrFirst<fluidb_string<16>> vAggrFirst37;
  AggrFirst<fluidb_string<10>> vAggrFirst38;
  AggrSum<unsigned> vAggrSum39;
};


class CallableClass44 {
 public:
  Record41 operator()(const Record34& record43) {
    return Record41(record43.sym__0___45_3626104775580424569, record43.sym__0__2860600750035231010, record43.sym__0__8292664984119007321);
  }
  typedef Record41 Codomain;
  typedef Record34 Domain0;
 private:
};


class CallableClass14 {
 public:
  Record13 operator()(const Record11& record9, const Record12& record10) {
    return Record13(record9.sym__0__2037864888707786451, record9.sym__0__8533656712666151747, record9.sym__0__646314041574508429, record9.sym__0__6064137978327902054, record9.sym__0__3754157776500852496, record9.sym__0__6284345160241949046, record9.sym__0___45_773692805971570325, record9.sym__0___45_8399474032083007524, record9.sym__0___45_2038947427357444789, record9.sym__0__6071994954612827827, record9.sym__0__7742515703067448213, record9.sym__0__5201219213304227654, record9.sym__0___45_5896625796158057241, record9.sym__0___45_1108504872221226081, record9.sym__0__1055103969674359346, record9.sym__0__9115626546918942554, record9.sym__0___45_6850413444013389848, record10.sym__0___45_5611752679662454596, record10.sym__0__8284710813937453156, record10.sym__0___45_4842680096876089794, record10.sym__0___45_710354479664384056, record10.sym__0__5226734655493777314, record10.sym__0___45_2050270109046259233, record10.sym__0__1720445878674149604, record10.sym__0__9096038743290410480, record10.sym__0__6229494737797221560, record10.sym__0___45_3154053534972437950, record10.sym__0__7126726395099527914, record10.sym__0___45_1226908566486043092, record10.sym__0___45_2487625519499816861, record10.sym__0___45_4525186447111677138, record10.sym__0__1039710532624158435, record10.sym__0___45_8355580593941930551, record10.sym__0___45_5420657802690122646, record10.sym__0__1486337980340211258, record10.sym__0__7085283162505185464, record10.sym__0___45_4478538497674719666, record10.sym__0__5097645924271741792, record10.sym__0__8433010502365585204, record10.sym__0___45_3951444146024940337, record10.sym__0___45_7906654096231217651, record10.sym__0__6489248170966942389, record10.sym__0__3433246303390161259, record10.sym__0___45_7936747949400285628, record10.sym__0__6634602724841732454, record10.sym__0___45_7093877196445790056, record10.sym__0___45_720782153361267254, record10.sym__0___45_8411076280103187401, record10.sym__0___45_5530358790515034684);
  }
  typedef Record13 Codomain;
  typedef Record11 Domain0;
  typedef Record12 Domain1;
 private:
};


class CallableClass19 {
 public:
  Record15 operator()(const Record12& record18) {
    return Record15(record18.sym__0___45_4525186447111677138);
  }
  typedef Record15 Codomain;
  typedef Record12 Domain0;
 private:
};


class CallableClass28 {
 public:
  Record15 operator()(const Record24& record27) {
    return Record15(record27.sym__0__2571611128943656626);
  }
  typedef Record15 Codomain;
  typedef Record24 Domain0;
 private:
};


class CallableClass32 {
 public:
  bool operator()(const Record25& record31) {
    return like(record31.sym__0___45_8670773565387601472, "MFGR#14");
  }
  typedef bool Codomain;
  typedef Record25 Domain0;
 private:
};


class CallableClass3 {
 public:
  Record1 operator()(const Record2& record0) {
    return Record1(record0.sym__0__3621650489550753899, record0.sym__0___45_2948215607211369349, record0.sym__0___45_8856885663442357963, record0.sym__0___45_8916023721409687458, record0.sym__0__8946000790400782120, record0.sym__0___45_2342846251621573170, record0.sym__0__1032112610168018387, record0.sym__0__7011664169603445220, record0.sym__0__4324933040532830835, record0.sym__0___45_4021802192502517237, record0.sym__0___45_3995179909498575571, record0.sym__0__5024632712808532094, record0.sym__0___45_2888940964904426273, record0.sym__0__388284026989546791, record0.sym__0__7857167294786104330, record0.sym__0__4687998046624254050, record0.sym__0__6006260245622319568, record0.sym__0___45_6094952503271846681, record0.sym__0___45_4584467813004062355, record0.sym__0___45_626375228995803371, record0.sym__0___45_1921065565269642365, record0.sym__0__8159540803036597784, record0.sym__0___45_3799099060194420991, record0.sym__0___45_46659435107143272, record0.sym__0__974718074128111770, record0.sym__0___45_6853763430966553195, record0.sym__0___45_3390830821838262747, record0.sym__0___45_3119614841511366425, record0.sym__0___45_2252607189598367, record0.sym__0___45_8964179892079168049, record0.sym__0___45_2159923936634862133, record0.sym__0___45_8423263630379754148, record0.sym__0__3945318628861617222, record0.sym__0__884810496370279086, record0.sym__0___45_4626225858345901984, record0.sym__0___45_9053558893173472421, record0.sym__0__7782476241138750585, record0.sym__0__2792235255099272583, record0.sym__0___45_5693560869534272203, record0.sym__0__2412297939095727556, record0.sym__0__2007415003408133595, record0.sym__0___45_5951663584277409901, record0.sym__0__1069716994239709627, record0.sym__0__5325598899940282257, record0.sym__0__6177928352879073975, record0.sym__0___45_6830131149002033523, record0.sym__0__4606794854636421868, record0.sym__0__4310971986799422779, record0.sym__0___45_329020162802994721);
  }
  typedef Record1 Codomain;
  typedef Record2 Domain0;
 private:
};


class CallableClass5 {
 public:
  Record4 operator()(const Record2& record0) {
    return Record4(record0.sym__0__475106436053698917, record0.sym__0__2091979395855916501, record0.sym__0___45_8342080612972883318, record0.sym__0___45_5674057173303846288, record0.sym__0__3631223897369402426, record0.sym__0___45_7986370385586055242, record0.sym__0___45_385650784014629180, record0.sym__0__5959307721228335951, record0.sym__0___45_5759464174332942374);
  }
  typedef Record4 Codomain;
  typedef Record2 Domain0;
 private:
};


class CallableClass26 {
 public:
  Record25 operator()(const Record24& record22, const Record4& record23) {
    return Record25(record22.sym__0___45_2600703832754715382, record22.sym__0___45_7578273935239857990, record22.sym__0__875191355534311252, record22.sym__0___45_6042256660357361193, record22.sym__0__2251162898911166857, record22.sym__0__8322995032561243047, record22.sym__0__3359760786864885346, record22.sym__0__4755955500146647717, record22.sym__0__825634143835399618, record22.sym__0___45_5673193308586008598, record22.sym__0__2344416604488212124, record22.sym__0__996127159005129399, record22.sym__0___45_8445295692641080722, record22.sym__0___45_9133478590074263962, record22.sym__0___45_1949673146646224253, record22.sym__0___45_3693142685708191253, record22.sym__0___45_7021098367134788127, record22.sym__0___45_1631867111754601434, record22.sym__0__5956167765210805980, record22.sym__0___45_4504547450980902284, record22.sym__0__2571611128943656626, record22.sym__0___45_7797291820866539495, record22.sym__0__8112696983606547888, record22.sym__0___45_8859514051634859623, record22.sym__0__1155613969670303859, record22.sym__0__6875278589307593972, record22.sym__0___45_961680512448388956, record22.sym__0___45_674541735213940698, record22.sym__0___45_821091676724229936, record22.sym__0___45_4702801186563994626, record22.sym__0___45_3023845865529546326, record22.sym__0__5284478023732558701, record22.sym__0__253975703545414575, record22.sym__0__2038562371344131399, record22.sym__0___45_6180681665671689455, record22.sym__0___45_7492215985175491366, record22.sym__0__3108260102440442872, record22.sym__0__4242088751554333190, record22.sym__0__4419222406440371028, record22.sym__0___45_4395878808383970875, record22.sym__0__5421156455815400282, record22.sym__0__1445832851994825762, record22.sym__0__4538888751267676410, record22.sym__0__6214774548635804832, record22.sym__0__5647889798153721686, record22.sym__0__7215382845017137468, record22.sym__0___45_7064023331726131555, record22.sym__0__2464748358755927674, record22.sym__0__1701416785032206702, record23.sym__0__7178003535380331304, record23.sym__0___45_7020257275696364520, record23.sym__0___45_6307179734719967033, record23.sym__0__4568304886257136061, record23.sym__0___45_6291097039630000265, record23.sym__0__551327770031967739, record23.sym__0__3827696365022297353, record23.sym__0___45_1779543743759935870, record23.sym__0__3752090135924368535);
  }
  typedef Record25 Codomain;
  typedef Record24 Domain0;
  typedef Record4 Domain1;
 private:
};


class CallableClass30 {
 public:
  Record15 operator()(const Record4& record29) {
    return Record15(record29.sym__0__7178003535380331304);
  }
  typedef Record15 Codomain;
  typedef Record4 Domain0;
 private:
};


class CallableClass42 {
 public:
  Record41 operator()(const Record36& record33) {
    return Record41(record33.sym__0__1016643266231007683, record33.sym__0__3269568155542253564, record33.sym__0___45_3813708782342371331);
  }
  typedef Record41 Codomain;
  typedef Record36 Domain0;
 private:
};


class CallableClass8 {
 public:
  bool operator()(const Record7& record6) {
    return like(record6.sym__0__5153200798583684363, "UNITED STATES");
  }
  typedef bool Codomain;
  typedef Record7 Domain0;
 private:
};


class CallableClass17 {
 public:
  Record15 operator()(const Record11& record16) {
    return Record15(record16.sym__0__2037864888707786451);
  }
  typedef Record15 Codomain;
  typedef Record11 Domain0;
 private:
};


class CallableClass21 {
 public:
  bool operator()(const Record13& record20) {
    return ((record20.sym__0__1709176701279413427 == 1997) || (record20.sym__0__1709176701279413427 == 1998));
  }
  typedef bool Codomain;
  typedef Record13 Domain0;
 private:
};






int main() {
  // ReverseTrigger: (Just 
  //   (Left 
  //     [
  //      QJoin 
  //         (P0 
  //           (R2 REq 
  //               (R0 (E0 (ESym "lo_partkey"))) 
  //               (R0 (E0 (ESym "p_partkey")))))
  std::cout << "ReverseTrigger: (Just \n  (Left \n    [\n     QJoin \n        (P0 \n          (R2 REq \n              (R0 (E0 (ESym \"lo_partkey\"))) \n              (R0 (E0 (ESym \"p_partkey\")))))\n    ]))" << std::endl;
  {
    auto operation = mkUnJoin<CallableClass3, CallableClass5>(Just("/tmp/fluidb_store/data336.dat"), Nothing(), Just("/tmp/fluidb_store/data337.dat"), Nothing(), Just("/tmp/fluidb_store/data2.dat"));
    operation.run();
    operation.print_output(10);
  }
  // ForwardTrigger: (Just 
  //   (Right 
  //     [
  //      QSel 
  //         (P0 
  //           (R2 RLike 
  //               (R0 (E0 (ESym "s_nation"))) 
  //               (R0 (E0 (EString "UNITED STATES")))))
  std::cout << "ForwardTrigger: (Just \n  (Right \n    [\n     QSel \n        (P0 \n          (R2 RLike \n              (R0 (E0 (ESym \"s_nation\"))) \n              (R0 (E0 (EString \"UNITED STATES\")))))\n    ]))" << std::endl;
  {
    auto operation = mkSelect<CallableClass8>(Just<const std::string>("/tmp/fluidb_store/data357.dat"), Just<const std::string>("/tmp/fluidb_store/data359.dat"), "/tmp/fluidb_store/data296.dat");
    operation.run();
    operation.print_output(10);
  }
  // Delete: (Q1 
  //   (QSort 
  //     [E0 (ESym "d_year"),E0 (ESym "s_nation"),E0 (ESym "p_category")]) 
  //   (Q1 
  //     (QGroup 
  //       [
  //        (ESym "d_year",E0 (NAggr AggrFirst (E0 (ESym "d_year")))),
  //        (ESym "s_nation",E0 (NAggr AggrFirst (E0 (ESym "s_nation")))),
  //        (ESym "p_category",E0 (NAggr AggrFirst (E0 (ESym "p_category")))),
  //        (
  //          ESym "profit",
  //          E0 
  //             (NAggr 
  //               AggrSum 
  //               (E2 ESub 
  //                   (E0 (ESym "lo_revenue")) 
  //                   (E0 (ESym "lo_supplycost"))))
  //         )
  //       ] 
  //       [E0 (ESym "d_year"),E0 (ESym "s_nation"),E0 (ESym "p_category")]) 
  //     (S 
  //       (P2 
  //         PAnd 
  //         (P2 
  //           PAnd 
  //           (P2 
  //             PAnd 
  //             (P0 
  //               (R2 RLike 
  //                   (R0 (E0 (ESym "c_region"))) 
  //                   (R0 (E0 (EString "AMERICA"))))) 
  //             (P0 
  //               (R2 RLike 
  //                   (R0 (E0 (ESym "s_region"))) 
  //                   (R0 (E0 (EString "AMERICA")))))) 
  //           (P2 
  //             POr 
  //             (P0 
  //               (R2 REq (R0 (E0 (ESym "d_year"))) (R0 (E0 (EInt 1997))))) 
  //             (P0 
  //               (R2 REq (R0 (E0 (ESym "d_year"))) (R0 (E0 (EInt 1998))))))) 
  //         (P2 
  //           POr 
  //           (P0 
  //             (R2 RLike 
  //                 (R0 (E0 (ESym "p_mfgr"))) 
  //                 (R0 (E0 (EString "MFGR#1"))))) 
  //           (P0 
  //             (R2 RLike 
  //                 (R0 (E0 (ESym "p_mfgr"))) 
  //                 (R0 (E0 (EString "MFGR#2"))))))) 
  //       (J 
  //         (P0 
  //           (R2 REq 
  //               (R0 (E0 (ESym "lo_partkey"))) 
  //               (R0 (E0 (ESym "p_partkey"))))) 
  //         (J 
  //           (P0 
  //             (R2 REq 
  //                 (R0 (E0 (ESym "lo_custkey"))) 
  //                 (R0 (E0 (ESym "c_custkey"))))) 
  //           (J 
  //             (P0 
  //               (R2 REq 
  //                   (R0 (E0 (ESym "lo_suppkey"))) 
  //                   (R0 (E0 (ESym "s_suppkey"))))) 
  //             (J 
  //               (P0 
  //                 (R2 REq 
  //                     (R0 (E0 (ESym "lo_orderdate"))) 
  //                     (R0 (E0 (ESym "d_datekey"))))) 
  //               (Q0 (TSymbol "date")) 
  //               (Q0 (TSymbol "lineorder"))) 
  //             (Q0 (TSymbol "supplier"))) 
  //           (Q0 (TSymbol "customer"))) 
  std::cout << "Delete: N342" << std::endl;
  deleteFile("/tmp/fluidb_store/data342.dat");
  // Delete: (Q1 
  //   (QGroup 
  //     [
  //      (ESym "d_year",E0 (NAggr AggrFirst (E0 (ESym "d_year")))),
  //      (ESym "s_nation",E0 (NAggr AggrFirst (E0 (ESym "s_nation")))),
  //      (ESym "p_category",E0 (NAggr AggrFirst (E0 (ESym "p_category")))),
  //      (
  //        ESym "profit",
  //        E0 
  //           (NAggr 
  //             AggrSum 
  //             (E2 ESub 
  //                 (E0 (ESym "lo_revenue")) 
  //                 (E0 (ESym "lo_supplycost"))))
  //       )
  //     ] 
  //     [E0 (ESym "d_year"),E0 (ESym "s_nation"),E0 (ESym "p_category")]) 
  //   (S 
  //     (P2 
  //       PAnd 
  //       (P2 
  //         PAnd 
  //         (P2 
  //           PAnd 
  //           (P0 
  //             (R2 RLike 
  //                 (R0 (E0 (ESym "c_region"))) 
  //                 (R0 (E0 (EString "AMERICA"))))) 
  //           (P0 
  //             (R2 RLike 
  //                 (R0 (E0 (ESym "s_region"))) 
  //                 (R0 (E0 (EString "AMERICA")))))) 
  //         (P2 POr 
  //             (P0 (R2 REq (R0 (E0 (ESym "d_year"))) (R0 (E0 (EInt 1997))))) 
  //             (P0 (R2 REq (R0 (E0 (ESym "d_year"))) (R0 (E0 (EInt 1998))))))) 
  //       (P2 
  //         POr 
  //         (P0 
  //           (R2 RLike 
  //               (R0 (E0 (ESym "p_mfgr"))) 
  //               (R0 (E0 (EString "MFGR#1"))))) 
  //         (P0 
  //           (R2 RLike 
  //               (R0 (E0 (ESym "p_mfgr"))) 
  //               (R0 (E0 (EString "MFGR#2"))))))) 
  //     (J 
  //       (P0 
  //         (R2 REq 
  //             (R0 (E0 (ESym "lo_partkey"))) 
  //             (R0 (E0 (ESym "p_partkey"))))) 
  //       (J 
  //         (P0 
  //           (R2 REq 
  //               (R0 (E0 (ESym "lo_custkey"))) 
  //               (R0 (E0 (ESym "c_custkey"))))) 
  //         (J 
  //           (P0 
  //             (R2 REq 
  //                 (R0 (E0 (ESym "lo_suppkey"))) 
  //                 (R0 (E0 (ESym "s_suppkey"))))) 
  //           (J 
  //             (P0 
  //               (R2 REq 
  //                   (R0 (E0 (ESym "lo_orderdate"))) 
  //                   (R0 (E0 (ESym "d_datekey"))))) 
  //             (Q0 (TSymbol "date")) 
  //             (Q0 (TSymbol "lineorder"))) 
  //           (Q0 (TSymbol "supplier"))) 
  //         (Q0 (TSymbol "customer"))) 
  std::cout << "Delete: N341" << std::endl;
  deleteFile("/tmp/fluidb_store/data341.dat");
  // Delete: (S 
  //   (P2 
  //     PAnd 
  //     (P2 
  //       PAnd 
  //       (P2 
  //         PAnd 
  //         (P0 
  //           (R2 RLike 
  //               (R0 (E0 (ESym "c_region"))) 
  //               (R0 (E0 (EString "AMERICA"))))) 
  //         (P0 
  //           (R2 RLike 
  //               (R0 (E0 (ESym "s_region"))) 
  //               (R0 (E0 (EString "AMERICA")))))) 
  //       (P2 POr 
  //           (P0 (R2 REq (R0 (E0 (ESym "d_year"))) (R0 (E0 (EInt 1997))))) 
  //           (P0 (R2 REq (R0 (E0 (ESym "d_year"))) (R0 (E0 (EInt 1998))))))) 
  //     (P2 
  //       POr 
  //       (P0 
  //         (R2 RLike 
  //             (R0 (E0 (ESym "p_mfgr"))) 
  //             (R0 (E0 (EString "MFGR#1"))))) 
  //       (P0 
  //         (R2 RLike 
  //             (R0 (E0 (ESym "p_mfgr"))) 
  //             (R0 (E0 (EString "MFGR#2"))))))) 
  //   (J 
  //     (P0 
  //       (R2 REq 
  //           (R0 (E0 (ESym "lo_partkey"))) 
  //           (R0 (E0 (ESym "p_partkey"))))) 
  //     (J 
  //       (P0 
  //         (R2 REq 
  //             (R0 (E0 (ESym "lo_custkey"))) 
  //             (R0 (E0 (ESym "c_custkey"))))) 
  //       (J 
  //         (P0 
  //           (R2 REq 
  //               (R0 (E0 (ESym "lo_suppkey"))) 
  //               (R0 (E0 (ESym "s_suppkey"))))) 
  //         (J 
  //           (P0 
  //             (R2 REq 
  //                 (R0 (E0 (ESym "lo_orderdate"))) 
  //                 (R0 (E0 (ESym "d_datekey"))))) 
  //           (Q0 (TSymbol "date")) 
  //           (Q0 (TSymbol "lineorder"))) 
  //         (Q0 (TSymbol "supplier"))) 
  //       (Q0 (TSymbol "customer"))) 
  std::cout << "Delete: N313" << std::endl;
  deleteFile("/tmp/fluidb_store/data313.dat");
  // ForwardTrigger: (Just 
  //   (Left 
  //     [
  //      QJoin 
  //         (P0 
  //           (R2 REq 
  //               (R0 (E0 (ESym "lo_orderdate"))) 
  //               (R0 (E0 (ESym "d_datekey")))))
  std::cout << "ForwardTrigger: (Just \n  (Left \n    [\n     QJoin \n        (P0 \n          (R2 REq \n              (R0 (E0 (ESym \"lo_orderdate\"))) \n              (R0 (E0 (ESym \"d_datekey\")))))\n    ]))" << std::endl;
  {
    auto operation = mkEquiJoin<CallableClass17, CallableClass19, CallableClass14>(Just<const std::string>("/tmp/fluidb_store/data361.dat"), Just<const std::string>("/tmp/fluidb_store/data360.dat"), Just<const std::string>("/tmp/fluidb_store/data362.dat"), "/tmp/fluidb_store/data1.dat", "/tmp/fluidb_store/data357.dat");
    operation.run();
    operation.print_output(10);
  }
  // Delete: (S 
  //   (P1 
  //     PNot 
  //     (P0 
  //       (R2 RLike 
  //           (R0 (E0 (ESym "s_nation"))) 
  //           (R0 (E0 (EString "UNITED STATES")))))) 
  //   (J 
  //     (P0 
  //       (R2 REq 
  //           (R0 (E0 (ESym "lo_suppkey"))) 
  //           (R0 (E0 (ESym "s_suppkey"))))) 
  //     (S 
  //       (P0 
  //         (R2 RLike 
  //             (R0 (E0 (ESym "c_region"))) 
  //             (R0 (E0 (EString "AMERICA"))))) 
  //       (J 
  //         (P0 
  //           (R2 REq 
  //               (R0 (E0 (ESym "lo_custkey"))) 
  //               (R0 (E0 (ESym "c_custkey"))))) 
  //         (Q0 (TSymbol "customer")) 
  //         (Q0 (TSymbol "lineorder")))) 
  std::cout << "Delete: N359" << std::endl;
  deleteFile("/tmp/fluidb_store/data359.dat");
  // Delete: (Q2 
  //   (QLeftAntijoin 
  //     (P0 
  //       (R2 REq 
  //           (R0 (E0 (ESym "lo_orderdate"))) 
  //           (R0 (E0 (ESym "d_datekey")))))) 
  //   (Q0 (TSymbol "date")) 
  //   (S 
  //     (P0 
  //       (R2 RLike 
  //           (R0 (E0 (ESym "s_nation"))) 
  //           (R0 (E0 (EString "UNITED STATES"))))) 
  //     (J 
  //       (P0 
  //         (R2 REq 
  //             (R0 (E0 (ESym "lo_suppkey"))) 
  //             (R0 (E0 (ESym "s_suppkey"))))) 
  //       (S 
  //         (P0 
  //           (R2 RLike 
  //               (R0 (E0 (ESym "c_region"))) 
  //               (R0 (E0 (EString "AMERICA"))))) 
  //         (J 
  //           (P0 
  //             (R2 REq 
  //                 (R0 (E0 (ESym "lo_custkey"))) 
  //                 (R0 (E0 (ESym "c_custkey"))))) 
  //           (Q0 (TSymbol "customer")) 
  //           (Q0 (TSymbol "lineorder")))) 
  std::cout << "Delete: N360" << std::endl;
  deleteFile("/tmp/fluidb_store/data360.dat");
  // Delete: (Q2 
  //   (QRightAntijoin 
  //     (P0 
  //       (R2 REq 
  //           (R0 (E0 (ESym "lo_orderdate"))) 
  //           (R0 (E0 (ESym "d_datekey")))))) 
  //   (Q0 (TSymbol "date")) 
  //   (S 
  //     (P0 
  //       (R2 RLike 
  //           (R0 (E0 (ESym "s_nation"))) 
  //           (R0 (E0 (EString "UNITED STATES"))))) 
  //     (J 
  //       (P0 
  //         (R2 REq 
  //             (R0 (E0 (ESym "lo_suppkey"))) 
  //             (R0 (E0 (ESym "s_suppkey"))))) 
  //       (S 
  //         (P0 
  //           (R2 RLike 
  //               (R0 (E0 (ESym "c_region"))) 
  //               (R0 (E0 (EString "AMERICA"))))) 
  //         (J 
  //           (P0 
  //             (R2 REq 
  //                 (R0 (E0 (ESym "lo_custkey"))) 
  //                 (R0 (E0 (ESym "c_custkey"))))) 
  //           (Q0 (TSymbol "customer")) 
  //           (Q0 (TSymbol "lineorder")))) 
  std::cout << "Delete: N362" << std::endl;
  deleteFile("/tmp/fluidb_store/data362.dat");
  // Delete: (Q2 
  //   (QRightAntijoin 
  //     (P0 
  //       (R2 REq 
  //           (R0 (E0 (ESym "lo_partkey"))) 
  //           (R0 (E0 (ESym "p_partkey")))))) 
  //   (S 
  //     (P0 
  //       (R2 RLike 
  //           (R0 (E0 (ESym "c_region"))) 
  //           (R0 (E0 (EString "AMERICA"))))) 
  //     (J 
  //       (P0 
  //         (R2 REq 
  //             (R0 (E0 (ESym "lo_custkey"))) 
  //             (R0 (E0 (ESym "c_custkey"))))) 
  //       (S 
  //         (P2 
  //           PAnd 
  //           (P2 
  //             POr 
  //             (P0 
  //               (R2 REq (R0 (E0 (ESym "d_year"))) (R0 (E0 (EInt 1997))))) 
  //             (P0 
  //               (R2 REq (R0 (E0 (ESym "d_year"))) (R0 (E0 (EInt 1998)))))) 
  //           (P0 
  //             (R2 RLike 
  //                 (R0 (E0 (ESym "s_region"))) 
  //                 (R0 (E0 (EString "AMERICA")))))) 
  //         (J 
  //           (P0 
  //             (R2 REq 
  //                 (R0 (E0 (ESym "lo_suppkey"))) 
  //                 (R0 (E0 (ESym "s_suppkey"))))) 
  //           (J 
  //             (P0 
  //               (R2 REq 
  //                   (R0 (E0 (ESym "lo_orderdate"))) 
  //                   (R0 (E0 (ESym "d_datekey"))))) 
  //             (Q0 (TSymbol "date")) 
  //             (Q0 (TSymbol "lineorder"))) 
  //           (Q0 (TSymbol "supplier")))) 
  //       (Q0 (TSymbol "customer")))) 
  std::cout << "Delete: N337" << std::endl;
  deleteFile("/tmp/fluidb_store/data337.dat");
  // Delete: (S 
  //   (P1 
  //     PNot 
  //     (P2 
  //       POr 
  //       (P0 
  //         (R2 RLike 
  //             (R0 (E0 (ESym "p_mfgr"))) 
  //             (R0 (E0 (EString "MFGR#1"))))) 
  //       (P0 
  //         (R2 RLike 
  //             (R0 (E0 (ESym "p_mfgr"))) 
  //             (R0 (E0 (EString "MFGR#2"))))))) 
  //   (J 
  //     (P0 
  //       (R2 REq 
  //           (R0 (E0 (ESym "lo_partkey"))) 
  //           (R0 (E0 (ESym "p_partkey"))))) 
  //     (S 
  //       (P2 
  //         PAnd 
  //         (P2 
  //           PAnd 
  //           (P0 
  //             (R2 RLike 
  //                 (R0 (E0 (ESym "s_region"))) 
  //                 (R0 (E0 (EString "AMERICA"))))) 
  //           (P2 
  //             POr 
  //             (P0 
  //               (R2 REq (R0 (E0 (ESym "d_year"))) (R0 (E0 (EInt 1997))))) 
  //             (P0 
  //               (R2 REq (R0 (E0 (ESym "d_year"))) (R0 (E0 (EInt 1998))))))) 
  //         (P0 
  //           (R2 RLike 
  //               (R0 (E0 (ESym "c_region"))) 
  //               (R0 (E0 (EString "AMERICA")))))) 
  //       (J 
  //         (P0 
  //           (R2 REq 
  //               (R0 (E0 (ESym "lo_custkey"))) 
  //               (R0 (E0 (ESym "c_custkey"))))) 
  //         (J 
  //           (P0 
  //             (R2 REq 
  //                 (R0 (E0 (ESym "lo_suppkey"))) 
  //                 (R0 (E0 (ESym "s_suppkey"))))) 
  //           (J 
  //             (P0 
  //               (R2 REq 
  //                   (R0 (E0 (ESym "lo_orderdate"))) 
  //                   (R0 (E0 (ESym "d_datekey"))))) 
  //             (Q0 (TSymbol "date")) 
  //             (Q0 (TSymbol "lineorder"))) 
  //           (Q0 (TSymbol "supplier"))) 
  //         (Q0 (TSymbol "customer")))) 
  std::cout << "Delete: N340" << std::endl;
  deleteFile("/tmp/fluidb_store/data340.dat");
  // Delete: (J 
  //   (P0 
  //     (R2 REq (R0 (E0 (ESym "lo_partkey"))) (R0 (E0 (ESym "p_partkey"))))) 
  //   (S 
  //     (P0 
  //       (R2 RLike 
  //           (R0 (E0 (ESym "c_region"))) 
  //           (R0 (E0 (EString "AMERICA"))))) 
  //     (J 
  //       (P0 
  //         (R2 REq 
  //             (R0 (E0 (ESym "lo_custkey"))) 
  //             (R0 (E0 (ESym "c_custkey"))))) 
  //       (S 
  //         (P2 
  //           PAnd 
  //           (P2 
  //             POr 
  //             (P0 
  //               (R2 REq (R0 (E0 (ESym "d_year"))) (R0 (E0 (EInt 1997))))) 
  //             (P0 
  //               (R2 REq (R0 (E0 (ESym "d_year"))) (R0 (E0 (EInt 1998)))))) 
  //           (P0 
  //             (R2 RLike 
  //                 (R0 (E0 (ESym "s_region"))) 
  //                 (R0 (E0 (EString "AMERICA")))))) 
  //         (J 
  //           (P0 
  //             (R2 REq 
  //                 (R0 (E0 (ESym "lo_suppkey"))) 
  //                 (R0 (E0 (ESym "s_suppkey"))))) 
  //           (J 
  //             (P0 
  //               (R2 REq 
  //                   (R0 (E0 (ESym "lo_orderdate"))) 
  //                   (R0 (E0 (ESym "d_datekey"))))) 
  //             (Q0 (TSymbol "date")) 
  //             (Q0 (TSymbol "lineorder"))) 
  //           (Q0 (TSymbol "supplier")))) 
  //       (Q0 (TSymbol "customer")))) 
  std::cout << "Delete: N336" << std::endl;
  deleteFile("/tmp/fluidb_store/data336.dat");
  // ForwardTrigger: (Just 
  //   (Right 
  //     [
  //      QSel 
  //         (P2 POr 
  //             (P0 (R2 REq (R0 (E0 (ESym "d_year"))) (R0 (E0 (EInt 1997))))) 
  //             (P0 (R2 REq (R0 (E0 (ESym "d_year"))) (R0 (E0 (EInt 1998))))))
  std::cout << "ForwardTrigger: (Just \n  (Right \n    [\n     QSel \n        (P2 POr \n            (P0 (R2 REq (R0 (E0 (ESym \"d_year\"))) (R0 (E0 (EInt 1997))))) \n            (P0 (R2 REq (R0 (E0 (ESym \"d_year\"))) (R0 (E0 (EInt 1998))))))\n    ]))" << std::endl;
  {
    auto operation = mkSelect<CallableClass21>(Just<const std::string>("/tmp/fluidb_store/data345.dat"), Just<const std::string>("/tmp/fluidb_store/data365.dat"), "/tmp/fluidb_store/data361.dat");
    operation.run();
    operation.print_output(10);
  }
  // Delete: (S 
  //   (P2 
  //     PAnd 
  //     (P0 
  //       (R2 RLike 
  //           (R0 (E0 (ESym "c_region"))) 
  //           (R0 (E0 (EString "AMERICA"))))) 
  //     (P0 
  //       (R2 RLike 
  //           (R0 (E0 (ESym "s_region"))) 
  //           (R0 (E0 (EString "AMERICA")))))) 
  //   (J 
  //     (P0 
  //       (R2 REq 
  //           (R0 (E0 (ESym "lo_suppkey"))) 
  //           (R0 (E0 (ESym "s_suppkey"))))) 
  //     (J 
  //       (P0 
  //         (R2 REq 
  //             (R0 (E0 (ESym "lo_custkey"))) 
  //             (R0 (E0 (ESym "c_custkey"))))) 
  //       (Q0 (TSymbol "customer")) 
  //       (Q0 (TSymbol "lineorder"))) 
  std::cout << "Delete: N291" << std::endl;
  deleteFile("/tmp/fluidb_store/data291.dat");
  // Delete: (S 
  //   (P2 
  //     PAnd 
  //     (P0 
  //       (R2 RLike 
  //           (R0 (E0 (ESym "c_region"))) 
  //           (R0 (E0 (EString "AMERICA"))))) 
  //     (P0 
  //       (R2 RLike 
  //           (R0 (E0 (ESym "s_nation"))) 
  //           (R0 (E0 (EString "UNITED STATES")))))) 
  //   (J 
  //     (P0 
  //       (R2 REq 
  //           (R0 (E0 (ESym "lo_suppkey"))) 
  //           (R0 (E0 (ESym "s_suppkey"))))) 
  //     (J 
  //       (P0 
  //         (R2 REq 
  //             (R0 (E0 (ESym "lo_custkey"))) 
  //             (R0 (E0 (ESym "c_custkey"))))) 
  //       (Q0 (TSymbol "customer")) 
  //       (Q0 (TSymbol "lineorder"))) 
  std::cout << "Delete: N357" << std::endl;
  deleteFile("/tmp/fluidb_store/data357.dat");
  // ForwardTrigger: (Just 
  //   (Left 
  //     [
  //      QJoin 
  //         (P0 
  //           (R2 REq 
  //               (R0 (E0 (ESym "lo_partkey"))) 
  //               (R0 (E0 (ESym "p_partkey")))))
  std::cout << "ForwardTrigger: (Just \n  (Left \n    [\n     QJoin \n        (P0 \n          (R2 REq \n              (R0 (E0 (ESym \"lo_partkey\"))) \n              (R0 (E0 (ESym \"p_partkey\")))))\n    ]))" << std::endl;
  {
    auto operation = mkEquiJoin<CallableClass28, CallableClass30, CallableClass26>(Just<const std::string>("/tmp/fluidb_store/data367.dat"), Just<const std::string>("/tmp/fluidb_store/data366.dat"), Just<const std::string>("/tmp/fluidb_store/data368.dat"), "/tmp/fluidb_store/data345.dat", "/tmp/fluidb_store/data2.dat");
    operation.run();
    operation.print_output(10);
  }
  // Delete: (S 
  //   (P1 
  //     PNot 
  //     (P2 POr 
  //         (P0 (R2 REq (R0 (E0 (ESym "d_year"))) (R0 (E0 (EInt 1997))))) 
  //         (P0 (R2 REq (R0 (E0 (ESym "d_year"))) (R0 (E0 (EInt 1998))))))) 
  //   (J 
  //     (P0 
  //       (R2 REq 
  //           (R0 (E0 (ESym "lo_orderdate"))) 
  //           (R0 (E0 (ESym "d_datekey"))))) 
  //     (Q0 (TSymbol "date")) 
  //     (S 
  //       (P2 
  //         PAnd 
  //         (P0 
  //           (R2 RLike 
  //               (R0 (E0 (ESym "c_region"))) 
  //               (R0 (E0 (EString "AMERICA"))))) 
  //         (P0 
  //           (R2 RLike 
  //               (R0 (E0 (ESym "s_nation"))) 
  //               (R0 (E0 (EString "UNITED STATES")))))) 
  //       (J 
  //         (P0 
  //           (R2 REq 
  //               (R0 (E0 (ESym "lo_suppkey"))) 
  //               (R0 (E0 (ESym "s_suppkey"))))) 
  //         (J 
  //           (P0 
  //             (R2 REq 
  //                 (R0 (E0 (ESym "lo_custkey"))) 
  //                 (R0 (E0 (ESym "c_custkey"))))) 
  //           (Q0 (TSymbol "customer")) 
  //           (Q0 (TSymbol "lineorder"))) 
  std::cout << "Delete: N365" << std::endl;
  deleteFile("/tmp/fluidb_store/data365.dat");
  // Delete: (J 
  //   (P0 
  //     (R2 REq 
  //         (R0 (E0 (ESym "lo_orderdate"))) 
  //         (R0 (E0 (ESym "d_datekey"))))) 
  //   (Q0 (TSymbol "date")) 
  //   (S 
  //     (P0 
  //       (R2 RLike 
  //           (R0 (E0 (ESym "s_nation"))) 
  //           (R0 (E0 (EString "UNITED STATES"))))) 
  //     (J 
  //       (P0 
  //         (R2 REq 
  //             (R0 (E0 (ESym "lo_suppkey"))) 
  //             (R0 (E0 (ESym "s_suppkey"))))) 
  //       (S 
  //         (P0 
  //           (R2 RLike 
  //               (R0 (E0 (ESym "c_region"))) 
  //               (R0 (E0 (EString "AMERICA"))))) 
  //         (J 
  //           (P0 
  //             (R2 REq 
  //                 (R0 (E0 (ESym "lo_custkey"))) 
  //                 (R0 (E0 (ESym "c_custkey"))))) 
  //           (Q0 (TSymbol "customer")) 
  //           (Q0 (TSymbol "lineorder")))) 
  std::cout << "Delete: N361" << std::endl;
  deleteFile("/tmp/fluidb_store/data361.dat");
  // ForwardTrigger: (Just 
  //   (Right 
  //     [
  //      QSel 
  //         (P0 
  //           (R2 RLike 
  //               (R0 (E0 (ESym "p_category"))) 
  //               (R0 (E0 (EString "MFGR#14")))))
  std::cout << "ForwardTrigger: (Just \n  (Right \n    [\n     QSel \n        (P0 \n          (R2 RLike \n              (R0 (E0 (ESym \"p_category\"))) \n              (R0 (E0 (EString \"MFGR#14\")))))\n    ]))" << std::endl;
  {
    auto operation = mkSelect<CallableClass32>(Just<const std::string>("/tmp/fluidb_store/data343.dat"), Just<const std::string>("/tmp/fluidb_store/data371.dat"), "/tmp/fluidb_store/data367.dat");
    operation.run();
    operation.print_output(10);
  }
  // ForwardTrigger: (Just 
  //   (Right 
  //     [
  //      QGroup 
  //         [
  //          (ESym "d_year",E0 (NAggr AggrFirst (E0 (ESym "d_year")))),
  //          (ESym "s_city",E0 (NAggr AggrFirst (E0 (ESym "s_city")))),
  //          (ESym "p_brand1",E0 (NAggr AggrFirst (E0 (ESym "p_brand1")))),
  //          (
  //            ESym "profit",
  //            E0 
  //               (NAggr 
  //                 AggrSum 
  //                 (E2 ESub 
  //                     (E0 (ESym "lo_revenue")) 
  //                     (E0 (ESym "lo_supplycost"))))
  //           )
  //         ] 
  //         [E0 (ESym "d_year"),E0 (ESym "s_city"),E0 (ESym "p_brand1")]
  std::cout << "ForwardTrigger: (Just \n  (Right \n    [\n     QGroup \n        [\n         (ESym \"d_year\",E0 (NAggr AggrFirst (E0 (ESym \"d_year\")))),\n         (ESym \"s_city\",E0 (NAggr AggrFirst (E0 (ESym \"s_city\")))),\n         (ESym \"p_brand1\",E0 (NAggr AggrFirst (E0 (ESym \"p_brand1\")))),\n         (\n           ESym \"profit\",\n           E0 \n              (NAggr \n                AggrSum \n                (E2 ESub \n                    (E0 (ESym \"lo_revenue\")) \n                    (E0 (ESym \"lo_supplycost\"))))\n          )\n        ] \n        [E0 (ESym \"d_year\"),E0 (ESym \"s_city\"),E0 (ESym \"p_brand1\")]\n    ]))" << std::endl;
  {
    auto operation = mkAggregation<CallableClass40, CallableClass42>(Just<const std::string>("/tmp/fluidb_store/data372.dat"), Just<const std::string>("/tmp/fluidb_store/data343.dat"), "/tmp/fluidb_store/data343.dat");
    operation.run();
    operation.print_output(10);
  }
  // ForwardTrigger: (Just 
  //   (Right 
  std::cout << "ForwardTrigger: (Just \n  (Right \n    [QSort [E0 (ESym \"d_year\"),E0 (ESym \"s_city\"),E0 (ESym \"p_brand1\")]]))" << std::endl;
  {
    auto operation = mkSort<CallableClass44>(Just<const std::string>("/tmp/fluidb_store/data373.dat"), Just<const std::string>("/tmp/fluidb_store/data372.dat"), "/tmp/fluidb_store/data372.dat");
    operation.run();
    operation.print_output(10);
  }
  report_counters();
  return 0;
}
