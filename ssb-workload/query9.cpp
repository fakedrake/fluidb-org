#include <array>

#include <string>

#include <codegen.hh>
class Record14 {
 public:
  Record14(unsigned __sortElem0, unsigned __sortElem1) : sortElem0(__sortElem0), sortElem1(__sortElem1)
  {
  }
  Record14() 
  {
  }
  std::string show() const{
    std::stringstream o;
    o << sortElem0 << " | " << sortElem1;
    return o.str();
  }
  bool operator <(const Record14& otherRec) const{
    return (otherRec.sortElem0 < sortElem0 && otherRec.sortElem1 < sortElem1);
  }
  bool operator ==(const Record14& otherRec) const{
    return (otherRec.sortElem0 == sortElem0 && otherRec.sortElem1 == sortElem1);
  }
  bool operator !=(const Record14& otherRec) const{
    return (otherRec.sortElem0 != sortElem0 || otherRec.sortElem1 != sortElem1);
  }
  unsigned sortElem0;
  unsigned sortElem1;
 private:
};


class Record1 {
 public:
  Record1(unsigned __sym__0__7577655604576576020, fluidb_string<18> __sym__0___45_2957579613704386588, fluidb_string<9> __sym__0__3873855183530032714, fluidb_string<9> __sym__0___45_5414786619423294939, unsigned __sym__0__5557137180551786739, unsigned __sym__0___45_6042740597378878507, fluidb_string<7> __sym__0___45_5833642980832303428, unsigned __sym__0___45_5108599129385010601, unsigned __sym__0__6596363747273139740, unsigned __sym__0___45_3780820615727466252, unsigned __sym__0___45_5733022218377332670, unsigned __sym__0___45_1101619184546797307, fluidb_string<15> __sym__0__5315661629871309616, fluidb_string<2> __sym__0__1548970624774688888, fluidb_string<2> __sym__0__3082040486510970809, fluidb_string<2> __sym__0___45_3773548088295367727, fluidb_string<2> __sym__0__2425475927764529115, unsigned __sym__0__3550854697533762172, fluidb_string<18> __sym__0___45_2428002636247423964, fluidb_string<40> __sym__0__2537603616087343230, fluidb_string<11> __sym__0___45_5133924085204218680, fluidb_string<15> __sym__0__1411885469038113506, fluidb_string<13> __sym__0___45_4336521243533294241, fluidb_string<15> __sym__0___45_2416233287424533084, fluidb_string<21> __sym__0___45_8608893297661193168, unsigned __sym__0__6600743152885821739, fluidb_string<25> __sym__0__8327451819077700100, fluidb_string<40> __sym__0__6397198241134363110, fluidb_string<16> __sym__0___45_5337640715365439464, fluidb_string<16> __sym__0__6843344685518481994, fluidb_string<13> __sym__0___45_281035451017513097, fluidb_string<15> __sym__0__978963012373614724, unsigned __sym__0___45_138255197005962184, int __sym__0__8723886903896913538, unsigned __sym__0___45_6396778144419774102, unsigned __sym__0__4345290193888622188, unsigned __sym__0__4748858544164465891, unsigned __sym__0___45_2013870166617871634, fluidb_string<21> __sym__0__4486213189679553123, unsigned __sym__0__2044116807841453321, fluidb_string<10> __sym__0__5619260977463858154, unsigned __sym__0___45_8920615137005718662, double __sym__0__2992813735709491256, unsigned __sym__0___45_4738111187081458162, double __sym__0__7342994916058425376, unsigned __sym__0___45_102160816985196364, unsigned __sym__0__1283865848515870159, double __sym__0___45_6653948180198187699, fluidb_string<13> __sym__0__1838544743518506357) : sym__0__7577655604576576020(__sym__0__7577655604576576020), sym__0___45_2957579613704386588(__sym__0___45_2957579613704386588), sym__0__3873855183530032714(__sym__0__3873855183530032714), sym__0___45_5414786619423294939(__sym__0___45_5414786619423294939), sym__0__5557137180551786739(__sym__0__5557137180551786739), sym__0___45_6042740597378878507(__sym__0___45_6042740597378878507), sym__0___45_5833642980832303428(__sym__0___45_5833642980832303428), sym__0___45_5108599129385010601(__sym__0___45_5108599129385010601), sym__0__6596363747273139740(__sym__0__6596363747273139740), sym__0___45_3780820615727466252(__sym__0___45_3780820615727466252), sym__0___45_5733022218377332670(__sym__0___45_5733022218377332670), sym__0___45_1101619184546797307(__sym__0___45_1101619184546797307), sym__0__5315661629871309616(__sym__0__5315661629871309616), sym__0__1548970624774688888(__sym__0__1548970624774688888), sym__0__3082040486510970809(__sym__0__3082040486510970809), sym__0___45_3773548088295367727(__sym__0___45_3773548088295367727), sym__0__2425475927764529115(__sym__0__2425475927764529115), sym__0__3550854697533762172(__sym__0__3550854697533762172), sym__0___45_2428002636247423964(__sym__0___45_2428002636247423964), sym__0__2537603616087343230(__sym__0__2537603616087343230), sym__0___45_5133924085204218680(__sym__0___45_5133924085204218680), sym__0__1411885469038113506(__sym__0__1411885469038113506), sym__0___45_4336521243533294241(__sym__0___45_4336521243533294241), sym__0___45_2416233287424533084(__sym__0___45_2416233287424533084), sym__0___45_8608893297661193168(__sym__0___45_8608893297661193168), sym__0__6600743152885821739(__sym__0__6600743152885821739), sym__0__8327451819077700100(__sym__0__8327451819077700100), sym__0__6397198241134363110(__sym__0__6397198241134363110), sym__0___45_5337640715365439464(__sym__0___45_5337640715365439464), sym__0__6843344685518481994(__sym__0__6843344685518481994), sym__0___45_281035451017513097(__sym__0___45_281035451017513097), sym__0__978963012373614724(__sym__0__978963012373614724), sym__0___45_138255197005962184(__sym__0___45_138255197005962184), sym__0__8723886903896913538(__sym__0__8723886903896913538), sym__0___45_6396778144419774102(__sym__0___45_6396778144419774102), sym__0__4345290193888622188(__sym__0__4345290193888622188), sym__0__4748858544164465891(__sym__0__4748858544164465891), sym__0___45_2013870166617871634(__sym__0___45_2013870166617871634), sym__0__4486213189679553123(__sym__0__4486213189679553123), sym__0__2044116807841453321(__sym__0__2044116807841453321), sym__0__5619260977463858154(__sym__0__5619260977463858154), sym__0___45_8920615137005718662(__sym__0___45_8920615137005718662), sym__0__2992813735709491256(__sym__0__2992813735709491256), sym__0___45_4738111187081458162(__sym__0___45_4738111187081458162), sym__0__7342994916058425376(__sym__0__7342994916058425376), sym__0___45_102160816985196364(__sym__0___45_102160816985196364), sym__0__1283865848515870159(__sym__0__1283865848515870159), sym__0___45_6653948180198187699(__sym__0___45_6653948180198187699), sym__0__1838544743518506357(__sym__0__1838544743518506357)
  {
  }
  Record1() 
  {
  }
  std::string show() const{
    std::stringstream o;
    o << sym__0__7577655604576576020 << " | " << arrToString(sym__0___45_2957579613704386588) << " | " << arrToString(sym__0__3873855183530032714) << " | " << arrToString(sym__0___45_5414786619423294939) << " | " << sym__0__5557137180551786739 << " | " << sym__0___45_6042740597378878507 << " | " << arrToString(sym__0___45_5833642980832303428) << " | " << sym__0___45_5108599129385010601 << " | " << sym__0__6596363747273139740 << " | " << sym__0___45_3780820615727466252 << " | " << sym__0___45_5733022218377332670 << " | " << sym__0___45_1101619184546797307 << " | " << arrToString(sym__0__5315661629871309616) << " | " << arrToString(sym__0__1548970624774688888) << " | " << arrToString(sym__0__3082040486510970809) << " | " << arrToString(sym__0___45_3773548088295367727) << " | " << arrToString(sym__0__2425475927764529115) << " | " << sym__0__3550854697533762172 << " | " << arrToString(sym__0___45_2428002636247423964) << " | " << arrToString(sym__0__2537603616087343230) << " | " << arrToString(sym__0___45_5133924085204218680) << " | " << arrToString(sym__0__1411885469038113506) << " | " << arrToString(sym__0___45_4336521243533294241) << " | " << arrToString(sym__0___45_2416233287424533084) << " | " << arrToString(sym__0___45_8608893297661193168) << " | " << sym__0__6600743152885821739 << " | " << arrToString(sym__0__8327451819077700100) << " | " << arrToString(sym__0__6397198241134363110) << " | " << arrToString(sym__0___45_5337640715365439464) << " | " << arrToString(sym__0__6843344685518481994) << " | " << arrToString(sym__0___45_281035451017513097) << " | " << arrToString(sym__0__978963012373614724) << " | " << sym__0___45_138255197005962184 << " | " << sym__0__8723886903896913538 << " | " << sym__0___45_6396778144419774102 << " | " << sym__0__4345290193888622188 << " | " << sym__0__4748858544164465891 << " | " << sym__0___45_2013870166617871634 << " | " << arrToString(sym__0__4486213189679553123) << " | " << sym__0__2044116807841453321 << " | " << arrToString(sym__0__5619260977463858154) << " | " << sym__0___45_8920615137005718662 << " | " << sym__0__2992813735709491256 << " | " << sym__0___45_4738111187081458162 << " | " << sym__0__7342994916058425376 << " | " << sym__0___45_102160816985196364 << " | " << sym__0__1283865848515870159 << " | " << sym__0___45_6653948180198187699 << " | " << arrToString(sym__0__1838544743518506357);
    return o.str();
  }
  bool operator <(const Record1& otherRec) const{
    return (otherRec.sym__0__7577655604576576020 < sym__0__7577655604576576020 && (otherRec.sym__0___45_2957579613704386588 < sym__0___45_2957579613704386588 && (otherRec.sym__0__3873855183530032714 < sym__0__3873855183530032714 && (otherRec.sym__0___45_5414786619423294939 < sym__0___45_5414786619423294939 && (otherRec.sym__0__5557137180551786739 < sym__0__5557137180551786739 && (otherRec.sym__0___45_6042740597378878507 < sym__0___45_6042740597378878507 && (otherRec.sym__0___45_5833642980832303428 < sym__0___45_5833642980832303428 && (otherRec.sym__0___45_5108599129385010601 < sym__0___45_5108599129385010601 && (otherRec.sym__0__6596363747273139740 < sym__0__6596363747273139740 && (otherRec.sym__0___45_3780820615727466252 < sym__0___45_3780820615727466252 && (otherRec.sym__0___45_5733022218377332670 < sym__0___45_5733022218377332670 && (otherRec.sym__0___45_1101619184546797307 < sym__0___45_1101619184546797307 && (otherRec.sym__0__5315661629871309616 < sym__0__5315661629871309616 && (otherRec.sym__0__1548970624774688888 < sym__0__1548970624774688888 && (otherRec.sym__0__3082040486510970809 < sym__0__3082040486510970809 && (otherRec.sym__0___45_3773548088295367727 < sym__0___45_3773548088295367727 && (otherRec.sym__0__2425475927764529115 < sym__0__2425475927764529115 && (otherRec.sym__0__3550854697533762172 < sym__0__3550854697533762172 && (otherRec.sym__0___45_2428002636247423964 < sym__0___45_2428002636247423964 && (otherRec.sym__0__2537603616087343230 < sym__0__2537603616087343230 && (otherRec.sym__0___45_5133924085204218680 < sym__0___45_5133924085204218680 && (otherRec.sym__0__1411885469038113506 < sym__0__1411885469038113506 && (otherRec.sym__0___45_4336521243533294241 < sym__0___45_4336521243533294241 && (otherRec.sym__0___45_2416233287424533084 < sym__0___45_2416233287424533084 && (otherRec.sym__0___45_8608893297661193168 < sym__0___45_8608893297661193168 && (otherRec.sym__0__6600743152885821739 < sym__0__6600743152885821739 && (otherRec.sym__0__8327451819077700100 < sym__0__8327451819077700100 && (otherRec.sym__0__6397198241134363110 < sym__0__6397198241134363110 && (otherRec.sym__0___45_5337640715365439464 < sym__0___45_5337640715365439464 && (otherRec.sym__0__6843344685518481994 < sym__0__6843344685518481994 && (otherRec.sym__0___45_281035451017513097 < sym__0___45_281035451017513097 && (otherRec.sym__0__978963012373614724 < sym__0__978963012373614724 && (otherRec.sym__0___45_138255197005962184 < sym__0___45_138255197005962184 && (otherRec.sym__0__8723886903896913538 < sym__0__8723886903896913538 && (otherRec.sym__0___45_6396778144419774102 < sym__0___45_6396778144419774102 && (otherRec.sym__0__4345290193888622188 < sym__0__4345290193888622188 && (otherRec.sym__0__4748858544164465891 < sym__0__4748858544164465891 && (otherRec.sym__0___45_2013870166617871634 < sym__0___45_2013870166617871634 && (otherRec.sym__0__4486213189679553123 < sym__0__4486213189679553123 && (otherRec.sym__0__2044116807841453321 < sym__0__2044116807841453321 && (otherRec.sym__0__5619260977463858154 < sym__0__5619260977463858154 && (otherRec.sym__0___45_8920615137005718662 < sym__0___45_8920615137005718662 && (otherRec.sym__0__2992813735709491256 < sym__0__2992813735709491256 && (otherRec.sym__0___45_4738111187081458162 < sym__0___45_4738111187081458162 && (otherRec.sym__0__7342994916058425376 < sym__0__7342994916058425376 && (otherRec.sym__0___45_102160816985196364 < sym__0___45_102160816985196364 && (otherRec.sym__0__1283865848515870159 < sym__0__1283865848515870159 && (otherRec.sym__0___45_6653948180198187699 < sym__0___45_6653948180198187699 && otherRec.sym__0__1838544743518506357 < sym__0__1838544743518506357))))))))))))))))))))))))))))))))))))))))))))))));
  }
  bool operator ==(const Record1& otherRec) const{
    return (otherRec.sym__0__7577655604576576020 == sym__0__7577655604576576020 && (otherRec.sym__0___45_2957579613704386588 == sym__0___45_2957579613704386588 && (otherRec.sym__0__3873855183530032714 == sym__0__3873855183530032714 && (otherRec.sym__0___45_5414786619423294939 == sym__0___45_5414786619423294939 && (otherRec.sym__0__5557137180551786739 == sym__0__5557137180551786739 && (otherRec.sym__0___45_6042740597378878507 == sym__0___45_6042740597378878507 && (otherRec.sym__0___45_5833642980832303428 == sym__0___45_5833642980832303428 && (otherRec.sym__0___45_5108599129385010601 == sym__0___45_5108599129385010601 && (otherRec.sym__0__6596363747273139740 == sym__0__6596363747273139740 && (otherRec.sym__0___45_3780820615727466252 == sym__0___45_3780820615727466252 && (otherRec.sym__0___45_5733022218377332670 == sym__0___45_5733022218377332670 && (otherRec.sym__0___45_1101619184546797307 == sym__0___45_1101619184546797307 && (otherRec.sym__0__5315661629871309616 == sym__0__5315661629871309616 && (otherRec.sym__0__1548970624774688888 == sym__0__1548970624774688888 && (otherRec.sym__0__3082040486510970809 == sym__0__3082040486510970809 && (otherRec.sym__0___45_3773548088295367727 == sym__0___45_3773548088295367727 && (otherRec.sym__0__2425475927764529115 == sym__0__2425475927764529115 && (otherRec.sym__0__3550854697533762172 == sym__0__3550854697533762172 && (otherRec.sym__0___45_2428002636247423964 == sym__0___45_2428002636247423964 && (otherRec.sym__0__2537603616087343230 == sym__0__2537603616087343230 && (otherRec.sym__0___45_5133924085204218680 == sym__0___45_5133924085204218680 && (otherRec.sym__0__1411885469038113506 == sym__0__1411885469038113506 && (otherRec.sym__0___45_4336521243533294241 == sym__0___45_4336521243533294241 && (otherRec.sym__0___45_2416233287424533084 == sym__0___45_2416233287424533084 && (otherRec.sym__0___45_8608893297661193168 == sym__0___45_8608893297661193168 && (otherRec.sym__0__6600743152885821739 == sym__0__6600743152885821739 && (otherRec.sym__0__8327451819077700100 == sym__0__8327451819077700100 && (otherRec.sym__0__6397198241134363110 == sym__0__6397198241134363110 && (otherRec.sym__0___45_5337640715365439464 == sym__0___45_5337640715365439464 && (otherRec.sym__0__6843344685518481994 == sym__0__6843344685518481994 && (otherRec.sym__0___45_281035451017513097 == sym__0___45_281035451017513097 && (otherRec.sym__0__978963012373614724 == sym__0__978963012373614724 && (otherRec.sym__0___45_138255197005962184 == sym__0___45_138255197005962184 && (otherRec.sym__0__8723886903896913538 == sym__0__8723886903896913538 && (otherRec.sym__0___45_6396778144419774102 == sym__0___45_6396778144419774102 && (otherRec.sym__0__4345290193888622188 == sym__0__4345290193888622188 && (otherRec.sym__0__4748858544164465891 == sym__0__4748858544164465891 && (otherRec.sym__0___45_2013870166617871634 == sym__0___45_2013870166617871634 && (otherRec.sym__0__4486213189679553123 == sym__0__4486213189679553123 && (otherRec.sym__0__2044116807841453321 == sym__0__2044116807841453321 && (otherRec.sym__0__5619260977463858154 == sym__0__5619260977463858154 && (otherRec.sym__0___45_8920615137005718662 == sym__0___45_8920615137005718662 && (otherRec.sym__0__2992813735709491256 == sym__0__2992813735709491256 && (otherRec.sym__0___45_4738111187081458162 == sym__0___45_4738111187081458162 && (otherRec.sym__0__7342994916058425376 == sym__0__7342994916058425376 && (otherRec.sym__0___45_102160816985196364 == sym__0___45_102160816985196364 && (otherRec.sym__0__1283865848515870159 == sym__0__1283865848515870159 && (otherRec.sym__0___45_6653948180198187699 == sym__0___45_6653948180198187699 && otherRec.sym__0__1838544743518506357 == sym__0__1838544743518506357))))))))))))))))))))))))))))))))))))))))))))))));
  }
  bool operator !=(const Record1& otherRec) const{
    return (otherRec.sym__0__7577655604576576020 != sym__0__7577655604576576020 || (otherRec.sym__0___45_2957579613704386588 != sym__0___45_2957579613704386588 || (otherRec.sym__0__3873855183530032714 != sym__0__3873855183530032714 || (otherRec.sym__0___45_5414786619423294939 != sym__0___45_5414786619423294939 || (otherRec.sym__0__5557137180551786739 != sym__0__5557137180551786739 || (otherRec.sym__0___45_6042740597378878507 != sym__0___45_6042740597378878507 || (otherRec.sym__0___45_5833642980832303428 != sym__0___45_5833642980832303428 || (otherRec.sym__0___45_5108599129385010601 != sym__0___45_5108599129385010601 || (otherRec.sym__0__6596363747273139740 != sym__0__6596363747273139740 || (otherRec.sym__0___45_3780820615727466252 != sym__0___45_3780820615727466252 || (otherRec.sym__0___45_5733022218377332670 != sym__0___45_5733022218377332670 || (otherRec.sym__0___45_1101619184546797307 != sym__0___45_1101619184546797307 || (otherRec.sym__0__5315661629871309616 != sym__0__5315661629871309616 || (otherRec.sym__0__1548970624774688888 != sym__0__1548970624774688888 || (otherRec.sym__0__3082040486510970809 != sym__0__3082040486510970809 || (otherRec.sym__0___45_3773548088295367727 != sym__0___45_3773548088295367727 || (otherRec.sym__0__2425475927764529115 != sym__0__2425475927764529115 || (otherRec.sym__0__3550854697533762172 != sym__0__3550854697533762172 || (otherRec.sym__0___45_2428002636247423964 != sym__0___45_2428002636247423964 || (otherRec.sym__0__2537603616087343230 != sym__0__2537603616087343230 || (otherRec.sym__0___45_5133924085204218680 != sym__0___45_5133924085204218680 || (otherRec.sym__0__1411885469038113506 != sym__0__1411885469038113506 || (otherRec.sym__0___45_4336521243533294241 != sym__0___45_4336521243533294241 || (otherRec.sym__0___45_2416233287424533084 != sym__0___45_2416233287424533084 || (otherRec.sym__0___45_8608893297661193168 != sym__0___45_8608893297661193168 || (otherRec.sym__0__6600743152885821739 != sym__0__6600743152885821739 || (otherRec.sym__0__8327451819077700100 != sym__0__8327451819077700100 || (otherRec.sym__0__6397198241134363110 != sym__0__6397198241134363110 || (otherRec.sym__0___45_5337640715365439464 != sym__0___45_5337640715365439464 || (otherRec.sym__0__6843344685518481994 != sym__0__6843344685518481994 || (otherRec.sym__0___45_281035451017513097 != sym__0___45_281035451017513097 || (otherRec.sym__0__978963012373614724 != sym__0__978963012373614724 || (otherRec.sym__0___45_138255197005962184 != sym__0___45_138255197005962184 || (otherRec.sym__0__8723886903896913538 != sym__0__8723886903896913538 || (otherRec.sym__0___45_6396778144419774102 != sym__0___45_6396778144419774102 || (otherRec.sym__0__4345290193888622188 != sym__0__4345290193888622188 || (otherRec.sym__0__4748858544164465891 != sym__0__4748858544164465891 || (otherRec.sym__0___45_2013870166617871634 != sym__0___45_2013870166617871634 || (otherRec.sym__0__4486213189679553123 != sym__0__4486213189679553123 || (otherRec.sym__0__2044116807841453321 != sym__0__2044116807841453321 || (otherRec.sym__0__5619260977463858154 != sym__0__5619260977463858154 || (otherRec.sym__0___45_8920615137005718662 != sym__0___45_8920615137005718662 || (otherRec.sym__0__2992813735709491256 != sym__0__2992813735709491256 || (otherRec.sym__0___45_4738111187081458162 != sym__0___45_4738111187081458162 || (otherRec.sym__0__7342994916058425376 != sym__0__7342994916058425376 || (otherRec.sym__0___45_102160816985196364 != sym__0___45_102160816985196364 || (otherRec.sym__0__1283865848515870159 != sym__0__1283865848515870159 || (otherRec.sym__0___45_6653948180198187699 != sym__0___45_6653948180198187699 || otherRec.sym__0__1838544743518506357 != sym__0__1838544743518506357))))))))))))))))))))))))))))))))))))))))))))))));
  }
  unsigned sym__0__7577655604576576020;
  fluidb_string<18> sym__0___45_2957579613704386588;
  fluidb_string<9> sym__0__3873855183530032714;
  fluidb_string<9> sym__0___45_5414786619423294939;
  unsigned sym__0__5557137180551786739;
  unsigned sym__0___45_6042740597378878507;
  fluidb_string<7> sym__0___45_5833642980832303428;
  unsigned sym__0___45_5108599129385010601;
  unsigned sym__0__6596363747273139740;
  unsigned sym__0___45_3780820615727466252;
  unsigned sym__0___45_5733022218377332670;
  unsigned sym__0___45_1101619184546797307;
  fluidb_string<15> sym__0__5315661629871309616;
  fluidb_string<2> sym__0__1548970624774688888;
  fluidb_string<2> sym__0__3082040486510970809;
  fluidb_string<2> sym__0___45_3773548088295367727;
  fluidb_string<2> sym__0__2425475927764529115;
  unsigned sym__0__3550854697533762172;
  fluidb_string<18> sym__0___45_2428002636247423964;
  fluidb_string<40> sym__0__2537603616087343230;
  fluidb_string<11> sym__0___45_5133924085204218680;
  fluidb_string<15> sym__0__1411885469038113506;
  fluidb_string<13> sym__0___45_4336521243533294241;
  fluidb_string<15> sym__0___45_2416233287424533084;
  fluidb_string<21> sym__0___45_8608893297661193168;
  unsigned sym__0__6600743152885821739;
  fluidb_string<25> sym__0__8327451819077700100;
  fluidb_string<40> sym__0__6397198241134363110;
  fluidb_string<16> sym__0___45_5337640715365439464;
  fluidb_string<16> sym__0__6843344685518481994;
  fluidb_string<13> sym__0___45_281035451017513097;
  fluidb_string<15> sym__0__978963012373614724;
  unsigned sym__0___45_138255197005962184;
  int sym__0__8723886903896913538;
  unsigned sym__0___45_6396778144419774102;
  unsigned sym__0__4345290193888622188;
  unsigned sym__0__4748858544164465891;
  unsigned sym__0___45_2013870166617871634;
  fluidb_string<21> sym__0__4486213189679553123;
  unsigned sym__0__2044116807841453321;
  fluidb_string<10> sym__0__5619260977463858154;
  unsigned sym__0___45_8920615137005718662;
  double sym__0__2992813735709491256;
  unsigned sym__0___45_4738111187081458162;
  double sym__0__7342994916058425376;
  unsigned sym__0___45_102160816985196364;
  unsigned sym__0__1283865848515870159;
  double sym__0___45_6653948180198187699;
  fluidb_string<13> sym__0__1838544743518506357;
 private:
};


class Record4 {
 public:
  Record4(fluidb_string<11> __sym__0__71540406503057918, fluidb_string<16> __sym__0__2828347237755907406, unsigned __sym__0___45_9000295950570013541, unsigned __sym__0___45_4437040401381761565) : sym__0__71540406503057918(__sym__0__71540406503057918), sym__0__2828347237755907406(__sym__0__2828347237755907406), sym__0___45_9000295950570013541(__sym__0___45_9000295950570013541), sym__0___45_4437040401381761565(__sym__0___45_4437040401381761565)
  {
  }
  Record4() 
  {
  }
  std::string show() const{
    std::stringstream o;
    o << arrToString(sym__0__71540406503057918) << " | " << arrToString(sym__0__2828347237755907406) << " | " << sym__0___45_9000295950570013541 << " | " << sym__0___45_4437040401381761565;
    return o.str();
  }
  bool operator <(const Record4& otherRec) const{
    return (otherRec.sym__0__71540406503057918 < sym__0__71540406503057918 && (otherRec.sym__0__2828347237755907406 < sym__0__2828347237755907406 && (otherRec.sym__0___45_9000295950570013541 < sym__0___45_9000295950570013541 && otherRec.sym__0___45_4437040401381761565 < sym__0___45_4437040401381761565)));
  }
  bool operator ==(const Record4& otherRec) const{
    return (otherRec.sym__0__71540406503057918 == sym__0__71540406503057918 && (otherRec.sym__0__2828347237755907406 == sym__0__2828347237755907406 && (otherRec.sym__0___45_9000295950570013541 == sym__0___45_9000295950570013541 && otherRec.sym__0___45_4437040401381761565 == sym__0___45_4437040401381761565)));
  }
  bool operator !=(const Record4& otherRec) const{
    return (otherRec.sym__0__71540406503057918 != sym__0__71540406503057918 || (otherRec.sym__0__2828347237755907406 != sym__0__2828347237755907406 || (otherRec.sym__0___45_9000295950570013541 != sym__0___45_9000295950570013541 || otherRec.sym__0___45_4437040401381761565 != sym__0___45_4437040401381761565)));
  }
  fluidb_string<11> sym__0__71540406503057918;
  fluidb_string<16> sym__0__2828347237755907406;
  unsigned sym__0___45_9000295950570013541;
  unsigned sym__0___45_4437040401381761565;
 private:
};


class Record6 {
 public:
  Record6(unsigned __sym__0__5163836519019812846, fluidb_string<18> __sym__0__4691003334066563198, fluidb_string<9> __sym__0___45_5551906115245323664, fluidb_string<9> __sym__0___45_5600985921898170805, unsigned __sym__0__5190436275755771085, unsigned __sym__0___45_7845023056148553349, fluidb_string<7> __sym__0__4350246310517402262, unsigned __sym__0___45_3651598037686104911, unsigned __sym__0__3324866205947089014, unsigned __sym__0___45_5106594024306176690, unsigned __sym__0___45_2328020107090086808, unsigned __sym__0___45_7664420784569873109, fluidb_string<15> __sym__0___45_6481679278388374134, fluidb_string<2> __sym__0___45_2993897051316018478, fluidb_string<2> __sym__0___45_2860388295315395233, fluidb_string<2> __sym__0__5791715696489447415, fluidb_string<2> __sym__0__527970848583178293, unsigned __sym__0___45_338744000625752874, fluidb_string<18> __sym__0__4457550615691903038, fluidb_string<40> __sym__0___45_7779893313968848924, fluidb_string<11> __sym__0__7034531493904066722, fluidb_string<15> __sym__0___45_8145490596050003832, fluidb_string<13> __sym__0___45_1234268100973412423, fluidb_string<15> __sym__0__3322015854183825854, fluidb_string<21> __sym__0___45_8904238202937071990, unsigned __sym__0__1079194730339214597, fluidb_string<25> __sym__0___45_1132171939664831330, fluidb_string<40> __sym__0__8743572897236263948, fluidb_string<16> __sym__0___45_4967417594431087118, fluidb_string<16> __sym__0__7039739059145821808, fluidb_string<13> __sym__0___45_5539313807166473391, fluidb_string<15> __sym__0__583748512005612830, unsigned __sym__0___45_7693013323208628206, int __sym__0___45_5748998446790810584, unsigned __sym__0__3069459070183433616, unsigned __sym__0___45_829318717909085626, unsigned __sym__0___45_2230370735359665795, unsigned __sym__0__8685332338033785108, fluidb_string<21> __sym__0___45_3218024968775209731, unsigned __sym__0__4595984355710025903, fluidb_string<10> __sym__0___45_591668478459646448, unsigned __sym__0___45_1807435744938342688, double __sym__0___45_6813561383274320878, unsigned __sym__0__8204168833568236084, double __sym__0__6331674360378029114, unsigned __sym__0___45_5676998185488268146, unsigned __sym__0__6569292155259249065, double __sym__0___45_8803043059407230605, fluidb_string<13> __sym__0__4146004324203846043) : sym__0__5163836519019812846(__sym__0__5163836519019812846), sym__0__4691003334066563198(__sym__0__4691003334066563198), sym__0___45_5551906115245323664(__sym__0___45_5551906115245323664), sym__0___45_5600985921898170805(__sym__0___45_5600985921898170805), sym__0__5190436275755771085(__sym__0__5190436275755771085), sym__0___45_7845023056148553349(__sym__0___45_7845023056148553349), sym__0__4350246310517402262(__sym__0__4350246310517402262), sym__0___45_3651598037686104911(__sym__0___45_3651598037686104911), sym__0__3324866205947089014(__sym__0__3324866205947089014), sym__0___45_5106594024306176690(__sym__0___45_5106594024306176690), sym__0___45_2328020107090086808(__sym__0___45_2328020107090086808), sym__0___45_7664420784569873109(__sym__0___45_7664420784569873109), sym__0___45_6481679278388374134(__sym__0___45_6481679278388374134), sym__0___45_2993897051316018478(__sym__0___45_2993897051316018478), sym__0___45_2860388295315395233(__sym__0___45_2860388295315395233), sym__0__5791715696489447415(__sym__0__5791715696489447415), sym__0__527970848583178293(__sym__0__527970848583178293), sym__0___45_338744000625752874(__sym__0___45_338744000625752874), sym__0__4457550615691903038(__sym__0__4457550615691903038), sym__0___45_7779893313968848924(__sym__0___45_7779893313968848924), sym__0__7034531493904066722(__sym__0__7034531493904066722), sym__0___45_8145490596050003832(__sym__0___45_8145490596050003832), sym__0___45_1234268100973412423(__sym__0___45_1234268100973412423), sym__0__3322015854183825854(__sym__0__3322015854183825854), sym__0___45_8904238202937071990(__sym__0___45_8904238202937071990), sym__0__1079194730339214597(__sym__0__1079194730339214597), sym__0___45_1132171939664831330(__sym__0___45_1132171939664831330), sym__0__8743572897236263948(__sym__0__8743572897236263948), sym__0___45_4967417594431087118(__sym__0___45_4967417594431087118), sym__0__7039739059145821808(__sym__0__7039739059145821808), sym__0___45_5539313807166473391(__sym__0___45_5539313807166473391), sym__0__583748512005612830(__sym__0__583748512005612830), sym__0___45_7693013323208628206(__sym__0___45_7693013323208628206), sym__0___45_5748998446790810584(__sym__0___45_5748998446790810584), sym__0__3069459070183433616(__sym__0__3069459070183433616), sym__0___45_829318717909085626(__sym__0___45_829318717909085626), sym__0___45_2230370735359665795(__sym__0___45_2230370735359665795), sym__0__8685332338033785108(__sym__0__8685332338033785108), sym__0___45_3218024968775209731(__sym__0___45_3218024968775209731), sym__0__4595984355710025903(__sym__0__4595984355710025903), sym__0___45_591668478459646448(__sym__0___45_591668478459646448), sym__0___45_1807435744938342688(__sym__0___45_1807435744938342688), sym__0___45_6813561383274320878(__sym__0___45_6813561383274320878), sym__0__8204168833568236084(__sym__0__8204168833568236084), sym__0__6331674360378029114(__sym__0__6331674360378029114), sym__0___45_5676998185488268146(__sym__0___45_5676998185488268146), sym__0__6569292155259249065(__sym__0__6569292155259249065), sym__0___45_8803043059407230605(__sym__0___45_8803043059407230605), sym__0__4146004324203846043(__sym__0__4146004324203846043)
  {
  }
  Record6() 
  {
  }
  std::string show() const{
    std::stringstream o;
    o << sym__0__5163836519019812846 << " | " << arrToString(sym__0__4691003334066563198) << " | " << arrToString(sym__0___45_5551906115245323664) << " | " << arrToString(sym__0___45_5600985921898170805) << " | " << sym__0__5190436275755771085 << " | " << sym__0___45_7845023056148553349 << " | " << arrToString(sym__0__4350246310517402262) << " | " << sym__0___45_3651598037686104911 << " | " << sym__0__3324866205947089014 << " | " << sym__0___45_5106594024306176690 << " | " << sym__0___45_2328020107090086808 << " | " << sym__0___45_7664420784569873109 << " | " << arrToString(sym__0___45_6481679278388374134) << " | " << arrToString(sym__0___45_2993897051316018478) << " | " << arrToString(sym__0___45_2860388295315395233) << " | " << arrToString(sym__0__5791715696489447415) << " | " << arrToString(sym__0__527970848583178293) << " | " << sym__0___45_338744000625752874 << " | " << arrToString(sym__0__4457550615691903038) << " | " << arrToString(sym__0___45_7779893313968848924) << " | " << arrToString(sym__0__7034531493904066722) << " | " << arrToString(sym__0___45_8145490596050003832) << " | " << arrToString(sym__0___45_1234268100973412423) << " | " << arrToString(sym__0__3322015854183825854) << " | " << arrToString(sym__0___45_8904238202937071990) << " | " << sym__0__1079194730339214597 << " | " << arrToString(sym__0___45_1132171939664831330) << " | " << arrToString(sym__0__8743572897236263948) << " | " << arrToString(sym__0___45_4967417594431087118) << " | " << arrToString(sym__0__7039739059145821808) << " | " << arrToString(sym__0___45_5539313807166473391) << " | " << arrToString(sym__0__583748512005612830) << " | " << sym__0___45_7693013323208628206 << " | " << sym__0___45_5748998446790810584 << " | " << sym__0__3069459070183433616 << " | " << sym__0___45_829318717909085626 << " | " << sym__0___45_2230370735359665795 << " | " << sym__0__8685332338033785108 << " | " << arrToString(sym__0___45_3218024968775209731) << " | " << sym__0__4595984355710025903 << " | " << arrToString(sym__0___45_591668478459646448) << " | " << sym__0___45_1807435744938342688 << " | " << sym__0___45_6813561383274320878 << " | " << sym__0__8204168833568236084 << " | " << sym__0__6331674360378029114 << " | " << sym__0___45_5676998185488268146 << " | " << sym__0__6569292155259249065 << " | " << sym__0___45_8803043059407230605 << " | " << arrToString(sym__0__4146004324203846043);
    return o.str();
  }
  bool operator <(const Record6& otherRec) const{
    return (otherRec.sym__0__5163836519019812846 < sym__0__5163836519019812846 && (otherRec.sym__0__4691003334066563198 < sym__0__4691003334066563198 && (otherRec.sym__0___45_5551906115245323664 < sym__0___45_5551906115245323664 && (otherRec.sym__0___45_5600985921898170805 < sym__0___45_5600985921898170805 && (otherRec.sym__0__5190436275755771085 < sym__0__5190436275755771085 && (otherRec.sym__0___45_7845023056148553349 < sym__0___45_7845023056148553349 && (otherRec.sym__0__4350246310517402262 < sym__0__4350246310517402262 && (otherRec.sym__0___45_3651598037686104911 < sym__0___45_3651598037686104911 && (otherRec.sym__0__3324866205947089014 < sym__0__3324866205947089014 && (otherRec.sym__0___45_5106594024306176690 < sym__0___45_5106594024306176690 && (otherRec.sym__0___45_2328020107090086808 < sym__0___45_2328020107090086808 && (otherRec.sym__0___45_7664420784569873109 < sym__0___45_7664420784569873109 && (otherRec.sym__0___45_6481679278388374134 < sym__0___45_6481679278388374134 && (otherRec.sym__0___45_2993897051316018478 < sym__0___45_2993897051316018478 && (otherRec.sym__0___45_2860388295315395233 < sym__0___45_2860388295315395233 && (otherRec.sym__0__5791715696489447415 < sym__0__5791715696489447415 && (otherRec.sym__0__527970848583178293 < sym__0__527970848583178293 && (otherRec.sym__0___45_338744000625752874 < sym__0___45_338744000625752874 && (otherRec.sym__0__4457550615691903038 < sym__0__4457550615691903038 && (otherRec.sym__0___45_7779893313968848924 < sym__0___45_7779893313968848924 && (otherRec.sym__0__7034531493904066722 < sym__0__7034531493904066722 && (otherRec.sym__0___45_8145490596050003832 < sym__0___45_8145490596050003832 && (otherRec.sym__0___45_1234268100973412423 < sym__0___45_1234268100973412423 && (otherRec.sym__0__3322015854183825854 < sym__0__3322015854183825854 && (otherRec.sym__0___45_8904238202937071990 < sym__0___45_8904238202937071990 && (otherRec.sym__0__1079194730339214597 < sym__0__1079194730339214597 && (otherRec.sym__0___45_1132171939664831330 < sym__0___45_1132171939664831330 && (otherRec.sym__0__8743572897236263948 < sym__0__8743572897236263948 && (otherRec.sym__0___45_4967417594431087118 < sym__0___45_4967417594431087118 && (otherRec.sym__0__7039739059145821808 < sym__0__7039739059145821808 && (otherRec.sym__0___45_5539313807166473391 < sym__0___45_5539313807166473391 && (otherRec.sym__0__583748512005612830 < sym__0__583748512005612830 && (otherRec.sym__0___45_7693013323208628206 < sym__0___45_7693013323208628206 && (otherRec.sym__0___45_5748998446790810584 < sym__0___45_5748998446790810584 && (otherRec.sym__0__3069459070183433616 < sym__0__3069459070183433616 && (otherRec.sym__0___45_829318717909085626 < sym__0___45_829318717909085626 && (otherRec.sym__0___45_2230370735359665795 < sym__0___45_2230370735359665795 && (otherRec.sym__0__8685332338033785108 < sym__0__8685332338033785108 && (otherRec.sym__0___45_3218024968775209731 < sym__0___45_3218024968775209731 && (otherRec.sym__0__4595984355710025903 < sym__0__4595984355710025903 && (otherRec.sym__0___45_591668478459646448 < sym__0___45_591668478459646448 && (otherRec.sym__0___45_1807435744938342688 < sym__0___45_1807435744938342688 && (otherRec.sym__0___45_6813561383274320878 < sym__0___45_6813561383274320878 && (otherRec.sym__0__8204168833568236084 < sym__0__8204168833568236084 && (otherRec.sym__0__6331674360378029114 < sym__0__6331674360378029114 && (otherRec.sym__0___45_5676998185488268146 < sym__0___45_5676998185488268146 && (otherRec.sym__0__6569292155259249065 < sym__0__6569292155259249065 && (otherRec.sym__0___45_8803043059407230605 < sym__0___45_8803043059407230605 && otherRec.sym__0__4146004324203846043 < sym__0__4146004324203846043))))))))))))))))))))))))))))))))))))))))))))))));
  }
  bool operator ==(const Record6& otherRec) const{
    return (otherRec.sym__0__5163836519019812846 == sym__0__5163836519019812846 && (otherRec.sym__0__4691003334066563198 == sym__0__4691003334066563198 && (otherRec.sym__0___45_5551906115245323664 == sym__0___45_5551906115245323664 && (otherRec.sym__0___45_5600985921898170805 == sym__0___45_5600985921898170805 && (otherRec.sym__0__5190436275755771085 == sym__0__5190436275755771085 && (otherRec.sym__0___45_7845023056148553349 == sym__0___45_7845023056148553349 && (otherRec.sym__0__4350246310517402262 == sym__0__4350246310517402262 && (otherRec.sym__0___45_3651598037686104911 == sym__0___45_3651598037686104911 && (otherRec.sym__0__3324866205947089014 == sym__0__3324866205947089014 && (otherRec.sym__0___45_5106594024306176690 == sym__0___45_5106594024306176690 && (otherRec.sym__0___45_2328020107090086808 == sym__0___45_2328020107090086808 && (otherRec.sym__0___45_7664420784569873109 == sym__0___45_7664420784569873109 && (otherRec.sym__0___45_6481679278388374134 == sym__0___45_6481679278388374134 && (otherRec.sym__0___45_2993897051316018478 == sym__0___45_2993897051316018478 && (otherRec.sym__0___45_2860388295315395233 == sym__0___45_2860388295315395233 && (otherRec.sym__0__5791715696489447415 == sym__0__5791715696489447415 && (otherRec.sym__0__527970848583178293 == sym__0__527970848583178293 && (otherRec.sym__0___45_338744000625752874 == sym__0___45_338744000625752874 && (otherRec.sym__0__4457550615691903038 == sym__0__4457550615691903038 && (otherRec.sym__0___45_7779893313968848924 == sym__0___45_7779893313968848924 && (otherRec.sym__0__7034531493904066722 == sym__0__7034531493904066722 && (otherRec.sym__0___45_8145490596050003832 == sym__0___45_8145490596050003832 && (otherRec.sym__0___45_1234268100973412423 == sym__0___45_1234268100973412423 && (otherRec.sym__0__3322015854183825854 == sym__0__3322015854183825854 && (otherRec.sym__0___45_8904238202937071990 == sym__0___45_8904238202937071990 && (otherRec.sym__0__1079194730339214597 == sym__0__1079194730339214597 && (otherRec.sym__0___45_1132171939664831330 == sym__0___45_1132171939664831330 && (otherRec.sym__0__8743572897236263948 == sym__0__8743572897236263948 && (otherRec.sym__0___45_4967417594431087118 == sym__0___45_4967417594431087118 && (otherRec.sym__0__7039739059145821808 == sym__0__7039739059145821808 && (otherRec.sym__0___45_5539313807166473391 == sym__0___45_5539313807166473391 && (otherRec.sym__0__583748512005612830 == sym__0__583748512005612830 && (otherRec.sym__0___45_7693013323208628206 == sym__0___45_7693013323208628206 && (otherRec.sym__0___45_5748998446790810584 == sym__0___45_5748998446790810584 && (otherRec.sym__0__3069459070183433616 == sym__0__3069459070183433616 && (otherRec.sym__0___45_829318717909085626 == sym__0___45_829318717909085626 && (otherRec.sym__0___45_2230370735359665795 == sym__0___45_2230370735359665795 && (otherRec.sym__0__8685332338033785108 == sym__0__8685332338033785108 && (otherRec.sym__0___45_3218024968775209731 == sym__0___45_3218024968775209731 && (otherRec.sym__0__4595984355710025903 == sym__0__4595984355710025903 && (otherRec.sym__0___45_591668478459646448 == sym__0___45_591668478459646448 && (otherRec.sym__0___45_1807435744938342688 == sym__0___45_1807435744938342688 && (otherRec.sym__0___45_6813561383274320878 == sym__0___45_6813561383274320878 && (otherRec.sym__0__8204168833568236084 == sym__0__8204168833568236084 && (otherRec.sym__0__6331674360378029114 == sym__0__6331674360378029114 && (otherRec.sym__0___45_5676998185488268146 == sym__0___45_5676998185488268146 && (otherRec.sym__0__6569292155259249065 == sym__0__6569292155259249065 && (otherRec.sym__0___45_8803043059407230605 == sym__0___45_8803043059407230605 && otherRec.sym__0__4146004324203846043 == sym__0__4146004324203846043))))))))))))))))))))))))))))))))))))))))))))))));
  }
  bool operator !=(const Record6& otherRec) const{
    return (otherRec.sym__0__5163836519019812846 != sym__0__5163836519019812846 || (otherRec.sym__0__4691003334066563198 != sym__0__4691003334066563198 || (otherRec.sym__0___45_5551906115245323664 != sym__0___45_5551906115245323664 || (otherRec.sym__0___45_5600985921898170805 != sym__0___45_5600985921898170805 || (otherRec.sym__0__5190436275755771085 != sym__0__5190436275755771085 || (otherRec.sym__0___45_7845023056148553349 != sym__0___45_7845023056148553349 || (otherRec.sym__0__4350246310517402262 != sym__0__4350246310517402262 || (otherRec.sym__0___45_3651598037686104911 != sym__0___45_3651598037686104911 || (otherRec.sym__0__3324866205947089014 != sym__0__3324866205947089014 || (otherRec.sym__0___45_5106594024306176690 != sym__0___45_5106594024306176690 || (otherRec.sym__0___45_2328020107090086808 != sym__0___45_2328020107090086808 || (otherRec.sym__0___45_7664420784569873109 != sym__0___45_7664420784569873109 || (otherRec.sym__0___45_6481679278388374134 != sym__0___45_6481679278388374134 || (otherRec.sym__0___45_2993897051316018478 != sym__0___45_2993897051316018478 || (otherRec.sym__0___45_2860388295315395233 != sym__0___45_2860388295315395233 || (otherRec.sym__0__5791715696489447415 != sym__0__5791715696489447415 || (otherRec.sym__0__527970848583178293 != sym__0__527970848583178293 || (otherRec.sym__0___45_338744000625752874 != sym__0___45_338744000625752874 || (otherRec.sym__0__4457550615691903038 != sym__0__4457550615691903038 || (otherRec.sym__0___45_7779893313968848924 != sym__0___45_7779893313968848924 || (otherRec.sym__0__7034531493904066722 != sym__0__7034531493904066722 || (otherRec.sym__0___45_8145490596050003832 != sym__0___45_8145490596050003832 || (otherRec.sym__0___45_1234268100973412423 != sym__0___45_1234268100973412423 || (otherRec.sym__0__3322015854183825854 != sym__0__3322015854183825854 || (otherRec.sym__0___45_8904238202937071990 != sym__0___45_8904238202937071990 || (otherRec.sym__0__1079194730339214597 != sym__0__1079194730339214597 || (otherRec.sym__0___45_1132171939664831330 != sym__0___45_1132171939664831330 || (otherRec.sym__0__8743572897236263948 != sym__0__8743572897236263948 || (otherRec.sym__0___45_4967417594431087118 != sym__0___45_4967417594431087118 || (otherRec.sym__0__7039739059145821808 != sym__0__7039739059145821808 || (otherRec.sym__0___45_5539313807166473391 != sym__0___45_5539313807166473391 || (otherRec.sym__0__583748512005612830 != sym__0__583748512005612830 || (otherRec.sym__0___45_7693013323208628206 != sym__0___45_7693013323208628206 || (otherRec.sym__0___45_5748998446790810584 != sym__0___45_5748998446790810584 || (otherRec.sym__0__3069459070183433616 != sym__0__3069459070183433616 || (otherRec.sym__0___45_829318717909085626 != sym__0___45_829318717909085626 || (otherRec.sym__0___45_2230370735359665795 != sym__0___45_2230370735359665795 || (otherRec.sym__0__8685332338033785108 != sym__0__8685332338033785108 || (otherRec.sym__0___45_3218024968775209731 != sym__0___45_3218024968775209731 || (otherRec.sym__0__4595984355710025903 != sym__0__4595984355710025903 || (otherRec.sym__0___45_591668478459646448 != sym__0___45_591668478459646448 || (otherRec.sym__0___45_1807435744938342688 != sym__0___45_1807435744938342688 || (otherRec.sym__0___45_6813561383274320878 != sym__0___45_6813561383274320878 || (otherRec.sym__0__8204168833568236084 != sym__0__8204168833568236084 || (otherRec.sym__0__6331674360378029114 != sym__0__6331674360378029114 || (otherRec.sym__0___45_5676998185488268146 != sym__0___45_5676998185488268146 || (otherRec.sym__0__6569292155259249065 != sym__0__6569292155259249065 || (otherRec.sym__0___45_8803043059407230605 != sym__0___45_8803043059407230605 || otherRec.sym__0__4146004324203846043 != sym__0__4146004324203846043))))))))))))))))))))))))))))))))))))))))))))))));
  }
  unsigned sym__0__5163836519019812846;
  fluidb_string<18> sym__0__4691003334066563198;
  fluidb_string<9> sym__0___45_5551906115245323664;
  fluidb_string<9> sym__0___45_5600985921898170805;
  unsigned sym__0__5190436275755771085;
  unsigned sym__0___45_7845023056148553349;
  fluidb_string<7> sym__0__4350246310517402262;
  unsigned sym__0___45_3651598037686104911;
  unsigned sym__0__3324866205947089014;
  unsigned sym__0___45_5106594024306176690;
  unsigned sym__0___45_2328020107090086808;
  unsigned sym__0___45_7664420784569873109;
  fluidb_string<15> sym__0___45_6481679278388374134;
  fluidb_string<2> sym__0___45_2993897051316018478;
  fluidb_string<2> sym__0___45_2860388295315395233;
  fluidb_string<2> sym__0__5791715696489447415;
  fluidb_string<2> sym__0__527970848583178293;
  unsigned sym__0___45_338744000625752874;
  fluidb_string<18> sym__0__4457550615691903038;
  fluidb_string<40> sym__0___45_7779893313968848924;
  fluidb_string<11> sym__0__7034531493904066722;
  fluidb_string<15> sym__0___45_8145490596050003832;
  fluidb_string<13> sym__0___45_1234268100973412423;
  fluidb_string<15> sym__0__3322015854183825854;
  fluidb_string<21> sym__0___45_8904238202937071990;
  unsigned sym__0__1079194730339214597;
  fluidb_string<25> sym__0___45_1132171939664831330;
  fluidb_string<40> sym__0__8743572897236263948;
  fluidb_string<16> sym__0___45_4967417594431087118;
  fluidb_string<16> sym__0__7039739059145821808;
  fluidb_string<13> sym__0___45_5539313807166473391;
  fluidb_string<15> sym__0__583748512005612830;
  unsigned sym__0___45_7693013323208628206;
  int sym__0___45_5748998446790810584;
  unsigned sym__0__3069459070183433616;
  unsigned sym__0___45_829318717909085626;
  unsigned sym__0___45_2230370735359665795;
  unsigned sym__0__8685332338033785108;
  fluidb_string<21> sym__0___45_3218024968775209731;
  unsigned sym__0__4595984355710025903;
  fluidb_string<10> sym__0___45_591668478459646448;
  unsigned sym__0___45_1807435744938342688;
  double sym__0___45_6813561383274320878;
  unsigned sym__0__8204168833568236084;
  double sym__0__6331674360378029114;
  unsigned sym__0___45_5676998185488268146;
  unsigned sym__0__6569292155259249065;
  double sym__0___45_8803043059407230605;
  fluidb_string<13> sym__0__4146004324203846043;
 private:
};


class Record11 {
 public:
  Record11(fluidb_string<11> __sortElem0, fluidb_string<16> __sortElem1, unsigned __sortElem2) : sortElem0(__sortElem0), sortElem1(__sortElem1), sortElem2(__sortElem2)
  {
  }
  Record11() 
  {
  }
  std::string show() const{
    std::stringstream o;
    o << arrToString(sortElem0) << " | " << arrToString(sortElem1) << " | " << sortElem2;
    return o.str();
  }
  bool operator <(const Record11& otherRec) const{
    return (otherRec.sortElem0 < sortElem0 && (otherRec.sortElem1 < sortElem1 && otherRec.sortElem2 < sortElem2));
  }
  bool operator ==(const Record11& otherRec) const{
    return (otherRec.sortElem0 == sortElem0 && (otherRec.sortElem1 == sortElem1 && otherRec.sortElem2 == sortElem2));
  }
  bool operator !=(const Record11& otherRec) const{
    return (otherRec.sortElem0 != sortElem0 || (otherRec.sortElem1 != sortElem1 || otherRec.sortElem2 != sortElem2));
  }
  fluidb_string<11> sortElem0;
  fluidb_string<16> sortElem1;
  unsigned sortElem2;
 private:
};


class CallableClass2 {
 public:
  bool operator()(const Record1& record0) {
    return (((like(record0.sym__0__1411885469038113506, "UNITED STATES") && (record0.sym__0__5557137180551786739 >= 1992)) && (record0.sym__0__5557137180551786739 <= 1997)) && like(record0.sym__0__6843344685518481994, "UNITED STATES"));
  }
  typedef bool Codomain;
  typedef Record1 Domain0;
 private:
};


class CallableClass12 {
 public:
  Record11 operator()(const Record6& record3) {
    return Record11(record3.sym__0__7034531493904066722, record3.sym__0___45_4967417594431087118, record3.sym__0__5190436275755771085);
  }
  typedef Record11 Codomain;
  typedef Record6 Domain0;
 private:
};


class CallableClass10 {
 public:
  Record4 operator()(const Record6& record3) {
    return Record4(vAggrFirst5(record3.sym__0__7034531493904066722), vAggrFirst7(record3.sym__0___45_4967417594431087118), vAggrFirst8(record3.sym__0__5190436275755771085), vAggrSum9(record3.sym__0___45_5676998185488268146));
  }
  typedef Record4 Codomain;
  typedef Record6 Domain0;
 private:
  AggrFirst<fluidb_string<11>> vAggrFirst5;
  AggrFirst<fluidb_string<16>> vAggrFirst7;
  AggrFirst<unsigned> vAggrFirst8;
  AggrSum<unsigned> vAggrSum9;
};


class CallableClass15 {
 public:
  Record14 operator()(const Record4& record13) {
    return Record14(record13.sym__0___45_9000295950570013541, (-(record13.sym__0___45_4437040401381761565)));
  }
  typedef Record14 Codomain;
  typedef Record4 Domain0;
 private:
};






int main() {
  // ForwardTrigger: (Just 
  //   (Right 
  //     [
  //      QSel 
  //         (P2 
  //           PAnd 
  //           (P2 
  //             PAnd 
  //             (P2 
  //               PAnd 
  //               (P0 
  //                 (R2 RLike 
  //                     (R0 (E0 (ESym "c_nation"))) 
  //                     (R0 (E0 (EString "UNITED STATES"))))) 
  //               (P0 
  //                 (R2 RGe (R0 (E0 (ESym "d_year"))) (R0 (E0 (EInt 1992)))))) 
  //             (P0 
  //               (R2 RLe (R0 (E0 (ESym "d_year"))) (R0 (E0 (EInt 1997)))))) 
  //           (P0 
  //             (R2 RLike 
  //                 (R0 (E0 (ESym "s_nation"))) 
  //                 (R0 (E0 (EString "UNITED STATES"))))))
  std::cout << "ForwardTrigger: (Just \n  (Right \n    [\n     QSel \n        (P2 \n          PAnd \n          (P2 \n            PAnd \n            (P2 \n              PAnd \n              (P0 \n                (R2 RLike \n                    (R0 (E0 (ESym \"c_nation\"))) \n                    (R0 (E0 (EString \"UNITED STATES\"))))) \n              (P0 \n                (R2 RGe (R0 (E0 (ESym \"d_year\"))) (R0 (E0 (EInt 1992)))))) \n            (P0 \n              (R2 RLe (R0 (E0 (ESym \"d_year\"))) (R0 (E0 (EInt 1997)))))) \n          (P0 \n            (R2 RLike \n                (R0 (E0 (ESym \"s_nation\"))) \n                (R0 (E0 (EString \"UNITED STATES\"))))))\n    ]))" << std::endl;
  {
    auto operation = mkSelect<CallableClass2>(Just<const std::string>("/tmp/fluidb_store/data205.dat"), Just<const std::string>("/tmp/fluidb_store/data206.dat"), "/tmp/fluidb_store/data159.dat");
    operation.run();
    operation.print_output(10);
  }
  // ForwardTrigger: (Just 
  //   (Right 
  //     [
  //      QGroup 
  //         [(ESym "c_city",E0 (NAggr AggrFirst (E0 (ESym "c_city")))),
  //          (ESym "s_city",E0 (NAggr AggrFirst (E0 (ESym "s_city")))),
  //          (ESym "d_year",E0 (NAggr AggrFirst (E0 (ESym "d_year")))),
  //          (ESym "revenue",E0 (NAggr AggrSum (E0 (ESym "lo_revenue"))))] 
  //         [E0 (ESym "c_city"),E0 (ESym "s_city"),E0 (ESym "d_year")]
  std::cout << "ForwardTrigger: (Just \n  (Right \n    [\n     QGroup \n        [(ESym \"c_city\",E0 (NAggr AggrFirst (E0 (ESym \"c_city\")))),\n         (ESym \"s_city\",E0 (NAggr AggrFirst (E0 (ESym \"s_city\")))),\n         (ESym \"d_year\",E0 (NAggr AggrFirst (E0 (ESym \"d_year\")))),\n         (ESym \"revenue\",E0 (NAggr AggrSum (E0 (ESym \"lo_revenue\"))))] \n        [E0 (ESym \"c_city\"),E0 (ESym \"s_city\"),E0 (ESym \"d_year\")]\n    ]))" << std::endl;
  {
    auto operation = mkAggregation<CallableClass10, CallableClass12>(Just<const std::string>("/tmp/fluidb_store/data218.dat"), Just<const std::string>("/tmp/fluidb_store/data205.dat"), "/tmp/fluidb_store/data205.dat");
    operation.run();
    operation.print_output(10);
  }
  // ForwardTrigger: (Just 
  std::cout << "ForwardTrigger: (Just \n  (Right [QSort [E0 (ESym \"d_year\"),E1 ENeg (E0 (ESym \"revenue\"))]]))" << std::endl;
  {
    auto operation = mkSort<CallableClass15>(Just<const std::string>("/tmp/fluidb_store/data219.dat"), Just<const std::string>("/tmp/fluidb_store/data218.dat"), "/tmp/fluidb_store/data218.dat");
    operation.run();
    operation.print_output(10);
  }
  return 0;
}
