#include <array>

#include <string>

#include <codegen.hh>
class Record45 {
 public:
  Record45(unsigned __sortElem0, unsigned __sortElem1) : sortElem0(__sortElem0), sortElem1(__sortElem1)
  {
  }
  Record45() 
  {
  }
  std::string show() const{
    std::stringstream o;
    o << sortElem0 << " | " << sortElem1;
    return o.str();
  }
  bool operator <(const Record45& otherRec) const{
    return (otherRec.sortElem0 < sortElem0 && otherRec.sortElem1 < sortElem1);
  }
  bool operator ==(const Record45& otherRec) const{
    return (otherRec.sortElem0 == sortElem0 && otherRec.sortElem1 == sortElem1);
  }
  bool operator !=(const Record45& otherRec) const{
    return (otherRec.sortElem0 != sortElem0 || otherRec.sortElem1 != sortElem1);
  }
  unsigned sortElem0;
  unsigned sortElem1;
 private:
};


class Record24 {
 public:
  Record24(unsigned __sym__0__5047421274045357113, fluidb_string<18> __sym__0__1111371532348373905, fluidb_string<40> __sym__0__3616315983793812415, fluidb_string<11> __sym__0__5478499544478842365, fluidb_string<15> __sym__0__9198814011305918491, fluidb_string<13> __sym__0__5184064682442841190, fluidb_string<15> __sym__0__8776819689660585745, fluidb_string<21> __sym__0__3880509548823276917, unsigned __sym__0___45_7245943137499681887, fluidb_string<18> __sym__0___45_2295638738224715823, fluidb_string<9> __sym__0__7231637917665667987, fluidb_string<9> __sym__0___45_8975225596959663088, unsigned __sym__0__3613870501759166498, unsigned __sym__0__1570651575008030560, fluidb_string<7> __sym__0__115945876907898361, unsigned __sym__0__7964449538584066510, unsigned __sym__0__1660564563630425049, unsigned __sym__0___45_8849919160064307967, unsigned __sym__0__4389067787166632955, unsigned __sym__0__8182303437242608, fluidb_string<15> __sym__0__6576599429404095093, fluidb_string<2> __sym__0__7143354719373501837, fluidb_string<2> __sym__0___45_2048743282533748660, fluidb_string<2> __sym__0___45_5050379460643539596, fluidb_string<2> __sym__0___45_5591405934841628166, unsigned __sym__0__7237342047573386957, int __sym__0___45_786415910032980037, unsigned __sym__0__8257693010788225203, unsigned __sym__0__1524874236739768329, unsigned __sym__0__2230266097477937458, unsigned __sym__0___45_7086886507829122289, fluidb_string<21> __sym__0___45_6002386514329473358, unsigned __sym__0___45_678242321222098884, fluidb_string<10> __sym__0___45_8995561222449159373, unsigned __sym__0___45_4113611234327906717, double __sym__0__1861270880433093325, unsigned __sym__0___45_5367025412787902929, double __sym__0___45_5000658247033003707, unsigned __sym__0___45_8196327343032528319, unsigned __sym__0__2373859223190952182, double __sym__0__3931679180353468680, fluidb_string<13> __sym__0___45_1587807567217389696) : sym__0__5047421274045357113(__sym__0__5047421274045357113), sym__0__1111371532348373905(__sym__0__1111371532348373905), sym__0__3616315983793812415(__sym__0__3616315983793812415), sym__0__5478499544478842365(__sym__0__5478499544478842365), sym__0__9198814011305918491(__sym__0__9198814011305918491), sym__0__5184064682442841190(__sym__0__5184064682442841190), sym__0__8776819689660585745(__sym__0__8776819689660585745), sym__0__3880509548823276917(__sym__0__3880509548823276917), sym__0___45_7245943137499681887(__sym__0___45_7245943137499681887), sym__0___45_2295638738224715823(__sym__0___45_2295638738224715823), sym__0__7231637917665667987(__sym__0__7231637917665667987), sym__0___45_8975225596959663088(__sym__0___45_8975225596959663088), sym__0__3613870501759166498(__sym__0__3613870501759166498), sym__0__1570651575008030560(__sym__0__1570651575008030560), sym__0__115945876907898361(__sym__0__115945876907898361), sym__0__7964449538584066510(__sym__0__7964449538584066510), sym__0__1660564563630425049(__sym__0__1660564563630425049), sym__0___45_8849919160064307967(__sym__0___45_8849919160064307967), sym__0__4389067787166632955(__sym__0__4389067787166632955), sym__0__8182303437242608(__sym__0__8182303437242608), sym__0__6576599429404095093(__sym__0__6576599429404095093), sym__0__7143354719373501837(__sym__0__7143354719373501837), sym__0___45_2048743282533748660(__sym__0___45_2048743282533748660), sym__0___45_5050379460643539596(__sym__0___45_5050379460643539596), sym__0___45_5591405934841628166(__sym__0___45_5591405934841628166), sym__0__7237342047573386957(__sym__0__7237342047573386957), sym__0___45_786415910032980037(__sym__0___45_786415910032980037), sym__0__8257693010788225203(__sym__0__8257693010788225203), sym__0__1524874236739768329(__sym__0__1524874236739768329), sym__0__2230266097477937458(__sym__0__2230266097477937458), sym__0___45_7086886507829122289(__sym__0___45_7086886507829122289), sym__0___45_6002386514329473358(__sym__0___45_6002386514329473358), sym__0___45_678242321222098884(__sym__0___45_678242321222098884), sym__0___45_8995561222449159373(__sym__0___45_8995561222449159373), sym__0___45_4113611234327906717(__sym__0___45_4113611234327906717), sym__0__1861270880433093325(__sym__0__1861270880433093325), sym__0___45_5367025412787902929(__sym__0___45_5367025412787902929), sym__0___45_5000658247033003707(__sym__0___45_5000658247033003707), sym__0___45_8196327343032528319(__sym__0___45_8196327343032528319), sym__0__2373859223190952182(__sym__0__2373859223190952182), sym__0__3931679180353468680(__sym__0__3931679180353468680), sym__0___45_1587807567217389696(__sym__0___45_1587807567217389696)
  {
  }
  Record24() 
  {
  }
  std::string show() const{
    std::stringstream o;
    o << sym__0__5047421274045357113 << " | " << arrToString(sym__0__1111371532348373905) << " | " << arrToString(sym__0__3616315983793812415) << " | " << arrToString(sym__0__5478499544478842365) << " | " << arrToString(sym__0__9198814011305918491) << " | " << arrToString(sym__0__5184064682442841190) << " | " << arrToString(sym__0__8776819689660585745) << " | " << arrToString(sym__0__3880509548823276917) << " | " << sym__0___45_7245943137499681887 << " | " << arrToString(sym__0___45_2295638738224715823) << " | " << arrToString(sym__0__7231637917665667987) << " | " << arrToString(sym__0___45_8975225596959663088) << " | " << sym__0__3613870501759166498 << " | " << sym__0__1570651575008030560 << " | " << arrToString(sym__0__115945876907898361) << " | " << sym__0__7964449538584066510 << " | " << sym__0__1660564563630425049 << " | " << sym__0___45_8849919160064307967 << " | " << sym__0__4389067787166632955 << " | " << sym__0__8182303437242608 << " | " << arrToString(sym__0__6576599429404095093) << " | " << arrToString(sym__0__7143354719373501837) << " | " << arrToString(sym__0___45_2048743282533748660) << " | " << arrToString(sym__0___45_5050379460643539596) << " | " << arrToString(sym__0___45_5591405934841628166) << " | " << sym__0__7237342047573386957 << " | " << sym__0___45_786415910032980037 << " | " << sym__0__8257693010788225203 << " | " << sym__0__1524874236739768329 << " | " << sym__0__2230266097477937458 << " | " << sym__0___45_7086886507829122289 << " | " << arrToString(sym__0___45_6002386514329473358) << " | " << sym__0___45_678242321222098884 << " | " << arrToString(sym__0___45_8995561222449159373) << " | " << sym__0___45_4113611234327906717 << " | " << sym__0__1861270880433093325 << " | " << sym__0___45_5367025412787902929 << " | " << sym__0___45_5000658247033003707 << " | " << sym__0___45_8196327343032528319 << " | " << sym__0__2373859223190952182 << " | " << sym__0__3931679180353468680 << " | " << arrToString(sym__0___45_1587807567217389696);
    return o.str();
  }
  bool operator <(const Record24& otherRec) const{
    return (otherRec.sym__0__5047421274045357113 < sym__0__5047421274045357113 && (otherRec.sym__0__1111371532348373905 < sym__0__1111371532348373905 && (otherRec.sym__0__3616315983793812415 < sym__0__3616315983793812415 && (otherRec.sym__0__5478499544478842365 < sym__0__5478499544478842365 && (otherRec.sym__0__9198814011305918491 < sym__0__9198814011305918491 && (otherRec.sym__0__5184064682442841190 < sym__0__5184064682442841190 && (otherRec.sym__0__8776819689660585745 < sym__0__8776819689660585745 && (otherRec.sym__0__3880509548823276917 < sym__0__3880509548823276917 && (otherRec.sym__0___45_7245943137499681887 < sym__0___45_7245943137499681887 && (otherRec.sym__0___45_2295638738224715823 < sym__0___45_2295638738224715823 && (otherRec.sym__0__7231637917665667987 < sym__0__7231637917665667987 && (otherRec.sym__0___45_8975225596959663088 < sym__0___45_8975225596959663088 && (otherRec.sym__0__3613870501759166498 < sym__0__3613870501759166498 && (otherRec.sym__0__1570651575008030560 < sym__0__1570651575008030560 && (otherRec.sym__0__115945876907898361 < sym__0__115945876907898361 && (otherRec.sym__0__7964449538584066510 < sym__0__7964449538584066510 && (otherRec.sym__0__1660564563630425049 < sym__0__1660564563630425049 && (otherRec.sym__0___45_8849919160064307967 < sym__0___45_8849919160064307967 && (otherRec.sym__0__4389067787166632955 < sym__0__4389067787166632955 && (otherRec.sym__0__8182303437242608 < sym__0__8182303437242608 && (otherRec.sym__0__6576599429404095093 < sym__0__6576599429404095093 && (otherRec.sym__0__7143354719373501837 < sym__0__7143354719373501837 && (otherRec.sym__0___45_2048743282533748660 < sym__0___45_2048743282533748660 && (otherRec.sym__0___45_5050379460643539596 < sym__0___45_5050379460643539596 && (otherRec.sym__0___45_5591405934841628166 < sym__0___45_5591405934841628166 && (otherRec.sym__0__7237342047573386957 < sym__0__7237342047573386957 && (otherRec.sym__0___45_786415910032980037 < sym__0___45_786415910032980037 && (otherRec.sym__0__8257693010788225203 < sym__0__8257693010788225203 && (otherRec.sym__0__1524874236739768329 < sym__0__1524874236739768329 && (otherRec.sym__0__2230266097477937458 < sym__0__2230266097477937458 && (otherRec.sym__0___45_7086886507829122289 < sym__0___45_7086886507829122289 && (otherRec.sym__0___45_6002386514329473358 < sym__0___45_6002386514329473358 && (otherRec.sym__0___45_678242321222098884 < sym__0___45_678242321222098884 && (otherRec.sym__0___45_8995561222449159373 < sym__0___45_8995561222449159373 && (otherRec.sym__0___45_4113611234327906717 < sym__0___45_4113611234327906717 && (otherRec.sym__0__1861270880433093325 < sym__0__1861270880433093325 && (otherRec.sym__0___45_5367025412787902929 < sym__0___45_5367025412787902929 && (otherRec.sym__0___45_5000658247033003707 < sym__0___45_5000658247033003707 && (otherRec.sym__0___45_8196327343032528319 < sym__0___45_8196327343032528319 && (otherRec.sym__0__2373859223190952182 < sym__0__2373859223190952182 && (otherRec.sym__0__3931679180353468680 < sym__0__3931679180353468680 && otherRec.sym__0___45_1587807567217389696 < sym__0___45_1587807567217389696)))))))))))))))))))))))))))))))))))))))));
  }
  bool operator ==(const Record24& otherRec) const{
    return (otherRec.sym__0__5047421274045357113 == sym__0__5047421274045357113 && (otherRec.sym__0__1111371532348373905 == sym__0__1111371532348373905 && (otherRec.sym__0__3616315983793812415 == sym__0__3616315983793812415 && (otherRec.sym__0__5478499544478842365 == sym__0__5478499544478842365 && (otherRec.sym__0__9198814011305918491 == sym__0__9198814011305918491 && (otherRec.sym__0__5184064682442841190 == sym__0__5184064682442841190 && (otherRec.sym__0__8776819689660585745 == sym__0__8776819689660585745 && (otherRec.sym__0__3880509548823276917 == sym__0__3880509548823276917 && (otherRec.sym__0___45_7245943137499681887 == sym__0___45_7245943137499681887 && (otherRec.sym__0___45_2295638738224715823 == sym__0___45_2295638738224715823 && (otherRec.sym__0__7231637917665667987 == sym__0__7231637917665667987 && (otherRec.sym__0___45_8975225596959663088 == sym__0___45_8975225596959663088 && (otherRec.sym__0__3613870501759166498 == sym__0__3613870501759166498 && (otherRec.sym__0__1570651575008030560 == sym__0__1570651575008030560 && (otherRec.sym__0__115945876907898361 == sym__0__115945876907898361 && (otherRec.sym__0__7964449538584066510 == sym__0__7964449538584066510 && (otherRec.sym__0__1660564563630425049 == sym__0__1660564563630425049 && (otherRec.sym__0___45_8849919160064307967 == sym__0___45_8849919160064307967 && (otherRec.sym__0__4389067787166632955 == sym__0__4389067787166632955 && (otherRec.sym__0__8182303437242608 == sym__0__8182303437242608 && (otherRec.sym__0__6576599429404095093 == sym__0__6576599429404095093 && (otherRec.sym__0__7143354719373501837 == sym__0__7143354719373501837 && (otherRec.sym__0___45_2048743282533748660 == sym__0___45_2048743282533748660 && (otherRec.sym__0___45_5050379460643539596 == sym__0___45_5050379460643539596 && (otherRec.sym__0___45_5591405934841628166 == sym__0___45_5591405934841628166 && (otherRec.sym__0__7237342047573386957 == sym__0__7237342047573386957 && (otherRec.sym__0___45_786415910032980037 == sym__0___45_786415910032980037 && (otherRec.sym__0__8257693010788225203 == sym__0__8257693010788225203 && (otherRec.sym__0__1524874236739768329 == sym__0__1524874236739768329 && (otherRec.sym__0__2230266097477937458 == sym__0__2230266097477937458 && (otherRec.sym__0___45_7086886507829122289 == sym__0___45_7086886507829122289 && (otherRec.sym__0___45_6002386514329473358 == sym__0___45_6002386514329473358 && (otherRec.sym__0___45_678242321222098884 == sym__0___45_678242321222098884 && (otherRec.sym__0___45_8995561222449159373 == sym__0___45_8995561222449159373 && (otherRec.sym__0___45_4113611234327906717 == sym__0___45_4113611234327906717 && (otherRec.sym__0__1861270880433093325 == sym__0__1861270880433093325 && (otherRec.sym__0___45_5367025412787902929 == sym__0___45_5367025412787902929 && (otherRec.sym__0___45_5000658247033003707 == sym__0___45_5000658247033003707 && (otherRec.sym__0___45_8196327343032528319 == sym__0___45_8196327343032528319 && (otherRec.sym__0__2373859223190952182 == sym__0__2373859223190952182 && (otherRec.sym__0__3931679180353468680 == sym__0__3931679180353468680 && otherRec.sym__0___45_1587807567217389696 == sym__0___45_1587807567217389696)))))))))))))))))))))))))))))))))))))))));
  }
  bool operator !=(const Record24& otherRec) const{
    return (otherRec.sym__0__5047421274045357113 != sym__0__5047421274045357113 || (otherRec.sym__0__1111371532348373905 != sym__0__1111371532348373905 || (otherRec.sym__0__3616315983793812415 != sym__0__3616315983793812415 || (otherRec.sym__0__5478499544478842365 != sym__0__5478499544478842365 || (otherRec.sym__0__9198814011305918491 != sym__0__9198814011305918491 || (otherRec.sym__0__5184064682442841190 != sym__0__5184064682442841190 || (otherRec.sym__0__8776819689660585745 != sym__0__8776819689660585745 || (otherRec.sym__0__3880509548823276917 != sym__0__3880509548823276917 || (otherRec.sym__0___45_7245943137499681887 != sym__0___45_7245943137499681887 || (otherRec.sym__0___45_2295638738224715823 != sym__0___45_2295638738224715823 || (otherRec.sym__0__7231637917665667987 != sym__0__7231637917665667987 || (otherRec.sym__0___45_8975225596959663088 != sym__0___45_8975225596959663088 || (otherRec.sym__0__3613870501759166498 != sym__0__3613870501759166498 || (otherRec.sym__0__1570651575008030560 != sym__0__1570651575008030560 || (otherRec.sym__0__115945876907898361 != sym__0__115945876907898361 || (otherRec.sym__0__7964449538584066510 != sym__0__7964449538584066510 || (otherRec.sym__0__1660564563630425049 != sym__0__1660564563630425049 || (otherRec.sym__0___45_8849919160064307967 != sym__0___45_8849919160064307967 || (otherRec.sym__0__4389067787166632955 != sym__0__4389067787166632955 || (otherRec.sym__0__8182303437242608 != sym__0__8182303437242608 || (otherRec.sym__0__6576599429404095093 != sym__0__6576599429404095093 || (otherRec.sym__0__7143354719373501837 != sym__0__7143354719373501837 || (otherRec.sym__0___45_2048743282533748660 != sym__0___45_2048743282533748660 || (otherRec.sym__0___45_5050379460643539596 != sym__0___45_5050379460643539596 || (otherRec.sym__0___45_5591405934841628166 != sym__0___45_5591405934841628166 || (otherRec.sym__0__7237342047573386957 != sym__0__7237342047573386957 || (otherRec.sym__0___45_786415910032980037 != sym__0___45_786415910032980037 || (otherRec.sym__0__8257693010788225203 != sym__0__8257693010788225203 || (otherRec.sym__0__1524874236739768329 != sym__0__1524874236739768329 || (otherRec.sym__0__2230266097477937458 != sym__0__2230266097477937458 || (otherRec.sym__0___45_7086886507829122289 != sym__0___45_7086886507829122289 || (otherRec.sym__0___45_6002386514329473358 != sym__0___45_6002386514329473358 || (otherRec.sym__0___45_678242321222098884 != sym__0___45_678242321222098884 || (otherRec.sym__0___45_8995561222449159373 != sym__0___45_8995561222449159373 || (otherRec.sym__0___45_4113611234327906717 != sym__0___45_4113611234327906717 || (otherRec.sym__0__1861270880433093325 != sym__0__1861270880433093325 || (otherRec.sym__0___45_5367025412787902929 != sym__0___45_5367025412787902929 || (otherRec.sym__0___45_5000658247033003707 != sym__0___45_5000658247033003707 || (otherRec.sym__0___45_8196327343032528319 != sym__0___45_8196327343032528319 || (otherRec.sym__0__2373859223190952182 != sym__0__2373859223190952182 || (otherRec.sym__0__3931679180353468680 != sym__0__3931679180353468680 || otherRec.sym__0___45_1587807567217389696 != sym__0___45_1587807567217389696)))))))))))))))))))))))))))))))))))))))));
  }
  unsigned sym__0__5047421274045357113;
  fluidb_string<18> sym__0__1111371532348373905;
  fluidb_string<40> sym__0__3616315983793812415;
  fluidb_string<11> sym__0__5478499544478842365;
  fluidb_string<15> sym__0__9198814011305918491;
  fluidb_string<13> sym__0__5184064682442841190;
  fluidb_string<15> sym__0__8776819689660585745;
  fluidb_string<21> sym__0__3880509548823276917;
  unsigned sym__0___45_7245943137499681887;
  fluidb_string<18> sym__0___45_2295638738224715823;
  fluidb_string<9> sym__0__7231637917665667987;
  fluidb_string<9> sym__0___45_8975225596959663088;
  unsigned sym__0__3613870501759166498;
  unsigned sym__0__1570651575008030560;
  fluidb_string<7> sym__0__115945876907898361;
  unsigned sym__0__7964449538584066510;
  unsigned sym__0__1660564563630425049;
  unsigned sym__0___45_8849919160064307967;
  unsigned sym__0__4389067787166632955;
  unsigned sym__0__8182303437242608;
  fluidb_string<15> sym__0__6576599429404095093;
  fluidb_string<2> sym__0__7143354719373501837;
  fluidb_string<2> sym__0___45_2048743282533748660;
  fluidb_string<2> sym__0___45_5050379460643539596;
  fluidb_string<2> sym__0___45_5591405934841628166;
  unsigned sym__0__7237342047573386957;
  int sym__0___45_786415910032980037;
  unsigned sym__0__8257693010788225203;
  unsigned sym__0__1524874236739768329;
  unsigned sym__0__2230266097477937458;
  unsigned sym__0___45_7086886507829122289;
  fluidb_string<21> sym__0___45_6002386514329473358;
  unsigned sym__0___45_678242321222098884;
  fluidb_string<10> sym__0___45_8995561222449159373;
  unsigned sym__0___45_4113611234327906717;
  double sym__0__1861270880433093325;
  unsigned sym__0___45_5367025412787902929;
  double sym__0___45_5000658247033003707;
  unsigned sym__0___45_8196327343032528319;
  unsigned sym__0__2373859223190952182;
  double sym__0__3931679180353468680;
  fluidb_string<13> sym__0___45_1587807567217389696;
 private:
};


class Record3 {
 public:
  Record3(unsigned __sym__0___45_7574074018531922998, int __sym__0__1125464382786937920, unsigned __sym__0___45_8257174981563598792, unsigned __sym__0__957746932829998382, unsigned __sym__0__934137931677987637, unsigned __sym__0___45_7332894783442362324, fluidb_string<21> __sym__0__8974811218372806325, unsigned __sym__0___45_5217562530132451785, fluidb_string<10> __sym__0__7851147553396318904, unsigned __sym__0___45_4975505511391694456, double __sym__0___45_7249986409969561654, unsigned __sym__0__4671626969570181580, double __sym__0___45_3666121704283105054, unsigned __sym__0__5495011930072844518, unsigned __sym__0___45_4423447118092167055, double __sym__0___45_1608082021099887893, fluidb_string<13> __sym__0__1584187396639360899) : sym__0___45_7574074018531922998(__sym__0___45_7574074018531922998), sym__0__1125464382786937920(__sym__0__1125464382786937920), sym__0___45_8257174981563598792(__sym__0___45_8257174981563598792), sym__0__957746932829998382(__sym__0__957746932829998382), sym__0__934137931677987637(__sym__0__934137931677987637), sym__0___45_7332894783442362324(__sym__0___45_7332894783442362324), sym__0__8974811218372806325(__sym__0__8974811218372806325), sym__0___45_5217562530132451785(__sym__0___45_5217562530132451785), sym__0__7851147553396318904(__sym__0__7851147553396318904), sym__0___45_4975505511391694456(__sym__0___45_4975505511391694456), sym__0___45_7249986409969561654(__sym__0___45_7249986409969561654), sym__0__4671626969570181580(__sym__0__4671626969570181580), sym__0___45_3666121704283105054(__sym__0___45_3666121704283105054), sym__0__5495011930072844518(__sym__0__5495011930072844518), sym__0___45_4423447118092167055(__sym__0___45_4423447118092167055), sym__0___45_1608082021099887893(__sym__0___45_1608082021099887893), sym__0__1584187396639360899(__sym__0__1584187396639360899)
  {
  }
  Record3() 
  {
  }
  std::string show() const{
    std::stringstream o;
    o << sym__0___45_7574074018531922998 << " | " << sym__0__1125464382786937920 << " | " << sym__0___45_8257174981563598792 << " | " << sym__0__957746932829998382 << " | " << sym__0__934137931677987637 << " | " << sym__0___45_7332894783442362324 << " | " << arrToString(sym__0__8974811218372806325) << " | " << sym__0___45_5217562530132451785 << " | " << arrToString(sym__0__7851147553396318904) << " | " << sym__0___45_4975505511391694456 << " | " << sym__0___45_7249986409969561654 << " | " << sym__0__4671626969570181580 << " | " << sym__0___45_3666121704283105054 << " | " << sym__0__5495011930072844518 << " | " << sym__0___45_4423447118092167055 << " | " << sym__0___45_1608082021099887893 << " | " << arrToString(sym__0__1584187396639360899);
    return o.str();
  }
  bool operator <(const Record3& otherRec) const{
    return (otherRec.sym__0___45_7574074018531922998 < sym__0___45_7574074018531922998 && (otherRec.sym__0__1125464382786937920 < sym__0__1125464382786937920 && (otherRec.sym__0___45_8257174981563598792 < sym__0___45_8257174981563598792 && (otherRec.sym__0__957746932829998382 < sym__0__957746932829998382 && (otherRec.sym__0__934137931677987637 < sym__0__934137931677987637 && (otherRec.sym__0___45_7332894783442362324 < sym__0___45_7332894783442362324 && (otherRec.sym__0__8974811218372806325 < sym__0__8974811218372806325 && (otherRec.sym__0___45_5217562530132451785 < sym__0___45_5217562530132451785 && (otherRec.sym__0__7851147553396318904 < sym__0__7851147553396318904 && (otherRec.sym__0___45_4975505511391694456 < sym__0___45_4975505511391694456 && (otherRec.sym__0___45_7249986409969561654 < sym__0___45_7249986409969561654 && (otherRec.sym__0__4671626969570181580 < sym__0__4671626969570181580 && (otherRec.sym__0___45_3666121704283105054 < sym__0___45_3666121704283105054 && (otherRec.sym__0__5495011930072844518 < sym__0__5495011930072844518 && (otherRec.sym__0___45_4423447118092167055 < sym__0___45_4423447118092167055 && (otherRec.sym__0___45_1608082021099887893 < sym__0___45_1608082021099887893 && otherRec.sym__0__1584187396639360899 < sym__0__1584187396639360899))))))))))))))));
  }
  bool operator ==(const Record3& otherRec) const{
    return (otherRec.sym__0___45_7574074018531922998 == sym__0___45_7574074018531922998 && (otherRec.sym__0__1125464382786937920 == sym__0__1125464382786937920 && (otherRec.sym__0___45_8257174981563598792 == sym__0___45_8257174981563598792 && (otherRec.sym__0__957746932829998382 == sym__0__957746932829998382 && (otherRec.sym__0__934137931677987637 == sym__0__934137931677987637 && (otherRec.sym__0___45_7332894783442362324 == sym__0___45_7332894783442362324 && (otherRec.sym__0__8974811218372806325 == sym__0__8974811218372806325 && (otherRec.sym__0___45_5217562530132451785 == sym__0___45_5217562530132451785 && (otherRec.sym__0__7851147553396318904 == sym__0__7851147553396318904 && (otherRec.sym__0___45_4975505511391694456 == sym__0___45_4975505511391694456 && (otherRec.sym__0___45_7249986409969561654 == sym__0___45_7249986409969561654 && (otherRec.sym__0__4671626969570181580 == sym__0__4671626969570181580 && (otherRec.sym__0___45_3666121704283105054 == sym__0___45_3666121704283105054 && (otherRec.sym__0__5495011930072844518 == sym__0__5495011930072844518 && (otherRec.sym__0___45_4423447118092167055 == sym__0___45_4423447118092167055 && (otherRec.sym__0___45_1608082021099887893 == sym__0___45_1608082021099887893 && otherRec.sym__0__1584187396639360899 == sym__0__1584187396639360899))))))))))))))));
  }
  bool operator !=(const Record3& otherRec) const{
    return (otherRec.sym__0___45_7574074018531922998 != sym__0___45_7574074018531922998 || (otherRec.sym__0__1125464382786937920 != sym__0__1125464382786937920 || (otherRec.sym__0___45_8257174981563598792 != sym__0___45_8257174981563598792 || (otherRec.sym__0__957746932829998382 != sym__0__957746932829998382 || (otherRec.sym__0__934137931677987637 != sym__0__934137931677987637 || (otherRec.sym__0___45_7332894783442362324 != sym__0___45_7332894783442362324 || (otherRec.sym__0__8974811218372806325 != sym__0__8974811218372806325 || (otherRec.sym__0___45_5217562530132451785 != sym__0___45_5217562530132451785 || (otherRec.sym__0__7851147553396318904 != sym__0__7851147553396318904 || (otherRec.sym__0___45_4975505511391694456 != sym__0___45_4975505511391694456 || (otherRec.sym__0___45_7249986409969561654 != sym__0___45_7249986409969561654 || (otherRec.sym__0__4671626969570181580 != sym__0__4671626969570181580 || (otherRec.sym__0___45_3666121704283105054 != sym__0___45_3666121704283105054 || (otherRec.sym__0__5495011930072844518 != sym__0__5495011930072844518 || (otherRec.sym__0___45_4423447118092167055 != sym__0___45_4423447118092167055 || (otherRec.sym__0___45_1608082021099887893 != sym__0___45_1608082021099887893 || otherRec.sym__0__1584187396639360899 != sym__0__1584187396639360899))))))))))))))));
  }
  unsigned sym__0___45_7574074018531922998;
  int sym__0__1125464382786937920;
  unsigned sym__0___45_8257174981563598792;
  unsigned sym__0__957746932829998382;
  unsigned sym__0__934137931677987637;
  unsigned sym__0___45_7332894783442362324;
  fluidb_string<21> sym__0__8974811218372806325;
  unsigned sym__0___45_5217562530132451785;
  fluidb_string<10> sym__0__7851147553396318904;
  unsigned sym__0___45_4975505511391694456;
  double sym__0___45_7249986409969561654;
  unsigned sym__0__4671626969570181580;
  double sym__0___45_3666121704283105054;
  unsigned sym__0__5495011930072844518;
  unsigned sym__0___45_4423447118092167055;
  double sym__0___45_1608082021099887893;
  fluidb_string<13> sym__0__1584187396639360899;
 private:
};


class Record6 {
 public:
  Record6(unsigned __sortElem0) : sortElem0(__sortElem0)
  {
  }
  Record6() 
  {
  }
  std::string show() const{
    std::stringstream o;
    o << sortElem0;
    return o.str();
  }
  bool operator <(const Record6& otherRec) const{
    return otherRec.sortElem0 < sortElem0;
  }
  bool operator ==(const Record6& otherRec) const{
    return otherRec.sortElem0 == sortElem0;
  }
  bool operator !=(const Record6& otherRec) const{
    return otherRec.sortElem0 != sortElem0;
  }
  unsigned sortElem0;
 private:
};


class Record2 {
 public:
  Record2(unsigned __sym__0__2037864888707786451, fluidb_string<18> __sym__0__8533656712666151747, fluidb_string<9> __sym__0__646314041574508429, fluidb_string<9> __sym__0__6064137978327902054, unsigned __sym__0__3754157776500852496, unsigned __sym__0__6284345160241949046, fluidb_string<7> __sym__0___45_773692805971570325, unsigned __sym__0___45_8399474032083007524, unsigned __sym__0___45_2038947427357444789, unsigned __sym__0__6071994954612827827, unsigned __sym__0__7742515703067448213, unsigned __sym__0__5201219213304227654, fluidb_string<15> __sym__0___45_5896625796158057241, fluidb_string<2> __sym__0___45_1108504872221226081, fluidb_string<2> __sym__0__1055103969674359346, fluidb_string<2> __sym__0__9115626546918942554, fluidb_string<2> __sym__0___45_6850413444013389848) : sym__0__2037864888707786451(__sym__0__2037864888707786451), sym__0__8533656712666151747(__sym__0__8533656712666151747), sym__0__646314041574508429(__sym__0__646314041574508429), sym__0__6064137978327902054(__sym__0__6064137978327902054), sym__0__3754157776500852496(__sym__0__3754157776500852496), sym__0__6284345160241949046(__sym__0__6284345160241949046), sym__0___45_773692805971570325(__sym__0___45_773692805971570325), sym__0___45_8399474032083007524(__sym__0___45_8399474032083007524), sym__0___45_2038947427357444789(__sym__0___45_2038947427357444789), sym__0__6071994954612827827(__sym__0__6071994954612827827), sym__0__7742515703067448213(__sym__0__7742515703067448213), sym__0__5201219213304227654(__sym__0__5201219213304227654), sym__0___45_5896625796158057241(__sym__0___45_5896625796158057241), sym__0___45_1108504872221226081(__sym__0___45_1108504872221226081), sym__0__1055103969674359346(__sym__0__1055103969674359346), sym__0__9115626546918942554(__sym__0__9115626546918942554), sym__0___45_6850413444013389848(__sym__0___45_6850413444013389848)
  {
  }
  Record2() 
  {
  }
  std::string show() const{
    std::stringstream o;
    o << sym__0__2037864888707786451 << " | " << arrToString(sym__0__8533656712666151747) << " | " << arrToString(sym__0__646314041574508429) << " | " << arrToString(sym__0__6064137978327902054) << " | " << sym__0__3754157776500852496 << " | " << sym__0__6284345160241949046 << " | " << arrToString(sym__0___45_773692805971570325) << " | " << sym__0___45_8399474032083007524 << " | " << sym__0___45_2038947427357444789 << " | " << sym__0__6071994954612827827 << " | " << sym__0__7742515703067448213 << " | " << sym__0__5201219213304227654 << " | " << arrToString(sym__0___45_5896625796158057241) << " | " << arrToString(sym__0___45_1108504872221226081) << " | " << arrToString(sym__0__1055103969674359346) << " | " << arrToString(sym__0__9115626546918942554) << " | " << arrToString(sym__0___45_6850413444013389848);
    return o.str();
  }
  bool operator <(const Record2& otherRec) const{
    return (otherRec.sym__0__2037864888707786451 < sym__0__2037864888707786451 && (otherRec.sym__0__8533656712666151747 < sym__0__8533656712666151747 && (otherRec.sym__0__646314041574508429 < sym__0__646314041574508429 && (otherRec.sym__0__6064137978327902054 < sym__0__6064137978327902054 && (otherRec.sym__0__3754157776500852496 < sym__0__3754157776500852496 && (otherRec.sym__0__6284345160241949046 < sym__0__6284345160241949046 && (otherRec.sym__0___45_773692805971570325 < sym__0___45_773692805971570325 && (otherRec.sym__0___45_8399474032083007524 < sym__0___45_8399474032083007524 && (otherRec.sym__0___45_2038947427357444789 < sym__0___45_2038947427357444789 && (otherRec.sym__0__6071994954612827827 < sym__0__6071994954612827827 && (otherRec.sym__0__7742515703067448213 < sym__0__7742515703067448213 && (otherRec.sym__0__5201219213304227654 < sym__0__5201219213304227654 && (otherRec.sym__0___45_5896625796158057241 < sym__0___45_5896625796158057241 && (otherRec.sym__0___45_1108504872221226081 < sym__0___45_1108504872221226081 && (otherRec.sym__0__1055103969674359346 < sym__0__1055103969674359346 && (otherRec.sym__0__9115626546918942554 < sym__0__9115626546918942554 && otherRec.sym__0___45_6850413444013389848 < sym__0___45_6850413444013389848))))))))))))))));
  }
  bool operator ==(const Record2& otherRec) const{
    return (otherRec.sym__0__2037864888707786451 == sym__0__2037864888707786451 && (otherRec.sym__0__8533656712666151747 == sym__0__8533656712666151747 && (otherRec.sym__0__646314041574508429 == sym__0__646314041574508429 && (otherRec.sym__0__6064137978327902054 == sym__0__6064137978327902054 && (otherRec.sym__0__3754157776500852496 == sym__0__3754157776500852496 && (otherRec.sym__0__6284345160241949046 == sym__0__6284345160241949046 && (otherRec.sym__0___45_773692805971570325 == sym__0___45_773692805971570325 && (otherRec.sym__0___45_8399474032083007524 == sym__0___45_8399474032083007524 && (otherRec.sym__0___45_2038947427357444789 == sym__0___45_2038947427357444789 && (otherRec.sym__0__6071994954612827827 == sym__0__6071994954612827827 && (otherRec.sym__0__7742515703067448213 == sym__0__7742515703067448213 && (otherRec.sym__0__5201219213304227654 == sym__0__5201219213304227654 && (otherRec.sym__0___45_5896625796158057241 == sym__0___45_5896625796158057241 && (otherRec.sym__0___45_1108504872221226081 == sym__0___45_1108504872221226081 && (otherRec.sym__0__1055103969674359346 == sym__0__1055103969674359346 && (otherRec.sym__0__9115626546918942554 == sym__0__9115626546918942554 && otherRec.sym__0___45_6850413444013389848 == sym__0___45_6850413444013389848))))))))))))))));
  }
  bool operator !=(const Record2& otherRec) const{
    return (otherRec.sym__0__2037864888707786451 != sym__0__2037864888707786451 || (otherRec.sym__0__8533656712666151747 != sym__0__8533656712666151747 || (otherRec.sym__0__646314041574508429 != sym__0__646314041574508429 || (otherRec.sym__0__6064137978327902054 != sym__0__6064137978327902054 || (otherRec.sym__0__3754157776500852496 != sym__0__3754157776500852496 || (otherRec.sym__0__6284345160241949046 != sym__0__6284345160241949046 || (otherRec.sym__0___45_773692805971570325 != sym__0___45_773692805971570325 || (otherRec.sym__0___45_8399474032083007524 != sym__0___45_8399474032083007524 || (otherRec.sym__0___45_2038947427357444789 != sym__0___45_2038947427357444789 || (otherRec.sym__0__6071994954612827827 != sym__0__6071994954612827827 || (otherRec.sym__0__7742515703067448213 != sym__0__7742515703067448213 || (otherRec.sym__0__5201219213304227654 != sym__0__5201219213304227654 || (otherRec.sym__0___45_5896625796158057241 != sym__0___45_5896625796158057241 || (otherRec.sym__0___45_1108504872221226081 != sym__0___45_1108504872221226081 || (otherRec.sym__0__1055103969674359346 != sym__0__1055103969674359346 || (otherRec.sym__0__9115626546918942554 != sym__0__9115626546918942554 || otherRec.sym__0___45_6850413444013389848 != sym__0___45_6850413444013389848))))))))))))))));
  }
  unsigned sym__0__2037864888707786451;
  fluidb_string<18> sym__0__8533656712666151747;
  fluidb_string<9> sym__0__646314041574508429;
  fluidb_string<9> sym__0__6064137978327902054;
  unsigned sym__0__3754157776500852496;
  unsigned sym__0__6284345160241949046;
  fluidb_string<7> sym__0___45_773692805971570325;
  unsigned sym__0___45_8399474032083007524;
  unsigned sym__0___45_2038947427357444789;
  unsigned sym__0__6071994954612827827;
  unsigned sym__0__7742515703067448213;
  unsigned sym__0__5201219213304227654;
  fluidb_string<15> sym__0___45_5896625796158057241;
  fluidb_string<2> sym__0___45_1108504872221226081;
  fluidb_string<2> sym__0__1055103969674359346;
  fluidb_string<2> sym__0__9115626546918942554;
  fluidb_string<2> sym__0___45_6850413444013389848;
 private:
};


class Record35 {
 public:
  Record35(fluidb_string<11> __sym__0__71540406503057918, fluidb_string<16> __sym__0__2828347237755907406, unsigned __sym__0___45_9000295950570013541, unsigned __sym__0___45_4437040401381761565) : sym__0__71540406503057918(__sym__0__71540406503057918), sym__0__2828347237755907406(__sym__0__2828347237755907406), sym__0___45_9000295950570013541(__sym__0___45_9000295950570013541), sym__0___45_4437040401381761565(__sym__0___45_4437040401381761565)
  {
  }
  Record35() 
  {
  }
  std::string show() const{
    std::stringstream o;
    o << arrToString(sym__0__71540406503057918) << " | " << arrToString(sym__0__2828347237755907406) << " | " << sym__0___45_9000295950570013541 << " | " << sym__0___45_4437040401381761565;
    return o.str();
  }
  bool operator <(const Record35& otherRec) const{
    return (otherRec.sym__0__71540406503057918 < sym__0__71540406503057918 && (otherRec.sym__0__2828347237755907406 < sym__0__2828347237755907406 && (otherRec.sym__0___45_9000295950570013541 < sym__0___45_9000295950570013541 && otherRec.sym__0___45_4437040401381761565 < sym__0___45_4437040401381761565)));
  }
  bool operator ==(const Record35& otherRec) const{
    return (otherRec.sym__0__71540406503057918 == sym__0__71540406503057918 && (otherRec.sym__0__2828347237755907406 == sym__0__2828347237755907406 && (otherRec.sym__0___45_9000295950570013541 == sym__0___45_9000295950570013541 && otherRec.sym__0___45_4437040401381761565 == sym__0___45_4437040401381761565)));
  }
  bool operator !=(const Record35& otherRec) const{
    return (otherRec.sym__0__71540406503057918 != sym__0__71540406503057918 || (otherRec.sym__0__2828347237755907406 != sym__0__2828347237755907406 || (otherRec.sym__0___45_9000295950570013541 != sym__0___45_9000295950570013541 || otherRec.sym__0___45_4437040401381761565 != sym__0___45_4437040401381761565)));
  }
  fluidb_string<11> sym__0__71540406503057918;
  fluidb_string<16> sym__0__2828347237755907406;
  unsigned sym__0___45_9000295950570013541;
  unsigned sym__0___45_4437040401381761565;
 private:
};


class Record37 {
 public:
  Record37(unsigned __sym__0___45_338744000625752874, fluidb_string<18> __sym__0__4457550615691903038, fluidb_string<40> __sym__0___45_7779893313968848924, fluidb_string<11> __sym__0__7034531493904066722, fluidb_string<15> __sym__0___45_8145490596050003832, fluidb_string<13> __sym__0___45_1234268100973412423, fluidb_string<15> __sym__0__3322015854183825854, fluidb_string<21> __sym__0___45_8904238202937071990, unsigned __sym__0__5163836519019812846, fluidb_string<18> __sym__0__4691003334066563198, fluidb_string<9> __sym__0___45_5551906115245323664, fluidb_string<9> __sym__0___45_5600985921898170805, unsigned __sym__0__5190436275755771085, unsigned __sym__0___45_7845023056148553349, fluidb_string<7> __sym__0__4350246310517402262, unsigned __sym__0___45_3651598037686104911, unsigned __sym__0__3324866205947089014, unsigned __sym__0___45_5106594024306176690, unsigned __sym__0___45_2328020107090086808, unsigned __sym__0___45_7664420784569873109, fluidb_string<15> __sym__0___45_6481679278388374134, fluidb_string<2> __sym__0___45_2993897051316018478, fluidb_string<2> __sym__0___45_2860388295315395233, fluidb_string<2> __sym__0__5791715696489447415, fluidb_string<2> __sym__0__527970848583178293, unsigned __sym__0___45_7693013323208628206, int __sym__0___45_5748998446790810584, unsigned __sym__0__3069459070183433616, unsigned __sym__0___45_829318717909085626, unsigned __sym__0___45_2230370735359665795, unsigned __sym__0__8685332338033785108, fluidb_string<21> __sym__0___45_3218024968775209731, unsigned __sym__0__4595984355710025903, fluidb_string<10> __sym__0___45_591668478459646448, unsigned __sym__0___45_1807435744938342688, double __sym__0___45_6813561383274320878, unsigned __sym__0__8204168833568236084, double __sym__0__6331674360378029114, unsigned __sym__0___45_5676998185488268146, unsigned __sym__0__6569292155259249065, double __sym__0___45_8803043059407230605, fluidb_string<13> __sym__0__4146004324203846043, unsigned __sym__0__1079194730339214597, fluidb_string<25> __sym__0___45_1132171939664831330, fluidb_string<40> __sym__0__8743572897236263948, fluidb_string<16> __sym__0___45_4967417594431087118, fluidb_string<16> __sym__0__7039739059145821808, fluidb_string<13> __sym__0___45_5539313807166473391, fluidb_string<15> __sym__0__583748512005612830) : sym__0___45_338744000625752874(__sym__0___45_338744000625752874), sym__0__4457550615691903038(__sym__0__4457550615691903038), sym__0___45_7779893313968848924(__sym__0___45_7779893313968848924), sym__0__7034531493904066722(__sym__0__7034531493904066722), sym__0___45_8145490596050003832(__sym__0___45_8145490596050003832), sym__0___45_1234268100973412423(__sym__0___45_1234268100973412423), sym__0__3322015854183825854(__sym__0__3322015854183825854), sym__0___45_8904238202937071990(__sym__0___45_8904238202937071990), sym__0__5163836519019812846(__sym__0__5163836519019812846), sym__0__4691003334066563198(__sym__0__4691003334066563198), sym__0___45_5551906115245323664(__sym__0___45_5551906115245323664), sym__0___45_5600985921898170805(__sym__0___45_5600985921898170805), sym__0__5190436275755771085(__sym__0__5190436275755771085), sym__0___45_7845023056148553349(__sym__0___45_7845023056148553349), sym__0__4350246310517402262(__sym__0__4350246310517402262), sym__0___45_3651598037686104911(__sym__0___45_3651598037686104911), sym__0__3324866205947089014(__sym__0__3324866205947089014), sym__0___45_5106594024306176690(__sym__0___45_5106594024306176690), sym__0___45_2328020107090086808(__sym__0___45_2328020107090086808), sym__0___45_7664420784569873109(__sym__0___45_7664420784569873109), sym__0___45_6481679278388374134(__sym__0___45_6481679278388374134), sym__0___45_2993897051316018478(__sym__0___45_2993897051316018478), sym__0___45_2860388295315395233(__sym__0___45_2860388295315395233), sym__0__5791715696489447415(__sym__0__5791715696489447415), sym__0__527970848583178293(__sym__0__527970848583178293), sym__0___45_7693013323208628206(__sym__0___45_7693013323208628206), sym__0___45_5748998446790810584(__sym__0___45_5748998446790810584), sym__0__3069459070183433616(__sym__0__3069459070183433616), sym__0___45_829318717909085626(__sym__0___45_829318717909085626), sym__0___45_2230370735359665795(__sym__0___45_2230370735359665795), sym__0__8685332338033785108(__sym__0__8685332338033785108), sym__0___45_3218024968775209731(__sym__0___45_3218024968775209731), sym__0__4595984355710025903(__sym__0__4595984355710025903), sym__0___45_591668478459646448(__sym__0___45_591668478459646448), sym__0___45_1807435744938342688(__sym__0___45_1807435744938342688), sym__0___45_6813561383274320878(__sym__0___45_6813561383274320878), sym__0__8204168833568236084(__sym__0__8204168833568236084), sym__0__6331674360378029114(__sym__0__6331674360378029114), sym__0___45_5676998185488268146(__sym__0___45_5676998185488268146), sym__0__6569292155259249065(__sym__0__6569292155259249065), sym__0___45_8803043059407230605(__sym__0___45_8803043059407230605), sym__0__4146004324203846043(__sym__0__4146004324203846043), sym__0__1079194730339214597(__sym__0__1079194730339214597), sym__0___45_1132171939664831330(__sym__0___45_1132171939664831330), sym__0__8743572897236263948(__sym__0__8743572897236263948), sym__0___45_4967417594431087118(__sym__0___45_4967417594431087118), sym__0__7039739059145821808(__sym__0__7039739059145821808), sym__0___45_5539313807166473391(__sym__0___45_5539313807166473391), sym__0__583748512005612830(__sym__0__583748512005612830)
  {
  }
  Record37() 
  {
  }
  std::string show() const{
    std::stringstream o;
    o << sym__0___45_338744000625752874 << " | " << arrToString(sym__0__4457550615691903038) << " | " << arrToString(sym__0___45_7779893313968848924) << " | " << arrToString(sym__0__7034531493904066722) << " | " << arrToString(sym__0___45_8145490596050003832) << " | " << arrToString(sym__0___45_1234268100973412423) << " | " << arrToString(sym__0__3322015854183825854) << " | " << arrToString(sym__0___45_8904238202937071990) << " | " << sym__0__5163836519019812846 << " | " << arrToString(sym__0__4691003334066563198) << " | " << arrToString(sym__0___45_5551906115245323664) << " | " << arrToString(sym__0___45_5600985921898170805) << " | " << sym__0__5190436275755771085 << " | " << sym__0___45_7845023056148553349 << " | " << arrToString(sym__0__4350246310517402262) << " | " << sym__0___45_3651598037686104911 << " | " << sym__0__3324866205947089014 << " | " << sym__0___45_5106594024306176690 << " | " << sym__0___45_2328020107090086808 << " | " << sym__0___45_7664420784569873109 << " | " << arrToString(sym__0___45_6481679278388374134) << " | " << arrToString(sym__0___45_2993897051316018478) << " | " << arrToString(sym__0___45_2860388295315395233) << " | " << arrToString(sym__0__5791715696489447415) << " | " << arrToString(sym__0__527970848583178293) << " | " << sym__0___45_7693013323208628206 << " | " << sym__0___45_5748998446790810584 << " | " << sym__0__3069459070183433616 << " | " << sym__0___45_829318717909085626 << " | " << sym__0___45_2230370735359665795 << " | " << sym__0__8685332338033785108 << " | " << arrToString(sym__0___45_3218024968775209731) << " | " << sym__0__4595984355710025903 << " | " << arrToString(sym__0___45_591668478459646448) << " | " << sym__0___45_1807435744938342688 << " | " << sym__0___45_6813561383274320878 << " | " << sym__0__8204168833568236084 << " | " << sym__0__6331674360378029114 << " | " << sym__0___45_5676998185488268146 << " | " << sym__0__6569292155259249065 << " | " << sym__0___45_8803043059407230605 << " | " << arrToString(sym__0__4146004324203846043) << " | " << sym__0__1079194730339214597 << " | " << arrToString(sym__0___45_1132171939664831330) << " | " << arrToString(sym__0__8743572897236263948) << " | " << arrToString(sym__0___45_4967417594431087118) << " | " << arrToString(sym__0__7039739059145821808) << " | " << arrToString(sym__0___45_5539313807166473391) << " | " << arrToString(sym__0__583748512005612830);
    return o.str();
  }
  bool operator <(const Record37& otherRec) const{
    return (otherRec.sym__0___45_338744000625752874 < sym__0___45_338744000625752874 && (otherRec.sym__0__4457550615691903038 < sym__0__4457550615691903038 && (otherRec.sym__0___45_7779893313968848924 < sym__0___45_7779893313968848924 && (otherRec.sym__0__7034531493904066722 < sym__0__7034531493904066722 && (otherRec.sym__0___45_8145490596050003832 < sym__0___45_8145490596050003832 && (otherRec.sym__0___45_1234268100973412423 < sym__0___45_1234268100973412423 && (otherRec.sym__0__3322015854183825854 < sym__0__3322015854183825854 && (otherRec.sym__0___45_8904238202937071990 < sym__0___45_8904238202937071990 && (otherRec.sym__0__5163836519019812846 < sym__0__5163836519019812846 && (otherRec.sym__0__4691003334066563198 < sym__0__4691003334066563198 && (otherRec.sym__0___45_5551906115245323664 < sym__0___45_5551906115245323664 && (otherRec.sym__0___45_5600985921898170805 < sym__0___45_5600985921898170805 && (otherRec.sym__0__5190436275755771085 < sym__0__5190436275755771085 && (otherRec.sym__0___45_7845023056148553349 < sym__0___45_7845023056148553349 && (otherRec.sym__0__4350246310517402262 < sym__0__4350246310517402262 && (otherRec.sym__0___45_3651598037686104911 < sym__0___45_3651598037686104911 && (otherRec.sym__0__3324866205947089014 < sym__0__3324866205947089014 && (otherRec.sym__0___45_5106594024306176690 < sym__0___45_5106594024306176690 && (otherRec.sym__0___45_2328020107090086808 < sym__0___45_2328020107090086808 && (otherRec.sym__0___45_7664420784569873109 < sym__0___45_7664420784569873109 && (otherRec.sym__0___45_6481679278388374134 < sym__0___45_6481679278388374134 && (otherRec.sym__0___45_2993897051316018478 < sym__0___45_2993897051316018478 && (otherRec.sym__0___45_2860388295315395233 < sym__0___45_2860388295315395233 && (otherRec.sym__0__5791715696489447415 < sym__0__5791715696489447415 && (otherRec.sym__0__527970848583178293 < sym__0__527970848583178293 && (otherRec.sym__0___45_7693013323208628206 < sym__0___45_7693013323208628206 && (otherRec.sym__0___45_5748998446790810584 < sym__0___45_5748998446790810584 && (otherRec.sym__0__3069459070183433616 < sym__0__3069459070183433616 && (otherRec.sym__0___45_829318717909085626 < sym__0___45_829318717909085626 && (otherRec.sym__0___45_2230370735359665795 < sym__0___45_2230370735359665795 && (otherRec.sym__0__8685332338033785108 < sym__0__8685332338033785108 && (otherRec.sym__0___45_3218024968775209731 < sym__0___45_3218024968775209731 && (otherRec.sym__0__4595984355710025903 < sym__0__4595984355710025903 && (otherRec.sym__0___45_591668478459646448 < sym__0___45_591668478459646448 && (otherRec.sym__0___45_1807435744938342688 < sym__0___45_1807435744938342688 && (otherRec.sym__0___45_6813561383274320878 < sym__0___45_6813561383274320878 && (otherRec.sym__0__8204168833568236084 < sym__0__8204168833568236084 && (otherRec.sym__0__6331674360378029114 < sym__0__6331674360378029114 && (otherRec.sym__0___45_5676998185488268146 < sym__0___45_5676998185488268146 && (otherRec.sym__0__6569292155259249065 < sym__0__6569292155259249065 && (otherRec.sym__0___45_8803043059407230605 < sym__0___45_8803043059407230605 && (otherRec.sym__0__4146004324203846043 < sym__0__4146004324203846043 && (otherRec.sym__0__1079194730339214597 < sym__0__1079194730339214597 && (otherRec.sym__0___45_1132171939664831330 < sym__0___45_1132171939664831330 && (otherRec.sym__0__8743572897236263948 < sym__0__8743572897236263948 && (otherRec.sym__0___45_4967417594431087118 < sym__0___45_4967417594431087118 && (otherRec.sym__0__7039739059145821808 < sym__0__7039739059145821808 && (otherRec.sym__0___45_5539313807166473391 < sym__0___45_5539313807166473391 && otherRec.sym__0__583748512005612830 < sym__0__583748512005612830))))))))))))))))))))))))))))))))))))))))))))))));
  }
  bool operator ==(const Record37& otherRec) const{
    return (otherRec.sym__0___45_338744000625752874 == sym__0___45_338744000625752874 && (otherRec.sym__0__4457550615691903038 == sym__0__4457550615691903038 && (otherRec.sym__0___45_7779893313968848924 == sym__0___45_7779893313968848924 && (otherRec.sym__0__7034531493904066722 == sym__0__7034531493904066722 && (otherRec.sym__0___45_8145490596050003832 == sym__0___45_8145490596050003832 && (otherRec.sym__0___45_1234268100973412423 == sym__0___45_1234268100973412423 && (otherRec.sym__0__3322015854183825854 == sym__0__3322015854183825854 && (otherRec.sym__0___45_8904238202937071990 == sym__0___45_8904238202937071990 && (otherRec.sym__0__5163836519019812846 == sym__0__5163836519019812846 && (otherRec.sym__0__4691003334066563198 == sym__0__4691003334066563198 && (otherRec.sym__0___45_5551906115245323664 == sym__0___45_5551906115245323664 && (otherRec.sym__0___45_5600985921898170805 == sym__0___45_5600985921898170805 && (otherRec.sym__0__5190436275755771085 == sym__0__5190436275755771085 && (otherRec.sym__0___45_7845023056148553349 == sym__0___45_7845023056148553349 && (otherRec.sym__0__4350246310517402262 == sym__0__4350246310517402262 && (otherRec.sym__0___45_3651598037686104911 == sym__0___45_3651598037686104911 && (otherRec.sym__0__3324866205947089014 == sym__0__3324866205947089014 && (otherRec.sym__0___45_5106594024306176690 == sym__0___45_5106594024306176690 && (otherRec.sym__0___45_2328020107090086808 == sym__0___45_2328020107090086808 && (otherRec.sym__0___45_7664420784569873109 == sym__0___45_7664420784569873109 && (otherRec.sym__0___45_6481679278388374134 == sym__0___45_6481679278388374134 && (otherRec.sym__0___45_2993897051316018478 == sym__0___45_2993897051316018478 && (otherRec.sym__0___45_2860388295315395233 == sym__0___45_2860388295315395233 && (otherRec.sym__0__5791715696489447415 == sym__0__5791715696489447415 && (otherRec.sym__0__527970848583178293 == sym__0__527970848583178293 && (otherRec.sym__0___45_7693013323208628206 == sym__0___45_7693013323208628206 && (otherRec.sym__0___45_5748998446790810584 == sym__0___45_5748998446790810584 && (otherRec.sym__0__3069459070183433616 == sym__0__3069459070183433616 && (otherRec.sym__0___45_829318717909085626 == sym__0___45_829318717909085626 && (otherRec.sym__0___45_2230370735359665795 == sym__0___45_2230370735359665795 && (otherRec.sym__0__8685332338033785108 == sym__0__8685332338033785108 && (otherRec.sym__0___45_3218024968775209731 == sym__0___45_3218024968775209731 && (otherRec.sym__0__4595984355710025903 == sym__0__4595984355710025903 && (otherRec.sym__0___45_591668478459646448 == sym__0___45_591668478459646448 && (otherRec.sym__0___45_1807435744938342688 == sym__0___45_1807435744938342688 && (otherRec.sym__0___45_6813561383274320878 == sym__0___45_6813561383274320878 && (otherRec.sym__0__8204168833568236084 == sym__0__8204168833568236084 && (otherRec.sym__0__6331674360378029114 == sym__0__6331674360378029114 && (otherRec.sym__0___45_5676998185488268146 == sym__0___45_5676998185488268146 && (otherRec.sym__0__6569292155259249065 == sym__0__6569292155259249065 && (otherRec.sym__0___45_8803043059407230605 == sym__0___45_8803043059407230605 && (otherRec.sym__0__4146004324203846043 == sym__0__4146004324203846043 && (otherRec.sym__0__1079194730339214597 == sym__0__1079194730339214597 && (otherRec.sym__0___45_1132171939664831330 == sym__0___45_1132171939664831330 && (otherRec.sym__0__8743572897236263948 == sym__0__8743572897236263948 && (otherRec.sym__0___45_4967417594431087118 == sym__0___45_4967417594431087118 && (otherRec.sym__0__7039739059145821808 == sym__0__7039739059145821808 && (otherRec.sym__0___45_5539313807166473391 == sym__0___45_5539313807166473391 && otherRec.sym__0__583748512005612830 == sym__0__583748512005612830))))))))))))))))))))))))))))))))))))))))))))))));
  }
  bool operator !=(const Record37& otherRec) const{
    return (otherRec.sym__0___45_338744000625752874 != sym__0___45_338744000625752874 || (otherRec.sym__0__4457550615691903038 != sym__0__4457550615691903038 || (otherRec.sym__0___45_7779893313968848924 != sym__0___45_7779893313968848924 || (otherRec.sym__0__7034531493904066722 != sym__0__7034531493904066722 || (otherRec.sym__0___45_8145490596050003832 != sym__0___45_8145490596050003832 || (otherRec.sym__0___45_1234268100973412423 != sym__0___45_1234268100973412423 || (otherRec.sym__0__3322015854183825854 != sym__0__3322015854183825854 || (otherRec.sym__0___45_8904238202937071990 != sym__0___45_8904238202937071990 || (otherRec.sym__0__5163836519019812846 != sym__0__5163836519019812846 || (otherRec.sym__0__4691003334066563198 != sym__0__4691003334066563198 || (otherRec.sym__0___45_5551906115245323664 != sym__0___45_5551906115245323664 || (otherRec.sym__0___45_5600985921898170805 != sym__0___45_5600985921898170805 || (otherRec.sym__0__5190436275755771085 != sym__0__5190436275755771085 || (otherRec.sym__0___45_7845023056148553349 != sym__0___45_7845023056148553349 || (otherRec.sym__0__4350246310517402262 != sym__0__4350246310517402262 || (otherRec.sym__0___45_3651598037686104911 != sym__0___45_3651598037686104911 || (otherRec.sym__0__3324866205947089014 != sym__0__3324866205947089014 || (otherRec.sym__0___45_5106594024306176690 != sym__0___45_5106594024306176690 || (otherRec.sym__0___45_2328020107090086808 != sym__0___45_2328020107090086808 || (otherRec.sym__0___45_7664420784569873109 != sym__0___45_7664420784569873109 || (otherRec.sym__0___45_6481679278388374134 != sym__0___45_6481679278388374134 || (otherRec.sym__0___45_2993897051316018478 != sym__0___45_2993897051316018478 || (otherRec.sym__0___45_2860388295315395233 != sym__0___45_2860388295315395233 || (otherRec.sym__0__5791715696489447415 != sym__0__5791715696489447415 || (otherRec.sym__0__527970848583178293 != sym__0__527970848583178293 || (otherRec.sym__0___45_7693013323208628206 != sym__0___45_7693013323208628206 || (otherRec.sym__0___45_5748998446790810584 != sym__0___45_5748998446790810584 || (otherRec.sym__0__3069459070183433616 != sym__0__3069459070183433616 || (otherRec.sym__0___45_829318717909085626 != sym__0___45_829318717909085626 || (otherRec.sym__0___45_2230370735359665795 != sym__0___45_2230370735359665795 || (otherRec.sym__0__8685332338033785108 != sym__0__8685332338033785108 || (otherRec.sym__0___45_3218024968775209731 != sym__0___45_3218024968775209731 || (otherRec.sym__0__4595984355710025903 != sym__0__4595984355710025903 || (otherRec.sym__0___45_591668478459646448 != sym__0___45_591668478459646448 || (otherRec.sym__0___45_1807435744938342688 != sym__0___45_1807435744938342688 || (otherRec.sym__0___45_6813561383274320878 != sym__0___45_6813561383274320878 || (otherRec.sym__0__8204168833568236084 != sym__0__8204168833568236084 || (otherRec.sym__0__6331674360378029114 != sym__0__6331674360378029114 || (otherRec.sym__0___45_5676998185488268146 != sym__0___45_5676998185488268146 || (otherRec.sym__0__6569292155259249065 != sym__0__6569292155259249065 || (otherRec.sym__0___45_8803043059407230605 != sym__0___45_8803043059407230605 || (otherRec.sym__0__4146004324203846043 != sym__0__4146004324203846043 || (otherRec.sym__0__1079194730339214597 != sym__0__1079194730339214597 || (otherRec.sym__0___45_1132171939664831330 != sym__0___45_1132171939664831330 || (otherRec.sym__0__8743572897236263948 != sym__0__8743572897236263948 || (otherRec.sym__0___45_4967417594431087118 != sym__0___45_4967417594431087118 || (otherRec.sym__0__7039739059145821808 != sym__0__7039739059145821808 || (otherRec.sym__0___45_5539313807166473391 != sym__0___45_5539313807166473391 || otherRec.sym__0__583748512005612830 != sym__0__583748512005612830))))))))))))))))))))))))))))))))))))))))))))))));
  }
  unsigned sym__0___45_338744000625752874;
  fluidb_string<18> sym__0__4457550615691903038;
  fluidb_string<40> sym__0___45_7779893313968848924;
  fluidb_string<11> sym__0__7034531493904066722;
  fluidb_string<15> sym__0___45_8145490596050003832;
  fluidb_string<13> sym__0___45_1234268100973412423;
  fluidb_string<15> sym__0__3322015854183825854;
  fluidb_string<21> sym__0___45_8904238202937071990;
  unsigned sym__0__5163836519019812846;
  fluidb_string<18> sym__0__4691003334066563198;
  fluidb_string<9> sym__0___45_5551906115245323664;
  fluidb_string<9> sym__0___45_5600985921898170805;
  unsigned sym__0__5190436275755771085;
  unsigned sym__0___45_7845023056148553349;
  fluidb_string<7> sym__0__4350246310517402262;
  unsigned sym__0___45_3651598037686104911;
  unsigned sym__0__3324866205947089014;
  unsigned sym__0___45_5106594024306176690;
  unsigned sym__0___45_2328020107090086808;
  unsigned sym__0___45_7664420784569873109;
  fluidb_string<15> sym__0___45_6481679278388374134;
  fluidb_string<2> sym__0___45_2993897051316018478;
  fluidb_string<2> sym__0___45_2860388295315395233;
  fluidb_string<2> sym__0__5791715696489447415;
  fluidb_string<2> sym__0__527970848583178293;
  unsigned sym__0___45_7693013323208628206;
  int sym__0___45_5748998446790810584;
  unsigned sym__0__3069459070183433616;
  unsigned sym__0___45_829318717909085626;
  unsigned sym__0___45_2230370735359665795;
  unsigned sym__0__8685332338033785108;
  fluidb_string<21> sym__0___45_3218024968775209731;
  unsigned sym__0__4595984355710025903;
  fluidb_string<10> sym__0___45_591668478459646448;
  unsigned sym__0___45_1807435744938342688;
  double sym__0___45_6813561383274320878;
  unsigned sym__0__8204168833568236084;
  double sym__0__6331674360378029114;
  unsigned sym__0___45_5676998185488268146;
  unsigned sym__0__6569292155259249065;
  double sym__0___45_8803043059407230605;
  fluidb_string<13> sym__0__4146004324203846043;
  unsigned sym__0__1079194730339214597;
  fluidb_string<25> sym__0___45_1132171939664831330;
  fluidb_string<40> sym__0__8743572897236263948;
  fluidb_string<16> sym__0___45_4967417594431087118;
  fluidb_string<16> sym__0__7039739059145821808;
  fluidb_string<13> sym__0___45_5539313807166473391;
  fluidb_string<15> sym__0__583748512005612830;
 private:
};


class Record26 {
 public:
  Record26(unsigned __sym__0___45_1025574003998131029, fluidb_string<18> __sym__0___45_4784800604860893165, fluidb_string<40> __sym__0___45_1411609952591628755, fluidb_string<11> __sym__0___45_1913295115179671625, fluidb_string<15> __sym__0__9072809578645855185, fluidb_string<13> __sym__0___45_5464070250290332560, fluidb_string<15> __sym__0__933420146717119635, fluidb_string<21> __sym__0__2667275118306512287, unsigned __sym__0__8588949506443749827, fluidb_string<18> __sym__0__7920830407322626643, fluidb_string<9> __sym__0__5305332586037824953, fluidb_string<9> __sym__0___45_1053966312104534410, unsigned __sym__0___45_6198993335082305916, unsigned __sym__0__7690058280377738342, fluidb_string<7> __sym__0___45_2049544794397086613, unsigned __sym__0__5507020187724303720, unsigned __sym__0__6914490607404402763, unsigned __sym__0___45_8279681045763420125, unsigned __sym__0___45_3932180337362497103, unsigned __sym__0___45_6176332772663548330, fluidb_string<15> __sym__0__6190813038341283487, fluidb_string<2> __sym__0__3713346528688064935, fluidb_string<2> __sym__0__7992018005137055818, fluidb_string<2> __sym__0__2865282924688716514, fluidb_string<2> __sym__0__5725165375634966252, unsigned __sym__0__8887246536100151783, int __sym__0___45_6081471496261851279, unsigned __sym__0___45_7430466813702827047, unsigned __sym__0__7594609353861991003, unsigned __sym__0__8853020833982446644, unsigned __sym__0___45_8246765730439899299, fluidb_string<21> __sym__0__2780189502936268468, unsigned __sym__0__970593930150477274, fluidb_string<10> __sym__0___45_5602522691235110567, unsigned __sym__0__7232510962340848169, double __sym__0__6941632465355474407, unsigned __sym__0___45_3587604894451806339, double __sym__0___45_5859841963981186289, unsigned __sym__0__6541764064674577507, unsigned __sym__0___45_1822363250521197728, double __sym__0___45_8727038341940034914, fluidb_string<13> __sym__0__6964867237811495302, unsigned __sym__0___45_1405666555141006852, fluidb_string<25> __sym__0___45_898115746588286093, fluidb_string<40> __sym__0__7198956026705252949, fluidb_string<16> __sym__0__281037671574347975, fluidb_string<16> __sym__0___45_6539711280059219527, fluidb_string<13> __sym__0___45_8427899041680547064, fluidb_string<15> __sym__0___45_927305770198459661) : sym__0___45_1025574003998131029(__sym__0___45_1025574003998131029), sym__0___45_4784800604860893165(__sym__0___45_4784800604860893165), sym__0___45_1411609952591628755(__sym__0___45_1411609952591628755), sym__0___45_1913295115179671625(__sym__0___45_1913295115179671625), sym__0__9072809578645855185(__sym__0__9072809578645855185), sym__0___45_5464070250290332560(__sym__0___45_5464070250290332560), sym__0__933420146717119635(__sym__0__933420146717119635), sym__0__2667275118306512287(__sym__0__2667275118306512287), sym__0__8588949506443749827(__sym__0__8588949506443749827), sym__0__7920830407322626643(__sym__0__7920830407322626643), sym__0__5305332586037824953(__sym__0__5305332586037824953), sym__0___45_1053966312104534410(__sym__0___45_1053966312104534410), sym__0___45_6198993335082305916(__sym__0___45_6198993335082305916), sym__0__7690058280377738342(__sym__0__7690058280377738342), sym__0___45_2049544794397086613(__sym__0___45_2049544794397086613), sym__0__5507020187724303720(__sym__0__5507020187724303720), sym__0__6914490607404402763(__sym__0__6914490607404402763), sym__0___45_8279681045763420125(__sym__0___45_8279681045763420125), sym__0___45_3932180337362497103(__sym__0___45_3932180337362497103), sym__0___45_6176332772663548330(__sym__0___45_6176332772663548330), sym__0__6190813038341283487(__sym__0__6190813038341283487), sym__0__3713346528688064935(__sym__0__3713346528688064935), sym__0__7992018005137055818(__sym__0__7992018005137055818), sym__0__2865282924688716514(__sym__0__2865282924688716514), sym__0__5725165375634966252(__sym__0__5725165375634966252), sym__0__8887246536100151783(__sym__0__8887246536100151783), sym__0___45_6081471496261851279(__sym__0___45_6081471496261851279), sym__0___45_7430466813702827047(__sym__0___45_7430466813702827047), sym__0__7594609353861991003(__sym__0__7594609353861991003), sym__0__8853020833982446644(__sym__0__8853020833982446644), sym__0___45_8246765730439899299(__sym__0___45_8246765730439899299), sym__0__2780189502936268468(__sym__0__2780189502936268468), sym__0__970593930150477274(__sym__0__970593930150477274), sym__0___45_5602522691235110567(__sym__0___45_5602522691235110567), sym__0__7232510962340848169(__sym__0__7232510962340848169), sym__0__6941632465355474407(__sym__0__6941632465355474407), sym__0___45_3587604894451806339(__sym__0___45_3587604894451806339), sym__0___45_5859841963981186289(__sym__0___45_5859841963981186289), sym__0__6541764064674577507(__sym__0__6541764064674577507), sym__0___45_1822363250521197728(__sym__0___45_1822363250521197728), sym__0___45_8727038341940034914(__sym__0___45_8727038341940034914), sym__0__6964867237811495302(__sym__0__6964867237811495302), sym__0___45_1405666555141006852(__sym__0___45_1405666555141006852), sym__0___45_898115746588286093(__sym__0___45_898115746588286093), sym__0__7198956026705252949(__sym__0__7198956026705252949), sym__0__281037671574347975(__sym__0__281037671574347975), sym__0___45_6539711280059219527(__sym__0___45_6539711280059219527), sym__0___45_8427899041680547064(__sym__0___45_8427899041680547064), sym__0___45_927305770198459661(__sym__0___45_927305770198459661)
  {
  }
  Record26() 
  {
  }
  std::string show() const{
    std::stringstream o;
    o << sym__0___45_1025574003998131029 << " | " << arrToString(sym__0___45_4784800604860893165) << " | " << arrToString(sym__0___45_1411609952591628755) << " | " << arrToString(sym__0___45_1913295115179671625) << " | " << arrToString(sym__0__9072809578645855185) << " | " << arrToString(sym__0___45_5464070250290332560) << " | " << arrToString(sym__0__933420146717119635) << " | " << arrToString(sym__0__2667275118306512287) << " | " << sym__0__8588949506443749827 << " | " << arrToString(sym__0__7920830407322626643) << " | " << arrToString(sym__0__5305332586037824953) << " | " << arrToString(sym__0___45_1053966312104534410) << " | " << sym__0___45_6198993335082305916 << " | " << sym__0__7690058280377738342 << " | " << arrToString(sym__0___45_2049544794397086613) << " | " << sym__0__5507020187724303720 << " | " << sym__0__6914490607404402763 << " | " << sym__0___45_8279681045763420125 << " | " << sym__0___45_3932180337362497103 << " | " << sym__0___45_6176332772663548330 << " | " << arrToString(sym__0__6190813038341283487) << " | " << arrToString(sym__0__3713346528688064935) << " | " << arrToString(sym__0__7992018005137055818) << " | " << arrToString(sym__0__2865282924688716514) << " | " << arrToString(sym__0__5725165375634966252) << " | " << sym__0__8887246536100151783 << " | " << sym__0___45_6081471496261851279 << " | " << sym__0___45_7430466813702827047 << " | " << sym__0__7594609353861991003 << " | " << sym__0__8853020833982446644 << " | " << sym__0___45_8246765730439899299 << " | " << arrToString(sym__0__2780189502936268468) << " | " << sym__0__970593930150477274 << " | " << arrToString(sym__0___45_5602522691235110567) << " | " << sym__0__7232510962340848169 << " | " << sym__0__6941632465355474407 << " | " << sym__0___45_3587604894451806339 << " | " << sym__0___45_5859841963981186289 << " | " << sym__0__6541764064674577507 << " | " << sym__0___45_1822363250521197728 << " | " << sym__0___45_8727038341940034914 << " | " << arrToString(sym__0__6964867237811495302) << " | " << sym__0___45_1405666555141006852 << " | " << arrToString(sym__0___45_898115746588286093) << " | " << arrToString(sym__0__7198956026705252949) << " | " << arrToString(sym__0__281037671574347975) << " | " << arrToString(sym__0___45_6539711280059219527) << " | " << arrToString(sym__0___45_8427899041680547064) << " | " << arrToString(sym__0___45_927305770198459661);
    return o.str();
  }
  bool operator <(const Record26& otherRec) const{
    return (otherRec.sym__0___45_1025574003998131029 < sym__0___45_1025574003998131029 && (otherRec.sym__0___45_4784800604860893165 < sym__0___45_4784800604860893165 && (otherRec.sym__0___45_1411609952591628755 < sym__0___45_1411609952591628755 && (otherRec.sym__0___45_1913295115179671625 < sym__0___45_1913295115179671625 && (otherRec.sym__0__9072809578645855185 < sym__0__9072809578645855185 && (otherRec.sym__0___45_5464070250290332560 < sym__0___45_5464070250290332560 && (otherRec.sym__0__933420146717119635 < sym__0__933420146717119635 && (otherRec.sym__0__2667275118306512287 < sym__0__2667275118306512287 && (otherRec.sym__0__8588949506443749827 < sym__0__8588949506443749827 && (otherRec.sym__0__7920830407322626643 < sym__0__7920830407322626643 && (otherRec.sym__0__5305332586037824953 < sym__0__5305332586037824953 && (otherRec.sym__0___45_1053966312104534410 < sym__0___45_1053966312104534410 && (otherRec.sym__0___45_6198993335082305916 < sym__0___45_6198993335082305916 && (otherRec.sym__0__7690058280377738342 < sym__0__7690058280377738342 && (otherRec.sym__0___45_2049544794397086613 < sym__0___45_2049544794397086613 && (otherRec.sym__0__5507020187724303720 < sym__0__5507020187724303720 && (otherRec.sym__0__6914490607404402763 < sym__0__6914490607404402763 && (otherRec.sym__0___45_8279681045763420125 < sym__0___45_8279681045763420125 && (otherRec.sym__0___45_3932180337362497103 < sym__0___45_3932180337362497103 && (otherRec.sym__0___45_6176332772663548330 < sym__0___45_6176332772663548330 && (otherRec.sym__0__6190813038341283487 < sym__0__6190813038341283487 && (otherRec.sym__0__3713346528688064935 < sym__0__3713346528688064935 && (otherRec.sym__0__7992018005137055818 < sym__0__7992018005137055818 && (otherRec.sym__0__2865282924688716514 < sym__0__2865282924688716514 && (otherRec.sym__0__5725165375634966252 < sym__0__5725165375634966252 && (otherRec.sym__0__8887246536100151783 < sym__0__8887246536100151783 && (otherRec.sym__0___45_6081471496261851279 < sym__0___45_6081471496261851279 && (otherRec.sym__0___45_7430466813702827047 < sym__0___45_7430466813702827047 && (otherRec.sym__0__7594609353861991003 < sym__0__7594609353861991003 && (otherRec.sym__0__8853020833982446644 < sym__0__8853020833982446644 && (otherRec.sym__0___45_8246765730439899299 < sym__0___45_8246765730439899299 && (otherRec.sym__0__2780189502936268468 < sym__0__2780189502936268468 && (otherRec.sym__0__970593930150477274 < sym__0__970593930150477274 && (otherRec.sym__0___45_5602522691235110567 < sym__0___45_5602522691235110567 && (otherRec.sym__0__7232510962340848169 < sym__0__7232510962340848169 && (otherRec.sym__0__6941632465355474407 < sym__0__6941632465355474407 && (otherRec.sym__0___45_3587604894451806339 < sym__0___45_3587604894451806339 && (otherRec.sym__0___45_5859841963981186289 < sym__0___45_5859841963981186289 && (otherRec.sym__0__6541764064674577507 < sym__0__6541764064674577507 && (otherRec.sym__0___45_1822363250521197728 < sym__0___45_1822363250521197728 && (otherRec.sym__0___45_8727038341940034914 < sym__0___45_8727038341940034914 && (otherRec.sym__0__6964867237811495302 < sym__0__6964867237811495302 && (otherRec.sym__0___45_1405666555141006852 < sym__0___45_1405666555141006852 && (otherRec.sym__0___45_898115746588286093 < sym__0___45_898115746588286093 && (otherRec.sym__0__7198956026705252949 < sym__0__7198956026705252949 && (otherRec.sym__0__281037671574347975 < sym__0__281037671574347975 && (otherRec.sym__0___45_6539711280059219527 < sym__0___45_6539711280059219527 && (otherRec.sym__0___45_8427899041680547064 < sym__0___45_8427899041680547064 && otherRec.sym__0___45_927305770198459661 < sym__0___45_927305770198459661))))))))))))))))))))))))))))))))))))))))))))))));
  }
  bool operator ==(const Record26& otherRec) const{
    return (otherRec.sym__0___45_1025574003998131029 == sym__0___45_1025574003998131029 && (otherRec.sym__0___45_4784800604860893165 == sym__0___45_4784800604860893165 && (otherRec.sym__0___45_1411609952591628755 == sym__0___45_1411609952591628755 && (otherRec.sym__0___45_1913295115179671625 == sym__0___45_1913295115179671625 && (otherRec.sym__0__9072809578645855185 == sym__0__9072809578645855185 && (otherRec.sym__0___45_5464070250290332560 == sym__0___45_5464070250290332560 && (otherRec.sym__0__933420146717119635 == sym__0__933420146717119635 && (otherRec.sym__0__2667275118306512287 == sym__0__2667275118306512287 && (otherRec.sym__0__8588949506443749827 == sym__0__8588949506443749827 && (otherRec.sym__0__7920830407322626643 == sym__0__7920830407322626643 && (otherRec.sym__0__5305332586037824953 == sym__0__5305332586037824953 && (otherRec.sym__0___45_1053966312104534410 == sym__0___45_1053966312104534410 && (otherRec.sym__0___45_6198993335082305916 == sym__0___45_6198993335082305916 && (otherRec.sym__0__7690058280377738342 == sym__0__7690058280377738342 && (otherRec.sym__0___45_2049544794397086613 == sym__0___45_2049544794397086613 && (otherRec.sym__0__5507020187724303720 == sym__0__5507020187724303720 && (otherRec.sym__0__6914490607404402763 == sym__0__6914490607404402763 && (otherRec.sym__0___45_8279681045763420125 == sym__0___45_8279681045763420125 && (otherRec.sym__0___45_3932180337362497103 == sym__0___45_3932180337362497103 && (otherRec.sym__0___45_6176332772663548330 == sym__0___45_6176332772663548330 && (otherRec.sym__0__6190813038341283487 == sym__0__6190813038341283487 && (otherRec.sym__0__3713346528688064935 == sym__0__3713346528688064935 && (otherRec.sym__0__7992018005137055818 == sym__0__7992018005137055818 && (otherRec.sym__0__2865282924688716514 == sym__0__2865282924688716514 && (otherRec.sym__0__5725165375634966252 == sym__0__5725165375634966252 && (otherRec.sym__0__8887246536100151783 == sym__0__8887246536100151783 && (otherRec.sym__0___45_6081471496261851279 == sym__0___45_6081471496261851279 && (otherRec.sym__0___45_7430466813702827047 == sym__0___45_7430466813702827047 && (otherRec.sym__0__7594609353861991003 == sym__0__7594609353861991003 && (otherRec.sym__0__8853020833982446644 == sym__0__8853020833982446644 && (otherRec.sym__0___45_8246765730439899299 == sym__0___45_8246765730439899299 && (otherRec.sym__0__2780189502936268468 == sym__0__2780189502936268468 && (otherRec.sym__0__970593930150477274 == sym__0__970593930150477274 && (otherRec.sym__0___45_5602522691235110567 == sym__0___45_5602522691235110567 && (otherRec.sym__0__7232510962340848169 == sym__0__7232510962340848169 && (otherRec.sym__0__6941632465355474407 == sym__0__6941632465355474407 && (otherRec.sym__0___45_3587604894451806339 == sym__0___45_3587604894451806339 && (otherRec.sym__0___45_5859841963981186289 == sym__0___45_5859841963981186289 && (otherRec.sym__0__6541764064674577507 == sym__0__6541764064674577507 && (otherRec.sym__0___45_1822363250521197728 == sym__0___45_1822363250521197728 && (otherRec.sym__0___45_8727038341940034914 == sym__0___45_8727038341940034914 && (otherRec.sym__0__6964867237811495302 == sym__0__6964867237811495302 && (otherRec.sym__0___45_1405666555141006852 == sym__0___45_1405666555141006852 && (otherRec.sym__0___45_898115746588286093 == sym__0___45_898115746588286093 && (otherRec.sym__0__7198956026705252949 == sym__0__7198956026705252949 && (otherRec.sym__0__281037671574347975 == sym__0__281037671574347975 && (otherRec.sym__0___45_6539711280059219527 == sym__0___45_6539711280059219527 && (otherRec.sym__0___45_8427899041680547064 == sym__0___45_8427899041680547064 && otherRec.sym__0___45_927305770198459661 == sym__0___45_927305770198459661))))))))))))))))))))))))))))))))))))))))))))))));
  }
  bool operator !=(const Record26& otherRec) const{
    return (otherRec.sym__0___45_1025574003998131029 != sym__0___45_1025574003998131029 || (otherRec.sym__0___45_4784800604860893165 != sym__0___45_4784800604860893165 || (otherRec.sym__0___45_1411609952591628755 != sym__0___45_1411609952591628755 || (otherRec.sym__0___45_1913295115179671625 != sym__0___45_1913295115179671625 || (otherRec.sym__0__9072809578645855185 != sym__0__9072809578645855185 || (otherRec.sym__0___45_5464070250290332560 != sym__0___45_5464070250290332560 || (otherRec.sym__0__933420146717119635 != sym__0__933420146717119635 || (otherRec.sym__0__2667275118306512287 != sym__0__2667275118306512287 || (otherRec.sym__0__8588949506443749827 != sym__0__8588949506443749827 || (otherRec.sym__0__7920830407322626643 != sym__0__7920830407322626643 || (otherRec.sym__0__5305332586037824953 != sym__0__5305332586037824953 || (otherRec.sym__0___45_1053966312104534410 != sym__0___45_1053966312104534410 || (otherRec.sym__0___45_6198993335082305916 != sym__0___45_6198993335082305916 || (otherRec.sym__0__7690058280377738342 != sym__0__7690058280377738342 || (otherRec.sym__0___45_2049544794397086613 != sym__0___45_2049544794397086613 || (otherRec.sym__0__5507020187724303720 != sym__0__5507020187724303720 || (otherRec.sym__0__6914490607404402763 != sym__0__6914490607404402763 || (otherRec.sym__0___45_8279681045763420125 != sym__0___45_8279681045763420125 || (otherRec.sym__0___45_3932180337362497103 != sym__0___45_3932180337362497103 || (otherRec.sym__0___45_6176332772663548330 != sym__0___45_6176332772663548330 || (otherRec.sym__0__6190813038341283487 != sym__0__6190813038341283487 || (otherRec.sym__0__3713346528688064935 != sym__0__3713346528688064935 || (otherRec.sym__0__7992018005137055818 != sym__0__7992018005137055818 || (otherRec.sym__0__2865282924688716514 != sym__0__2865282924688716514 || (otherRec.sym__0__5725165375634966252 != sym__0__5725165375634966252 || (otherRec.sym__0__8887246536100151783 != sym__0__8887246536100151783 || (otherRec.sym__0___45_6081471496261851279 != sym__0___45_6081471496261851279 || (otherRec.sym__0___45_7430466813702827047 != sym__0___45_7430466813702827047 || (otherRec.sym__0__7594609353861991003 != sym__0__7594609353861991003 || (otherRec.sym__0__8853020833982446644 != sym__0__8853020833982446644 || (otherRec.sym__0___45_8246765730439899299 != sym__0___45_8246765730439899299 || (otherRec.sym__0__2780189502936268468 != sym__0__2780189502936268468 || (otherRec.sym__0__970593930150477274 != sym__0__970593930150477274 || (otherRec.sym__0___45_5602522691235110567 != sym__0___45_5602522691235110567 || (otherRec.sym__0__7232510962340848169 != sym__0__7232510962340848169 || (otherRec.sym__0__6941632465355474407 != sym__0__6941632465355474407 || (otherRec.sym__0___45_3587604894451806339 != sym__0___45_3587604894451806339 || (otherRec.sym__0___45_5859841963981186289 != sym__0___45_5859841963981186289 || (otherRec.sym__0__6541764064674577507 != sym__0__6541764064674577507 || (otherRec.sym__0___45_1822363250521197728 != sym__0___45_1822363250521197728 || (otherRec.sym__0___45_8727038341940034914 != sym__0___45_8727038341940034914 || (otherRec.sym__0__6964867237811495302 != sym__0__6964867237811495302 || (otherRec.sym__0___45_1405666555141006852 != sym__0___45_1405666555141006852 || (otherRec.sym__0___45_898115746588286093 != sym__0___45_898115746588286093 || (otherRec.sym__0__7198956026705252949 != sym__0__7198956026705252949 || (otherRec.sym__0__281037671574347975 != sym__0__281037671574347975 || (otherRec.sym__0___45_6539711280059219527 != sym__0___45_6539711280059219527 || (otherRec.sym__0___45_8427899041680547064 != sym__0___45_8427899041680547064 || otherRec.sym__0___45_927305770198459661 != sym__0___45_927305770198459661))))))))))))))))))))))))))))))))))))))))))))))));
  }
  unsigned sym__0___45_1025574003998131029;
  fluidb_string<18> sym__0___45_4784800604860893165;
  fluidb_string<40> sym__0___45_1411609952591628755;
  fluidb_string<11> sym__0___45_1913295115179671625;
  fluidb_string<15> sym__0__9072809578645855185;
  fluidb_string<13> sym__0___45_5464070250290332560;
  fluidb_string<15> sym__0__933420146717119635;
  fluidb_string<21> sym__0__2667275118306512287;
  unsigned sym__0__8588949506443749827;
  fluidb_string<18> sym__0__7920830407322626643;
  fluidb_string<9> sym__0__5305332586037824953;
  fluidb_string<9> sym__0___45_1053966312104534410;
  unsigned sym__0___45_6198993335082305916;
  unsigned sym__0__7690058280377738342;
  fluidb_string<7> sym__0___45_2049544794397086613;
  unsigned sym__0__5507020187724303720;
  unsigned sym__0__6914490607404402763;
  unsigned sym__0___45_8279681045763420125;
  unsigned sym__0___45_3932180337362497103;
  unsigned sym__0___45_6176332772663548330;
  fluidb_string<15> sym__0__6190813038341283487;
  fluidb_string<2> sym__0__3713346528688064935;
  fluidb_string<2> sym__0__7992018005137055818;
  fluidb_string<2> sym__0__2865282924688716514;
  fluidb_string<2> sym__0__5725165375634966252;
  unsigned sym__0__8887246536100151783;
  int sym__0___45_6081471496261851279;
  unsigned sym__0___45_7430466813702827047;
  unsigned sym__0__7594609353861991003;
  unsigned sym__0__8853020833982446644;
  unsigned sym__0___45_8246765730439899299;
  fluidb_string<21> sym__0__2780189502936268468;
  unsigned sym__0__970593930150477274;
  fluidb_string<10> sym__0___45_5602522691235110567;
  unsigned sym__0__7232510962340848169;
  double sym__0__6941632465355474407;
  unsigned sym__0___45_3587604894451806339;
  double sym__0___45_5859841963981186289;
  unsigned sym__0__6541764064674577507;
  unsigned sym__0___45_1822363250521197728;
  double sym__0___45_8727038341940034914;
  fluidb_string<13> sym__0__6964867237811495302;
  unsigned sym__0___45_1405666555141006852;
  fluidb_string<25> sym__0___45_898115746588286093;
  fluidb_string<40> sym__0__7198956026705252949;
  fluidb_string<16> sym__0__281037671574347975;
  fluidb_string<16> sym__0___45_6539711280059219527;
  fluidb_string<13> sym__0___45_8427899041680547064;
  fluidb_string<15> sym__0___45_927305770198459661;
 private:
};


class Record4 {
 public:
  Record4(unsigned __sym__0___45_3961143035674407474, fluidb_string<18> __sym__0___45_6251899802584687138, fluidb_string<9> __sym__0__7895704682370371792, fluidb_string<9> __sym__0___45_4486276699369081973, unsigned __sym__0__1119005997298974989, unsigned __sym__0__3623076037790620667, fluidb_string<7> __sym__0___45_369211045765545994, unsigned __sym__0___45_2252349090140989903, unsigned __sym__0___45_6519715028980934506, unsigned __sym__0__6988144115678218478, unsigned __sym__0__1168585672581702408, unsigned __sym__0___45_1566345155802505557, fluidb_string<15> __sym__0___45_3812637469976556790, fluidb_string<2> __sym__0___45_2398128448016703502, fluidb_string<2> __sym__0__5574729781191990975, fluidb_string<2> __sym__0___45_5962954882039921225, fluidb_string<2> __sym__0___45_7276734914968453131, unsigned __sym__0__5341165382232817970, int __sym__0__5806605655987033032, unsigned __sym__0___45_6623407408063066704, unsigned __sym__0___45_1670026162273154778, unsigned __sym__0__2289386367904588797, unsigned __sym__0__8025829587274267860, fluidb_string<21> __sym__0__454237065112775549, unsigned __sym__0__608217599158647375, fluidb_string<10> __sym__0__4347069016709593136, unsigned __sym__0__4553650632168714688, double __sym__0__586349573025064242, unsigned __sym__0__144523031940788660, double __sym__0__2942207309637238010, unsigned __sym__0__1782085603058736686, unsigned __sym__0__3001704397998344329, double __sym__0___45_2662583778072919661, fluidb_string<13> __sym__0__8853539013824041307) : sym__0___45_3961143035674407474(__sym__0___45_3961143035674407474), sym__0___45_6251899802584687138(__sym__0___45_6251899802584687138), sym__0__7895704682370371792(__sym__0__7895704682370371792), sym__0___45_4486276699369081973(__sym__0___45_4486276699369081973), sym__0__1119005997298974989(__sym__0__1119005997298974989), sym__0__3623076037790620667(__sym__0__3623076037790620667), sym__0___45_369211045765545994(__sym__0___45_369211045765545994), sym__0___45_2252349090140989903(__sym__0___45_2252349090140989903), sym__0___45_6519715028980934506(__sym__0___45_6519715028980934506), sym__0__6988144115678218478(__sym__0__6988144115678218478), sym__0__1168585672581702408(__sym__0__1168585672581702408), sym__0___45_1566345155802505557(__sym__0___45_1566345155802505557), sym__0___45_3812637469976556790(__sym__0___45_3812637469976556790), sym__0___45_2398128448016703502(__sym__0___45_2398128448016703502), sym__0__5574729781191990975(__sym__0__5574729781191990975), sym__0___45_5962954882039921225(__sym__0___45_5962954882039921225), sym__0___45_7276734914968453131(__sym__0___45_7276734914968453131), sym__0__5341165382232817970(__sym__0__5341165382232817970), sym__0__5806605655987033032(__sym__0__5806605655987033032), sym__0___45_6623407408063066704(__sym__0___45_6623407408063066704), sym__0___45_1670026162273154778(__sym__0___45_1670026162273154778), sym__0__2289386367904588797(__sym__0__2289386367904588797), sym__0__8025829587274267860(__sym__0__8025829587274267860), sym__0__454237065112775549(__sym__0__454237065112775549), sym__0__608217599158647375(__sym__0__608217599158647375), sym__0__4347069016709593136(__sym__0__4347069016709593136), sym__0__4553650632168714688(__sym__0__4553650632168714688), sym__0__586349573025064242(__sym__0__586349573025064242), sym__0__144523031940788660(__sym__0__144523031940788660), sym__0__2942207309637238010(__sym__0__2942207309637238010), sym__0__1782085603058736686(__sym__0__1782085603058736686), sym__0__3001704397998344329(__sym__0__3001704397998344329), sym__0___45_2662583778072919661(__sym__0___45_2662583778072919661), sym__0__8853539013824041307(__sym__0__8853539013824041307)
  {
  }
  Record4() 
  {
  }
  std::string show() const{
    std::stringstream o;
    o << sym__0___45_3961143035674407474 << " | " << arrToString(sym__0___45_6251899802584687138) << " | " << arrToString(sym__0__7895704682370371792) << " | " << arrToString(sym__0___45_4486276699369081973) << " | " << sym__0__1119005997298974989 << " | " << sym__0__3623076037790620667 << " | " << arrToString(sym__0___45_369211045765545994) << " | " << sym__0___45_2252349090140989903 << " | " << sym__0___45_6519715028980934506 << " | " << sym__0__6988144115678218478 << " | " << sym__0__1168585672581702408 << " | " << sym__0___45_1566345155802505557 << " | " << arrToString(sym__0___45_3812637469976556790) << " | " << arrToString(sym__0___45_2398128448016703502) << " | " << arrToString(sym__0__5574729781191990975) << " | " << arrToString(sym__0___45_5962954882039921225) << " | " << arrToString(sym__0___45_7276734914968453131) << " | " << sym__0__5341165382232817970 << " | " << sym__0__5806605655987033032 << " | " << sym__0___45_6623407408063066704 << " | " << sym__0___45_1670026162273154778 << " | " << sym__0__2289386367904588797 << " | " << sym__0__8025829587274267860 << " | " << arrToString(sym__0__454237065112775549) << " | " << sym__0__608217599158647375 << " | " << arrToString(sym__0__4347069016709593136) << " | " << sym__0__4553650632168714688 << " | " << sym__0__586349573025064242 << " | " << sym__0__144523031940788660 << " | " << sym__0__2942207309637238010 << " | " << sym__0__1782085603058736686 << " | " << sym__0__3001704397998344329 << " | " << sym__0___45_2662583778072919661 << " | " << arrToString(sym__0__8853539013824041307);
    return o.str();
  }
  bool operator <(const Record4& otherRec) const{
    return (otherRec.sym__0___45_3961143035674407474 < sym__0___45_3961143035674407474 && (otherRec.sym__0___45_6251899802584687138 < sym__0___45_6251899802584687138 && (otherRec.sym__0__7895704682370371792 < sym__0__7895704682370371792 && (otherRec.sym__0___45_4486276699369081973 < sym__0___45_4486276699369081973 && (otherRec.sym__0__1119005997298974989 < sym__0__1119005997298974989 && (otherRec.sym__0__3623076037790620667 < sym__0__3623076037790620667 && (otherRec.sym__0___45_369211045765545994 < sym__0___45_369211045765545994 && (otherRec.sym__0___45_2252349090140989903 < sym__0___45_2252349090140989903 && (otherRec.sym__0___45_6519715028980934506 < sym__0___45_6519715028980934506 && (otherRec.sym__0__6988144115678218478 < sym__0__6988144115678218478 && (otherRec.sym__0__1168585672581702408 < sym__0__1168585672581702408 && (otherRec.sym__0___45_1566345155802505557 < sym__0___45_1566345155802505557 && (otherRec.sym__0___45_3812637469976556790 < sym__0___45_3812637469976556790 && (otherRec.sym__0___45_2398128448016703502 < sym__0___45_2398128448016703502 && (otherRec.sym__0__5574729781191990975 < sym__0__5574729781191990975 && (otherRec.sym__0___45_5962954882039921225 < sym__0___45_5962954882039921225 && (otherRec.sym__0___45_7276734914968453131 < sym__0___45_7276734914968453131 && (otherRec.sym__0__5341165382232817970 < sym__0__5341165382232817970 && (otherRec.sym__0__5806605655987033032 < sym__0__5806605655987033032 && (otherRec.sym__0___45_6623407408063066704 < sym__0___45_6623407408063066704 && (otherRec.sym__0___45_1670026162273154778 < sym__0___45_1670026162273154778 && (otherRec.sym__0__2289386367904588797 < sym__0__2289386367904588797 && (otherRec.sym__0__8025829587274267860 < sym__0__8025829587274267860 && (otherRec.sym__0__454237065112775549 < sym__0__454237065112775549 && (otherRec.sym__0__608217599158647375 < sym__0__608217599158647375 && (otherRec.sym__0__4347069016709593136 < sym__0__4347069016709593136 && (otherRec.sym__0__4553650632168714688 < sym__0__4553650632168714688 && (otherRec.sym__0__586349573025064242 < sym__0__586349573025064242 && (otherRec.sym__0__144523031940788660 < sym__0__144523031940788660 && (otherRec.sym__0__2942207309637238010 < sym__0__2942207309637238010 && (otherRec.sym__0__1782085603058736686 < sym__0__1782085603058736686 && (otherRec.sym__0__3001704397998344329 < sym__0__3001704397998344329 && (otherRec.sym__0___45_2662583778072919661 < sym__0___45_2662583778072919661 && otherRec.sym__0__8853539013824041307 < sym__0__8853539013824041307)))))))))))))))))))))))))))))))));
  }
  bool operator ==(const Record4& otherRec) const{
    return (otherRec.sym__0___45_3961143035674407474 == sym__0___45_3961143035674407474 && (otherRec.sym__0___45_6251899802584687138 == sym__0___45_6251899802584687138 && (otherRec.sym__0__7895704682370371792 == sym__0__7895704682370371792 && (otherRec.sym__0___45_4486276699369081973 == sym__0___45_4486276699369081973 && (otherRec.sym__0__1119005997298974989 == sym__0__1119005997298974989 && (otherRec.sym__0__3623076037790620667 == sym__0__3623076037790620667 && (otherRec.sym__0___45_369211045765545994 == sym__0___45_369211045765545994 && (otherRec.sym__0___45_2252349090140989903 == sym__0___45_2252349090140989903 && (otherRec.sym__0___45_6519715028980934506 == sym__0___45_6519715028980934506 && (otherRec.sym__0__6988144115678218478 == sym__0__6988144115678218478 && (otherRec.sym__0__1168585672581702408 == sym__0__1168585672581702408 && (otherRec.sym__0___45_1566345155802505557 == sym__0___45_1566345155802505557 && (otherRec.sym__0___45_3812637469976556790 == sym__0___45_3812637469976556790 && (otherRec.sym__0___45_2398128448016703502 == sym__0___45_2398128448016703502 && (otherRec.sym__0__5574729781191990975 == sym__0__5574729781191990975 && (otherRec.sym__0___45_5962954882039921225 == sym__0___45_5962954882039921225 && (otherRec.sym__0___45_7276734914968453131 == sym__0___45_7276734914968453131 && (otherRec.sym__0__5341165382232817970 == sym__0__5341165382232817970 && (otherRec.sym__0__5806605655987033032 == sym__0__5806605655987033032 && (otherRec.sym__0___45_6623407408063066704 == sym__0___45_6623407408063066704 && (otherRec.sym__0___45_1670026162273154778 == sym__0___45_1670026162273154778 && (otherRec.sym__0__2289386367904588797 == sym__0__2289386367904588797 && (otherRec.sym__0__8025829587274267860 == sym__0__8025829587274267860 && (otherRec.sym__0__454237065112775549 == sym__0__454237065112775549 && (otherRec.sym__0__608217599158647375 == sym__0__608217599158647375 && (otherRec.sym__0__4347069016709593136 == sym__0__4347069016709593136 && (otherRec.sym__0__4553650632168714688 == sym__0__4553650632168714688 && (otherRec.sym__0__586349573025064242 == sym__0__586349573025064242 && (otherRec.sym__0__144523031940788660 == sym__0__144523031940788660 && (otherRec.sym__0__2942207309637238010 == sym__0__2942207309637238010 && (otherRec.sym__0__1782085603058736686 == sym__0__1782085603058736686 && (otherRec.sym__0__3001704397998344329 == sym__0__3001704397998344329 && (otherRec.sym__0___45_2662583778072919661 == sym__0___45_2662583778072919661 && otherRec.sym__0__8853539013824041307 == sym__0__8853539013824041307)))))))))))))))))))))))))))))))));
  }
  bool operator !=(const Record4& otherRec) const{
    return (otherRec.sym__0___45_3961143035674407474 != sym__0___45_3961143035674407474 || (otherRec.sym__0___45_6251899802584687138 != sym__0___45_6251899802584687138 || (otherRec.sym__0__7895704682370371792 != sym__0__7895704682370371792 || (otherRec.sym__0___45_4486276699369081973 != sym__0___45_4486276699369081973 || (otherRec.sym__0__1119005997298974989 != sym__0__1119005997298974989 || (otherRec.sym__0__3623076037790620667 != sym__0__3623076037790620667 || (otherRec.sym__0___45_369211045765545994 != sym__0___45_369211045765545994 || (otherRec.sym__0___45_2252349090140989903 != sym__0___45_2252349090140989903 || (otherRec.sym__0___45_6519715028980934506 != sym__0___45_6519715028980934506 || (otherRec.sym__0__6988144115678218478 != sym__0__6988144115678218478 || (otherRec.sym__0__1168585672581702408 != sym__0__1168585672581702408 || (otherRec.sym__0___45_1566345155802505557 != sym__0___45_1566345155802505557 || (otherRec.sym__0___45_3812637469976556790 != sym__0___45_3812637469976556790 || (otherRec.sym__0___45_2398128448016703502 != sym__0___45_2398128448016703502 || (otherRec.sym__0__5574729781191990975 != sym__0__5574729781191990975 || (otherRec.sym__0___45_5962954882039921225 != sym__0___45_5962954882039921225 || (otherRec.sym__0___45_7276734914968453131 != sym__0___45_7276734914968453131 || (otherRec.sym__0__5341165382232817970 != sym__0__5341165382232817970 || (otherRec.sym__0__5806605655987033032 != sym__0__5806605655987033032 || (otherRec.sym__0___45_6623407408063066704 != sym__0___45_6623407408063066704 || (otherRec.sym__0___45_1670026162273154778 != sym__0___45_1670026162273154778 || (otherRec.sym__0__2289386367904588797 != sym__0__2289386367904588797 || (otherRec.sym__0__8025829587274267860 != sym__0__8025829587274267860 || (otherRec.sym__0__454237065112775549 != sym__0__454237065112775549 || (otherRec.sym__0__608217599158647375 != sym__0__608217599158647375 || (otherRec.sym__0__4347069016709593136 != sym__0__4347069016709593136 || (otherRec.sym__0__4553650632168714688 != sym__0__4553650632168714688 || (otherRec.sym__0__586349573025064242 != sym__0__586349573025064242 || (otherRec.sym__0__144523031940788660 != sym__0__144523031940788660 || (otherRec.sym__0__2942207309637238010 != sym__0__2942207309637238010 || (otherRec.sym__0__1782085603058736686 != sym__0__1782085603058736686 || (otherRec.sym__0__3001704397998344329 != sym__0__3001704397998344329 || (otherRec.sym__0___45_2662583778072919661 != sym__0___45_2662583778072919661 || otherRec.sym__0__8853539013824041307 != sym__0__8853539013824041307)))))))))))))))))))))))))))))))));
  }
  unsigned sym__0___45_3961143035674407474;
  fluidb_string<18> sym__0___45_6251899802584687138;
  fluidb_string<9> sym__0__7895704682370371792;
  fluidb_string<9> sym__0___45_4486276699369081973;
  unsigned sym__0__1119005997298974989;
  unsigned sym__0__3623076037790620667;
  fluidb_string<7> sym__0___45_369211045765545994;
  unsigned sym__0___45_2252349090140989903;
  unsigned sym__0___45_6519715028980934506;
  unsigned sym__0__6988144115678218478;
  unsigned sym__0__1168585672581702408;
  unsigned sym__0___45_1566345155802505557;
  fluidb_string<15> sym__0___45_3812637469976556790;
  fluidb_string<2> sym__0___45_2398128448016703502;
  fluidb_string<2> sym__0__5574729781191990975;
  fluidb_string<2> sym__0___45_5962954882039921225;
  fluidb_string<2> sym__0___45_7276734914968453131;
  unsigned sym__0__5341165382232817970;
  int sym__0__5806605655987033032;
  unsigned sym__0___45_6623407408063066704;
  unsigned sym__0___45_1670026162273154778;
  unsigned sym__0__2289386367904588797;
  unsigned sym__0__8025829587274267860;
  fluidb_string<21> sym__0__454237065112775549;
  unsigned sym__0__608217599158647375;
  fluidb_string<10> sym__0__4347069016709593136;
  unsigned sym__0__4553650632168714688;
  double sym__0__586349573025064242;
  unsigned sym__0__144523031940788660;
  double sym__0__2942207309637238010;
  unsigned sym__0__1782085603058736686;
  unsigned sym__0__3001704397998344329;
  double sym__0___45_2662583778072919661;
  fluidb_string<13> sym__0__8853539013824041307;
 private:
};


class Record13 {
 public:
  Record13(unsigned __sym__0__59163526776084807, fluidb_string<18> __sym__0___45_1313357857405786385, fluidb_string<40> __sym__0__1337312907475566789, fluidb_string<11> __sym__0__8014013609240026595, fluidb_string<15> __sym__0___45_4888925151068446247, fluidb_string<13> __sym__0__661408193145534136, fluidb_string<15> __sym__0___45_7159405632382799505, fluidb_string<21> __sym__0___45_7793359246716293237) : sym__0__59163526776084807(__sym__0__59163526776084807), sym__0___45_1313357857405786385(__sym__0___45_1313357857405786385), sym__0__1337312907475566789(__sym__0__1337312907475566789), sym__0__8014013609240026595(__sym__0__8014013609240026595), sym__0___45_4888925151068446247(__sym__0___45_4888925151068446247), sym__0__661408193145534136(__sym__0__661408193145534136), sym__0___45_7159405632382799505(__sym__0___45_7159405632382799505), sym__0___45_7793359246716293237(__sym__0___45_7793359246716293237)
  {
  }
  Record13() 
  {
  }
  std::string show() const{
    std::stringstream o;
    o << sym__0__59163526776084807 << " | " << arrToString(sym__0___45_1313357857405786385) << " | " << arrToString(sym__0__1337312907475566789) << " | " << arrToString(sym__0__8014013609240026595) << " | " << arrToString(sym__0___45_4888925151068446247) << " | " << arrToString(sym__0__661408193145534136) << " | " << arrToString(sym__0___45_7159405632382799505) << " | " << arrToString(sym__0___45_7793359246716293237);
    return o.str();
  }
  bool operator <(const Record13& otherRec) const{
    return (otherRec.sym__0__59163526776084807 < sym__0__59163526776084807 && (otherRec.sym__0___45_1313357857405786385 < sym__0___45_1313357857405786385 && (otherRec.sym__0__1337312907475566789 < sym__0__1337312907475566789 && (otherRec.sym__0__8014013609240026595 < sym__0__8014013609240026595 && (otherRec.sym__0___45_4888925151068446247 < sym__0___45_4888925151068446247 && (otherRec.sym__0__661408193145534136 < sym__0__661408193145534136 && (otherRec.sym__0___45_7159405632382799505 < sym__0___45_7159405632382799505 && otherRec.sym__0___45_7793359246716293237 < sym__0___45_7793359246716293237)))))));
  }
  bool operator ==(const Record13& otherRec) const{
    return (otherRec.sym__0__59163526776084807 == sym__0__59163526776084807 && (otherRec.sym__0___45_1313357857405786385 == sym__0___45_1313357857405786385 && (otherRec.sym__0__1337312907475566789 == sym__0__1337312907475566789 && (otherRec.sym__0__8014013609240026595 == sym__0__8014013609240026595 && (otherRec.sym__0___45_4888925151068446247 == sym__0___45_4888925151068446247 && (otherRec.sym__0__661408193145534136 == sym__0__661408193145534136 && (otherRec.sym__0___45_7159405632382799505 == sym__0___45_7159405632382799505 && otherRec.sym__0___45_7793359246716293237 == sym__0___45_7793359246716293237)))))));
  }
  bool operator !=(const Record13& otherRec) const{
    return (otherRec.sym__0__59163526776084807 != sym__0__59163526776084807 || (otherRec.sym__0___45_1313357857405786385 != sym__0___45_1313357857405786385 || (otherRec.sym__0__1337312907475566789 != sym__0__1337312907475566789 || (otherRec.sym__0__8014013609240026595 != sym__0__8014013609240026595 || (otherRec.sym__0___45_4888925151068446247 != sym__0___45_4888925151068446247 || (otherRec.sym__0__661408193145534136 != sym__0__661408193145534136 || (otherRec.sym__0___45_7159405632382799505 != sym__0___45_7159405632382799505 || otherRec.sym__0___45_7793359246716293237 != sym__0___45_7793359246716293237)))))));
  }
  unsigned sym__0__59163526776084807;
  fluidb_string<18> sym__0___45_1313357857405786385;
  fluidb_string<40> sym__0__1337312907475566789;
  fluidb_string<11> sym__0__8014013609240026595;
  fluidb_string<15> sym__0___45_4888925151068446247;
  fluidb_string<13> sym__0__661408193145534136;
  fluidb_string<15> sym__0___45_7159405632382799505;
  fluidb_string<21> sym__0___45_7793359246716293237;
 private:
};


class Record14 {
 public:
  Record14(unsigned __sym__0__5373426235047388566, fluidb_string<18> __sym__0__2677149988632781646, fluidb_string<40> __sym__0__3230501947603702676, fluidb_string<11> __sym__0___45_7504312298840290590, fluidb_string<15> __sym__0__142765961647840520, fluidb_string<13> __sym__0___45_890986601021018327, fluidb_string<15> __sym__0__1448529583206195662, fluidb_string<21> __sym__0__2570343804236594778, unsigned __sym__0__1359507712116914494, fluidb_string<18> __sym__0__6011849395894522126, fluidb_string<9> __sym__0___45_7468776379460950944, fluidb_string<9> __sym__0___45_8794687169050633757, unsigned __sym__0___45_6203473563316140867, unsigned __sym__0___45_677371798856704365, fluidb_string<7> __sym__0__915473005346690518, unsigned __sym__0__6004818342855880465, unsigned __sym__0___45_7479113260177362442, unsigned __sym__0___45_7892661382758597666, unsigned __sym__0___45_5779290218296092888, unsigned __sym__0__39182466228154115, fluidb_string<15> __sym__0___45_6428352846240480422, fluidb_string<2> __sym__0__5771061490590798674, fluidb_string<2> __sym__0__5176922323272081847, fluidb_string<2> __sym__0__3439791191136335327, fluidb_string<2> __sym__0__9000735294801606101, unsigned __sym__0___45_4937244029492686830, int __sym__0___45_4662405569626189464, unsigned __sym__0__5296351127385819968, unsigned __sym__0__3188754882683964806, unsigned __sym__0__4353034828577292717, unsigned __sym__0___45_7269132014943876604, fluidb_string<21> __sym__0__2678892183314537005, unsigned __sym__0__4170008532883495879, fluidb_string<10> __sym__0___45_4375206156149434176, unsigned __sym__0__697181792988283792, double __sym__0__2425070607436168210, unsigned __sym__0___45_8099035356149320476, double __sym__0___45_1189046714177700278, unsigned __sym__0___45_7692406820437109602, unsigned __sym__0__4206086254272971481, double __sym__0___45_2483348542730046437, fluidb_string<13> __sym__0___45_762363192294171021) : sym__0__5373426235047388566(__sym__0__5373426235047388566), sym__0__2677149988632781646(__sym__0__2677149988632781646), sym__0__3230501947603702676(__sym__0__3230501947603702676), sym__0___45_7504312298840290590(__sym__0___45_7504312298840290590), sym__0__142765961647840520(__sym__0__142765961647840520), sym__0___45_890986601021018327(__sym__0___45_890986601021018327), sym__0__1448529583206195662(__sym__0__1448529583206195662), sym__0__2570343804236594778(__sym__0__2570343804236594778), sym__0__1359507712116914494(__sym__0__1359507712116914494), sym__0__6011849395894522126(__sym__0__6011849395894522126), sym__0___45_7468776379460950944(__sym__0___45_7468776379460950944), sym__0___45_8794687169050633757(__sym__0___45_8794687169050633757), sym__0___45_6203473563316140867(__sym__0___45_6203473563316140867), sym__0___45_677371798856704365(__sym__0___45_677371798856704365), sym__0__915473005346690518(__sym__0__915473005346690518), sym__0__6004818342855880465(__sym__0__6004818342855880465), sym__0___45_7479113260177362442(__sym__0___45_7479113260177362442), sym__0___45_7892661382758597666(__sym__0___45_7892661382758597666), sym__0___45_5779290218296092888(__sym__0___45_5779290218296092888), sym__0__39182466228154115(__sym__0__39182466228154115), sym__0___45_6428352846240480422(__sym__0___45_6428352846240480422), sym__0__5771061490590798674(__sym__0__5771061490590798674), sym__0__5176922323272081847(__sym__0__5176922323272081847), sym__0__3439791191136335327(__sym__0__3439791191136335327), sym__0__9000735294801606101(__sym__0__9000735294801606101), sym__0___45_4937244029492686830(__sym__0___45_4937244029492686830), sym__0___45_4662405569626189464(__sym__0___45_4662405569626189464), sym__0__5296351127385819968(__sym__0__5296351127385819968), sym__0__3188754882683964806(__sym__0__3188754882683964806), sym__0__4353034828577292717(__sym__0__4353034828577292717), sym__0___45_7269132014943876604(__sym__0___45_7269132014943876604), sym__0__2678892183314537005(__sym__0__2678892183314537005), sym__0__4170008532883495879(__sym__0__4170008532883495879), sym__0___45_4375206156149434176(__sym__0___45_4375206156149434176), sym__0__697181792988283792(__sym__0__697181792988283792), sym__0__2425070607436168210(__sym__0__2425070607436168210), sym__0___45_8099035356149320476(__sym__0___45_8099035356149320476), sym__0___45_1189046714177700278(__sym__0___45_1189046714177700278), sym__0___45_7692406820437109602(__sym__0___45_7692406820437109602), sym__0__4206086254272971481(__sym__0__4206086254272971481), sym__0___45_2483348542730046437(__sym__0___45_2483348542730046437), sym__0___45_762363192294171021(__sym__0___45_762363192294171021)
  {
  }
  Record14() 
  {
  }
  std::string show() const{
    std::stringstream o;
    o << sym__0__5373426235047388566 << " | " << arrToString(sym__0__2677149988632781646) << " | " << arrToString(sym__0__3230501947603702676) << " | " << arrToString(sym__0___45_7504312298840290590) << " | " << arrToString(sym__0__142765961647840520) << " | " << arrToString(sym__0___45_890986601021018327) << " | " << arrToString(sym__0__1448529583206195662) << " | " << arrToString(sym__0__2570343804236594778) << " | " << sym__0__1359507712116914494 << " | " << arrToString(sym__0__6011849395894522126) << " | " << arrToString(sym__0___45_7468776379460950944) << " | " << arrToString(sym__0___45_8794687169050633757) << " | " << sym__0___45_6203473563316140867 << " | " << sym__0___45_677371798856704365 << " | " << arrToString(sym__0__915473005346690518) << " | " << sym__0__6004818342855880465 << " | " << sym__0___45_7479113260177362442 << " | " << sym__0___45_7892661382758597666 << " | " << sym__0___45_5779290218296092888 << " | " << sym__0__39182466228154115 << " | " << arrToString(sym__0___45_6428352846240480422) << " | " << arrToString(sym__0__5771061490590798674) << " | " << arrToString(sym__0__5176922323272081847) << " | " << arrToString(sym__0__3439791191136335327) << " | " << arrToString(sym__0__9000735294801606101) << " | " << sym__0___45_4937244029492686830 << " | " << sym__0___45_4662405569626189464 << " | " << sym__0__5296351127385819968 << " | " << sym__0__3188754882683964806 << " | " << sym__0__4353034828577292717 << " | " << sym__0___45_7269132014943876604 << " | " << arrToString(sym__0__2678892183314537005) << " | " << sym__0__4170008532883495879 << " | " << arrToString(sym__0___45_4375206156149434176) << " | " << sym__0__697181792988283792 << " | " << sym__0__2425070607436168210 << " | " << sym__0___45_8099035356149320476 << " | " << sym__0___45_1189046714177700278 << " | " << sym__0___45_7692406820437109602 << " | " << sym__0__4206086254272971481 << " | " << sym__0___45_2483348542730046437 << " | " << arrToString(sym__0___45_762363192294171021);
    return o.str();
  }
  bool operator <(const Record14& otherRec) const{
    return (otherRec.sym__0__5373426235047388566 < sym__0__5373426235047388566 && (otherRec.sym__0__2677149988632781646 < sym__0__2677149988632781646 && (otherRec.sym__0__3230501947603702676 < sym__0__3230501947603702676 && (otherRec.sym__0___45_7504312298840290590 < sym__0___45_7504312298840290590 && (otherRec.sym__0__142765961647840520 < sym__0__142765961647840520 && (otherRec.sym__0___45_890986601021018327 < sym__0___45_890986601021018327 && (otherRec.sym__0__1448529583206195662 < sym__0__1448529583206195662 && (otherRec.sym__0__2570343804236594778 < sym__0__2570343804236594778 && (otherRec.sym__0__1359507712116914494 < sym__0__1359507712116914494 && (otherRec.sym__0__6011849395894522126 < sym__0__6011849395894522126 && (otherRec.sym__0___45_7468776379460950944 < sym__0___45_7468776379460950944 && (otherRec.sym__0___45_8794687169050633757 < sym__0___45_8794687169050633757 && (otherRec.sym__0___45_6203473563316140867 < sym__0___45_6203473563316140867 && (otherRec.sym__0___45_677371798856704365 < sym__0___45_677371798856704365 && (otherRec.sym__0__915473005346690518 < sym__0__915473005346690518 && (otherRec.sym__0__6004818342855880465 < sym__0__6004818342855880465 && (otherRec.sym__0___45_7479113260177362442 < sym__0___45_7479113260177362442 && (otherRec.sym__0___45_7892661382758597666 < sym__0___45_7892661382758597666 && (otherRec.sym__0___45_5779290218296092888 < sym__0___45_5779290218296092888 && (otherRec.sym__0__39182466228154115 < sym__0__39182466228154115 && (otherRec.sym__0___45_6428352846240480422 < sym__0___45_6428352846240480422 && (otherRec.sym__0__5771061490590798674 < sym__0__5771061490590798674 && (otherRec.sym__0__5176922323272081847 < sym__0__5176922323272081847 && (otherRec.sym__0__3439791191136335327 < sym__0__3439791191136335327 && (otherRec.sym__0__9000735294801606101 < sym__0__9000735294801606101 && (otherRec.sym__0___45_4937244029492686830 < sym__0___45_4937244029492686830 && (otherRec.sym__0___45_4662405569626189464 < sym__0___45_4662405569626189464 && (otherRec.sym__0__5296351127385819968 < sym__0__5296351127385819968 && (otherRec.sym__0__3188754882683964806 < sym__0__3188754882683964806 && (otherRec.sym__0__4353034828577292717 < sym__0__4353034828577292717 && (otherRec.sym__0___45_7269132014943876604 < sym__0___45_7269132014943876604 && (otherRec.sym__0__2678892183314537005 < sym__0__2678892183314537005 && (otherRec.sym__0__4170008532883495879 < sym__0__4170008532883495879 && (otherRec.sym__0___45_4375206156149434176 < sym__0___45_4375206156149434176 && (otherRec.sym__0__697181792988283792 < sym__0__697181792988283792 && (otherRec.sym__0__2425070607436168210 < sym__0__2425070607436168210 && (otherRec.sym__0___45_8099035356149320476 < sym__0___45_8099035356149320476 && (otherRec.sym__0___45_1189046714177700278 < sym__0___45_1189046714177700278 && (otherRec.sym__0___45_7692406820437109602 < sym__0___45_7692406820437109602 && (otherRec.sym__0__4206086254272971481 < sym__0__4206086254272971481 && (otherRec.sym__0___45_2483348542730046437 < sym__0___45_2483348542730046437 && otherRec.sym__0___45_762363192294171021 < sym__0___45_762363192294171021)))))))))))))))))))))))))))))))))))))))));
  }
  bool operator ==(const Record14& otherRec) const{
    return (otherRec.sym__0__5373426235047388566 == sym__0__5373426235047388566 && (otherRec.sym__0__2677149988632781646 == sym__0__2677149988632781646 && (otherRec.sym__0__3230501947603702676 == sym__0__3230501947603702676 && (otherRec.sym__0___45_7504312298840290590 == sym__0___45_7504312298840290590 && (otherRec.sym__0__142765961647840520 == sym__0__142765961647840520 && (otherRec.sym__0___45_890986601021018327 == sym__0___45_890986601021018327 && (otherRec.sym__0__1448529583206195662 == sym__0__1448529583206195662 && (otherRec.sym__0__2570343804236594778 == sym__0__2570343804236594778 && (otherRec.sym__0__1359507712116914494 == sym__0__1359507712116914494 && (otherRec.sym__0__6011849395894522126 == sym__0__6011849395894522126 && (otherRec.sym__0___45_7468776379460950944 == sym__0___45_7468776379460950944 && (otherRec.sym__0___45_8794687169050633757 == sym__0___45_8794687169050633757 && (otherRec.sym__0___45_6203473563316140867 == sym__0___45_6203473563316140867 && (otherRec.sym__0___45_677371798856704365 == sym__0___45_677371798856704365 && (otherRec.sym__0__915473005346690518 == sym__0__915473005346690518 && (otherRec.sym__0__6004818342855880465 == sym__0__6004818342855880465 && (otherRec.sym__0___45_7479113260177362442 == sym__0___45_7479113260177362442 && (otherRec.sym__0___45_7892661382758597666 == sym__0___45_7892661382758597666 && (otherRec.sym__0___45_5779290218296092888 == sym__0___45_5779290218296092888 && (otherRec.sym__0__39182466228154115 == sym__0__39182466228154115 && (otherRec.sym__0___45_6428352846240480422 == sym__0___45_6428352846240480422 && (otherRec.sym__0__5771061490590798674 == sym__0__5771061490590798674 && (otherRec.sym__0__5176922323272081847 == sym__0__5176922323272081847 && (otherRec.sym__0__3439791191136335327 == sym__0__3439791191136335327 && (otherRec.sym__0__9000735294801606101 == sym__0__9000735294801606101 && (otherRec.sym__0___45_4937244029492686830 == sym__0___45_4937244029492686830 && (otherRec.sym__0___45_4662405569626189464 == sym__0___45_4662405569626189464 && (otherRec.sym__0__5296351127385819968 == sym__0__5296351127385819968 && (otherRec.sym__0__3188754882683964806 == sym__0__3188754882683964806 && (otherRec.sym__0__4353034828577292717 == sym__0__4353034828577292717 && (otherRec.sym__0___45_7269132014943876604 == sym__0___45_7269132014943876604 && (otherRec.sym__0__2678892183314537005 == sym__0__2678892183314537005 && (otherRec.sym__0__4170008532883495879 == sym__0__4170008532883495879 && (otherRec.sym__0___45_4375206156149434176 == sym__0___45_4375206156149434176 && (otherRec.sym__0__697181792988283792 == sym__0__697181792988283792 && (otherRec.sym__0__2425070607436168210 == sym__0__2425070607436168210 && (otherRec.sym__0___45_8099035356149320476 == sym__0___45_8099035356149320476 && (otherRec.sym__0___45_1189046714177700278 == sym__0___45_1189046714177700278 && (otherRec.sym__0___45_7692406820437109602 == sym__0___45_7692406820437109602 && (otherRec.sym__0__4206086254272971481 == sym__0__4206086254272971481 && (otherRec.sym__0___45_2483348542730046437 == sym__0___45_2483348542730046437 && otherRec.sym__0___45_762363192294171021 == sym__0___45_762363192294171021)))))))))))))))))))))))))))))))))))))))));
  }
  bool operator !=(const Record14& otherRec) const{
    return (otherRec.sym__0__5373426235047388566 != sym__0__5373426235047388566 || (otherRec.sym__0__2677149988632781646 != sym__0__2677149988632781646 || (otherRec.sym__0__3230501947603702676 != sym__0__3230501947603702676 || (otherRec.sym__0___45_7504312298840290590 != sym__0___45_7504312298840290590 || (otherRec.sym__0__142765961647840520 != sym__0__142765961647840520 || (otherRec.sym__0___45_890986601021018327 != sym__0___45_890986601021018327 || (otherRec.sym__0__1448529583206195662 != sym__0__1448529583206195662 || (otherRec.sym__0__2570343804236594778 != sym__0__2570343804236594778 || (otherRec.sym__0__1359507712116914494 != sym__0__1359507712116914494 || (otherRec.sym__0__6011849395894522126 != sym__0__6011849395894522126 || (otherRec.sym__0___45_7468776379460950944 != sym__0___45_7468776379460950944 || (otherRec.sym__0___45_8794687169050633757 != sym__0___45_8794687169050633757 || (otherRec.sym__0___45_6203473563316140867 != sym__0___45_6203473563316140867 || (otherRec.sym__0___45_677371798856704365 != sym__0___45_677371798856704365 || (otherRec.sym__0__915473005346690518 != sym__0__915473005346690518 || (otherRec.sym__0__6004818342855880465 != sym__0__6004818342855880465 || (otherRec.sym__0___45_7479113260177362442 != sym__0___45_7479113260177362442 || (otherRec.sym__0___45_7892661382758597666 != sym__0___45_7892661382758597666 || (otherRec.sym__0___45_5779290218296092888 != sym__0___45_5779290218296092888 || (otherRec.sym__0__39182466228154115 != sym__0__39182466228154115 || (otherRec.sym__0___45_6428352846240480422 != sym__0___45_6428352846240480422 || (otherRec.sym__0__5771061490590798674 != sym__0__5771061490590798674 || (otherRec.sym__0__5176922323272081847 != sym__0__5176922323272081847 || (otherRec.sym__0__3439791191136335327 != sym__0__3439791191136335327 || (otherRec.sym__0__9000735294801606101 != sym__0__9000735294801606101 || (otherRec.sym__0___45_4937244029492686830 != sym__0___45_4937244029492686830 || (otherRec.sym__0___45_4662405569626189464 != sym__0___45_4662405569626189464 || (otherRec.sym__0__5296351127385819968 != sym__0__5296351127385819968 || (otherRec.sym__0__3188754882683964806 != sym__0__3188754882683964806 || (otherRec.sym__0__4353034828577292717 != sym__0__4353034828577292717 || (otherRec.sym__0___45_7269132014943876604 != sym__0___45_7269132014943876604 || (otherRec.sym__0__2678892183314537005 != sym__0__2678892183314537005 || (otherRec.sym__0__4170008532883495879 != sym__0__4170008532883495879 || (otherRec.sym__0___45_4375206156149434176 != sym__0___45_4375206156149434176 || (otherRec.sym__0__697181792988283792 != sym__0__697181792988283792 || (otherRec.sym__0__2425070607436168210 != sym__0__2425070607436168210 || (otherRec.sym__0___45_8099035356149320476 != sym__0___45_8099035356149320476 || (otherRec.sym__0___45_1189046714177700278 != sym__0___45_1189046714177700278 || (otherRec.sym__0___45_7692406820437109602 != sym__0___45_7692406820437109602 || (otherRec.sym__0__4206086254272971481 != sym__0__4206086254272971481 || (otherRec.sym__0___45_2483348542730046437 != sym__0___45_2483348542730046437 || otherRec.sym__0___45_762363192294171021 != sym__0___45_762363192294171021)))))))))))))))))))))))))))))))))))))))));
  }
  unsigned sym__0__5373426235047388566;
  fluidb_string<18> sym__0__2677149988632781646;
  fluidb_string<40> sym__0__3230501947603702676;
  fluidb_string<11> sym__0___45_7504312298840290590;
  fluidb_string<15> sym__0__142765961647840520;
  fluidb_string<13> sym__0___45_890986601021018327;
  fluidb_string<15> sym__0__1448529583206195662;
  fluidb_string<21> sym__0__2570343804236594778;
  unsigned sym__0__1359507712116914494;
  fluidb_string<18> sym__0__6011849395894522126;
  fluidb_string<9> sym__0___45_7468776379460950944;
  fluidb_string<9> sym__0___45_8794687169050633757;
  unsigned sym__0___45_6203473563316140867;
  unsigned sym__0___45_677371798856704365;
  fluidb_string<7> sym__0__915473005346690518;
  unsigned sym__0__6004818342855880465;
  unsigned sym__0___45_7479113260177362442;
  unsigned sym__0___45_7892661382758597666;
  unsigned sym__0___45_5779290218296092888;
  unsigned sym__0__39182466228154115;
  fluidb_string<15> sym__0___45_6428352846240480422;
  fluidb_string<2> sym__0__5771061490590798674;
  fluidb_string<2> sym__0__5176922323272081847;
  fluidb_string<2> sym__0__3439791191136335327;
  fluidb_string<2> sym__0__9000735294801606101;
  unsigned sym__0___45_4937244029492686830;
  int sym__0___45_4662405569626189464;
  unsigned sym__0__5296351127385819968;
  unsigned sym__0__3188754882683964806;
  unsigned sym__0__4353034828577292717;
  unsigned sym__0___45_7269132014943876604;
  fluidb_string<21> sym__0__2678892183314537005;
  unsigned sym__0__4170008532883495879;
  fluidb_string<10> sym__0___45_4375206156149434176;
  unsigned sym__0__697181792988283792;
  double sym__0__2425070607436168210;
  unsigned sym__0___45_8099035356149320476;
  double sym__0___45_1189046714177700278;
  unsigned sym__0___45_7692406820437109602;
  unsigned sym__0__4206086254272971481;
  double sym__0___45_2483348542730046437;
  fluidb_string<13> sym__0___45_762363192294171021;
 private:
};


class Record42 {
 public:
  Record42(fluidb_string<11> __sortElem0, fluidb_string<16> __sortElem1, unsigned __sortElem2) : sortElem0(__sortElem0), sortElem1(__sortElem1), sortElem2(__sortElem2)
  {
  }
  Record42() 
  {
  }
  std::string show() const{
    std::stringstream o;
    o << arrToString(sortElem0) << " | " << arrToString(sortElem1) << " | " << sortElem2;
    return o.str();
  }
  bool operator <(const Record42& otherRec) const{
    return (otherRec.sortElem0 < sortElem0 && (otherRec.sortElem1 < sortElem1 && otherRec.sortElem2 < sortElem2));
  }
  bool operator ==(const Record42& otherRec) const{
    return (otherRec.sortElem0 == sortElem0 && (otherRec.sortElem1 == sortElem1 && otherRec.sortElem2 == sortElem2));
  }
  bool operator !=(const Record42& otherRec) const{
    return (otherRec.sortElem0 != sortElem0 || (otherRec.sortElem1 != sortElem1 || otherRec.sortElem2 != sortElem2));
  }
  fluidb_string<11> sortElem0;
  fluidb_string<16> sortElem1;
  unsigned sortElem2;
 private:
};


class Record25 {
 public:
  Record25(unsigned __sym__0___45_9117911789383871612, fluidb_string<25> __sym__0___45_1547112764757372609, fluidb_string<40> __sym__0___45_8663957751614366179, fluidb_string<16> __sym__0__1466641425010216931, fluidb_string<16> __sym__0__3672857626658041553, fluidb_string<13> __sym__0___45_3362440237381592032, fluidb_string<15> __sym__0___45_6631364176934158657) : sym__0___45_9117911789383871612(__sym__0___45_9117911789383871612), sym__0___45_1547112764757372609(__sym__0___45_1547112764757372609), sym__0___45_8663957751614366179(__sym__0___45_8663957751614366179), sym__0__1466641425010216931(__sym__0__1466641425010216931), sym__0__3672857626658041553(__sym__0__3672857626658041553), sym__0___45_3362440237381592032(__sym__0___45_3362440237381592032), sym__0___45_6631364176934158657(__sym__0___45_6631364176934158657)
  {
  }
  Record25() 
  {
  }
  std::string show() const{
    std::stringstream o;
    o << sym__0___45_9117911789383871612 << " | " << arrToString(sym__0___45_1547112764757372609) << " | " << arrToString(sym__0___45_8663957751614366179) << " | " << arrToString(sym__0__1466641425010216931) << " | " << arrToString(sym__0__3672857626658041553) << " | " << arrToString(sym__0___45_3362440237381592032) << " | " << arrToString(sym__0___45_6631364176934158657);
    return o.str();
  }
  bool operator <(const Record25& otherRec) const{
    return (otherRec.sym__0___45_9117911789383871612 < sym__0___45_9117911789383871612 && (otherRec.sym__0___45_1547112764757372609 < sym__0___45_1547112764757372609 && (otherRec.sym__0___45_8663957751614366179 < sym__0___45_8663957751614366179 && (otherRec.sym__0__1466641425010216931 < sym__0__1466641425010216931 && (otherRec.sym__0__3672857626658041553 < sym__0__3672857626658041553 && (otherRec.sym__0___45_3362440237381592032 < sym__0___45_3362440237381592032 && otherRec.sym__0___45_6631364176934158657 < sym__0___45_6631364176934158657))))));
  }
  bool operator ==(const Record25& otherRec) const{
    return (otherRec.sym__0___45_9117911789383871612 == sym__0___45_9117911789383871612 && (otherRec.sym__0___45_1547112764757372609 == sym__0___45_1547112764757372609 && (otherRec.sym__0___45_8663957751614366179 == sym__0___45_8663957751614366179 && (otherRec.sym__0__1466641425010216931 == sym__0__1466641425010216931 && (otherRec.sym__0__3672857626658041553 == sym__0__3672857626658041553 && (otherRec.sym__0___45_3362440237381592032 == sym__0___45_3362440237381592032 && otherRec.sym__0___45_6631364176934158657 == sym__0___45_6631364176934158657))))));
  }
  bool operator !=(const Record25& otherRec) const{
    return (otherRec.sym__0___45_9117911789383871612 != sym__0___45_9117911789383871612 || (otherRec.sym__0___45_1547112764757372609 != sym__0___45_1547112764757372609 || (otherRec.sym__0___45_8663957751614366179 != sym__0___45_8663957751614366179 || (otherRec.sym__0__1466641425010216931 != sym__0__1466641425010216931 || (otherRec.sym__0__3672857626658041553 != sym__0__3672857626658041553 || (otherRec.sym__0___45_3362440237381592032 != sym__0___45_3362440237381592032 || otherRec.sym__0___45_6631364176934158657 != sym__0___45_6631364176934158657))))));
  }
  unsigned sym__0___45_9117911789383871612;
  fluidb_string<25> sym__0___45_1547112764757372609;
  fluidb_string<40> sym__0___45_8663957751614366179;
  fluidb_string<16> sym__0__1466641425010216931;
  fluidb_string<16> sym__0__3672857626658041553;
  fluidb_string<13> sym__0___45_3362440237381592032;
  fluidb_string<15> sym__0___45_6631364176934158657;
 private:
};


class CallableClass27 {
 public:
  Record26 operator()(const Record24& record22, const Record25& record23) {
    return Record26(record22.sym__0__5047421274045357113, record22.sym__0__1111371532348373905, record22.sym__0__3616315983793812415, record22.sym__0__5478499544478842365, record22.sym__0__9198814011305918491, record22.sym__0__5184064682442841190, record22.sym__0__8776819689660585745, record22.sym__0__3880509548823276917, record22.sym__0___45_7245943137499681887, record22.sym__0___45_2295638738224715823, record22.sym__0__7231637917665667987, record22.sym__0___45_8975225596959663088, record22.sym__0__3613870501759166498, record22.sym__0__1570651575008030560, record22.sym__0__115945876907898361, record22.sym__0__7964449538584066510, record22.sym__0__1660564563630425049, record22.sym__0___45_8849919160064307967, record22.sym__0__4389067787166632955, record22.sym__0__8182303437242608, record22.sym__0__6576599429404095093, record22.sym__0__7143354719373501837, record22.sym__0___45_2048743282533748660, record22.sym__0___45_5050379460643539596, record22.sym__0___45_5591405934841628166, record22.sym__0__7237342047573386957, record22.sym__0___45_786415910032980037, record22.sym__0__8257693010788225203, record22.sym__0__1524874236739768329, record22.sym__0__2230266097477937458, record22.sym__0___45_7086886507829122289, record22.sym__0___45_6002386514329473358, record22.sym__0___45_678242321222098884, record22.sym__0___45_8995561222449159373, record22.sym__0___45_4113611234327906717, record22.sym__0__1861270880433093325, record22.sym__0___45_5367025412787902929, record22.sym__0___45_5000658247033003707, record22.sym__0___45_8196327343032528319, record22.sym__0__2373859223190952182, record22.sym__0__3931679180353468680, record22.sym__0___45_1587807567217389696, record23.sym__0___45_9117911789383871612, record23.sym__0___45_1547112764757372609, record23.sym__0___45_8663957751614366179, record23.sym__0__1466641425010216931, record23.sym__0__3672857626658041553, record23.sym__0___45_3362440237381592032, record23.sym__0___45_6631364176934158657);
  }
  typedef Record26 Codomain;
  typedef Record24 Domain0;
  typedef Record25 Domain1;
 private:
};


class CallableClass33 {
 public:
  bool operator()(const Record26& record32) {
    return like(record32.sym__0___45_6539711280059219527, "UNITED STATES");
  }
  typedef bool Codomain;
  typedef Record26 Domain0;
 private:
};


class CallableClass46 {
 public:
  Record45 operator()(const Record35& record44) {
    return Record45(record44.sym__0___45_9000295950570013541, (-(record44.sym__0___45_4437040401381761565)));
  }
  typedef Record45 Codomain;
  typedef Record35 Domain0;
 private:
};


class CallableClass41 {
 public:
  Record35 operator()(const Record37& record34) {
    return Record35(vAggrFirst36(record34.sym__0__7034531493904066722), vAggrFirst38(record34.sym__0___45_4967417594431087118), vAggrFirst39(record34.sym__0__5190436275755771085), vAggrSum40(record34.sym__0___45_5676998185488268146));
  }
  typedef Record35 Codomain;
  typedef Record37 Domain0;
 private:
  AggrFirst<fluidb_string<11>> vAggrFirst36;
  AggrFirst<fluidb_string<16>> vAggrFirst38;
  AggrFirst<unsigned> vAggrFirst39;
  AggrSum<unsigned> vAggrSum40;
};


class CallableClass19 {
 public:
  Record6 operator()(const Record4& record18) {
    return Record6(record18.sym__0___45_6623407408063066704);
  }
  typedef Record6 Codomain;
  typedef Record4 Domain0;
 private:
};


class CallableClass5 {
 public:
  Record4 operator()(const Record2& record0, const Record3& record1) {
    return Record4(record0.sym__0__2037864888707786451, record0.sym__0__8533656712666151747, record0.sym__0__646314041574508429, record0.sym__0__6064137978327902054, record0.sym__0__3754157776500852496, record0.sym__0__6284345160241949046, record0.sym__0___45_773692805971570325, record0.sym__0___45_8399474032083007524, record0.sym__0___45_2038947427357444789, record0.sym__0__6071994954612827827, record0.sym__0__7742515703067448213, record0.sym__0__5201219213304227654, record0.sym__0___45_5896625796158057241, record0.sym__0___45_1108504872221226081, record0.sym__0__1055103969674359346, record0.sym__0__9115626546918942554, record0.sym__0___45_6850413444013389848, record1.sym__0___45_7574074018531922998, record1.sym__0__1125464382786937920, record1.sym__0___45_8257174981563598792, record1.sym__0__957746932829998382, record1.sym__0__934137931677987637, record1.sym__0___45_7332894783442362324, record1.sym__0__8974811218372806325, record1.sym__0___45_5217562530132451785, record1.sym__0__7851147553396318904, record1.sym__0___45_4975505511391694456, record1.sym__0___45_7249986409969561654, record1.sym__0__4671626969570181580, record1.sym__0___45_3666121704283105054, record1.sym__0__5495011930072844518, record1.sym__0___45_4423447118092167055, record1.sym__0___45_1608082021099887893, record1.sym__0__1584187396639360899);
  }
  typedef Record4 Codomain;
  typedef Record2 Domain0;
  typedef Record3 Domain1;
 private:
};


class CallableClass10 {
 public:
  Record6 operator()(const Record3& record9) {
    return Record6(record9.sym__0___45_7332894783442362324);
  }
  typedef Record6 Codomain;
  typedef Record3 Domain0;
 private:
};


class CallableClass17 {
 public:
  Record6 operator()(const Record13& record16) {
    return Record6(record16.sym__0__59163526776084807);
  }
  typedef Record6 Codomain;
  typedef Record13 Domain0;
 private:
};


class CallableClass8 {
 public:
  Record6 operator()(const Record2& record7) {
    return Record6(record7.sym__0__2037864888707786451);
  }
  typedef Record6 Codomain;
  typedef Record2 Domain0;
 private:
};


class CallableClass29 {
 public:
  Record6 operator()(const Record24& record28) {
    return Record6(record28.sym__0__2230266097477937458);
  }
  typedef Record6 Codomain;
  typedef Record24 Domain0;
 private:
};


class CallableClass15 {
 public:
  Record14 operator()(const Record13& record11, const Record4& record12) {
    return Record14(record11.sym__0__59163526776084807, record11.sym__0___45_1313357857405786385, record11.sym__0__1337312907475566789, record11.sym__0__8014013609240026595, record11.sym__0___45_4888925151068446247, record11.sym__0__661408193145534136, record11.sym__0___45_7159405632382799505, record11.sym__0___45_7793359246716293237, record12.sym__0___45_3961143035674407474, record12.sym__0___45_6251899802584687138, record12.sym__0__7895704682370371792, record12.sym__0___45_4486276699369081973, record12.sym__0__1119005997298974989, record12.sym__0__3623076037790620667, record12.sym__0___45_369211045765545994, record12.sym__0___45_2252349090140989903, record12.sym__0___45_6519715028980934506, record12.sym__0__6988144115678218478, record12.sym__0__1168585672581702408, record12.sym__0___45_1566345155802505557, record12.sym__0___45_3812637469976556790, record12.sym__0___45_2398128448016703502, record12.sym__0__5574729781191990975, record12.sym__0___45_5962954882039921225, record12.sym__0___45_7276734914968453131, record12.sym__0__5341165382232817970, record12.sym__0__5806605655987033032, record12.sym__0___45_6623407408063066704, record12.sym__0___45_1670026162273154778, record12.sym__0__2289386367904588797, record12.sym__0__8025829587274267860, record12.sym__0__454237065112775549, record12.sym__0__608217599158647375, record12.sym__0__4347069016709593136, record12.sym__0__4553650632168714688, record12.sym__0__586349573025064242, record12.sym__0__144523031940788660, record12.sym__0__2942207309637238010, record12.sym__0__1782085603058736686, record12.sym__0__3001704397998344329, record12.sym__0___45_2662583778072919661, record12.sym__0__8853539013824041307);
  }
  typedef Record14 Codomain;
  typedef Record13 Domain0;
  typedef Record4 Domain1;
 private:
};


class CallableClass31 {
 public:
  Record6 operator()(const Record25& record30) {
    return Record6(record30.sym__0___45_9117911789383871612);
  }
  typedef Record6 Codomain;
  typedef Record25 Domain0;
 private:
};


class CallableClass43 {
 public:
  Record42 operator()(const Record37& record34) {
    return Record42(record34.sym__0__7034531493904066722, record34.sym__0___45_4967417594431087118, record34.sym__0__5190436275755771085);
  }
  typedef Record42 Codomain;
  typedef Record37 Domain0;
 private:
};


class CallableClass21 {
 public:
  bool operator()(const Record14& record20) {
    return (((record20.sym__0___45_6203473563316140867 >= 1992) && (record20.sym__0___45_6203473563316140867 <= 1997)) && like(record20.sym__0__142765961647840520, "UNITED STATES"));
  }
  typedef bool Codomain;
  typedef Record14 Domain0;
 private:
};






int main() {
  // ForwardTrigger: (Just 
  //   (Left 
  //     [
  //      QJoin 
  //         (P0 
  //           (R2 REq 
  //               (R0 (E0 (ESym "lo_orderdate"))) 
  //               (R0 (E0 (ESym "d_datekey")))))
  std::cout << "ForwardTrigger: (Just \n  (Left \n    [\n     QJoin \n        (P0 \n          (R2 REq \n              (R0 (E0 (ESym \"lo_orderdate\"))) \n              (R0 (E0 (ESym \"d_datekey\")))))\n    ]))" << std::endl;
  {
    auto operation = mkEquiJoin<CallableClass8, CallableClass10, CallableClass5>(Just<const std::string>("/tmp/fluidb_store/data6.dat"), Just<const std::string>("/tmp/fluidb_store/data5.dat"), Just<const std::string>("/tmp/fluidb_store/data7.dat"), "/run/user/1000/fluidb-data/date.dat", "/run/user/1000/fluidb-data/lineorder.dat");
    operation.run();
    operation.print_output(10);
  }
  // ForwardTrigger: (Just 
  //   (Left 
  //     [
  //      QJoin 
  //         (P0 
  //           (R2 REq 
  //               (R0 (E0 (ESym "lo_custkey"))) 
  //               (R0 (E0 (ESym "c_custkey")))))
  std::cout << "ForwardTrigger: (Just \n  (Left \n    [\n     QJoin \n        (P0 \n          (R2 REq \n              (R0 (E0 (ESym \"lo_custkey\"))) \n              (R0 (E0 (ESym \"c_custkey\")))))\n    ]))" << std::endl;
  {
    auto operation = mkEquiJoin<CallableClass17, CallableClass19, CallableClass15>(Just<const std::string>("/tmp/fluidb_store/data11.dat"), Just<const std::string>("/tmp/fluidb_store/data10.dat"), Just<const std::string>("/tmp/fluidb_store/data12.dat"), "/run/user/1000/fluidb-data/customer.dat", "/tmp/fluidb_store/data6.dat");
    operation.run();
    operation.print_output(10);
  }
  // ForwardTrigger: (Just 
  //   (Right 
  //     [
  //      QSel 
  //         (P2 
  //           PAnd 
  //           (P2 
  //             PAnd 
  //             (P0 
  //               (R2 RGe (R0 (E0 (ESym "d_year"))) (R0 (E0 (EInt 1992))))) 
  //             (P0 
  //               (R2 RLe (R0 (E0 (ESym "d_year"))) (R0 (E0 (EInt 1997)))))) 
  //           (P0 
  //             (R2 RLike 
  //                 (R0 (E0 (ESym "c_nation"))) 
  //                 (R0 (E0 (EString "UNITED STATES"))))))
  std::cout << "ForwardTrigger: (Just \n  (Right \n    [\n     QSel \n        (P2 \n          PAnd \n          (P2 \n            PAnd \n            (P0 \n              (R2 RGe (R0 (E0 (ESym \"d_year\"))) (R0 (E0 (EInt 1992))))) \n            (P0 \n              (R2 RLe (R0 (E0 (ESym \"d_year\"))) (R0 (E0 (EInt 1997)))))) \n          (P0 \n            (R2 RLike \n                (R0 (E0 (ESym \"c_nation\"))) \n                (R0 (E0 (EString \"UNITED STATES\"))))))\n    ]))" << std::endl;
  {
    auto operation = mkSelect<CallableClass21>(Just<const std::string>("/tmp/fluidb_store/data22.dat"), Just<const std::string>("/tmp/fluidb_store/data23.dat"), "/tmp/fluidb_store/data11.dat");
    operation.run();
    operation.print_output(10);
  }
  // ForwardTrigger: (Just 
  //   (Left 
  //     [
  //      QJoin 
  //         (P0 
  //           (R2 REq 
  //               (R0 (E0 (ESym "lo_suppkey"))) 
  //               (R0 (E0 (ESym "s_suppkey")))))
  std::cout << "ForwardTrigger: (Just \n  (Left \n    [\n     QJoin \n        (P0 \n          (R2 REq \n              (R0 (E0 (ESym \"lo_suppkey\"))) \n              (R0 (E0 (ESym \"s_suppkey\")))))\n    ]))" << std::endl;
  {
    auto operation = mkEquiJoin<CallableClass29, CallableClass31, CallableClass27>(Just<const std::string>("/tmp/fluidb_store/data39.dat"), Just<const std::string>("/tmp/fluidb_store/data38.dat"), Just<const std::string>("/tmp/fluidb_store/data40.dat"), "/tmp/fluidb_store/data22.dat", "/run/user/1000/fluidb-data/supplier.dat");
    operation.run();
    operation.print_output(10);
  }
  // Delete: (Q2 
  //   (QLeftAntijoin 
  //     (P0 
  //       (R2 REq 
  //           (R0 (E0 (ESym "lo_orderdate"))) 
  //           (R0 (E0 (ESym "d_datekey")))))) 
  //   (Q0 (TSymbol "date")) 
  std::cout << "Delete: N5" << std::endl;
  deleteFile("/tmp/fluidb_store/data5.dat");
  // Delete: (Q2 
  //   (QRightAntijoin 
  //     (P0 
  //       (R2 REq 
  //           (R0 (E0 (ESym "lo_orderdate"))) 
  //           (R0 (E0 (ESym "d_datekey")))))) 
  //   (Q0 (TSymbol "date")) 
  std::cout << "Delete: N7" << std::endl;
  deleteFile("/tmp/fluidb_store/data7.dat");
  // Delete: (Q2 
  //   (QLeftAntijoin 
  //     (P0 
  //       (R2 REq 
  //           (R0 (E0 (ESym "lo_suppkey"))) 
  //           (R0 (E0 (ESym "s_suppkey")))))) 
  //   (S 
  //     (P0 
  //       (R2 RLike 
  //           (R0 (E0 (ESym "c_nation"))) 
  //           (R0 (E0 (EString "UNITED STATES"))))) 
  //     (J 
  //       (P0 
  //         (R2 REq 
  //             (R0 (E0 (ESym "lo_custkey"))) 
  //             (R0 (E0 (ESym "c_custkey"))))) 
  //       (Q0 (TSymbol "customer")) 
  //       (S 
  //         (P2 PAnd 
  //             (P0 (R2 RGe (R0 (E0 (ESym "d_year"))) (R0 (E0 (EInt 1992))))) 
  //             (P0 (R2 RLe (R0 (E0 (ESym "d_year"))) (R0 (E0 (EInt 1997)))))) 
  //         (J 
  //           (P0 
  //             (R2 REq 
  //                 (R0 (E0 (ESym "lo_orderdate"))) 
  //                 (R0 (E0 (ESym "d_datekey"))))) 
  //           (Q0 (TSymbol "date")) 
  //           (Q0 (TSymbol "lineorder")))))) 
  std::cout << "Delete: N38" << std::endl;
  deleteFile("/tmp/fluidb_store/data38.dat");
  std::cout << "Delete: N3" << std::endl;
  deleteFile("/run/user/1000/fluidb-data/supplier.dat");
  // Delete: (S 
  //   (P2 
  //     PAnd 
  //     (P2 PAnd 
  //         (P0 (R2 RGe (R0 (E0 (ESym "d_year"))) (R0 (E0 (EInt 1992))))) 
  //         (P0 (R2 RLe (R0 (E0 (ESym "d_year"))) (R0 (E0 (EInt 1997)))))) 
  //     (P0 
  //       (R2 RLike 
  //           (R0 (E0 (ESym "c_nation"))) 
  //           (R0 (E0 (EString "UNITED STATES")))))) 
  //   (J 
  //     (P0 
  //       (R2 REq 
  //           (R0 (E0 (ESym "lo_custkey"))) 
  //           (R0 (E0 (ESym "c_custkey"))))) 
  //     (Q0 (TSymbol "customer")) 
  //     (J 
  //       (P0 
  //         (R2 REq 
  //             (R0 (E0 (ESym "lo_orderdate"))) 
  //             (R0 (E0 (ESym "d_datekey"))))) 
  //       (Q0 (TSymbol "date")) 
  std::cout << "Delete: N22" << std::endl;
  deleteFile("/tmp/fluidb_store/data22.dat");
  // Delete: (Q2 
  //   (QLeftAntijoin 
  //     (P0 
  //       (R2 REq 
  //           (R0 (E0 (ESym "lo_custkey"))) 
  //           (R0 (E0 (ESym "c_custkey")))))) 
  //   (Q0 (TSymbol "customer")) 
  //   (J 
  //     (P0 
  //       (R2 REq 
  //           (R0 (E0 (ESym "lo_orderdate"))) 
  //           (R0 (E0 (ESym "d_datekey"))))) 
  //     (Q0 (TSymbol "date")) 
  std::cout << "Delete: N10" << std::endl;
  deleteFile("/tmp/fluidb_store/data10.dat");
  // Delete: (Q2 
  //   (QRightAntijoin 
  //     (P0 
  //       (R2 REq 
  //           (R0 (E0 (ESym "lo_custkey"))) 
  //           (R0 (E0 (ESym "c_custkey")))))) 
  //   (Q0 (TSymbol "customer")) 
  //   (J 
  //     (P0 
  //       (R2 REq 
  //           (R0 (E0 (ESym "lo_orderdate"))) 
  //           (R0 (E0 (ESym "d_datekey"))))) 
  //     (Q0 (TSymbol "date")) 
  std::cout << "Delete: N12" << std::endl;
  deleteFile("/tmp/fluidb_store/data12.dat");
  // Delete: (J 
  //   (P0 
  //     (R2 REq (R0 (E0 (ESym "lo_custkey"))) (R0 (E0 (ESym "c_custkey"))))) 
  //   (Q0 (TSymbol "customer")) 
  //   (J 
  //     (P0 
  //       (R2 REq 
  //           (R0 (E0 (ESym "lo_orderdate"))) 
  //           (R0 (E0 (ESym "d_datekey"))))) 
  //     (Q0 (TSymbol "date")) 
  std::cout << "Delete: N11" << std::endl;
  deleteFile("/tmp/fluidb_store/data11.dat");
  // ForwardTrigger: (Just 
  //   (Right 
  //     [
  //      QSel 
  //         (P0 
  //           (R2 RLike 
  //               (R0 (E0 (ESym "s_nation"))) 
  //               (R0 (E0 (EString "UNITED STATES")))))
  std::cout << "ForwardTrigger: (Just \n  (Right \n    [\n     QSel \n        (P0 \n          (R2 RLike \n              (R0 (E0 (ESym \"s_nation\"))) \n              (R0 (E0 (EString \"UNITED STATES\")))))\n    ]))" << std::endl;
  {
    auto operation = mkSelect<CallableClass33>(Just<const std::string>("/tmp/fluidb_store/data20.dat"), Just<const std::string>("/tmp/fluidb_store/data43.dat"), "/tmp/fluidb_store/data39.dat");
    operation.run();
    operation.print_output(10);
  }
  // ForwardTrigger: (Just 
  //   (Right 
  //     [
  //      QGroup 
  //         [(ESym "c_city",E0 (NAggr AggrFirst (E0 (ESym "c_city")))),
  //          (ESym "s_city",E0 (NAggr AggrFirst (E0 (ESym "s_city")))),
  //          (ESym "d_year",E0 (NAggr AggrFirst (E0 (ESym "d_year")))),
  //          (ESym "revenue",E0 (NAggr AggrSum (E0 (ESym "lo_revenue"))))] 
  //         [E0 (ESym "c_city"),E0 (ESym "s_city"),E0 (ESym "d_year")]
  std::cout << "ForwardTrigger: (Just \n  (Right \n    [\n     QGroup \n        [(ESym \"c_city\",E0 (NAggr AggrFirst (E0 (ESym \"c_city\")))),\n         (ESym \"s_city\",E0 (NAggr AggrFirst (E0 (ESym \"s_city\")))),\n         (ESym \"d_year\",E0 (NAggr AggrFirst (E0 (ESym \"d_year\")))),\n         (ESym \"revenue\",E0 (NAggr AggrSum (E0 (ESym \"lo_revenue\"))))] \n        [E0 (ESym \"c_city\"),E0 (ESym \"s_city\"),E0 (ESym \"d_year\")]\n    ]))" << std::endl;
  {
    auto operation = mkAggregation<CallableClass41, CallableClass43>(Just<const std::string>("/tmp/fluidb_store/data65.dat"), Just<const std::string>("/tmp/fluidb_store/data20.dat"), "/tmp/fluidb_store/data20.dat");
    operation.run();
    operation.print_output(10);
  }
  // ForwardTrigger: (Just 
  std::cout << "ForwardTrigger: (Just \n  (Right [QSort [E0 (ESym \"d_year\"),E1 ENeg (E0 (ESym \"revenue\"))]]))" << std::endl;
  {
    auto operation = mkSort<CallableClass46>(Just<const std::string>("/tmp/fluidb_store/data66.dat"), Just<const std::string>("/tmp/fluidb_store/data65.dat"), "/tmp/fluidb_store/data65.dat");
    operation.run();
    operation.print_output(10);
  }
  report_counters();
  return 0;
}
