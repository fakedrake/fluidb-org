#include <array>

#include <string>

#include <codegen.hh>
class Record13 {
 public:
  Record13(unsigned __sym__0__7178003535380331304, fluidb_string<55> __sym__0___45_7020257275696364520, fluidb_string<25> __sym__0___45_6307179734719967033, fluidb_string<7> __sym__0__4568304886257136061, fluidb_string<10> __sym__0___45_6291097039630000265, fluidb_string<11> __sym__0__551327770031967739, fluidb_string<25> __sym__0__3827696365022297353, unsigned __sym__0___45_1779543743759935870, fluidb_string<10> __sym__0__3752090135924368535) : sym__0__7178003535380331304(__sym__0__7178003535380331304), sym__0___45_7020257275696364520(__sym__0___45_7020257275696364520), sym__0___45_6307179734719967033(__sym__0___45_6307179734719967033), sym__0__4568304886257136061(__sym__0__4568304886257136061), sym__0___45_6291097039630000265(__sym__0___45_6291097039630000265), sym__0__551327770031967739(__sym__0__551327770031967739), sym__0__3827696365022297353(__sym__0__3827696365022297353), sym__0___45_1779543743759935870(__sym__0___45_1779543743759935870), sym__0__3752090135924368535(__sym__0__3752090135924368535)
  {
  }
  Record13() 
  {
  }
  std::string show() const{
    std::stringstream o;
    o << sym__0__7178003535380331304 << " | " << arrToString(sym__0___45_7020257275696364520) << " | " << arrToString(sym__0___45_6307179734719967033) << " | " << arrToString(sym__0__4568304886257136061) << " | " << arrToString(sym__0___45_6291097039630000265) << " | " << arrToString(sym__0__551327770031967739) << " | " << arrToString(sym__0__3827696365022297353) << " | " << sym__0___45_1779543743759935870 << " | " << arrToString(sym__0__3752090135924368535);
    return o.str();
  }
  bool operator <(const Record13& otherRec) const{
    return (otherRec.sym__0__7178003535380331304 < sym__0__7178003535380331304 && (otherRec.sym__0___45_7020257275696364520 < sym__0___45_7020257275696364520 && (otherRec.sym__0___45_6307179734719967033 < sym__0___45_6307179734719967033 && (otherRec.sym__0__4568304886257136061 < sym__0__4568304886257136061 && (otherRec.sym__0___45_6291097039630000265 < sym__0___45_6291097039630000265 && (otherRec.sym__0__551327770031967739 < sym__0__551327770031967739 && (otherRec.sym__0__3827696365022297353 < sym__0__3827696365022297353 && (otherRec.sym__0___45_1779543743759935870 < sym__0___45_1779543743759935870 && otherRec.sym__0__3752090135924368535 < sym__0__3752090135924368535))))))));
  }
  bool operator ==(const Record13& otherRec) const{
    return (otherRec.sym__0__7178003535380331304 == sym__0__7178003535380331304 && (otherRec.sym__0___45_7020257275696364520 == sym__0___45_7020257275696364520 && (otherRec.sym__0___45_6307179734719967033 == sym__0___45_6307179734719967033 && (otherRec.sym__0__4568304886257136061 == sym__0__4568304886257136061 && (otherRec.sym__0___45_6291097039630000265 == sym__0___45_6291097039630000265 && (otherRec.sym__0__551327770031967739 == sym__0__551327770031967739 && (otherRec.sym__0__3827696365022297353 == sym__0__3827696365022297353 && (otherRec.sym__0___45_1779543743759935870 == sym__0___45_1779543743759935870 && otherRec.sym__0__3752090135924368535 == sym__0__3752090135924368535))))))));
  }
  bool operator !=(const Record13& otherRec) const{
    return (otherRec.sym__0__7178003535380331304 != sym__0__7178003535380331304 || (otherRec.sym__0___45_7020257275696364520 != sym__0___45_7020257275696364520 || (otherRec.sym__0___45_6307179734719967033 != sym__0___45_6307179734719967033 || (otherRec.sym__0__4568304886257136061 != sym__0__4568304886257136061 || (otherRec.sym__0___45_6291097039630000265 != sym__0___45_6291097039630000265 || (otherRec.sym__0__551327770031967739 != sym__0__551327770031967739 || (otherRec.sym__0__3827696365022297353 != sym__0__3827696365022297353 || (otherRec.sym__0___45_1779543743759935870 != sym__0___45_1779543743759935870 || otherRec.sym__0__3752090135924368535 != sym__0__3752090135924368535))))))));
  }
  unsigned sym__0__7178003535380331304;
  fluidb_string<55> sym__0___45_7020257275696364520;
  fluidb_string<25> sym__0___45_6307179734719967033;
  fluidb_string<7> sym__0__4568304886257136061;
  fluidb_string<10> sym__0___45_6291097039630000265;
  fluidb_string<11> sym__0__551327770031967739;
  fluidb_string<25> sym__0__3827696365022297353;
  unsigned sym__0___45_1779543743759935870;
  fluidb_string<10> sym__0__3752090135924368535;
 private:
};


class Record2 {
 public:
  Record2(unsigned __sym__0___45_7574074018531922998, int __sym__0__1125464382786937920, unsigned __sym__0___45_8257174981563598792, unsigned __sym__0__957746932829998382, unsigned __sym__0__934137931677987637, unsigned __sym__0___45_7332894783442362324, fluidb_string<21> __sym__0__8974811218372806325, unsigned __sym__0___45_5217562530132451785, fluidb_string<10> __sym__0__7851147553396318904, unsigned __sym__0___45_4975505511391694456, double __sym__0___45_7249986409969561654, unsigned __sym__0__4671626969570181580, double __sym__0___45_3666121704283105054, unsigned __sym__0__5495011930072844518, unsigned __sym__0___45_4423447118092167055, double __sym__0___45_1608082021099887893, fluidb_string<13> __sym__0__1584187396639360899) : sym__0___45_7574074018531922998(__sym__0___45_7574074018531922998), sym__0__1125464382786937920(__sym__0__1125464382786937920), sym__0___45_8257174981563598792(__sym__0___45_8257174981563598792), sym__0__957746932829998382(__sym__0__957746932829998382), sym__0__934137931677987637(__sym__0__934137931677987637), sym__0___45_7332894783442362324(__sym__0___45_7332894783442362324), sym__0__8974811218372806325(__sym__0__8974811218372806325), sym__0___45_5217562530132451785(__sym__0___45_5217562530132451785), sym__0__7851147553396318904(__sym__0__7851147553396318904), sym__0___45_4975505511391694456(__sym__0___45_4975505511391694456), sym__0___45_7249986409969561654(__sym__0___45_7249986409969561654), sym__0__4671626969570181580(__sym__0__4671626969570181580), sym__0___45_3666121704283105054(__sym__0___45_3666121704283105054), sym__0__5495011930072844518(__sym__0__5495011930072844518), sym__0___45_4423447118092167055(__sym__0___45_4423447118092167055), sym__0___45_1608082021099887893(__sym__0___45_1608082021099887893), sym__0__1584187396639360899(__sym__0__1584187396639360899)
  {
  }
  Record2() 
  {
  }
  std::string show() const{
    std::stringstream o;
    o << sym__0___45_7574074018531922998 << " | " << sym__0__1125464382786937920 << " | " << sym__0___45_8257174981563598792 << " | " << sym__0__957746932829998382 << " | " << sym__0__934137931677987637 << " | " << sym__0___45_7332894783442362324 << " | " << arrToString(sym__0__8974811218372806325) << " | " << sym__0___45_5217562530132451785 << " | " << arrToString(sym__0__7851147553396318904) << " | " << sym__0___45_4975505511391694456 << " | " << sym__0___45_7249986409969561654 << " | " << sym__0__4671626969570181580 << " | " << sym__0___45_3666121704283105054 << " | " << sym__0__5495011930072844518 << " | " << sym__0___45_4423447118092167055 << " | " << sym__0___45_1608082021099887893 << " | " << arrToString(sym__0__1584187396639360899);
    return o.str();
  }
  bool operator <(const Record2& otherRec) const{
    return (otherRec.sym__0___45_7574074018531922998 < sym__0___45_7574074018531922998 && (otherRec.sym__0__1125464382786937920 < sym__0__1125464382786937920 && (otherRec.sym__0___45_8257174981563598792 < sym__0___45_8257174981563598792 && (otherRec.sym__0__957746932829998382 < sym__0__957746932829998382 && (otherRec.sym__0__934137931677987637 < sym__0__934137931677987637 && (otherRec.sym__0___45_7332894783442362324 < sym__0___45_7332894783442362324 && (otherRec.sym__0__8974811218372806325 < sym__0__8974811218372806325 && (otherRec.sym__0___45_5217562530132451785 < sym__0___45_5217562530132451785 && (otherRec.sym__0__7851147553396318904 < sym__0__7851147553396318904 && (otherRec.sym__0___45_4975505511391694456 < sym__0___45_4975505511391694456 && (otherRec.sym__0___45_7249986409969561654 < sym__0___45_7249986409969561654 && (otherRec.sym__0__4671626969570181580 < sym__0__4671626969570181580 && (otherRec.sym__0___45_3666121704283105054 < sym__0___45_3666121704283105054 && (otherRec.sym__0__5495011930072844518 < sym__0__5495011930072844518 && (otherRec.sym__0___45_4423447118092167055 < sym__0___45_4423447118092167055 && (otherRec.sym__0___45_1608082021099887893 < sym__0___45_1608082021099887893 && otherRec.sym__0__1584187396639360899 < sym__0__1584187396639360899))))))))))))))));
  }
  bool operator ==(const Record2& otherRec) const{
    return (otherRec.sym__0___45_7574074018531922998 == sym__0___45_7574074018531922998 && (otherRec.sym__0__1125464382786937920 == sym__0__1125464382786937920 && (otherRec.sym__0___45_8257174981563598792 == sym__0___45_8257174981563598792 && (otherRec.sym__0__957746932829998382 == sym__0__957746932829998382 && (otherRec.sym__0__934137931677987637 == sym__0__934137931677987637 && (otherRec.sym__0___45_7332894783442362324 == sym__0___45_7332894783442362324 && (otherRec.sym__0__8974811218372806325 == sym__0__8974811218372806325 && (otherRec.sym__0___45_5217562530132451785 == sym__0___45_5217562530132451785 && (otherRec.sym__0__7851147553396318904 == sym__0__7851147553396318904 && (otherRec.sym__0___45_4975505511391694456 == sym__0___45_4975505511391694456 && (otherRec.sym__0___45_7249986409969561654 == sym__0___45_7249986409969561654 && (otherRec.sym__0__4671626969570181580 == sym__0__4671626969570181580 && (otherRec.sym__0___45_3666121704283105054 == sym__0___45_3666121704283105054 && (otherRec.sym__0__5495011930072844518 == sym__0__5495011930072844518 && (otherRec.sym__0___45_4423447118092167055 == sym__0___45_4423447118092167055 && (otherRec.sym__0___45_1608082021099887893 == sym__0___45_1608082021099887893 && otherRec.sym__0__1584187396639360899 == sym__0__1584187396639360899))))))))))))))));
  }
  bool operator !=(const Record2& otherRec) const{
    return (otherRec.sym__0___45_7574074018531922998 != sym__0___45_7574074018531922998 || (otherRec.sym__0__1125464382786937920 != sym__0__1125464382786937920 || (otherRec.sym__0___45_8257174981563598792 != sym__0___45_8257174981563598792 || (otherRec.sym__0__957746932829998382 != sym__0__957746932829998382 || (otherRec.sym__0__934137931677987637 != sym__0__934137931677987637 || (otherRec.sym__0___45_7332894783442362324 != sym__0___45_7332894783442362324 || (otherRec.sym__0__8974811218372806325 != sym__0__8974811218372806325 || (otherRec.sym__0___45_5217562530132451785 != sym__0___45_5217562530132451785 || (otherRec.sym__0__7851147553396318904 != sym__0__7851147553396318904 || (otherRec.sym__0___45_4975505511391694456 != sym__0___45_4975505511391694456 || (otherRec.sym__0___45_7249986409969561654 != sym__0___45_7249986409969561654 || (otherRec.sym__0__4671626969570181580 != sym__0__4671626969570181580 || (otherRec.sym__0___45_3666121704283105054 != sym__0___45_3666121704283105054 || (otherRec.sym__0__5495011930072844518 != sym__0__5495011930072844518 || (otherRec.sym__0___45_4423447118092167055 != sym__0___45_4423447118092167055 || (otherRec.sym__0___45_1608082021099887893 != sym__0___45_1608082021099887893 || otherRec.sym__0__1584187396639360899 != sym__0__1584187396639360899))))))))))))))));
  }
  unsigned sym__0___45_7574074018531922998;
  int sym__0__1125464382786937920;
  unsigned sym__0___45_8257174981563598792;
  unsigned sym__0__957746932829998382;
  unsigned sym__0__934137931677987637;
  unsigned sym__0___45_7332894783442362324;
  fluidb_string<21> sym__0__8974811218372806325;
  unsigned sym__0___45_5217562530132451785;
  fluidb_string<10> sym__0__7851147553396318904;
  unsigned sym__0___45_4975505511391694456;
  double sym__0___45_7249986409969561654;
  unsigned sym__0__4671626969570181580;
  double sym__0___45_3666121704283105054;
  unsigned sym__0__5495011930072844518;
  unsigned sym__0___45_4423447118092167055;
  double sym__0___45_1608082021099887893;
  fluidb_string<13> sym__0__1584187396639360899;
 private:
};


class Record6 {
 public:
  Record6(unsigned __sortElem0) : sortElem0(__sortElem0)
  {
  }
  Record6() 
  {
  }
  std::string show() const{
    std::stringstream o;
    o << sortElem0;
    return o.str();
  }
  bool operator <(const Record6& otherRec) const{
    return otherRec.sortElem0 < sortElem0;
  }
  bool operator ==(const Record6& otherRec) const{
    return otherRec.sortElem0 == sortElem0;
  }
  bool operator !=(const Record6& otherRec) const{
    return otherRec.sortElem0 != sortElem0;
  }
  unsigned sortElem0;
 private:
};


class Record4 {
 public:
  Record4(unsigned __sym__0___45_5559897171635877192, int __sym__0___45_7375639863193491710, unsigned __sym__0___45_7081695127069413062, unsigned __sym__0___45_5260862414976149524, unsigned __sym__0___45_2676996903767191541, unsigned __sym__0__1853718612864846686, fluidb_string<21> __sym__0___45_4869714215904773749, unsigned __sym__0__174238853246591705, fluidb_string<10> __sym__0___45_267092227244907590, unsigned __sym__0__6529479520036920906, double __sym__0___45_7002459804545921352, unsigned __sym__0___45_2712513080101817026, double __sym__0__6088085020057818928, unsigned __sym__0___45_5864351416697838172, unsigned __sym__0__5380039869368676519, double __sym__0__1781013011151980157, fluidb_string<13> __sym__0___45_50019751602092811, unsigned __sym__0___45_1112751135758893405, fluidb_string<25> __sym__0__6997242941354916148, fluidb_string<40> __sym__0__6495365355479598118, fluidb_string<16> __sym__0___45_6139591915656180264, fluidb_string<16> __sym__0___45_8641447736520667302, fluidb_string<13> __sym__0__378421449666099519, fluidb_string<15> __sym__0___45_6980633630965760588) : sym__0___45_5559897171635877192(__sym__0___45_5559897171635877192), sym__0___45_7375639863193491710(__sym__0___45_7375639863193491710), sym__0___45_7081695127069413062(__sym__0___45_7081695127069413062), sym__0___45_5260862414976149524(__sym__0___45_5260862414976149524), sym__0___45_2676996903767191541(__sym__0___45_2676996903767191541), sym__0__1853718612864846686(__sym__0__1853718612864846686), sym__0___45_4869714215904773749(__sym__0___45_4869714215904773749), sym__0__174238853246591705(__sym__0__174238853246591705), sym__0___45_267092227244907590(__sym__0___45_267092227244907590), sym__0__6529479520036920906(__sym__0__6529479520036920906), sym__0___45_7002459804545921352(__sym__0___45_7002459804545921352), sym__0___45_2712513080101817026(__sym__0___45_2712513080101817026), sym__0__6088085020057818928(__sym__0__6088085020057818928), sym__0___45_5864351416697838172(__sym__0___45_5864351416697838172), sym__0__5380039869368676519(__sym__0__5380039869368676519), sym__0__1781013011151980157(__sym__0__1781013011151980157), sym__0___45_50019751602092811(__sym__0___45_50019751602092811), sym__0___45_1112751135758893405(__sym__0___45_1112751135758893405), sym__0__6997242941354916148(__sym__0__6997242941354916148), sym__0__6495365355479598118(__sym__0__6495365355479598118), sym__0___45_6139591915656180264(__sym__0___45_6139591915656180264), sym__0___45_8641447736520667302(__sym__0___45_8641447736520667302), sym__0__378421449666099519(__sym__0__378421449666099519), sym__0___45_6980633630965760588(__sym__0___45_6980633630965760588)
  {
  }
  Record4() 
  {
  }
  std::string show() const{
    std::stringstream o;
    o << sym__0___45_5559897171635877192 << " | " << sym__0___45_7375639863193491710 << " | " << sym__0___45_7081695127069413062 << " | " << sym__0___45_5260862414976149524 << " | " << sym__0___45_2676996903767191541 << " | " << sym__0__1853718612864846686 << " | " << arrToString(sym__0___45_4869714215904773749) << " | " << sym__0__174238853246591705 << " | " << arrToString(sym__0___45_267092227244907590) << " | " << sym__0__6529479520036920906 << " | " << sym__0___45_7002459804545921352 << " | " << sym__0___45_2712513080101817026 << " | " << sym__0__6088085020057818928 << " | " << sym__0___45_5864351416697838172 << " | " << sym__0__5380039869368676519 << " | " << sym__0__1781013011151980157 << " | " << arrToString(sym__0___45_50019751602092811) << " | " << sym__0___45_1112751135758893405 << " | " << arrToString(sym__0__6997242941354916148) << " | " << arrToString(sym__0__6495365355479598118) << " | " << arrToString(sym__0___45_6139591915656180264) << " | " << arrToString(sym__0___45_8641447736520667302) << " | " << arrToString(sym__0__378421449666099519) << " | " << arrToString(sym__0___45_6980633630965760588);
    return o.str();
  }
  bool operator <(const Record4& otherRec) const{
    return (otherRec.sym__0___45_5559897171635877192 < sym__0___45_5559897171635877192 && (otherRec.sym__0___45_7375639863193491710 < sym__0___45_7375639863193491710 && (otherRec.sym__0___45_7081695127069413062 < sym__0___45_7081695127069413062 && (otherRec.sym__0___45_5260862414976149524 < sym__0___45_5260862414976149524 && (otherRec.sym__0___45_2676996903767191541 < sym__0___45_2676996903767191541 && (otherRec.sym__0__1853718612864846686 < sym__0__1853718612864846686 && (otherRec.sym__0___45_4869714215904773749 < sym__0___45_4869714215904773749 && (otherRec.sym__0__174238853246591705 < sym__0__174238853246591705 && (otherRec.sym__0___45_267092227244907590 < sym__0___45_267092227244907590 && (otherRec.sym__0__6529479520036920906 < sym__0__6529479520036920906 && (otherRec.sym__0___45_7002459804545921352 < sym__0___45_7002459804545921352 && (otherRec.sym__0___45_2712513080101817026 < sym__0___45_2712513080101817026 && (otherRec.sym__0__6088085020057818928 < sym__0__6088085020057818928 && (otherRec.sym__0___45_5864351416697838172 < sym__0___45_5864351416697838172 && (otherRec.sym__0__5380039869368676519 < sym__0__5380039869368676519 && (otherRec.sym__0__1781013011151980157 < sym__0__1781013011151980157 && (otherRec.sym__0___45_50019751602092811 < sym__0___45_50019751602092811 && (otherRec.sym__0___45_1112751135758893405 < sym__0___45_1112751135758893405 && (otherRec.sym__0__6997242941354916148 < sym__0__6997242941354916148 && (otherRec.sym__0__6495365355479598118 < sym__0__6495365355479598118 && (otherRec.sym__0___45_6139591915656180264 < sym__0___45_6139591915656180264 && (otherRec.sym__0___45_8641447736520667302 < sym__0___45_8641447736520667302 && (otherRec.sym__0__378421449666099519 < sym__0__378421449666099519 && otherRec.sym__0___45_6980633630965760588 < sym__0___45_6980633630965760588)))))))))))))))))))))));
  }
  bool operator ==(const Record4& otherRec) const{
    return (otherRec.sym__0___45_5559897171635877192 == sym__0___45_5559897171635877192 && (otherRec.sym__0___45_7375639863193491710 == sym__0___45_7375639863193491710 && (otherRec.sym__0___45_7081695127069413062 == sym__0___45_7081695127069413062 && (otherRec.sym__0___45_5260862414976149524 == sym__0___45_5260862414976149524 && (otherRec.sym__0___45_2676996903767191541 == sym__0___45_2676996903767191541 && (otherRec.sym__0__1853718612864846686 == sym__0__1853718612864846686 && (otherRec.sym__0___45_4869714215904773749 == sym__0___45_4869714215904773749 && (otherRec.sym__0__174238853246591705 == sym__0__174238853246591705 && (otherRec.sym__0___45_267092227244907590 == sym__0___45_267092227244907590 && (otherRec.sym__0__6529479520036920906 == sym__0__6529479520036920906 && (otherRec.sym__0___45_7002459804545921352 == sym__0___45_7002459804545921352 && (otherRec.sym__0___45_2712513080101817026 == sym__0___45_2712513080101817026 && (otherRec.sym__0__6088085020057818928 == sym__0__6088085020057818928 && (otherRec.sym__0___45_5864351416697838172 == sym__0___45_5864351416697838172 && (otherRec.sym__0__5380039869368676519 == sym__0__5380039869368676519 && (otherRec.sym__0__1781013011151980157 == sym__0__1781013011151980157 && (otherRec.sym__0___45_50019751602092811 == sym__0___45_50019751602092811 && (otherRec.sym__0___45_1112751135758893405 == sym__0___45_1112751135758893405 && (otherRec.sym__0__6997242941354916148 == sym__0__6997242941354916148 && (otherRec.sym__0__6495365355479598118 == sym__0__6495365355479598118 && (otherRec.sym__0___45_6139591915656180264 == sym__0___45_6139591915656180264 && (otherRec.sym__0___45_8641447736520667302 == sym__0___45_8641447736520667302 && (otherRec.sym__0__378421449666099519 == sym__0__378421449666099519 && otherRec.sym__0___45_6980633630965760588 == sym__0___45_6980633630965760588)))))))))))))))))))))));
  }
  bool operator !=(const Record4& otherRec) const{
    return (otherRec.sym__0___45_5559897171635877192 != sym__0___45_5559897171635877192 || (otherRec.sym__0___45_7375639863193491710 != sym__0___45_7375639863193491710 || (otherRec.sym__0___45_7081695127069413062 != sym__0___45_7081695127069413062 || (otherRec.sym__0___45_5260862414976149524 != sym__0___45_5260862414976149524 || (otherRec.sym__0___45_2676996903767191541 != sym__0___45_2676996903767191541 || (otherRec.sym__0__1853718612864846686 != sym__0__1853718612864846686 || (otherRec.sym__0___45_4869714215904773749 != sym__0___45_4869714215904773749 || (otherRec.sym__0__174238853246591705 != sym__0__174238853246591705 || (otherRec.sym__0___45_267092227244907590 != sym__0___45_267092227244907590 || (otherRec.sym__0__6529479520036920906 != sym__0__6529479520036920906 || (otherRec.sym__0___45_7002459804545921352 != sym__0___45_7002459804545921352 || (otherRec.sym__0___45_2712513080101817026 != sym__0___45_2712513080101817026 || (otherRec.sym__0__6088085020057818928 != sym__0__6088085020057818928 || (otherRec.sym__0___45_5864351416697838172 != sym__0___45_5864351416697838172 || (otherRec.sym__0__5380039869368676519 != sym__0__5380039869368676519 || (otherRec.sym__0__1781013011151980157 != sym__0__1781013011151980157 || (otherRec.sym__0___45_50019751602092811 != sym__0___45_50019751602092811 || (otherRec.sym__0___45_1112751135758893405 != sym__0___45_1112751135758893405 || (otherRec.sym__0__6997242941354916148 != sym__0__6997242941354916148 || (otherRec.sym__0__6495365355479598118 != sym__0__6495365355479598118 || (otherRec.sym__0___45_6139591915656180264 != sym__0___45_6139591915656180264 || (otherRec.sym__0___45_8641447736520667302 != sym__0___45_8641447736520667302 || (otherRec.sym__0__378421449666099519 != sym__0__378421449666099519 || otherRec.sym__0___45_6980633630965760588 != sym__0___45_6980633630965760588)))))))))))))))))))))));
  }
  unsigned sym__0___45_5559897171635877192;
  int sym__0___45_7375639863193491710;
  unsigned sym__0___45_7081695127069413062;
  unsigned sym__0___45_5260862414976149524;
  unsigned sym__0___45_2676996903767191541;
  unsigned sym__0__1853718612864846686;
  fluidb_string<21> sym__0___45_4869714215904773749;
  unsigned sym__0__174238853246591705;
  fluidb_string<10> sym__0___45_267092227244907590;
  unsigned sym__0__6529479520036920906;
  double sym__0___45_7002459804545921352;
  unsigned sym__0___45_2712513080101817026;
  double sym__0__6088085020057818928;
  unsigned sym__0___45_5864351416697838172;
  unsigned sym__0__5380039869368676519;
  double sym__0__1781013011151980157;
  fluidb_string<13> sym__0___45_50019751602092811;
  unsigned sym__0___45_1112751135758893405;
  fluidb_string<25> sym__0__6997242941354916148;
  fluidb_string<40> sym__0__6495365355479598118;
  fluidb_string<16> sym__0___45_6139591915656180264;
  fluidb_string<16> sym__0___45_8641447736520667302;
  fluidb_string<13> sym__0__378421449666099519;
  fluidb_string<15> sym__0___45_6980633630965760588;
 private:
};


class Record14 {
 public:
  Record14(unsigned __sym__0___45_7039120570530943711, int __sym__0__4640103980983204011, unsigned __sym__0___45_4185241004570011997, unsigned __sym__0___45_6355761559175446107, unsigned __sym__0___45_1162403058026523958, unsigned __sym__0___45_8106761156348005129, fluidb_string<21> __sym__0___45_1050082735832068790, unsigned __sym__0___45_7954553536268925696, fluidb_string<10> __sym__0__3437416405550760995, unsigned __sym__0___45_698077410736370349, double __sym__0___45_6314865288999759583, unsigned __sym__0__2308522645855992279, double __sym__0___45_1900055914774297479, unsigned __sym__0__5301455108304152253, unsigned __sym__0__895461803694174406, double __sym__0___45_8374349844664728556, fluidb_string<13> __sym__0__613613139799548076, unsigned __sym__0__3688670471244704098, fluidb_string<25> __sym__0___45_2383658624997196499, fluidb_string<40> __sym__0___45_6330452516025100737, fluidb_string<16> __sym__0__6608325282463858625, fluidb_string<16> __sym__0__4220172430731574339, fluidb_string<13> __sym__0___45_8775786034610095490, fluidb_string<15> __sym__0___45_8159878720356581715, unsigned __sym__0___45_4923942563615097709, fluidb_string<55> __sym__0___45_5521020829411533725, fluidb_string<25> __sym__0__6649154241606319120, fluidb_string<7> __sym__0__6522107552791865362, fluidb_string<10> __sym__0__7170577705885195936, fluidb_string<11> __sym__0___45_9143016338938793372, fluidb_string<25> __sym__0___45_6513466402096731266, unsigned __sym__0__8361225654804007673, fluidb_string<10> __sym__0___45_5050531661083217600) : sym__0___45_7039120570530943711(__sym__0___45_7039120570530943711), sym__0__4640103980983204011(__sym__0__4640103980983204011), sym__0___45_4185241004570011997(__sym__0___45_4185241004570011997), sym__0___45_6355761559175446107(__sym__0___45_6355761559175446107), sym__0___45_1162403058026523958(__sym__0___45_1162403058026523958), sym__0___45_8106761156348005129(__sym__0___45_8106761156348005129), sym__0___45_1050082735832068790(__sym__0___45_1050082735832068790), sym__0___45_7954553536268925696(__sym__0___45_7954553536268925696), sym__0__3437416405550760995(__sym__0__3437416405550760995), sym__0___45_698077410736370349(__sym__0___45_698077410736370349), sym__0___45_6314865288999759583(__sym__0___45_6314865288999759583), sym__0__2308522645855992279(__sym__0__2308522645855992279), sym__0___45_1900055914774297479(__sym__0___45_1900055914774297479), sym__0__5301455108304152253(__sym__0__5301455108304152253), sym__0__895461803694174406(__sym__0__895461803694174406), sym__0___45_8374349844664728556(__sym__0___45_8374349844664728556), sym__0__613613139799548076(__sym__0__613613139799548076), sym__0__3688670471244704098(__sym__0__3688670471244704098), sym__0___45_2383658624997196499(__sym__0___45_2383658624997196499), sym__0___45_6330452516025100737(__sym__0___45_6330452516025100737), sym__0__6608325282463858625(__sym__0__6608325282463858625), sym__0__4220172430731574339(__sym__0__4220172430731574339), sym__0___45_8775786034610095490(__sym__0___45_8775786034610095490), sym__0___45_8159878720356581715(__sym__0___45_8159878720356581715), sym__0___45_4923942563615097709(__sym__0___45_4923942563615097709), sym__0___45_5521020829411533725(__sym__0___45_5521020829411533725), sym__0__6649154241606319120(__sym__0__6649154241606319120), sym__0__6522107552791865362(__sym__0__6522107552791865362), sym__0__7170577705885195936(__sym__0__7170577705885195936), sym__0___45_9143016338938793372(__sym__0___45_9143016338938793372), sym__0___45_6513466402096731266(__sym__0___45_6513466402096731266), sym__0__8361225654804007673(__sym__0__8361225654804007673), sym__0___45_5050531661083217600(__sym__0___45_5050531661083217600)
  {
  }
  Record14() 
  {
  }
  std::string show() const{
    std::stringstream o;
    o << sym__0___45_7039120570530943711 << " | " << sym__0__4640103980983204011 << " | " << sym__0___45_4185241004570011997 << " | " << sym__0___45_6355761559175446107 << " | " << sym__0___45_1162403058026523958 << " | " << sym__0___45_8106761156348005129 << " | " << arrToString(sym__0___45_1050082735832068790) << " | " << sym__0___45_7954553536268925696 << " | " << arrToString(sym__0__3437416405550760995) << " | " << sym__0___45_698077410736370349 << " | " << sym__0___45_6314865288999759583 << " | " << sym__0__2308522645855992279 << " | " << sym__0___45_1900055914774297479 << " | " << sym__0__5301455108304152253 << " | " << sym__0__895461803694174406 << " | " << sym__0___45_8374349844664728556 << " | " << arrToString(sym__0__613613139799548076) << " | " << sym__0__3688670471244704098 << " | " << arrToString(sym__0___45_2383658624997196499) << " | " << arrToString(sym__0___45_6330452516025100737) << " | " << arrToString(sym__0__6608325282463858625) << " | " << arrToString(sym__0__4220172430731574339) << " | " << arrToString(sym__0___45_8775786034610095490) << " | " << arrToString(sym__0___45_8159878720356581715) << " | " << sym__0___45_4923942563615097709 << " | " << arrToString(sym__0___45_5521020829411533725) << " | " << arrToString(sym__0__6649154241606319120) << " | " << arrToString(sym__0__6522107552791865362) << " | " << arrToString(sym__0__7170577705885195936) << " | " << arrToString(sym__0___45_9143016338938793372) << " | " << arrToString(sym__0___45_6513466402096731266) << " | " << sym__0__8361225654804007673 << " | " << arrToString(sym__0___45_5050531661083217600);
    return o.str();
  }
  bool operator <(const Record14& otherRec) const{
    return (otherRec.sym__0___45_7039120570530943711 < sym__0___45_7039120570530943711 && (otherRec.sym__0__4640103980983204011 < sym__0__4640103980983204011 && (otherRec.sym__0___45_4185241004570011997 < sym__0___45_4185241004570011997 && (otherRec.sym__0___45_6355761559175446107 < sym__0___45_6355761559175446107 && (otherRec.sym__0___45_1162403058026523958 < sym__0___45_1162403058026523958 && (otherRec.sym__0___45_8106761156348005129 < sym__0___45_8106761156348005129 && (otherRec.sym__0___45_1050082735832068790 < sym__0___45_1050082735832068790 && (otherRec.sym__0___45_7954553536268925696 < sym__0___45_7954553536268925696 && (otherRec.sym__0__3437416405550760995 < sym__0__3437416405550760995 && (otherRec.sym__0___45_698077410736370349 < sym__0___45_698077410736370349 && (otherRec.sym__0___45_6314865288999759583 < sym__0___45_6314865288999759583 && (otherRec.sym__0__2308522645855992279 < sym__0__2308522645855992279 && (otherRec.sym__0___45_1900055914774297479 < sym__0___45_1900055914774297479 && (otherRec.sym__0__5301455108304152253 < sym__0__5301455108304152253 && (otherRec.sym__0__895461803694174406 < sym__0__895461803694174406 && (otherRec.sym__0___45_8374349844664728556 < sym__0___45_8374349844664728556 && (otherRec.sym__0__613613139799548076 < sym__0__613613139799548076 && (otherRec.sym__0__3688670471244704098 < sym__0__3688670471244704098 && (otherRec.sym__0___45_2383658624997196499 < sym__0___45_2383658624997196499 && (otherRec.sym__0___45_6330452516025100737 < sym__0___45_6330452516025100737 && (otherRec.sym__0__6608325282463858625 < sym__0__6608325282463858625 && (otherRec.sym__0__4220172430731574339 < sym__0__4220172430731574339 && (otherRec.sym__0___45_8775786034610095490 < sym__0___45_8775786034610095490 && (otherRec.sym__0___45_8159878720356581715 < sym__0___45_8159878720356581715 && (otherRec.sym__0___45_4923942563615097709 < sym__0___45_4923942563615097709 && (otherRec.sym__0___45_5521020829411533725 < sym__0___45_5521020829411533725 && (otherRec.sym__0__6649154241606319120 < sym__0__6649154241606319120 && (otherRec.sym__0__6522107552791865362 < sym__0__6522107552791865362 && (otherRec.sym__0__7170577705885195936 < sym__0__7170577705885195936 && (otherRec.sym__0___45_9143016338938793372 < sym__0___45_9143016338938793372 && (otherRec.sym__0___45_6513466402096731266 < sym__0___45_6513466402096731266 && (otherRec.sym__0__8361225654804007673 < sym__0__8361225654804007673 && otherRec.sym__0___45_5050531661083217600 < sym__0___45_5050531661083217600))))))))))))))))))))))))))))))));
  }
  bool operator ==(const Record14& otherRec) const{
    return (otherRec.sym__0___45_7039120570530943711 == sym__0___45_7039120570530943711 && (otherRec.sym__0__4640103980983204011 == sym__0__4640103980983204011 && (otherRec.sym__0___45_4185241004570011997 == sym__0___45_4185241004570011997 && (otherRec.sym__0___45_6355761559175446107 == sym__0___45_6355761559175446107 && (otherRec.sym__0___45_1162403058026523958 == sym__0___45_1162403058026523958 && (otherRec.sym__0___45_8106761156348005129 == sym__0___45_8106761156348005129 && (otherRec.sym__0___45_1050082735832068790 == sym__0___45_1050082735832068790 && (otherRec.sym__0___45_7954553536268925696 == sym__0___45_7954553536268925696 && (otherRec.sym__0__3437416405550760995 == sym__0__3437416405550760995 && (otherRec.sym__0___45_698077410736370349 == sym__0___45_698077410736370349 && (otherRec.sym__0___45_6314865288999759583 == sym__0___45_6314865288999759583 && (otherRec.sym__0__2308522645855992279 == sym__0__2308522645855992279 && (otherRec.sym__0___45_1900055914774297479 == sym__0___45_1900055914774297479 && (otherRec.sym__0__5301455108304152253 == sym__0__5301455108304152253 && (otherRec.sym__0__895461803694174406 == sym__0__895461803694174406 && (otherRec.sym__0___45_8374349844664728556 == sym__0___45_8374349844664728556 && (otherRec.sym__0__613613139799548076 == sym__0__613613139799548076 && (otherRec.sym__0__3688670471244704098 == sym__0__3688670471244704098 && (otherRec.sym__0___45_2383658624997196499 == sym__0___45_2383658624997196499 && (otherRec.sym__0___45_6330452516025100737 == sym__0___45_6330452516025100737 && (otherRec.sym__0__6608325282463858625 == sym__0__6608325282463858625 && (otherRec.sym__0__4220172430731574339 == sym__0__4220172430731574339 && (otherRec.sym__0___45_8775786034610095490 == sym__0___45_8775786034610095490 && (otherRec.sym__0___45_8159878720356581715 == sym__0___45_8159878720356581715 && (otherRec.sym__0___45_4923942563615097709 == sym__0___45_4923942563615097709 && (otherRec.sym__0___45_5521020829411533725 == sym__0___45_5521020829411533725 && (otherRec.sym__0__6649154241606319120 == sym__0__6649154241606319120 && (otherRec.sym__0__6522107552791865362 == sym__0__6522107552791865362 && (otherRec.sym__0__7170577705885195936 == sym__0__7170577705885195936 && (otherRec.sym__0___45_9143016338938793372 == sym__0___45_9143016338938793372 && (otherRec.sym__0___45_6513466402096731266 == sym__0___45_6513466402096731266 && (otherRec.sym__0__8361225654804007673 == sym__0__8361225654804007673 && otherRec.sym__0___45_5050531661083217600 == sym__0___45_5050531661083217600))))))))))))))))))))))))))))))));
  }
  bool operator !=(const Record14& otherRec) const{
    return (otherRec.sym__0___45_7039120570530943711 != sym__0___45_7039120570530943711 || (otherRec.sym__0__4640103980983204011 != sym__0__4640103980983204011 || (otherRec.sym__0___45_4185241004570011997 != sym__0___45_4185241004570011997 || (otherRec.sym__0___45_6355761559175446107 != sym__0___45_6355761559175446107 || (otherRec.sym__0___45_1162403058026523958 != sym__0___45_1162403058026523958 || (otherRec.sym__0___45_8106761156348005129 != sym__0___45_8106761156348005129 || (otherRec.sym__0___45_1050082735832068790 != sym__0___45_1050082735832068790 || (otherRec.sym__0___45_7954553536268925696 != sym__0___45_7954553536268925696 || (otherRec.sym__0__3437416405550760995 != sym__0__3437416405550760995 || (otherRec.sym__0___45_698077410736370349 != sym__0___45_698077410736370349 || (otherRec.sym__0___45_6314865288999759583 != sym__0___45_6314865288999759583 || (otherRec.sym__0__2308522645855992279 != sym__0__2308522645855992279 || (otherRec.sym__0___45_1900055914774297479 != sym__0___45_1900055914774297479 || (otherRec.sym__0__5301455108304152253 != sym__0__5301455108304152253 || (otherRec.sym__0__895461803694174406 != sym__0__895461803694174406 || (otherRec.sym__0___45_8374349844664728556 != sym__0___45_8374349844664728556 || (otherRec.sym__0__613613139799548076 != sym__0__613613139799548076 || (otherRec.sym__0__3688670471244704098 != sym__0__3688670471244704098 || (otherRec.sym__0___45_2383658624997196499 != sym__0___45_2383658624997196499 || (otherRec.sym__0___45_6330452516025100737 != sym__0___45_6330452516025100737 || (otherRec.sym__0__6608325282463858625 != sym__0__6608325282463858625 || (otherRec.sym__0__4220172430731574339 != sym__0__4220172430731574339 || (otherRec.sym__0___45_8775786034610095490 != sym__0___45_8775786034610095490 || (otherRec.sym__0___45_8159878720356581715 != sym__0___45_8159878720356581715 || (otherRec.sym__0___45_4923942563615097709 != sym__0___45_4923942563615097709 || (otherRec.sym__0___45_5521020829411533725 != sym__0___45_5521020829411533725 || (otherRec.sym__0__6649154241606319120 != sym__0__6649154241606319120 || (otherRec.sym__0__6522107552791865362 != sym__0__6522107552791865362 || (otherRec.sym__0__7170577705885195936 != sym__0__7170577705885195936 || (otherRec.sym__0___45_9143016338938793372 != sym__0___45_9143016338938793372 || (otherRec.sym__0___45_6513466402096731266 != sym__0___45_6513466402096731266 || (otherRec.sym__0__8361225654804007673 != sym__0__8361225654804007673 || otherRec.sym__0___45_5050531661083217600 != sym__0___45_5050531661083217600))))))))))))))))))))))))))))))));
  }
  unsigned sym__0___45_7039120570530943711;
  int sym__0__4640103980983204011;
  unsigned sym__0___45_4185241004570011997;
  unsigned sym__0___45_6355761559175446107;
  unsigned sym__0___45_1162403058026523958;
  unsigned sym__0___45_8106761156348005129;
  fluidb_string<21> sym__0___45_1050082735832068790;
  unsigned sym__0___45_7954553536268925696;
  fluidb_string<10> sym__0__3437416405550760995;
  unsigned sym__0___45_698077410736370349;
  double sym__0___45_6314865288999759583;
  unsigned sym__0__2308522645855992279;
  double sym__0___45_1900055914774297479;
  unsigned sym__0__5301455108304152253;
  unsigned sym__0__895461803694174406;
  double sym__0___45_8374349844664728556;
  fluidb_string<13> sym__0__613613139799548076;
  unsigned sym__0__3688670471244704098;
  fluidb_string<25> sym__0___45_2383658624997196499;
  fluidb_string<40> sym__0___45_6330452516025100737;
  fluidb_string<16> sym__0__6608325282463858625;
  fluidb_string<16> sym__0__4220172430731574339;
  fluidb_string<13> sym__0___45_8775786034610095490;
  fluidb_string<15> sym__0___45_8159878720356581715;
  unsigned sym__0___45_4923942563615097709;
  fluidb_string<55> sym__0___45_5521020829411533725;
  fluidb_string<25> sym__0__6649154241606319120;
  fluidb_string<7> sym__0__6522107552791865362;
  fluidb_string<10> sym__0__7170577705885195936;
  fluidb_string<11> sym__0___45_9143016338938793372;
  fluidb_string<25> sym__0___45_6513466402096731266;
  unsigned sym__0__8361225654804007673;
  fluidb_string<10> sym__0___45_5050531661083217600;
 private:
};


class Record3 {
 public:
  Record3(unsigned __sym__0___45_9117911789383871612, fluidb_string<25> __sym__0___45_1547112764757372609, fluidb_string<40> __sym__0___45_8663957751614366179, fluidb_string<16> __sym__0__1466641425010216931, fluidb_string<16> __sym__0__3672857626658041553, fluidb_string<13> __sym__0___45_3362440237381592032, fluidb_string<15> __sym__0___45_6631364176934158657) : sym__0___45_9117911789383871612(__sym__0___45_9117911789383871612), sym__0___45_1547112764757372609(__sym__0___45_1547112764757372609), sym__0___45_8663957751614366179(__sym__0___45_8663957751614366179), sym__0__1466641425010216931(__sym__0__1466641425010216931), sym__0__3672857626658041553(__sym__0__3672857626658041553), sym__0___45_3362440237381592032(__sym__0___45_3362440237381592032), sym__0___45_6631364176934158657(__sym__0___45_6631364176934158657)
  {
  }
  Record3() 
  {
  }
  std::string show() const{
    std::stringstream o;
    o << sym__0___45_9117911789383871612 << " | " << arrToString(sym__0___45_1547112764757372609) << " | " << arrToString(sym__0___45_8663957751614366179) << " | " << arrToString(sym__0__1466641425010216931) << " | " << arrToString(sym__0__3672857626658041553) << " | " << arrToString(sym__0___45_3362440237381592032) << " | " << arrToString(sym__0___45_6631364176934158657);
    return o.str();
  }
  bool operator <(const Record3& otherRec) const{
    return (otherRec.sym__0___45_9117911789383871612 < sym__0___45_9117911789383871612 && (otherRec.sym__0___45_1547112764757372609 < sym__0___45_1547112764757372609 && (otherRec.sym__0___45_8663957751614366179 < sym__0___45_8663957751614366179 && (otherRec.sym__0__1466641425010216931 < sym__0__1466641425010216931 && (otherRec.sym__0__3672857626658041553 < sym__0__3672857626658041553 && (otherRec.sym__0___45_3362440237381592032 < sym__0___45_3362440237381592032 && otherRec.sym__0___45_6631364176934158657 < sym__0___45_6631364176934158657))))));
  }
  bool operator ==(const Record3& otherRec) const{
    return (otherRec.sym__0___45_9117911789383871612 == sym__0___45_9117911789383871612 && (otherRec.sym__0___45_1547112764757372609 == sym__0___45_1547112764757372609 && (otherRec.sym__0___45_8663957751614366179 == sym__0___45_8663957751614366179 && (otherRec.sym__0__1466641425010216931 == sym__0__1466641425010216931 && (otherRec.sym__0__3672857626658041553 == sym__0__3672857626658041553 && (otherRec.sym__0___45_3362440237381592032 == sym__0___45_3362440237381592032 && otherRec.sym__0___45_6631364176934158657 == sym__0___45_6631364176934158657))))));
  }
  bool operator !=(const Record3& otherRec) const{
    return (otherRec.sym__0___45_9117911789383871612 != sym__0___45_9117911789383871612 || (otherRec.sym__0___45_1547112764757372609 != sym__0___45_1547112764757372609 || (otherRec.sym__0___45_8663957751614366179 != sym__0___45_8663957751614366179 || (otherRec.sym__0__1466641425010216931 != sym__0__1466641425010216931 || (otherRec.sym__0__3672857626658041553 != sym__0__3672857626658041553 || (otherRec.sym__0___45_3362440237381592032 != sym__0___45_3362440237381592032 || otherRec.sym__0___45_6631364176934158657 != sym__0___45_6631364176934158657))))));
  }
  unsigned sym__0___45_9117911789383871612;
  fluidb_string<25> sym__0___45_1547112764757372609;
  fluidb_string<40> sym__0___45_8663957751614366179;
  fluidb_string<16> sym__0__1466641425010216931;
  fluidb_string<16> sym__0__3672857626658041553;
  fluidb_string<13> sym__0___45_3362440237381592032;
  fluidb_string<15> sym__0___45_6631364176934158657;
 private:
};


class CallableClass19 {
 public:
  Record6 operator()(const Record13& record18) {
    return Record6(record18.sym__0__7178003535380331304);
  }
  typedef Record6 Codomain;
  typedef Record13 Domain0;
 private:
};


class CallableClass17 {
 public:
  Record6 operator()(const Record4& record16) {
    return Record6(record16.sym__0___45_5260862414976149524);
  }
  typedef Record6 Codomain;
  typedef Record4 Domain0;
 private:
};


class CallableClass8 {
 public:
  Record6 operator()(const Record2& record7) {
    return Record6(record7.sym__0__934137931677987637);
  }
  typedef Record6 Codomain;
  typedef Record2 Domain0;
 private:
};


class CallableClass15 {
 public:
  Record14 operator()(const Record4& record11, const Record13& record12) {
    return Record14(record11.sym__0___45_5559897171635877192, record11.sym__0___45_7375639863193491710, record11.sym__0___45_7081695127069413062, record11.sym__0___45_5260862414976149524, record11.sym__0___45_2676996903767191541, record11.sym__0__1853718612864846686, record11.sym__0___45_4869714215904773749, record11.sym__0__174238853246591705, record11.sym__0___45_267092227244907590, record11.sym__0__6529479520036920906, record11.sym__0___45_7002459804545921352, record11.sym__0___45_2712513080101817026, record11.sym__0__6088085020057818928, record11.sym__0___45_5864351416697838172, record11.sym__0__5380039869368676519, record11.sym__0__1781013011151980157, record11.sym__0___45_50019751602092811, record11.sym__0___45_1112751135758893405, record11.sym__0__6997242941354916148, record11.sym__0__6495365355479598118, record11.sym__0___45_6139591915656180264, record11.sym__0___45_8641447736520667302, record11.sym__0__378421449666099519, record11.sym__0___45_6980633630965760588, record12.sym__0__7178003535380331304, record12.sym__0___45_7020257275696364520, record12.sym__0___45_6307179734719967033, record12.sym__0__4568304886257136061, record12.sym__0___45_6291097039630000265, record12.sym__0__551327770031967739, record12.sym__0__3827696365022297353, record12.sym__0___45_1779543743759935870, record12.sym__0__3752090135924368535);
  }
  typedef Record14 Codomain;
  typedef Record4 Domain0;
  typedef Record13 Domain1;
 private:
};


class CallableClass10 {
 public:
  Record6 operator()(const Record3& record9) {
    return Record6(record9.sym__0___45_9117911789383871612);
  }
  typedef Record6 Codomain;
  typedef Record3 Domain0;
 private:
};


class CallableClass5 {
 public:
  Record4 operator()(const Record2& record0, const Record3& record1) {
    return Record4(record0.sym__0___45_7574074018531922998, record0.sym__0__1125464382786937920, record0.sym__0___45_8257174981563598792, record0.sym__0__957746932829998382, record0.sym__0__934137931677987637, record0.sym__0___45_7332894783442362324, record0.sym__0__8974811218372806325, record0.sym__0___45_5217562530132451785, record0.sym__0__7851147553396318904, record0.sym__0___45_4975505511391694456, record0.sym__0___45_7249986409969561654, record0.sym__0__4671626969570181580, record0.sym__0___45_3666121704283105054, record0.sym__0__5495011930072844518, record0.sym__0___45_4423447118092167055, record0.sym__0___45_1608082021099887893, record0.sym__0__1584187396639360899, record1.sym__0___45_9117911789383871612, record1.sym__0___45_1547112764757372609, record1.sym__0___45_8663957751614366179, record1.sym__0__1466641425010216931, record1.sym__0__3672857626658041553, record1.sym__0___45_3362440237381592032, record1.sym__0___45_6631364176934158657);
  }
  typedef Record4 Codomain;
  typedef Record2 Domain0;
  typedef Record3 Domain1;
 private:
};






int main() {
  // Delete: (Q2 
  //   (QLeftAntijoin 
  //     (P0 
  //       (R2 REq 
  //           (R0 (E0 (ESym "lo_orderdate"))) 
  //           (R0 (E0 (ESym "d_datekey")))))) 
  //   (Q0 (TSymbol "lineorder")) 
  std::cout << "Delete: N34" << std::endl;
  deleteFile("/tmp/fluidb_store/data34.dat");
  // Delete: (Q2 
  //   (QRightAntijoin 
  //     (P0 
  //       (R2 REq 
  //           (R0 (E0 (ESym "lo_orderdate"))) 
  //           (R0 (E0 (ESym "d_datekey")))))) 
  //   (Q0 (TSymbol "lineorder")) 
  std::cout << "Delete: N36" << std::endl;
  deleteFile("/tmp/fluidb_store/data36.dat");
  // Delete: (Q2 
  //   (QLeftAntijoin 
  //     (P0 
  //       (R2 REq 
  //           (R0 (E0 (ESym "lo_custkey"))) 
  //           (R0 (E0 (ESym "c_custkey")))))) 
  //   (Q0 (TSymbol "customer")) 
  //   (J 
  //     (P0 
  //       (R2 REq 
  //           (R0 (E0 (ESym "lo_orderdate"))) 
  //           (R0 (E0 (ESym "d_datekey"))))) 
  //     (Q0 (TSymbol "lineorder")) 
  std::cout << "Delete: N39" << std::endl;
  deleteFile("/tmp/fluidb_store/data39.dat");
  // Delete: (Q2 
  //   (QRightAntijoin 
  //     (P0 
  //       (R2 REq 
  //           (R0 (E0 (ESym "lo_custkey"))) 
  //           (R0 (E0 (ESym "c_custkey")))))) 
  //   (Q0 (TSymbol "customer")) 
  //   (J 
  //     (P0 
  //       (R2 REq 
  //           (R0 (E0 (ESym "lo_orderdate"))) 
  //           (R0 (E0 (ESym "d_datekey"))))) 
  //     (Q0 (TSymbol "lineorder")) 
  std::cout << "Delete: N40" << std::endl;
  deleteFile("/tmp/fluidb_store/data40.dat");
  // Delete: (J 
  //   (P0 
  //     (R2 REq 
  //         (R0 (E0 (ESym "lo_orderdate"))) 
  //         (R0 (E0 (ESym "d_datekey"))))) 
  //   (J 
  //     (P0 
  //       (R2 REq 
  //           (R0 (E0 (ESym "lo_custkey"))) 
  //           (R0 (E0 (ESym "c_custkey"))))) 
  //     (Q0 (TSymbol "lineorder")) 
  //     (Q0 (TSymbol "customer"))) 
  std::cout << "Delete: N30" << std::endl;
  deleteFile("/tmp/fluidb_store/data30.dat");
  // ForwardTrigger: (Just 
  //   (Left 
  //     [
  //      QJoin 
  //         (P0 
  //           (R2 REq 
  //               (R0 (E0 (ESym "lo_suppkey"))) 
  //               (R0 (E0 (ESym "s_suppkey")))))
  std::cout << "ForwardTrigger: (Just \n  (Left \n    [\n     QJoin \n        (P0 \n          (R2 REq \n              (R0 (E0 (ESym \"lo_suppkey\"))) \n              (R0 (E0 (ESym \"s_suppkey\")))))\n    ]))" << std::endl;
  {
    auto operation = mkEquiJoin<CallableClass8, CallableClass10, CallableClass5>(Just<const std::string>("/tmp/fluidb_store/data6.dat"), Just<const std::string>("/tmp/fluidb_store/data5.dat"), Just<const std::string>("/tmp/fluidb_store/data7.dat"), "/tmp/fluidb_store/data0.dat", "/tmp/fluidb_store/data3.dat");
    operation.run();
    operation.print_output(10);
  }
  // Delete: (J 
  //   (P0 
  //     (R2 REq 
  //         (R0 (E0 (ESym "lo_orderdate"))) 
  //         (R0 (E0 (ESym "d_datekey"))))) 
  //   (Q0 (TSymbol "lineorder")) 
  std::cout << "Delete: N35" << std::endl;
  deleteFile("/tmp/fluidb_store/data35.dat");
  // Delete: (J 
  //   (P0 
  //     (R2 REq (R0 (E0 (ESym "lo_partkey"))) (R0 (E0 (ESym "p_partkey"))))) 
  //   (Q0 (TSymbol "lineorder")) 
  std::cout << "Delete: N16" << std::endl;
  deleteFile("/tmp/fluidb_store/data16.dat");
  // ForwardTrigger: (Just 
  //   (Left 
  //     [
  //      QJoin 
  //         (P0 
  //           (R2 REq 
  //               (R0 (E0 (ESym "lo_partkey"))) 
  //               (R0 (E0 (ESym "p_partkey")))))
  std::cout << "ForwardTrigger: (Just \n  (Left \n    [\n     QJoin \n        (P0 \n          (R2 REq \n              (R0 (E0 (ESym \"lo_partkey\"))) \n              (R0 (E0 (ESym \"p_partkey\")))))\n    ]))" << std::endl;
  {
    auto operation = mkEquiJoin<CallableClass17, CallableClass19, CallableClass15>(Just<const std::string>("/tmp/fluidb_store/data11.dat"), Just<const std::string>("/tmp/fluidb_store/data10.dat"), Just<const std::string>("/tmp/fluidb_store/data12.dat"), "/tmp/fluidb_store/data6.dat", "/run/user/1000/fluidb-data/part.dat");
    operation.run();
    operation.print_output(10);
  }
  report_counters();
  return 0;
}
