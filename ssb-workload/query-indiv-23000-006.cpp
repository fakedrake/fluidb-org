#include <array>

#include <string>

#include <codegen.hh>
class Record41 {
 public:
  Record41(unsigned __sortElem0, fluidb_string<10> __sortElem1) : sortElem0(__sortElem0), sortElem1(__sortElem1)
  {
  }
  Record41() 
  {
  }
  std::string show() const{
    std::stringstream o;
    o << sortElem0 << " | " << arrToString(sortElem1);
    return o.str();
  }
  bool operator <(const Record41& otherRec) const{
    return (otherRec.sortElem0 < sortElem0 && otherRec.sortElem1 < sortElem1);
  }
  bool operator ==(const Record41& otherRec) const{
    return (otherRec.sortElem0 == sortElem0 && otherRec.sortElem1 == sortElem1);
  }
  bool operator !=(const Record41& otherRec) const{
    return (otherRec.sortElem0 != sortElem0 || otherRec.sortElem1 != sortElem1);
  }
  unsigned sortElem0;
  fluidb_string<10> sortElem1;
 private:
};


class Record26 {
 public:
  Record26(unsigned __sym__0__3749202613835539516, fluidb_string<25> __sym__0__3853910811136206439, fluidb_string<40> __sym__0___45_4812439514081860187, fluidb_string<16> __sym__0__8141341990593755227, fluidb_string<16> __sym__0___45_1677497998823335159, fluidb_string<13> __sym__0__7067889907208718136, fluidb_string<15> __sym__0__2063264474794950631, unsigned __sym__0___45_2406203400319404933, int __sym__0__9081834897704197137, unsigned __sym__0___45_8323320223000960471, unsigned __sym__0___45_8331347243081162497, unsigned __sym__0___45_2390083838583420092, unsigned __sym__0__2912236000029059069, fluidb_string<21> __sym__0__3653370686033553860, unsigned __sym__0__5936012595412334150, fluidb_string<10> __sym__0___45_1816837998167001175, unsigned __sym__0__7545091206599238681, double __sym__0___45_1424559208137584517, unsigned __sym__0__6395144509512964253, double __sym__0__9182535146594246451, unsigned __sym__0__280815916194286583, unsigned __sym__0__2540705042138486592, double __sym__0__8281520224814360410, fluidb_string<13> __sym__0__3059107448055216658, unsigned __sym__0__5947624015539765847, fluidb_string<18> __sym__0___45_9066590480537882041, fluidb_string<9> __sym__0___45_5447174107187519735, fluidb_string<9> __sym__0___45_3420603495949690014, unsigned __sym__0___45_9004707282254064716, unsigned __sym__0___45_4063231403699784718, fluidb_string<7> __sym__0___45_1843583846408941393, unsigned __sym__0__3878271002552174104, unsigned __sym__0__6118668371652612367, unsigned __sym__0___45_2229254424656099401, unsigned __sym__0___45_7776418238460988847, unsigned __sym__0__4886447806562354754, fluidb_string<15> __sym__0___45_4567805851496469981, fluidb_string<2> __sym__0___45_7971780566155543493, fluidb_string<2> __sym__0__1382282970499677142, fluidb_string<2> __sym__0__5011297957218063582, fluidb_string<2> __sym__0___45_3550325263493409460, unsigned __sym__0__6529948146205169113, fluidb_string<55> __sym__0__6661097005291578729, fluidb_string<25> __sym__0___45_7469900952409713322, fluidb_string<7> __sym__0___45_8598458868422699732, fluidb_string<10> __sym__0___45_6414117357071051226, fluidb_string<11> __sym__0__4421059099170388330, fluidb_string<25> __sym__0___45_108714048876090312, unsigned __sym__0__5441078539661244851, fluidb_string<10> __sym__0___45_8326498932109471738) : sym__0__3749202613835539516(__sym__0__3749202613835539516), sym__0__3853910811136206439(__sym__0__3853910811136206439), sym__0___45_4812439514081860187(__sym__0___45_4812439514081860187), sym__0__8141341990593755227(__sym__0__8141341990593755227), sym__0___45_1677497998823335159(__sym__0___45_1677497998823335159), sym__0__7067889907208718136(__sym__0__7067889907208718136), sym__0__2063264474794950631(__sym__0__2063264474794950631), sym__0___45_2406203400319404933(__sym__0___45_2406203400319404933), sym__0__9081834897704197137(__sym__0__9081834897704197137), sym__0___45_8323320223000960471(__sym__0___45_8323320223000960471), sym__0___45_8331347243081162497(__sym__0___45_8331347243081162497), sym__0___45_2390083838583420092(__sym__0___45_2390083838583420092), sym__0__2912236000029059069(__sym__0__2912236000029059069), sym__0__3653370686033553860(__sym__0__3653370686033553860), sym__0__5936012595412334150(__sym__0__5936012595412334150), sym__0___45_1816837998167001175(__sym__0___45_1816837998167001175), sym__0__7545091206599238681(__sym__0__7545091206599238681), sym__0___45_1424559208137584517(__sym__0___45_1424559208137584517), sym__0__6395144509512964253(__sym__0__6395144509512964253), sym__0__9182535146594246451(__sym__0__9182535146594246451), sym__0__280815916194286583(__sym__0__280815916194286583), sym__0__2540705042138486592(__sym__0__2540705042138486592), sym__0__8281520224814360410(__sym__0__8281520224814360410), sym__0__3059107448055216658(__sym__0__3059107448055216658), sym__0__5947624015539765847(__sym__0__5947624015539765847), sym__0___45_9066590480537882041(__sym__0___45_9066590480537882041), sym__0___45_5447174107187519735(__sym__0___45_5447174107187519735), sym__0___45_3420603495949690014(__sym__0___45_3420603495949690014), sym__0___45_9004707282254064716(__sym__0___45_9004707282254064716), sym__0___45_4063231403699784718(__sym__0___45_4063231403699784718), sym__0___45_1843583846408941393(__sym__0___45_1843583846408941393), sym__0__3878271002552174104(__sym__0__3878271002552174104), sym__0__6118668371652612367(__sym__0__6118668371652612367), sym__0___45_2229254424656099401(__sym__0___45_2229254424656099401), sym__0___45_7776418238460988847(__sym__0___45_7776418238460988847), sym__0__4886447806562354754(__sym__0__4886447806562354754), sym__0___45_4567805851496469981(__sym__0___45_4567805851496469981), sym__0___45_7971780566155543493(__sym__0___45_7971780566155543493), sym__0__1382282970499677142(__sym__0__1382282970499677142), sym__0__5011297957218063582(__sym__0__5011297957218063582), sym__0___45_3550325263493409460(__sym__0___45_3550325263493409460), sym__0__6529948146205169113(__sym__0__6529948146205169113), sym__0__6661097005291578729(__sym__0__6661097005291578729), sym__0___45_7469900952409713322(__sym__0___45_7469900952409713322), sym__0___45_8598458868422699732(__sym__0___45_8598458868422699732), sym__0___45_6414117357071051226(__sym__0___45_6414117357071051226), sym__0__4421059099170388330(__sym__0__4421059099170388330), sym__0___45_108714048876090312(__sym__0___45_108714048876090312), sym__0__5441078539661244851(__sym__0__5441078539661244851), sym__0___45_8326498932109471738(__sym__0___45_8326498932109471738)
  {
  }
  Record26() 
  {
  }
  std::string show() const{
    std::stringstream o;
    o << sym__0__3749202613835539516 << " | " << arrToString(sym__0__3853910811136206439) << " | " << arrToString(sym__0___45_4812439514081860187) << " | " << arrToString(sym__0__8141341990593755227) << " | " << arrToString(sym__0___45_1677497998823335159) << " | " << arrToString(sym__0__7067889907208718136) << " | " << arrToString(sym__0__2063264474794950631) << " | " << sym__0___45_2406203400319404933 << " | " << sym__0__9081834897704197137 << " | " << sym__0___45_8323320223000960471 << " | " << sym__0___45_8331347243081162497 << " | " << sym__0___45_2390083838583420092 << " | " << sym__0__2912236000029059069 << " | " << arrToString(sym__0__3653370686033553860) << " | " << sym__0__5936012595412334150 << " | " << arrToString(sym__0___45_1816837998167001175) << " | " << sym__0__7545091206599238681 << " | " << sym__0___45_1424559208137584517 << " | " << sym__0__6395144509512964253 << " | " << sym__0__9182535146594246451 << " | " << sym__0__280815916194286583 << " | " << sym__0__2540705042138486592 << " | " << sym__0__8281520224814360410 << " | " << arrToString(sym__0__3059107448055216658) << " | " << sym__0__5947624015539765847 << " | " << arrToString(sym__0___45_9066590480537882041) << " | " << arrToString(sym__0___45_5447174107187519735) << " | " << arrToString(sym__0___45_3420603495949690014) << " | " << sym__0___45_9004707282254064716 << " | " << sym__0___45_4063231403699784718 << " | " << arrToString(sym__0___45_1843583846408941393) << " | " << sym__0__3878271002552174104 << " | " << sym__0__6118668371652612367 << " | " << sym__0___45_2229254424656099401 << " | " << sym__0___45_7776418238460988847 << " | " << sym__0__4886447806562354754 << " | " << arrToString(sym__0___45_4567805851496469981) << " | " << arrToString(sym__0___45_7971780566155543493) << " | " << arrToString(sym__0__1382282970499677142) << " | " << arrToString(sym__0__5011297957218063582) << " | " << arrToString(sym__0___45_3550325263493409460) << " | " << sym__0__6529948146205169113 << " | " << arrToString(sym__0__6661097005291578729) << " | " << arrToString(sym__0___45_7469900952409713322) << " | " << arrToString(sym__0___45_8598458868422699732) << " | " << arrToString(sym__0___45_6414117357071051226) << " | " << arrToString(sym__0__4421059099170388330) << " | " << arrToString(sym__0___45_108714048876090312) << " | " << sym__0__5441078539661244851 << " | " << arrToString(sym__0___45_8326498932109471738);
    return o.str();
  }
  bool operator <(const Record26& otherRec) const{
    return (otherRec.sym__0__3749202613835539516 < sym__0__3749202613835539516 && (otherRec.sym__0__3853910811136206439 < sym__0__3853910811136206439 && (otherRec.sym__0___45_4812439514081860187 < sym__0___45_4812439514081860187 && (otherRec.sym__0__8141341990593755227 < sym__0__8141341990593755227 && (otherRec.sym__0___45_1677497998823335159 < sym__0___45_1677497998823335159 && (otherRec.sym__0__7067889907208718136 < sym__0__7067889907208718136 && (otherRec.sym__0__2063264474794950631 < sym__0__2063264474794950631 && (otherRec.sym__0___45_2406203400319404933 < sym__0___45_2406203400319404933 && (otherRec.sym__0__9081834897704197137 < sym__0__9081834897704197137 && (otherRec.sym__0___45_8323320223000960471 < sym__0___45_8323320223000960471 && (otherRec.sym__0___45_8331347243081162497 < sym__0___45_8331347243081162497 && (otherRec.sym__0___45_2390083838583420092 < sym__0___45_2390083838583420092 && (otherRec.sym__0__2912236000029059069 < sym__0__2912236000029059069 && (otherRec.sym__0__3653370686033553860 < sym__0__3653370686033553860 && (otherRec.sym__0__5936012595412334150 < sym__0__5936012595412334150 && (otherRec.sym__0___45_1816837998167001175 < sym__0___45_1816837998167001175 && (otherRec.sym__0__7545091206599238681 < sym__0__7545091206599238681 && (otherRec.sym__0___45_1424559208137584517 < sym__0___45_1424559208137584517 && (otherRec.sym__0__6395144509512964253 < sym__0__6395144509512964253 && (otherRec.sym__0__9182535146594246451 < sym__0__9182535146594246451 && (otherRec.sym__0__280815916194286583 < sym__0__280815916194286583 && (otherRec.sym__0__2540705042138486592 < sym__0__2540705042138486592 && (otherRec.sym__0__8281520224814360410 < sym__0__8281520224814360410 && (otherRec.sym__0__3059107448055216658 < sym__0__3059107448055216658 && (otherRec.sym__0__5947624015539765847 < sym__0__5947624015539765847 && (otherRec.sym__0___45_9066590480537882041 < sym__0___45_9066590480537882041 && (otherRec.sym__0___45_5447174107187519735 < sym__0___45_5447174107187519735 && (otherRec.sym__0___45_3420603495949690014 < sym__0___45_3420603495949690014 && (otherRec.sym__0___45_9004707282254064716 < sym__0___45_9004707282254064716 && (otherRec.sym__0___45_4063231403699784718 < sym__0___45_4063231403699784718 && (otherRec.sym__0___45_1843583846408941393 < sym__0___45_1843583846408941393 && (otherRec.sym__0__3878271002552174104 < sym__0__3878271002552174104 && (otherRec.sym__0__6118668371652612367 < sym__0__6118668371652612367 && (otherRec.sym__0___45_2229254424656099401 < sym__0___45_2229254424656099401 && (otherRec.sym__0___45_7776418238460988847 < sym__0___45_7776418238460988847 && (otherRec.sym__0__4886447806562354754 < sym__0__4886447806562354754 && (otherRec.sym__0___45_4567805851496469981 < sym__0___45_4567805851496469981 && (otherRec.sym__0___45_7971780566155543493 < sym__0___45_7971780566155543493 && (otherRec.sym__0__1382282970499677142 < sym__0__1382282970499677142 && (otherRec.sym__0__5011297957218063582 < sym__0__5011297957218063582 && (otherRec.sym__0___45_3550325263493409460 < sym__0___45_3550325263493409460 && (otherRec.sym__0__6529948146205169113 < sym__0__6529948146205169113 && (otherRec.sym__0__6661097005291578729 < sym__0__6661097005291578729 && (otherRec.sym__0___45_7469900952409713322 < sym__0___45_7469900952409713322 && (otherRec.sym__0___45_8598458868422699732 < sym__0___45_8598458868422699732 && (otherRec.sym__0___45_6414117357071051226 < sym__0___45_6414117357071051226 && (otherRec.sym__0__4421059099170388330 < sym__0__4421059099170388330 && (otherRec.sym__0___45_108714048876090312 < sym__0___45_108714048876090312 && (otherRec.sym__0__5441078539661244851 < sym__0__5441078539661244851 && otherRec.sym__0___45_8326498932109471738 < sym__0___45_8326498932109471738)))))))))))))))))))))))))))))))))))))))))))))))));
  }
  bool operator ==(const Record26& otherRec) const{
    return (otherRec.sym__0__3749202613835539516 == sym__0__3749202613835539516 && (otherRec.sym__0__3853910811136206439 == sym__0__3853910811136206439 && (otherRec.sym__0___45_4812439514081860187 == sym__0___45_4812439514081860187 && (otherRec.sym__0__8141341990593755227 == sym__0__8141341990593755227 && (otherRec.sym__0___45_1677497998823335159 == sym__0___45_1677497998823335159 && (otherRec.sym__0__7067889907208718136 == sym__0__7067889907208718136 && (otherRec.sym__0__2063264474794950631 == sym__0__2063264474794950631 && (otherRec.sym__0___45_2406203400319404933 == sym__0___45_2406203400319404933 && (otherRec.sym__0__9081834897704197137 == sym__0__9081834897704197137 && (otherRec.sym__0___45_8323320223000960471 == sym__0___45_8323320223000960471 && (otherRec.sym__0___45_8331347243081162497 == sym__0___45_8331347243081162497 && (otherRec.sym__0___45_2390083838583420092 == sym__0___45_2390083838583420092 && (otherRec.sym__0__2912236000029059069 == sym__0__2912236000029059069 && (otherRec.sym__0__3653370686033553860 == sym__0__3653370686033553860 && (otherRec.sym__0__5936012595412334150 == sym__0__5936012595412334150 && (otherRec.sym__0___45_1816837998167001175 == sym__0___45_1816837998167001175 && (otherRec.sym__0__7545091206599238681 == sym__0__7545091206599238681 && (otherRec.sym__0___45_1424559208137584517 == sym__0___45_1424559208137584517 && (otherRec.sym__0__6395144509512964253 == sym__0__6395144509512964253 && (otherRec.sym__0__9182535146594246451 == sym__0__9182535146594246451 && (otherRec.sym__0__280815916194286583 == sym__0__280815916194286583 && (otherRec.sym__0__2540705042138486592 == sym__0__2540705042138486592 && (otherRec.sym__0__8281520224814360410 == sym__0__8281520224814360410 && (otherRec.sym__0__3059107448055216658 == sym__0__3059107448055216658 && (otherRec.sym__0__5947624015539765847 == sym__0__5947624015539765847 && (otherRec.sym__0___45_9066590480537882041 == sym__0___45_9066590480537882041 && (otherRec.sym__0___45_5447174107187519735 == sym__0___45_5447174107187519735 && (otherRec.sym__0___45_3420603495949690014 == sym__0___45_3420603495949690014 && (otherRec.sym__0___45_9004707282254064716 == sym__0___45_9004707282254064716 && (otherRec.sym__0___45_4063231403699784718 == sym__0___45_4063231403699784718 && (otherRec.sym__0___45_1843583846408941393 == sym__0___45_1843583846408941393 && (otherRec.sym__0__3878271002552174104 == sym__0__3878271002552174104 && (otherRec.sym__0__6118668371652612367 == sym__0__6118668371652612367 && (otherRec.sym__0___45_2229254424656099401 == sym__0___45_2229254424656099401 && (otherRec.sym__0___45_7776418238460988847 == sym__0___45_7776418238460988847 && (otherRec.sym__0__4886447806562354754 == sym__0__4886447806562354754 && (otherRec.sym__0___45_4567805851496469981 == sym__0___45_4567805851496469981 && (otherRec.sym__0___45_7971780566155543493 == sym__0___45_7971780566155543493 && (otherRec.sym__0__1382282970499677142 == sym__0__1382282970499677142 && (otherRec.sym__0__5011297957218063582 == sym__0__5011297957218063582 && (otherRec.sym__0___45_3550325263493409460 == sym__0___45_3550325263493409460 && (otherRec.sym__0__6529948146205169113 == sym__0__6529948146205169113 && (otherRec.sym__0__6661097005291578729 == sym__0__6661097005291578729 && (otherRec.sym__0___45_7469900952409713322 == sym__0___45_7469900952409713322 && (otherRec.sym__0___45_8598458868422699732 == sym__0___45_8598458868422699732 && (otherRec.sym__0___45_6414117357071051226 == sym__0___45_6414117357071051226 && (otherRec.sym__0__4421059099170388330 == sym__0__4421059099170388330 && (otherRec.sym__0___45_108714048876090312 == sym__0___45_108714048876090312 && (otherRec.sym__0__5441078539661244851 == sym__0__5441078539661244851 && otherRec.sym__0___45_8326498932109471738 == sym__0___45_8326498932109471738)))))))))))))))))))))))))))))))))))))))))))))))));
  }
  bool operator !=(const Record26& otherRec) const{
    return (otherRec.sym__0__3749202613835539516 != sym__0__3749202613835539516 || (otherRec.sym__0__3853910811136206439 != sym__0__3853910811136206439 || (otherRec.sym__0___45_4812439514081860187 != sym__0___45_4812439514081860187 || (otherRec.sym__0__8141341990593755227 != sym__0__8141341990593755227 || (otherRec.sym__0___45_1677497998823335159 != sym__0___45_1677497998823335159 || (otherRec.sym__0__7067889907208718136 != sym__0__7067889907208718136 || (otherRec.sym__0__2063264474794950631 != sym__0__2063264474794950631 || (otherRec.sym__0___45_2406203400319404933 != sym__0___45_2406203400319404933 || (otherRec.sym__0__9081834897704197137 != sym__0__9081834897704197137 || (otherRec.sym__0___45_8323320223000960471 != sym__0___45_8323320223000960471 || (otherRec.sym__0___45_8331347243081162497 != sym__0___45_8331347243081162497 || (otherRec.sym__0___45_2390083838583420092 != sym__0___45_2390083838583420092 || (otherRec.sym__0__2912236000029059069 != sym__0__2912236000029059069 || (otherRec.sym__0__3653370686033553860 != sym__0__3653370686033553860 || (otherRec.sym__0__5936012595412334150 != sym__0__5936012595412334150 || (otherRec.sym__0___45_1816837998167001175 != sym__0___45_1816837998167001175 || (otherRec.sym__0__7545091206599238681 != sym__0__7545091206599238681 || (otherRec.sym__0___45_1424559208137584517 != sym__0___45_1424559208137584517 || (otherRec.sym__0__6395144509512964253 != sym__0__6395144509512964253 || (otherRec.sym__0__9182535146594246451 != sym__0__9182535146594246451 || (otherRec.sym__0__280815916194286583 != sym__0__280815916194286583 || (otherRec.sym__0__2540705042138486592 != sym__0__2540705042138486592 || (otherRec.sym__0__8281520224814360410 != sym__0__8281520224814360410 || (otherRec.sym__0__3059107448055216658 != sym__0__3059107448055216658 || (otherRec.sym__0__5947624015539765847 != sym__0__5947624015539765847 || (otherRec.sym__0___45_9066590480537882041 != sym__0___45_9066590480537882041 || (otherRec.sym__0___45_5447174107187519735 != sym__0___45_5447174107187519735 || (otherRec.sym__0___45_3420603495949690014 != sym__0___45_3420603495949690014 || (otherRec.sym__0___45_9004707282254064716 != sym__0___45_9004707282254064716 || (otherRec.sym__0___45_4063231403699784718 != sym__0___45_4063231403699784718 || (otherRec.sym__0___45_1843583846408941393 != sym__0___45_1843583846408941393 || (otherRec.sym__0__3878271002552174104 != sym__0__3878271002552174104 || (otherRec.sym__0__6118668371652612367 != sym__0__6118668371652612367 || (otherRec.sym__0___45_2229254424656099401 != sym__0___45_2229254424656099401 || (otherRec.sym__0___45_7776418238460988847 != sym__0___45_7776418238460988847 || (otherRec.sym__0__4886447806562354754 != sym__0__4886447806562354754 || (otherRec.sym__0___45_4567805851496469981 != sym__0___45_4567805851496469981 || (otherRec.sym__0___45_7971780566155543493 != sym__0___45_7971780566155543493 || (otherRec.sym__0__1382282970499677142 != sym__0__1382282970499677142 || (otherRec.sym__0__5011297957218063582 != sym__0__5011297957218063582 || (otherRec.sym__0___45_3550325263493409460 != sym__0___45_3550325263493409460 || (otherRec.sym__0__6529948146205169113 != sym__0__6529948146205169113 || (otherRec.sym__0__6661097005291578729 != sym__0__6661097005291578729 || (otherRec.sym__0___45_7469900952409713322 != sym__0___45_7469900952409713322 || (otherRec.sym__0___45_8598458868422699732 != sym__0___45_8598458868422699732 || (otherRec.sym__0___45_6414117357071051226 != sym__0___45_6414117357071051226 || (otherRec.sym__0__4421059099170388330 != sym__0__4421059099170388330 || (otherRec.sym__0___45_108714048876090312 != sym__0___45_108714048876090312 || (otherRec.sym__0__5441078539661244851 != sym__0__5441078539661244851 || otherRec.sym__0___45_8326498932109471738 != sym__0___45_8326498932109471738)))))))))))))))))))))))))))))))))))))))))))))))));
  }
  unsigned sym__0__3749202613835539516;
  fluidb_string<25> sym__0__3853910811136206439;
  fluidb_string<40> sym__0___45_4812439514081860187;
  fluidb_string<16> sym__0__8141341990593755227;
  fluidb_string<16> sym__0___45_1677497998823335159;
  fluidb_string<13> sym__0__7067889907208718136;
  fluidb_string<15> sym__0__2063264474794950631;
  unsigned sym__0___45_2406203400319404933;
  int sym__0__9081834897704197137;
  unsigned sym__0___45_8323320223000960471;
  unsigned sym__0___45_8331347243081162497;
  unsigned sym__0___45_2390083838583420092;
  unsigned sym__0__2912236000029059069;
  fluidb_string<21> sym__0__3653370686033553860;
  unsigned sym__0__5936012595412334150;
  fluidb_string<10> sym__0___45_1816837998167001175;
  unsigned sym__0__7545091206599238681;
  double sym__0___45_1424559208137584517;
  unsigned sym__0__6395144509512964253;
  double sym__0__9182535146594246451;
  unsigned sym__0__280815916194286583;
  unsigned sym__0__2540705042138486592;
  double sym__0__8281520224814360410;
  fluidb_string<13> sym__0__3059107448055216658;
  unsigned sym__0__5947624015539765847;
  fluidb_string<18> sym__0___45_9066590480537882041;
  fluidb_string<9> sym__0___45_5447174107187519735;
  fluidb_string<9> sym__0___45_3420603495949690014;
  unsigned sym__0___45_9004707282254064716;
  unsigned sym__0___45_4063231403699784718;
  fluidb_string<7> sym__0___45_1843583846408941393;
  unsigned sym__0__3878271002552174104;
  unsigned sym__0__6118668371652612367;
  unsigned sym__0___45_2229254424656099401;
  unsigned sym__0___45_7776418238460988847;
  unsigned sym__0__4886447806562354754;
  fluidb_string<15> sym__0___45_4567805851496469981;
  fluidb_string<2> sym__0___45_7971780566155543493;
  fluidb_string<2> sym__0__1382282970499677142;
  fluidb_string<2> sym__0__5011297957218063582;
  fluidb_string<2> sym__0___45_3550325263493409460;
  unsigned sym__0__6529948146205169113;
  fluidb_string<55> sym__0__6661097005291578729;
  fluidb_string<25> sym__0___45_7469900952409713322;
  fluidb_string<7> sym__0___45_8598458868422699732;
  fluidb_string<10> sym__0___45_6414117357071051226;
  fluidb_string<11> sym__0__4421059099170388330;
  fluidb_string<25> sym__0___45_108714048876090312;
  unsigned sym__0__5441078539661244851;
  fluidb_string<10> sym__0___45_8326498932109471738;
 private:
};


class Record25 {
 public:
  Record25(unsigned __sym__0__7178003535380331304, fluidb_string<55> __sym__0___45_7020257275696364520, fluidb_string<25> __sym__0___45_6307179734719967033, fluidb_string<7> __sym__0__4568304886257136061, fluidb_string<10> __sym__0___45_6291097039630000265, fluidb_string<11> __sym__0__551327770031967739, fluidb_string<25> __sym__0__3827696365022297353, unsigned __sym__0___45_1779543743759935870, fluidb_string<10> __sym__0__3752090135924368535) : sym__0__7178003535380331304(__sym__0__7178003535380331304), sym__0___45_7020257275696364520(__sym__0___45_7020257275696364520), sym__0___45_6307179734719967033(__sym__0___45_6307179734719967033), sym__0__4568304886257136061(__sym__0__4568304886257136061), sym__0___45_6291097039630000265(__sym__0___45_6291097039630000265), sym__0__551327770031967739(__sym__0__551327770031967739), sym__0__3827696365022297353(__sym__0__3827696365022297353), sym__0___45_1779543743759935870(__sym__0___45_1779543743759935870), sym__0__3752090135924368535(__sym__0__3752090135924368535)
  {
  }
  Record25() 
  {
  }
  std::string show() const{
    std::stringstream o;
    o << sym__0__7178003535380331304 << " | " << arrToString(sym__0___45_7020257275696364520) << " | " << arrToString(sym__0___45_6307179734719967033) << " | " << arrToString(sym__0__4568304886257136061) << " | " << arrToString(sym__0___45_6291097039630000265) << " | " << arrToString(sym__0__551327770031967739) << " | " << arrToString(sym__0__3827696365022297353) << " | " << sym__0___45_1779543743759935870 << " | " << arrToString(sym__0__3752090135924368535);
    return o.str();
  }
  bool operator <(const Record25& otherRec) const{
    return (otherRec.sym__0__7178003535380331304 < sym__0__7178003535380331304 && (otherRec.sym__0___45_7020257275696364520 < sym__0___45_7020257275696364520 && (otherRec.sym__0___45_6307179734719967033 < sym__0___45_6307179734719967033 && (otherRec.sym__0__4568304886257136061 < sym__0__4568304886257136061 && (otherRec.sym__0___45_6291097039630000265 < sym__0___45_6291097039630000265 && (otherRec.sym__0__551327770031967739 < sym__0__551327770031967739 && (otherRec.sym__0__3827696365022297353 < sym__0__3827696365022297353 && (otherRec.sym__0___45_1779543743759935870 < sym__0___45_1779543743759935870 && otherRec.sym__0__3752090135924368535 < sym__0__3752090135924368535))))))));
  }
  bool operator ==(const Record25& otherRec) const{
    return (otherRec.sym__0__7178003535380331304 == sym__0__7178003535380331304 && (otherRec.sym__0___45_7020257275696364520 == sym__0___45_7020257275696364520 && (otherRec.sym__0___45_6307179734719967033 == sym__0___45_6307179734719967033 && (otherRec.sym__0__4568304886257136061 == sym__0__4568304886257136061 && (otherRec.sym__0___45_6291097039630000265 == sym__0___45_6291097039630000265 && (otherRec.sym__0__551327770031967739 == sym__0__551327770031967739 && (otherRec.sym__0__3827696365022297353 == sym__0__3827696365022297353 && (otherRec.sym__0___45_1779543743759935870 == sym__0___45_1779543743759935870 && otherRec.sym__0__3752090135924368535 == sym__0__3752090135924368535))))))));
  }
  bool operator !=(const Record25& otherRec) const{
    return (otherRec.sym__0__7178003535380331304 != sym__0__7178003535380331304 || (otherRec.sym__0___45_7020257275696364520 != sym__0___45_7020257275696364520 || (otherRec.sym__0___45_6307179734719967033 != sym__0___45_6307179734719967033 || (otherRec.sym__0__4568304886257136061 != sym__0__4568304886257136061 || (otherRec.sym__0___45_6291097039630000265 != sym__0___45_6291097039630000265 || (otherRec.sym__0__551327770031967739 != sym__0__551327770031967739 || (otherRec.sym__0__3827696365022297353 != sym__0__3827696365022297353 || (otherRec.sym__0___45_1779543743759935870 != sym__0___45_1779543743759935870 || otherRec.sym__0__3752090135924368535 != sym__0__3752090135924368535))))))));
  }
  unsigned sym__0__7178003535380331304;
  fluidb_string<55> sym__0___45_7020257275696364520;
  fluidb_string<25> sym__0___45_6307179734719967033;
  fluidb_string<7> sym__0__4568304886257136061;
  fluidb_string<10> sym__0___45_6291097039630000265;
  fluidb_string<11> sym__0__551327770031967739;
  fluidb_string<25> sym__0__3827696365022297353;
  unsigned sym__0___45_1779543743759935870;
  fluidb_string<10> sym__0__3752090135924368535;
 private:
};


class Record6 {
 public:
  Record6(unsigned __sym__0___45_7574074018531922998, int __sym__0__1125464382786937920, unsigned __sym__0___45_8257174981563598792, unsigned __sym__0__957746932829998382, unsigned __sym__0__934137931677987637, unsigned __sym__0___45_7332894783442362324, fluidb_string<21> __sym__0__8974811218372806325, unsigned __sym__0___45_5217562530132451785, fluidb_string<10> __sym__0__7851147553396318904, unsigned __sym__0___45_4975505511391694456, double __sym__0___45_7249986409969561654, unsigned __sym__0__4671626969570181580, double __sym__0___45_3666121704283105054, unsigned __sym__0__5495011930072844518, unsigned __sym__0___45_4423447118092167055, double __sym__0___45_1608082021099887893, fluidb_string<13> __sym__0__1584187396639360899) : sym__0___45_7574074018531922998(__sym__0___45_7574074018531922998), sym__0__1125464382786937920(__sym__0__1125464382786937920), sym__0___45_8257174981563598792(__sym__0___45_8257174981563598792), sym__0__957746932829998382(__sym__0__957746932829998382), sym__0__934137931677987637(__sym__0__934137931677987637), sym__0___45_7332894783442362324(__sym__0___45_7332894783442362324), sym__0__8974811218372806325(__sym__0__8974811218372806325), sym__0___45_5217562530132451785(__sym__0___45_5217562530132451785), sym__0__7851147553396318904(__sym__0__7851147553396318904), sym__0___45_4975505511391694456(__sym__0___45_4975505511391694456), sym__0___45_7249986409969561654(__sym__0___45_7249986409969561654), sym__0__4671626969570181580(__sym__0__4671626969570181580), sym__0___45_3666121704283105054(__sym__0___45_3666121704283105054), sym__0__5495011930072844518(__sym__0__5495011930072844518), sym__0___45_4423447118092167055(__sym__0___45_4423447118092167055), sym__0___45_1608082021099887893(__sym__0___45_1608082021099887893), sym__0__1584187396639360899(__sym__0__1584187396639360899)
  {
  }
  Record6() 
  {
  }
  std::string show() const{
    std::stringstream o;
    o << sym__0___45_7574074018531922998 << " | " << sym__0__1125464382786937920 << " | " << sym__0___45_8257174981563598792 << " | " << sym__0__957746932829998382 << " | " << sym__0__934137931677987637 << " | " << sym__0___45_7332894783442362324 << " | " << arrToString(sym__0__8974811218372806325) << " | " << sym__0___45_5217562530132451785 << " | " << arrToString(sym__0__7851147553396318904) << " | " << sym__0___45_4975505511391694456 << " | " << sym__0___45_7249986409969561654 << " | " << sym__0__4671626969570181580 << " | " << sym__0___45_3666121704283105054 << " | " << sym__0__5495011930072844518 << " | " << sym__0___45_4423447118092167055 << " | " << sym__0___45_1608082021099887893 << " | " << arrToString(sym__0__1584187396639360899);
    return o.str();
  }
  bool operator <(const Record6& otherRec) const{
    return (otherRec.sym__0___45_7574074018531922998 < sym__0___45_7574074018531922998 && (otherRec.sym__0__1125464382786937920 < sym__0__1125464382786937920 && (otherRec.sym__0___45_8257174981563598792 < sym__0___45_8257174981563598792 && (otherRec.sym__0__957746932829998382 < sym__0__957746932829998382 && (otherRec.sym__0__934137931677987637 < sym__0__934137931677987637 && (otherRec.sym__0___45_7332894783442362324 < sym__0___45_7332894783442362324 && (otherRec.sym__0__8974811218372806325 < sym__0__8974811218372806325 && (otherRec.sym__0___45_5217562530132451785 < sym__0___45_5217562530132451785 && (otherRec.sym__0__7851147553396318904 < sym__0__7851147553396318904 && (otherRec.sym__0___45_4975505511391694456 < sym__0___45_4975505511391694456 && (otherRec.sym__0___45_7249986409969561654 < sym__0___45_7249986409969561654 && (otherRec.sym__0__4671626969570181580 < sym__0__4671626969570181580 && (otherRec.sym__0___45_3666121704283105054 < sym__0___45_3666121704283105054 && (otherRec.sym__0__5495011930072844518 < sym__0__5495011930072844518 && (otherRec.sym__0___45_4423447118092167055 < sym__0___45_4423447118092167055 && (otherRec.sym__0___45_1608082021099887893 < sym__0___45_1608082021099887893 && otherRec.sym__0__1584187396639360899 < sym__0__1584187396639360899))))))))))))))));
  }
  bool operator ==(const Record6& otherRec) const{
    return (otherRec.sym__0___45_7574074018531922998 == sym__0___45_7574074018531922998 && (otherRec.sym__0__1125464382786937920 == sym__0__1125464382786937920 && (otherRec.sym__0___45_8257174981563598792 == sym__0___45_8257174981563598792 && (otherRec.sym__0__957746932829998382 == sym__0__957746932829998382 && (otherRec.sym__0__934137931677987637 == sym__0__934137931677987637 && (otherRec.sym__0___45_7332894783442362324 == sym__0___45_7332894783442362324 && (otherRec.sym__0__8974811218372806325 == sym__0__8974811218372806325 && (otherRec.sym__0___45_5217562530132451785 == sym__0___45_5217562530132451785 && (otherRec.sym__0__7851147553396318904 == sym__0__7851147553396318904 && (otherRec.sym__0___45_4975505511391694456 == sym__0___45_4975505511391694456 && (otherRec.sym__0___45_7249986409969561654 == sym__0___45_7249986409969561654 && (otherRec.sym__0__4671626969570181580 == sym__0__4671626969570181580 && (otherRec.sym__0___45_3666121704283105054 == sym__0___45_3666121704283105054 && (otherRec.sym__0__5495011930072844518 == sym__0__5495011930072844518 && (otherRec.sym__0___45_4423447118092167055 == sym__0___45_4423447118092167055 && (otherRec.sym__0___45_1608082021099887893 == sym__0___45_1608082021099887893 && otherRec.sym__0__1584187396639360899 == sym__0__1584187396639360899))))))))))))))));
  }
  bool operator !=(const Record6& otherRec) const{
    return (otherRec.sym__0___45_7574074018531922998 != sym__0___45_7574074018531922998 || (otherRec.sym__0__1125464382786937920 != sym__0__1125464382786937920 || (otherRec.sym__0___45_8257174981563598792 != sym__0___45_8257174981563598792 || (otherRec.sym__0__957746932829998382 != sym__0__957746932829998382 || (otherRec.sym__0__934137931677987637 != sym__0__934137931677987637 || (otherRec.sym__0___45_7332894783442362324 != sym__0___45_7332894783442362324 || (otherRec.sym__0__8974811218372806325 != sym__0__8974811218372806325 || (otherRec.sym__0___45_5217562530132451785 != sym__0___45_5217562530132451785 || (otherRec.sym__0__7851147553396318904 != sym__0__7851147553396318904 || (otherRec.sym__0___45_4975505511391694456 != sym__0___45_4975505511391694456 || (otherRec.sym__0___45_7249986409969561654 != sym__0___45_7249986409969561654 || (otherRec.sym__0__4671626969570181580 != sym__0__4671626969570181580 || (otherRec.sym__0___45_3666121704283105054 != sym__0___45_3666121704283105054 || (otherRec.sym__0__5495011930072844518 != sym__0__5495011930072844518 || (otherRec.sym__0___45_4423447118092167055 != sym__0___45_4423447118092167055 || (otherRec.sym__0___45_1608082021099887893 != sym__0___45_1608082021099887893 || otherRec.sym__0__1584187396639360899 != sym__0__1584187396639360899))))))))))))))));
  }
  unsigned sym__0___45_7574074018531922998;
  int sym__0__1125464382786937920;
  unsigned sym__0___45_8257174981563598792;
  unsigned sym__0__957746932829998382;
  unsigned sym__0__934137931677987637;
  unsigned sym__0___45_7332894783442362324;
  fluidb_string<21> sym__0__8974811218372806325;
  unsigned sym__0___45_5217562530132451785;
  fluidb_string<10> sym__0__7851147553396318904;
  unsigned sym__0___45_4975505511391694456;
  double sym__0___45_7249986409969561654;
  unsigned sym__0__4671626969570181580;
  double sym__0___45_3666121704283105054;
  unsigned sym__0__5495011930072844518;
  unsigned sym__0___45_4423447118092167055;
  double sym__0___45_1608082021099887893;
  fluidb_string<13> sym__0__1584187396639360899;
 private:
};


class Record9 {
 public:
  Record9(unsigned __sortElem0) : sortElem0(__sortElem0)
  {
  }
  Record9() 
  {
  }
  std::string show() const{
    std::stringstream o;
    o << sortElem0;
    return o.str();
  }
  bool operator <(const Record9& otherRec) const{
    return otherRec.sortElem0 < sortElem0;
  }
  bool operator ==(const Record9& otherRec) const{
    return otherRec.sortElem0 == sortElem0;
  }
  bool operator !=(const Record9& otherRec) const{
    return otherRec.sortElem0 != sortElem0;
  }
  unsigned sortElem0;
 private:
};


class Record16 {
 public:
  Record16(unsigned __sym__0__2037864888707786451, fluidb_string<18> __sym__0__8533656712666151747, fluidb_string<9> __sym__0__646314041574508429, fluidb_string<9> __sym__0__6064137978327902054, unsigned __sym__0__3754157776500852496, unsigned __sym__0__6284345160241949046, fluidb_string<7> __sym__0___45_773692805971570325, unsigned __sym__0___45_8399474032083007524, unsigned __sym__0___45_2038947427357444789, unsigned __sym__0__6071994954612827827, unsigned __sym__0__7742515703067448213, unsigned __sym__0__5201219213304227654, fluidb_string<15> __sym__0___45_5896625796158057241, fluidb_string<2> __sym__0___45_1108504872221226081, fluidb_string<2> __sym__0__1055103969674359346, fluidb_string<2> __sym__0__9115626546918942554, fluidb_string<2> __sym__0___45_6850413444013389848) : sym__0__2037864888707786451(__sym__0__2037864888707786451), sym__0__8533656712666151747(__sym__0__8533656712666151747), sym__0__646314041574508429(__sym__0__646314041574508429), sym__0__6064137978327902054(__sym__0__6064137978327902054), sym__0__3754157776500852496(__sym__0__3754157776500852496), sym__0__6284345160241949046(__sym__0__6284345160241949046), sym__0___45_773692805971570325(__sym__0___45_773692805971570325), sym__0___45_8399474032083007524(__sym__0___45_8399474032083007524), sym__0___45_2038947427357444789(__sym__0___45_2038947427357444789), sym__0__6071994954612827827(__sym__0__6071994954612827827), sym__0__7742515703067448213(__sym__0__7742515703067448213), sym__0__5201219213304227654(__sym__0__5201219213304227654), sym__0___45_5896625796158057241(__sym__0___45_5896625796158057241), sym__0___45_1108504872221226081(__sym__0___45_1108504872221226081), sym__0__1055103969674359346(__sym__0__1055103969674359346), sym__0__9115626546918942554(__sym__0__9115626546918942554), sym__0___45_6850413444013389848(__sym__0___45_6850413444013389848)
  {
  }
  Record16() 
  {
  }
  std::string show() const{
    std::stringstream o;
    o << sym__0__2037864888707786451 << " | " << arrToString(sym__0__8533656712666151747) << " | " << arrToString(sym__0__646314041574508429) << " | " << arrToString(sym__0__6064137978327902054) << " | " << sym__0__3754157776500852496 << " | " << sym__0__6284345160241949046 << " | " << arrToString(sym__0___45_773692805971570325) << " | " << sym__0___45_8399474032083007524 << " | " << sym__0___45_2038947427357444789 << " | " << sym__0__6071994954612827827 << " | " << sym__0__7742515703067448213 << " | " << sym__0__5201219213304227654 << " | " << arrToString(sym__0___45_5896625796158057241) << " | " << arrToString(sym__0___45_1108504872221226081) << " | " << arrToString(sym__0__1055103969674359346) << " | " << arrToString(sym__0__9115626546918942554) << " | " << arrToString(sym__0___45_6850413444013389848);
    return o.str();
  }
  bool operator <(const Record16& otherRec) const{
    return (otherRec.sym__0__2037864888707786451 < sym__0__2037864888707786451 && (otherRec.sym__0__8533656712666151747 < sym__0__8533656712666151747 && (otherRec.sym__0__646314041574508429 < sym__0__646314041574508429 && (otherRec.sym__0__6064137978327902054 < sym__0__6064137978327902054 && (otherRec.sym__0__3754157776500852496 < sym__0__3754157776500852496 && (otherRec.sym__0__6284345160241949046 < sym__0__6284345160241949046 && (otherRec.sym__0___45_773692805971570325 < sym__0___45_773692805971570325 && (otherRec.sym__0___45_8399474032083007524 < sym__0___45_8399474032083007524 && (otherRec.sym__0___45_2038947427357444789 < sym__0___45_2038947427357444789 && (otherRec.sym__0__6071994954612827827 < sym__0__6071994954612827827 && (otherRec.sym__0__7742515703067448213 < sym__0__7742515703067448213 && (otherRec.sym__0__5201219213304227654 < sym__0__5201219213304227654 && (otherRec.sym__0___45_5896625796158057241 < sym__0___45_5896625796158057241 && (otherRec.sym__0___45_1108504872221226081 < sym__0___45_1108504872221226081 && (otherRec.sym__0__1055103969674359346 < sym__0__1055103969674359346 && (otherRec.sym__0__9115626546918942554 < sym__0__9115626546918942554 && otherRec.sym__0___45_6850413444013389848 < sym__0___45_6850413444013389848))))))))))))))));
  }
  bool operator ==(const Record16& otherRec) const{
    return (otherRec.sym__0__2037864888707786451 == sym__0__2037864888707786451 && (otherRec.sym__0__8533656712666151747 == sym__0__8533656712666151747 && (otherRec.sym__0__646314041574508429 == sym__0__646314041574508429 && (otherRec.sym__0__6064137978327902054 == sym__0__6064137978327902054 && (otherRec.sym__0__3754157776500852496 == sym__0__3754157776500852496 && (otherRec.sym__0__6284345160241949046 == sym__0__6284345160241949046 && (otherRec.sym__0___45_773692805971570325 == sym__0___45_773692805971570325 && (otherRec.sym__0___45_8399474032083007524 == sym__0___45_8399474032083007524 && (otherRec.sym__0___45_2038947427357444789 == sym__0___45_2038947427357444789 && (otherRec.sym__0__6071994954612827827 == sym__0__6071994954612827827 && (otherRec.sym__0__7742515703067448213 == sym__0__7742515703067448213 && (otherRec.sym__0__5201219213304227654 == sym__0__5201219213304227654 && (otherRec.sym__0___45_5896625796158057241 == sym__0___45_5896625796158057241 && (otherRec.sym__0___45_1108504872221226081 == sym__0___45_1108504872221226081 && (otherRec.sym__0__1055103969674359346 == sym__0__1055103969674359346 && (otherRec.sym__0__9115626546918942554 == sym__0__9115626546918942554 && otherRec.sym__0___45_6850413444013389848 == sym__0___45_6850413444013389848))))))))))))))));
  }
  bool operator !=(const Record16& otherRec) const{
    return (otherRec.sym__0__2037864888707786451 != sym__0__2037864888707786451 || (otherRec.sym__0__8533656712666151747 != sym__0__8533656712666151747 || (otherRec.sym__0__646314041574508429 != sym__0__646314041574508429 || (otherRec.sym__0__6064137978327902054 != sym__0__6064137978327902054 || (otherRec.sym__0__3754157776500852496 != sym__0__3754157776500852496 || (otherRec.sym__0__6284345160241949046 != sym__0__6284345160241949046 || (otherRec.sym__0___45_773692805971570325 != sym__0___45_773692805971570325 || (otherRec.sym__0___45_8399474032083007524 != sym__0___45_8399474032083007524 || (otherRec.sym__0___45_2038947427357444789 != sym__0___45_2038947427357444789 || (otherRec.sym__0__6071994954612827827 != sym__0__6071994954612827827 || (otherRec.sym__0__7742515703067448213 != sym__0__7742515703067448213 || (otherRec.sym__0__5201219213304227654 != sym__0__5201219213304227654 || (otherRec.sym__0___45_5896625796158057241 != sym__0___45_5896625796158057241 || (otherRec.sym__0___45_1108504872221226081 != sym__0___45_1108504872221226081 || (otherRec.sym__0__1055103969674359346 != sym__0__1055103969674359346 || (otherRec.sym__0__9115626546918942554 != sym__0__9115626546918942554 || otherRec.sym__0___45_6850413444013389848 != sym__0___45_6850413444013389848))))))))))))))));
  }
  unsigned sym__0__2037864888707786451;
  fluidb_string<18> sym__0__8533656712666151747;
  fluidb_string<9> sym__0__646314041574508429;
  fluidb_string<9> sym__0__6064137978327902054;
  unsigned sym__0__3754157776500852496;
  unsigned sym__0__6284345160241949046;
  fluidb_string<7> sym__0___45_773692805971570325;
  unsigned sym__0___45_8399474032083007524;
  unsigned sym__0___45_2038947427357444789;
  unsigned sym__0__6071994954612827827;
  unsigned sym__0__7742515703067448213;
  unsigned sym__0__5201219213304227654;
  fluidb_string<15> sym__0___45_5896625796158057241;
  fluidb_string<2> sym__0___45_1108504872221226081;
  fluidb_string<2> sym__0__1055103969674359346;
  fluidb_string<2> sym__0__9115626546918942554;
  fluidb_string<2> sym__0___45_6850413444013389848;
 private:
};


class Record17 {
 public:
  Record17(unsigned __sym__0___45_5182087624132196707, fluidb_string<25> __sym__0___45_1125733209087237322, fluidb_string<40> __sym__0___45_4972797425225002076, fluidb_string<16> __sym__0__2318854370595574362, fluidb_string<16> __sym__0___45_4041623608412761896, fluidb_string<13> __sym__0___45_3735786698084808711, fluidb_string<15> __sym__0__7384252796126420662, unsigned __sym__0___45_2043653876463228102, int __sym__0__2838774847530135056, unsigned __sym__0__6525564334754176696, unsigned __sym__0__8499987716798155358, unsigned __sym__0___45_6915660615674064043, unsigned __sym__0___45_8326786075612268884, fluidb_string<21> __sym__0___45_6075665051587255339, unsigned __sym__0___45_1350382245670239329, fluidb_string<10> __sym__0__2109402343114077240, unsigned __sym__0__6215935326665719112, double __sym__0__2820217628767326010, unsigned __sym__0__5445672276260318348, double __sym__0__3697656138623911458, unsigned __sym__0__1653175989217608742, unsigned __sym__0___45_3743776918383637103, double __sym__0__2919710110324225859, fluidb_string<13> __sym__0__1749379276187346475, unsigned __sym__0___45_4706300880382947898, fluidb_string<18> __sym__0___45_8488664643470695338, fluidb_string<9> __sym__0___45_8168358588491690792, fluidb_string<9> __sym__0__3492822237187130715, unsigned __sym__0___45_5327203452744863771, unsigned __sym__0___45_3191486480184313013, fluidb_string<7> __sym__0__8273133299368630830, unsigned __sym__0__5374892212332880793, unsigned __sym__0__4657424385215848526, unsigned __sym__0___45_3458973470967037338, unsigned __sym__0___45_8815963362114542896, unsigned __sym__0___45_1032706391051161733, fluidb_string<15> __sym__0__2933689304969494962, fluidb_string<2> __sym__0__7834336576245077370, fluidb_string<2> __sym__0___45_4475634397818667505, fluidb_string<2> __sym__0__3226357619497947495, fluidb_string<2> __sym__0__2465797272458765197) : sym__0___45_5182087624132196707(__sym__0___45_5182087624132196707), sym__0___45_1125733209087237322(__sym__0___45_1125733209087237322), sym__0___45_4972797425225002076(__sym__0___45_4972797425225002076), sym__0__2318854370595574362(__sym__0__2318854370595574362), sym__0___45_4041623608412761896(__sym__0___45_4041623608412761896), sym__0___45_3735786698084808711(__sym__0___45_3735786698084808711), sym__0__7384252796126420662(__sym__0__7384252796126420662), sym__0___45_2043653876463228102(__sym__0___45_2043653876463228102), sym__0__2838774847530135056(__sym__0__2838774847530135056), sym__0__6525564334754176696(__sym__0__6525564334754176696), sym__0__8499987716798155358(__sym__0__8499987716798155358), sym__0___45_6915660615674064043(__sym__0___45_6915660615674064043), sym__0___45_8326786075612268884(__sym__0___45_8326786075612268884), sym__0___45_6075665051587255339(__sym__0___45_6075665051587255339), sym__0___45_1350382245670239329(__sym__0___45_1350382245670239329), sym__0__2109402343114077240(__sym__0__2109402343114077240), sym__0__6215935326665719112(__sym__0__6215935326665719112), sym__0__2820217628767326010(__sym__0__2820217628767326010), sym__0__5445672276260318348(__sym__0__5445672276260318348), sym__0__3697656138623911458(__sym__0__3697656138623911458), sym__0__1653175989217608742(__sym__0__1653175989217608742), sym__0___45_3743776918383637103(__sym__0___45_3743776918383637103), sym__0__2919710110324225859(__sym__0__2919710110324225859), sym__0__1749379276187346475(__sym__0__1749379276187346475), sym__0___45_4706300880382947898(__sym__0___45_4706300880382947898), sym__0___45_8488664643470695338(__sym__0___45_8488664643470695338), sym__0___45_8168358588491690792(__sym__0___45_8168358588491690792), sym__0__3492822237187130715(__sym__0__3492822237187130715), sym__0___45_5327203452744863771(__sym__0___45_5327203452744863771), sym__0___45_3191486480184313013(__sym__0___45_3191486480184313013), sym__0__8273133299368630830(__sym__0__8273133299368630830), sym__0__5374892212332880793(__sym__0__5374892212332880793), sym__0__4657424385215848526(__sym__0__4657424385215848526), sym__0___45_3458973470967037338(__sym__0___45_3458973470967037338), sym__0___45_8815963362114542896(__sym__0___45_8815963362114542896), sym__0___45_1032706391051161733(__sym__0___45_1032706391051161733), sym__0__2933689304969494962(__sym__0__2933689304969494962), sym__0__7834336576245077370(__sym__0__7834336576245077370), sym__0___45_4475634397818667505(__sym__0___45_4475634397818667505), sym__0__3226357619497947495(__sym__0__3226357619497947495), sym__0__2465797272458765197(__sym__0__2465797272458765197)
  {
  }
  Record17() 
  {
  }
  std::string show() const{
    std::stringstream o;
    o << sym__0___45_5182087624132196707 << " | " << arrToString(sym__0___45_1125733209087237322) << " | " << arrToString(sym__0___45_4972797425225002076) << " | " << arrToString(sym__0__2318854370595574362) << " | " << arrToString(sym__0___45_4041623608412761896) << " | " << arrToString(sym__0___45_3735786698084808711) << " | " << arrToString(sym__0__7384252796126420662) << " | " << sym__0___45_2043653876463228102 << " | " << sym__0__2838774847530135056 << " | " << sym__0__6525564334754176696 << " | " << sym__0__8499987716798155358 << " | " << sym__0___45_6915660615674064043 << " | " << sym__0___45_8326786075612268884 << " | " << arrToString(sym__0___45_6075665051587255339) << " | " << sym__0___45_1350382245670239329 << " | " << arrToString(sym__0__2109402343114077240) << " | " << sym__0__6215935326665719112 << " | " << sym__0__2820217628767326010 << " | " << sym__0__5445672276260318348 << " | " << sym__0__3697656138623911458 << " | " << sym__0__1653175989217608742 << " | " << sym__0___45_3743776918383637103 << " | " << sym__0__2919710110324225859 << " | " << arrToString(sym__0__1749379276187346475) << " | " << sym__0___45_4706300880382947898 << " | " << arrToString(sym__0___45_8488664643470695338) << " | " << arrToString(sym__0___45_8168358588491690792) << " | " << arrToString(sym__0__3492822237187130715) << " | " << sym__0___45_5327203452744863771 << " | " << sym__0___45_3191486480184313013 << " | " << arrToString(sym__0__8273133299368630830) << " | " << sym__0__5374892212332880793 << " | " << sym__0__4657424385215848526 << " | " << sym__0___45_3458973470967037338 << " | " << sym__0___45_8815963362114542896 << " | " << sym__0___45_1032706391051161733 << " | " << arrToString(sym__0__2933689304969494962) << " | " << arrToString(sym__0__7834336576245077370) << " | " << arrToString(sym__0___45_4475634397818667505) << " | " << arrToString(sym__0__3226357619497947495) << " | " << arrToString(sym__0__2465797272458765197);
    return o.str();
  }
  bool operator <(const Record17& otherRec) const{
    return (otherRec.sym__0___45_5182087624132196707 < sym__0___45_5182087624132196707 && (otherRec.sym__0___45_1125733209087237322 < sym__0___45_1125733209087237322 && (otherRec.sym__0___45_4972797425225002076 < sym__0___45_4972797425225002076 && (otherRec.sym__0__2318854370595574362 < sym__0__2318854370595574362 && (otherRec.sym__0___45_4041623608412761896 < sym__0___45_4041623608412761896 && (otherRec.sym__0___45_3735786698084808711 < sym__0___45_3735786698084808711 && (otherRec.sym__0__7384252796126420662 < sym__0__7384252796126420662 && (otherRec.sym__0___45_2043653876463228102 < sym__0___45_2043653876463228102 && (otherRec.sym__0__2838774847530135056 < sym__0__2838774847530135056 && (otherRec.sym__0__6525564334754176696 < sym__0__6525564334754176696 && (otherRec.sym__0__8499987716798155358 < sym__0__8499987716798155358 && (otherRec.sym__0___45_6915660615674064043 < sym__0___45_6915660615674064043 && (otherRec.sym__0___45_8326786075612268884 < sym__0___45_8326786075612268884 && (otherRec.sym__0___45_6075665051587255339 < sym__0___45_6075665051587255339 && (otherRec.sym__0___45_1350382245670239329 < sym__0___45_1350382245670239329 && (otherRec.sym__0__2109402343114077240 < sym__0__2109402343114077240 && (otherRec.sym__0__6215935326665719112 < sym__0__6215935326665719112 && (otherRec.sym__0__2820217628767326010 < sym__0__2820217628767326010 && (otherRec.sym__0__5445672276260318348 < sym__0__5445672276260318348 && (otherRec.sym__0__3697656138623911458 < sym__0__3697656138623911458 && (otherRec.sym__0__1653175989217608742 < sym__0__1653175989217608742 && (otherRec.sym__0___45_3743776918383637103 < sym__0___45_3743776918383637103 && (otherRec.sym__0__2919710110324225859 < sym__0__2919710110324225859 && (otherRec.sym__0__1749379276187346475 < sym__0__1749379276187346475 && (otherRec.sym__0___45_4706300880382947898 < sym__0___45_4706300880382947898 && (otherRec.sym__0___45_8488664643470695338 < sym__0___45_8488664643470695338 && (otherRec.sym__0___45_8168358588491690792 < sym__0___45_8168358588491690792 && (otherRec.sym__0__3492822237187130715 < sym__0__3492822237187130715 && (otherRec.sym__0___45_5327203452744863771 < sym__0___45_5327203452744863771 && (otherRec.sym__0___45_3191486480184313013 < sym__0___45_3191486480184313013 && (otherRec.sym__0__8273133299368630830 < sym__0__8273133299368630830 && (otherRec.sym__0__5374892212332880793 < sym__0__5374892212332880793 && (otherRec.sym__0__4657424385215848526 < sym__0__4657424385215848526 && (otherRec.sym__0___45_3458973470967037338 < sym__0___45_3458973470967037338 && (otherRec.sym__0___45_8815963362114542896 < sym__0___45_8815963362114542896 && (otherRec.sym__0___45_1032706391051161733 < sym__0___45_1032706391051161733 && (otherRec.sym__0__2933689304969494962 < sym__0__2933689304969494962 && (otherRec.sym__0__7834336576245077370 < sym__0__7834336576245077370 && (otherRec.sym__0___45_4475634397818667505 < sym__0___45_4475634397818667505 && (otherRec.sym__0__3226357619497947495 < sym__0__3226357619497947495 && otherRec.sym__0__2465797272458765197 < sym__0__2465797272458765197))))))))))))))))))))))))))))))))))))))));
  }
  bool operator ==(const Record17& otherRec) const{
    return (otherRec.sym__0___45_5182087624132196707 == sym__0___45_5182087624132196707 && (otherRec.sym__0___45_1125733209087237322 == sym__0___45_1125733209087237322 && (otherRec.sym__0___45_4972797425225002076 == sym__0___45_4972797425225002076 && (otherRec.sym__0__2318854370595574362 == sym__0__2318854370595574362 && (otherRec.sym__0___45_4041623608412761896 == sym__0___45_4041623608412761896 && (otherRec.sym__0___45_3735786698084808711 == sym__0___45_3735786698084808711 && (otherRec.sym__0__7384252796126420662 == sym__0__7384252796126420662 && (otherRec.sym__0___45_2043653876463228102 == sym__0___45_2043653876463228102 && (otherRec.sym__0__2838774847530135056 == sym__0__2838774847530135056 && (otherRec.sym__0__6525564334754176696 == sym__0__6525564334754176696 && (otherRec.sym__0__8499987716798155358 == sym__0__8499987716798155358 && (otherRec.sym__0___45_6915660615674064043 == sym__0___45_6915660615674064043 && (otherRec.sym__0___45_8326786075612268884 == sym__0___45_8326786075612268884 && (otherRec.sym__0___45_6075665051587255339 == sym__0___45_6075665051587255339 && (otherRec.sym__0___45_1350382245670239329 == sym__0___45_1350382245670239329 && (otherRec.sym__0__2109402343114077240 == sym__0__2109402343114077240 && (otherRec.sym__0__6215935326665719112 == sym__0__6215935326665719112 && (otherRec.sym__0__2820217628767326010 == sym__0__2820217628767326010 && (otherRec.sym__0__5445672276260318348 == sym__0__5445672276260318348 && (otherRec.sym__0__3697656138623911458 == sym__0__3697656138623911458 && (otherRec.sym__0__1653175989217608742 == sym__0__1653175989217608742 && (otherRec.sym__0___45_3743776918383637103 == sym__0___45_3743776918383637103 && (otherRec.sym__0__2919710110324225859 == sym__0__2919710110324225859 && (otherRec.sym__0__1749379276187346475 == sym__0__1749379276187346475 && (otherRec.sym__0___45_4706300880382947898 == sym__0___45_4706300880382947898 && (otherRec.sym__0___45_8488664643470695338 == sym__0___45_8488664643470695338 && (otherRec.sym__0___45_8168358588491690792 == sym__0___45_8168358588491690792 && (otherRec.sym__0__3492822237187130715 == sym__0__3492822237187130715 && (otherRec.sym__0___45_5327203452744863771 == sym__0___45_5327203452744863771 && (otherRec.sym__0___45_3191486480184313013 == sym__0___45_3191486480184313013 && (otherRec.sym__0__8273133299368630830 == sym__0__8273133299368630830 && (otherRec.sym__0__5374892212332880793 == sym__0__5374892212332880793 && (otherRec.sym__0__4657424385215848526 == sym__0__4657424385215848526 && (otherRec.sym__0___45_3458973470967037338 == sym__0___45_3458973470967037338 && (otherRec.sym__0___45_8815963362114542896 == sym__0___45_8815963362114542896 && (otherRec.sym__0___45_1032706391051161733 == sym__0___45_1032706391051161733 && (otherRec.sym__0__2933689304969494962 == sym__0__2933689304969494962 && (otherRec.sym__0__7834336576245077370 == sym__0__7834336576245077370 && (otherRec.sym__0___45_4475634397818667505 == sym__0___45_4475634397818667505 && (otherRec.sym__0__3226357619497947495 == sym__0__3226357619497947495 && otherRec.sym__0__2465797272458765197 == sym__0__2465797272458765197))))))))))))))))))))))))))))))))))))))));
  }
  bool operator !=(const Record17& otherRec) const{
    return (otherRec.sym__0___45_5182087624132196707 != sym__0___45_5182087624132196707 || (otherRec.sym__0___45_1125733209087237322 != sym__0___45_1125733209087237322 || (otherRec.sym__0___45_4972797425225002076 != sym__0___45_4972797425225002076 || (otherRec.sym__0__2318854370595574362 != sym__0__2318854370595574362 || (otherRec.sym__0___45_4041623608412761896 != sym__0___45_4041623608412761896 || (otherRec.sym__0___45_3735786698084808711 != sym__0___45_3735786698084808711 || (otherRec.sym__0__7384252796126420662 != sym__0__7384252796126420662 || (otherRec.sym__0___45_2043653876463228102 != sym__0___45_2043653876463228102 || (otherRec.sym__0__2838774847530135056 != sym__0__2838774847530135056 || (otherRec.sym__0__6525564334754176696 != sym__0__6525564334754176696 || (otherRec.sym__0__8499987716798155358 != sym__0__8499987716798155358 || (otherRec.sym__0___45_6915660615674064043 != sym__0___45_6915660615674064043 || (otherRec.sym__0___45_8326786075612268884 != sym__0___45_8326786075612268884 || (otherRec.sym__0___45_6075665051587255339 != sym__0___45_6075665051587255339 || (otherRec.sym__0___45_1350382245670239329 != sym__0___45_1350382245670239329 || (otherRec.sym__0__2109402343114077240 != sym__0__2109402343114077240 || (otherRec.sym__0__6215935326665719112 != sym__0__6215935326665719112 || (otherRec.sym__0__2820217628767326010 != sym__0__2820217628767326010 || (otherRec.sym__0__5445672276260318348 != sym__0__5445672276260318348 || (otherRec.sym__0__3697656138623911458 != sym__0__3697656138623911458 || (otherRec.sym__0__1653175989217608742 != sym__0__1653175989217608742 || (otherRec.sym__0___45_3743776918383637103 != sym__0___45_3743776918383637103 || (otherRec.sym__0__2919710110324225859 != sym__0__2919710110324225859 || (otherRec.sym__0__1749379276187346475 != sym__0__1749379276187346475 || (otherRec.sym__0___45_4706300880382947898 != sym__0___45_4706300880382947898 || (otherRec.sym__0___45_8488664643470695338 != sym__0___45_8488664643470695338 || (otherRec.sym__0___45_8168358588491690792 != sym__0___45_8168358588491690792 || (otherRec.sym__0__3492822237187130715 != sym__0__3492822237187130715 || (otherRec.sym__0___45_5327203452744863771 != sym__0___45_5327203452744863771 || (otherRec.sym__0___45_3191486480184313013 != sym__0___45_3191486480184313013 || (otherRec.sym__0__8273133299368630830 != sym__0__8273133299368630830 || (otherRec.sym__0__5374892212332880793 != sym__0__5374892212332880793 || (otherRec.sym__0__4657424385215848526 != sym__0__4657424385215848526 || (otherRec.sym__0___45_3458973470967037338 != sym__0___45_3458973470967037338 || (otherRec.sym__0___45_8815963362114542896 != sym__0___45_8815963362114542896 || (otherRec.sym__0___45_1032706391051161733 != sym__0___45_1032706391051161733 || (otherRec.sym__0__2933689304969494962 != sym__0__2933689304969494962 || (otherRec.sym__0__7834336576245077370 != sym__0__7834336576245077370 || (otherRec.sym__0___45_4475634397818667505 != sym__0___45_4475634397818667505 || (otherRec.sym__0__3226357619497947495 != sym__0__3226357619497947495 || otherRec.sym__0__2465797272458765197 != sym__0__2465797272458765197))))))))))))))))))))))))))))))))))))))));
  }
  unsigned sym__0___45_5182087624132196707;
  fluidb_string<25> sym__0___45_1125733209087237322;
  fluidb_string<40> sym__0___45_4972797425225002076;
  fluidb_string<16> sym__0__2318854370595574362;
  fluidb_string<16> sym__0___45_4041623608412761896;
  fluidb_string<13> sym__0___45_3735786698084808711;
  fluidb_string<15> sym__0__7384252796126420662;
  unsigned sym__0___45_2043653876463228102;
  int sym__0__2838774847530135056;
  unsigned sym__0__6525564334754176696;
  unsigned sym__0__8499987716798155358;
  unsigned sym__0___45_6915660615674064043;
  unsigned sym__0___45_8326786075612268884;
  fluidb_string<21> sym__0___45_6075665051587255339;
  unsigned sym__0___45_1350382245670239329;
  fluidb_string<10> sym__0__2109402343114077240;
  unsigned sym__0__6215935326665719112;
  double sym__0__2820217628767326010;
  unsigned sym__0__5445672276260318348;
  double sym__0__3697656138623911458;
  unsigned sym__0__1653175989217608742;
  unsigned sym__0___45_3743776918383637103;
  double sym__0__2919710110324225859;
  fluidb_string<13> sym__0__1749379276187346475;
  unsigned sym__0___45_4706300880382947898;
  fluidb_string<18> sym__0___45_8488664643470695338;
  fluidb_string<9> sym__0___45_8168358588491690792;
  fluidb_string<9> sym__0__3492822237187130715;
  unsigned sym__0___45_5327203452744863771;
  unsigned sym__0___45_3191486480184313013;
  fluidb_string<7> sym__0__8273133299368630830;
  unsigned sym__0__5374892212332880793;
  unsigned sym__0__4657424385215848526;
  unsigned sym__0___45_3458973470967037338;
  unsigned sym__0___45_8815963362114542896;
  unsigned sym__0___45_1032706391051161733;
  fluidb_string<15> sym__0__2933689304969494962;
  fluidb_string<2> sym__0__7834336576245077370;
  fluidb_string<2> sym__0___45_4475634397818667505;
  fluidb_string<2> sym__0__3226357619497947495;
  fluidb_string<2> sym__0__2465797272458765197;
 private:
};


class Record35 {
 public:
  Record35(unsigned __sym__0__5779451790266707509, unsigned __sym__0___45_7150856907437622963, fluidb_string<10> __sym__0___45_996409509835512161) : sym__0__5779451790266707509(__sym__0__5779451790266707509), sym__0___45_7150856907437622963(__sym__0___45_7150856907437622963), sym__0___45_996409509835512161(__sym__0___45_996409509835512161)
  {
  }
  Record35() 
  {
  }
  std::string show() const{
    std::stringstream o;
    o << sym__0__5779451790266707509 << " | " << sym__0___45_7150856907437622963 << " | " << arrToString(sym__0___45_996409509835512161);
    return o.str();
  }
  bool operator <(const Record35& otherRec) const{
    return (otherRec.sym__0__5779451790266707509 < sym__0__5779451790266707509 && (otherRec.sym__0___45_7150856907437622963 < sym__0___45_7150856907437622963 && otherRec.sym__0___45_996409509835512161 < sym__0___45_996409509835512161));
  }
  bool operator ==(const Record35& otherRec) const{
    return (otherRec.sym__0__5779451790266707509 == sym__0__5779451790266707509 && (otherRec.sym__0___45_7150856907437622963 == sym__0___45_7150856907437622963 && otherRec.sym__0___45_996409509835512161 == sym__0___45_996409509835512161));
  }
  bool operator !=(const Record35& otherRec) const{
    return (otherRec.sym__0__5779451790266707509 != sym__0__5779451790266707509 || (otherRec.sym__0___45_7150856907437622963 != sym__0___45_7150856907437622963 || otherRec.sym__0___45_996409509835512161 != sym__0___45_996409509835512161));
  }
  unsigned sym__0__5779451790266707509;
  unsigned sym__0___45_7150856907437622963;
  fluidb_string<10> sym__0___45_996409509835512161;
 private:
};


class Record7 {
 public:
  Record7(unsigned __sym__0___45_981266666710950427, fluidb_string<25> __sym__0__8156038929450058798, fluidb_string<40> __sym__0__3878556393186461932, fluidb_string<16> __sym__0__6288326160960443666, fluidb_string<16> __sym__0__5409046865020314272, fluidb_string<13> __sym__0___45_1008312074011973519, fluidb_string<15> __sym__0___45_6145120768063040850, unsigned __sym__0___45_6481988073373837006, int __sym__0__5374836139459375432, unsigned __sym__0__5244243395542185408, unsigned __sym__0__3807110354982371622, unsigned __sym__0__8927195161864659213, unsigned __sym__0__5169782939973470884, fluidb_string<21> __sym__0__6941090373009867917, unsigned __sym__0___45_840169656527628057, fluidb_string<10> __sym__0__5078629249392903744, unsigned __sym__0___45_1482488298731583152, double __sym__0___45_5636589013636645582, unsigned __sym__0___45_3322305146172639292, double __sym__0__8276265444856295530, unsigned __sym__0___45_2514742414074824610, unsigned __sym__0__4980213554189056025, double __sym__0___45_3541045545965714117, fluidb_string<13> __sym__0___45_3234025661575376781) : sym__0___45_981266666710950427(__sym__0___45_981266666710950427), sym__0__8156038929450058798(__sym__0__8156038929450058798), sym__0__3878556393186461932(__sym__0__3878556393186461932), sym__0__6288326160960443666(__sym__0__6288326160960443666), sym__0__5409046865020314272(__sym__0__5409046865020314272), sym__0___45_1008312074011973519(__sym__0___45_1008312074011973519), sym__0___45_6145120768063040850(__sym__0___45_6145120768063040850), sym__0___45_6481988073373837006(__sym__0___45_6481988073373837006), sym__0__5374836139459375432(__sym__0__5374836139459375432), sym__0__5244243395542185408(__sym__0__5244243395542185408), sym__0__3807110354982371622(__sym__0__3807110354982371622), sym__0__8927195161864659213(__sym__0__8927195161864659213), sym__0__5169782939973470884(__sym__0__5169782939973470884), sym__0__6941090373009867917(__sym__0__6941090373009867917), sym__0___45_840169656527628057(__sym__0___45_840169656527628057), sym__0__5078629249392903744(__sym__0__5078629249392903744), sym__0___45_1482488298731583152(__sym__0___45_1482488298731583152), sym__0___45_5636589013636645582(__sym__0___45_5636589013636645582), sym__0___45_3322305146172639292(__sym__0___45_3322305146172639292), sym__0__8276265444856295530(__sym__0__8276265444856295530), sym__0___45_2514742414074824610(__sym__0___45_2514742414074824610), sym__0__4980213554189056025(__sym__0__4980213554189056025), sym__0___45_3541045545965714117(__sym__0___45_3541045545965714117), sym__0___45_3234025661575376781(__sym__0___45_3234025661575376781)
  {
  }
  Record7() 
  {
  }
  std::string show() const{
    std::stringstream o;
    o << sym__0___45_981266666710950427 << " | " << arrToString(sym__0__8156038929450058798) << " | " << arrToString(sym__0__3878556393186461932) << " | " << arrToString(sym__0__6288326160960443666) << " | " << arrToString(sym__0__5409046865020314272) << " | " << arrToString(sym__0___45_1008312074011973519) << " | " << arrToString(sym__0___45_6145120768063040850) << " | " << sym__0___45_6481988073373837006 << " | " << sym__0__5374836139459375432 << " | " << sym__0__5244243395542185408 << " | " << sym__0__3807110354982371622 << " | " << sym__0__8927195161864659213 << " | " << sym__0__5169782939973470884 << " | " << arrToString(sym__0__6941090373009867917) << " | " << sym__0___45_840169656527628057 << " | " << arrToString(sym__0__5078629249392903744) << " | " << sym__0___45_1482488298731583152 << " | " << sym__0___45_5636589013636645582 << " | " << sym__0___45_3322305146172639292 << " | " << sym__0__8276265444856295530 << " | " << sym__0___45_2514742414074824610 << " | " << sym__0__4980213554189056025 << " | " << sym__0___45_3541045545965714117 << " | " << arrToString(sym__0___45_3234025661575376781);
    return o.str();
  }
  bool operator <(const Record7& otherRec) const{
    return (otherRec.sym__0___45_981266666710950427 < sym__0___45_981266666710950427 && (otherRec.sym__0__8156038929450058798 < sym__0__8156038929450058798 && (otherRec.sym__0__3878556393186461932 < sym__0__3878556393186461932 && (otherRec.sym__0__6288326160960443666 < sym__0__6288326160960443666 && (otherRec.sym__0__5409046865020314272 < sym__0__5409046865020314272 && (otherRec.sym__0___45_1008312074011973519 < sym__0___45_1008312074011973519 && (otherRec.sym__0___45_6145120768063040850 < sym__0___45_6145120768063040850 && (otherRec.sym__0___45_6481988073373837006 < sym__0___45_6481988073373837006 && (otherRec.sym__0__5374836139459375432 < sym__0__5374836139459375432 && (otherRec.sym__0__5244243395542185408 < sym__0__5244243395542185408 && (otherRec.sym__0__3807110354982371622 < sym__0__3807110354982371622 && (otherRec.sym__0__8927195161864659213 < sym__0__8927195161864659213 && (otherRec.sym__0__5169782939973470884 < sym__0__5169782939973470884 && (otherRec.sym__0__6941090373009867917 < sym__0__6941090373009867917 && (otherRec.sym__0___45_840169656527628057 < sym__0___45_840169656527628057 && (otherRec.sym__0__5078629249392903744 < sym__0__5078629249392903744 && (otherRec.sym__0___45_1482488298731583152 < sym__0___45_1482488298731583152 && (otherRec.sym__0___45_5636589013636645582 < sym__0___45_5636589013636645582 && (otherRec.sym__0___45_3322305146172639292 < sym__0___45_3322305146172639292 && (otherRec.sym__0__8276265444856295530 < sym__0__8276265444856295530 && (otherRec.sym__0___45_2514742414074824610 < sym__0___45_2514742414074824610 && (otherRec.sym__0__4980213554189056025 < sym__0__4980213554189056025 && (otherRec.sym__0___45_3541045545965714117 < sym__0___45_3541045545965714117 && otherRec.sym__0___45_3234025661575376781 < sym__0___45_3234025661575376781)))))))))))))))))))))));
  }
  bool operator ==(const Record7& otherRec) const{
    return (otherRec.sym__0___45_981266666710950427 == sym__0___45_981266666710950427 && (otherRec.sym__0__8156038929450058798 == sym__0__8156038929450058798 && (otherRec.sym__0__3878556393186461932 == sym__0__3878556393186461932 && (otherRec.sym__0__6288326160960443666 == sym__0__6288326160960443666 && (otherRec.sym__0__5409046865020314272 == sym__0__5409046865020314272 && (otherRec.sym__0___45_1008312074011973519 == sym__0___45_1008312074011973519 && (otherRec.sym__0___45_6145120768063040850 == sym__0___45_6145120768063040850 && (otherRec.sym__0___45_6481988073373837006 == sym__0___45_6481988073373837006 && (otherRec.sym__0__5374836139459375432 == sym__0__5374836139459375432 && (otherRec.sym__0__5244243395542185408 == sym__0__5244243395542185408 && (otherRec.sym__0__3807110354982371622 == sym__0__3807110354982371622 && (otherRec.sym__0__8927195161864659213 == sym__0__8927195161864659213 && (otherRec.sym__0__5169782939973470884 == sym__0__5169782939973470884 && (otherRec.sym__0__6941090373009867917 == sym__0__6941090373009867917 && (otherRec.sym__0___45_840169656527628057 == sym__0___45_840169656527628057 && (otherRec.sym__0__5078629249392903744 == sym__0__5078629249392903744 && (otherRec.sym__0___45_1482488298731583152 == sym__0___45_1482488298731583152 && (otherRec.sym__0___45_5636589013636645582 == sym__0___45_5636589013636645582 && (otherRec.sym__0___45_3322305146172639292 == sym__0___45_3322305146172639292 && (otherRec.sym__0__8276265444856295530 == sym__0__8276265444856295530 && (otherRec.sym__0___45_2514742414074824610 == sym__0___45_2514742414074824610 && (otherRec.sym__0__4980213554189056025 == sym__0__4980213554189056025 && (otherRec.sym__0___45_3541045545965714117 == sym__0___45_3541045545965714117 && otherRec.sym__0___45_3234025661575376781 == sym__0___45_3234025661575376781)))))))))))))))))))))));
  }
  bool operator !=(const Record7& otherRec) const{
    return (otherRec.sym__0___45_981266666710950427 != sym__0___45_981266666710950427 || (otherRec.sym__0__8156038929450058798 != sym__0__8156038929450058798 || (otherRec.sym__0__3878556393186461932 != sym__0__3878556393186461932 || (otherRec.sym__0__6288326160960443666 != sym__0__6288326160960443666 || (otherRec.sym__0__5409046865020314272 != sym__0__5409046865020314272 || (otherRec.sym__0___45_1008312074011973519 != sym__0___45_1008312074011973519 || (otherRec.sym__0___45_6145120768063040850 != sym__0___45_6145120768063040850 || (otherRec.sym__0___45_6481988073373837006 != sym__0___45_6481988073373837006 || (otherRec.sym__0__5374836139459375432 != sym__0__5374836139459375432 || (otherRec.sym__0__5244243395542185408 != sym__0__5244243395542185408 || (otherRec.sym__0__3807110354982371622 != sym__0__3807110354982371622 || (otherRec.sym__0__8927195161864659213 != sym__0__8927195161864659213 || (otherRec.sym__0__5169782939973470884 != sym__0__5169782939973470884 || (otherRec.sym__0__6941090373009867917 != sym__0__6941090373009867917 || (otherRec.sym__0___45_840169656527628057 != sym__0___45_840169656527628057 || (otherRec.sym__0__5078629249392903744 != sym__0__5078629249392903744 || (otherRec.sym__0___45_1482488298731583152 != sym__0___45_1482488298731583152 || (otherRec.sym__0___45_5636589013636645582 != sym__0___45_5636589013636645582 || (otherRec.sym__0___45_3322305146172639292 != sym__0___45_3322305146172639292 || (otherRec.sym__0__8276265444856295530 != sym__0__8276265444856295530 || (otherRec.sym__0___45_2514742414074824610 != sym__0___45_2514742414074824610 || (otherRec.sym__0__4980213554189056025 != sym__0__4980213554189056025 || (otherRec.sym__0___45_3541045545965714117 != sym__0___45_3541045545965714117 || otherRec.sym__0___45_3234025661575376781 != sym__0___45_3234025661575376781)))))))))))))))))))))));
  }
  unsigned sym__0___45_981266666710950427;
  fluidb_string<25> sym__0__8156038929450058798;
  fluidb_string<40> sym__0__3878556393186461932;
  fluidb_string<16> sym__0__6288326160960443666;
  fluidb_string<16> sym__0__5409046865020314272;
  fluidb_string<13> sym__0___45_1008312074011973519;
  fluidb_string<15> sym__0___45_6145120768063040850;
  unsigned sym__0___45_6481988073373837006;
  int sym__0__5374836139459375432;
  unsigned sym__0__5244243395542185408;
  unsigned sym__0__3807110354982371622;
  unsigned sym__0__8927195161864659213;
  unsigned sym__0__5169782939973470884;
  fluidb_string<21> sym__0__6941090373009867917;
  unsigned sym__0___45_840169656527628057;
  fluidb_string<10> sym__0__5078629249392903744;
  unsigned sym__0___45_1482488298731583152;
  double sym__0___45_5636589013636645582;
  unsigned sym__0___45_3322305146172639292;
  double sym__0__8276265444856295530;
  unsigned sym__0___45_2514742414074824610;
  unsigned sym__0__4980213554189056025;
  double sym__0___45_3541045545965714117;
  fluidb_string<13> sym__0___45_3234025661575376781;
 private:
};


class Record5 {
 public:
  Record5(unsigned __sym__0__393284627695188530, fluidb_string<25> __sym__0___45_1696569631359040867, fluidb_string<40> __sym__0__1226505723522706623, fluidb_string<16> __sym__0___45_2736313860492388031, fluidb_string<16> __sym__0__957447195840065299, fluidb_string<13> __sym__0___45_3823071509827010578, fluidb_string<15> __sym__0__8182391436993210397) : sym__0__393284627695188530(__sym__0__393284627695188530), sym__0___45_1696569631359040867(__sym__0___45_1696569631359040867), sym__0__1226505723522706623(__sym__0__1226505723522706623), sym__0___45_2736313860492388031(__sym__0___45_2736313860492388031), sym__0__957447195840065299(__sym__0__957447195840065299), sym__0___45_3823071509827010578(__sym__0___45_3823071509827010578), sym__0__8182391436993210397(__sym__0__8182391436993210397)
  {
  }
  Record5() 
  {
  }
  std::string show() const{
    std::stringstream o;
    o << sym__0__393284627695188530 << " | " << arrToString(sym__0___45_1696569631359040867) << " | " << arrToString(sym__0__1226505723522706623) << " | " << arrToString(sym__0___45_2736313860492388031) << " | " << arrToString(sym__0__957447195840065299) << " | " << arrToString(sym__0___45_3823071509827010578) << " | " << arrToString(sym__0__8182391436993210397);
    return o.str();
  }
  bool operator <(const Record5& otherRec) const{
    return (otherRec.sym__0__393284627695188530 < sym__0__393284627695188530 && (otherRec.sym__0___45_1696569631359040867 < sym__0___45_1696569631359040867 && (otherRec.sym__0__1226505723522706623 < sym__0__1226505723522706623 && (otherRec.sym__0___45_2736313860492388031 < sym__0___45_2736313860492388031 && (otherRec.sym__0__957447195840065299 < sym__0__957447195840065299 && (otherRec.sym__0___45_3823071509827010578 < sym__0___45_3823071509827010578 && otherRec.sym__0__8182391436993210397 < sym__0__8182391436993210397))))));
  }
  bool operator ==(const Record5& otherRec) const{
    return (otherRec.sym__0__393284627695188530 == sym__0__393284627695188530 && (otherRec.sym__0___45_1696569631359040867 == sym__0___45_1696569631359040867 && (otherRec.sym__0__1226505723522706623 == sym__0__1226505723522706623 && (otherRec.sym__0___45_2736313860492388031 == sym__0___45_2736313860492388031 && (otherRec.sym__0__957447195840065299 == sym__0__957447195840065299 && (otherRec.sym__0___45_3823071509827010578 == sym__0___45_3823071509827010578 && otherRec.sym__0__8182391436993210397 == sym__0__8182391436993210397))))));
  }
  bool operator !=(const Record5& otherRec) const{
    return (otherRec.sym__0__393284627695188530 != sym__0__393284627695188530 || (otherRec.sym__0___45_1696569631359040867 != sym__0___45_1696569631359040867 || (otherRec.sym__0__1226505723522706623 != sym__0__1226505723522706623 || (otherRec.sym__0___45_2736313860492388031 != sym__0___45_2736313860492388031 || (otherRec.sym__0__957447195840065299 != sym__0__957447195840065299 || (otherRec.sym__0___45_3823071509827010578 != sym__0___45_3823071509827010578 || otherRec.sym__0__8182391436993210397 != sym__0__8182391436993210397))))));
  }
  unsigned sym__0__393284627695188530;
  fluidb_string<25> sym__0___45_1696569631359040867;
  fluidb_string<40> sym__0__1226505723522706623;
  fluidb_string<16> sym__0___45_2736313860492388031;
  fluidb_string<16> sym__0__957447195840065299;
  fluidb_string<13> sym__0___45_3823071509827010578;
  fluidb_string<15> sym__0__8182391436993210397;
 private:
};


class Record1 {
 public:
  Record1(unsigned __sym__0___45_9117911789383871612, fluidb_string<25> __sym__0___45_1547112764757372609, fluidb_string<40> __sym__0___45_8663957751614366179, fluidb_string<16> __sym__0__1466641425010216931, fluidb_string<16> __sym__0__3672857626658041553, fluidb_string<13> __sym__0___45_3362440237381592032, fluidb_string<15> __sym__0___45_6631364176934158657) : sym__0___45_9117911789383871612(__sym__0___45_9117911789383871612), sym__0___45_1547112764757372609(__sym__0___45_1547112764757372609), sym__0___45_8663957751614366179(__sym__0___45_8663957751614366179), sym__0__1466641425010216931(__sym__0__1466641425010216931), sym__0__3672857626658041553(__sym__0__3672857626658041553), sym__0___45_3362440237381592032(__sym__0___45_3362440237381592032), sym__0___45_6631364176934158657(__sym__0___45_6631364176934158657)
  {
  }
  Record1() 
  {
  }
  std::string show() const{
    std::stringstream o;
    o << sym__0___45_9117911789383871612 << " | " << arrToString(sym__0___45_1547112764757372609) << " | " << arrToString(sym__0___45_8663957751614366179) << " | " << arrToString(sym__0__1466641425010216931) << " | " << arrToString(sym__0__3672857626658041553) << " | " << arrToString(sym__0___45_3362440237381592032) << " | " << arrToString(sym__0___45_6631364176934158657);
    return o.str();
  }
  bool operator <(const Record1& otherRec) const{
    return (otherRec.sym__0___45_9117911789383871612 < sym__0___45_9117911789383871612 && (otherRec.sym__0___45_1547112764757372609 < sym__0___45_1547112764757372609 && (otherRec.sym__0___45_8663957751614366179 < sym__0___45_8663957751614366179 && (otherRec.sym__0__1466641425010216931 < sym__0__1466641425010216931 && (otherRec.sym__0__3672857626658041553 < sym__0__3672857626658041553 && (otherRec.sym__0___45_3362440237381592032 < sym__0___45_3362440237381592032 && otherRec.sym__0___45_6631364176934158657 < sym__0___45_6631364176934158657))))));
  }
  bool operator ==(const Record1& otherRec) const{
    return (otherRec.sym__0___45_9117911789383871612 == sym__0___45_9117911789383871612 && (otherRec.sym__0___45_1547112764757372609 == sym__0___45_1547112764757372609 && (otherRec.sym__0___45_8663957751614366179 == sym__0___45_8663957751614366179 && (otherRec.sym__0__1466641425010216931 == sym__0__1466641425010216931 && (otherRec.sym__0__3672857626658041553 == sym__0__3672857626658041553 && (otherRec.sym__0___45_3362440237381592032 == sym__0___45_3362440237381592032 && otherRec.sym__0___45_6631364176934158657 == sym__0___45_6631364176934158657))))));
  }
  bool operator !=(const Record1& otherRec) const{
    return (otherRec.sym__0___45_9117911789383871612 != sym__0___45_9117911789383871612 || (otherRec.sym__0___45_1547112764757372609 != sym__0___45_1547112764757372609 || (otherRec.sym__0___45_8663957751614366179 != sym__0___45_8663957751614366179 || (otherRec.sym__0__1466641425010216931 != sym__0__1466641425010216931 || (otherRec.sym__0__3672857626658041553 != sym__0__3672857626658041553 || (otherRec.sym__0___45_3362440237381592032 != sym__0___45_3362440237381592032 || otherRec.sym__0___45_6631364176934158657 != sym__0___45_6631364176934158657))))));
  }
  unsigned sym__0___45_9117911789383871612;
  fluidb_string<25> sym__0___45_1547112764757372609;
  fluidb_string<40> sym__0___45_8663957751614366179;
  fluidb_string<16> sym__0__1466641425010216931;
  fluidb_string<16> sym__0__3672857626658041553;
  fluidb_string<13> sym__0___45_3362440237381592032;
  fluidb_string<15> sym__0___45_6631364176934158657;
 private:
};


class Record37 {
 public:
  Record37(unsigned __sym__0___45_9062977367914427397, fluidb_string<25> __sym__0___45_2529420040722706896, fluidb_string<40> __sym__0__574837602909090142, fluidb_string<16> __sym__0__593663438043378012, fluidb_string<16> __sym__0___45_3887971984962307750, fluidb_string<13> __sym__0__5823252983849143071, fluidb_string<15> __sym__0___45_106394867614362960, unsigned __sym__0__6714030146677542844, int __sym__0__2887490991825418322, unsigned __sym__0__1712165930429801146, unsigned __sym__0___45_2770072266723735208, unsigned __sym__0___45_6459836926625833613, unsigned __sym__0__7430011083678934790, fluidb_string<21> __sym__0__8650139153845624051, unsigned __sym__0___45_2149426645220855235, fluidb_string<10> __sym__0___45_6782049901239695046, unsigned __sym__0__7592147203193979498, double __sym__0__4252747565219064764, unsigned __sym__0__7984101336509792358, double __sym__0___45_4696990900813234940, unsigned __sym__0___45_333127918406099392, unsigned __sym__0__1682335219184206071, double __sym__0___45_1968041223374194423, fluidb_string<13> __sym__0__7319886423946863313, unsigned __sym__0__5809761575032387040, fluidb_string<18> __sym__0__7089670065349420496, fluidb_string<9> __sym__0__6799464548088745306, fluidb_string<9> __sym__0__3432841002905483105, unsigned __sym__0__7494859993398015587, unsigned __sym__0___45_9206223202625852687, fluidb_string<7> __sym__0___45_7058002245744215800, unsigned __sym__0___45_6336476145267172161, unsigned __sym__0___45_394010879145796312, unsigned __sym__0__481431924301037312, unsigned __sym__0__5264647155959307922, unsigned __sym__0___45_6635260509808465407, fluidb_string<15> __sym__0__6067010566108174452, fluidb_string<2> __sym__0___45_4481069348252575620, fluidb_string<2> __sym__0__3235793487446917133, fluidb_string<2> __sym__0__4996330425147081765, fluidb_string<2> __sym__0___45_8340418653084059381, unsigned __sym__0__8129013918067253034, fluidb_string<55> __sym__0___45_7293426445565610246, fluidb_string<25> __sym__0__8820012445037342349, fluidb_string<7> __sym__0__6863506390321881387, fluidb_string<10> __sym__0___45_4545874988123414947, fluidb_string<11> __sym__0__1243206733405227801, fluidb_string<25> __sym__0__1972712326009675807, unsigned __sym__0__7671879331830055556, fluidb_string<10> __sym__0___45_6494031878969548547) : sym__0___45_9062977367914427397(__sym__0___45_9062977367914427397), sym__0___45_2529420040722706896(__sym__0___45_2529420040722706896), sym__0__574837602909090142(__sym__0__574837602909090142), sym__0__593663438043378012(__sym__0__593663438043378012), sym__0___45_3887971984962307750(__sym__0___45_3887971984962307750), sym__0__5823252983849143071(__sym__0__5823252983849143071), sym__0___45_106394867614362960(__sym__0___45_106394867614362960), sym__0__6714030146677542844(__sym__0__6714030146677542844), sym__0__2887490991825418322(__sym__0__2887490991825418322), sym__0__1712165930429801146(__sym__0__1712165930429801146), sym__0___45_2770072266723735208(__sym__0___45_2770072266723735208), sym__0___45_6459836926625833613(__sym__0___45_6459836926625833613), sym__0__7430011083678934790(__sym__0__7430011083678934790), sym__0__8650139153845624051(__sym__0__8650139153845624051), sym__0___45_2149426645220855235(__sym__0___45_2149426645220855235), sym__0___45_6782049901239695046(__sym__0___45_6782049901239695046), sym__0__7592147203193979498(__sym__0__7592147203193979498), sym__0__4252747565219064764(__sym__0__4252747565219064764), sym__0__7984101336509792358(__sym__0__7984101336509792358), sym__0___45_4696990900813234940(__sym__0___45_4696990900813234940), sym__0___45_333127918406099392(__sym__0___45_333127918406099392), sym__0__1682335219184206071(__sym__0__1682335219184206071), sym__0___45_1968041223374194423(__sym__0___45_1968041223374194423), sym__0__7319886423946863313(__sym__0__7319886423946863313), sym__0__5809761575032387040(__sym__0__5809761575032387040), sym__0__7089670065349420496(__sym__0__7089670065349420496), sym__0__6799464548088745306(__sym__0__6799464548088745306), sym__0__3432841002905483105(__sym__0__3432841002905483105), sym__0__7494859993398015587(__sym__0__7494859993398015587), sym__0___45_9206223202625852687(__sym__0___45_9206223202625852687), sym__0___45_7058002245744215800(__sym__0___45_7058002245744215800), sym__0___45_6336476145267172161(__sym__0___45_6336476145267172161), sym__0___45_394010879145796312(__sym__0___45_394010879145796312), sym__0__481431924301037312(__sym__0__481431924301037312), sym__0__5264647155959307922(__sym__0__5264647155959307922), sym__0___45_6635260509808465407(__sym__0___45_6635260509808465407), sym__0__6067010566108174452(__sym__0__6067010566108174452), sym__0___45_4481069348252575620(__sym__0___45_4481069348252575620), sym__0__3235793487446917133(__sym__0__3235793487446917133), sym__0__4996330425147081765(__sym__0__4996330425147081765), sym__0___45_8340418653084059381(__sym__0___45_8340418653084059381), sym__0__8129013918067253034(__sym__0__8129013918067253034), sym__0___45_7293426445565610246(__sym__0___45_7293426445565610246), sym__0__8820012445037342349(__sym__0__8820012445037342349), sym__0__6863506390321881387(__sym__0__6863506390321881387), sym__0___45_4545874988123414947(__sym__0___45_4545874988123414947), sym__0__1243206733405227801(__sym__0__1243206733405227801), sym__0__1972712326009675807(__sym__0__1972712326009675807), sym__0__7671879331830055556(__sym__0__7671879331830055556), sym__0___45_6494031878969548547(__sym__0___45_6494031878969548547)
  {
  }
  Record37() 
  {
  }
  std::string show() const{
    std::stringstream o;
    o << sym__0___45_9062977367914427397 << " | " << arrToString(sym__0___45_2529420040722706896) << " | " << arrToString(sym__0__574837602909090142) << " | " << arrToString(sym__0__593663438043378012) << " | " << arrToString(sym__0___45_3887971984962307750) << " | " << arrToString(sym__0__5823252983849143071) << " | " << arrToString(sym__0___45_106394867614362960) << " | " << sym__0__6714030146677542844 << " | " << sym__0__2887490991825418322 << " | " << sym__0__1712165930429801146 << " | " << sym__0___45_2770072266723735208 << " | " << sym__0___45_6459836926625833613 << " | " << sym__0__7430011083678934790 << " | " << arrToString(sym__0__8650139153845624051) << " | " << sym__0___45_2149426645220855235 << " | " << arrToString(sym__0___45_6782049901239695046) << " | " << sym__0__7592147203193979498 << " | " << sym__0__4252747565219064764 << " | " << sym__0__7984101336509792358 << " | " << sym__0___45_4696990900813234940 << " | " << sym__0___45_333127918406099392 << " | " << sym__0__1682335219184206071 << " | " << sym__0___45_1968041223374194423 << " | " << arrToString(sym__0__7319886423946863313) << " | " << sym__0__5809761575032387040 << " | " << arrToString(sym__0__7089670065349420496) << " | " << arrToString(sym__0__6799464548088745306) << " | " << arrToString(sym__0__3432841002905483105) << " | " << sym__0__7494859993398015587 << " | " << sym__0___45_9206223202625852687 << " | " << arrToString(sym__0___45_7058002245744215800) << " | " << sym__0___45_6336476145267172161 << " | " << sym__0___45_394010879145796312 << " | " << sym__0__481431924301037312 << " | " << sym__0__5264647155959307922 << " | " << sym__0___45_6635260509808465407 << " | " << arrToString(sym__0__6067010566108174452) << " | " << arrToString(sym__0___45_4481069348252575620) << " | " << arrToString(sym__0__3235793487446917133) << " | " << arrToString(sym__0__4996330425147081765) << " | " << arrToString(sym__0___45_8340418653084059381) << " | " << sym__0__8129013918067253034 << " | " << arrToString(sym__0___45_7293426445565610246) << " | " << arrToString(sym__0__8820012445037342349) << " | " << arrToString(sym__0__6863506390321881387) << " | " << arrToString(sym__0___45_4545874988123414947) << " | " << arrToString(sym__0__1243206733405227801) << " | " << arrToString(sym__0__1972712326009675807) << " | " << sym__0__7671879331830055556 << " | " << arrToString(sym__0___45_6494031878969548547);
    return o.str();
  }
  bool operator <(const Record37& otherRec) const{
    return (otherRec.sym__0___45_9062977367914427397 < sym__0___45_9062977367914427397 && (otherRec.sym__0___45_2529420040722706896 < sym__0___45_2529420040722706896 && (otherRec.sym__0__574837602909090142 < sym__0__574837602909090142 && (otherRec.sym__0__593663438043378012 < sym__0__593663438043378012 && (otherRec.sym__0___45_3887971984962307750 < sym__0___45_3887971984962307750 && (otherRec.sym__0__5823252983849143071 < sym__0__5823252983849143071 && (otherRec.sym__0___45_106394867614362960 < sym__0___45_106394867614362960 && (otherRec.sym__0__6714030146677542844 < sym__0__6714030146677542844 && (otherRec.sym__0__2887490991825418322 < sym__0__2887490991825418322 && (otherRec.sym__0__1712165930429801146 < sym__0__1712165930429801146 && (otherRec.sym__0___45_2770072266723735208 < sym__0___45_2770072266723735208 && (otherRec.sym__0___45_6459836926625833613 < sym__0___45_6459836926625833613 && (otherRec.sym__0__7430011083678934790 < sym__0__7430011083678934790 && (otherRec.sym__0__8650139153845624051 < sym__0__8650139153845624051 && (otherRec.sym__0___45_2149426645220855235 < sym__0___45_2149426645220855235 && (otherRec.sym__0___45_6782049901239695046 < sym__0___45_6782049901239695046 && (otherRec.sym__0__7592147203193979498 < sym__0__7592147203193979498 && (otherRec.sym__0__4252747565219064764 < sym__0__4252747565219064764 && (otherRec.sym__0__7984101336509792358 < sym__0__7984101336509792358 && (otherRec.sym__0___45_4696990900813234940 < sym__0___45_4696990900813234940 && (otherRec.sym__0___45_333127918406099392 < sym__0___45_333127918406099392 && (otherRec.sym__0__1682335219184206071 < sym__0__1682335219184206071 && (otherRec.sym__0___45_1968041223374194423 < sym__0___45_1968041223374194423 && (otherRec.sym__0__7319886423946863313 < sym__0__7319886423946863313 && (otherRec.sym__0__5809761575032387040 < sym__0__5809761575032387040 && (otherRec.sym__0__7089670065349420496 < sym__0__7089670065349420496 && (otherRec.sym__0__6799464548088745306 < sym__0__6799464548088745306 && (otherRec.sym__0__3432841002905483105 < sym__0__3432841002905483105 && (otherRec.sym__0__7494859993398015587 < sym__0__7494859993398015587 && (otherRec.sym__0___45_9206223202625852687 < sym__0___45_9206223202625852687 && (otherRec.sym__0___45_7058002245744215800 < sym__0___45_7058002245744215800 && (otherRec.sym__0___45_6336476145267172161 < sym__0___45_6336476145267172161 && (otherRec.sym__0___45_394010879145796312 < sym__0___45_394010879145796312 && (otherRec.sym__0__481431924301037312 < sym__0__481431924301037312 && (otherRec.sym__0__5264647155959307922 < sym__0__5264647155959307922 && (otherRec.sym__0___45_6635260509808465407 < sym__0___45_6635260509808465407 && (otherRec.sym__0__6067010566108174452 < sym__0__6067010566108174452 && (otherRec.sym__0___45_4481069348252575620 < sym__0___45_4481069348252575620 && (otherRec.sym__0__3235793487446917133 < sym__0__3235793487446917133 && (otherRec.sym__0__4996330425147081765 < sym__0__4996330425147081765 && (otherRec.sym__0___45_8340418653084059381 < sym__0___45_8340418653084059381 && (otherRec.sym__0__8129013918067253034 < sym__0__8129013918067253034 && (otherRec.sym__0___45_7293426445565610246 < sym__0___45_7293426445565610246 && (otherRec.sym__0__8820012445037342349 < sym__0__8820012445037342349 && (otherRec.sym__0__6863506390321881387 < sym__0__6863506390321881387 && (otherRec.sym__0___45_4545874988123414947 < sym__0___45_4545874988123414947 && (otherRec.sym__0__1243206733405227801 < sym__0__1243206733405227801 && (otherRec.sym__0__1972712326009675807 < sym__0__1972712326009675807 && (otherRec.sym__0__7671879331830055556 < sym__0__7671879331830055556 && otherRec.sym__0___45_6494031878969548547 < sym__0___45_6494031878969548547)))))))))))))))))))))))))))))))))))))))))))))))));
  }
  bool operator ==(const Record37& otherRec) const{
    return (otherRec.sym__0___45_9062977367914427397 == sym__0___45_9062977367914427397 && (otherRec.sym__0___45_2529420040722706896 == sym__0___45_2529420040722706896 && (otherRec.sym__0__574837602909090142 == sym__0__574837602909090142 && (otherRec.sym__0__593663438043378012 == sym__0__593663438043378012 && (otherRec.sym__0___45_3887971984962307750 == sym__0___45_3887971984962307750 && (otherRec.sym__0__5823252983849143071 == sym__0__5823252983849143071 && (otherRec.sym__0___45_106394867614362960 == sym__0___45_106394867614362960 && (otherRec.sym__0__6714030146677542844 == sym__0__6714030146677542844 && (otherRec.sym__0__2887490991825418322 == sym__0__2887490991825418322 && (otherRec.sym__0__1712165930429801146 == sym__0__1712165930429801146 && (otherRec.sym__0___45_2770072266723735208 == sym__0___45_2770072266723735208 && (otherRec.sym__0___45_6459836926625833613 == sym__0___45_6459836926625833613 && (otherRec.sym__0__7430011083678934790 == sym__0__7430011083678934790 && (otherRec.sym__0__8650139153845624051 == sym__0__8650139153845624051 && (otherRec.sym__0___45_2149426645220855235 == sym__0___45_2149426645220855235 && (otherRec.sym__0___45_6782049901239695046 == sym__0___45_6782049901239695046 && (otherRec.sym__0__7592147203193979498 == sym__0__7592147203193979498 && (otherRec.sym__0__4252747565219064764 == sym__0__4252747565219064764 && (otherRec.sym__0__7984101336509792358 == sym__0__7984101336509792358 && (otherRec.sym__0___45_4696990900813234940 == sym__0___45_4696990900813234940 && (otherRec.sym__0___45_333127918406099392 == sym__0___45_333127918406099392 && (otherRec.sym__0__1682335219184206071 == sym__0__1682335219184206071 && (otherRec.sym__0___45_1968041223374194423 == sym__0___45_1968041223374194423 && (otherRec.sym__0__7319886423946863313 == sym__0__7319886423946863313 && (otherRec.sym__0__5809761575032387040 == sym__0__5809761575032387040 && (otherRec.sym__0__7089670065349420496 == sym__0__7089670065349420496 && (otherRec.sym__0__6799464548088745306 == sym__0__6799464548088745306 && (otherRec.sym__0__3432841002905483105 == sym__0__3432841002905483105 && (otherRec.sym__0__7494859993398015587 == sym__0__7494859993398015587 && (otherRec.sym__0___45_9206223202625852687 == sym__0___45_9206223202625852687 && (otherRec.sym__0___45_7058002245744215800 == sym__0___45_7058002245744215800 && (otherRec.sym__0___45_6336476145267172161 == sym__0___45_6336476145267172161 && (otherRec.sym__0___45_394010879145796312 == sym__0___45_394010879145796312 && (otherRec.sym__0__481431924301037312 == sym__0__481431924301037312 && (otherRec.sym__0__5264647155959307922 == sym__0__5264647155959307922 && (otherRec.sym__0___45_6635260509808465407 == sym__0___45_6635260509808465407 && (otherRec.sym__0__6067010566108174452 == sym__0__6067010566108174452 && (otherRec.sym__0___45_4481069348252575620 == sym__0___45_4481069348252575620 && (otherRec.sym__0__3235793487446917133 == sym__0__3235793487446917133 && (otherRec.sym__0__4996330425147081765 == sym__0__4996330425147081765 && (otherRec.sym__0___45_8340418653084059381 == sym__0___45_8340418653084059381 && (otherRec.sym__0__8129013918067253034 == sym__0__8129013918067253034 && (otherRec.sym__0___45_7293426445565610246 == sym__0___45_7293426445565610246 && (otherRec.sym__0__8820012445037342349 == sym__0__8820012445037342349 && (otherRec.sym__0__6863506390321881387 == sym__0__6863506390321881387 && (otherRec.sym__0___45_4545874988123414947 == sym__0___45_4545874988123414947 && (otherRec.sym__0__1243206733405227801 == sym__0__1243206733405227801 && (otherRec.sym__0__1972712326009675807 == sym__0__1972712326009675807 && (otherRec.sym__0__7671879331830055556 == sym__0__7671879331830055556 && otherRec.sym__0___45_6494031878969548547 == sym__0___45_6494031878969548547)))))))))))))))))))))))))))))))))))))))))))))))));
  }
  bool operator !=(const Record37& otherRec) const{
    return (otherRec.sym__0___45_9062977367914427397 != sym__0___45_9062977367914427397 || (otherRec.sym__0___45_2529420040722706896 != sym__0___45_2529420040722706896 || (otherRec.sym__0__574837602909090142 != sym__0__574837602909090142 || (otherRec.sym__0__593663438043378012 != sym__0__593663438043378012 || (otherRec.sym__0___45_3887971984962307750 != sym__0___45_3887971984962307750 || (otherRec.sym__0__5823252983849143071 != sym__0__5823252983849143071 || (otherRec.sym__0___45_106394867614362960 != sym__0___45_106394867614362960 || (otherRec.sym__0__6714030146677542844 != sym__0__6714030146677542844 || (otherRec.sym__0__2887490991825418322 != sym__0__2887490991825418322 || (otherRec.sym__0__1712165930429801146 != sym__0__1712165930429801146 || (otherRec.sym__0___45_2770072266723735208 != sym__0___45_2770072266723735208 || (otherRec.sym__0___45_6459836926625833613 != sym__0___45_6459836926625833613 || (otherRec.sym__0__7430011083678934790 != sym__0__7430011083678934790 || (otherRec.sym__0__8650139153845624051 != sym__0__8650139153845624051 || (otherRec.sym__0___45_2149426645220855235 != sym__0___45_2149426645220855235 || (otherRec.sym__0___45_6782049901239695046 != sym__0___45_6782049901239695046 || (otherRec.sym__0__7592147203193979498 != sym__0__7592147203193979498 || (otherRec.sym__0__4252747565219064764 != sym__0__4252747565219064764 || (otherRec.sym__0__7984101336509792358 != sym__0__7984101336509792358 || (otherRec.sym__0___45_4696990900813234940 != sym__0___45_4696990900813234940 || (otherRec.sym__0___45_333127918406099392 != sym__0___45_333127918406099392 || (otherRec.sym__0__1682335219184206071 != sym__0__1682335219184206071 || (otherRec.sym__0___45_1968041223374194423 != sym__0___45_1968041223374194423 || (otherRec.sym__0__7319886423946863313 != sym__0__7319886423946863313 || (otherRec.sym__0__5809761575032387040 != sym__0__5809761575032387040 || (otherRec.sym__0__7089670065349420496 != sym__0__7089670065349420496 || (otherRec.sym__0__6799464548088745306 != sym__0__6799464548088745306 || (otherRec.sym__0__3432841002905483105 != sym__0__3432841002905483105 || (otherRec.sym__0__7494859993398015587 != sym__0__7494859993398015587 || (otherRec.sym__0___45_9206223202625852687 != sym__0___45_9206223202625852687 || (otherRec.sym__0___45_7058002245744215800 != sym__0___45_7058002245744215800 || (otherRec.sym__0___45_6336476145267172161 != sym__0___45_6336476145267172161 || (otherRec.sym__0___45_394010879145796312 != sym__0___45_394010879145796312 || (otherRec.sym__0__481431924301037312 != sym__0__481431924301037312 || (otherRec.sym__0__5264647155959307922 != sym__0__5264647155959307922 || (otherRec.sym__0___45_6635260509808465407 != sym__0___45_6635260509808465407 || (otherRec.sym__0__6067010566108174452 != sym__0__6067010566108174452 || (otherRec.sym__0___45_4481069348252575620 != sym__0___45_4481069348252575620 || (otherRec.sym__0__3235793487446917133 != sym__0__3235793487446917133 || (otherRec.sym__0__4996330425147081765 != sym__0__4996330425147081765 || (otherRec.sym__0___45_8340418653084059381 != sym__0___45_8340418653084059381 || (otherRec.sym__0__8129013918067253034 != sym__0__8129013918067253034 || (otherRec.sym__0___45_7293426445565610246 != sym__0___45_7293426445565610246 || (otherRec.sym__0__8820012445037342349 != sym__0__8820012445037342349 || (otherRec.sym__0__6863506390321881387 != sym__0__6863506390321881387 || (otherRec.sym__0___45_4545874988123414947 != sym__0___45_4545874988123414947 || (otherRec.sym__0__1243206733405227801 != sym__0__1243206733405227801 || (otherRec.sym__0__1972712326009675807 != sym__0__1972712326009675807 || (otherRec.sym__0__7671879331830055556 != sym__0__7671879331830055556 || otherRec.sym__0___45_6494031878969548547 != sym__0___45_6494031878969548547)))))))))))))))))))))))))))))))))))))))))))))))));
  }
  unsigned sym__0___45_9062977367914427397;
  fluidb_string<25> sym__0___45_2529420040722706896;
  fluidb_string<40> sym__0__574837602909090142;
  fluidb_string<16> sym__0__593663438043378012;
  fluidb_string<16> sym__0___45_3887971984962307750;
  fluidb_string<13> sym__0__5823252983849143071;
  fluidb_string<15> sym__0___45_106394867614362960;
  unsigned sym__0__6714030146677542844;
  int sym__0__2887490991825418322;
  unsigned sym__0__1712165930429801146;
  unsigned sym__0___45_2770072266723735208;
  unsigned sym__0___45_6459836926625833613;
  unsigned sym__0__7430011083678934790;
  fluidb_string<21> sym__0__8650139153845624051;
  unsigned sym__0___45_2149426645220855235;
  fluidb_string<10> sym__0___45_6782049901239695046;
  unsigned sym__0__7592147203193979498;
  double sym__0__4252747565219064764;
  unsigned sym__0__7984101336509792358;
  double sym__0___45_4696990900813234940;
  unsigned sym__0___45_333127918406099392;
  unsigned sym__0__1682335219184206071;
  double sym__0___45_1968041223374194423;
  fluidb_string<13> sym__0__7319886423946863313;
  unsigned sym__0__5809761575032387040;
  fluidb_string<18> sym__0__7089670065349420496;
  fluidb_string<9> sym__0__6799464548088745306;
  fluidb_string<9> sym__0__3432841002905483105;
  unsigned sym__0__7494859993398015587;
  unsigned sym__0___45_9206223202625852687;
  fluidb_string<7> sym__0___45_7058002245744215800;
  unsigned sym__0___45_6336476145267172161;
  unsigned sym__0___45_394010879145796312;
  unsigned sym__0__481431924301037312;
  unsigned sym__0__5264647155959307922;
  unsigned sym__0___45_6635260509808465407;
  fluidb_string<15> sym__0__6067010566108174452;
  fluidb_string<2> sym__0___45_4481069348252575620;
  fluidb_string<2> sym__0__3235793487446917133;
  fluidb_string<2> sym__0__4996330425147081765;
  fluidb_string<2> sym__0___45_8340418653084059381;
  unsigned sym__0__8129013918067253034;
  fluidb_string<55> sym__0___45_7293426445565610246;
  fluidb_string<25> sym__0__8820012445037342349;
  fluidb_string<7> sym__0__6863506390321881387;
  fluidb_string<10> sym__0___45_4545874988123414947;
  fluidb_string<11> sym__0__1243206733405227801;
  fluidb_string<25> sym__0__1972712326009675807;
  unsigned sym__0__7671879331830055556;
  fluidb_string<10> sym__0___45_6494031878969548547;
 private:
};


class CallableClass8 {
 public:
  Record7 operator()(const Record5& record3, const Record6& record4) {
    return Record7(record3.sym__0__393284627695188530, record3.sym__0___45_1696569631359040867, record3.sym__0__1226505723522706623, record3.sym__0___45_2736313860492388031, record3.sym__0__957447195840065299, record3.sym__0___45_3823071509827010578, record3.sym__0__8182391436993210397, record4.sym__0___45_7574074018531922998, record4.sym__0__1125464382786937920, record4.sym__0___45_8257174981563598792, record4.sym__0__957746932829998382, record4.sym__0__934137931677987637, record4.sym__0___45_7332894783442362324, record4.sym__0__8974811218372806325, record4.sym__0___45_5217562530132451785, record4.sym__0__7851147553396318904, record4.sym__0___45_4975505511391694456, record4.sym__0___45_7249986409969561654, record4.sym__0__4671626969570181580, record4.sym__0___45_3666121704283105054, record4.sym__0__5495011930072844518, record4.sym__0___45_4423447118092167055, record4.sym__0___45_1608082021099887893, record4.sym__0__1584187396639360899);
  }
  typedef Record7 Codomain;
  typedef Record5 Domain0;
  typedef Record6 Domain1;
 private:
};


class CallableClass44 {
 public:
  Record41 operator()(const Record35& record43) {
    return Record41(record43.sym__0___45_7150856907437622963, record43.sym__0___45_996409509835512161);
  }
  typedef Record41 Codomain;
  typedef Record35 Domain0;
 private:
};


class CallableClass20 {
 public:
  Record9 operator()(const Record7& record19) {
    return Record9(record19.sym__0__5169782939973470884);
  }
  typedef Record9 Codomain;
  typedef Record7 Domain0;
 private:
};


class CallableClass22 {
 public:
  Record9 operator()(const Record16& record21) {
    return Record9(record21.sym__0__2037864888707786451);
  }
  typedef Record9 Codomain;
  typedef Record16 Domain0;
 private:
};


class CallableClass40 {
 public:
  Record35 operator()(const Record37& record34) {
    return Record35(vAggrSum36(record34.sym__0___45_333127918406099392), vAggrFirst38(record34.sym__0__7494859993398015587), vAggrFirst39(record34.sym__0___45_4545874988123414947));
  }
  typedef Record35 Codomain;
  typedef Record37 Domain0;
 private:
  AggrSum<unsigned> vAggrSum36;
  AggrFirst<unsigned> vAggrFirst38;
  AggrFirst<fluidb_string<10>> vAggrFirst39;
};


class CallableClass42 {
 public:
  Record41 operator()(const Record37& record34) {
    return Record41(record34.sym__0__7494859993398015587, record34.sym__0___45_4545874988123414947);
  }
  typedef Record41 Codomain;
  typedef Record37 Domain0;
 private:
};


class CallableClass29 {
 public:
  Record9 operator()(const Record17& record28) {
    return Record9(record28.sym__0__8499987716798155358);
  }
  typedef Record9 Codomain;
  typedef Record17 Domain0;
 private:
};


class CallableClass13 {
 public:
  Record9 operator()(const Record6& record12) {
    return Record9(record12.sym__0__934137931677987637);
  }
  typedef Record9 Codomain;
  typedef Record6 Domain0;
 private:
};


class CallableClass2 {
 public:
  bool operator()(const Record1& record0) {
    return like(record0.sym__0___45_3362440237381592032, "EUROPE");
  }
  typedef bool Codomain;
  typedef Record1 Domain0;
 private:
};


class CallableClass11 {
 public:
  Record9 operator()(const Record5& record10) {
    return Record9(record10.sym__0__393284627695188530);
  }
  typedef Record9 Codomain;
  typedef Record5 Domain0;
 private:
};


class CallableClass27 {
 public:
  Record26 operator()(const Record17& record23, const Record25& record24) {
    return Record26(record23.sym__0___45_5182087624132196707, record23.sym__0___45_1125733209087237322, record23.sym__0___45_4972797425225002076, record23.sym__0__2318854370595574362, record23.sym__0___45_4041623608412761896, record23.sym__0___45_3735786698084808711, record23.sym__0__7384252796126420662, record23.sym__0___45_2043653876463228102, record23.sym__0__2838774847530135056, record23.sym__0__6525564334754176696, record23.sym__0__8499987716798155358, record23.sym__0___45_6915660615674064043, record23.sym__0___45_8326786075612268884, record23.sym__0___45_6075665051587255339, record23.sym__0___45_1350382245670239329, record23.sym__0__2109402343114077240, record23.sym__0__6215935326665719112, record23.sym__0__2820217628767326010, record23.sym__0__5445672276260318348, record23.sym__0__3697656138623911458, record23.sym__0__1653175989217608742, record23.sym__0___45_3743776918383637103, record23.sym__0__2919710110324225859, record23.sym__0__1749379276187346475, record23.sym__0___45_4706300880382947898, record23.sym__0___45_8488664643470695338, record23.sym__0___45_8168358588491690792, record23.sym__0__3492822237187130715, record23.sym__0___45_5327203452744863771, record23.sym__0___45_3191486480184313013, record23.sym__0__8273133299368630830, record23.sym__0__5374892212332880793, record23.sym__0__4657424385215848526, record23.sym__0___45_3458973470967037338, record23.sym__0___45_8815963362114542896, record23.sym__0___45_1032706391051161733, record23.sym__0__2933689304969494962, record23.sym__0__7834336576245077370, record23.sym__0___45_4475634397818667505, record23.sym__0__3226357619497947495, record23.sym__0__2465797272458765197, record24.sym__0__7178003535380331304, record24.sym__0___45_7020257275696364520, record24.sym__0___45_6307179734719967033, record24.sym__0__4568304886257136061, record24.sym__0___45_6291097039630000265, record24.sym__0__551327770031967739, record24.sym__0__3827696365022297353, record24.sym__0___45_1779543743759935870, record24.sym__0__3752090135924368535);
  }
  typedef Record26 Codomain;
  typedef Record17 Domain0;
  typedef Record25 Domain1;
 private:
};


class CallableClass31 {
 public:
  Record9 operator()(const Record25& record30) {
    return Record9(record30.sym__0__7178003535380331304);
  }
  typedef Record9 Codomain;
  typedef Record25 Domain0;
 private:
};


class CallableClass18 {
 public:
  Record17 operator()(const Record7& record14, const Record16& record15) {
    return Record17(record14.sym__0___45_981266666710950427, record14.sym__0__8156038929450058798, record14.sym__0__3878556393186461932, record14.sym__0__6288326160960443666, record14.sym__0__5409046865020314272, record14.sym__0___45_1008312074011973519, record14.sym__0___45_6145120768063040850, record14.sym__0___45_6481988073373837006, record14.sym__0__5374836139459375432, record14.sym__0__5244243395542185408, record14.sym__0__3807110354982371622, record14.sym__0__8927195161864659213, record14.sym__0__5169782939973470884, record14.sym__0__6941090373009867917, record14.sym__0___45_840169656527628057, record14.sym__0__5078629249392903744, record14.sym__0___45_1482488298731583152, record14.sym__0___45_5636589013636645582, record14.sym__0___45_3322305146172639292, record14.sym__0__8276265444856295530, record14.sym__0___45_2514742414074824610, record14.sym__0__4980213554189056025, record14.sym__0___45_3541045545965714117, record14.sym__0___45_3234025661575376781, record15.sym__0__2037864888707786451, record15.sym__0__8533656712666151747, record15.sym__0__646314041574508429, record15.sym__0__6064137978327902054, record15.sym__0__3754157776500852496, record15.sym__0__6284345160241949046, record15.sym__0___45_773692805971570325, record15.sym__0___45_8399474032083007524, record15.sym__0___45_2038947427357444789, record15.sym__0__6071994954612827827, record15.sym__0__7742515703067448213, record15.sym__0__5201219213304227654, record15.sym__0___45_5896625796158057241, record15.sym__0___45_1108504872221226081, record15.sym__0__1055103969674359346, record15.sym__0__9115626546918942554, record15.sym__0___45_6850413444013389848);
  }
  typedef Record17 Codomain;
  typedef Record7 Domain0;
  typedef Record16 Domain1;
 private:
};


class CallableClass33 {
 public:
  bool operator()(const Record26& record32) {
    return like(record32.sym__0___45_6414117357071051226, "MFGR#2221");
  }
  typedef bool Codomain;
  typedef Record26 Domain0;
 private:
};






int main() {
  // ForwardTrigger: (Just 
  //   (Right 
  //     [
  //      QSel 
  //         (P0 
  //           (R2 RLike 
  //               (R0 (E0 (ESym "s_region"))) 
  //               (R0 (E0 (EString "EUROPE")))))
  std::cout << "ForwardTrigger: (Just \n  (Right \n    [\n     QSel \n        (P0 \n          (R2 RLike \n              (R0 (E0 (ESym \"s_region\"))) \n              (R0 (E0 (EString \"EUROPE\")))))\n    ]))" << std::endl;
  {
    auto operation = mkSelect<CallableClass2>(Just<const std::string>("/tmp/fluidb_store/data26.dat"), Just<const std::string>("/tmp/fluidb_store/data27.dat"), "/run/user/1000/fluidb-data/supplier.dat");
    operation.run();
    operation.print_output(10);
  }
  // ForwardTrigger: (Just 
  //   (Left 
  //     [
  //      QJoin 
  //         (P0 
  //           (R2 REq 
  //               (R0 (E0 (ESym "lo_suppkey"))) 
  //               (R0 (E0 (ESym "s_suppkey")))))
  std::cout << "ForwardTrigger: (Just \n  (Left \n    [\n     QJoin \n        (P0 \n          (R2 REq \n              (R0 (E0 (ESym \"lo_suppkey\"))) \n              (R0 (E0 (ESym \"s_suppkey\")))))\n    ]))" << std::endl;
  {
    auto operation = mkEquiJoin<CallableClass11, CallableClass13, CallableClass8>(Just<const std::string>("/tmp/fluidb_store/data24.dat"), Just<const std::string>("/tmp/fluidb_store/data28.dat"), Just<const std::string>("/tmp/fluidb_store/data29.dat"), "/tmp/fluidb_store/data26.dat", "/run/user/1000/fluidb-data/lineorder.dat");
    operation.run();
    operation.print_output(10);
  }
  // ForwardTrigger: (Just 
  //   (Left 
  //     [
  //      QJoin 
  //         (P0 
  //           (R2 REq 
  //               (R0 (E0 (ESym "lo_orderdate"))) 
  //               (R0 (E0 (ESym "d_datekey")))))
  std::cout << "ForwardTrigger: (Just \n  (Left \n    [\n     QJoin \n        (P0 \n          (R2 REq \n              (R0 (E0 (ESym \"lo_orderdate\"))) \n              (R0 (E0 (ESym \"d_datekey\")))))\n    ]))" << std::endl;
  {
    auto operation = mkEquiJoin<CallableClass20, CallableClass22, CallableClass18>(Just<const std::string>("/tmp/fluidb_store/data22.dat"), Just<const std::string>("/tmp/fluidb_store/data32.dat"), Just<const std::string>("/tmp/fluidb_store/data33.dat"), "/tmp/fluidb_store/data24.dat", "/run/user/1000/fluidb-data/date.dat");
    operation.run();
    operation.print_output(10);
  }
  // ForwardTrigger: (Just 
  //   (Left 
  //     [
  //      QJoin 
  //         (P0 
  //           (R2 REq 
  //               (R0 (E0 (ESym "lo_partkey"))) 
  //               (R0 (E0 (ESym "p_partkey")))))
  std::cout << "ForwardTrigger: (Just \n  (Left \n    [\n     QJoin \n        (P0 \n          (R2 REq \n              (R0 (E0 (ESym \"lo_partkey\"))) \n              (R0 (E0 (ESym \"p_partkey\")))))\n    ]))" << std::endl;
  {
    auto operation = mkEquiJoin<CallableClass29, CallableClass31, CallableClass27>(Just<const std::string>("/tmp/fluidb_store/data37.dat"), Just<const std::string>("/tmp/fluidb_store/data36.dat"), Just<const std::string>("/tmp/fluidb_store/data38.dat"), "/tmp/fluidb_store/data22.dat", "/run/user/1000/fluidb-data/part.dat");
    operation.run();
    operation.print_output(10);
  }
  // Delete: (S 
  //   (P1 
  //     PNot 
  //     (P0 
  //       (R2 RLike 
  //           (R0 (E0 (ESym "s_region"))) 
  //           (R0 (E0 (EString "EUROPE")))))) 
  std::cout << "Delete: N27" << std::endl;
  deleteFile("/tmp/fluidb_store/data27.dat");
  // Delete: (Q2 
  //   (QLeftAntijoin 
  //     (P0 
  //       (R2 REq 
  //           (R0 (E0 (ESym "lo_suppkey"))) 
  //           (R0 (E0 (ESym "s_suppkey")))))) 
  //   (S 
  //     (P0 
  //       (R2 RLike 
  //           (R0 (E0 (ESym "s_region"))) 
  //           (R0 (E0 (EString "EUROPE"))))) 
  //     (Q0 (TSymbol "supplier"))) 
  std::cout << "Delete: N28" << std::endl;
  deleteFile("/tmp/fluidb_store/data28.dat");
  std::cout << "Delete: N0" << std::endl;
  deleteFile("/run/user/1000/fluidb-data/lineorder.dat");
  // Delete: (S 
  //   (P0 
  //     (R2 RLike (R0 (E0 (ESym "s_region"))) (R0 (E0 (EString "EUROPE"))))) 
  std::cout << "Delete: N26" << std::endl;
  deleteFile("/tmp/fluidb_store/data26.dat");
  // Delete: (Q2 
  //   (QLeftAntijoin 
  //     (P0 
  //       (R2 REq 
  //           (R0 (E0 (ESym "lo_orderdate"))) 
  //           (R0 (E0 (ESym "d_datekey")))))) 
  //   (J 
  //     (P0 
  //       (R2 REq 
  //           (R0 (E0 (ESym "lo_suppkey"))) 
  //           (R0 (E0 (ESym "s_suppkey"))))) 
  //     (S 
  //       (P0 
  //         (R2 RLike 
  //             (R0 (E0 (ESym "s_region"))) 
  //             (R0 (E0 (EString "EUROPE"))))) 
  //       (Q0 (TSymbol "supplier"))) 
  //     (Q0 (TSymbol "lineorder"))) 
  std::cout << "Delete: N32" << std::endl;
  deleteFile("/tmp/fluidb_store/data32.dat");
  // Delete: (Q2 
  //   (QRightAntijoin 
  //     (P0 
  //       (R2 REq 
  //           (R0 (E0 (ESym "lo_orderdate"))) 
  //           (R0 (E0 (ESym "d_datekey")))))) 
  //   (J 
  //     (P0 
  //       (R2 REq 
  //           (R0 (E0 (ESym "lo_suppkey"))) 
  //           (R0 (E0 (ESym "s_suppkey"))))) 
  //     (S 
  //       (P0 
  //         (R2 RLike 
  //             (R0 (E0 (ESym "s_region"))) 
  //             (R0 (E0 (EString "EUROPE"))))) 
  //       (Q0 (TSymbol "supplier"))) 
  //     (Q0 (TSymbol "lineorder"))) 
  std::cout << "Delete: N33" << std::endl;
  deleteFile("/tmp/fluidb_store/data33.dat");
  // Delete: (Q2 
  //   (QLeftAntijoin 
  //     (P0 
  //       (R2 REq 
  //           (R0 (E0 (ESym "lo_partkey"))) 
  //           (R0 (E0 (ESym "p_partkey")))))) 
  //   (J 
  //     (P0 
  //       (R2 REq 
  //           (R0 (E0 (ESym "lo_orderdate"))) 
  //           (R0 (E0 (ESym "d_datekey"))))) 
  //     (S 
  //       (P0 
  //         (R2 RLike 
  //             (R0 (E0 (ESym "s_region"))) 
  //             (R0 (E0 (EString "EUROPE"))))) 
  //       (J 
  //         (P0 
  //           (R2 REq 
  //               (R0 (E0 (ESym "lo_suppkey"))) 
  //               (R0 (E0 (ESym "s_suppkey"))))) 
  //         (Q0 (TSymbol "supplier")) 
  //         (Q0 (TSymbol "lineorder")))) 
  //     (Q0 (TSymbol "date"))) 
  std::cout << "Delete: N36" << std::endl;
  deleteFile("/tmp/fluidb_store/data36.dat");
  std::cout << "Delete: N2" << std::endl;
  deleteFile("/run/user/1000/fluidb-data/part.dat");
  // Delete: (S 
  //   (P0 
  //     (R2 RLike (R0 (E0 (ESym "s_region"))) (R0 (E0 (EString "EUROPE"))))) 
  //   (J 
  //     (P0 
  //       (R2 REq 
  //           (R0 (E0 (ESym "lo_orderdate"))) 
  //           (R0 (E0 (ESym "d_datekey"))))) 
  //     (J 
  //       (P0 
  //         (R2 REq 
  //             (R0 (E0 (ESym "lo_suppkey"))) 
  //             (R0 (E0 (ESym "s_suppkey"))))) 
  //       (Q0 (TSymbol "supplier")) 
  //       (Q0 (TSymbol "lineorder"))) 
  std::cout << "Delete: N22" << std::endl;
  deleteFile("/tmp/fluidb_store/data22.dat");
  // ForwardTrigger: (Just 
  //   (Right 
  //     [
  //      QSel 
  //         (P0 
  //           (R2 RLike 
  //               (R0 (E0 (ESym "p_brand1"))) 
  //               (R0 (E0 (EString "MFGR#2221")))))
  std::cout << "ForwardTrigger: (Just \n  (Right \n    [\n     QSel \n        (P0 \n          (R2 RLike \n              (R0 (E0 (ESym \"p_brand1\"))) \n              (R0 (E0 (EString \"MFGR#2221\")))))\n    ]))" << std::endl;
  {
    auto operation = mkSelect<CallableClass33>(Just<const std::string>("/tmp/fluidb_store/data20.dat"), Just<const std::string>("/tmp/fluidb_store/data41.dat"), "/tmp/fluidb_store/data37.dat");
    operation.run();
    operation.print_output(10);
  }
  // ForwardTrigger: (Just 
  //   (Right 
  //     [
  //      QGroup 
  //         [(ESym "tmpSym0",E0 (NAggr AggrSum (E0 (ESym "lo_revenue")))),
  //          (ESym "d_year",E0 (NAggr AggrFirst (E0 (ESym "d_year")))),
  //          (ESym "p_brand1",E0 (NAggr AggrFirst (E0 (ESym "p_brand1"))))] 
  //         [E0 (ESym "d_year"),E0 (ESym "p_brand1")]
  std::cout << "ForwardTrigger: (Just \n  (Right \n    [\n     QGroup \n        [(ESym \"tmpSym0\",E0 (NAggr AggrSum (E0 (ESym \"lo_revenue\")))),\n         (ESym \"d_year\",E0 (NAggr AggrFirst (E0 (ESym \"d_year\")))),\n         (ESym \"p_brand1\",E0 (NAggr AggrFirst (E0 (ESym \"p_brand1\"))))] \n        [E0 (ESym \"d_year\"),E0 (ESym \"p_brand1\")]\n    ]))" << std::endl;
  {
    auto operation = mkAggregation<CallableClass40, CallableClass42>(Just<const std::string>("/tmp/fluidb_store/data60.dat"), Just<const std::string>("/tmp/fluidb_store/data20.dat"), "/tmp/fluidb_store/data20.dat");
    operation.run();
    operation.print_output(10);
  }
  std::cout << "ForwardTrigger: (Just (Right [QSort [E0 (ESym \"d_year\"),E0 (ESym \"p_brand1\")]]))" << std::endl;
  {
    auto operation = mkSort<CallableClass44>(Just<const std::string>("/tmp/fluidb_store/data61.dat"), Just<const std::string>("/tmp/fluidb_store/data60.dat"), "/tmp/fluidb_store/data60.dat");
    operation.run();
    operation.print_output(10);
  }
  report_counters();
  return 0;
}
