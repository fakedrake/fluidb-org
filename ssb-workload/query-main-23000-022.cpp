#include <array>

#include <string>

#include <codegen.hh>
class Record50 {
 public:
  Record50(unsigned __sortElem0, unsigned __sortElem1) : sortElem0(__sortElem0), sortElem1(__sortElem1)
  {
  }
  Record50() 
  {
  }
  std::string show() const{
    std::stringstream o;
    o << sortElem0 << " | " << sortElem1;
    return o.str();
  }
  bool operator <(const Record50& otherRec) const{
    return (otherRec.sortElem0 < sortElem0 && otherRec.sortElem1 < sortElem1);
  }
  bool operator ==(const Record50& otherRec) const{
    return (otherRec.sortElem0 == sortElem0 && otherRec.sortElem1 == sortElem1);
  }
  bool operator !=(const Record50& otherRec) const{
    return (otherRec.sortElem0 != sortElem0 || otherRec.sortElem1 != sortElem1);
  }
  unsigned sortElem0;
  unsigned sortElem1;
 private:
};


class Record4 {
 public:
  Record4(unsigned __sym__0___45_7574074018531922998, int __sym__0__1125464382786937920, unsigned __sym__0___45_8257174981563598792, unsigned __sym__0__957746932829998382, unsigned __sym__0__934137931677987637, unsigned __sym__0___45_7332894783442362324, fluidb_string<21> __sym__0__8974811218372806325, unsigned __sym__0___45_5217562530132451785, fluidb_string<10> __sym__0__7851147553396318904, unsigned __sym__0___45_4975505511391694456, double __sym__0___45_7249986409969561654, unsigned __sym__0__4671626969570181580, double __sym__0___45_3666121704283105054, unsigned __sym__0__5495011930072844518, unsigned __sym__0___45_4423447118092167055, double __sym__0___45_1608082021099887893, fluidb_string<13> __sym__0__1584187396639360899) : sym__0___45_7574074018531922998(__sym__0___45_7574074018531922998), sym__0__1125464382786937920(__sym__0__1125464382786937920), sym__0___45_8257174981563598792(__sym__0___45_8257174981563598792), sym__0__957746932829998382(__sym__0__957746932829998382), sym__0__934137931677987637(__sym__0__934137931677987637), sym__0___45_7332894783442362324(__sym__0___45_7332894783442362324), sym__0__8974811218372806325(__sym__0__8974811218372806325), sym__0___45_5217562530132451785(__sym__0___45_5217562530132451785), sym__0__7851147553396318904(__sym__0__7851147553396318904), sym__0___45_4975505511391694456(__sym__0___45_4975505511391694456), sym__0___45_7249986409969561654(__sym__0___45_7249986409969561654), sym__0__4671626969570181580(__sym__0__4671626969570181580), sym__0___45_3666121704283105054(__sym__0___45_3666121704283105054), sym__0__5495011930072844518(__sym__0__5495011930072844518), sym__0___45_4423447118092167055(__sym__0___45_4423447118092167055), sym__0___45_1608082021099887893(__sym__0___45_1608082021099887893), sym__0__1584187396639360899(__sym__0__1584187396639360899)
  {
  }
  Record4() 
  {
  }
  std::string show() const{
    std::stringstream o;
    o << sym__0___45_7574074018531922998 << " | " << sym__0__1125464382786937920 << " | " << sym__0___45_8257174981563598792 << " | " << sym__0__957746932829998382 << " | " << sym__0__934137931677987637 << " | " << sym__0___45_7332894783442362324 << " | " << arrToString(sym__0__8974811218372806325) << " | " << sym__0___45_5217562530132451785 << " | " << arrToString(sym__0__7851147553396318904) << " | " << sym__0___45_4975505511391694456 << " | " << sym__0___45_7249986409969561654 << " | " << sym__0__4671626969570181580 << " | " << sym__0___45_3666121704283105054 << " | " << sym__0__5495011930072844518 << " | " << sym__0___45_4423447118092167055 << " | " << sym__0___45_1608082021099887893 << " | " << arrToString(sym__0__1584187396639360899);
    return o.str();
  }
  bool operator <(const Record4& otherRec) const{
    return (otherRec.sym__0___45_7574074018531922998 < sym__0___45_7574074018531922998 && (otherRec.sym__0__1125464382786937920 < sym__0__1125464382786937920 && (otherRec.sym__0___45_8257174981563598792 < sym__0___45_8257174981563598792 && (otherRec.sym__0__957746932829998382 < sym__0__957746932829998382 && (otherRec.sym__0__934137931677987637 < sym__0__934137931677987637 && (otherRec.sym__0___45_7332894783442362324 < sym__0___45_7332894783442362324 && (otherRec.sym__0__8974811218372806325 < sym__0__8974811218372806325 && (otherRec.sym__0___45_5217562530132451785 < sym__0___45_5217562530132451785 && (otherRec.sym__0__7851147553396318904 < sym__0__7851147553396318904 && (otherRec.sym__0___45_4975505511391694456 < sym__0___45_4975505511391694456 && (otherRec.sym__0___45_7249986409969561654 < sym__0___45_7249986409969561654 && (otherRec.sym__0__4671626969570181580 < sym__0__4671626969570181580 && (otherRec.sym__0___45_3666121704283105054 < sym__0___45_3666121704283105054 && (otherRec.sym__0__5495011930072844518 < sym__0__5495011930072844518 && (otherRec.sym__0___45_4423447118092167055 < sym__0___45_4423447118092167055 && (otherRec.sym__0___45_1608082021099887893 < sym__0___45_1608082021099887893 && otherRec.sym__0__1584187396639360899 < sym__0__1584187396639360899))))))))))))))));
  }
  bool operator ==(const Record4& otherRec) const{
    return (otherRec.sym__0___45_7574074018531922998 == sym__0___45_7574074018531922998 && (otherRec.sym__0__1125464382786937920 == sym__0__1125464382786937920 && (otherRec.sym__0___45_8257174981563598792 == sym__0___45_8257174981563598792 && (otherRec.sym__0__957746932829998382 == sym__0__957746932829998382 && (otherRec.sym__0__934137931677987637 == sym__0__934137931677987637 && (otherRec.sym__0___45_7332894783442362324 == sym__0___45_7332894783442362324 && (otherRec.sym__0__8974811218372806325 == sym__0__8974811218372806325 && (otherRec.sym__0___45_5217562530132451785 == sym__0___45_5217562530132451785 && (otherRec.sym__0__7851147553396318904 == sym__0__7851147553396318904 && (otherRec.sym__0___45_4975505511391694456 == sym__0___45_4975505511391694456 && (otherRec.sym__0___45_7249986409969561654 == sym__0___45_7249986409969561654 && (otherRec.sym__0__4671626969570181580 == sym__0__4671626969570181580 && (otherRec.sym__0___45_3666121704283105054 == sym__0___45_3666121704283105054 && (otherRec.sym__0__5495011930072844518 == sym__0__5495011930072844518 && (otherRec.sym__0___45_4423447118092167055 == sym__0___45_4423447118092167055 && (otherRec.sym__0___45_1608082021099887893 == sym__0___45_1608082021099887893 && otherRec.sym__0__1584187396639360899 == sym__0__1584187396639360899))))))))))))))));
  }
  bool operator !=(const Record4& otherRec) const{
    return (otherRec.sym__0___45_7574074018531922998 != sym__0___45_7574074018531922998 || (otherRec.sym__0__1125464382786937920 != sym__0__1125464382786937920 || (otherRec.sym__0___45_8257174981563598792 != sym__0___45_8257174981563598792 || (otherRec.sym__0__957746932829998382 != sym__0__957746932829998382 || (otherRec.sym__0__934137931677987637 != sym__0__934137931677987637 || (otherRec.sym__0___45_7332894783442362324 != sym__0___45_7332894783442362324 || (otherRec.sym__0__8974811218372806325 != sym__0__8974811218372806325 || (otherRec.sym__0___45_5217562530132451785 != sym__0___45_5217562530132451785 || (otherRec.sym__0__7851147553396318904 != sym__0__7851147553396318904 || (otherRec.sym__0___45_4975505511391694456 != sym__0___45_4975505511391694456 || (otherRec.sym__0___45_7249986409969561654 != sym__0___45_7249986409969561654 || (otherRec.sym__0__4671626969570181580 != sym__0__4671626969570181580 || (otherRec.sym__0___45_3666121704283105054 != sym__0___45_3666121704283105054 || (otherRec.sym__0__5495011930072844518 != sym__0__5495011930072844518 || (otherRec.sym__0___45_4423447118092167055 != sym__0___45_4423447118092167055 || (otherRec.sym__0___45_1608082021099887893 != sym__0___45_1608082021099887893 || otherRec.sym__0__1584187396639360899 != sym__0__1584187396639360899))))))))))))))));
  }
  unsigned sym__0___45_7574074018531922998;
  int sym__0__1125464382786937920;
  unsigned sym__0___45_8257174981563598792;
  unsigned sym__0__957746932829998382;
  unsigned sym__0__934137931677987637;
  unsigned sym__0___45_7332894783442362324;
  fluidb_string<21> sym__0__8974811218372806325;
  unsigned sym__0___45_5217562530132451785;
  fluidb_string<10> sym__0__7851147553396318904;
  unsigned sym__0___45_4975505511391694456;
  double sym__0___45_7249986409969561654;
  unsigned sym__0__4671626969570181580;
  double sym__0___45_3666121704283105054;
  unsigned sym__0__5495011930072844518;
  unsigned sym__0___45_4423447118092167055;
  double sym__0___45_1608082021099887893;
  fluidb_string<13> sym__0__1584187396639360899;
 private:
};


class Record1 {
 public:
  Record1(unsigned __sym__0__6513800963452454113, fluidb_string<18> __sym__0__3891140599066455377, fluidb_string<9> __sym__0___45_7515565601121912321, fluidb_string<9> __sym__0___45_5324176126050084528, unsigned __sym__0__8950248211818391590, unsigned __sym__0___45_1266744426266146720, fluidb_string<7> __sym__0__6892731299827942953, unsigned __sym__0__9193818129696995810, unsigned __sym__0___45_178769792373171703, unsigned __sym__0__4761226073460566593, unsigned __sym__0___45_2185734744139584809, unsigned __sym__0___45_4180510338761025616, fluidb_string<15> __sym__0__4965057330358971557, fluidb_string<2> __sym__0__128800919029129389, fluidb_string<2> __sym__0__988393536985607468, fluidb_string<2> __sym__0__3534800244779035812, fluidb_string<2> __sym__0___45_8974664306136837970) : sym__0__6513800963452454113(__sym__0__6513800963452454113), sym__0__3891140599066455377(__sym__0__3891140599066455377), sym__0___45_7515565601121912321(__sym__0___45_7515565601121912321), sym__0___45_5324176126050084528(__sym__0___45_5324176126050084528), sym__0__8950248211818391590(__sym__0__8950248211818391590), sym__0___45_1266744426266146720(__sym__0___45_1266744426266146720), sym__0__6892731299827942953(__sym__0__6892731299827942953), sym__0__9193818129696995810(__sym__0__9193818129696995810), sym__0___45_178769792373171703(__sym__0___45_178769792373171703), sym__0__4761226073460566593(__sym__0__4761226073460566593), sym__0___45_2185734744139584809(__sym__0___45_2185734744139584809), sym__0___45_4180510338761025616(__sym__0___45_4180510338761025616), sym__0__4965057330358971557(__sym__0__4965057330358971557), sym__0__128800919029129389(__sym__0__128800919029129389), sym__0__988393536985607468(__sym__0__988393536985607468), sym__0__3534800244779035812(__sym__0__3534800244779035812), sym__0___45_8974664306136837970(__sym__0___45_8974664306136837970)
  {
  }
  Record1() 
  {
  }
  std::string show() const{
    std::stringstream o;
    o << sym__0__6513800963452454113 << " | " << arrToString(sym__0__3891140599066455377) << " | " << arrToString(sym__0___45_7515565601121912321) << " | " << arrToString(sym__0___45_5324176126050084528) << " | " << sym__0__8950248211818391590 << " | " << sym__0___45_1266744426266146720 << " | " << arrToString(sym__0__6892731299827942953) << " | " << sym__0__9193818129696995810 << " | " << sym__0___45_178769792373171703 << " | " << sym__0__4761226073460566593 << " | " << sym__0___45_2185734744139584809 << " | " << sym__0___45_4180510338761025616 << " | " << arrToString(sym__0__4965057330358971557) << " | " << arrToString(sym__0__128800919029129389) << " | " << arrToString(sym__0__988393536985607468) << " | " << arrToString(sym__0__3534800244779035812) << " | " << arrToString(sym__0___45_8974664306136837970);
    return o.str();
  }
  bool operator <(const Record1& otherRec) const{
    return (otherRec.sym__0__6513800963452454113 < sym__0__6513800963452454113 && (otherRec.sym__0__3891140599066455377 < sym__0__3891140599066455377 && (otherRec.sym__0___45_7515565601121912321 < sym__0___45_7515565601121912321 && (otherRec.sym__0___45_5324176126050084528 < sym__0___45_5324176126050084528 && (otherRec.sym__0__8950248211818391590 < sym__0__8950248211818391590 && (otherRec.sym__0___45_1266744426266146720 < sym__0___45_1266744426266146720 && (otherRec.sym__0__6892731299827942953 < sym__0__6892731299827942953 && (otherRec.sym__0__9193818129696995810 < sym__0__9193818129696995810 && (otherRec.sym__0___45_178769792373171703 < sym__0___45_178769792373171703 && (otherRec.sym__0__4761226073460566593 < sym__0__4761226073460566593 && (otherRec.sym__0___45_2185734744139584809 < sym__0___45_2185734744139584809 && (otherRec.sym__0___45_4180510338761025616 < sym__0___45_4180510338761025616 && (otherRec.sym__0__4965057330358971557 < sym__0__4965057330358971557 && (otherRec.sym__0__128800919029129389 < sym__0__128800919029129389 && (otherRec.sym__0__988393536985607468 < sym__0__988393536985607468 && (otherRec.sym__0__3534800244779035812 < sym__0__3534800244779035812 && otherRec.sym__0___45_8974664306136837970 < sym__0___45_8974664306136837970))))))))))))))));
  }
  bool operator ==(const Record1& otherRec) const{
    return (otherRec.sym__0__6513800963452454113 == sym__0__6513800963452454113 && (otherRec.sym__0__3891140599066455377 == sym__0__3891140599066455377 && (otherRec.sym__0___45_7515565601121912321 == sym__0___45_7515565601121912321 && (otherRec.sym__0___45_5324176126050084528 == sym__0___45_5324176126050084528 && (otherRec.sym__0__8950248211818391590 == sym__0__8950248211818391590 && (otherRec.sym__0___45_1266744426266146720 == sym__0___45_1266744426266146720 && (otherRec.sym__0__6892731299827942953 == sym__0__6892731299827942953 && (otherRec.sym__0__9193818129696995810 == sym__0__9193818129696995810 && (otherRec.sym__0___45_178769792373171703 == sym__0___45_178769792373171703 && (otherRec.sym__0__4761226073460566593 == sym__0__4761226073460566593 && (otherRec.sym__0___45_2185734744139584809 == sym__0___45_2185734744139584809 && (otherRec.sym__0___45_4180510338761025616 == sym__0___45_4180510338761025616 && (otherRec.sym__0__4965057330358971557 == sym__0__4965057330358971557 && (otherRec.sym__0__128800919029129389 == sym__0__128800919029129389 && (otherRec.sym__0__988393536985607468 == sym__0__988393536985607468 && (otherRec.sym__0__3534800244779035812 == sym__0__3534800244779035812 && otherRec.sym__0___45_8974664306136837970 == sym__0___45_8974664306136837970))))))))))))))));
  }
  bool operator !=(const Record1& otherRec) const{
    return (otherRec.sym__0__6513800963452454113 != sym__0__6513800963452454113 || (otherRec.sym__0__3891140599066455377 != sym__0__3891140599066455377 || (otherRec.sym__0___45_7515565601121912321 != sym__0___45_7515565601121912321 || (otherRec.sym__0___45_5324176126050084528 != sym__0___45_5324176126050084528 || (otherRec.sym__0__8950248211818391590 != sym__0__8950248211818391590 || (otherRec.sym__0___45_1266744426266146720 != sym__0___45_1266744426266146720 || (otherRec.sym__0__6892731299827942953 != sym__0__6892731299827942953 || (otherRec.sym__0__9193818129696995810 != sym__0__9193818129696995810 || (otherRec.sym__0___45_178769792373171703 != sym__0___45_178769792373171703 || (otherRec.sym__0__4761226073460566593 != sym__0__4761226073460566593 || (otherRec.sym__0___45_2185734744139584809 != sym__0___45_2185734744139584809 || (otherRec.sym__0___45_4180510338761025616 != sym__0___45_4180510338761025616 || (otherRec.sym__0__4965057330358971557 != sym__0__4965057330358971557 || (otherRec.sym__0__128800919029129389 != sym__0__128800919029129389 || (otherRec.sym__0__988393536985607468 != sym__0__988393536985607468 || (otherRec.sym__0__3534800244779035812 != sym__0__3534800244779035812 || otherRec.sym__0___45_8974664306136837970 != sym__0___45_8974664306136837970))))))))))))))));
  }
  unsigned sym__0__6513800963452454113;
  fluidb_string<18> sym__0__3891140599066455377;
  fluidb_string<9> sym__0___45_7515565601121912321;
  fluidb_string<9> sym__0___45_5324176126050084528;
  unsigned sym__0__8950248211818391590;
  unsigned sym__0___45_1266744426266146720;
  fluidb_string<7> sym__0__6892731299827942953;
  unsigned sym__0__9193818129696995810;
  unsigned sym__0___45_178769792373171703;
  unsigned sym__0__4761226073460566593;
  unsigned sym__0___45_2185734744139584809;
  unsigned sym__0___45_4180510338761025616;
  fluidb_string<15> sym__0__4965057330358971557;
  fluidb_string<2> sym__0__128800919029129389;
  fluidb_string<2> sym__0__988393536985607468;
  fluidb_string<2> sym__0__3534800244779035812;
  fluidb_string<2> sym__0___45_8974664306136837970;
 private:
};


class Record11 {
 public:
  Record11(unsigned __sortElem0) : sortElem0(__sortElem0)
  {
  }
  Record11() 
  {
  }
  std::string show() const{
    std::stringstream o;
    o << sortElem0;
    return o.str();
  }
  bool operator <(const Record11& otherRec) const{
    return otherRec.sortElem0 < sortElem0;
  }
  bool operator ==(const Record11& otherRec) const{
    return otherRec.sortElem0 == sortElem0;
  }
  bool operator !=(const Record11& otherRec) const{
    return otherRec.sortElem0 != sortElem0;
  }
  unsigned sortElem0;
 private:
};


class Record42 {
 public:
  Record42(unsigned __sym__0__6068529779339057262, fluidb_string<18> __sym__0___45_4730693783839834362, fluidb_string<40> __sym__0__2079260478496303340, fluidb_string<11> __sym__0___45_3956792959991438582, fluidb_string<15> __sym__0___45_8316559279801582864, fluidb_string<13> __sym__0___45_3104075498139127471, fluidb_string<15> __sym__0___45_6637589282919129210, fluidb_string<21> __sym__0__3173083570778740002, unsigned __sym__0___45_3523672673417197226, fluidb_string<18> __sym__0__7338935531898451142, fluidb_string<9> __sym__0___45_7199667234944324856, fluidb_string<9> __sym__0___45_2898977301459403037, unsigned __sym__0__8142673845411997397, unsigned __sym__0___45_3365840036496070669, fluidb_string<7> __sym__0__713848592987116206, unsigned __sym__0__1022708471739059609, unsigned __sym__0__1609622665336162318, unsigned __sym__0__5894560879969492790, unsigned __sym__0__6161713668904618576, unsigned __sym__0___45_5350160591170912573, fluidb_string<15> __sym__0__7890067861864424994, fluidb_string<2> __sym__0__6708753188419736154, fluidb_string<2> __sym__0__4582149681986391415, fluidb_string<2> __sym__0___45_8718474134339807009, fluidb_string<2> __sym__0___45_1547707910421817299, unsigned __sym__0__6203194341659602714, int __sym__0___45_8346406923246249328, unsigned __sym__0__7261181942821772584, unsigned __sym__0__4921385962903522046, unsigned __sym__0___45_373861829262187483, unsigned __sym__0__7581746963088065020, fluidb_string<21> __sym__0__361377377101151909, unsigned __sym__0___45_3700129260976925913, fluidb_string<10> __sym__0__6098359273528291496, unsigned __sym__0___45_4676353293641220968, double __sym__0__7082112007385025306, unsigned __sym__0__7160864855686602780, double __sym__0___45_8233331576153659470, unsigned __sym__0___45_2888559707917916682, unsigned __sym__0__1989813165103345441, double __sym__0___45_5693677300964040709, fluidb_string<13> __sym__0__5140151745458422419, unsigned __sym__0__49568785671724893, fluidb_string<25> __sym__0___45_8671242175283524122, fluidb_string<40> __sym__0__8045204309842333188, fluidb_string<16> __sym__0__7388366118437445626, fluidb_string<16> __sym__0___45_6247682992415910136, fluidb_string<13> __sym__0___45_8476130017571818055, fluidb_string<15> __sym__0__522454679001458534) : sym__0__6068529779339057262(__sym__0__6068529779339057262), sym__0___45_4730693783839834362(__sym__0___45_4730693783839834362), sym__0__2079260478496303340(__sym__0__2079260478496303340), sym__0___45_3956792959991438582(__sym__0___45_3956792959991438582), sym__0___45_8316559279801582864(__sym__0___45_8316559279801582864), sym__0___45_3104075498139127471(__sym__0___45_3104075498139127471), sym__0___45_6637589282919129210(__sym__0___45_6637589282919129210), sym__0__3173083570778740002(__sym__0__3173083570778740002), sym__0___45_3523672673417197226(__sym__0___45_3523672673417197226), sym__0__7338935531898451142(__sym__0__7338935531898451142), sym__0___45_7199667234944324856(__sym__0___45_7199667234944324856), sym__0___45_2898977301459403037(__sym__0___45_2898977301459403037), sym__0__8142673845411997397(__sym__0__8142673845411997397), sym__0___45_3365840036496070669(__sym__0___45_3365840036496070669), sym__0__713848592987116206(__sym__0__713848592987116206), sym__0__1022708471739059609(__sym__0__1022708471739059609), sym__0__1609622665336162318(__sym__0__1609622665336162318), sym__0__5894560879969492790(__sym__0__5894560879969492790), sym__0__6161713668904618576(__sym__0__6161713668904618576), sym__0___45_5350160591170912573(__sym__0___45_5350160591170912573), sym__0__7890067861864424994(__sym__0__7890067861864424994), sym__0__6708753188419736154(__sym__0__6708753188419736154), sym__0__4582149681986391415(__sym__0__4582149681986391415), sym__0___45_8718474134339807009(__sym__0___45_8718474134339807009), sym__0___45_1547707910421817299(__sym__0___45_1547707910421817299), sym__0__6203194341659602714(__sym__0__6203194341659602714), sym__0___45_8346406923246249328(__sym__0___45_8346406923246249328), sym__0__7261181942821772584(__sym__0__7261181942821772584), sym__0__4921385962903522046(__sym__0__4921385962903522046), sym__0___45_373861829262187483(__sym__0___45_373861829262187483), sym__0__7581746963088065020(__sym__0__7581746963088065020), sym__0__361377377101151909(__sym__0__361377377101151909), sym__0___45_3700129260976925913(__sym__0___45_3700129260976925913), sym__0__6098359273528291496(__sym__0__6098359273528291496), sym__0___45_4676353293641220968(__sym__0___45_4676353293641220968), sym__0__7082112007385025306(__sym__0__7082112007385025306), sym__0__7160864855686602780(__sym__0__7160864855686602780), sym__0___45_8233331576153659470(__sym__0___45_8233331576153659470), sym__0___45_2888559707917916682(__sym__0___45_2888559707917916682), sym__0__1989813165103345441(__sym__0__1989813165103345441), sym__0___45_5693677300964040709(__sym__0___45_5693677300964040709), sym__0__5140151745458422419(__sym__0__5140151745458422419), sym__0__49568785671724893(__sym__0__49568785671724893), sym__0___45_8671242175283524122(__sym__0___45_8671242175283524122), sym__0__8045204309842333188(__sym__0__8045204309842333188), sym__0__7388366118437445626(__sym__0__7388366118437445626), sym__0___45_6247682992415910136(__sym__0___45_6247682992415910136), sym__0___45_8476130017571818055(__sym__0___45_8476130017571818055), sym__0__522454679001458534(__sym__0__522454679001458534)
  {
  }
  Record42() 
  {
  }
  std::string show() const{
    std::stringstream o;
    o << sym__0__6068529779339057262 << " | " << arrToString(sym__0___45_4730693783839834362) << " | " << arrToString(sym__0__2079260478496303340) << " | " << arrToString(sym__0___45_3956792959991438582) << " | " << arrToString(sym__0___45_8316559279801582864) << " | " << arrToString(sym__0___45_3104075498139127471) << " | " << arrToString(sym__0___45_6637589282919129210) << " | " << arrToString(sym__0__3173083570778740002) << " | " << sym__0___45_3523672673417197226 << " | " << arrToString(sym__0__7338935531898451142) << " | " << arrToString(sym__0___45_7199667234944324856) << " | " << arrToString(sym__0___45_2898977301459403037) << " | " << sym__0__8142673845411997397 << " | " << sym__0___45_3365840036496070669 << " | " << arrToString(sym__0__713848592987116206) << " | " << sym__0__1022708471739059609 << " | " << sym__0__1609622665336162318 << " | " << sym__0__5894560879969492790 << " | " << sym__0__6161713668904618576 << " | " << sym__0___45_5350160591170912573 << " | " << arrToString(sym__0__7890067861864424994) << " | " << arrToString(sym__0__6708753188419736154) << " | " << arrToString(sym__0__4582149681986391415) << " | " << arrToString(sym__0___45_8718474134339807009) << " | " << arrToString(sym__0___45_1547707910421817299) << " | " << sym__0__6203194341659602714 << " | " << sym__0___45_8346406923246249328 << " | " << sym__0__7261181942821772584 << " | " << sym__0__4921385962903522046 << " | " << sym__0___45_373861829262187483 << " | " << sym__0__7581746963088065020 << " | " << arrToString(sym__0__361377377101151909) << " | " << sym__0___45_3700129260976925913 << " | " << arrToString(sym__0__6098359273528291496) << " | " << sym__0___45_4676353293641220968 << " | " << sym__0__7082112007385025306 << " | " << sym__0__7160864855686602780 << " | " << sym__0___45_8233331576153659470 << " | " << sym__0___45_2888559707917916682 << " | " << sym__0__1989813165103345441 << " | " << sym__0___45_5693677300964040709 << " | " << arrToString(sym__0__5140151745458422419) << " | " << sym__0__49568785671724893 << " | " << arrToString(sym__0___45_8671242175283524122) << " | " << arrToString(sym__0__8045204309842333188) << " | " << arrToString(sym__0__7388366118437445626) << " | " << arrToString(sym__0___45_6247682992415910136) << " | " << arrToString(sym__0___45_8476130017571818055) << " | " << arrToString(sym__0__522454679001458534);
    return o.str();
  }
  bool operator <(const Record42& otherRec) const{
    return (otherRec.sym__0__6068529779339057262 < sym__0__6068529779339057262 && (otherRec.sym__0___45_4730693783839834362 < sym__0___45_4730693783839834362 && (otherRec.sym__0__2079260478496303340 < sym__0__2079260478496303340 && (otherRec.sym__0___45_3956792959991438582 < sym__0___45_3956792959991438582 && (otherRec.sym__0___45_8316559279801582864 < sym__0___45_8316559279801582864 && (otherRec.sym__0___45_3104075498139127471 < sym__0___45_3104075498139127471 && (otherRec.sym__0___45_6637589282919129210 < sym__0___45_6637589282919129210 && (otherRec.sym__0__3173083570778740002 < sym__0__3173083570778740002 && (otherRec.sym__0___45_3523672673417197226 < sym__0___45_3523672673417197226 && (otherRec.sym__0__7338935531898451142 < sym__0__7338935531898451142 && (otherRec.sym__0___45_7199667234944324856 < sym__0___45_7199667234944324856 && (otherRec.sym__0___45_2898977301459403037 < sym__0___45_2898977301459403037 && (otherRec.sym__0__8142673845411997397 < sym__0__8142673845411997397 && (otherRec.sym__0___45_3365840036496070669 < sym__0___45_3365840036496070669 && (otherRec.sym__0__713848592987116206 < sym__0__713848592987116206 && (otherRec.sym__0__1022708471739059609 < sym__0__1022708471739059609 && (otherRec.sym__0__1609622665336162318 < sym__0__1609622665336162318 && (otherRec.sym__0__5894560879969492790 < sym__0__5894560879969492790 && (otherRec.sym__0__6161713668904618576 < sym__0__6161713668904618576 && (otherRec.sym__0___45_5350160591170912573 < sym__0___45_5350160591170912573 && (otherRec.sym__0__7890067861864424994 < sym__0__7890067861864424994 && (otherRec.sym__0__6708753188419736154 < sym__0__6708753188419736154 && (otherRec.sym__0__4582149681986391415 < sym__0__4582149681986391415 && (otherRec.sym__0___45_8718474134339807009 < sym__0___45_8718474134339807009 && (otherRec.sym__0___45_1547707910421817299 < sym__0___45_1547707910421817299 && (otherRec.sym__0__6203194341659602714 < sym__0__6203194341659602714 && (otherRec.sym__0___45_8346406923246249328 < sym__0___45_8346406923246249328 && (otherRec.sym__0__7261181942821772584 < sym__0__7261181942821772584 && (otherRec.sym__0__4921385962903522046 < sym__0__4921385962903522046 && (otherRec.sym__0___45_373861829262187483 < sym__0___45_373861829262187483 && (otherRec.sym__0__7581746963088065020 < sym__0__7581746963088065020 && (otherRec.sym__0__361377377101151909 < sym__0__361377377101151909 && (otherRec.sym__0___45_3700129260976925913 < sym__0___45_3700129260976925913 && (otherRec.sym__0__6098359273528291496 < sym__0__6098359273528291496 && (otherRec.sym__0___45_4676353293641220968 < sym__0___45_4676353293641220968 && (otherRec.sym__0__7082112007385025306 < sym__0__7082112007385025306 && (otherRec.sym__0__7160864855686602780 < sym__0__7160864855686602780 && (otherRec.sym__0___45_8233331576153659470 < sym__0___45_8233331576153659470 && (otherRec.sym__0___45_2888559707917916682 < sym__0___45_2888559707917916682 && (otherRec.sym__0__1989813165103345441 < sym__0__1989813165103345441 && (otherRec.sym__0___45_5693677300964040709 < sym__0___45_5693677300964040709 && (otherRec.sym__0__5140151745458422419 < sym__0__5140151745458422419 && (otherRec.sym__0__49568785671724893 < sym__0__49568785671724893 && (otherRec.sym__0___45_8671242175283524122 < sym__0___45_8671242175283524122 && (otherRec.sym__0__8045204309842333188 < sym__0__8045204309842333188 && (otherRec.sym__0__7388366118437445626 < sym__0__7388366118437445626 && (otherRec.sym__0___45_6247682992415910136 < sym__0___45_6247682992415910136 && (otherRec.sym__0___45_8476130017571818055 < sym__0___45_8476130017571818055 && otherRec.sym__0__522454679001458534 < sym__0__522454679001458534))))))))))))))))))))))))))))))))))))))))))))))));
  }
  bool operator ==(const Record42& otherRec) const{
    return (otherRec.sym__0__6068529779339057262 == sym__0__6068529779339057262 && (otherRec.sym__0___45_4730693783839834362 == sym__0___45_4730693783839834362 && (otherRec.sym__0__2079260478496303340 == sym__0__2079260478496303340 && (otherRec.sym__0___45_3956792959991438582 == sym__0___45_3956792959991438582 && (otherRec.sym__0___45_8316559279801582864 == sym__0___45_8316559279801582864 && (otherRec.sym__0___45_3104075498139127471 == sym__0___45_3104075498139127471 && (otherRec.sym__0___45_6637589282919129210 == sym__0___45_6637589282919129210 && (otherRec.sym__0__3173083570778740002 == sym__0__3173083570778740002 && (otherRec.sym__0___45_3523672673417197226 == sym__0___45_3523672673417197226 && (otherRec.sym__0__7338935531898451142 == sym__0__7338935531898451142 && (otherRec.sym__0___45_7199667234944324856 == sym__0___45_7199667234944324856 && (otherRec.sym__0___45_2898977301459403037 == sym__0___45_2898977301459403037 && (otherRec.sym__0__8142673845411997397 == sym__0__8142673845411997397 && (otherRec.sym__0___45_3365840036496070669 == sym__0___45_3365840036496070669 && (otherRec.sym__0__713848592987116206 == sym__0__713848592987116206 && (otherRec.sym__0__1022708471739059609 == sym__0__1022708471739059609 && (otherRec.sym__0__1609622665336162318 == sym__0__1609622665336162318 && (otherRec.sym__0__5894560879969492790 == sym__0__5894560879969492790 && (otherRec.sym__0__6161713668904618576 == sym__0__6161713668904618576 && (otherRec.sym__0___45_5350160591170912573 == sym__0___45_5350160591170912573 && (otherRec.sym__0__7890067861864424994 == sym__0__7890067861864424994 && (otherRec.sym__0__6708753188419736154 == sym__0__6708753188419736154 && (otherRec.sym__0__4582149681986391415 == sym__0__4582149681986391415 && (otherRec.sym__0___45_8718474134339807009 == sym__0___45_8718474134339807009 && (otherRec.sym__0___45_1547707910421817299 == sym__0___45_1547707910421817299 && (otherRec.sym__0__6203194341659602714 == sym__0__6203194341659602714 && (otherRec.sym__0___45_8346406923246249328 == sym__0___45_8346406923246249328 && (otherRec.sym__0__7261181942821772584 == sym__0__7261181942821772584 && (otherRec.sym__0__4921385962903522046 == sym__0__4921385962903522046 && (otherRec.sym__0___45_373861829262187483 == sym__0___45_373861829262187483 && (otherRec.sym__0__7581746963088065020 == sym__0__7581746963088065020 && (otherRec.sym__0__361377377101151909 == sym__0__361377377101151909 && (otherRec.sym__0___45_3700129260976925913 == sym__0___45_3700129260976925913 && (otherRec.sym__0__6098359273528291496 == sym__0__6098359273528291496 && (otherRec.sym__0___45_4676353293641220968 == sym__0___45_4676353293641220968 && (otherRec.sym__0__7082112007385025306 == sym__0__7082112007385025306 && (otherRec.sym__0__7160864855686602780 == sym__0__7160864855686602780 && (otherRec.sym__0___45_8233331576153659470 == sym__0___45_8233331576153659470 && (otherRec.sym__0___45_2888559707917916682 == sym__0___45_2888559707917916682 && (otherRec.sym__0__1989813165103345441 == sym__0__1989813165103345441 && (otherRec.sym__0___45_5693677300964040709 == sym__0___45_5693677300964040709 && (otherRec.sym__0__5140151745458422419 == sym__0__5140151745458422419 && (otherRec.sym__0__49568785671724893 == sym__0__49568785671724893 && (otherRec.sym__0___45_8671242175283524122 == sym__0___45_8671242175283524122 && (otherRec.sym__0__8045204309842333188 == sym__0__8045204309842333188 && (otherRec.sym__0__7388366118437445626 == sym__0__7388366118437445626 && (otherRec.sym__0___45_6247682992415910136 == sym__0___45_6247682992415910136 && (otherRec.sym__0___45_8476130017571818055 == sym__0___45_8476130017571818055 && otherRec.sym__0__522454679001458534 == sym__0__522454679001458534))))))))))))))))))))))))))))))))))))))))))))))));
  }
  bool operator !=(const Record42& otherRec) const{
    return (otherRec.sym__0__6068529779339057262 != sym__0__6068529779339057262 || (otherRec.sym__0___45_4730693783839834362 != sym__0___45_4730693783839834362 || (otherRec.sym__0__2079260478496303340 != sym__0__2079260478496303340 || (otherRec.sym__0___45_3956792959991438582 != sym__0___45_3956792959991438582 || (otherRec.sym__0___45_8316559279801582864 != sym__0___45_8316559279801582864 || (otherRec.sym__0___45_3104075498139127471 != sym__0___45_3104075498139127471 || (otherRec.sym__0___45_6637589282919129210 != sym__0___45_6637589282919129210 || (otherRec.sym__0__3173083570778740002 != sym__0__3173083570778740002 || (otherRec.sym__0___45_3523672673417197226 != sym__0___45_3523672673417197226 || (otherRec.sym__0__7338935531898451142 != sym__0__7338935531898451142 || (otherRec.sym__0___45_7199667234944324856 != sym__0___45_7199667234944324856 || (otherRec.sym__0___45_2898977301459403037 != sym__0___45_2898977301459403037 || (otherRec.sym__0__8142673845411997397 != sym__0__8142673845411997397 || (otherRec.sym__0___45_3365840036496070669 != sym__0___45_3365840036496070669 || (otherRec.sym__0__713848592987116206 != sym__0__713848592987116206 || (otherRec.sym__0__1022708471739059609 != sym__0__1022708471739059609 || (otherRec.sym__0__1609622665336162318 != sym__0__1609622665336162318 || (otherRec.sym__0__5894560879969492790 != sym__0__5894560879969492790 || (otherRec.sym__0__6161713668904618576 != sym__0__6161713668904618576 || (otherRec.sym__0___45_5350160591170912573 != sym__0___45_5350160591170912573 || (otherRec.sym__0__7890067861864424994 != sym__0__7890067861864424994 || (otherRec.sym__0__6708753188419736154 != sym__0__6708753188419736154 || (otherRec.sym__0__4582149681986391415 != sym__0__4582149681986391415 || (otherRec.sym__0___45_8718474134339807009 != sym__0___45_8718474134339807009 || (otherRec.sym__0___45_1547707910421817299 != sym__0___45_1547707910421817299 || (otherRec.sym__0__6203194341659602714 != sym__0__6203194341659602714 || (otherRec.sym__0___45_8346406923246249328 != sym__0___45_8346406923246249328 || (otherRec.sym__0__7261181942821772584 != sym__0__7261181942821772584 || (otherRec.sym__0__4921385962903522046 != sym__0__4921385962903522046 || (otherRec.sym__0___45_373861829262187483 != sym__0___45_373861829262187483 || (otherRec.sym__0__7581746963088065020 != sym__0__7581746963088065020 || (otherRec.sym__0__361377377101151909 != sym__0__361377377101151909 || (otherRec.sym__0___45_3700129260976925913 != sym__0___45_3700129260976925913 || (otherRec.sym__0__6098359273528291496 != sym__0__6098359273528291496 || (otherRec.sym__0___45_4676353293641220968 != sym__0___45_4676353293641220968 || (otherRec.sym__0__7082112007385025306 != sym__0__7082112007385025306 || (otherRec.sym__0__7160864855686602780 != sym__0__7160864855686602780 || (otherRec.sym__0___45_8233331576153659470 != sym__0___45_8233331576153659470 || (otherRec.sym__0___45_2888559707917916682 != sym__0___45_2888559707917916682 || (otherRec.sym__0__1989813165103345441 != sym__0__1989813165103345441 || (otherRec.sym__0___45_5693677300964040709 != sym__0___45_5693677300964040709 || (otherRec.sym__0__5140151745458422419 != sym__0__5140151745458422419 || (otherRec.sym__0__49568785671724893 != sym__0__49568785671724893 || (otherRec.sym__0___45_8671242175283524122 != sym__0___45_8671242175283524122 || (otherRec.sym__0__8045204309842333188 != sym__0__8045204309842333188 || (otherRec.sym__0__7388366118437445626 != sym__0__7388366118437445626 || (otherRec.sym__0___45_6247682992415910136 != sym__0___45_6247682992415910136 || (otherRec.sym__0___45_8476130017571818055 != sym__0___45_8476130017571818055 || otherRec.sym__0__522454679001458534 != sym__0__522454679001458534))))))))))))))))))))))))))))))))))))))))))))))));
  }
  unsigned sym__0__6068529779339057262;
  fluidb_string<18> sym__0___45_4730693783839834362;
  fluidb_string<40> sym__0__2079260478496303340;
  fluidb_string<11> sym__0___45_3956792959991438582;
  fluidb_string<15> sym__0___45_8316559279801582864;
  fluidb_string<13> sym__0___45_3104075498139127471;
  fluidb_string<15> sym__0___45_6637589282919129210;
  fluidb_string<21> sym__0__3173083570778740002;
  unsigned sym__0___45_3523672673417197226;
  fluidb_string<18> sym__0__7338935531898451142;
  fluidb_string<9> sym__0___45_7199667234944324856;
  fluidb_string<9> sym__0___45_2898977301459403037;
  unsigned sym__0__8142673845411997397;
  unsigned sym__0___45_3365840036496070669;
  fluidb_string<7> sym__0__713848592987116206;
  unsigned sym__0__1022708471739059609;
  unsigned sym__0__1609622665336162318;
  unsigned sym__0__5894560879969492790;
  unsigned sym__0__6161713668904618576;
  unsigned sym__0___45_5350160591170912573;
  fluidb_string<15> sym__0__7890067861864424994;
  fluidb_string<2> sym__0__6708753188419736154;
  fluidb_string<2> sym__0__4582149681986391415;
  fluidb_string<2> sym__0___45_8718474134339807009;
  fluidb_string<2> sym__0___45_1547707910421817299;
  unsigned sym__0__6203194341659602714;
  int sym__0___45_8346406923246249328;
  unsigned sym__0__7261181942821772584;
  unsigned sym__0__4921385962903522046;
  unsigned sym__0___45_373861829262187483;
  unsigned sym__0__7581746963088065020;
  fluidb_string<21> sym__0__361377377101151909;
  unsigned sym__0___45_3700129260976925913;
  fluidb_string<10> sym__0__6098359273528291496;
  unsigned sym__0___45_4676353293641220968;
  double sym__0__7082112007385025306;
  unsigned sym__0__7160864855686602780;
  double sym__0___45_8233331576153659470;
  unsigned sym__0___45_2888559707917916682;
  unsigned sym__0__1989813165103345441;
  double sym__0___45_5693677300964040709;
  fluidb_string<13> sym__0__5140151745458422419;
  unsigned sym__0__49568785671724893;
  fluidb_string<25> sym__0___45_8671242175283524122;
  fluidb_string<40> sym__0__8045204309842333188;
  fluidb_string<16> sym__0__7388366118437445626;
  fluidb_string<16> sym__0___45_6247682992415910136;
  fluidb_string<13> sym__0___45_8476130017571818055;
  fluidb_string<15> sym__0__522454679001458534;
 private:
};


class Record8 {
 public:
  Record8(unsigned __sym__0__2037864888707786451, fluidb_string<18> __sym__0__8533656712666151747, fluidb_string<9> __sym__0__646314041574508429, fluidb_string<9> __sym__0__6064137978327902054, unsigned __sym__0__3754157776500852496, unsigned __sym__0__6284345160241949046, fluidb_string<7> __sym__0___45_773692805971570325, unsigned __sym__0___45_8399474032083007524, unsigned __sym__0___45_2038947427357444789, unsigned __sym__0__6071994954612827827, unsigned __sym__0__7742515703067448213, unsigned __sym__0__5201219213304227654, fluidb_string<15> __sym__0___45_5896625796158057241, fluidb_string<2> __sym__0___45_1108504872221226081, fluidb_string<2> __sym__0__1055103969674359346, fluidb_string<2> __sym__0__9115626546918942554, fluidb_string<2> __sym__0___45_6850413444013389848) : sym__0__2037864888707786451(__sym__0__2037864888707786451), sym__0__8533656712666151747(__sym__0__8533656712666151747), sym__0__646314041574508429(__sym__0__646314041574508429), sym__0__6064137978327902054(__sym__0__6064137978327902054), sym__0__3754157776500852496(__sym__0__3754157776500852496), sym__0__6284345160241949046(__sym__0__6284345160241949046), sym__0___45_773692805971570325(__sym__0___45_773692805971570325), sym__0___45_8399474032083007524(__sym__0___45_8399474032083007524), sym__0___45_2038947427357444789(__sym__0___45_2038947427357444789), sym__0__6071994954612827827(__sym__0__6071994954612827827), sym__0__7742515703067448213(__sym__0__7742515703067448213), sym__0__5201219213304227654(__sym__0__5201219213304227654), sym__0___45_5896625796158057241(__sym__0___45_5896625796158057241), sym__0___45_1108504872221226081(__sym__0___45_1108504872221226081), sym__0__1055103969674359346(__sym__0__1055103969674359346), sym__0__9115626546918942554(__sym__0__9115626546918942554), sym__0___45_6850413444013389848(__sym__0___45_6850413444013389848)
  {
  }
  Record8() 
  {
  }
  std::string show() const{
    std::stringstream o;
    o << sym__0__2037864888707786451 << " | " << arrToString(sym__0__8533656712666151747) << " | " << arrToString(sym__0__646314041574508429) << " | " << arrToString(sym__0__6064137978327902054) << " | " << sym__0__3754157776500852496 << " | " << sym__0__6284345160241949046 << " | " << arrToString(sym__0___45_773692805971570325) << " | " << sym__0___45_8399474032083007524 << " | " << sym__0___45_2038947427357444789 << " | " << sym__0__6071994954612827827 << " | " << sym__0__7742515703067448213 << " | " << sym__0__5201219213304227654 << " | " << arrToString(sym__0___45_5896625796158057241) << " | " << arrToString(sym__0___45_1108504872221226081) << " | " << arrToString(sym__0__1055103969674359346) << " | " << arrToString(sym__0__9115626546918942554) << " | " << arrToString(sym__0___45_6850413444013389848);
    return o.str();
  }
  bool operator <(const Record8& otherRec) const{
    return (otherRec.sym__0__2037864888707786451 < sym__0__2037864888707786451 && (otherRec.sym__0__8533656712666151747 < sym__0__8533656712666151747 && (otherRec.sym__0__646314041574508429 < sym__0__646314041574508429 && (otherRec.sym__0__6064137978327902054 < sym__0__6064137978327902054 && (otherRec.sym__0__3754157776500852496 < sym__0__3754157776500852496 && (otherRec.sym__0__6284345160241949046 < sym__0__6284345160241949046 && (otherRec.sym__0___45_773692805971570325 < sym__0___45_773692805971570325 && (otherRec.sym__0___45_8399474032083007524 < sym__0___45_8399474032083007524 && (otherRec.sym__0___45_2038947427357444789 < sym__0___45_2038947427357444789 && (otherRec.sym__0__6071994954612827827 < sym__0__6071994954612827827 && (otherRec.sym__0__7742515703067448213 < sym__0__7742515703067448213 && (otherRec.sym__0__5201219213304227654 < sym__0__5201219213304227654 && (otherRec.sym__0___45_5896625796158057241 < sym__0___45_5896625796158057241 && (otherRec.sym__0___45_1108504872221226081 < sym__0___45_1108504872221226081 && (otherRec.sym__0__1055103969674359346 < sym__0__1055103969674359346 && (otherRec.sym__0__9115626546918942554 < sym__0__9115626546918942554 && otherRec.sym__0___45_6850413444013389848 < sym__0___45_6850413444013389848))))))))))))))));
  }
  bool operator ==(const Record8& otherRec) const{
    return (otherRec.sym__0__2037864888707786451 == sym__0__2037864888707786451 && (otherRec.sym__0__8533656712666151747 == sym__0__8533656712666151747 && (otherRec.sym__0__646314041574508429 == sym__0__646314041574508429 && (otherRec.sym__0__6064137978327902054 == sym__0__6064137978327902054 && (otherRec.sym__0__3754157776500852496 == sym__0__3754157776500852496 && (otherRec.sym__0__6284345160241949046 == sym__0__6284345160241949046 && (otherRec.sym__0___45_773692805971570325 == sym__0___45_773692805971570325 && (otherRec.sym__0___45_8399474032083007524 == sym__0___45_8399474032083007524 && (otherRec.sym__0___45_2038947427357444789 == sym__0___45_2038947427357444789 && (otherRec.sym__0__6071994954612827827 == sym__0__6071994954612827827 && (otherRec.sym__0__7742515703067448213 == sym__0__7742515703067448213 && (otherRec.sym__0__5201219213304227654 == sym__0__5201219213304227654 && (otherRec.sym__0___45_5896625796158057241 == sym__0___45_5896625796158057241 && (otherRec.sym__0___45_1108504872221226081 == sym__0___45_1108504872221226081 && (otherRec.sym__0__1055103969674359346 == sym__0__1055103969674359346 && (otherRec.sym__0__9115626546918942554 == sym__0__9115626546918942554 && otherRec.sym__0___45_6850413444013389848 == sym__0___45_6850413444013389848))))))))))))))));
  }
  bool operator !=(const Record8& otherRec) const{
    return (otherRec.sym__0__2037864888707786451 != sym__0__2037864888707786451 || (otherRec.sym__0__8533656712666151747 != sym__0__8533656712666151747 || (otherRec.sym__0__646314041574508429 != sym__0__646314041574508429 || (otherRec.sym__0__6064137978327902054 != sym__0__6064137978327902054 || (otherRec.sym__0__3754157776500852496 != sym__0__3754157776500852496 || (otherRec.sym__0__6284345160241949046 != sym__0__6284345160241949046 || (otherRec.sym__0___45_773692805971570325 != sym__0___45_773692805971570325 || (otherRec.sym__0___45_8399474032083007524 != sym__0___45_8399474032083007524 || (otherRec.sym__0___45_2038947427357444789 != sym__0___45_2038947427357444789 || (otherRec.sym__0__6071994954612827827 != sym__0__6071994954612827827 || (otherRec.sym__0__7742515703067448213 != sym__0__7742515703067448213 || (otherRec.sym__0__5201219213304227654 != sym__0__5201219213304227654 || (otherRec.sym__0___45_5896625796158057241 != sym__0___45_5896625796158057241 || (otherRec.sym__0___45_1108504872221226081 != sym__0___45_1108504872221226081 || (otherRec.sym__0__1055103969674359346 != sym__0__1055103969674359346 || (otherRec.sym__0__9115626546918942554 != sym__0__9115626546918942554 || otherRec.sym__0___45_6850413444013389848 != sym__0___45_6850413444013389848))))))))))))))));
  }
  unsigned sym__0__2037864888707786451;
  fluidb_string<18> sym__0__8533656712666151747;
  fluidb_string<9> sym__0__646314041574508429;
  fluidb_string<9> sym__0__6064137978327902054;
  unsigned sym__0__3754157776500852496;
  unsigned sym__0__6284345160241949046;
  fluidb_string<7> sym__0___45_773692805971570325;
  unsigned sym__0___45_8399474032083007524;
  unsigned sym__0___45_2038947427357444789;
  unsigned sym__0__6071994954612827827;
  unsigned sym__0__7742515703067448213;
  unsigned sym__0__5201219213304227654;
  fluidb_string<15> sym__0___45_5896625796158057241;
  fluidb_string<2> sym__0___45_1108504872221226081;
  fluidb_string<2> sym__0__1055103969674359346;
  fluidb_string<2> sym__0__9115626546918942554;
  fluidb_string<2> sym__0___45_6850413444013389848;
 private:
};


class Record40 {
 public:
  Record40(fluidb_string<11> __sym__0__2205472641387563846, fluidb_string<16> __sym__0___45_6072514503924716906, unsigned __sym__0__9023619281214657635, unsigned __sym__0__1560451866393647227) : sym__0__2205472641387563846(__sym__0__2205472641387563846), sym__0___45_6072514503924716906(__sym__0___45_6072514503924716906), sym__0__9023619281214657635(__sym__0__9023619281214657635), sym__0__1560451866393647227(__sym__0__1560451866393647227)
  {
  }
  Record40() 
  {
  }
  std::string show() const{
    std::stringstream o;
    o << arrToString(sym__0__2205472641387563846) << " | " << arrToString(sym__0___45_6072514503924716906) << " | " << sym__0__9023619281214657635 << " | " << sym__0__1560451866393647227;
    return o.str();
  }
  bool operator <(const Record40& otherRec) const{
    return (otherRec.sym__0__2205472641387563846 < sym__0__2205472641387563846 && (otherRec.sym__0___45_6072514503924716906 < sym__0___45_6072514503924716906 && (otherRec.sym__0__9023619281214657635 < sym__0__9023619281214657635 && otherRec.sym__0__1560451866393647227 < sym__0__1560451866393647227)));
  }
  bool operator ==(const Record40& otherRec) const{
    return (otherRec.sym__0__2205472641387563846 == sym__0__2205472641387563846 && (otherRec.sym__0___45_6072514503924716906 == sym__0___45_6072514503924716906 && (otherRec.sym__0__9023619281214657635 == sym__0__9023619281214657635 && otherRec.sym__0__1560451866393647227 == sym__0__1560451866393647227)));
  }
  bool operator !=(const Record40& otherRec) const{
    return (otherRec.sym__0__2205472641387563846 != sym__0__2205472641387563846 || (otherRec.sym__0___45_6072514503924716906 != sym__0___45_6072514503924716906 || (otherRec.sym__0__9023619281214657635 != sym__0__9023619281214657635 || otherRec.sym__0__1560451866393647227 != sym__0__1560451866393647227)));
  }
  fluidb_string<11> sym__0__2205472641387563846;
  fluidb_string<16> sym__0___45_6072514503924716906;
  unsigned sym__0__9023619281214657635;
  unsigned sym__0__1560451866393647227;
 private:
};


class Record29 {
 public:
  Record29(unsigned __sym__0__205054261601647225, fluidb_string<18> __sym__0___45_4510297805584213935, fluidb_string<40> __sym__0___45_9050143834324026753, fluidb_string<11> __sym__0__8650771566522570685, fluidb_string<15> __sym__0___45_1968670018137143333, fluidb_string<13> __sym__0___45_4835327417429898074, fluidb_string<15> __sym__0___45_95801764840957743, fluidb_string<21> __sym__0___45_7623650011886303051, unsigned __sym__0__8165647617036477025, fluidb_string<18> __sym__0__3515162074326147089, fluidb_string<9> __sym__0__8302729007593069779, fluidb_string<9> __sym__0__734114380452904784, unsigned __sym__0___45_3377147782956527134, unsigned __sym__0__4408520847355651616, fluidb_string<7> __sym__0__8139831962268761273, unsigned __sym__0__9134129965139175950, unsigned __sym__0___45_6092511764822517223, unsigned __sym__0___45_191919823724386239, unsigned __sym__0__4620355860175509307, unsigned __sym__0___45_490273258710884560, fluidb_string<15> __sym__0__1582161423196437429, fluidb_string<2> __sym__0___45_7660645946606923571, fluidb_string<2> __sym__0__5998191833527537420, fluidb_string<2> __sym__0___45_2127034870857390668, fluidb_string<2> __sym__0___45_1550881583354303942, unsigned __sym__0___45_8828138595599955059, int __sym__0__1026410162225944443, unsigned __sym__0__6829258839574474483, unsigned __sym__0___45_6488088269583817527, unsigned __sym__0__5555983424822146930, unsigned __sym__0__2803835271247372623, fluidb_string<21> __sym__0__2664784788779698674, unsigned __sym__0___45_8058844527623228164, fluidb_string<10> __sym__0__185028401119941747, unsigned __sym__0__4453855063261132835, double __sym__0__1766395004316766093, unsigned __sym__0__5411299423561699695, double __sym__0___45_2262308129338709243, unsigned __sym__0__1921958949901956865, unsigned __sym__0___45_2902332582004936010, double __sym__0__3298077875456952136, fluidb_string<13> __sym__0___45_6746550276048127296) : sym__0__205054261601647225(__sym__0__205054261601647225), sym__0___45_4510297805584213935(__sym__0___45_4510297805584213935), sym__0___45_9050143834324026753(__sym__0___45_9050143834324026753), sym__0__8650771566522570685(__sym__0__8650771566522570685), sym__0___45_1968670018137143333(__sym__0___45_1968670018137143333), sym__0___45_4835327417429898074(__sym__0___45_4835327417429898074), sym__0___45_95801764840957743(__sym__0___45_95801764840957743), sym__0___45_7623650011886303051(__sym__0___45_7623650011886303051), sym__0__8165647617036477025(__sym__0__8165647617036477025), sym__0__3515162074326147089(__sym__0__3515162074326147089), sym__0__8302729007593069779(__sym__0__8302729007593069779), sym__0__734114380452904784(__sym__0__734114380452904784), sym__0___45_3377147782956527134(__sym__0___45_3377147782956527134), sym__0__4408520847355651616(__sym__0__4408520847355651616), sym__0__8139831962268761273(__sym__0__8139831962268761273), sym__0__9134129965139175950(__sym__0__9134129965139175950), sym__0___45_6092511764822517223(__sym__0___45_6092511764822517223), sym__0___45_191919823724386239(__sym__0___45_191919823724386239), sym__0__4620355860175509307(__sym__0__4620355860175509307), sym__0___45_490273258710884560(__sym__0___45_490273258710884560), sym__0__1582161423196437429(__sym__0__1582161423196437429), sym__0___45_7660645946606923571(__sym__0___45_7660645946606923571), sym__0__5998191833527537420(__sym__0__5998191833527537420), sym__0___45_2127034870857390668(__sym__0___45_2127034870857390668), sym__0___45_1550881583354303942(__sym__0___45_1550881583354303942), sym__0___45_8828138595599955059(__sym__0___45_8828138595599955059), sym__0__1026410162225944443(__sym__0__1026410162225944443), sym__0__6829258839574474483(__sym__0__6829258839574474483), sym__0___45_6488088269583817527(__sym__0___45_6488088269583817527), sym__0__5555983424822146930(__sym__0__5555983424822146930), sym__0__2803835271247372623(__sym__0__2803835271247372623), sym__0__2664784788779698674(__sym__0__2664784788779698674), sym__0___45_8058844527623228164(__sym__0___45_8058844527623228164), sym__0__185028401119941747(__sym__0__185028401119941747), sym__0__4453855063261132835(__sym__0__4453855063261132835), sym__0__1766395004316766093(__sym__0__1766395004316766093), sym__0__5411299423561699695(__sym__0__5411299423561699695), sym__0___45_2262308129338709243(__sym__0___45_2262308129338709243), sym__0__1921958949901956865(__sym__0__1921958949901956865), sym__0___45_2902332582004936010(__sym__0___45_2902332582004936010), sym__0__3298077875456952136(__sym__0__3298077875456952136), sym__0___45_6746550276048127296(__sym__0___45_6746550276048127296)
  {
  }
  Record29() 
  {
  }
  std::string show() const{
    std::stringstream o;
    o << sym__0__205054261601647225 << " | " << arrToString(sym__0___45_4510297805584213935) << " | " << arrToString(sym__0___45_9050143834324026753) << " | " << arrToString(sym__0__8650771566522570685) << " | " << arrToString(sym__0___45_1968670018137143333) << " | " << arrToString(sym__0___45_4835327417429898074) << " | " << arrToString(sym__0___45_95801764840957743) << " | " << arrToString(sym__0___45_7623650011886303051) << " | " << sym__0__8165647617036477025 << " | " << arrToString(sym__0__3515162074326147089) << " | " << arrToString(sym__0__8302729007593069779) << " | " << arrToString(sym__0__734114380452904784) << " | " << sym__0___45_3377147782956527134 << " | " << sym__0__4408520847355651616 << " | " << arrToString(sym__0__8139831962268761273) << " | " << sym__0__9134129965139175950 << " | " << sym__0___45_6092511764822517223 << " | " << sym__0___45_191919823724386239 << " | " << sym__0__4620355860175509307 << " | " << sym__0___45_490273258710884560 << " | " << arrToString(sym__0__1582161423196437429) << " | " << arrToString(sym__0___45_7660645946606923571) << " | " << arrToString(sym__0__5998191833527537420) << " | " << arrToString(sym__0___45_2127034870857390668) << " | " << arrToString(sym__0___45_1550881583354303942) << " | " << sym__0___45_8828138595599955059 << " | " << sym__0__1026410162225944443 << " | " << sym__0__6829258839574474483 << " | " << sym__0___45_6488088269583817527 << " | " << sym__0__5555983424822146930 << " | " << sym__0__2803835271247372623 << " | " << arrToString(sym__0__2664784788779698674) << " | " << sym__0___45_8058844527623228164 << " | " << arrToString(sym__0__185028401119941747) << " | " << sym__0__4453855063261132835 << " | " << sym__0__1766395004316766093 << " | " << sym__0__5411299423561699695 << " | " << sym__0___45_2262308129338709243 << " | " << sym__0__1921958949901956865 << " | " << sym__0___45_2902332582004936010 << " | " << sym__0__3298077875456952136 << " | " << arrToString(sym__0___45_6746550276048127296);
    return o.str();
  }
  bool operator <(const Record29& otherRec) const{
    return (otherRec.sym__0__205054261601647225 < sym__0__205054261601647225 && (otherRec.sym__0___45_4510297805584213935 < sym__0___45_4510297805584213935 && (otherRec.sym__0___45_9050143834324026753 < sym__0___45_9050143834324026753 && (otherRec.sym__0__8650771566522570685 < sym__0__8650771566522570685 && (otherRec.sym__0___45_1968670018137143333 < sym__0___45_1968670018137143333 && (otherRec.sym__0___45_4835327417429898074 < sym__0___45_4835327417429898074 && (otherRec.sym__0___45_95801764840957743 < sym__0___45_95801764840957743 && (otherRec.sym__0___45_7623650011886303051 < sym__0___45_7623650011886303051 && (otherRec.sym__0__8165647617036477025 < sym__0__8165647617036477025 && (otherRec.sym__0__3515162074326147089 < sym__0__3515162074326147089 && (otherRec.sym__0__8302729007593069779 < sym__0__8302729007593069779 && (otherRec.sym__0__734114380452904784 < sym__0__734114380452904784 && (otherRec.sym__0___45_3377147782956527134 < sym__0___45_3377147782956527134 && (otherRec.sym__0__4408520847355651616 < sym__0__4408520847355651616 && (otherRec.sym__0__8139831962268761273 < sym__0__8139831962268761273 && (otherRec.sym__0__9134129965139175950 < sym__0__9134129965139175950 && (otherRec.sym__0___45_6092511764822517223 < sym__0___45_6092511764822517223 && (otherRec.sym__0___45_191919823724386239 < sym__0___45_191919823724386239 && (otherRec.sym__0__4620355860175509307 < sym__0__4620355860175509307 && (otherRec.sym__0___45_490273258710884560 < sym__0___45_490273258710884560 && (otherRec.sym__0__1582161423196437429 < sym__0__1582161423196437429 && (otherRec.sym__0___45_7660645946606923571 < sym__0___45_7660645946606923571 && (otherRec.sym__0__5998191833527537420 < sym__0__5998191833527537420 && (otherRec.sym__0___45_2127034870857390668 < sym__0___45_2127034870857390668 && (otherRec.sym__0___45_1550881583354303942 < sym__0___45_1550881583354303942 && (otherRec.sym__0___45_8828138595599955059 < sym__0___45_8828138595599955059 && (otherRec.sym__0__1026410162225944443 < sym__0__1026410162225944443 && (otherRec.sym__0__6829258839574474483 < sym__0__6829258839574474483 && (otherRec.sym__0___45_6488088269583817527 < sym__0___45_6488088269583817527 && (otherRec.sym__0__5555983424822146930 < sym__0__5555983424822146930 && (otherRec.sym__0__2803835271247372623 < sym__0__2803835271247372623 && (otherRec.sym__0__2664784788779698674 < sym__0__2664784788779698674 && (otherRec.sym__0___45_8058844527623228164 < sym__0___45_8058844527623228164 && (otherRec.sym__0__185028401119941747 < sym__0__185028401119941747 && (otherRec.sym__0__4453855063261132835 < sym__0__4453855063261132835 && (otherRec.sym__0__1766395004316766093 < sym__0__1766395004316766093 && (otherRec.sym__0__5411299423561699695 < sym__0__5411299423561699695 && (otherRec.sym__0___45_2262308129338709243 < sym__0___45_2262308129338709243 && (otherRec.sym__0__1921958949901956865 < sym__0__1921958949901956865 && (otherRec.sym__0___45_2902332582004936010 < sym__0___45_2902332582004936010 && (otherRec.sym__0__3298077875456952136 < sym__0__3298077875456952136 && otherRec.sym__0___45_6746550276048127296 < sym__0___45_6746550276048127296)))))))))))))))))))))))))))))))))))))))));
  }
  bool operator ==(const Record29& otherRec) const{
    return (otherRec.sym__0__205054261601647225 == sym__0__205054261601647225 && (otherRec.sym__0___45_4510297805584213935 == sym__0___45_4510297805584213935 && (otherRec.sym__0___45_9050143834324026753 == sym__0___45_9050143834324026753 && (otherRec.sym__0__8650771566522570685 == sym__0__8650771566522570685 && (otherRec.sym__0___45_1968670018137143333 == sym__0___45_1968670018137143333 && (otherRec.sym__0___45_4835327417429898074 == sym__0___45_4835327417429898074 && (otherRec.sym__0___45_95801764840957743 == sym__0___45_95801764840957743 && (otherRec.sym__0___45_7623650011886303051 == sym__0___45_7623650011886303051 && (otherRec.sym__0__8165647617036477025 == sym__0__8165647617036477025 && (otherRec.sym__0__3515162074326147089 == sym__0__3515162074326147089 && (otherRec.sym__0__8302729007593069779 == sym__0__8302729007593069779 && (otherRec.sym__0__734114380452904784 == sym__0__734114380452904784 && (otherRec.sym__0___45_3377147782956527134 == sym__0___45_3377147782956527134 && (otherRec.sym__0__4408520847355651616 == sym__0__4408520847355651616 && (otherRec.sym__0__8139831962268761273 == sym__0__8139831962268761273 && (otherRec.sym__0__9134129965139175950 == sym__0__9134129965139175950 && (otherRec.sym__0___45_6092511764822517223 == sym__0___45_6092511764822517223 && (otherRec.sym__0___45_191919823724386239 == sym__0___45_191919823724386239 && (otherRec.sym__0__4620355860175509307 == sym__0__4620355860175509307 && (otherRec.sym__0___45_490273258710884560 == sym__0___45_490273258710884560 && (otherRec.sym__0__1582161423196437429 == sym__0__1582161423196437429 && (otherRec.sym__0___45_7660645946606923571 == sym__0___45_7660645946606923571 && (otherRec.sym__0__5998191833527537420 == sym__0__5998191833527537420 && (otherRec.sym__0___45_2127034870857390668 == sym__0___45_2127034870857390668 && (otherRec.sym__0___45_1550881583354303942 == sym__0___45_1550881583354303942 && (otherRec.sym__0___45_8828138595599955059 == sym__0___45_8828138595599955059 && (otherRec.sym__0__1026410162225944443 == sym__0__1026410162225944443 && (otherRec.sym__0__6829258839574474483 == sym__0__6829258839574474483 && (otherRec.sym__0___45_6488088269583817527 == sym__0___45_6488088269583817527 && (otherRec.sym__0__5555983424822146930 == sym__0__5555983424822146930 && (otherRec.sym__0__2803835271247372623 == sym__0__2803835271247372623 && (otherRec.sym__0__2664784788779698674 == sym__0__2664784788779698674 && (otherRec.sym__0___45_8058844527623228164 == sym__0___45_8058844527623228164 && (otherRec.sym__0__185028401119941747 == sym__0__185028401119941747 && (otherRec.sym__0__4453855063261132835 == sym__0__4453855063261132835 && (otherRec.sym__0__1766395004316766093 == sym__0__1766395004316766093 && (otherRec.sym__0__5411299423561699695 == sym__0__5411299423561699695 && (otherRec.sym__0___45_2262308129338709243 == sym__0___45_2262308129338709243 && (otherRec.sym__0__1921958949901956865 == sym__0__1921958949901956865 && (otherRec.sym__0___45_2902332582004936010 == sym__0___45_2902332582004936010 && (otherRec.sym__0__3298077875456952136 == sym__0__3298077875456952136 && otherRec.sym__0___45_6746550276048127296 == sym__0___45_6746550276048127296)))))))))))))))))))))))))))))))))))))))));
  }
  bool operator !=(const Record29& otherRec) const{
    return (otherRec.sym__0__205054261601647225 != sym__0__205054261601647225 || (otherRec.sym__0___45_4510297805584213935 != sym__0___45_4510297805584213935 || (otherRec.sym__0___45_9050143834324026753 != sym__0___45_9050143834324026753 || (otherRec.sym__0__8650771566522570685 != sym__0__8650771566522570685 || (otherRec.sym__0___45_1968670018137143333 != sym__0___45_1968670018137143333 || (otherRec.sym__0___45_4835327417429898074 != sym__0___45_4835327417429898074 || (otherRec.sym__0___45_95801764840957743 != sym__0___45_95801764840957743 || (otherRec.sym__0___45_7623650011886303051 != sym__0___45_7623650011886303051 || (otherRec.sym__0__8165647617036477025 != sym__0__8165647617036477025 || (otherRec.sym__0__3515162074326147089 != sym__0__3515162074326147089 || (otherRec.sym__0__8302729007593069779 != sym__0__8302729007593069779 || (otherRec.sym__0__734114380452904784 != sym__0__734114380452904784 || (otherRec.sym__0___45_3377147782956527134 != sym__0___45_3377147782956527134 || (otherRec.sym__0__4408520847355651616 != sym__0__4408520847355651616 || (otherRec.sym__0__8139831962268761273 != sym__0__8139831962268761273 || (otherRec.sym__0__9134129965139175950 != sym__0__9134129965139175950 || (otherRec.sym__0___45_6092511764822517223 != sym__0___45_6092511764822517223 || (otherRec.sym__0___45_191919823724386239 != sym__0___45_191919823724386239 || (otherRec.sym__0__4620355860175509307 != sym__0__4620355860175509307 || (otherRec.sym__0___45_490273258710884560 != sym__0___45_490273258710884560 || (otherRec.sym__0__1582161423196437429 != sym__0__1582161423196437429 || (otherRec.sym__0___45_7660645946606923571 != sym__0___45_7660645946606923571 || (otherRec.sym__0__5998191833527537420 != sym__0__5998191833527537420 || (otherRec.sym__0___45_2127034870857390668 != sym__0___45_2127034870857390668 || (otherRec.sym__0___45_1550881583354303942 != sym__0___45_1550881583354303942 || (otherRec.sym__0___45_8828138595599955059 != sym__0___45_8828138595599955059 || (otherRec.sym__0__1026410162225944443 != sym__0__1026410162225944443 || (otherRec.sym__0__6829258839574474483 != sym__0__6829258839574474483 || (otherRec.sym__0___45_6488088269583817527 != sym__0___45_6488088269583817527 || (otherRec.sym__0__5555983424822146930 != sym__0__5555983424822146930 || (otherRec.sym__0__2803835271247372623 != sym__0__2803835271247372623 || (otherRec.sym__0__2664784788779698674 != sym__0__2664784788779698674 || (otherRec.sym__0___45_8058844527623228164 != sym__0___45_8058844527623228164 || (otherRec.sym__0__185028401119941747 != sym__0__185028401119941747 || (otherRec.sym__0__4453855063261132835 != sym__0__4453855063261132835 || (otherRec.sym__0__1766395004316766093 != sym__0__1766395004316766093 || (otherRec.sym__0__5411299423561699695 != sym__0__5411299423561699695 || (otherRec.sym__0___45_2262308129338709243 != sym__0___45_2262308129338709243 || (otherRec.sym__0__1921958949901956865 != sym__0__1921958949901956865 || (otherRec.sym__0___45_2902332582004936010 != sym__0___45_2902332582004936010 || (otherRec.sym__0__3298077875456952136 != sym__0__3298077875456952136 || otherRec.sym__0___45_6746550276048127296 != sym__0___45_6746550276048127296)))))))))))))))))))))))))))))))))))))))));
  }
  unsigned sym__0__205054261601647225;
  fluidb_string<18> sym__0___45_4510297805584213935;
  fluidb_string<40> sym__0___45_9050143834324026753;
  fluidb_string<11> sym__0__8650771566522570685;
  fluidb_string<15> sym__0___45_1968670018137143333;
  fluidb_string<13> sym__0___45_4835327417429898074;
  fluidb_string<15> sym__0___45_95801764840957743;
  fluidb_string<21> sym__0___45_7623650011886303051;
  unsigned sym__0__8165647617036477025;
  fluidb_string<18> sym__0__3515162074326147089;
  fluidb_string<9> sym__0__8302729007593069779;
  fluidb_string<9> sym__0__734114380452904784;
  unsigned sym__0___45_3377147782956527134;
  unsigned sym__0__4408520847355651616;
  fluidb_string<7> sym__0__8139831962268761273;
  unsigned sym__0__9134129965139175950;
  unsigned sym__0___45_6092511764822517223;
  unsigned sym__0___45_191919823724386239;
  unsigned sym__0__4620355860175509307;
  unsigned sym__0___45_490273258710884560;
  fluidb_string<15> sym__0__1582161423196437429;
  fluidb_string<2> sym__0___45_7660645946606923571;
  fluidb_string<2> sym__0__5998191833527537420;
  fluidb_string<2> sym__0___45_2127034870857390668;
  fluidb_string<2> sym__0___45_1550881583354303942;
  unsigned sym__0___45_8828138595599955059;
  int sym__0__1026410162225944443;
  unsigned sym__0__6829258839574474483;
  unsigned sym__0___45_6488088269583817527;
  unsigned sym__0__5555983424822146930;
  unsigned sym__0__2803835271247372623;
  fluidb_string<21> sym__0__2664784788779698674;
  unsigned sym__0___45_8058844527623228164;
  fluidb_string<10> sym__0__185028401119941747;
  unsigned sym__0__4453855063261132835;
  double sym__0__1766395004316766093;
  unsigned sym__0__5411299423561699695;
  double sym__0___45_2262308129338709243;
  unsigned sym__0__1921958949901956865;
  unsigned sym__0___45_2902332582004936010;
  double sym__0__3298077875456952136;
  fluidb_string<13> sym__0___45_6746550276048127296;
 private:
};


class Record9 {
 public:
  Record9(unsigned __sym__0___45_3961143035674407474, fluidb_string<18> __sym__0___45_6251899802584687138, fluidb_string<9> __sym__0__7895704682370371792, fluidb_string<9> __sym__0___45_4486276699369081973, unsigned __sym__0__1119005997298974989, unsigned __sym__0__3623076037790620667, fluidb_string<7> __sym__0___45_369211045765545994, unsigned __sym__0___45_2252349090140989903, unsigned __sym__0___45_6519715028980934506, unsigned __sym__0__6988144115678218478, unsigned __sym__0__1168585672581702408, unsigned __sym__0___45_1566345155802505557, fluidb_string<15> __sym__0___45_3812637469976556790, fluidb_string<2> __sym__0___45_2398128448016703502, fluidb_string<2> __sym__0__5574729781191990975, fluidb_string<2> __sym__0___45_5962954882039921225, fluidb_string<2> __sym__0___45_7276734914968453131, unsigned __sym__0__5341165382232817970, int __sym__0__5806605655987033032, unsigned __sym__0___45_6623407408063066704, unsigned __sym__0___45_1670026162273154778, unsigned __sym__0__2289386367904588797, unsigned __sym__0__8025829587274267860, fluidb_string<21> __sym__0__454237065112775549, unsigned __sym__0__608217599158647375, fluidb_string<10> __sym__0__4347069016709593136, unsigned __sym__0__4553650632168714688, double __sym__0__586349573025064242, unsigned __sym__0__144523031940788660, double __sym__0__2942207309637238010, unsigned __sym__0__1782085603058736686, unsigned __sym__0__3001704397998344329, double __sym__0___45_2662583778072919661, fluidb_string<13> __sym__0__8853539013824041307) : sym__0___45_3961143035674407474(__sym__0___45_3961143035674407474), sym__0___45_6251899802584687138(__sym__0___45_6251899802584687138), sym__0__7895704682370371792(__sym__0__7895704682370371792), sym__0___45_4486276699369081973(__sym__0___45_4486276699369081973), sym__0__1119005997298974989(__sym__0__1119005997298974989), sym__0__3623076037790620667(__sym__0__3623076037790620667), sym__0___45_369211045765545994(__sym__0___45_369211045765545994), sym__0___45_2252349090140989903(__sym__0___45_2252349090140989903), sym__0___45_6519715028980934506(__sym__0___45_6519715028980934506), sym__0__6988144115678218478(__sym__0__6988144115678218478), sym__0__1168585672581702408(__sym__0__1168585672581702408), sym__0___45_1566345155802505557(__sym__0___45_1566345155802505557), sym__0___45_3812637469976556790(__sym__0___45_3812637469976556790), sym__0___45_2398128448016703502(__sym__0___45_2398128448016703502), sym__0__5574729781191990975(__sym__0__5574729781191990975), sym__0___45_5962954882039921225(__sym__0___45_5962954882039921225), sym__0___45_7276734914968453131(__sym__0___45_7276734914968453131), sym__0__5341165382232817970(__sym__0__5341165382232817970), sym__0__5806605655987033032(__sym__0__5806605655987033032), sym__0___45_6623407408063066704(__sym__0___45_6623407408063066704), sym__0___45_1670026162273154778(__sym__0___45_1670026162273154778), sym__0__2289386367904588797(__sym__0__2289386367904588797), sym__0__8025829587274267860(__sym__0__8025829587274267860), sym__0__454237065112775549(__sym__0__454237065112775549), sym__0__608217599158647375(__sym__0__608217599158647375), sym__0__4347069016709593136(__sym__0__4347069016709593136), sym__0__4553650632168714688(__sym__0__4553650632168714688), sym__0__586349573025064242(__sym__0__586349573025064242), sym__0__144523031940788660(__sym__0__144523031940788660), sym__0__2942207309637238010(__sym__0__2942207309637238010), sym__0__1782085603058736686(__sym__0__1782085603058736686), sym__0__3001704397998344329(__sym__0__3001704397998344329), sym__0___45_2662583778072919661(__sym__0___45_2662583778072919661), sym__0__8853539013824041307(__sym__0__8853539013824041307)
  {
  }
  Record9() 
  {
  }
  std::string show() const{
    std::stringstream o;
    o << sym__0___45_3961143035674407474 << " | " << arrToString(sym__0___45_6251899802584687138) << " | " << arrToString(sym__0__7895704682370371792) << " | " << arrToString(sym__0___45_4486276699369081973) << " | " << sym__0__1119005997298974989 << " | " << sym__0__3623076037790620667 << " | " << arrToString(sym__0___45_369211045765545994) << " | " << sym__0___45_2252349090140989903 << " | " << sym__0___45_6519715028980934506 << " | " << sym__0__6988144115678218478 << " | " << sym__0__1168585672581702408 << " | " << sym__0___45_1566345155802505557 << " | " << arrToString(sym__0___45_3812637469976556790) << " | " << arrToString(sym__0___45_2398128448016703502) << " | " << arrToString(sym__0__5574729781191990975) << " | " << arrToString(sym__0___45_5962954882039921225) << " | " << arrToString(sym__0___45_7276734914968453131) << " | " << sym__0__5341165382232817970 << " | " << sym__0__5806605655987033032 << " | " << sym__0___45_6623407408063066704 << " | " << sym__0___45_1670026162273154778 << " | " << sym__0__2289386367904588797 << " | " << sym__0__8025829587274267860 << " | " << arrToString(sym__0__454237065112775549) << " | " << sym__0__608217599158647375 << " | " << arrToString(sym__0__4347069016709593136) << " | " << sym__0__4553650632168714688 << " | " << sym__0__586349573025064242 << " | " << sym__0__144523031940788660 << " | " << sym__0__2942207309637238010 << " | " << sym__0__1782085603058736686 << " | " << sym__0__3001704397998344329 << " | " << sym__0___45_2662583778072919661 << " | " << arrToString(sym__0__8853539013824041307);
    return o.str();
  }
  bool operator <(const Record9& otherRec) const{
    return (otherRec.sym__0___45_3961143035674407474 < sym__0___45_3961143035674407474 && (otherRec.sym__0___45_6251899802584687138 < sym__0___45_6251899802584687138 && (otherRec.sym__0__7895704682370371792 < sym__0__7895704682370371792 && (otherRec.sym__0___45_4486276699369081973 < sym__0___45_4486276699369081973 && (otherRec.sym__0__1119005997298974989 < sym__0__1119005997298974989 && (otherRec.sym__0__3623076037790620667 < sym__0__3623076037790620667 && (otherRec.sym__0___45_369211045765545994 < sym__0___45_369211045765545994 && (otherRec.sym__0___45_2252349090140989903 < sym__0___45_2252349090140989903 && (otherRec.sym__0___45_6519715028980934506 < sym__0___45_6519715028980934506 && (otherRec.sym__0__6988144115678218478 < sym__0__6988144115678218478 && (otherRec.sym__0__1168585672581702408 < sym__0__1168585672581702408 && (otherRec.sym__0___45_1566345155802505557 < sym__0___45_1566345155802505557 && (otherRec.sym__0___45_3812637469976556790 < sym__0___45_3812637469976556790 && (otherRec.sym__0___45_2398128448016703502 < sym__0___45_2398128448016703502 && (otherRec.sym__0__5574729781191990975 < sym__0__5574729781191990975 && (otherRec.sym__0___45_5962954882039921225 < sym__0___45_5962954882039921225 && (otherRec.sym__0___45_7276734914968453131 < sym__0___45_7276734914968453131 && (otherRec.sym__0__5341165382232817970 < sym__0__5341165382232817970 && (otherRec.sym__0__5806605655987033032 < sym__0__5806605655987033032 && (otherRec.sym__0___45_6623407408063066704 < sym__0___45_6623407408063066704 && (otherRec.sym__0___45_1670026162273154778 < sym__0___45_1670026162273154778 && (otherRec.sym__0__2289386367904588797 < sym__0__2289386367904588797 && (otherRec.sym__0__8025829587274267860 < sym__0__8025829587274267860 && (otherRec.sym__0__454237065112775549 < sym__0__454237065112775549 && (otherRec.sym__0__608217599158647375 < sym__0__608217599158647375 && (otherRec.sym__0__4347069016709593136 < sym__0__4347069016709593136 && (otherRec.sym__0__4553650632168714688 < sym__0__4553650632168714688 && (otherRec.sym__0__586349573025064242 < sym__0__586349573025064242 && (otherRec.sym__0__144523031940788660 < sym__0__144523031940788660 && (otherRec.sym__0__2942207309637238010 < sym__0__2942207309637238010 && (otherRec.sym__0__1782085603058736686 < sym__0__1782085603058736686 && (otherRec.sym__0__3001704397998344329 < sym__0__3001704397998344329 && (otherRec.sym__0___45_2662583778072919661 < sym__0___45_2662583778072919661 && otherRec.sym__0__8853539013824041307 < sym__0__8853539013824041307)))))))))))))))))))))))))))))))));
  }
  bool operator ==(const Record9& otherRec) const{
    return (otherRec.sym__0___45_3961143035674407474 == sym__0___45_3961143035674407474 && (otherRec.sym__0___45_6251899802584687138 == sym__0___45_6251899802584687138 && (otherRec.sym__0__7895704682370371792 == sym__0__7895704682370371792 && (otherRec.sym__0___45_4486276699369081973 == sym__0___45_4486276699369081973 && (otherRec.sym__0__1119005997298974989 == sym__0__1119005997298974989 && (otherRec.sym__0__3623076037790620667 == sym__0__3623076037790620667 && (otherRec.sym__0___45_369211045765545994 == sym__0___45_369211045765545994 && (otherRec.sym__0___45_2252349090140989903 == sym__0___45_2252349090140989903 && (otherRec.sym__0___45_6519715028980934506 == sym__0___45_6519715028980934506 && (otherRec.sym__0__6988144115678218478 == sym__0__6988144115678218478 && (otherRec.sym__0__1168585672581702408 == sym__0__1168585672581702408 && (otherRec.sym__0___45_1566345155802505557 == sym__0___45_1566345155802505557 && (otherRec.sym__0___45_3812637469976556790 == sym__0___45_3812637469976556790 && (otherRec.sym__0___45_2398128448016703502 == sym__0___45_2398128448016703502 && (otherRec.sym__0__5574729781191990975 == sym__0__5574729781191990975 && (otherRec.sym__0___45_5962954882039921225 == sym__0___45_5962954882039921225 && (otherRec.sym__0___45_7276734914968453131 == sym__0___45_7276734914968453131 && (otherRec.sym__0__5341165382232817970 == sym__0__5341165382232817970 && (otherRec.sym__0__5806605655987033032 == sym__0__5806605655987033032 && (otherRec.sym__0___45_6623407408063066704 == sym__0___45_6623407408063066704 && (otherRec.sym__0___45_1670026162273154778 == sym__0___45_1670026162273154778 && (otherRec.sym__0__2289386367904588797 == sym__0__2289386367904588797 && (otherRec.sym__0__8025829587274267860 == sym__0__8025829587274267860 && (otherRec.sym__0__454237065112775549 == sym__0__454237065112775549 && (otherRec.sym__0__608217599158647375 == sym__0__608217599158647375 && (otherRec.sym__0__4347069016709593136 == sym__0__4347069016709593136 && (otherRec.sym__0__4553650632168714688 == sym__0__4553650632168714688 && (otherRec.sym__0__586349573025064242 == sym__0__586349573025064242 && (otherRec.sym__0__144523031940788660 == sym__0__144523031940788660 && (otherRec.sym__0__2942207309637238010 == sym__0__2942207309637238010 && (otherRec.sym__0__1782085603058736686 == sym__0__1782085603058736686 && (otherRec.sym__0__3001704397998344329 == sym__0__3001704397998344329 && (otherRec.sym__0___45_2662583778072919661 == sym__0___45_2662583778072919661 && otherRec.sym__0__8853539013824041307 == sym__0__8853539013824041307)))))))))))))))))))))))))))))))));
  }
  bool operator !=(const Record9& otherRec) const{
    return (otherRec.sym__0___45_3961143035674407474 != sym__0___45_3961143035674407474 || (otherRec.sym__0___45_6251899802584687138 != sym__0___45_6251899802584687138 || (otherRec.sym__0__7895704682370371792 != sym__0__7895704682370371792 || (otherRec.sym__0___45_4486276699369081973 != sym__0___45_4486276699369081973 || (otherRec.sym__0__1119005997298974989 != sym__0__1119005997298974989 || (otherRec.sym__0__3623076037790620667 != sym__0__3623076037790620667 || (otherRec.sym__0___45_369211045765545994 != sym__0___45_369211045765545994 || (otherRec.sym__0___45_2252349090140989903 != sym__0___45_2252349090140989903 || (otherRec.sym__0___45_6519715028980934506 != sym__0___45_6519715028980934506 || (otherRec.sym__0__6988144115678218478 != sym__0__6988144115678218478 || (otherRec.sym__0__1168585672581702408 != sym__0__1168585672581702408 || (otherRec.sym__0___45_1566345155802505557 != sym__0___45_1566345155802505557 || (otherRec.sym__0___45_3812637469976556790 != sym__0___45_3812637469976556790 || (otherRec.sym__0___45_2398128448016703502 != sym__0___45_2398128448016703502 || (otherRec.sym__0__5574729781191990975 != sym__0__5574729781191990975 || (otherRec.sym__0___45_5962954882039921225 != sym__0___45_5962954882039921225 || (otherRec.sym__0___45_7276734914968453131 != sym__0___45_7276734914968453131 || (otherRec.sym__0__5341165382232817970 != sym__0__5341165382232817970 || (otherRec.sym__0__5806605655987033032 != sym__0__5806605655987033032 || (otherRec.sym__0___45_6623407408063066704 != sym__0___45_6623407408063066704 || (otherRec.sym__0___45_1670026162273154778 != sym__0___45_1670026162273154778 || (otherRec.sym__0__2289386367904588797 != sym__0__2289386367904588797 || (otherRec.sym__0__8025829587274267860 != sym__0__8025829587274267860 || (otherRec.sym__0__454237065112775549 != sym__0__454237065112775549 || (otherRec.sym__0__608217599158647375 != sym__0__608217599158647375 || (otherRec.sym__0__4347069016709593136 != sym__0__4347069016709593136 || (otherRec.sym__0__4553650632168714688 != sym__0__4553650632168714688 || (otherRec.sym__0__586349573025064242 != sym__0__586349573025064242 || (otherRec.sym__0__144523031940788660 != sym__0__144523031940788660 || (otherRec.sym__0__2942207309637238010 != sym__0__2942207309637238010 || (otherRec.sym__0__1782085603058736686 != sym__0__1782085603058736686 || (otherRec.sym__0__3001704397998344329 != sym__0__3001704397998344329 || (otherRec.sym__0___45_2662583778072919661 != sym__0___45_2662583778072919661 || otherRec.sym__0__8853539013824041307 != sym__0__8853539013824041307)))))))))))))))))))))))))))))))));
  }
  unsigned sym__0___45_3961143035674407474;
  fluidb_string<18> sym__0___45_6251899802584687138;
  fluidb_string<9> sym__0__7895704682370371792;
  fluidb_string<9> sym__0___45_4486276699369081973;
  unsigned sym__0__1119005997298974989;
  unsigned sym__0__3623076037790620667;
  fluidb_string<7> sym__0___45_369211045765545994;
  unsigned sym__0___45_2252349090140989903;
  unsigned sym__0___45_6519715028980934506;
  unsigned sym__0__6988144115678218478;
  unsigned sym__0__1168585672581702408;
  unsigned sym__0___45_1566345155802505557;
  fluidb_string<15> sym__0___45_3812637469976556790;
  fluidb_string<2> sym__0___45_2398128448016703502;
  fluidb_string<2> sym__0__5574729781191990975;
  fluidb_string<2> sym__0___45_5962954882039921225;
  fluidb_string<2> sym__0___45_7276734914968453131;
  unsigned sym__0__5341165382232817970;
  int sym__0__5806605655987033032;
  unsigned sym__0___45_6623407408063066704;
  unsigned sym__0___45_1670026162273154778;
  unsigned sym__0__2289386367904588797;
  unsigned sym__0__8025829587274267860;
  fluidb_string<21> sym__0__454237065112775549;
  unsigned sym__0__608217599158647375;
  fluidb_string<10> sym__0__4347069016709593136;
  unsigned sym__0__4553650632168714688;
  double sym__0__586349573025064242;
  unsigned sym__0__144523031940788660;
  double sym__0__2942207309637238010;
  unsigned sym__0__1782085603058736686;
  unsigned sym__0__3001704397998344329;
  double sym__0___45_2662583778072919661;
  fluidb_string<13> sym__0__8853539013824041307;
 private:
};


class Record18 {
 public:
  Record18(unsigned __sym__0__59163526776084807, fluidb_string<18> __sym__0___45_1313357857405786385, fluidb_string<40> __sym__0__1337312907475566789, fluidb_string<11> __sym__0__8014013609240026595, fluidb_string<15> __sym__0___45_4888925151068446247, fluidb_string<13> __sym__0__661408193145534136, fluidb_string<15> __sym__0___45_7159405632382799505, fluidb_string<21> __sym__0___45_7793359246716293237) : sym__0__59163526776084807(__sym__0__59163526776084807), sym__0___45_1313357857405786385(__sym__0___45_1313357857405786385), sym__0__1337312907475566789(__sym__0__1337312907475566789), sym__0__8014013609240026595(__sym__0__8014013609240026595), sym__0___45_4888925151068446247(__sym__0___45_4888925151068446247), sym__0__661408193145534136(__sym__0__661408193145534136), sym__0___45_7159405632382799505(__sym__0___45_7159405632382799505), sym__0___45_7793359246716293237(__sym__0___45_7793359246716293237)
  {
  }
  Record18() 
  {
  }
  std::string show() const{
    std::stringstream o;
    o << sym__0__59163526776084807 << " | " << arrToString(sym__0___45_1313357857405786385) << " | " << arrToString(sym__0__1337312907475566789) << " | " << arrToString(sym__0__8014013609240026595) << " | " << arrToString(sym__0___45_4888925151068446247) << " | " << arrToString(sym__0__661408193145534136) << " | " << arrToString(sym__0___45_7159405632382799505) << " | " << arrToString(sym__0___45_7793359246716293237);
    return o.str();
  }
  bool operator <(const Record18& otherRec) const{
    return (otherRec.sym__0__59163526776084807 < sym__0__59163526776084807 && (otherRec.sym__0___45_1313357857405786385 < sym__0___45_1313357857405786385 && (otherRec.sym__0__1337312907475566789 < sym__0__1337312907475566789 && (otherRec.sym__0__8014013609240026595 < sym__0__8014013609240026595 && (otherRec.sym__0___45_4888925151068446247 < sym__0___45_4888925151068446247 && (otherRec.sym__0__661408193145534136 < sym__0__661408193145534136 && (otherRec.sym__0___45_7159405632382799505 < sym__0___45_7159405632382799505 && otherRec.sym__0___45_7793359246716293237 < sym__0___45_7793359246716293237)))))));
  }
  bool operator ==(const Record18& otherRec) const{
    return (otherRec.sym__0__59163526776084807 == sym__0__59163526776084807 && (otherRec.sym__0___45_1313357857405786385 == sym__0___45_1313357857405786385 && (otherRec.sym__0__1337312907475566789 == sym__0__1337312907475566789 && (otherRec.sym__0__8014013609240026595 == sym__0__8014013609240026595 && (otherRec.sym__0___45_4888925151068446247 == sym__0___45_4888925151068446247 && (otherRec.sym__0__661408193145534136 == sym__0__661408193145534136 && (otherRec.sym__0___45_7159405632382799505 == sym__0___45_7159405632382799505 && otherRec.sym__0___45_7793359246716293237 == sym__0___45_7793359246716293237)))))));
  }
  bool operator !=(const Record18& otherRec) const{
    return (otherRec.sym__0__59163526776084807 != sym__0__59163526776084807 || (otherRec.sym__0___45_1313357857405786385 != sym__0___45_1313357857405786385 || (otherRec.sym__0__1337312907475566789 != sym__0__1337312907475566789 || (otherRec.sym__0__8014013609240026595 != sym__0__8014013609240026595 || (otherRec.sym__0___45_4888925151068446247 != sym__0___45_4888925151068446247 || (otherRec.sym__0__661408193145534136 != sym__0__661408193145534136 || (otherRec.sym__0___45_7159405632382799505 != sym__0___45_7159405632382799505 || otherRec.sym__0___45_7793359246716293237 != sym__0___45_7793359246716293237)))))));
  }
  unsigned sym__0__59163526776084807;
  fluidb_string<18> sym__0___45_1313357857405786385;
  fluidb_string<40> sym__0__1337312907475566789;
  fluidb_string<11> sym__0__8014013609240026595;
  fluidb_string<15> sym__0___45_4888925151068446247;
  fluidb_string<13> sym__0__661408193145534136;
  fluidb_string<15> sym__0___45_7159405632382799505;
  fluidb_string<21> sym__0___45_7793359246716293237;
 private:
};


class Record19 {
 public:
  Record19(unsigned __sym__0__5373426235047388566, fluidb_string<18> __sym__0__2677149988632781646, fluidb_string<40> __sym__0__3230501947603702676, fluidb_string<11> __sym__0___45_7504312298840290590, fluidb_string<15> __sym__0__142765961647840520, fluidb_string<13> __sym__0___45_890986601021018327, fluidb_string<15> __sym__0__1448529583206195662, fluidb_string<21> __sym__0__2570343804236594778, unsigned __sym__0__1359507712116914494, fluidb_string<18> __sym__0__6011849395894522126, fluidb_string<9> __sym__0___45_7468776379460950944, fluidb_string<9> __sym__0___45_8794687169050633757, unsigned __sym__0___45_6203473563316140867, unsigned __sym__0___45_677371798856704365, fluidb_string<7> __sym__0__915473005346690518, unsigned __sym__0__6004818342855880465, unsigned __sym__0___45_7479113260177362442, unsigned __sym__0___45_7892661382758597666, unsigned __sym__0___45_5779290218296092888, unsigned __sym__0__39182466228154115, fluidb_string<15> __sym__0___45_6428352846240480422, fluidb_string<2> __sym__0__5771061490590798674, fluidb_string<2> __sym__0__5176922323272081847, fluidb_string<2> __sym__0__3439791191136335327, fluidb_string<2> __sym__0__9000735294801606101, unsigned __sym__0___45_4937244029492686830, int __sym__0___45_4662405569626189464, unsigned __sym__0__5296351127385819968, unsigned __sym__0__3188754882683964806, unsigned __sym__0__4353034828577292717, unsigned __sym__0___45_7269132014943876604, fluidb_string<21> __sym__0__2678892183314537005, unsigned __sym__0__4170008532883495879, fluidb_string<10> __sym__0___45_4375206156149434176, unsigned __sym__0__697181792988283792, double __sym__0__2425070607436168210, unsigned __sym__0___45_8099035356149320476, double __sym__0___45_1189046714177700278, unsigned __sym__0___45_7692406820437109602, unsigned __sym__0__4206086254272971481, double __sym__0___45_2483348542730046437, fluidb_string<13> __sym__0___45_762363192294171021) : sym__0__5373426235047388566(__sym__0__5373426235047388566), sym__0__2677149988632781646(__sym__0__2677149988632781646), sym__0__3230501947603702676(__sym__0__3230501947603702676), sym__0___45_7504312298840290590(__sym__0___45_7504312298840290590), sym__0__142765961647840520(__sym__0__142765961647840520), sym__0___45_890986601021018327(__sym__0___45_890986601021018327), sym__0__1448529583206195662(__sym__0__1448529583206195662), sym__0__2570343804236594778(__sym__0__2570343804236594778), sym__0__1359507712116914494(__sym__0__1359507712116914494), sym__0__6011849395894522126(__sym__0__6011849395894522126), sym__0___45_7468776379460950944(__sym__0___45_7468776379460950944), sym__0___45_8794687169050633757(__sym__0___45_8794687169050633757), sym__0___45_6203473563316140867(__sym__0___45_6203473563316140867), sym__0___45_677371798856704365(__sym__0___45_677371798856704365), sym__0__915473005346690518(__sym__0__915473005346690518), sym__0__6004818342855880465(__sym__0__6004818342855880465), sym__0___45_7479113260177362442(__sym__0___45_7479113260177362442), sym__0___45_7892661382758597666(__sym__0___45_7892661382758597666), sym__0___45_5779290218296092888(__sym__0___45_5779290218296092888), sym__0__39182466228154115(__sym__0__39182466228154115), sym__0___45_6428352846240480422(__sym__0___45_6428352846240480422), sym__0__5771061490590798674(__sym__0__5771061490590798674), sym__0__5176922323272081847(__sym__0__5176922323272081847), sym__0__3439791191136335327(__sym__0__3439791191136335327), sym__0__9000735294801606101(__sym__0__9000735294801606101), sym__0___45_4937244029492686830(__sym__0___45_4937244029492686830), sym__0___45_4662405569626189464(__sym__0___45_4662405569626189464), sym__0__5296351127385819968(__sym__0__5296351127385819968), sym__0__3188754882683964806(__sym__0__3188754882683964806), sym__0__4353034828577292717(__sym__0__4353034828577292717), sym__0___45_7269132014943876604(__sym__0___45_7269132014943876604), sym__0__2678892183314537005(__sym__0__2678892183314537005), sym__0__4170008532883495879(__sym__0__4170008532883495879), sym__0___45_4375206156149434176(__sym__0___45_4375206156149434176), sym__0__697181792988283792(__sym__0__697181792988283792), sym__0__2425070607436168210(__sym__0__2425070607436168210), sym__0___45_8099035356149320476(__sym__0___45_8099035356149320476), sym__0___45_1189046714177700278(__sym__0___45_1189046714177700278), sym__0___45_7692406820437109602(__sym__0___45_7692406820437109602), sym__0__4206086254272971481(__sym__0__4206086254272971481), sym__0___45_2483348542730046437(__sym__0___45_2483348542730046437), sym__0___45_762363192294171021(__sym__0___45_762363192294171021)
  {
  }
  Record19() 
  {
  }
  std::string show() const{
    std::stringstream o;
    o << sym__0__5373426235047388566 << " | " << arrToString(sym__0__2677149988632781646) << " | " << arrToString(sym__0__3230501947603702676) << " | " << arrToString(sym__0___45_7504312298840290590) << " | " << arrToString(sym__0__142765961647840520) << " | " << arrToString(sym__0___45_890986601021018327) << " | " << arrToString(sym__0__1448529583206195662) << " | " << arrToString(sym__0__2570343804236594778) << " | " << sym__0__1359507712116914494 << " | " << arrToString(sym__0__6011849395894522126) << " | " << arrToString(sym__0___45_7468776379460950944) << " | " << arrToString(sym__0___45_8794687169050633757) << " | " << sym__0___45_6203473563316140867 << " | " << sym__0___45_677371798856704365 << " | " << arrToString(sym__0__915473005346690518) << " | " << sym__0__6004818342855880465 << " | " << sym__0___45_7479113260177362442 << " | " << sym__0___45_7892661382758597666 << " | " << sym__0___45_5779290218296092888 << " | " << sym__0__39182466228154115 << " | " << arrToString(sym__0___45_6428352846240480422) << " | " << arrToString(sym__0__5771061490590798674) << " | " << arrToString(sym__0__5176922323272081847) << " | " << arrToString(sym__0__3439791191136335327) << " | " << arrToString(sym__0__9000735294801606101) << " | " << sym__0___45_4937244029492686830 << " | " << sym__0___45_4662405569626189464 << " | " << sym__0__5296351127385819968 << " | " << sym__0__3188754882683964806 << " | " << sym__0__4353034828577292717 << " | " << sym__0___45_7269132014943876604 << " | " << arrToString(sym__0__2678892183314537005) << " | " << sym__0__4170008532883495879 << " | " << arrToString(sym__0___45_4375206156149434176) << " | " << sym__0__697181792988283792 << " | " << sym__0__2425070607436168210 << " | " << sym__0___45_8099035356149320476 << " | " << sym__0___45_1189046714177700278 << " | " << sym__0___45_7692406820437109602 << " | " << sym__0__4206086254272971481 << " | " << sym__0___45_2483348542730046437 << " | " << arrToString(sym__0___45_762363192294171021);
    return o.str();
  }
  bool operator <(const Record19& otherRec) const{
    return (otherRec.sym__0__5373426235047388566 < sym__0__5373426235047388566 && (otherRec.sym__0__2677149988632781646 < sym__0__2677149988632781646 && (otherRec.sym__0__3230501947603702676 < sym__0__3230501947603702676 && (otherRec.sym__0___45_7504312298840290590 < sym__0___45_7504312298840290590 && (otherRec.sym__0__142765961647840520 < sym__0__142765961647840520 && (otherRec.sym__0___45_890986601021018327 < sym__0___45_890986601021018327 && (otherRec.sym__0__1448529583206195662 < sym__0__1448529583206195662 && (otherRec.sym__0__2570343804236594778 < sym__0__2570343804236594778 && (otherRec.sym__0__1359507712116914494 < sym__0__1359507712116914494 && (otherRec.sym__0__6011849395894522126 < sym__0__6011849395894522126 && (otherRec.sym__0___45_7468776379460950944 < sym__0___45_7468776379460950944 && (otherRec.sym__0___45_8794687169050633757 < sym__0___45_8794687169050633757 && (otherRec.sym__0___45_6203473563316140867 < sym__0___45_6203473563316140867 && (otherRec.sym__0___45_677371798856704365 < sym__0___45_677371798856704365 && (otherRec.sym__0__915473005346690518 < sym__0__915473005346690518 && (otherRec.sym__0__6004818342855880465 < sym__0__6004818342855880465 && (otherRec.sym__0___45_7479113260177362442 < sym__0___45_7479113260177362442 && (otherRec.sym__0___45_7892661382758597666 < sym__0___45_7892661382758597666 && (otherRec.sym__0___45_5779290218296092888 < sym__0___45_5779290218296092888 && (otherRec.sym__0__39182466228154115 < sym__0__39182466228154115 && (otherRec.sym__0___45_6428352846240480422 < sym__0___45_6428352846240480422 && (otherRec.sym__0__5771061490590798674 < sym__0__5771061490590798674 && (otherRec.sym__0__5176922323272081847 < sym__0__5176922323272081847 && (otherRec.sym__0__3439791191136335327 < sym__0__3439791191136335327 && (otherRec.sym__0__9000735294801606101 < sym__0__9000735294801606101 && (otherRec.sym__0___45_4937244029492686830 < sym__0___45_4937244029492686830 && (otherRec.sym__0___45_4662405569626189464 < sym__0___45_4662405569626189464 && (otherRec.sym__0__5296351127385819968 < sym__0__5296351127385819968 && (otherRec.sym__0__3188754882683964806 < sym__0__3188754882683964806 && (otherRec.sym__0__4353034828577292717 < sym__0__4353034828577292717 && (otherRec.sym__0___45_7269132014943876604 < sym__0___45_7269132014943876604 && (otherRec.sym__0__2678892183314537005 < sym__0__2678892183314537005 && (otherRec.sym__0__4170008532883495879 < sym__0__4170008532883495879 && (otherRec.sym__0___45_4375206156149434176 < sym__0___45_4375206156149434176 && (otherRec.sym__0__697181792988283792 < sym__0__697181792988283792 && (otherRec.sym__0__2425070607436168210 < sym__0__2425070607436168210 && (otherRec.sym__0___45_8099035356149320476 < sym__0___45_8099035356149320476 && (otherRec.sym__0___45_1189046714177700278 < sym__0___45_1189046714177700278 && (otherRec.sym__0___45_7692406820437109602 < sym__0___45_7692406820437109602 && (otherRec.sym__0__4206086254272971481 < sym__0__4206086254272971481 && (otherRec.sym__0___45_2483348542730046437 < sym__0___45_2483348542730046437 && otherRec.sym__0___45_762363192294171021 < sym__0___45_762363192294171021)))))))))))))))))))))))))))))))))))))))));
  }
  bool operator ==(const Record19& otherRec) const{
    return (otherRec.sym__0__5373426235047388566 == sym__0__5373426235047388566 && (otherRec.sym__0__2677149988632781646 == sym__0__2677149988632781646 && (otherRec.sym__0__3230501947603702676 == sym__0__3230501947603702676 && (otherRec.sym__0___45_7504312298840290590 == sym__0___45_7504312298840290590 && (otherRec.sym__0__142765961647840520 == sym__0__142765961647840520 && (otherRec.sym__0___45_890986601021018327 == sym__0___45_890986601021018327 && (otherRec.sym__0__1448529583206195662 == sym__0__1448529583206195662 && (otherRec.sym__0__2570343804236594778 == sym__0__2570343804236594778 && (otherRec.sym__0__1359507712116914494 == sym__0__1359507712116914494 && (otherRec.sym__0__6011849395894522126 == sym__0__6011849395894522126 && (otherRec.sym__0___45_7468776379460950944 == sym__0___45_7468776379460950944 && (otherRec.sym__0___45_8794687169050633757 == sym__0___45_8794687169050633757 && (otherRec.sym__0___45_6203473563316140867 == sym__0___45_6203473563316140867 && (otherRec.sym__0___45_677371798856704365 == sym__0___45_677371798856704365 && (otherRec.sym__0__915473005346690518 == sym__0__915473005346690518 && (otherRec.sym__0__6004818342855880465 == sym__0__6004818342855880465 && (otherRec.sym__0___45_7479113260177362442 == sym__0___45_7479113260177362442 && (otherRec.sym__0___45_7892661382758597666 == sym__0___45_7892661382758597666 && (otherRec.sym__0___45_5779290218296092888 == sym__0___45_5779290218296092888 && (otherRec.sym__0__39182466228154115 == sym__0__39182466228154115 && (otherRec.sym__0___45_6428352846240480422 == sym__0___45_6428352846240480422 && (otherRec.sym__0__5771061490590798674 == sym__0__5771061490590798674 && (otherRec.sym__0__5176922323272081847 == sym__0__5176922323272081847 && (otherRec.sym__0__3439791191136335327 == sym__0__3439791191136335327 && (otherRec.sym__0__9000735294801606101 == sym__0__9000735294801606101 && (otherRec.sym__0___45_4937244029492686830 == sym__0___45_4937244029492686830 && (otherRec.sym__0___45_4662405569626189464 == sym__0___45_4662405569626189464 && (otherRec.sym__0__5296351127385819968 == sym__0__5296351127385819968 && (otherRec.sym__0__3188754882683964806 == sym__0__3188754882683964806 && (otherRec.sym__0__4353034828577292717 == sym__0__4353034828577292717 && (otherRec.sym__0___45_7269132014943876604 == sym__0___45_7269132014943876604 && (otherRec.sym__0__2678892183314537005 == sym__0__2678892183314537005 && (otherRec.sym__0__4170008532883495879 == sym__0__4170008532883495879 && (otherRec.sym__0___45_4375206156149434176 == sym__0___45_4375206156149434176 && (otherRec.sym__0__697181792988283792 == sym__0__697181792988283792 && (otherRec.sym__0__2425070607436168210 == sym__0__2425070607436168210 && (otherRec.sym__0___45_8099035356149320476 == sym__0___45_8099035356149320476 && (otherRec.sym__0___45_1189046714177700278 == sym__0___45_1189046714177700278 && (otherRec.sym__0___45_7692406820437109602 == sym__0___45_7692406820437109602 && (otherRec.sym__0__4206086254272971481 == sym__0__4206086254272971481 && (otherRec.sym__0___45_2483348542730046437 == sym__0___45_2483348542730046437 && otherRec.sym__0___45_762363192294171021 == sym__0___45_762363192294171021)))))))))))))))))))))))))))))))))))))))));
  }
  bool operator !=(const Record19& otherRec) const{
    return (otherRec.sym__0__5373426235047388566 != sym__0__5373426235047388566 || (otherRec.sym__0__2677149988632781646 != sym__0__2677149988632781646 || (otherRec.sym__0__3230501947603702676 != sym__0__3230501947603702676 || (otherRec.sym__0___45_7504312298840290590 != sym__0___45_7504312298840290590 || (otherRec.sym__0__142765961647840520 != sym__0__142765961647840520 || (otherRec.sym__0___45_890986601021018327 != sym__0___45_890986601021018327 || (otherRec.sym__0__1448529583206195662 != sym__0__1448529583206195662 || (otherRec.sym__0__2570343804236594778 != sym__0__2570343804236594778 || (otherRec.sym__0__1359507712116914494 != sym__0__1359507712116914494 || (otherRec.sym__0__6011849395894522126 != sym__0__6011849395894522126 || (otherRec.sym__0___45_7468776379460950944 != sym__0___45_7468776379460950944 || (otherRec.sym__0___45_8794687169050633757 != sym__0___45_8794687169050633757 || (otherRec.sym__0___45_6203473563316140867 != sym__0___45_6203473563316140867 || (otherRec.sym__0___45_677371798856704365 != sym__0___45_677371798856704365 || (otherRec.sym__0__915473005346690518 != sym__0__915473005346690518 || (otherRec.sym__0__6004818342855880465 != sym__0__6004818342855880465 || (otherRec.sym__0___45_7479113260177362442 != sym__0___45_7479113260177362442 || (otherRec.sym__0___45_7892661382758597666 != sym__0___45_7892661382758597666 || (otherRec.sym__0___45_5779290218296092888 != sym__0___45_5779290218296092888 || (otherRec.sym__0__39182466228154115 != sym__0__39182466228154115 || (otherRec.sym__0___45_6428352846240480422 != sym__0___45_6428352846240480422 || (otherRec.sym__0__5771061490590798674 != sym__0__5771061490590798674 || (otherRec.sym__0__5176922323272081847 != sym__0__5176922323272081847 || (otherRec.sym__0__3439791191136335327 != sym__0__3439791191136335327 || (otherRec.sym__0__9000735294801606101 != sym__0__9000735294801606101 || (otherRec.sym__0___45_4937244029492686830 != sym__0___45_4937244029492686830 || (otherRec.sym__0___45_4662405569626189464 != sym__0___45_4662405569626189464 || (otherRec.sym__0__5296351127385819968 != sym__0__5296351127385819968 || (otherRec.sym__0__3188754882683964806 != sym__0__3188754882683964806 || (otherRec.sym__0__4353034828577292717 != sym__0__4353034828577292717 || (otherRec.sym__0___45_7269132014943876604 != sym__0___45_7269132014943876604 || (otherRec.sym__0__2678892183314537005 != sym__0__2678892183314537005 || (otherRec.sym__0__4170008532883495879 != sym__0__4170008532883495879 || (otherRec.sym__0___45_4375206156149434176 != sym__0___45_4375206156149434176 || (otherRec.sym__0__697181792988283792 != sym__0__697181792988283792 || (otherRec.sym__0__2425070607436168210 != sym__0__2425070607436168210 || (otherRec.sym__0___45_8099035356149320476 != sym__0___45_8099035356149320476 || (otherRec.sym__0___45_1189046714177700278 != sym__0___45_1189046714177700278 || (otherRec.sym__0___45_7692406820437109602 != sym__0___45_7692406820437109602 || (otherRec.sym__0__4206086254272971481 != sym__0__4206086254272971481 || (otherRec.sym__0___45_2483348542730046437 != sym__0___45_2483348542730046437 || otherRec.sym__0___45_762363192294171021 != sym__0___45_762363192294171021)))))))))))))))))))))))))))))))))))))))));
  }
  unsigned sym__0__5373426235047388566;
  fluidb_string<18> sym__0__2677149988632781646;
  fluidb_string<40> sym__0__3230501947603702676;
  fluidb_string<11> sym__0___45_7504312298840290590;
  fluidb_string<15> sym__0__142765961647840520;
  fluidb_string<13> sym__0___45_890986601021018327;
  fluidb_string<15> sym__0__1448529583206195662;
  fluidb_string<21> sym__0__2570343804236594778;
  unsigned sym__0__1359507712116914494;
  fluidb_string<18> sym__0__6011849395894522126;
  fluidb_string<9> sym__0___45_7468776379460950944;
  fluidb_string<9> sym__0___45_8794687169050633757;
  unsigned sym__0___45_6203473563316140867;
  unsigned sym__0___45_677371798856704365;
  fluidb_string<7> sym__0__915473005346690518;
  unsigned sym__0__6004818342855880465;
  unsigned sym__0___45_7479113260177362442;
  unsigned sym__0___45_7892661382758597666;
  unsigned sym__0___45_5779290218296092888;
  unsigned sym__0__39182466228154115;
  fluidb_string<15> sym__0___45_6428352846240480422;
  fluidb_string<2> sym__0__5771061490590798674;
  fluidb_string<2> sym__0__5176922323272081847;
  fluidb_string<2> sym__0__3439791191136335327;
  fluidb_string<2> sym__0__9000735294801606101;
  unsigned sym__0___45_4937244029492686830;
  int sym__0___45_4662405569626189464;
  unsigned sym__0__5296351127385819968;
  unsigned sym__0__3188754882683964806;
  unsigned sym__0__4353034828577292717;
  unsigned sym__0___45_7269132014943876604;
  fluidb_string<21> sym__0__2678892183314537005;
  unsigned sym__0__4170008532883495879;
  fluidb_string<10> sym__0___45_4375206156149434176;
  unsigned sym__0__697181792988283792;
  double sym__0__2425070607436168210;
  unsigned sym__0___45_8099035356149320476;
  double sym__0___45_1189046714177700278;
  unsigned sym__0___45_7692406820437109602;
  unsigned sym__0__4206086254272971481;
  double sym__0___45_2483348542730046437;
  fluidb_string<13> sym__0___45_762363192294171021;
 private:
};


class Record2 {
 public:
  Record2(unsigned __sym__0__439931573365737364, fluidb_string<18> __sym__0__6294037715632330660, fluidb_string<9> __sym__0___45_8293230386109188598, fluidb_string<9> __sym__0__2075854333476516773, unsigned __sym__0__1320128295780785107, unsigned __sym__0__2135539952354114325, fluidb_string<7> __sym__0___45_6830125842744272420, unsigned __sym__0___45_5020623407933124585, unsigned __sym__0___45_8962814376456676996, unsigned __sym__0__5019961868919186100, unsigned __sym__0___45_8180140221931691230, unsigned __sym__0__2979990475865826501, fluidb_string<15> __sym__0___45_4191761148673979440, fluidb_string<2> __sym__0___45_8143900998679111208, fluidb_string<2> __sym__0___45_5541950931889709351, fluidb_string<2> __sym__0___45_7254164782870141487, fluidb_string<2> __sym__0___45_3874436537536480805, unsigned __sym__0___45_8275582659468271336, int __sym__0___45_3224762818476197406, unsigned __sym__0__7410215960226886634, unsigned __sym__0__6072573013358553356, unsigned __sym__0__5757413998707622851, unsigned __sym__0___45_6628624903649164786, fluidb_string<21> __sym__0___45_5377952756055292605, unsigned __sym__0___45_1295670533740904343, fluidb_string<10> __sym__0___45_6505957883478016406, unsigned __sym__0__1374144568006201850, double __sym__0___45_131117059595180776, unsigned __sym__0___45_4134532869995474450, double __sym__0___45_8149700325289937216, unsigned __sym__0___45_1179412386141176076, unsigned __sym__0__6002959861857395567, double __sym__0__3882569960217831373, fluidb_string<13> __sym__0___45_7886686824617619083) : sym__0__439931573365737364(__sym__0__439931573365737364), sym__0__6294037715632330660(__sym__0__6294037715632330660), sym__0___45_8293230386109188598(__sym__0___45_8293230386109188598), sym__0__2075854333476516773(__sym__0__2075854333476516773), sym__0__1320128295780785107(__sym__0__1320128295780785107), sym__0__2135539952354114325(__sym__0__2135539952354114325), sym__0___45_6830125842744272420(__sym__0___45_6830125842744272420), sym__0___45_5020623407933124585(__sym__0___45_5020623407933124585), sym__0___45_8962814376456676996(__sym__0___45_8962814376456676996), sym__0__5019961868919186100(__sym__0__5019961868919186100), sym__0___45_8180140221931691230(__sym__0___45_8180140221931691230), sym__0__2979990475865826501(__sym__0__2979990475865826501), sym__0___45_4191761148673979440(__sym__0___45_4191761148673979440), sym__0___45_8143900998679111208(__sym__0___45_8143900998679111208), sym__0___45_5541950931889709351(__sym__0___45_5541950931889709351), sym__0___45_7254164782870141487(__sym__0___45_7254164782870141487), sym__0___45_3874436537536480805(__sym__0___45_3874436537536480805), sym__0___45_8275582659468271336(__sym__0___45_8275582659468271336), sym__0___45_3224762818476197406(__sym__0___45_3224762818476197406), sym__0__7410215960226886634(__sym__0__7410215960226886634), sym__0__6072573013358553356(__sym__0__6072573013358553356), sym__0__5757413998707622851(__sym__0__5757413998707622851), sym__0___45_6628624903649164786(__sym__0___45_6628624903649164786), sym__0___45_5377952756055292605(__sym__0___45_5377952756055292605), sym__0___45_1295670533740904343(__sym__0___45_1295670533740904343), sym__0___45_6505957883478016406(__sym__0___45_6505957883478016406), sym__0__1374144568006201850(__sym__0__1374144568006201850), sym__0___45_131117059595180776(__sym__0___45_131117059595180776), sym__0___45_4134532869995474450(__sym__0___45_4134532869995474450), sym__0___45_8149700325289937216(__sym__0___45_8149700325289937216), sym__0___45_1179412386141176076(__sym__0___45_1179412386141176076), sym__0__6002959861857395567(__sym__0__6002959861857395567), sym__0__3882569960217831373(__sym__0__3882569960217831373), sym__0___45_7886686824617619083(__sym__0___45_7886686824617619083)
  {
  }
  Record2() 
  {
  }
  std::string show() const{
    std::stringstream o;
    o << sym__0__439931573365737364 << " | " << arrToString(sym__0__6294037715632330660) << " | " << arrToString(sym__0___45_8293230386109188598) << " | " << arrToString(sym__0__2075854333476516773) << " | " << sym__0__1320128295780785107 << " | " << sym__0__2135539952354114325 << " | " << arrToString(sym__0___45_6830125842744272420) << " | " << sym__0___45_5020623407933124585 << " | " << sym__0___45_8962814376456676996 << " | " << sym__0__5019961868919186100 << " | " << sym__0___45_8180140221931691230 << " | " << sym__0__2979990475865826501 << " | " << arrToString(sym__0___45_4191761148673979440) << " | " << arrToString(sym__0___45_8143900998679111208) << " | " << arrToString(sym__0___45_5541950931889709351) << " | " << arrToString(sym__0___45_7254164782870141487) << " | " << arrToString(sym__0___45_3874436537536480805) << " | " << sym__0___45_8275582659468271336 << " | " << sym__0___45_3224762818476197406 << " | " << sym__0__7410215960226886634 << " | " << sym__0__6072573013358553356 << " | " << sym__0__5757413998707622851 << " | " << sym__0___45_6628624903649164786 << " | " << arrToString(sym__0___45_5377952756055292605) << " | " << sym__0___45_1295670533740904343 << " | " << arrToString(sym__0___45_6505957883478016406) << " | " << sym__0__1374144568006201850 << " | " << sym__0___45_131117059595180776 << " | " << sym__0___45_4134532869995474450 << " | " << sym__0___45_8149700325289937216 << " | " << sym__0___45_1179412386141176076 << " | " << sym__0__6002959861857395567 << " | " << sym__0__3882569960217831373 << " | " << arrToString(sym__0___45_7886686824617619083);
    return o.str();
  }
  bool operator <(const Record2& otherRec) const{
    return (otherRec.sym__0__439931573365737364 < sym__0__439931573365737364 && (otherRec.sym__0__6294037715632330660 < sym__0__6294037715632330660 && (otherRec.sym__0___45_8293230386109188598 < sym__0___45_8293230386109188598 && (otherRec.sym__0__2075854333476516773 < sym__0__2075854333476516773 && (otherRec.sym__0__1320128295780785107 < sym__0__1320128295780785107 && (otherRec.sym__0__2135539952354114325 < sym__0__2135539952354114325 && (otherRec.sym__0___45_6830125842744272420 < sym__0___45_6830125842744272420 && (otherRec.sym__0___45_5020623407933124585 < sym__0___45_5020623407933124585 && (otherRec.sym__0___45_8962814376456676996 < sym__0___45_8962814376456676996 && (otherRec.sym__0__5019961868919186100 < sym__0__5019961868919186100 && (otherRec.sym__0___45_8180140221931691230 < sym__0___45_8180140221931691230 && (otherRec.sym__0__2979990475865826501 < sym__0__2979990475865826501 && (otherRec.sym__0___45_4191761148673979440 < sym__0___45_4191761148673979440 && (otherRec.sym__0___45_8143900998679111208 < sym__0___45_8143900998679111208 && (otherRec.sym__0___45_5541950931889709351 < sym__0___45_5541950931889709351 && (otherRec.sym__0___45_7254164782870141487 < sym__0___45_7254164782870141487 && (otherRec.sym__0___45_3874436537536480805 < sym__0___45_3874436537536480805 && (otherRec.sym__0___45_8275582659468271336 < sym__0___45_8275582659468271336 && (otherRec.sym__0___45_3224762818476197406 < sym__0___45_3224762818476197406 && (otherRec.sym__0__7410215960226886634 < sym__0__7410215960226886634 && (otherRec.sym__0__6072573013358553356 < sym__0__6072573013358553356 && (otherRec.sym__0__5757413998707622851 < sym__0__5757413998707622851 && (otherRec.sym__0___45_6628624903649164786 < sym__0___45_6628624903649164786 && (otherRec.sym__0___45_5377952756055292605 < sym__0___45_5377952756055292605 && (otherRec.sym__0___45_1295670533740904343 < sym__0___45_1295670533740904343 && (otherRec.sym__0___45_6505957883478016406 < sym__0___45_6505957883478016406 && (otherRec.sym__0__1374144568006201850 < sym__0__1374144568006201850 && (otherRec.sym__0___45_131117059595180776 < sym__0___45_131117059595180776 && (otherRec.sym__0___45_4134532869995474450 < sym__0___45_4134532869995474450 && (otherRec.sym__0___45_8149700325289937216 < sym__0___45_8149700325289937216 && (otherRec.sym__0___45_1179412386141176076 < sym__0___45_1179412386141176076 && (otherRec.sym__0__6002959861857395567 < sym__0__6002959861857395567 && (otherRec.sym__0__3882569960217831373 < sym__0__3882569960217831373 && otherRec.sym__0___45_7886686824617619083 < sym__0___45_7886686824617619083)))))))))))))))))))))))))))))))));
  }
  bool operator ==(const Record2& otherRec) const{
    return (otherRec.sym__0__439931573365737364 == sym__0__439931573365737364 && (otherRec.sym__0__6294037715632330660 == sym__0__6294037715632330660 && (otherRec.sym__0___45_8293230386109188598 == sym__0___45_8293230386109188598 && (otherRec.sym__0__2075854333476516773 == sym__0__2075854333476516773 && (otherRec.sym__0__1320128295780785107 == sym__0__1320128295780785107 && (otherRec.sym__0__2135539952354114325 == sym__0__2135539952354114325 && (otherRec.sym__0___45_6830125842744272420 == sym__0___45_6830125842744272420 && (otherRec.sym__0___45_5020623407933124585 == sym__0___45_5020623407933124585 && (otherRec.sym__0___45_8962814376456676996 == sym__0___45_8962814376456676996 && (otherRec.sym__0__5019961868919186100 == sym__0__5019961868919186100 && (otherRec.sym__0___45_8180140221931691230 == sym__0___45_8180140221931691230 && (otherRec.sym__0__2979990475865826501 == sym__0__2979990475865826501 && (otherRec.sym__0___45_4191761148673979440 == sym__0___45_4191761148673979440 && (otherRec.sym__0___45_8143900998679111208 == sym__0___45_8143900998679111208 && (otherRec.sym__0___45_5541950931889709351 == sym__0___45_5541950931889709351 && (otherRec.sym__0___45_7254164782870141487 == sym__0___45_7254164782870141487 && (otherRec.sym__0___45_3874436537536480805 == sym__0___45_3874436537536480805 && (otherRec.sym__0___45_8275582659468271336 == sym__0___45_8275582659468271336 && (otherRec.sym__0___45_3224762818476197406 == sym__0___45_3224762818476197406 && (otherRec.sym__0__7410215960226886634 == sym__0__7410215960226886634 && (otherRec.sym__0__6072573013358553356 == sym__0__6072573013358553356 && (otherRec.sym__0__5757413998707622851 == sym__0__5757413998707622851 && (otherRec.sym__0___45_6628624903649164786 == sym__0___45_6628624903649164786 && (otherRec.sym__0___45_5377952756055292605 == sym__0___45_5377952756055292605 && (otherRec.sym__0___45_1295670533740904343 == sym__0___45_1295670533740904343 && (otherRec.sym__0___45_6505957883478016406 == sym__0___45_6505957883478016406 && (otherRec.sym__0__1374144568006201850 == sym__0__1374144568006201850 && (otherRec.sym__0___45_131117059595180776 == sym__0___45_131117059595180776 && (otherRec.sym__0___45_4134532869995474450 == sym__0___45_4134532869995474450 && (otherRec.sym__0___45_8149700325289937216 == sym__0___45_8149700325289937216 && (otherRec.sym__0___45_1179412386141176076 == sym__0___45_1179412386141176076 && (otherRec.sym__0__6002959861857395567 == sym__0__6002959861857395567 && (otherRec.sym__0__3882569960217831373 == sym__0__3882569960217831373 && otherRec.sym__0___45_7886686824617619083 == sym__0___45_7886686824617619083)))))))))))))))))))))))))))))))));
  }
  bool operator !=(const Record2& otherRec) const{
    return (otherRec.sym__0__439931573365737364 != sym__0__439931573365737364 || (otherRec.sym__0__6294037715632330660 != sym__0__6294037715632330660 || (otherRec.sym__0___45_8293230386109188598 != sym__0___45_8293230386109188598 || (otherRec.sym__0__2075854333476516773 != sym__0__2075854333476516773 || (otherRec.sym__0__1320128295780785107 != sym__0__1320128295780785107 || (otherRec.sym__0__2135539952354114325 != sym__0__2135539952354114325 || (otherRec.sym__0___45_6830125842744272420 != sym__0___45_6830125842744272420 || (otherRec.sym__0___45_5020623407933124585 != sym__0___45_5020623407933124585 || (otherRec.sym__0___45_8962814376456676996 != sym__0___45_8962814376456676996 || (otherRec.sym__0__5019961868919186100 != sym__0__5019961868919186100 || (otherRec.sym__0___45_8180140221931691230 != sym__0___45_8180140221931691230 || (otherRec.sym__0__2979990475865826501 != sym__0__2979990475865826501 || (otherRec.sym__0___45_4191761148673979440 != sym__0___45_4191761148673979440 || (otherRec.sym__0___45_8143900998679111208 != sym__0___45_8143900998679111208 || (otherRec.sym__0___45_5541950931889709351 != sym__0___45_5541950931889709351 || (otherRec.sym__0___45_7254164782870141487 != sym__0___45_7254164782870141487 || (otherRec.sym__0___45_3874436537536480805 != sym__0___45_3874436537536480805 || (otherRec.sym__0___45_8275582659468271336 != sym__0___45_8275582659468271336 || (otherRec.sym__0___45_3224762818476197406 != sym__0___45_3224762818476197406 || (otherRec.sym__0__7410215960226886634 != sym__0__7410215960226886634 || (otherRec.sym__0__6072573013358553356 != sym__0__6072573013358553356 || (otherRec.sym__0__5757413998707622851 != sym__0__5757413998707622851 || (otherRec.sym__0___45_6628624903649164786 != sym__0___45_6628624903649164786 || (otherRec.sym__0___45_5377952756055292605 != sym__0___45_5377952756055292605 || (otherRec.sym__0___45_1295670533740904343 != sym__0___45_1295670533740904343 || (otherRec.sym__0___45_6505957883478016406 != sym__0___45_6505957883478016406 || (otherRec.sym__0__1374144568006201850 != sym__0__1374144568006201850 || (otherRec.sym__0___45_131117059595180776 != sym__0___45_131117059595180776 || (otherRec.sym__0___45_4134532869995474450 != sym__0___45_4134532869995474450 || (otherRec.sym__0___45_8149700325289937216 != sym__0___45_8149700325289937216 || (otherRec.sym__0___45_1179412386141176076 != sym__0___45_1179412386141176076 || (otherRec.sym__0__6002959861857395567 != sym__0__6002959861857395567 || (otherRec.sym__0__3882569960217831373 != sym__0__3882569960217831373 || otherRec.sym__0___45_7886686824617619083 != sym__0___45_7886686824617619083)))))))))))))))))))))))))))))))));
  }
  unsigned sym__0__439931573365737364;
  fluidb_string<18> sym__0__6294037715632330660;
  fluidb_string<9> sym__0___45_8293230386109188598;
  fluidb_string<9> sym__0__2075854333476516773;
  unsigned sym__0__1320128295780785107;
  unsigned sym__0__2135539952354114325;
  fluidb_string<7> sym__0___45_6830125842744272420;
  unsigned sym__0___45_5020623407933124585;
  unsigned sym__0___45_8962814376456676996;
  unsigned sym__0__5019961868919186100;
  unsigned sym__0___45_8180140221931691230;
  unsigned sym__0__2979990475865826501;
  fluidb_string<15> sym__0___45_4191761148673979440;
  fluidb_string<2> sym__0___45_8143900998679111208;
  fluidb_string<2> sym__0___45_5541950931889709351;
  fluidb_string<2> sym__0___45_7254164782870141487;
  fluidb_string<2> sym__0___45_3874436537536480805;
  unsigned sym__0___45_8275582659468271336;
  int sym__0___45_3224762818476197406;
  unsigned sym__0__7410215960226886634;
  unsigned sym__0__6072573013358553356;
  unsigned sym__0__5757413998707622851;
  unsigned sym__0___45_6628624903649164786;
  fluidb_string<21> sym__0___45_5377952756055292605;
  unsigned sym__0___45_1295670533740904343;
  fluidb_string<10> sym__0___45_6505957883478016406;
  unsigned sym__0__1374144568006201850;
  double sym__0___45_131117059595180776;
  unsigned sym__0___45_4134532869995474450;
  double sym__0___45_8149700325289937216;
  unsigned sym__0___45_1179412386141176076;
  unsigned sym__0__6002959861857395567;
  double sym__0__3882569960217831373;
  fluidb_string<13> sym__0___45_7886686824617619083;
 private:
};


class Record47 {
 public:
  Record47(fluidb_string<11> __sortElem0, fluidb_string<16> __sortElem1, unsigned __sortElem2) : sortElem0(__sortElem0), sortElem1(__sortElem1), sortElem2(__sortElem2)
  {
  }
  Record47() 
  {
  }
  std::string show() const{
    std::stringstream o;
    o << arrToString(sortElem0) << " | " << arrToString(sortElem1) << " | " << sortElem2;
    return o.str();
  }
  bool operator <(const Record47& otherRec) const{
    return (otherRec.sortElem0 < sortElem0 && (otherRec.sortElem1 < sortElem1 && otherRec.sortElem2 < sortElem2));
  }
  bool operator ==(const Record47& otherRec) const{
    return (otherRec.sortElem0 == sortElem0 && (otherRec.sortElem1 == sortElem1 && otherRec.sortElem2 == sortElem2));
  }
  bool operator !=(const Record47& otherRec) const{
    return (otherRec.sortElem0 != sortElem0 || (otherRec.sortElem1 != sortElem1 || otherRec.sortElem2 != sortElem2));
  }
  fluidb_string<11> sortElem0;
  fluidb_string<16> sortElem1;
  unsigned sortElem2;
 private:
};


class Record30 {
 public:
  Record30(unsigned __sym__0___45_9117911789383871612, fluidb_string<25> __sym__0___45_1547112764757372609, fluidb_string<40> __sym__0___45_8663957751614366179, fluidb_string<16> __sym__0__1466641425010216931, fluidb_string<16> __sym__0__3672857626658041553, fluidb_string<13> __sym__0___45_3362440237381592032, fluidb_string<15> __sym__0___45_6631364176934158657) : sym__0___45_9117911789383871612(__sym__0___45_9117911789383871612), sym__0___45_1547112764757372609(__sym__0___45_1547112764757372609), sym__0___45_8663957751614366179(__sym__0___45_8663957751614366179), sym__0__1466641425010216931(__sym__0__1466641425010216931), sym__0__3672857626658041553(__sym__0__3672857626658041553), sym__0___45_3362440237381592032(__sym__0___45_3362440237381592032), sym__0___45_6631364176934158657(__sym__0___45_6631364176934158657)
  {
  }
  Record30() 
  {
  }
  std::string show() const{
    std::stringstream o;
    o << sym__0___45_9117911789383871612 << " | " << arrToString(sym__0___45_1547112764757372609) << " | " << arrToString(sym__0___45_8663957751614366179) << " | " << arrToString(sym__0__1466641425010216931) << " | " << arrToString(sym__0__3672857626658041553) << " | " << arrToString(sym__0___45_3362440237381592032) << " | " << arrToString(sym__0___45_6631364176934158657);
    return o.str();
  }
  bool operator <(const Record30& otherRec) const{
    return (otherRec.sym__0___45_9117911789383871612 < sym__0___45_9117911789383871612 && (otherRec.sym__0___45_1547112764757372609 < sym__0___45_1547112764757372609 && (otherRec.sym__0___45_8663957751614366179 < sym__0___45_8663957751614366179 && (otherRec.sym__0__1466641425010216931 < sym__0__1466641425010216931 && (otherRec.sym__0__3672857626658041553 < sym__0__3672857626658041553 && (otherRec.sym__0___45_3362440237381592032 < sym__0___45_3362440237381592032 && otherRec.sym__0___45_6631364176934158657 < sym__0___45_6631364176934158657))))));
  }
  bool operator ==(const Record30& otherRec) const{
    return (otherRec.sym__0___45_9117911789383871612 == sym__0___45_9117911789383871612 && (otherRec.sym__0___45_1547112764757372609 == sym__0___45_1547112764757372609 && (otherRec.sym__0___45_8663957751614366179 == sym__0___45_8663957751614366179 && (otherRec.sym__0__1466641425010216931 == sym__0__1466641425010216931 && (otherRec.sym__0__3672857626658041553 == sym__0__3672857626658041553 && (otherRec.sym__0___45_3362440237381592032 == sym__0___45_3362440237381592032 && otherRec.sym__0___45_6631364176934158657 == sym__0___45_6631364176934158657))))));
  }
  bool operator !=(const Record30& otherRec) const{
    return (otherRec.sym__0___45_9117911789383871612 != sym__0___45_9117911789383871612 || (otherRec.sym__0___45_1547112764757372609 != sym__0___45_1547112764757372609 || (otherRec.sym__0___45_8663957751614366179 != sym__0___45_8663957751614366179 || (otherRec.sym__0__1466641425010216931 != sym__0__1466641425010216931 || (otherRec.sym__0__3672857626658041553 != sym__0__3672857626658041553 || (otherRec.sym__0___45_3362440237381592032 != sym__0___45_3362440237381592032 || otherRec.sym__0___45_6631364176934158657 != sym__0___45_6631364176934158657))))));
  }
  unsigned sym__0___45_9117911789383871612;
  fluidb_string<25> sym__0___45_1547112764757372609;
  fluidb_string<40> sym__0___45_8663957751614366179;
  fluidb_string<16> sym__0__1466641425010216931;
  fluidb_string<16> sym__0__3672857626658041553;
  fluidb_string<13> sym__0___45_3362440237381592032;
  fluidb_string<15> sym__0___45_6631364176934158657;
 private:
};


class Record31 {
 public:
  Record31(unsigned __sym__0___45_2120368702348209429, fluidb_string<18> __sym__0__4867076648717821139, fluidb_string<40> __sym__0___45_733736949021211923, fluidb_string<11> __sym__0__1815583963827296631, fluidb_string<15> __sym__0__888108744142857617, fluidb_string<13> __sym__0___45_1771218775817141584, fluidb_string<15> __sym__0___45_6416955440470757805, fluidb_string<21> __sym__0__845057033010294495, unsigned __sym__0___45_1384679615028480893, fluidb_string<18> __sym__0___45_5437956862707777389, fluidb_string<9> __sym__0___45_5151550182513225991, fluidb_string<9> __sym__0__599350586153128886, unsigned __sym__0__484811015661527108, unsigned __sym__0___45_5675715162576788698, fluidb_string<7> __sym__0___45_5950831478545900757, unsigned __sym__0___45_1418721528955251800, unsigned __sym__0___45_3198757623672062325, unsigned __sym__0___45_8798344628959971997, unsigned __sym__0___45_6915220896444050703, unsigned __sym__0__4147734225396280470, fluidb_string<15> __sym__0___45_5770694730219736097, fluidb_string<2> __sym__0__7530819402408696551, fluidb_string<2> __sym__0___45_8013664851664761078, fluidb_string<2> __sym__0___45_18124233904506078, fluidb_string<2> __sym__0___45_1261067721215660244, unsigned __sym__0___45_3833861200939852633, int __sym__0__2246842384106303793, unsigned __sym__0__749826821878986777, unsigned __sym__0__6590909340355877147, unsigned __sym__0___45_285336566880742796, unsigned __sym__0__7380595353392536989, fluidb_string<21> __sym__0__7084557227350103028, unsigned __sym__0___45_6827556213154895718, fluidb_string<10> __sym__0__4467478528923239065, unsigned __sym__0___45_522722932214735383, double __sym__0__5339965320838361255, unsigned __sym__0___45_9210515202179862339, double __sym__0__2254719390547038927, unsigned __sym__0___45_4681293236624581853, unsigned __sym__0__1639248385639046432, double __sym__0___45_535029071526315810, fluidb_string<13> __sym__0__8518167685756580550, unsigned __sym__0___45_941620177805773636, fluidb_string<25> __sym__0__652142508924982451, fluidb_string<40> __sym__0___45_286291152598484843, fluidb_string<16> __sym__0__5256076948986509959, fluidb_string<16> __sym__0___45_1305303727577279751, fluidb_string<13> __sym__0__1044686417502005960, fluidb_string<15> __sym__0__300313720052929331) : sym__0___45_2120368702348209429(__sym__0___45_2120368702348209429), sym__0__4867076648717821139(__sym__0__4867076648717821139), sym__0___45_733736949021211923(__sym__0___45_733736949021211923), sym__0__1815583963827296631(__sym__0__1815583963827296631), sym__0__888108744142857617(__sym__0__888108744142857617), sym__0___45_1771218775817141584(__sym__0___45_1771218775817141584), sym__0___45_6416955440470757805(__sym__0___45_6416955440470757805), sym__0__845057033010294495(__sym__0__845057033010294495), sym__0___45_1384679615028480893(__sym__0___45_1384679615028480893), sym__0___45_5437956862707777389(__sym__0___45_5437956862707777389), sym__0___45_5151550182513225991(__sym__0___45_5151550182513225991), sym__0__599350586153128886(__sym__0__599350586153128886), sym__0__484811015661527108(__sym__0__484811015661527108), sym__0___45_5675715162576788698(__sym__0___45_5675715162576788698), sym__0___45_5950831478545900757(__sym__0___45_5950831478545900757), sym__0___45_1418721528955251800(__sym__0___45_1418721528955251800), sym__0___45_3198757623672062325(__sym__0___45_3198757623672062325), sym__0___45_8798344628959971997(__sym__0___45_8798344628959971997), sym__0___45_6915220896444050703(__sym__0___45_6915220896444050703), sym__0__4147734225396280470(__sym__0__4147734225396280470), sym__0___45_5770694730219736097(__sym__0___45_5770694730219736097), sym__0__7530819402408696551(__sym__0__7530819402408696551), sym__0___45_8013664851664761078(__sym__0___45_8013664851664761078), sym__0___45_18124233904506078(__sym__0___45_18124233904506078), sym__0___45_1261067721215660244(__sym__0___45_1261067721215660244), sym__0___45_3833861200939852633(__sym__0___45_3833861200939852633), sym__0__2246842384106303793(__sym__0__2246842384106303793), sym__0__749826821878986777(__sym__0__749826821878986777), sym__0__6590909340355877147(__sym__0__6590909340355877147), sym__0___45_285336566880742796(__sym__0___45_285336566880742796), sym__0__7380595353392536989(__sym__0__7380595353392536989), sym__0__7084557227350103028(__sym__0__7084557227350103028), sym__0___45_6827556213154895718(__sym__0___45_6827556213154895718), sym__0__4467478528923239065(__sym__0__4467478528923239065), sym__0___45_522722932214735383(__sym__0___45_522722932214735383), sym__0__5339965320838361255(__sym__0__5339965320838361255), sym__0___45_9210515202179862339(__sym__0___45_9210515202179862339), sym__0__2254719390547038927(__sym__0__2254719390547038927), sym__0___45_4681293236624581853(__sym__0___45_4681293236624581853), sym__0__1639248385639046432(__sym__0__1639248385639046432), sym__0___45_535029071526315810(__sym__0___45_535029071526315810), sym__0__8518167685756580550(__sym__0__8518167685756580550), sym__0___45_941620177805773636(__sym__0___45_941620177805773636), sym__0__652142508924982451(__sym__0__652142508924982451), sym__0___45_286291152598484843(__sym__0___45_286291152598484843), sym__0__5256076948986509959(__sym__0__5256076948986509959), sym__0___45_1305303727577279751(__sym__0___45_1305303727577279751), sym__0__1044686417502005960(__sym__0__1044686417502005960), sym__0__300313720052929331(__sym__0__300313720052929331)
  {
  }
  Record31() 
  {
  }
  std::string show() const{
    std::stringstream o;
    o << sym__0___45_2120368702348209429 << " | " << arrToString(sym__0__4867076648717821139) << " | " << arrToString(sym__0___45_733736949021211923) << " | " << arrToString(sym__0__1815583963827296631) << " | " << arrToString(sym__0__888108744142857617) << " | " << arrToString(sym__0___45_1771218775817141584) << " | " << arrToString(sym__0___45_6416955440470757805) << " | " << arrToString(sym__0__845057033010294495) << " | " << sym__0___45_1384679615028480893 << " | " << arrToString(sym__0___45_5437956862707777389) << " | " << arrToString(sym__0___45_5151550182513225991) << " | " << arrToString(sym__0__599350586153128886) << " | " << sym__0__484811015661527108 << " | " << sym__0___45_5675715162576788698 << " | " << arrToString(sym__0___45_5950831478545900757) << " | " << sym__0___45_1418721528955251800 << " | " << sym__0___45_3198757623672062325 << " | " << sym__0___45_8798344628959971997 << " | " << sym__0___45_6915220896444050703 << " | " << sym__0__4147734225396280470 << " | " << arrToString(sym__0___45_5770694730219736097) << " | " << arrToString(sym__0__7530819402408696551) << " | " << arrToString(sym__0___45_8013664851664761078) << " | " << arrToString(sym__0___45_18124233904506078) << " | " << arrToString(sym__0___45_1261067721215660244) << " | " << sym__0___45_3833861200939852633 << " | " << sym__0__2246842384106303793 << " | " << sym__0__749826821878986777 << " | " << sym__0__6590909340355877147 << " | " << sym__0___45_285336566880742796 << " | " << sym__0__7380595353392536989 << " | " << arrToString(sym__0__7084557227350103028) << " | " << sym__0___45_6827556213154895718 << " | " << arrToString(sym__0__4467478528923239065) << " | " << sym__0___45_522722932214735383 << " | " << sym__0__5339965320838361255 << " | " << sym__0___45_9210515202179862339 << " | " << sym__0__2254719390547038927 << " | " << sym__0___45_4681293236624581853 << " | " << sym__0__1639248385639046432 << " | " << sym__0___45_535029071526315810 << " | " << arrToString(sym__0__8518167685756580550) << " | " << sym__0___45_941620177805773636 << " | " << arrToString(sym__0__652142508924982451) << " | " << arrToString(sym__0___45_286291152598484843) << " | " << arrToString(sym__0__5256076948986509959) << " | " << arrToString(sym__0___45_1305303727577279751) << " | " << arrToString(sym__0__1044686417502005960) << " | " << arrToString(sym__0__300313720052929331);
    return o.str();
  }
  bool operator <(const Record31& otherRec) const{
    return (otherRec.sym__0___45_2120368702348209429 < sym__0___45_2120368702348209429 && (otherRec.sym__0__4867076648717821139 < sym__0__4867076648717821139 && (otherRec.sym__0___45_733736949021211923 < sym__0___45_733736949021211923 && (otherRec.sym__0__1815583963827296631 < sym__0__1815583963827296631 && (otherRec.sym__0__888108744142857617 < sym__0__888108744142857617 && (otherRec.sym__0___45_1771218775817141584 < sym__0___45_1771218775817141584 && (otherRec.sym__0___45_6416955440470757805 < sym__0___45_6416955440470757805 && (otherRec.sym__0__845057033010294495 < sym__0__845057033010294495 && (otherRec.sym__0___45_1384679615028480893 < sym__0___45_1384679615028480893 && (otherRec.sym__0___45_5437956862707777389 < sym__0___45_5437956862707777389 && (otherRec.sym__0___45_5151550182513225991 < sym__0___45_5151550182513225991 && (otherRec.sym__0__599350586153128886 < sym__0__599350586153128886 && (otherRec.sym__0__484811015661527108 < sym__0__484811015661527108 && (otherRec.sym__0___45_5675715162576788698 < sym__0___45_5675715162576788698 && (otherRec.sym__0___45_5950831478545900757 < sym__0___45_5950831478545900757 && (otherRec.sym__0___45_1418721528955251800 < sym__0___45_1418721528955251800 && (otherRec.sym__0___45_3198757623672062325 < sym__0___45_3198757623672062325 && (otherRec.sym__0___45_8798344628959971997 < sym__0___45_8798344628959971997 && (otherRec.sym__0___45_6915220896444050703 < sym__0___45_6915220896444050703 && (otherRec.sym__0__4147734225396280470 < sym__0__4147734225396280470 && (otherRec.sym__0___45_5770694730219736097 < sym__0___45_5770694730219736097 && (otherRec.sym__0__7530819402408696551 < sym__0__7530819402408696551 && (otherRec.sym__0___45_8013664851664761078 < sym__0___45_8013664851664761078 && (otherRec.sym__0___45_18124233904506078 < sym__0___45_18124233904506078 && (otherRec.sym__0___45_1261067721215660244 < sym__0___45_1261067721215660244 && (otherRec.sym__0___45_3833861200939852633 < sym__0___45_3833861200939852633 && (otherRec.sym__0__2246842384106303793 < sym__0__2246842384106303793 && (otherRec.sym__0__749826821878986777 < sym__0__749826821878986777 && (otherRec.sym__0__6590909340355877147 < sym__0__6590909340355877147 && (otherRec.sym__0___45_285336566880742796 < sym__0___45_285336566880742796 && (otherRec.sym__0__7380595353392536989 < sym__0__7380595353392536989 && (otherRec.sym__0__7084557227350103028 < sym__0__7084557227350103028 && (otherRec.sym__0___45_6827556213154895718 < sym__0___45_6827556213154895718 && (otherRec.sym__0__4467478528923239065 < sym__0__4467478528923239065 && (otherRec.sym__0___45_522722932214735383 < sym__0___45_522722932214735383 && (otherRec.sym__0__5339965320838361255 < sym__0__5339965320838361255 && (otherRec.sym__0___45_9210515202179862339 < sym__0___45_9210515202179862339 && (otherRec.sym__0__2254719390547038927 < sym__0__2254719390547038927 && (otherRec.sym__0___45_4681293236624581853 < sym__0___45_4681293236624581853 && (otherRec.sym__0__1639248385639046432 < sym__0__1639248385639046432 && (otherRec.sym__0___45_535029071526315810 < sym__0___45_535029071526315810 && (otherRec.sym__0__8518167685756580550 < sym__0__8518167685756580550 && (otherRec.sym__0___45_941620177805773636 < sym__0___45_941620177805773636 && (otherRec.sym__0__652142508924982451 < sym__0__652142508924982451 && (otherRec.sym__0___45_286291152598484843 < sym__0___45_286291152598484843 && (otherRec.sym__0__5256076948986509959 < sym__0__5256076948986509959 && (otherRec.sym__0___45_1305303727577279751 < sym__0___45_1305303727577279751 && (otherRec.sym__0__1044686417502005960 < sym__0__1044686417502005960 && otherRec.sym__0__300313720052929331 < sym__0__300313720052929331))))))))))))))))))))))))))))))))))))))))))))))));
  }
  bool operator ==(const Record31& otherRec) const{
    return (otherRec.sym__0___45_2120368702348209429 == sym__0___45_2120368702348209429 && (otherRec.sym__0__4867076648717821139 == sym__0__4867076648717821139 && (otherRec.sym__0___45_733736949021211923 == sym__0___45_733736949021211923 && (otherRec.sym__0__1815583963827296631 == sym__0__1815583963827296631 && (otherRec.sym__0__888108744142857617 == sym__0__888108744142857617 && (otherRec.sym__0___45_1771218775817141584 == sym__0___45_1771218775817141584 && (otherRec.sym__0___45_6416955440470757805 == sym__0___45_6416955440470757805 && (otherRec.sym__0__845057033010294495 == sym__0__845057033010294495 && (otherRec.sym__0___45_1384679615028480893 == sym__0___45_1384679615028480893 && (otherRec.sym__0___45_5437956862707777389 == sym__0___45_5437956862707777389 && (otherRec.sym__0___45_5151550182513225991 == sym__0___45_5151550182513225991 && (otherRec.sym__0__599350586153128886 == sym__0__599350586153128886 && (otherRec.sym__0__484811015661527108 == sym__0__484811015661527108 && (otherRec.sym__0___45_5675715162576788698 == sym__0___45_5675715162576788698 && (otherRec.sym__0___45_5950831478545900757 == sym__0___45_5950831478545900757 && (otherRec.sym__0___45_1418721528955251800 == sym__0___45_1418721528955251800 && (otherRec.sym__0___45_3198757623672062325 == sym__0___45_3198757623672062325 && (otherRec.sym__0___45_8798344628959971997 == sym__0___45_8798344628959971997 && (otherRec.sym__0___45_6915220896444050703 == sym__0___45_6915220896444050703 && (otherRec.sym__0__4147734225396280470 == sym__0__4147734225396280470 && (otherRec.sym__0___45_5770694730219736097 == sym__0___45_5770694730219736097 && (otherRec.sym__0__7530819402408696551 == sym__0__7530819402408696551 && (otherRec.sym__0___45_8013664851664761078 == sym__0___45_8013664851664761078 && (otherRec.sym__0___45_18124233904506078 == sym__0___45_18124233904506078 && (otherRec.sym__0___45_1261067721215660244 == sym__0___45_1261067721215660244 && (otherRec.sym__0___45_3833861200939852633 == sym__0___45_3833861200939852633 && (otherRec.sym__0__2246842384106303793 == sym__0__2246842384106303793 && (otherRec.sym__0__749826821878986777 == sym__0__749826821878986777 && (otherRec.sym__0__6590909340355877147 == sym__0__6590909340355877147 && (otherRec.sym__0___45_285336566880742796 == sym__0___45_285336566880742796 && (otherRec.sym__0__7380595353392536989 == sym__0__7380595353392536989 && (otherRec.sym__0__7084557227350103028 == sym__0__7084557227350103028 && (otherRec.sym__0___45_6827556213154895718 == sym__0___45_6827556213154895718 && (otherRec.sym__0__4467478528923239065 == sym__0__4467478528923239065 && (otherRec.sym__0___45_522722932214735383 == sym__0___45_522722932214735383 && (otherRec.sym__0__5339965320838361255 == sym__0__5339965320838361255 && (otherRec.sym__0___45_9210515202179862339 == sym__0___45_9210515202179862339 && (otherRec.sym__0__2254719390547038927 == sym__0__2254719390547038927 && (otherRec.sym__0___45_4681293236624581853 == sym__0___45_4681293236624581853 && (otherRec.sym__0__1639248385639046432 == sym__0__1639248385639046432 && (otherRec.sym__0___45_535029071526315810 == sym__0___45_535029071526315810 && (otherRec.sym__0__8518167685756580550 == sym__0__8518167685756580550 && (otherRec.sym__0___45_941620177805773636 == sym__0___45_941620177805773636 && (otherRec.sym__0__652142508924982451 == sym__0__652142508924982451 && (otherRec.sym__0___45_286291152598484843 == sym__0___45_286291152598484843 && (otherRec.sym__0__5256076948986509959 == sym__0__5256076948986509959 && (otherRec.sym__0___45_1305303727577279751 == sym__0___45_1305303727577279751 && (otherRec.sym__0__1044686417502005960 == sym__0__1044686417502005960 && otherRec.sym__0__300313720052929331 == sym__0__300313720052929331))))))))))))))))))))))))))))))))))))))))))))))));
  }
  bool operator !=(const Record31& otherRec) const{
    return (otherRec.sym__0___45_2120368702348209429 != sym__0___45_2120368702348209429 || (otherRec.sym__0__4867076648717821139 != sym__0__4867076648717821139 || (otherRec.sym__0___45_733736949021211923 != sym__0___45_733736949021211923 || (otherRec.sym__0__1815583963827296631 != sym__0__1815583963827296631 || (otherRec.sym__0__888108744142857617 != sym__0__888108744142857617 || (otherRec.sym__0___45_1771218775817141584 != sym__0___45_1771218775817141584 || (otherRec.sym__0___45_6416955440470757805 != sym__0___45_6416955440470757805 || (otherRec.sym__0__845057033010294495 != sym__0__845057033010294495 || (otherRec.sym__0___45_1384679615028480893 != sym__0___45_1384679615028480893 || (otherRec.sym__0___45_5437956862707777389 != sym__0___45_5437956862707777389 || (otherRec.sym__0___45_5151550182513225991 != sym__0___45_5151550182513225991 || (otherRec.sym__0__599350586153128886 != sym__0__599350586153128886 || (otherRec.sym__0__484811015661527108 != sym__0__484811015661527108 || (otherRec.sym__0___45_5675715162576788698 != sym__0___45_5675715162576788698 || (otherRec.sym__0___45_5950831478545900757 != sym__0___45_5950831478545900757 || (otherRec.sym__0___45_1418721528955251800 != sym__0___45_1418721528955251800 || (otherRec.sym__0___45_3198757623672062325 != sym__0___45_3198757623672062325 || (otherRec.sym__0___45_8798344628959971997 != sym__0___45_8798344628959971997 || (otherRec.sym__0___45_6915220896444050703 != sym__0___45_6915220896444050703 || (otherRec.sym__0__4147734225396280470 != sym__0__4147734225396280470 || (otherRec.sym__0___45_5770694730219736097 != sym__0___45_5770694730219736097 || (otherRec.sym__0__7530819402408696551 != sym__0__7530819402408696551 || (otherRec.sym__0___45_8013664851664761078 != sym__0___45_8013664851664761078 || (otherRec.sym__0___45_18124233904506078 != sym__0___45_18124233904506078 || (otherRec.sym__0___45_1261067721215660244 != sym__0___45_1261067721215660244 || (otherRec.sym__0___45_3833861200939852633 != sym__0___45_3833861200939852633 || (otherRec.sym__0__2246842384106303793 != sym__0__2246842384106303793 || (otherRec.sym__0__749826821878986777 != sym__0__749826821878986777 || (otherRec.sym__0__6590909340355877147 != sym__0__6590909340355877147 || (otherRec.sym__0___45_285336566880742796 != sym__0___45_285336566880742796 || (otherRec.sym__0__7380595353392536989 != sym__0__7380595353392536989 || (otherRec.sym__0__7084557227350103028 != sym__0__7084557227350103028 || (otherRec.sym__0___45_6827556213154895718 != sym__0___45_6827556213154895718 || (otherRec.sym__0__4467478528923239065 != sym__0__4467478528923239065 || (otherRec.sym__0___45_522722932214735383 != sym__0___45_522722932214735383 || (otherRec.sym__0__5339965320838361255 != sym__0__5339965320838361255 || (otherRec.sym__0___45_9210515202179862339 != sym__0___45_9210515202179862339 || (otherRec.sym__0__2254719390547038927 != sym__0__2254719390547038927 || (otherRec.sym__0___45_4681293236624581853 != sym__0___45_4681293236624581853 || (otherRec.sym__0__1639248385639046432 != sym__0__1639248385639046432 || (otherRec.sym__0___45_535029071526315810 != sym__0___45_535029071526315810 || (otherRec.sym__0__8518167685756580550 != sym__0__8518167685756580550 || (otherRec.sym__0___45_941620177805773636 != sym__0___45_941620177805773636 || (otherRec.sym__0__652142508924982451 != sym__0__652142508924982451 || (otherRec.sym__0___45_286291152598484843 != sym__0___45_286291152598484843 || (otherRec.sym__0__5256076948986509959 != sym__0__5256076948986509959 || (otherRec.sym__0___45_1305303727577279751 != sym__0___45_1305303727577279751 || (otherRec.sym__0__1044686417502005960 != sym__0__1044686417502005960 || otherRec.sym__0__300313720052929331 != sym__0__300313720052929331))))))))))))))))))))))))))))))))))))))))))))))));
  }
  unsigned sym__0___45_2120368702348209429;
  fluidb_string<18> sym__0__4867076648717821139;
  fluidb_string<40> sym__0___45_733736949021211923;
  fluidb_string<11> sym__0__1815583963827296631;
  fluidb_string<15> sym__0__888108744142857617;
  fluidb_string<13> sym__0___45_1771218775817141584;
  fluidb_string<15> sym__0___45_6416955440470757805;
  fluidb_string<21> sym__0__845057033010294495;
  unsigned sym__0___45_1384679615028480893;
  fluidb_string<18> sym__0___45_5437956862707777389;
  fluidb_string<9> sym__0___45_5151550182513225991;
  fluidb_string<9> sym__0__599350586153128886;
  unsigned sym__0__484811015661527108;
  unsigned sym__0___45_5675715162576788698;
  fluidb_string<7> sym__0___45_5950831478545900757;
  unsigned sym__0___45_1418721528955251800;
  unsigned sym__0___45_3198757623672062325;
  unsigned sym__0___45_8798344628959971997;
  unsigned sym__0___45_6915220896444050703;
  unsigned sym__0__4147734225396280470;
  fluidb_string<15> sym__0___45_5770694730219736097;
  fluidb_string<2> sym__0__7530819402408696551;
  fluidb_string<2> sym__0___45_8013664851664761078;
  fluidb_string<2> sym__0___45_18124233904506078;
  fluidb_string<2> sym__0___45_1261067721215660244;
  unsigned sym__0___45_3833861200939852633;
  int sym__0__2246842384106303793;
  unsigned sym__0__749826821878986777;
  unsigned sym__0__6590909340355877147;
  unsigned sym__0___45_285336566880742796;
  unsigned sym__0__7380595353392536989;
  fluidb_string<21> sym__0__7084557227350103028;
  unsigned sym__0___45_6827556213154895718;
  fluidb_string<10> sym__0__4467478528923239065;
  unsigned sym__0___45_522722932214735383;
  double sym__0__5339965320838361255;
  unsigned sym__0___45_9210515202179862339;
  double sym__0__2254719390547038927;
  unsigned sym__0___45_4681293236624581853;
  unsigned sym__0__1639248385639046432;
  double sym__0___45_535029071526315810;
  fluidb_string<13> sym__0__8518167685756580550;
  unsigned sym__0___45_941620177805773636;
  fluidb_string<25> sym__0__652142508924982451;
  fluidb_string<40> sym__0___45_286291152598484843;
  fluidb_string<16> sym__0__5256076948986509959;
  fluidb_string<16> sym__0___45_1305303727577279751;
  fluidb_string<13> sym__0__1044686417502005960;
  fluidb_string<15> sym__0__300313720052929331;
 private:
};


class CallableClass15 {
 public:
  Record11 operator()(const Record4& record14) {
    return Record11(record14.sym__0___45_7332894783442362324);
  }
  typedef Record11 Codomain;
  typedef Record4 Domain0;
 private:
};


class CallableClass3 {
 public:
  Record1 operator()(const Record2& record0) {
    return Record1(record0.sym__0__439931573365737364, record0.sym__0__6294037715632330660, record0.sym__0___45_8293230386109188598, record0.sym__0__2075854333476516773, record0.sym__0__1320128295780785107, record0.sym__0__2135539952354114325, record0.sym__0___45_6830125842744272420, record0.sym__0___45_5020623407933124585, record0.sym__0___45_8962814376456676996, record0.sym__0__5019961868919186100, record0.sym__0___45_8180140221931691230, record0.sym__0__2979990475865826501, record0.sym__0___45_4191761148673979440, record0.sym__0___45_8143900998679111208, record0.sym__0___45_5541950931889709351, record0.sym__0___45_7254164782870141487, record0.sym__0___45_3874436537536480805);
  }
  typedef Record1 Codomain;
  typedef Record2 Domain0;
 private:
};


class CallableClass51 {
 public:
  Record50 operator()(const Record40& record49) {
    return Record50(record49.sym__0__9023619281214657635, (-(record49.sym__0__1560451866393647227)));
  }
  typedef Record50 Codomain;
  typedef Record40 Domain0;
 private:
};


class CallableClass48 {
 public:
  Record47 operator()(const Record42& record39) {
    return Record47(record39.sym__0___45_3956792959991438582, record39.sym__0__7388366118437445626, record39.sym__0__8142673845411997397);
  }
  typedef Record47 Codomain;
  typedef Record42 Domain0;
 private:
};


class CallableClass20 {
 public:
  Record19 operator()(const Record18& record16, const Record9& record17) {
    return Record19(record16.sym__0__59163526776084807, record16.sym__0___45_1313357857405786385, record16.sym__0__1337312907475566789, record16.sym__0__8014013609240026595, record16.sym__0___45_4888925151068446247, record16.sym__0__661408193145534136, record16.sym__0___45_7159405632382799505, record16.sym__0___45_7793359246716293237, record17.sym__0___45_3961143035674407474, record17.sym__0___45_6251899802584687138, record17.sym__0__7895704682370371792, record17.sym__0___45_4486276699369081973, record17.sym__0__1119005997298974989, record17.sym__0__3623076037790620667, record17.sym__0___45_369211045765545994, record17.sym__0___45_2252349090140989903, record17.sym__0___45_6519715028980934506, record17.sym__0__6988144115678218478, record17.sym__0__1168585672581702408, record17.sym__0___45_1566345155802505557, record17.sym__0___45_3812637469976556790, record17.sym__0___45_2398128448016703502, record17.sym__0__5574729781191990975, record17.sym__0___45_5962954882039921225, record17.sym__0___45_7276734914968453131, record17.sym__0__5341165382232817970, record17.sym__0__5806605655987033032, record17.sym__0___45_6623407408063066704, record17.sym__0___45_1670026162273154778, record17.sym__0__2289386367904588797, record17.sym__0__8025829587274267860, record17.sym__0__454237065112775549, record17.sym__0__608217599158647375, record17.sym__0__4347069016709593136, record17.sym__0__4553650632168714688, record17.sym__0__586349573025064242, record17.sym__0__144523031940788660, record17.sym__0__2942207309637238010, record17.sym__0__1782085603058736686, record17.sym__0__3001704397998344329, record17.sym__0___45_2662583778072919661, record17.sym__0__8853539013824041307);
  }
  typedef Record19 Codomain;
  typedef Record18 Domain0;
  typedef Record9 Domain1;
 private:
};


class CallableClass26 {
 public:
  bool operator()(const Record19& record25) {
    return (((record25.sym__0___45_6203473563316140867 >= 1992) && (record25.sym__0___45_6203473563316140867 <= 1997)) && (like(record25.sym__0___45_7504312298840290590, "UNITED KI1") || like(record25.sym__0___45_7504312298840290590, "UNITED KI5")));
  }
  typedef bool Codomain;
  typedef Record19 Domain0;
 private:
};


class CallableClass46 {
 public:
  Record40 operator()(const Record42& record39) {
    return Record40(vAggrFirst41(record39.sym__0___45_3956792959991438582), vAggrFirst43(record39.sym__0__7388366118437445626), vAggrFirst44(record39.sym__0__8142673845411997397), vAggrSum45(record39.sym__0___45_2888559707917916682));
  }
  typedef Record40 Codomain;
  typedef Record42 Domain0;
 private:
  AggrFirst<fluidb_string<11>> vAggrFirst41;
  AggrFirst<fluidb_string<16>> vAggrFirst43;
  AggrFirst<unsigned> vAggrFirst44;
  AggrSum<unsigned> vAggrSum45;
};


class CallableClass34 {
 public:
  Record11 operator()(const Record29& record33) {
    return Record11(record33.sym__0__5555983424822146930);
  }
  typedef Record11 Codomain;
  typedef Record29 Domain0;
 private:
};


class CallableClass24 {
 public:
  Record11 operator()(const Record9& record23) {
    return Record11(record23.sym__0___45_6623407408063066704);
  }
  typedef Record11 Codomain;
  typedef Record9 Domain0;
 private:
};


class CallableClass36 {
 public:
  Record11 operator()(const Record30& record35) {
    return Record11(record35.sym__0___45_9117911789383871612);
  }
  typedef Record11 Codomain;
  typedef Record30 Domain0;
 private:
};


class CallableClass5 {
 public:
  Record4 operator()(const Record2& record0) {
    return Record4(record0.sym__0___45_8275582659468271336, record0.sym__0___45_3224762818476197406, record0.sym__0__7410215960226886634, record0.sym__0__6072573013358553356, record0.sym__0__5757413998707622851, record0.sym__0___45_6628624903649164786, record0.sym__0___45_5377952756055292605, record0.sym__0___45_1295670533740904343, record0.sym__0___45_6505957883478016406, record0.sym__0__1374144568006201850, record0.sym__0___45_131117059595180776, record0.sym__0___45_4134532869995474450, record0.sym__0___45_8149700325289937216, record0.sym__0___45_1179412386141176076, record0.sym__0__6002959861857395567, record0.sym__0__3882569960217831373, record0.sym__0___45_7886686824617619083);
  }
  typedef Record4 Codomain;
  typedef Record2 Domain0;
 private:
};


class CallableClass13 {
 public:
  Record11 operator()(const Record8& record12) {
    return Record11(record12.sym__0__2037864888707786451);
  }
  typedef Record11 Codomain;
  typedef Record8 Domain0;
 private:
};


class CallableClass22 {
 public:
  Record11 operator()(const Record18& record21) {
    return Record11(record21.sym__0__59163526776084807);
  }
  typedef Record11 Codomain;
  typedef Record18 Domain0;
 private:
};


class CallableClass10 {
 public:
  Record9 operator()(const Record8& record6, const Record4& record7) {
    return Record9(record6.sym__0__2037864888707786451, record6.sym__0__8533656712666151747, record6.sym__0__646314041574508429, record6.sym__0__6064137978327902054, record6.sym__0__3754157776500852496, record6.sym__0__6284345160241949046, record6.sym__0___45_773692805971570325, record6.sym__0___45_8399474032083007524, record6.sym__0___45_2038947427357444789, record6.sym__0__6071994954612827827, record6.sym__0__7742515703067448213, record6.sym__0__5201219213304227654, record6.sym__0___45_5896625796158057241, record6.sym__0___45_1108504872221226081, record6.sym__0__1055103969674359346, record6.sym__0__9115626546918942554, record6.sym__0___45_6850413444013389848, record7.sym__0___45_7574074018531922998, record7.sym__0__1125464382786937920, record7.sym__0___45_8257174981563598792, record7.sym__0__957746932829998382, record7.sym__0__934137931677987637, record7.sym__0___45_7332894783442362324, record7.sym__0__8974811218372806325, record7.sym__0___45_5217562530132451785, record7.sym__0__7851147553396318904, record7.sym__0___45_4975505511391694456, record7.sym__0___45_7249986409969561654, record7.sym__0__4671626969570181580, record7.sym__0___45_3666121704283105054, record7.sym__0__5495011930072844518, record7.sym__0___45_4423447118092167055, record7.sym__0___45_1608082021099887893, record7.sym__0__1584187396639360899);
  }
  typedef Record9 Codomain;
  typedef Record8 Domain0;
  typedef Record4 Domain1;
 private:
};


class CallableClass32 {
 public:
  Record31 operator()(const Record29& record27, const Record30& record28) {
    return Record31(record27.sym__0__205054261601647225, record27.sym__0___45_4510297805584213935, record27.sym__0___45_9050143834324026753, record27.sym__0__8650771566522570685, record27.sym__0___45_1968670018137143333, record27.sym__0___45_4835327417429898074, record27.sym__0___45_95801764840957743, record27.sym__0___45_7623650011886303051, record27.sym__0__8165647617036477025, record27.sym__0__3515162074326147089, record27.sym__0__8302729007593069779, record27.sym__0__734114380452904784, record27.sym__0___45_3377147782956527134, record27.sym__0__4408520847355651616, record27.sym__0__8139831962268761273, record27.sym__0__9134129965139175950, record27.sym__0___45_6092511764822517223, record27.sym__0___45_191919823724386239, record27.sym__0__4620355860175509307, record27.sym__0___45_490273258710884560, record27.sym__0__1582161423196437429, record27.sym__0___45_7660645946606923571, record27.sym__0__5998191833527537420, record27.sym__0___45_2127034870857390668, record27.sym__0___45_1550881583354303942, record27.sym__0___45_8828138595599955059, record27.sym__0__1026410162225944443, record27.sym__0__6829258839574474483, record27.sym__0___45_6488088269583817527, record27.sym__0__5555983424822146930, record27.sym__0__2803835271247372623, record27.sym__0__2664784788779698674, record27.sym__0___45_8058844527623228164, record27.sym__0__185028401119941747, record27.sym__0__4453855063261132835, record27.sym__0__1766395004316766093, record27.sym__0__5411299423561699695, record27.sym__0___45_2262308129338709243, record27.sym__0__1921958949901956865, record27.sym__0___45_2902332582004936010, record27.sym__0__3298077875456952136, record27.sym__0___45_6746550276048127296, record28.sym__0___45_9117911789383871612, record28.sym__0___45_1547112764757372609, record28.sym__0___45_8663957751614366179, record28.sym__0__1466641425010216931, record28.sym__0__3672857626658041553, record28.sym__0___45_3362440237381592032, record28.sym__0___45_6631364176934158657);
  }
  typedef Record31 Codomain;
  typedef Record29 Domain0;
  typedef Record30 Domain1;
 private:
};


class CallableClass38 {
 public:
  bool operator()(const Record31& record37) {
    return (like(record37.sym__0__5256076948986509959, "UNITED KI1") || like(record37.sym__0__5256076948986509959, "UNITED KI5"));
  }
  typedef bool Codomain;
  typedef Record31 Domain0;
 private:
};






int main() {
  // Delete: (Q1 
  //   (QSort [E0 (ESym "d_year"),E1 ENeg (E0 (ESym "revenue"))]) 
  //   (Q1 
  //     (QGroup 
  //       [(ESym "c_city",E0 (NAggr AggrFirst (E0 (ESym "c_city")))),
  //        (ESym "s_city",E0 (NAggr AggrFirst (E0 (ESym "s_city")))),
  //        (ESym "d_year",E0 (NAggr AggrFirst (E0 (ESym "d_year")))),
  //        (ESym "revenue",E0 (NAggr AggrSum (E0 (ESym "lo_revenue"))))] 
  //       [E0 (ESym "c_city"),E0 (ESym "s_city"),E0 (ESym "d_year")]) 
  //     (S 
  //       (P2 
  //         PAnd 
  //         (P2 
  //           PAnd 
  //           (P2 
  //             PAnd 
  //             (P0 
  //               (R2 RLike 
  //                   (R0 (E0 (ESym "c_nation"))) 
  //                   (R0 (E0 (EString "UNITED STATES"))))) 
  //             (P0 
  //               (R2 RGe (R0 (E0 (ESym "d_year"))) (R0 (E0 (EInt 1992)))))) 
  //           (P0 (R2 RLe (R0 (E0 (ESym "d_year"))) (R0 (E0 (EInt 1997)))))) 
  //         (P0 
  //           (R2 RLike 
  //               (R0 (E0 (ESym "s_nation"))) 
  //               (R0 (E0 (EString "UNITED STATES")))))) 
  //       (J 
  //         (P0 
  //           (R2 REq 
  //               (R0 (E0 (ESym "lo_suppkey"))) 
  //               (R0 (E0 (ESym "s_suppkey"))))) 
  //         (J 
  //           (P0 
  //             (R2 REq 
  //                 (R0 (E0 (ESym "lo_custkey"))) 
  //                 (R0 (E0 (ESym "c_custkey"))))) 
  //           (Q0 (TSymbol "customer")) 
  //           (J 
  //             (P0 
  //               (R2 REq 
  //                   (R0 (E0 (ESym "lo_orderdate"))) 
  //                   (R0 (E0 (ESym "d_datekey"))))) 
  //             (Q0 (TSymbol "date")) 
  //             (Q0 (TSymbol "lineorder")))) 
  std::cout << "Delete: N209" << std::endl;
  deleteFile("/tmp/fluidb_store/data209.dat");
  // Delete: (Q1 
  //   (QGroup 
  //     [(ESym "c_city",E0 (NAggr AggrFirst (E0 (ESym "c_city")))),
  //      (ESym "s_city",E0 (NAggr AggrFirst (E0 (ESym "s_city")))),
  //      (ESym "d_year",E0 (NAggr AggrFirst (E0 (ESym "d_year")))),
  //      (ESym "revenue",E0 (NAggr AggrSum (E0 (ESym "lo_revenue"))))] 
  //     [E0 (ESym "c_city"),E0 (ESym "s_city"),E0 (ESym "d_year")]) 
  //   (S 
  //     (P2 
  //       PAnd 
  //       (P2 
  //         PAnd 
  //         (P2 
  //           PAnd 
  //           (P0 
  //             (R2 RLike 
  //                 (R0 (E0 (ESym "c_nation"))) 
  //                 (R0 (E0 (EString "UNITED STATES"))))) 
  //           (P0 (R2 RGe (R0 (E0 (ESym "d_year"))) (R0 (E0 (EInt 1992)))))) 
  //         (P0 (R2 RLe (R0 (E0 (ESym "d_year"))) (R0 (E0 (EInt 1997)))))) 
  //       (P0 
  //         (R2 RLike 
  //             (R0 (E0 (ESym "s_nation"))) 
  //             (R0 (E0 (EString "UNITED STATES")))))) 
  //     (J 
  //       (P0 
  //         (R2 REq 
  //             (R0 (E0 (ESym "lo_suppkey"))) 
  //             (R0 (E0 (ESym "s_suppkey"))))) 
  //       (J 
  //         (P0 
  //           (R2 REq 
  //               (R0 (E0 (ESym "lo_custkey"))) 
  //               (R0 (E0 (ESym "c_custkey"))))) 
  //         (Q0 (TSymbol "customer")) 
  //         (J 
  //           (P0 
  //             (R2 REq 
  //                 (R0 (E0 (ESym "lo_orderdate"))) 
  //                 (R0 (E0 (ESym "d_datekey"))))) 
  //           (Q0 (TSymbol "date")) 
  //           (Q0 (TSymbol "lineorder")))) 
  std::cout << "Delete: N208" << std::endl;
  deleteFile("/tmp/fluidb_store/data208.dat");
  // Delete: (Q2 
  //   (QLeftAntijoin 
  //     (P0 
  //       (R2 REq 
  //           (R0 (E0 (ESym "lo_suppkey"))) 
  //           (R0 (E0 (ESym "s_suppkey")))))) 
  //   (S 
  //     (P0 
  //       (R2 RLike 
  //           (R0 (E0 (ESym "c_nation"))) 
  //           (R0 (E0 (EString "UNITED STATES"))))) 
  //     (J 
  //       (P0 
  //         (R2 REq 
  //             (R0 (E0 (ESym "lo_custkey"))) 
  //             (R0 (E0 (ESym "c_custkey"))))) 
  //       (Q0 (TSymbol "customer")) 
  //       (S 
  //         (P2 PAnd 
  //             (P0 (R2 RGe (R0 (E0 (ESym "d_year"))) (R0 (E0 (EInt 1992))))) 
  //             (P0 (R2 RLe (R0 (E0 (ESym "d_year"))) (R0 (E0 (EInt 1997)))))) 
  //         (J 
  //           (P0 
  //             (R2 REq 
  //                 (R0 (E0 (ESym "lo_orderdate"))) 
  //                 (R0 (E0 (ESym "d_datekey"))))) 
  //           (Q0 (TSymbol "date")) 
  //           (Q0 (TSymbol "lineorder")))))) 
  std::cout << "Delete: N200" << std::endl;
  deleteFile("/tmp/fluidb_store/data200.dat");
  // Delete: (Q2 
  //   (QRightAntijoin 
  //     (P0 
  //       (R2 REq 
  //           (R0 (E0 (ESym "lo_suppkey"))) 
  //           (R0 (E0 (ESym "s_suppkey")))))) 
  //   (S 
  //     (P0 
  //       (R2 RLike 
  //           (R0 (E0 (ESym "c_nation"))) 
  //           (R0 (E0 (EString "UNITED STATES"))))) 
  //     (J 
  //       (P0 
  //         (R2 REq 
  //             (R0 (E0 (ESym "lo_custkey"))) 
  //             (R0 (E0 (ESym "c_custkey"))))) 
  //       (Q0 (TSymbol "customer")) 
  //       (S 
  //         (P2 PAnd 
  //             (P0 (R2 RGe (R0 (E0 (ESym "d_year"))) (R0 (E0 (EInt 1992))))) 
  //             (P0 (R2 RLe (R0 (E0 (ESym "d_year"))) (R0 (E0 (EInt 1997)))))) 
  //         (J 
  //           (P0 
  //             (R2 REq 
  //                 (R0 (E0 (ESym "lo_orderdate"))) 
  //                 (R0 (E0 (ESym "d_datekey"))))) 
  //           (Q0 (TSymbol "date")) 
  //           (Q0 (TSymbol "lineorder")))))) 
  std::cout << "Delete: N202" << std::endl;
  deleteFile("/tmp/fluidb_store/data202.dat");
  // Delete: (S 
  //   (P1 
  //     PNot 
  //     (P0 
  //       (R2 RLike 
  //           (R0 (E0 (ESym "s_nation"))) 
  //           (R0 (E0 (EString "UNITED STATES")))))) 
  //   (J 
  //     (P0 
  //       (R2 REq 
  //           (R0 (E0 (ESym "lo_suppkey"))) 
  //           (R0 (E0 (ESym "s_suppkey"))))) 
  //     (S 
  //       (P2 
  //         PAnd 
  //         (P2 PAnd 
  //             (P0 (R2 RGe (R0 (E0 (ESym "d_year"))) (R0 (E0 (EInt 1992))))) 
  //             (P0 (R2 RLe (R0 (E0 (ESym "d_year"))) (R0 (E0 (EInt 1997)))))) 
  //         (P0 
  //           (R2 RLike 
  //               (R0 (E0 (ESym "c_nation"))) 
  //               (R0 (E0 (EString "UNITED STATES")))))) 
  //       (J 
  //         (P0 
  //           (R2 REq 
  //               (R0 (E0 (ESym "lo_custkey"))) 
  //               (R0 (E0 (ESym "c_custkey"))))) 
  //         (Q0 (TSymbol "customer")) 
  //         (J 
  //           (P0 
  //             (R2 REq 
  //                 (R0 (E0 (ESym "lo_orderdate"))) 
  //                 (R0 (E0 (ESym "d_datekey"))))) 
  //           (Q0 (TSymbol "date")) 
  //           (Q0 (TSymbol "lineorder"))))) 
  std::cout << "Delete: N205" << std::endl;
  deleteFile("/tmp/fluidb_store/data205.dat");
  // ReverseTrigger: (Just 
  //   (Left 
  //     [
  //      QJoin 
  //         (P0 
  //           (R2 REq 
  //               (R0 (E0 (ESym "lo_orderdate"))) 
  //               (R0 (E0 (ESym "d_datekey")))))
  std::cout << "ReverseTrigger: (Just \n  (Left \n    [\n     QJoin \n        (P0 \n          (R2 REq \n              (R0 (E0 (ESym \"lo_orderdate\"))) \n              (R0 (E0 (ESym \"d_datekey\")))))\n    ]))" << std::endl;
  {
    auto operation = mkUnJoin<CallableClass3, CallableClass5>(Just("/tmp/fluidb_store/data157.dat"), Nothing(), Just("/tmp/fluidb_store/data162.dat"), Nothing(), Just("/tmp/fluidb_store/data0.dat"));
    operation.run();
    operation.print_output(10);
  }
  // Delete: (S 
  //   (P2 
  //     PAnd 
  //     (P2 PAnd 
  //         (P0 (R2 RGe (R0 (E0 (ESym "d_year"))) (R0 (E0 (EInt 1992))))) 
  //         (P0 (R2 RLe (R0 (E0 (ESym "d_year"))) (R0 (E0 (EInt 1997)))))) 
  //     (P0 
  //       (R2 RLike 
  //           (R0 (E0 (ESym "c_nation"))) 
  //           (R0 (E0 (EString "UNITED STATES")))))) 
  //   (J 
  //     (P0 
  //       (R2 REq 
  //           (R0 (E0 (ESym "lo_custkey"))) 
  //           (R0 (E0 (ESym "c_custkey"))))) 
  //     (Q0 (TSymbol "customer")) 
  //     (J 
  //       (P0 
  //         (R2 REq 
  //             (R0 (E0 (ESym "lo_orderdate"))) 
  //             (R0 (E0 (ESym "d_datekey"))))) 
  //       (Q0 (TSymbol "date")) 
  std::cout << "Delete: N197" << std::endl;
  deleteFile("/tmp/fluidb_store/data197.dat");
  // Delete: (S 
  //   (P1 
  //     PNot 
  //     (P0 
  //       (R2 RLike 
  //           (R0 (E0 (ESym "c_nation"))) 
  //           (R0 (E0 (EString "UNITED STATES")))))) 
  //   (J 
  //     (P0 
  //       (R2 REq 
  //           (R0 (E0 (ESym "lo_custkey"))) 
  //           (R0 (E0 (ESym "c_custkey"))))) 
  //     (Q0 (TSymbol "customer")) 
  //     (S 
  //       (P2 PAnd 
  //           (P0 (R2 RGe (R0 (E0 (ESym "d_year"))) (R0 (E0 (EInt 1992))))) 
  //           (P0 (R2 RLe (R0 (E0 (ESym "d_year"))) (R0 (E0 (EInt 1997)))))) 
  //       (J 
  //         (P0 
  //           (R2 REq 
  //               (R0 (E0 (ESym "lo_orderdate"))) 
  //               (R0 (E0 (ESym "d_datekey"))))) 
  //         (Q0 (TSymbol "date")) 
  std::cout << "Delete: N199" << std::endl;
  deleteFile("/tmp/fluidb_store/data199.dat");
  // ForwardTrigger: (Just 
  //   (Left 
  //     [
  //      QJoin 
  //         (P0 
  //           (R2 REq 
  //               (R0 (E0 (ESym "lo_orderdate"))) 
  //               (R0 (E0 (ESym "d_datekey")))))
  std::cout << "ForwardTrigger: (Just \n  (Left \n    [\n     QJoin \n        (P0 \n          (R2 REq \n              (R0 (E0 (ESym \"lo_orderdate\"))) \n              (R0 (E0 (ESym \"d_datekey\")))))\n    ]))" << std::endl;
  {
    auto operation = mkEquiJoin<CallableClass13, CallableClass15, CallableClass10>(Just<const std::string>("/tmp/fluidb_store/data139.dat"), Just<const std::string>("/tmp/fluidb_store/data138.dat"), Just<const std::string>("/tmp/fluidb_store/data140.dat"), "/tmp/fluidb_store/data1.dat", "/tmp/fluidb_store/data0.dat");
    operation.run();
    operation.print_output(10);
  }
  // Delete: (J 
  //   (P0 
  //     (R2 REq (R0 (E0 (ESym "lo_suppkey"))) (R0 (E0 (ESym "s_suppkey"))))) 
  //   (S 
  //     (P0 
  //       (R2 RLike (R0 (E0 (ESym "c_region"))) (R0 (E0 (EString "ASIA"))))) 
  //     (J 
  //       (P0 
  //         (R2 REq 
  //             (R0 (E0 (ESym "lo_custkey"))) 
  //             (R0 (E0 (ESym "c_custkey"))))) 
  //       (Q0 (TSymbol "customer")) 
  //       (S 
  //         (P2 PAnd 
  //             (P0 (R2 RGe (R0 (E0 (ESym "d_year"))) (R0 (E0 (EInt 1992))))) 
  //             (P0 (R2 RLe (R0 (E0 (ESym "d_year"))) (R0 (E0 (EInt 1997)))))) 
  //         (J 
  //           (P0 
  //             (R2 REq 
  //                 (R0 (E0 (ESym "lo_orderdate"))) 
  //                 (R0 (E0 (ESym "d_datekey"))))) 
  //           (Q0 (TSymbol "date")) 
  //           (Q0 (TSymbol "lineorder")))))) 
  std::cout << "Delete: N172" << std::endl;
  deleteFile("/tmp/fluidb_store/data172.dat");
  // Delete: (J 
  //   (P0 
  //     (R2 REq (R0 (E0 (ESym "lo_suppkey"))) (R0 (E0 (ESym "s_suppkey"))))) 
  //   (S 
  //     (P0 
  //       (R2 RLike 
  //           (R0 (E0 (ESym "c_nation"))) 
  //           (R0 (E0 (EString "UNITED STATES"))))) 
  //     (J 
  //       (P0 
  //         (R2 REq 
  //             (R0 (E0 (ESym "lo_custkey"))) 
  //             (R0 (E0 (ESym "c_custkey"))))) 
  //       (Q0 (TSymbol "customer")) 
  //       (S 
  //         (P2 PAnd 
  //             (P0 (R2 RGe (R0 (E0 (ESym "d_year"))) (R0 (E0 (EInt 1992))))) 
  //             (P0 (R2 RLe (R0 (E0 (ESym "d_year"))) (R0 (E0 (EInt 1997)))))) 
  //         (J 
  //           (P0 
  //             (R2 REq 
  //                 (R0 (E0 (ESym "lo_orderdate"))) 
  //                 (R0 (E0 (ESym "d_datekey"))))) 
  //           (Q0 (TSymbol "date")) 
  //           (Q0 (TSymbol "lineorder")))))) 
  std::cout << "Delete: N201" << std::endl;
  deleteFile("/tmp/fluidb_store/data201.dat");
  // ForwardTrigger: (Just 
  //   (Left 
  //     [
  //      QJoin 
  //         (P0 
  //           (R2 REq 
  //               (R0 (E0 (ESym "lo_custkey"))) 
  //               (R0 (E0 (ESym "c_custkey")))))
  std::cout << "ForwardTrigger: (Just \n  (Left \n    [\n     QJoin \n        (P0 \n          (R2 REq \n              (R0 (E0 (ESym \"lo_custkey\"))) \n              (R0 (E0 (ESym \"c_custkey\")))))\n    ]))" << std::endl;
  {
    auto operation = mkEquiJoin<CallableClass22, CallableClass24, CallableClass20>(Just<const std::string>("/tmp/fluidb_store/data144.dat"), Just<const std::string>("/tmp/fluidb_store/data143.dat"), Just<const std::string>("/tmp/fluidb_store/data145.dat"), "/tmp/fluidb_store/data4.dat", "/tmp/fluidb_store/data139.dat");
    operation.run();
    operation.print_output(10);
  }
  // Delete: (S 
  //   (P2 
  //     PAnd 
  //     (P2 
  //       PAnd 
  //       (P2 
  //         PAnd 
  //         (P0 
  //           (R2 RLike 
  //               (R0 (E0 (ESym "c_nation"))) 
  //               (R0 (E0 (EString "UNITED STATES"))))) 
  //         (P0 (R2 RGe (R0 (E0 (ESym "d_year"))) (R0 (E0 (EInt 1992)))))) 
  //       (P0 (R2 RLe (R0 (E0 (ESym "d_year"))) (R0 (E0 (EInt 1997)))))) 
  //     (P0 
  //       (R2 RLike 
  //           (R0 (E0 (ESym "s_nation"))) 
  //           (R0 (E0 (EString "UNITED STATES")))))) 
  //   (J 
  //     (P0 
  //       (R2 REq 
  //           (R0 (E0 (ESym "lo_suppkey"))) 
  //           (R0 (E0 (ESym "s_suppkey"))))) 
  //     (J 
  //       (P0 
  //         (R2 REq 
  //             (R0 (E0 (ESym "lo_custkey"))) 
  //             (R0 (E0 (ESym "c_custkey"))))) 
  //       (Q0 (TSymbol "customer")) 
  //       (J 
  //         (P0 
  //           (R2 REq 
  //               (R0 (E0 (ESym "lo_orderdate"))) 
  //               (R0 (E0 (ESym "d_datekey"))))) 
  //         (Q0 (TSymbol "date")) 
  //         (Q0 (TSymbol "lineorder")))) 
  std::cout << "Delete: N195" << std::endl;
  deleteFile("/tmp/fluidb_store/data195.dat");
  // ForwardTrigger: (Just 
  //   (Right 
  //     [
  //      QSel 
  //         (P2 
  //           PAnd 
  //           (P2 
  //             PAnd 
  //             (P0 
  //               (R2 RGe (R0 (E0 (ESym "d_year"))) (R0 (E0 (EInt 1992))))) 
  //             (P0 
  //               (R2 RLe (R0 (E0 (ESym "d_year"))) (R0 (E0 (EInt 1997)))))) 
  //           (P2 
  //             POr 
  //             (P0 
  //               (R2 RLike 
  //                   (R0 (E0 (ESym "c_city"))) 
  //                   (R0 (E0 (EString "UNITED KI1"))))) 
  //             (P0 
  //               (R2 RLike 
  //                   (R0 (E0 (ESym "c_city"))) 
  //                   (R0 (E0 (EString "UNITED KI5")))))))
  std::cout << "ForwardTrigger: (Just \n  (Right \n    [\n     QSel \n        (P2 \n          PAnd \n          (P2 \n            PAnd \n            (P0 \n              (R2 RGe (R0 (E0 (ESym \"d_year\"))) (R0 (E0 (EInt 1992))))) \n            (P0 \n              (R2 RLe (R0 (E0 (ESym \"d_year\"))) (R0 (E0 (EInt 1997)))))) \n          (P2 \n            POr \n            (P0 \n              (R2 RLike \n                  (R0 (E0 (ESym \"c_city\"))) \n                  (R0 (E0 (EString \"UNITED KI1\"))))) \n            (P0 \n              (R2 RLike \n                  (R0 (E0 (ESym \"c_city\"))) \n                  (R0 (E0 (EString \"UNITED KI5\")))))))\n    ]))" << std::endl;
  {
    auto operation = mkSelect<CallableClass26>(Just<const std::string>("/tmp/fluidb_store/data212.dat"), Just<const std::string>("/tmp/fluidb_store/data213.dat"), "/tmp/fluidb_store/data144.dat");
    operation.run();
    operation.print_output(10);
  }
  // Delete: (Q2 
  //   (QLeftAntijoin 
  //     (P0 
  //       (R2 REq 
  //           (R0 (E0 (ESym "lo_orderdate"))) 
  //           (R0 (E0 (ESym "d_datekey")))))) 
  //   (Q0 (TSymbol "date")) 
  std::cout << "Delete: N138" << std::endl;
  deleteFile("/tmp/fluidb_store/data138.dat");
  // Delete: (Q2 
  //   (QRightAntijoin 
  //     (P0 
  //       (R2 REq 
  //           (R0 (E0 (ESym "lo_orderdate"))) 
  //           (R0 (E0 (ESym "d_datekey")))))) 
  //   (Q0 (TSymbol "date")) 
  std::cout << "Delete: N140" << std::endl;
  deleteFile("/tmp/fluidb_store/data140.dat");
  // Delete: (Q2 
  //   (QRightAntijoin 
  //     (P0 
  //       (R2 REq 
  //           (R0 (E0 (ESym "lo_orderdate"))) 
  //           (R0 (E0 (ESym "d_datekey")))))) 
  //   (S 
  //     (P2 PAnd 
  //         (P0 (R2 RGe (R0 (E0 (ESym "d_year"))) (R0 (E0 (EInt 1992))))) 
  //         (P0 (R2 RLe (R0 (E0 (ESym "d_year"))) (R0 (E0 (EInt 1997)))))) 
  //     (Q0 (TSymbol "date"))) 
  std::cout << "Delete: N162" << std::endl;
  deleteFile("/tmp/fluidb_store/data162.dat");
  // Delete: (Q2 
  //   (QLeftAntijoin 
  //     (P0 
  //       (R2 REq 
  //           (R0 (E0 (ESym "lo_custkey"))) 
  //           (R0 (E0 (ESym "c_custkey")))))) 
  //   (Q0 (TSymbol "customer")) 
  //   (J 
  //     (P0 
  //       (R2 REq 
  //           (R0 (E0 (ESym "lo_orderdate"))) 
  //           (R0 (E0 (ESym "d_datekey"))))) 
  //     (Q0 (TSymbol "date")) 
  std::cout << "Delete: N143" << std::endl;
  deleteFile("/tmp/fluidb_store/data143.dat");
  // Delete: (Q2 
  //   (QRightAntijoin 
  //     (P0 
  //       (R2 REq 
  //           (R0 (E0 (ESym "lo_custkey"))) 
  //           (R0 (E0 (ESym "c_custkey")))))) 
  //   (Q0 (TSymbol "customer")) 
  //   (J 
  //     (P0 
  //       (R2 REq 
  //           (R0 (E0 (ESym "lo_orderdate"))) 
  //           (R0 (E0 (ESym "d_datekey"))))) 
  //     (Q0 (TSymbol "date")) 
  std::cout << "Delete: N145" << std::endl;
  deleteFile("/tmp/fluidb_store/data145.dat");
  // Delete: (S 
  //   (P1 
  //     PNot 
  //     (P2 
  //       PAnd 
  //       (P2 PAnd 
  //           (P0 (R2 RGe (R0 (E0 (ESym "d_year"))) (R0 (E0 (EInt 1992))))) 
  //           (P0 (R2 RLe (R0 (E0 (ESym "d_year"))) (R0 (E0 (EInt 1997)))))) 
  //       (P2 
  //         POr 
  //         (P0 
  //           (R2 RLike 
  //               (R0 (E0 (ESym "c_city"))) 
  //               (R0 (E0 (EString "UNITED KI1"))))) 
  //         (P0 
  //           (R2 RLike 
  //               (R0 (E0 (ESym "c_city"))) 
  //               (R0 (E0 (EString "UNITED KI5")))))))) 
  //   (J 
  //     (P0 
  //       (R2 REq 
  //           (R0 (E0 (ESym "lo_custkey"))) 
  //           (R0 (E0 (ESym "c_custkey"))))) 
  //     (Q0 (TSymbol "customer")) 
  //     (J 
  //       (P0 
  //         (R2 REq 
  //             (R0 (E0 (ESym "lo_orderdate"))) 
  //             (R0 (E0 (ESym "d_datekey"))))) 
  //       (Q0 (TSymbol "date")) 
  std::cout << "Delete: N213" << std::endl;
  deleteFile("/tmp/fluidb_store/data213.dat");
  // Delete: (J 
  //   (P0 
  //     (R2 REq (R0 (E0 (ESym "lo_custkey"))) (R0 (E0 (ESym "c_custkey"))))) 
  //   (Q0 (TSymbol "customer")) 
  //   (J 
  //     (P0 
  //       (R2 REq 
  //           (R0 (E0 (ESym "lo_orderdate"))) 
  //           (R0 (E0 (ESym "d_datekey"))))) 
  //     (Q0 (TSymbol "date")) 
  std::cout << "Delete: N144" << std::endl;
  deleteFile("/tmp/fluidb_store/data144.dat");
  // ForwardTrigger: (Just 
  //   (Left 
  //     [
  //      QJoin 
  //         (P0 
  //           (R2 REq 
  //               (R0 (E0 (ESym "lo_suppkey"))) 
  //               (R0 (E0 (ESym "s_suppkey")))))
  std::cout << "ForwardTrigger: (Just \n  (Left \n    [\n     QJoin \n        (P0 \n          (R2 REq \n              (R0 (E0 (ESym \"lo_suppkey\"))) \n              (R0 (E0 (ESym \"s_suppkey\")))))\n    ]))" << std::endl;
  {
    auto operation = mkEquiJoin<CallableClass34, CallableClass36, CallableClass32>(Just<const std::string>("/tmp/fluidb_store/data216.dat"), Just<const std::string>("/tmp/fluidb_store/data215.dat"), Just<const std::string>("/tmp/fluidb_store/data217.dat"), "/tmp/fluidb_store/data212.dat", "/tmp/fluidb_store/data3.dat");
    operation.run();
    operation.print_output(10);
  }
  // ForwardTrigger: (Just 
  //   (Right 
  //     [
  //      QSel 
  //         (P2 
  //           POr 
  //           (P0 
  //             (R2 RLike 
  //                 (R0 (E0 (ESym "s_city"))) 
  //                 (R0 (E0 (EString "UNITED KI1"))))) 
  //           (P0 
  //             (R2 RLike 
  //                 (R0 (E0 (ESym "s_city"))) 
  //                 (R0 (E0 (EString "UNITED KI5"))))))
  std::cout << "ForwardTrigger: (Just \n  (Right \n    [\n     QSel \n        (P2 \n          POr \n          (P0 \n            (R2 RLike \n                (R0 (E0 (ESym \"s_city\"))) \n                (R0 (E0 (EString \"UNITED KI1\"))))) \n          (P0 \n            (R2 RLike \n                (R0 (E0 (ESym \"s_city\"))) \n                (R0 (E0 (EString \"UNITED KI5\"))))))\n    ]))" << std::endl;
  {
    auto operation = mkSelect<CallableClass38>(Just<const std::string>("/tmp/fluidb_store/data210.dat"), Just<const std::string>("/tmp/fluidb_store/data220.dat"), "/tmp/fluidb_store/data216.dat");
    operation.run();
    operation.print_output(10);
  }
  // ForwardTrigger: (Just 
  //   (Right 
  //     [
  //      QGroup 
  //         [(ESym "c_city",E0 (NAggr AggrFirst (E0 (ESym "c_city")))),
  //          (ESym "s_city",E0 (NAggr AggrFirst (E0 (ESym "s_city")))),
  //          (ESym "d_year",E0 (NAggr AggrFirst (E0 (ESym "d_year")))),
  //          (ESym "revenue",E0 (NAggr AggrSum (E0 (ESym "lo_revenue"))))] 
  //         [E0 (ESym "c_city"),E0 (ESym "s_city"),E0 (ESym "d_year")]
  std::cout << "ForwardTrigger: (Just \n  (Right \n    [\n     QGroup \n        [(ESym \"c_city\",E0 (NAggr AggrFirst (E0 (ESym \"c_city\")))),\n         (ESym \"s_city\",E0 (NAggr AggrFirst (E0 (ESym \"s_city\")))),\n         (ESym \"d_year\",E0 (NAggr AggrFirst (E0 (ESym \"d_year\")))),\n         (ESym \"revenue\",E0 (NAggr AggrSum (E0 (ESym \"lo_revenue\"))))] \n        [E0 (ESym \"c_city\"),E0 (ESym \"s_city\"),E0 (ESym \"d_year\")]\n    ]))" << std::endl;
  {
    auto operation = mkAggregation<CallableClass46, CallableClass48>(Just<const std::string>("/tmp/fluidb_store/data223.dat"), Just<const std::string>("/tmp/fluidb_store/data210.dat"), "/tmp/fluidb_store/data210.dat");
    operation.run();
    operation.print_output(10);
  }
  // ForwardTrigger: (Just 
  std::cout << "ForwardTrigger: (Just \n  (Right [QSort [E0 (ESym \"d_year\"),E1 ENeg (E0 (ESym \"revenue\"))]]))" << std::endl;
  {
    auto operation = mkSort<CallableClass51>(Just<const std::string>("/tmp/fluidb_store/data224.dat"), Just<const std::string>("/tmp/fluidb_store/data223.dat"), "/tmp/fluidb_store/data223.dat");
    operation.run();
    operation.print_output(10);
  }
  report_counters();
  return 0;
}
