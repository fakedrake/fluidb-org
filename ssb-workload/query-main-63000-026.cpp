#include <array>

#include <string>

#include <codegen.hh>
class Record8 {
 public:
  Record8(unsigned __sortElem0, fluidb_string<16> __sortElem1, fluidb_string<10> __sortElem2) : sortElem0(__sortElem0), sortElem1(__sortElem1), sortElem2(__sortElem2)
  {
  }
  Record8() 
  {
  }
  std::string show() const{
    std::stringstream o;
    o << sortElem0 << " | " << arrToString(sortElem1) << " | " << arrToString(sortElem2);
    return o.str();
  }
  bool operator <(const Record8& otherRec) const{
    return (otherRec.sortElem0 < sortElem0 && (otherRec.sortElem1 < sortElem1 && otherRec.sortElem2 < sortElem2));
  }
  bool operator ==(const Record8& otherRec) const{
    return (otherRec.sortElem0 == sortElem0 && (otherRec.sortElem1 == sortElem1 && otherRec.sortElem2 == sortElem2));
  }
  bool operator !=(const Record8& otherRec) const{
    return (otherRec.sortElem0 != sortElem0 || (otherRec.sortElem1 != sortElem1 || otherRec.sortElem2 != sortElem2));
  }
  unsigned sortElem0;
  fluidb_string<16> sortElem1;
  fluidb_string<10> sortElem2;
 private:
};


class Record3 {
 public:
  Record3(unsigned __sym__0__1547076744925930880, fluidb_string<18> __sym__0__3079651708208385520, fluidb_string<9> __sym__0__722488589300315522, fluidb_string<9> __sym__0__5728736137952035521, unsigned __sym__0__1016643266231007683, unsigned __sym__0__7488963553490858577, fluidb_string<7> __sym__0___45_5912777685800611816, unsigned __sym__0__5163174048669277343, unsigned __sym__0__1804747360158272504, unsigned __sym__0___45_8585488438570493216, unsigned __sym__0___45_5255213217507996278, unsigned __sym__0__922056654626502433, fluidb_string<15> __sym__0__8167091386086901924, fluidb_string<2> __sym__0___45_6557548601784909220, fluidb_string<2> __sym__0__3982600392097801133, fluidb_string<2> __sym__0___45_2639369843693128107, fluidb_string<2> __sym__0___45_2892948589959819237, unsigned __sym__0___45_3083177374599918180, int __sym__0___45_4767370105190669238, unsigned __sym__0__7622263690412824738, unsigned __sym__0__51540186613445224, unsigned __sym__0__5816250341010414547, unsigned __sym__0___45_4395275123805465570, fluidb_string<21> __sym__0___45_7314445511356925101, unsigned __sym__0__1160535804228364061, fluidb_string<10> __sym__0___45_658439635996140254, unsigned __sym__0__5408690261773440146, double __sym__0__4735189913708153244, unsigned __sym__0___45_8984691491589025986, double __sym__0__4667820012727147444, unsigned __sym__0__2342925512217931808, unsigned __sym__0__1214124832604663335, double __sym__0__3255112656206796761, fluidb_string<13> __sym__0__4481647413238555121, unsigned __sym__0___45_8432259835637048949, fluidb_string<25> __sym__0__4548729478722910608, fluidb_string<40> __sym__0___45_121547008029878490, fluidb_string<16> __sym__0__3269568155542253564, fluidb_string<16> __sym__0__3982220672063046018, fluidb_string<13> __sym__0__4693536182358499263, fluidb_string<15> __sym__0__2984872593914002448, unsigned __sym__0__6297984954898127448, fluidb_string<18> __sym__0___45_2539705795808102992, fluidb_string<40> __sym__0__4925130884886294926, fluidb_string<11> __sym__0___45_6056498752508205364, fluidb_string<15> __sym__0___45_5529708794626966486, fluidb_string<13> __sym__0___45_4737680138599499881, fluidb_string<15> __sym__0__6984993766776696624, fluidb_string<21> __sym__0___45_8393949379764847708, unsigned __sym__0__4462919605968504146, fluidb_string<55> __sym__0__6874577426955441634, fluidb_string<25> __sym__0___45_1088065985843605459, fluidb_string<7> __sym__0__228349805477520123, fluidb_string<10> __sym__0___45_3813708782342371331, fluidb_string<11> __sym__0__2924304181004936681, fluidb_string<25> __sym__0___45_812065277175253313, unsigned __sym__0___45_879260575341141708, fluidb_string<10> __sym__0___45_5047397743832953891) : sym__0__1547076744925930880(__sym__0__1547076744925930880), sym__0__3079651708208385520(__sym__0__3079651708208385520), sym__0__722488589300315522(__sym__0__722488589300315522), sym__0__5728736137952035521(__sym__0__5728736137952035521), sym__0__1016643266231007683(__sym__0__1016643266231007683), sym__0__7488963553490858577(__sym__0__7488963553490858577), sym__0___45_5912777685800611816(__sym__0___45_5912777685800611816), sym__0__5163174048669277343(__sym__0__5163174048669277343), sym__0__1804747360158272504(__sym__0__1804747360158272504), sym__0___45_8585488438570493216(__sym__0___45_8585488438570493216), sym__0___45_5255213217507996278(__sym__0___45_5255213217507996278), sym__0__922056654626502433(__sym__0__922056654626502433), sym__0__8167091386086901924(__sym__0__8167091386086901924), sym__0___45_6557548601784909220(__sym__0___45_6557548601784909220), sym__0__3982600392097801133(__sym__0__3982600392097801133), sym__0___45_2639369843693128107(__sym__0___45_2639369843693128107), sym__0___45_2892948589959819237(__sym__0___45_2892948589959819237), sym__0___45_3083177374599918180(__sym__0___45_3083177374599918180), sym__0___45_4767370105190669238(__sym__0___45_4767370105190669238), sym__0__7622263690412824738(__sym__0__7622263690412824738), sym__0__51540186613445224(__sym__0__51540186613445224), sym__0__5816250341010414547(__sym__0__5816250341010414547), sym__0___45_4395275123805465570(__sym__0___45_4395275123805465570), sym__0___45_7314445511356925101(__sym__0___45_7314445511356925101), sym__0__1160535804228364061(__sym__0__1160535804228364061), sym__0___45_658439635996140254(__sym__0___45_658439635996140254), sym__0__5408690261773440146(__sym__0__5408690261773440146), sym__0__4735189913708153244(__sym__0__4735189913708153244), sym__0___45_8984691491589025986(__sym__0___45_8984691491589025986), sym__0__4667820012727147444(__sym__0__4667820012727147444), sym__0__2342925512217931808(__sym__0__2342925512217931808), sym__0__1214124832604663335(__sym__0__1214124832604663335), sym__0__3255112656206796761(__sym__0__3255112656206796761), sym__0__4481647413238555121(__sym__0__4481647413238555121), sym__0___45_8432259835637048949(__sym__0___45_8432259835637048949), sym__0__4548729478722910608(__sym__0__4548729478722910608), sym__0___45_121547008029878490(__sym__0___45_121547008029878490), sym__0__3269568155542253564(__sym__0__3269568155542253564), sym__0__3982220672063046018(__sym__0__3982220672063046018), sym__0__4693536182358499263(__sym__0__4693536182358499263), sym__0__2984872593914002448(__sym__0__2984872593914002448), sym__0__6297984954898127448(__sym__0__6297984954898127448), sym__0___45_2539705795808102992(__sym__0___45_2539705795808102992), sym__0__4925130884886294926(__sym__0__4925130884886294926), sym__0___45_6056498752508205364(__sym__0___45_6056498752508205364), sym__0___45_5529708794626966486(__sym__0___45_5529708794626966486), sym__0___45_4737680138599499881(__sym__0___45_4737680138599499881), sym__0__6984993766776696624(__sym__0__6984993766776696624), sym__0___45_8393949379764847708(__sym__0___45_8393949379764847708), sym__0__4462919605968504146(__sym__0__4462919605968504146), sym__0__6874577426955441634(__sym__0__6874577426955441634), sym__0___45_1088065985843605459(__sym__0___45_1088065985843605459), sym__0__228349805477520123(__sym__0__228349805477520123), sym__0___45_3813708782342371331(__sym__0___45_3813708782342371331), sym__0__2924304181004936681(__sym__0__2924304181004936681), sym__0___45_812065277175253313(__sym__0___45_812065277175253313), sym__0___45_879260575341141708(__sym__0___45_879260575341141708), sym__0___45_5047397743832953891(__sym__0___45_5047397743832953891)
  {
  }
  Record3() 
  {
  }
  std::string show() const{
    std::stringstream o;
    o << sym__0__1547076744925930880 << " | " << arrToString(sym__0__3079651708208385520) << " | " << arrToString(sym__0__722488589300315522) << " | " << arrToString(sym__0__5728736137952035521) << " | " << sym__0__1016643266231007683 << " | " << sym__0__7488963553490858577 << " | " << arrToString(sym__0___45_5912777685800611816) << " | " << sym__0__5163174048669277343 << " | " << sym__0__1804747360158272504 << " | " << sym__0___45_8585488438570493216 << " | " << sym__0___45_5255213217507996278 << " | " << sym__0__922056654626502433 << " | " << arrToString(sym__0__8167091386086901924) << " | " << arrToString(sym__0___45_6557548601784909220) << " | " << arrToString(sym__0__3982600392097801133) << " | " << arrToString(sym__0___45_2639369843693128107) << " | " << arrToString(sym__0___45_2892948589959819237) << " | " << sym__0___45_3083177374599918180 << " | " << sym__0___45_4767370105190669238 << " | " << sym__0__7622263690412824738 << " | " << sym__0__51540186613445224 << " | " << sym__0__5816250341010414547 << " | " << sym__0___45_4395275123805465570 << " | " << arrToString(sym__0___45_7314445511356925101) << " | " << sym__0__1160535804228364061 << " | " << arrToString(sym__0___45_658439635996140254) << " | " << sym__0__5408690261773440146 << " | " << sym__0__4735189913708153244 << " | " << sym__0___45_8984691491589025986 << " | " << sym__0__4667820012727147444 << " | " << sym__0__2342925512217931808 << " | " << sym__0__1214124832604663335 << " | " << sym__0__3255112656206796761 << " | " << arrToString(sym__0__4481647413238555121) << " | " << sym__0___45_8432259835637048949 << " | " << arrToString(sym__0__4548729478722910608) << " | " << arrToString(sym__0___45_121547008029878490) << " | " << arrToString(sym__0__3269568155542253564) << " | " << arrToString(sym__0__3982220672063046018) << " | " << arrToString(sym__0__4693536182358499263) << " | " << arrToString(sym__0__2984872593914002448) << " | " << sym__0__6297984954898127448 << " | " << arrToString(sym__0___45_2539705795808102992) << " | " << arrToString(sym__0__4925130884886294926) << " | " << arrToString(sym__0___45_6056498752508205364) << " | " << arrToString(sym__0___45_5529708794626966486) << " | " << arrToString(sym__0___45_4737680138599499881) << " | " << arrToString(sym__0__6984993766776696624) << " | " << arrToString(sym__0___45_8393949379764847708) << " | " << sym__0__4462919605968504146 << " | " << arrToString(sym__0__6874577426955441634) << " | " << arrToString(sym__0___45_1088065985843605459) << " | " << arrToString(sym__0__228349805477520123) << " | " << arrToString(sym__0___45_3813708782342371331) << " | " << arrToString(sym__0__2924304181004936681) << " | " << arrToString(sym__0___45_812065277175253313) << " | " << sym__0___45_879260575341141708 << " | " << arrToString(sym__0___45_5047397743832953891);
    return o.str();
  }
  bool operator <(const Record3& otherRec) const{
    return (otherRec.sym__0__1547076744925930880 < sym__0__1547076744925930880 && (otherRec.sym__0__3079651708208385520 < sym__0__3079651708208385520 && (otherRec.sym__0__722488589300315522 < sym__0__722488589300315522 && (otherRec.sym__0__5728736137952035521 < sym__0__5728736137952035521 && (otherRec.sym__0__1016643266231007683 < sym__0__1016643266231007683 && (otherRec.sym__0__7488963553490858577 < sym__0__7488963553490858577 && (otherRec.sym__0___45_5912777685800611816 < sym__0___45_5912777685800611816 && (otherRec.sym__0__5163174048669277343 < sym__0__5163174048669277343 && (otherRec.sym__0__1804747360158272504 < sym__0__1804747360158272504 && (otherRec.sym__0___45_8585488438570493216 < sym__0___45_8585488438570493216 && (otherRec.sym__0___45_5255213217507996278 < sym__0___45_5255213217507996278 && (otherRec.sym__0__922056654626502433 < sym__0__922056654626502433 && (otherRec.sym__0__8167091386086901924 < sym__0__8167091386086901924 && (otherRec.sym__0___45_6557548601784909220 < sym__0___45_6557548601784909220 && (otherRec.sym__0__3982600392097801133 < sym__0__3982600392097801133 && (otherRec.sym__0___45_2639369843693128107 < sym__0___45_2639369843693128107 && (otherRec.sym__0___45_2892948589959819237 < sym__0___45_2892948589959819237 && (otherRec.sym__0___45_3083177374599918180 < sym__0___45_3083177374599918180 && (otherRec.sym__0___45_4767370105190669238 < sym__0___45_4767370105190669238 && (otherRec.sym__0__7622263690412824738 < sym__0__7622263690412824738 && (otherRec.sym__0__51540186613445224 < sym__0__51540186613445224 && (otherRec.sym__0__5816250341010414547 < sym__0__5816250341010414547 && (otherRec.sym__0___45_4395275123805465570 < sym__0___45_4395275123805465570 && (otherRec.sym__0___45_7314445511356925101 < sym__0___45_7314445511356925101 && (otherRec.sym__0__1160535804228364061 < sym__0__1160535804228364061 && (otherRec.sym__0___45_658439635996140254 < sym__0___45_658439635996140254 && (otherRec.sym__0__5408690261773440146 < sym__0__5408690261773440146 && (otherRec.sym__0__4735189913708153244 < sym__0__4735189913708153244 && (otherRec.sym__0___45_8984691491589025986 < sym__0___45_8984691491589025986 && (otherRec.sym__0__4667820012727147444 < sym__0__4667820012727147444 && (otherRec.sym__0__2342925512217931808 < sym__0__2342925512217931808 && (otherRec.sym__0__1214124832604663335 < sym__0__1214124832604663335 && (otherRec.sym__0__3255112656206796761 < sym__0__3255112656206796761 && (otherRec.sym__0__4481647413238555121 < sym__0__4481647413238555121 && (otherRec.sym__0___45_8432259835637048949 < sym__0___45_8432259835637048949 && (otherRec.sym__0__4548729478722910608 < sym__0__4548729478722910608 && (otherRec.sym__0___45_121547008029878490 < sym__0___45_121547008029878490 && (otherRec.sym__0__3269568155542253564 < sym__0__3269568155542253564 && (otherRec.sym__0__3982220672063046018 < sym__0__3982220672063046018 && (otherRec.sym__0__4693536182358499263 < sym__0__4693536182358499263 && (otherRec.sym__0__2984872593914002448 < sym__0__2984872593914002448 && (otherRec.sym__0__6297984954898127448 < sym__0__6297984954898127448 && (otherRec.sym__0___45_2539705795808102992 < sym__0___45_2539705795808102992 && (otherRec.sym__0__4925130884886294926 < sym__0__4925130884886294926 && (otherRec.sym__0___45_6056498752508205364 < sym__0___45_6056498752508205364 && (otherRec.sym__0___45_5529708794626966486 < sym__0___45_5529708794626966486 && (otherRec.sym__0___45_4737680138599499881 < sym__0___45_4737680138599499881 && (otherRec.sym__0__6984993766776696624 < sym__0__6984993766776696624 && (otherRec.sym__0___45_8393949379764847708 < sym__0___45_8393949379764847708 && (otherRec.sym__0__4462919605968504146 < sym__0__4462919605968504146 && (otherRec.sym__0__6874577426955441634 < sym__0__6874577426955441634 && (otherRec.sym__0___45_1088065985843605459 < sym__0___45_1088065985843605459 && (otherRec.sym__0__228349805477520123 < sym__0__228349805477520123 && (otherRec.sym__0___45_3813708782342371331 < sym__0___45_3813708782342371331 && (otherRec.sym__0__2924304181004936681 < sym__0__2924304181004936681 && (otherRec.sym__0___45_812065277175253313 < sym__0___45_812065277175253313 && (otherRec.sym__0___45_879260575341141708 < sym__0___45_879260575341141708 && otherRec.sym__0___45_5047397743832953891 < sym__0___45_5047397743832953891)))))))))))))))))))))))))))))))))))))))))))))))))))))))));
  }
  bool operator ==(const Record3& otherRec) const{
    return (otherRec.sym__0__1547076744925930880 == sym__0__1547076744925930880 && (otherRec.sym__0__3079651708208385520 == sym__0__3079651708208385520 && (otherRec.sym__0__722488589300315522 == sym__0__722488589300315522 && (otherRec.sym__0__5728736137952035521 == sym__0__5728736137952035521 && (otherRec.sym__0__1016643266231007683 == sym__0__1016643266231007683 && (otherRec.sym__0__7488963553490858577 == sym__0__7488963553490858577 && (otherRec.sym__0___45_5912777685800611816 == sym__0___45_5912777685800611816 && (otherRec.sym__0__5163174048669277343 == sym__0__5163174048669277343 && (otherRec.sym__0__1804747360158272504 == sym__0__1804747360158272504 && (otherRec.sym__0___45_8585488438570493216 == sym__0___45_8585488438570493216 && (otherRec.sym__0___45_5255213217507996278 == sym__0___45_5255213217507996278 && (otherRec.sym__0__922056654626502433 == sym__0__922056654626502433 && (otherRec.sym__0__8167091386086901924 == sym__0__8167091386086901924 && (otherRec.sym__0___45_6557548601784909220 == sym__0___45_6557548601784909220 && (otherRec.sym__0__3982600392097801133 == sym__0__3982600392097801133 && (otherRec.sym__0___45_2639369843693128107 == sym__0___45_2639369843693128107 && (otherRec.sym__0___45_2892948589959819237 == sym__0___45_2892948589959819237 && (otherRec.sym__0___45_3083177374599918180 == sym__0___45_3083177374599918180 && (otherRec.sym__0___45_4767370105190669238 == sym__0___45_4767370105190669238 && (otherRec.sym__0__7622263690412824738 == sym__0__7622263690412824738 && (otherRec.sym__0__51540186613445224 == sym__0__51540186613445224 && (otherRec.sym__0__5816250341010414547 == sym__0__5816250341010414547 && (otherRec.sym__0___45_4395275123805465570 == sym__0___45_4395275123805465570 && (otherRec.sym__0___45_7314445511356925101 == sym__0___45_7314445511356925101 && (otherRec.sym__0__1160535804228364061 == sym__0__1160535804228364061 && (otherRec.sym__0___45_658439635996140254 == sym__0___45_658439635996140254 && (otherRec.sym__0__5408690261773440146 == sym__0__5408690261773440146 && (otherRec.sym__0__4735189913708153244 == sym__0__4735189913708153244 && (otherRec.sym__0___45_8984691491589025986 == sym__0___45_8984691491589025986 && (otherRec.sym__0__4667820012727147444 == sym__0__4667820012727147444 && (otherRec.sym__0__2342925512217931808 == sym__0__2342925512217931808 && (otherRec.sym__0__1214124832604663335 == sym__0__1214124832604663335 && (otherRec.sym__0__3255112656206796761 == sym__0__3255112656206796761 && (otherRec.sym__0__4481647413238555121 == sym__0__4481647413238555121 && (otherRec.sym__0___45_8432259835637048949 == sym__0___45_8432259835637048949 && (otherRec.sym__0__4548729478722910608 == sym__0__4548729478722910608 && (otherRec.sym__0___45_121547008029878490 == sym__0___45_121547008029878490 && (otherRec.sym__0__3269568155542253564 == sym__0__3269568155542253564 && (otherRec.sym__0__3982220672063046018 == sym__0__3982220672063046018 && (otherRec.sym__0__4693536182358499263 == sym__0__4693536182358499263 && (otherRec.sym__0__2984872593914002448 == sym__0__2984872593914002448 && (otherRec.sym__0__6297984954898127448 == sym__0__6297984954898127448 && (otherRec.sym__0___45_2539705795808102992 == sym__0___45_2539705795808102992 && (otherRec.sym__0__4925130884886294926 == sym__0__4925130884886294926 && (otherRec.sym__0___45_6056498752508205364 == sym__0___45_6056498752508205364 && (otherRec.sym__0___45_5529708794626966486 == sym__0___45_5529708794626966486 && (otherRec.sym__0___45_4737680138599499881 == sym__0___45_4737680138599499881 && (otherRec.sym__0__6984993766776696624 == sym__0__6984993766776696624 && (otherRec.sym__0___45_8393949379764847708 == sym__0___45_8393949379764847708 && (otherRec.sym__0__4462919605968504146 == sym__0__4462919605968504146 && (otherRec.sym__0__6874577426955441634 == sym__0__6874577426955441634 && (otherRec.sym__0___45_1088065985843605459 == sym__0___45_1088065985843605459 && (otherRec.sym__0__228349805477520123 == sym__0__228349805477520123 && (otherRec.sym__0___45_3813708782342371331 == sym__0___45_3813708782342371331 && (otherRec.sym__0__2924304181004936681 == sym__0__2924304181004936681 && (otherRec.sym__0___45_812065277175253313 == sym__0___45_812065277175253313 && (otherRec.sym__0___45_879260575341141708 == sym__0___45_879260575341141708 && otherRec.sym__0___45_5047397743832953891 == sym__0___45_5047397743832953891)))))))))))))))))))))))))))))))))))))))))))))))))))))))));
  }
  bool operator !=(const Record3& otherRec) const{
    return (otherRec.sym__0__1547076744925930880 != sym__0__1547076744925930880 || (otherRec.sym__0__3079651708208385520 != sym__0__3079651708208385520 || (otherRec.sym__0__722488589300315522 != sym__0__722488589300315522 || (otherRec.sym__0__5728736137952035521 != sym__0__5728736137952035521 || (otherRec.sym__0__1016643266231007683 != sym__0__1016643266231007683 || (otherRec.sym__0__7488963553490858577 != sym__0__7488963553490858577 || (otherRec.sym__0___45_5912777685800611816 != sym__0___45_5912777685800611816 || (otherRec.sym__0__5163174048669277343 != sym__0__5163174048669277343 || (otherRec.sym__0__1804747360158272504 != sym__0__1804747360158272504 || (otherRec.sym__0___45_8585488438570493216 != sym__0___45_8585488438570493216 || (otherRec.sym__0___45_5255213217507996278 != sym__0___45_5255213217507996278 || (otherRec.sym__0__922056654626502433 != sym__0__922056654626502433 || (otherRec.sym__0__8167091386086901924 != sym__0__8167091386086901924 || (otherRec.sym__0___45_6557548601784909220 != sym__0___45_6557548601784909220 || (otherRec.sym__0__3982600392097801133 != sym__0__3982600392097801133 || (otherRec.sym__0___45_2639369843693128107 != sym__0___45_2639369843693128107 || (otherRec.sym__0___45_2892948589959819237 != sym__0___45_2892948589959819237 || (otherRec.sym__0___45_3083177374599918180 != sym__0___45_3083177374599918180 || (otherRec.sym__0___45_4767370105190669238 != sym__0___45_4767370105190669238 || (otherRec.sym__0__7622263690412824738 != sym__0__7622263690412824738 || (otherRec.sym__0__51540186613445224 != sym__0__51540186613445224 || (otherRec.sym__0__5816250341010414547 != sym__0__5816250341010414547 || (otherRec.sym__0___45_4395275123805465570 != sym__0___45_4395275123805465570 || (otherRec.sym__0___45_7314445511356925101 != sym__0___45_7314445511356925101 || (otherRec.sym__0__1160535804228364061 != sym__0__1160535804228364061 || (otherRec.sym__0___45_658439635996140254 != sym__0___45_658439635996140254 || (otherRec.sym__0__5408690261773440146 != sym__0__5408690261773440146 || (otherRec.sym__0__4735189913708153244 != sym__0__4735189913708153244 || (otherRec.sym__0___45_8984691491589025986 != sym__0___45_8984691491589025986 || (otherRec.sym__0__4667820012727147444 != sym__0__4667820012727147444 || (otherRec.sym__0__2342925512217931808 != sym__0__2342925512217931808 || (otherRec.sym__0__1214124832604663335 != sym__0__1214124832604663335 || (otherRec.sym__0__3255112656206796761 != sym__0__3255112656206796761 || (otherRec.sym__0__4481647413238555121 != sym__0__4481647413238555121 || (otherRec.sym__0___45_8432259835637048949 != sym__0___45_8432259835637048949 || (otherRec.sym__0__4548729478722910608 != sym__0__4548729478722910608 || (otherRec.sym__0___45_121547008029878490 != sym__0___45_121547008029878490 || (otherRec.sym__0__3269568155542253564 != sym__0__3269568155542253564 || (otherRec.sym__0__3982220672063046018 != sym__0__3982220672063046018 || (otherRec.sym__0__4693536182358499263 != sym__0__4693536182358499263 || (otherRec.sym__0__2984872593914002448 != sym__0__2984872593914002448 || (otherRec.sym__0__6297984954898127448 != sym__0__6297984954898127448 || (otherRec.sym__0___45_2539705795808102992 != sym__0___45_2539705795808102992 || (otherRec.sym__0__4925130884886294926 != sym__0__4925130884886294926 || (otherRec.sym__0___45_6056498752508205364 != sym__0___45_6056498752508205364 || (otherRec.sym__0___45_5529708794626966486 != sym__0___45_5529708794626966486 || (otherRec.sym__0___45_4737680138599499881 != sym__0___45_4737680138599499881 || (otherRec.sym__0__6984993766776696624 != sym__0__6984993766776696624 || (otherRec.sym__0___45_8393949379764847708 != sym__0___45_8393949379764847708 || (otherRec.sym__0__4462919605968504146 != sym__0__4462919605968504146 || (otherRec.sym__0__6874577426955441634 != sym__0__6874577426955441634 || (otherRec.sym__0___45_1088065985843605459 != sym__0___45_1088065985843605459 || (otherRec.sym__0__228349805477520123 != sym__0__228349805477520123 || (otherRec.sym__0___45_3813708782342371331 != sym__0___45_3813708782342371331 || (otherRec.sym__0__2924304181004936681 != sym__0__2924304181004936681 || (otherRec.sym__0___45_812065277175253313 != sym__0___45_812065277175253313 || (otherRec.sym__0___45_879260575341141708 != sym__0___45_879260575341141708 || otherRec.sym__0___45_5047397743832953891 != sym__0___45_5047397743832953891)))))))))))))))))))))))))))))))))))))))))))))))))))))))));
  }
  unsigned sym__0__1547076744925930880;
  fluidb_string<18> sym__0__3079651708208385520;
  fluidb_string<9> sym__0__722488589300315522;
  fluidb_string<9> sym__0__5728736137952035521;
  unsigned sym__0__1016643266231007683;
  unsigned sym__0__7488963553490858577;
  fluidb_string<7> sym__0___45_5912777685800611816;
  unsigned sym__0__5163174048669277343;
  unsigned sym__0__1804747360158272504;
  unsigned sym__0___45_8585488438570493216;
  unsigned sym__0___45_5255213217507996278;
  unsigned sym__0__922056654626502433;
  fluidb_string<15> sym__0__8167091386086901924;
  fluidb_string<2> sym__0___45_6557548601784909220;
  fluidb_string<2> sym__0__3982600392097801133;
  fluidb_string<2> sym__0___45_2639369843693128107;
  fluidb_string<2> sym__0___45_2892948589959819237;
  unsigned sym__0___45_3083177374599918180;
  int sym__0___45_4767370105190669238;
  unsigned sym__0__7622263690412824738;
  unsigned sym__0__51540186613445224;
  unsigned sym__0__5816250341010414547;
  unsigned sym__0___45_4395275123805465570;
  fluidb_string<21> sym__0___45_7314445511356925101;
  unsigned sym__0__1160535804228364061;
  fluidb_string<10> sym__0___45_658439635996140254;
  unsigned sym__0__5408690261773440146;
  double sym__0__4735189913708153244;
  unsigned sym__0___45_8984691491589025986;
  double sym__0__4667820012727147444;
  unsigned sym__0__2342925512217931808;
  unsigned sym__0__1214124832604663335;
  double sym__0__3255112656206796761;
  fluidb_string<13> sym__0__4481647413238555121;
  unsigned sym__0___45_8432259835637048949;
  fluidb_string<25> sym__0__4548729478722910608;
  fluidb_string<40> sym__0___45_121547008029878490;
  fluidb_string<16> sym__0__3269568155542253564;
  fluidb_string<16> sym__0__3982220672063046018;
  fluidb_string<13> sym__0__4693536182358499263;
  fluidb_string<15> sym__0__2984872593914002448;
  unsigned sym__0__6297984954898127448;
  fluidb_string<18> sym__0___45_2539705795808102992;
  fluidb_string<40> sym__0__4925130884886294926;
  fluidb_string<11> sym__0___45_6056498752508205364;
  fluidb_string<15> sym__0___45_5529708794626966486;
  fluidb_string<13> sym__0___45_4737680138599499881;
  fluidb_string<15> sym__0__6984993766776696624;
  fluidb_string<21> sym__0___45_8393949379764847708;
  unsigned sym__0__4462919605968504146;
  fluidb_string<55> sym__0__6874577426955441634;
  fluidb_string<25> sym__0___45_1088065985843605459;
  fluidb_string<7> sym__0__228349805477520123;
  fluidb_string<10> sym__0___45_3813708782342371331;
  fluidb_string<11> sym__0__2924304181004936681;
  fluidb_string<25> sym__0___45_812065277175253313;
  unsigned sym__0___45_879260575341141708;
  fluidb_string<10> sym__0___45_5047397743832953891;
 private:
};


class Record1 {
 public:
  Record1(unsigned __sym__0___45_3626104775580424569, fluidb_string<16> __sym__0__2860600750035231010, fluidb_string<10> __sym__0__8292664984119007321, unsigned __sym__0___45_6555077712838142657) : sym__0___45_3626104775580424569(__sym__0___45_3626104775580424569), sym__0__2860600750035231010(__sym__0__2860600750035231010), sym__0__8292664984119007321(__sym__0__8292664984119007321), sym__0___45_6555077712838142657(__sym__0___45_6555077712838142657)
  {
  }
  Record1() 
  {
  }
  std::string show() const{
    std::stringstream o;
    o << sym__0___45_3626104775580424569 << " | " << arrToString(sym__0__2860600750035231010) << " | " << arrToString(sym__0__8292664984119007321) << " | " << sym__0___45_6555077712838142657;
    return o.str();
  }
  bool operator <(const Record1& otherRec) const{
    return (otherRec.sym__0___45_3626104775580424569 < sym__0___45_3626104775580424569 && (otherRec.sym__0__2860600750035231010 < sym__0__2860600750035231010 && (otherRec.sym__0__8292664984119007321 < sym__0__8292664984119007321 && otherRec.sym__0___45_6555077712838142657 < sym__0___45_6555077712838142657)));
  }
  bool operator ==(const Record1& otherRec) const{
    return (otherRec.sym__0___45_3626104775580424569 == sym__0___45_3626104775580424569 && (otherRec.sym__0__2860600750035231010 == sym__0__2860600750035231010 && (otherRec.sym__0__8292664984119007321 == sym__0__8292664984119007321 && otherRec.sym__0___45_6555077712838142657 == sym__0___45_6555077712838142657)));
  }
  bool operator !=(const Record1& otherRec) const{
    return (otherRec.sym__0___45_3626104775580424569 != sym__0___45_3626104775580424569 || (otherRec.sym__0__2860600750035231010 != sym__0__2860600750035231010 || (otherRec.sym__0__8292664984119007321 != sym__0__8292664984119007321 || otherRec.sym__0___45_6555077712838142657 != sym__0___45_6555077712838142657)));
  }
  unsigned sym__0___45_3626104775580424569;
  fluidb_string<16> sym__0__2860600750035231010;
  fluidb_string<10> sym__0__8292664984119007321;
  unsigned sym__0___45_6555077712838142657;
 private:
};


class CallableClass11 {
 public:
  Record8 operator()(const Record1& record10) {
    return Record8(record10.sym__0___45_3626104775580424569, record10.sym__0__2860600750035231010, record10.sym__0__8292664984119007321);
  }
  typedef Record8 Codomain;
  typedef Record1 Domain0;
 private:
};


class CallableClass7 {
 public:
  Record1 operator()(const Record3& record0) {
    return Record1(vAggrFirst2(record0.sym__0__1016643266231007683), vAggrFirst4(record0.sym__0__3269568155542253564), vAggrFirst5(record0.sym__0___45_3813708782342371331), vAggrSum6((record0.sym__0__2342925512217931808 - record0.sym__0__1214124832604663335)));
  }
  typedef Record1 Codomain;
  typedef Record3 Domain0;
 private:
  AggrFirst<unsigned> vAggrFirst2;
  AggrFirst<fluidb_string<16>> vAggrFirst4;
  AggrFirst<fluidb_string<10>> vAggrFirst5;
  AggrSum<unsigned> vAggrSum6;
};


class CallableClass9 {
 public:
  Record8 operator()(const Record3& record0) {
    return Record8(record0.sym__0__1016643266231007683, record0.sym__0__3269568155542253564, record0.sym__0___45_3813708782342371331);
  }
  typedef Record8 Codomain;
  typedef Record3 Domain0;
 private:
};






int main() {
  // ForwardTrigger: (Just 
  //   (Right 
  //     [
  //      QGroup 
  //         [
  //          (ESym "d_year",E0 (NAggr AggrFirst (E0 (ESym "d_year")))),
  //          (ESym "s_city",E0 (NAggr AggrFirst (E0 (ESym "s_city")))),
  //          (ESym "p_brand1",E0 (NAggr AggrFirst (E0 (ESym "p_brand1")))),
  //          (
  //            ESym "profit",
  //            E0 
  //               (NAggr 
  //                 AggrSum 
  //                 (E2 ESub 
  //                     (E0 (ESym "lo_revenue")) 
  //                     (E0 (ESym "lo_supplycost"))))
  //           )
  //         ] 
  //         [E0 (ESym "d_year"),E0 (ESym "s_city"),E0 (ESym "p_brand1")]
  std::cout << "ForwardTrigger: (Just \n  (Right \n    [\n     QGroup \n        [\n         (ESym \"d_year\",E0 (NAggr AggrFirst (E0 (ESym \"d_year\")))),\n         (ESym \"s_city\",E0 (NAggr AggrFirst (E0 (ESym \"s_city\")))),\n         (ESym \"p_brand1\",E0 (NAggr AggrFirst (E0 (ESym \"p_brand1\")))),\n         (\n           ESym \"profit\",\n           E0 \n              (NAggr \n                AggrSum \n                (E2 ESub \n                    (E0 (ESym \"lo_revenue\")) \n                    (E0 (ESym \"lo_supplycost\"))))\n          )\n        ] \n        [E0 (ESym \"d_year\"),E0 (ESym \"s_city\"),E0 (ESym \"p_brand1\")]\n    ]))" << std::endl;
  {
    auto operation = mkAggregation<CallableClass7, CallableClass9>(Just<const std::string>("/tmp/fluidb_store/data372.dat"), Just<const std::string>("/tmp/fluidb_store/data343.dat"), "/tmp/fluidb_store/data343.dat");
    operation.run();
    operation.print_output(10);
  }
  // ForwardTrigger: (Just 
  //   (Right 
  std::cout << "ForwardTrigger: (Just \n  (Right \n    [QSort [E0 (ESym \"d_year\"),E0 (ESym \"s_city\"),E0 (ESym \"p_brand1\")]]))" << std::endl;
  {
    auto operation = mkSort<CallableClass11>(Just<const std::string>("/tmp/fluidb_store/data373.dat"), Just<const std::string>("/tmp/fluidb_store/data372.dat"), "/tmp/fluidb_store/data372.dat");
    operation.run();
    operation.print_output(10);
  }
  report_counters();
  return 0;
}
