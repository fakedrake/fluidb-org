#include <array>

#include <string>

#include <codegen.hh>
class Record41 {
 public:
  Record41(unsigned __sortElem0, fluidb_string<10> __sortElem1) : sortElem0(__sortElem0), sortElem1(__sortElem1)
  {
  }
  Record41() 
  {
  }
  std::string show() const{
    std::stringstream o;
    o << sortElem0 << " | " << arrToString(sortElem1);
    return o.str();
  }
  bool operator <(const Record41& otherRec) const{
    return (otherRec.sortElem0 < sortElem0 && otherRec.sortElem1 < sortElem1);
  }
  bool operator ==(const Record41& otherRec) const{
    return (otherRec.sortElem0 == sortElem0 && otherRec.sortElem1 == sortElem1);
  }
  bool operator !=(const Record41& otherRec) const{
    return (otherRec.sortElem0 != sortElem0 || otherRec.sortElem1 != sortElem1);
  }
  unsigned sortElem0;
  fluidb_string<10> sortElem1;
 private:
};


class Record26 {
 public:
  Record26(unsigned __sym__0___45_5856119524029611077, fluidb_string<25> __sym__0___45_6117756446690137488, fluidb_string<40> __sym__0___45_1224041454770943330, fluidb_string<16> __sym__0__3812587929888833564, fluidb_string<16> __sym__0___45_8008422244145826406, fluidb_string<13> __sym__0___45_4939322251048870433, fluidb_string<15> __sym__0__9053752194642805744, unsigned __sym__0__7640136232660398972, int __sym__0__3289943100803186450, unsigned __sym__0___45_5627701903624601606, unsigned __sym__0___45_863299618022773480, unsigned __sym__0__8136723066761439923, unsigned __sym__0___45_8900710125615980474, fluidb_string<21> __sym__0__3462758906763983155, unsigned __sym__0__3593248492832864765, fluidb_string<10> __sym__0__570789152911192442, unsigned __sym__0___45_898962213167368918, double __sym__0__8374566300773412732, unsigned __sym__0__3427059227198728358, double __sym__0___45_6183981215901482044, unsigned __sym__0__5401582859916018176, unsigned __sym__0___45_5742182270645980233, double __sym__0___45_6866160564727197111, fluidb_string<13> __sym__0__5391279297800068881, unsigned __sym__0__6547894395141806496, fluidb_string<18> __sym__0___45_3537255481618975984, fluidb_string<9> __sym__0___45_489602595012032102, fluidb_string<9> __sym__0___45_4289355322834357343, unsigned __sym__0__3088708723790424355, unsigned __sym__0__7661335306996867761, fluidb_string<7> __sym__0__5988258660856233160, unsigned __sym__0__9055435109332708863, unsigned __sym__0___45_8293017417291819416, unsigned __sym__0__6710199602869345088, unsigned __sym__0___45_6808136983507392814, unsigned __sym__0__4732268644213463873, fluidb_string<15> __sym__0___45_9054202570868277068, fluidb_string<2> __sym__0___45_2078724704519105348, fluidb_string<2> __sym__0__1821380049868269517, fluidb_string<2> __sym__0__9082608366399799653, fluidb_string<2> __sym__0__3719923678451811915, unsigned __sym__0___45_4532026337430972310, fluidb_string<55> __sym__0__5967878085860026810, fluidb_string<25> __sym__0__4437551601976402253, fluidb_string<7> __sym__0___45_8824352318197405717, fluidb_string<10> __sym__0__462272293144630813, fluidb_string<11> __sym__0__6951672169272331993, fluidb_string<25> __sym__0__8001753553028231903, unsigned __sym__0__7959165797094177348, fluidb_string<10> __sym__0__3796606591825283389) : sym__0___45_5856119524029611077(__sym__0___45_5856119524029611077), sym__0___45_6117756446690137488(__sym__0___45_6117756446690137488), sym__0___45_1224041454770943330(__sym__0___45_1224041454770943330), sym__0__3812587929888833564(__sym__0__3812587929888833564), sym__0___45_8008422244145826406(__sym__0___45_8008422244145826406), sym__0___45_4939322251048870433(__sym__0___45_4939322251048870433), sym__0__9053752194642805744(__sym__0__9053752194642805744), sym__0__7640136232660398972(__sym__0__7640136232660398972), sym__0__3289943100803186450(__sym__0__3289943100803186450), sym__0___45_5627701903624601606(__sym__0___45_5627701903624601606), sym__0___45_863299618022773480(__sym__0___45_863299618022773480), sym__0__8136723066761439923(__sym__0__8136723066761439923), sym__0___45_8900710125615980474(__sym__0___45_8900710125615980474), sym__0__3462758906763983155(__sym__0__3462758906763983155), sym__0__3593248492832864765(__sym__0__3593248492832864765), sym__0__570789152911192442(__sym__0__570789152911192442), sym__0___45_898962213167368918(__sym__0___45_898962213167368918), sym__0__8374566300773412732(__sym__0__8374566300773412732), sym__0__3427059227198728358(__sym__0__3427059227198728358), sym__0___45_6183981215901482044(__sym__0___45_6183981215901482044), sym__0__5401582859916018176(__sym__0__5401582859916018176), sym__0___45_5742182270645980233(__sym__0___45_5742182270645980233), sym__0___45_6866160564727197111(__sym__0___45_6866160564727197111), sym__0__5391279297800068881(__sym__0__5391279297800068881), sym__0__6547894395141806496(__sym__0__6547894395141806496), sym__0___45_3537255481618975984(__sym__0___45_3537255481618975984), sym__0___45_489602595012032102(__sym__0___45_489602595012032102), sym__0___45_4289355322834357343(__sym__0___45_4289355322834357343), sym__0__3088708723790424355(__sym__0__3088708723790424355), sym__0__7661335306996867761(__sym__0__7661335306996867761), sym__0__5988258660856233160(__sym__0__5988258660856233160), sym__0__9055435109332708863(__sym__0__9055435109332708863), sym__0___45_8293017417291819416(__sym__0___45_8293017417291819416), sym__0__6710199602869345088(__sym__0__6710199602869345088), sym__0___45_6808136983507392814(__sym__0___45_6808136983507392814), sym__0__4732268644213463873(__sym__0__4732268644213463873), sym__0___45_9054202570868277068(__sym__0___45_9054202570868277068), sym__0___45_2078724704519105348(__sym__0___45_2078724704519105348), sym__0__1821380049868269517(__sym__0__1821380049868269517), sym__0__9082608366399799653(__sym__0__9082608366399799653), sym__0__3719923678451811915(__sym__0__3719923678451811915), sym__0___45_4532026337430972310(__sym__0___45_4532026337430972310), sym__0__5967878085860026810(__sym__0__5967878085860026810), sym__0__4437551601976402253(__sym__0__4437551601976402253), sym__0___45_8824352318197405717(__sym__0___45_8824352318197405717), sym__0__462272293144630813(__sym__0__462272293144630813), sym__0__6951672169272331993(__sym__0__6951672169272331993), sym__0__8001753553028231903(__sym__0__8001753553028231903), sym__0__7959165797094177348(__sym__0__7959165797094177348), sym__0__3796606591825283389(__sym__0__3796606591825283389)
  {
  }
  Record26() 
  {
  }
  std::string show() const{
    std::stringstream o;
    o << sym__0___45_5856119524029611077 << " | " << arrToString(sym__0___45_6117756446690137488) << " | " << arrToString(sym__0___45_1224041454770943330) << " | " << arrToString(sym__0__3812587929888833564) << " | " << arrToString(sym__0___45_8008422244145826406) << " | " << arrToString(sym__0___45_4939322251048870433) << " | " << arrToString(sym__0__9053752194642805744) << " | " << sym__0__7640136232660398972 << " | " << sym__0__3289943100803186450 << " | " << sym__0___45_5627701903624601606 << " | " << sym__0___45_863299618022773480 << " | " << sym__0__8136723066761439923 << " | " << sym__0___45_8900710125615980474 << " | " << arrToString(sym__0__3462758906763983155) << " | " << sym__0__3593248492832864765 << " | " << arrToString(sym__0__570789152911192442) << " | " << sym__0___45_898962213167368918 << " | " << sym__0__8374566300773412732 << " | " << sym__0__3427059227198728358 << " | " << sym__0___45_6183981215901482044 << " | " << sym__0__5401582859916018176 << " | " << sym__0___45_5742182270645980233 << " | " << sym__0___45_6866160564727197111 << " | " << arrToString(sym__0__5391279297800068881) << " | " << sym__0__6547894395141806496 << " | " << arrToString(sym__0___45_3537255481618975984) << " | " << arrToString(sym__0___45_489602595012032102) << " | " << arrToString(sym__0___45_4289355322834357343) << " | " << sym__0__3088708723790424355 << " | " << sym__0__7661335306996867761 << " | " << arrToString(sym__0__5988258660856233160) << " | " << sym__0__9055435109332708863 << " | " << sym__0___45_8293017417291819416 << " | " << sym__0__6710199602869345088 << " | " << sym__0___45_6808136983507392814 << " | " << sym__0__4732268644213463873 << " | " << arrToString(sym__0___45_9054202570868277068) << " | " << arrToString(sym__0___45_2078724704519105348) << " | " << arrToString(sym__0__1821380049868269517) << " | " << arrToString(sym__0__9082608366399799653) << " | " << arrToString(sym__0__3719923678451811915) << " | " << sym__0___45_4532026337430972310 << " | " << arrToString(sym__0__5967878085860026810) << " | " << arrToString(sym__0__4437551601976402253) << " | " << arrToString(sym__0___45_8824352318197405717) << " | " << arrToString(sym__0__462272293144630813) << " | " << arrToString(sym__0__6951672169272331993) << " | " << arrToString(sym__0__8001753553028231903) << " | " << sym__0__7959165797094177348 << " | " << arrToString(sym__0__3796606591825283389);
    return o.str();
  }
  bool operator <(const Record26& otherRec) const{
    return (otherRec.sym__0___45_5856119524029611077 < sym__0___45_5856119524029611077 && (otherRec.sym__0___45_6117756446690137488 < sym__0___45_6117756446690137488 && (otherRec.sym__0___45_1224041454770943330 < sym__0___45_1224041454770943330 && (otherRec.sym__0__3812587929888833564 < sym__0__3812587929888833564 && (otherRec.sym__0___45_8008422244145826406 < sym__0___45_8008422244145826406 && (otherRec.sym__0___45_4939322251048870433 < sym__0___45_4939322251048870433 && (otherRec.sym__0__9053752194642805744 < sym__0__9053752194642805744 && (otherRec.sym__0__7640136232660398972 < sym__0__7640136232660398972 && (otherRec.sym__0__3289943100803186450 < sym__0__3289943100803186450 && (otherRec.sym__0___45_5627701903624601606 < sym__0___45_5627701903624601606 && (otherRec.sym__0___45_863299618022773480 < sym__0___45_863299618022773480 && (otherRec.sym__0__8136723066761439923 < sym__0__8136723066761439923 && (otherRec.sym__0___45_8900710125615980474 < sym__0___45_8900710125615980474 && (otherRec.sym__0__3462758906763983155 < sym__0__3462758906763983155 && (otherRec.sym__0__3593248492832864765 < sym__0__3593248492832864765 && (otherRec.sym__0__570789152911192442 < sym__0__570789152911192442 && (otherRec.sym__0___45_898962213167368918 < sym__0___45_898962213167368918 && (otherRec.sym__0__8374566300773412732 < sym__0__8374566300773412732 && (otherRec.sym__0__3427059227198728358 < sym__0__3427059227198728358 && (otherRec.sym__0___45_6183981215901482044 < sym__0___45_6183981215901482044 && (otherRec.sym__0__5401582859916018176 < sym__0__5401582859916018176 && (otherRec.sym__0___45_5742182270645980233 < sym__0___45_5742182270645980233 && (otherRec.sym__0___45_6866160564727197111 < sym__0___45_6866160564727197111 && (otherRec.sym__0__5391279297800068881 < sym__0__5391279297800068881 && (otherRec.sym__0__6547894395141806496 < sym__0__6547894395141806496 && (otherRec.sym__0___45_3537255481618975984 < sym__0___45_3537255481618975984 && (otherRec.sym__0___45_489602595012032102 < sym__0___45_489602595012032102 && (otherRec.sym__0___45_4289355322834357343 < sym__0___45_4289355322834357343 && (otherRec.sym__0__3088708723790424355 < sym__0__3088708723790424355 && (otherRec.sym__0__7661335306996867761 < sym__0__7661335306996867761 && (otherRec.sym__0__5988258660856233160 < sym__0__5988258660856233160 && (otherRec.sym__0__9055435109332708863 < sym__0__9055435109332708863 && (otherRec.sym__0___45_8293017417291819416 < sym__0___45_8293017417291819416 && (otherRec.sym__0__6710199602869345088 < sym__0__6710199602869345088 && (otherRec.sym__0___45_6808136983507392814 < sym__0___45_6808136983507392814 && (otherRec.sym__0__4732268644213463873 < sym__0__4732268644213463873 && (otherRec.sym__0___45_9054202570868277068 < sym__0___45_9054202570868277068 && (otherRec.sym__0___45_2078724704519105348 < sym__0___45_2078724704519105348 && (otherRec.sym__0__1821380049868269517 < sym__0__1821380049868269517 && (otherRec.sym__0__9082608366399799653 < sym__0__9082608366399799653 && (otherRec.sym__0__3719923678451811915 < sym__0__3719923678451811915 && (otherRec.sym__0___45_4532026337430972310 < sym__0___45_4532026337430972310 && (otherRec.sym__0__5967878085860026810 < sym__0__5967878085860026810 && (otherRec.sym__0__4437551601976402253 < sym__0__4437551601976402253 && (otherRec.sym__0___45_8824352318197405717 < sym__0___45_8824352318197405717 && (otherRec.sym__0__462272293144630813 < sym__0__462272293144630813 && (otherRec.sym__0__6951672169272331993 < sym__0__6951672169272331993 && (otherRec.sym__0__8001753553028231903 < sym__0__8001753553028231903 && (otherRec.sym__0__7959165797094177348 < sym__0__7959165797094177348 && otherRec.sym__0__3796606591825283389 < sym__0__3796606591825283389)))))))))))))))))))))))))))))))))))))))))))))))));
  }
  bool operator ==(const Record26& otherRec) const{
    return (otherRec.sym__0___45_5856119524029611077 == sym__0___45_5856119524029611077 && (otherRec.sym__0___45_6117756446690137488 == sym__0___45_6117756446690137488 && (otherRec.sym__0___45_1224041454770943330 == sym__0___45_1224041454770943330 && (otherRec.sym__0__3812587929888833564 == sym__0__3812587929888833564 && (otherRec.sym__0___45_8008422244145826406 == sym__0___45_8008422244145826406 && (otherRec.sym__0___45_4939322251048870433 == sym__0___45_4939322251048870433 && (otherRec.sym__0__9053752194642805744 == sym__0__9053752194642805744 && (otherRec.sym__0__7640136232660398972 == sym__0__7640136232660398972 && (otherRec.sym__0__3289943100803186450 == sym__0__3289943100803186450 && (otherRec.sym__0___45_5627701903624601606 == sym__0___45_5627701903624601606 && (otherRec.sym__0___45_863299618022773480 == sym__0___45_863299618022773480 && (otherRec.sym__0__8136723066761439923 == sym__0__8136723066761439923 && (otherRec.sym__0___45_8900710125615980474 == sym__0___45_8900710125615980474 && (otherRec.sym__0__3462758906763983155 == sym__0__3462758906763983155 && (otherRec.sym__0__3593248492832864765 == sym__0__3593248492832864765 && (otherRec.sym__0__570789152911192442 == sym__0__570789152911192442 && (otherRec.sym__0___45_898962213167368918 == sym__0___45_898962213167368918 && (otherRec.sym__0__8374566300773412732 == sym__0__8374566300773412732 && (otherRec.sym__0__3427059227198728358 == sym__0__3427059227198728358 && (otherRec.sym__0___45_6183981215901482044 == sym__0___45_6183981215901482044 && (otherRec.sym__0__5401582859916018176 == sym__0__5401582859916018176 && (otherRec.sym__0___45_5742182270645980233 == sym__0___45_5742182270645980233 && (otherRec.sym__0___45_6866160564727197111 == sym__0___45_6866160564727197111 && (otherRec.sym__0__5391279297800068881 == sym__0__5391279297800068881 && (otherRec.sym__0__6547894395141806496 == sym__0__6547894395141806496 && (otherRec.sym__0___45_3537255481618975984 == sym__0___45_3537255481618975984 && (otherRec.sym__0___45_489602595012032102 == sym__0___45_489602595012032102 && (otherRec.sym__0___45_4289355322834357343 == sym__0___45_4289355322834357343 && (otherRec.sym__0__3088708723790424355 == sym__0__3088708723790424355 && (otherRec.sym__0__7661335306996867761 == sym__0__7661335306996867761 && (otherRec.sym__0__5988258660856233160 == sym__0__5988258660856233160 && (otherRec.sym__0__9055435109332708863 == sym__0__9055435109332708863 && (otherRec.sym__0___45_8293017417291819416 == sym__0___45_8293017417291819416 && (otherRec.sym__0__6710199602869345088 == sym__0__6710199602869345088 && (otherRec.sym__0___45_6808136983507392814 == sym__0___45_6808136983507392814 && (otherRec.sym__0__4732268644213463873 == sym__0__4732268644213463873 && (otherRec.sym__0___45_9054202570868277068 == sym__0___45_9054202570868277068 && (otherRec.sym__0___45_2078724704519105348 == sym__0___45_2078724704519105348 && (otherRec.sym__0__1821380049868269517 == sym__0__1821380049868269517 && (otherRec.sym__0__9082608366399799653 == sym__0__9082608366399799653 && (otherRec.sym__0__3719923678451811915 == sym__0__3719923678451811915 && (otherRec.sym__0___45_4532026337430972310 == sym__0___45_4532026337430972310 && (otherRec.sym__0__5967878085860026810 == sym__0__5967878085860026810 && (otherRec.sym__0__4437551601976402253 == sym__0__4437551601976402253 && (otherRec.sym__0___45_8824352318197405717 == sym__0___45_8824352318197405717 && (otherRec.sym__0__462272293144630813 == sym__0__462272293144630813 && (otherRec.sym__0__6951672169272331993 == sym__0__6951672169272331993 && (otherRec.sym__0__8001753553028231903 == sym__0__8001753553028231903 && (otherRec.sym__0__7959165797094177348 == sym__0__7959165797094177348 && otherRec.sym__0__3796606591825283389 == sym__0__3796606591825283389)))))))))))))))))))))))))))))))))))))))))))))))));
  }
  bool operator !=(const Record26& otherRec) const{
    return (otherRec.sym__0___45_5856119524029611077 != sym__0___45_5856119524029611077 || (otherRec.sym__0___45_6117756446690137488 != sym__0___45_6117756446690137488 || (otherRec.sym__0___45_1224041454770943330 != sym__0___45_1224041454770943330 || (otherRec.sym__0__3812587929888833564 != sym__0__3812587929888833564 || (otherRec.sym__0___45_8008422244145826406 != sym__0___45_8008422244145826406 || (otherRec.sym__0___45_4939322251048870433 != sym__0___45_4939322251048870433 || (otherRec.sym__0__9053752194642805744 != sym__0__9053752194642805744 || (otherRec.sym__0__7640136232660398972 != sym__0__7640136232660398972 || (otherRec.sym__0__3289943100803186450 != sym__0__3289943100803186450 || (otherRec.sym__0___45_5627701903624601606 != sym__0___45_5627701903624601606 || (otherRec.sym__0___45_863299618022773480 != sym__0___45_863299618022773480 || (otherRec.sym__0__8136723066761439923 != sym__0__8136723066761439923 || (otherRec.sym__0___45_8900710125615980474 != sym__0___45_8900710125615980474 || (otherRec.sym__0__3462758906763983155 != sym__0__3462758906763983155 || (otherRec.sym__0__3593248492832864765 != sym__0__3593248492832864765 || (otherRec.sym__0__570789152911192442 != sym__0__570789152911192442 || (otherRec.sym__0___45_898962213167368918 != sym__0___45_898962213167368918 || (otherRec.sym__0__8374566300773412732 != sym__0__8374566300773412732 || (otherRec.sym__0__3427059227198728358 != sym__0__3427059227198728358 || (otherRec.sym__0___45_6183981215901482044 != sym__0___45_6183981215901482044 || (otherRec.sym__0__5401582859916018176 != sym__0__5401582859916018176 || (otherRec.sym__0___45_5742182270645980233 != sym__0___45_5742182270645980233 || (otherRec.sym__0___45_6866160564727197111 != sym__0___45_6866160564727197111 || (otherRec.sym__0__5391279297800068881 != sym__0__5391279297800068881 || (otherRec.sym__0__6547894395141806496 != sym__0__6547894395141806496 || (otherRec.sym__0___45_3537255481618975984 != sym__0___45_3537255481618975984 || (otherRec.sym__0___45_489602595012032102 != sym__0___45_489602595012032102 || (otherRec.sym__0___45_4289355322834357343 != sym__0___45_4289355322834357343 || (otherRec.sym__0__3088708723790424355 != sym__0__3088708723790424355 || (otherRec.sym__0__7661335306996867761 != sym__0__7661335306996867761 || (otherRec.sym__0__5988258660856233160 != sym__0__5988258660856233160 || (otherRec.sym__0__9055435109332708863 != sym__0__9055435109332708863 || (otherRec.sym__0___45_8293017417291819416 != sym__0___45_8293017417291819416 || (otherRec.sym__0__6710199602869345088 != sym__0__6710199602869345088 || (otherRec.sym__0___45_6808136983507392814 != sym__0___45_6808136983507392814 || (otherRec.sym__0__4732268644213463873 != sym__0__4732268644213463873 || (otherRec.sym__0___45_9054202570868277068 != sym__0___45_9054202570868277068 || (otherRec.sym__0___45_2078724704519105348 != sym__0___45_2078724704519105348 || (otherRec.sym__0__1821380049868269517 != sym__0__1821380049868269517 || (otherRec.sym__0__9082608366399799653 != sym__0__9082608366399799653 || (otherRec.sym__0__3719923678451811915 != sym__0__3719923678451811915 || (otherRec.sym__0___45_4532026337430972310 != sym__0___45_4532026337430972310 || (otherRec.sym__0__5967878085860026810 != sym__0__5967878085860026810 || (otherRec.sym__0__4437551601976402253 != sym__0__4437551601976402253 || (otherRec.sym__0___45_8824352318197405717 != sym__0___45_8824352318197405717 || (otherRec.sym__0__462272293144630813 != sym__0__462272293144630813 || (otherRec.sym__0__6951672169272331993 != sym__0__6951672169272331993 || (otherRec.sym__0__8001753553028231903 != sym__0__8001753553028231903 || (otherRec.sym__0__7959165797094177348 != sym__0__7959165797094177348 || otherRec.sym__0__3796606591825283389 != sym__0__3796606591825283389)))))))))))))))))))))))))))))))))))))))))))))))));
  }
  unsigned sym__0___45_5856119524029611077;
  fluidb_string<25> sym__0___45_6117756446690137488;
  fluidb_string<40> sym__0___45_1224041454770943330;
  fluidb_string<16> sym__0__3812587929888833564;
  fluidb_string<16> sym__0___45_8008422244145826406;
  fluidb_string<13> sym__0___45_4939322251048870433;
  fluidb_string<15> sym__0__9053752194642805744;
  unsigned sym__0__7640136232660398972;
  int sym__0__3289943100803186450;
  unsigned sym__0___45_5627701903624601606;
  unsigned sym__0___45_863299618022773480;
  unsigned sym__0__8136723066761439923;
  unsigned sym__0___45_8900710125615980474;
  fluidb_string<21> sym__0__3462758906763983155;
  unsigned sym__0__3593248492832864765;
  fluidb_string<10> sym__0__570789152911192442;
  unsigned sym__0___45_898962213167368918;
  double sym__0__8374566300773412732;
  unsigned sym__0__3427059227198728358;
  double sym__0___45_6183981215901482044;
  unsigned sym__0__5401582859916018176;
  unsigned sym__0___45_5742182270645980233;
  double sym__0___45_6866160564727197111;
  fluidb_string<13> sym__0__5391279297800068881;
  unsigned sym__0__6547894395141806496;
  fluidb_string<18> sym__0___45_3537255481618975984;
  fluidb_string<9> sym__0___45_489602595012032102;
  fluidb_string<9> sym__0___45_4289355322834357343;
  unsigned sym__0__3088708723790424355;
  unsigned sym__0__7661335306996867761;
  fluidb_string<7> sym__0__5988258660856233160;
  unsigned sym__0__9055435109332708863;
  unsigned sym__0___45_8293017417291819416;
  unsigned sym__0__6710199602869345088;
  unsigned sym__0___45_6808136983507392814;
  unsigned sym__0__4732268644213463873;
  fluidb_string<15> sym__0___45_9054202570868277068;
  fluidb_string<2> sym__0___45_2078724704519105348;
  fluidb_string<2> sym__0__1821380049868269517;
  fluidb_string<2> sym__0__9082608366399799653;
  fluidb_string<2> sym__0__3719923678451811915;
  unsigned sym__0___45_4532026337430972310;
  fluidb_string<55> sym__0__5967878085860026810;
  fluidb_string<25> sym__0__4437551601976402253;
  fluidb_string<7> sym__0___45_8824352318197405717;
  fluidb_string<10> sym__0__462272293144630813;
  fluidb_string<11> sym__0__6951672169272331993;
  fluidb_string<25> sym__0__8001753553028231903;
  unsigned sym__0__7959165797094177348;
  fluidb_string<10> sym__0__3796606591825283389;
 private:
};


class Record25 {
 public:
  Record25(unsigned __sym__0__7178003535380331304, fluidb_string<55> __sym__0___45_7020257275696364520, fluidb_string<25> __sym__0___45_6307179734719967033, fluidb_string<7> __sym__0__4568304886257136061, fluidb_string<10> __sym__0___45_6291097039630000265, fluidb_string<11> __sym__0__551327770031967739, fluidb_string<25> __sym__0__3827696365022297353, unsigned __sym__0___45_1779543743759935870, fluidb_string<10> __sym__0__3752090135924368535) : sym__0__7178003535380331304(__sym__0__7178003535380331304), sym__0___45_7020257275696364520(__sym__0___45_7020257275696364520), sym__0___45_6307179734719967033(__sym__0___45_6307179734719967033), sym__0__4568304886257136061(__sym__0__4568304886257136061), sym__0___45_6291097039630000265(__sym__0___45_6291097039630000265), sym__0__551327770031967739(__sym__0__551327770031967739), sym__0__3827696365022297353(__sym__0__3827696365022297353), sym__0___45_1779543743759935870(__sym__0___45_1779543743759935870), sym__0__3752090135924368535(__sym__0__3752090135924368535)
  {
  }
  Record25() 
  {
  }
  std::string show() const{
    std::stringstream o;
    o << sym__0__7178003535380331304 << " | " << arrToString(sym__0___45_7020257275696364520) << " | " << arrToString(sym__0___45_6307179734719967033) << " | " << arrToString(sym__0__4568304886257136061) << " | " << arrToString(sym__0___45_6291097039630000265) << " | " << arrToString(sym__0__551327770031967739) << " | " << arrToString(sym__0__3827696365022297353) << " | " << sym__0___45_1779543743759935870 << " | " << arrToString(sym__0__3752090135924368535);
    return o.str();
  }
  bool operator <(const Record25& otherRec) const{
    return (otherRec.sym__0__7178003535380331304 < sym__0__7178003535380331304 && (otherRec.sym__0___45_7020257275696364520 < sym__0___45_7020257275696364520 && (otherRec.sym__0___45_6307179734719967033 < sym__0___45_6307179734719967033 && (otherRec.sym__0__4568304886257136061 < sym__0__4568304886257136061 && (otherRec.sym__0___45_6291097039630000265 < sym__0___45_6291097039630000265 && (otherRec.sym__0__551327770031967739 < sym__0__551327770031967739 && (otherRec.sym__0__3827696365022297353 < sym__0__3827696365022297353 && (otherRec.sym__0___45_1779543743759935870 < sym__0___45_1779543743759935870 && otherRec.sym__0__3752090135924368535 < sym__0__3752090135924368535))))))));
  }
  bool operator ==(const Record25& otherRec) const{
    return (otherRec.sym__0__7178003535380331304 == sym__0__7178003535380331304 && (otherRec.sym__0___45_7020257275696364520 == sym__0___45_7020257275696364520 && (otherRec.sym__0___45_6307179734719967033 == sym__0___45_6307179734719967033 && (otherRec.sym__0__4568304886257136061 == sym__0__4568304886257136061 && (otherRec.sym__0___45_6291097039630000265 == sym__0___45_6291097039630000265 && (otherRec.sym__0__551327770031967739 == sym__0__551327770031967739 && (otherRec.sym__0__3827696365022297353 == sym__0__3827696365022297353 && (otherRec.sym__0___45_1779543743759935870 == sym__0___45_1779543743759935870 && otherRec.sym__0__3752090135924368535 == sym__0__3752090135924368535))))))));
  }
  bool operator !=(const Record25& otherRec) const{
    return (otherRec.sym__0__7178003535380331304 != sym__0__7178003535380331304 || (otherRec.sym__0___45_7020257275696364520 != sym__0___45_7020257275696364520 || (otherRec.sym__0___45_6307179734719967033 != sym__0___45_6307179734719967033 || (otherRec.sym__0__4568304886257136061 != sym__0__4568304886257136061 || (otherRec.sym__0___45_6291097039630000265 != sym__0___45_6291097039630000265 || (otherRec.sym__0__551327770031967739 != sym__0__551327770031967739 || (otherRec.sym__0__3827696365022297353 != sym__0__3827696365022297353 || (otherRec.sym__0___45_1779543743759935870 != sym__0___45_1779543743759935870 || otherRec.sym__0__3752090135924368535 != sym__0__3752090135924368535))))))));
  }
  unsigned sym__0__7178003535380331304;
  fluidb_string<55> sym__0___45_7020257275696364520;
  fluidb_string<25> sym__0___45_6307179734719967033;
  fluidb_string<7> sym__0__4568304886257136061;
  fluidb_string<10> sym__0___45_6291097039630000265;
  fluidb_string<11> sym__0__551327770031967739;
  fluidb_string<25> sym__0__3827696365022297353;
  unsigned sym__0___45_1779543743759935870;
  fluidb_string<10> sym__0__3752090135924368535;
 private:
};


class Record35 {
 public:
  Record35(unsigned __sym__0___45_7743617557643973661, unsigned __sym__0___45_6261698000977207925, fluidb_string<10> __sym__0__1631598784897141641) : sym__0___45_7743617557643973661(__sym__0___45_7743617557643973661), sym__0___45_6261698000977207925(__sym__0___45_6261698000977207925), sym__0__1631598784897141641(__sym__0__1631598784897141641)
  {
  }
  Record35() 
  {
  }
  std::string show() const{
    std::stringstream o;
    o << sym__0___45_7743617557643973661 << " | " << sym__0___45_6261698000977207925 << " | " << arrToString(sym__0__1631598784897141641);
    return o.str();
  }
  bool operator <(const Record35& otherRec) const{
    return (otherRec.sym__0___45_7743617557643973661 < sym__0___45_7743617557643973661 && (otherRec.sym__0___45_6261698000977207925 < sym__0___45_6261698000977207925 && otherRec.sym__0__1631598784897141641 < sym__0__1631598784897141641));
  }
  bool operator ==(const Record35& otherRec) const{
    return (otherRec.sym__0___45_7743617557643973661 == sym__0___45_7743617557643973661 && (otherRec.sym__0___45_6261698000977207925 == sym__0___45_6261698000977207925 && otherRec.sym__0__1631598784897141641 == sym__0__1631598784897141641));
  }
  bool operator !=(const Record35& otherRec) const{
    return (otherRec.sym__0___45_7743617557643973661 != sym__0___45_7743617557643973661 || (otherRec.sym__0___45_6261698000977207925 != sym__0___45_6261698000977207925 || otherRec.sym__0__1631598784897141641 != sym__0__1631598784897141641));
  }
  unsigned sym__0___45_7743617557643973661;
  unsigned sym__0___45_6261698000977207925;
  fluidb_string<10> sym__0__1631598784897141641;
 private:
};


class Record37 {
 public:
  Record37(unsigned __sym__0___45_531840894949671910, fluidb_string<25> __sym__0___45_7594568260455252811, fluidb_string<40> __sym__0___45_4224396157642132841, fluidb_string<16> __sym__0___45_5121813103072643223, fluidb_string<16> __sym__0__3627274254091843899, fluidb_string<13> __sym__0___45_519289659968682554, fluidb_string<15> __sym__0__5824930074457018933, unsigned __sym__0__8300140134385342025, int __sym__0___45_4363113810210080717, unsigned __sym__0___45_2180998471546424549, unsigned __sym__0___45_591129746765413155, unsigned __sym__0___45_4416720451126861422, unsigned __sym__0___45_2100514126469912481, fluidb_string<21> __sym__0__3750234095707159570, unsigned __sym__0___45_7960421939889289288, fluidb_string<10> __sym__0___45_8655770192480484197, unsigned __sym__0__2072590499357086155, double __sym__0__8268830136148095561, unsigned __sym__0___45_678210870537240385, double __sym__0__6112270341236569873, unsigned __sym__0__8598037934431251909, unsigned __sym__0__5291402561130019774, double __sym__0___45_7851524774395097220, fluidb_string<13> __sym__0__1291698872846441412, unsigned __sym__0__8986418791032324453, fluidb_string<18> __sym__0__2167360253537002837, fluidb_string<9> __sym__0__8141858625439628603, fluidb_string<9> __sym__0___45_7931886843684217772, unsigned __sym__0___45_2549139954849286782, unsigned __sym__0___45_1691445119060855580, fluidb_string<7> __sym__0__7474331622035256461, unsigned __sym__0___45_667953329600979866, unsigned __sym__0___45_3035057609626888019, unsigned __sym__0___45_8476599677752189563, unsigned __sym__0___45_6389391189957387661, unsigned __sym__0___45_6486695610681891724, fluidb_string<15> __sym__0__4796994603556539905, fluidb_string<2> __sym__0___45_6306286879286504951, fluidb_string<2> __sym__0___45_922796240211516024, fluidb_string<2> __sym__0__2810436566368623008, fluidb_string<2> __sym__0__7272995257348976042, unsigned __sym__0__1928421907625115531, fluidb_string<55> __sym__0__6254739572024865371, fluidb_string<25> __sym__0___45_5257913184343802104, fluidb_string<7> __sym__0___45_1520289822717538230, fluidb_string<10> __sym__0___45_8628415396103686184, fluidb_string<11> __sym__0__2109492732871942412, fluidb_string<25> __sym__0__5385658520341277382, unsigned __sym__0__3660583386293997969, fluidb_string<10> __sym__0___45_3013711856665730696) : sym__0___45_531840894949671910(__sym__0___45_531840894949671910), sym__0___45_7594568260455252811(__sym__0___45_7594568260455252811), sym__0___45_4224396157642132841(__sym__0___45_4224396157642132841), sym__0___45_5121813103072643223(__sym__0___45_5121813103072643223), sym__0__3627274254091843899(__sym__0__3627274254091843899), sym__0___45_519289659968682554(__sym__0___45_519289659968682554), sym__0__5824930074457018933(__sym__0__5824930074457018933), sym__0__8300140134385342025(__sym__0__8300140134385342025), sym__0___45_4363113810210080717(__sym__0___45_4363113810210080717), sym__0___45_2180998471546424549(__sym__0___45_2180998471546424549), sym__0___45_591129746765413155(__sym__0___45_591129746765413155), sym__0___45_4416720451126861422(__sym__0___45_4416720451126861422), sym__0___45_2100514126469912481(__sym__0___45_2100514126469912481), sym__0__3750234095707159570(__sym__0__3750234095707159570), sym__0___45_7960421939889289288(__sym__0___45_7960421939889289288), sym__0___45_8655770192480484197(__sym__0___45_8655770192480484197), sym__0__2072590499357086155(__sym__0__2072590499357086155), sym__0__8268830136148095561(__sym__0__8268830136148095561), sym__0___45_678210870537240385(__sym__0___45_678210870537240385), sym__0__6112270341236569873(__sym__0__6112270341236569873), sym__0__8598037934431251909(__sym__0__8598037934431251909), sym__0__5291402561130019774(__sym__0__5291402561130019774), sym__0___45_7851524774395097220(__sym__0___45_7851524774395097220), sym__0__1291698872846441412(__sym__0__1291698872846441412), sym__0__8986418791032324453(__sym__0__8986418791032324453), sym__0__2167360253537002837(__sym__0__2167360253537002837), sym__0__8141858625439628603(__sym__0__8141858625439628603), sym__0___45_7931886843684217772(__sym__0___45_7931886843684217772), sym__0___45_2549139954849286782(__sym__0___45_2549139954849286782), sym__0___45_1691445119060855580(__sym__0___45_1691445119060855580), sym__0__7474331622035256461(__sym__0__7474331622035256461), sym__0___45_667953329600979866(__sym__0___45_667953329600979866), sym__0___45_3035057609626888019(__sym__0___45_3035057609626888019), sym__0___45_8476599677752189563(__sym__0___45_8476599677752189563), sym__0___45_6389391189957387661(__sym__0___45_6389391189957387661), sym__0___45_6486695610681891724(__sym__0___45_6486695610681891724), sym__0__4796994603556539905(__sym__0__4796994603556539905), sym__0___45_6306286879286504951(__sym__0___45_6306286879286504951), sym__0___45_922796240211516024(__sym__0___45_922796240211516024), sym__0__2810436566368623008(__sym__0__2810436566368623008), sym__0__7272995257348976042(__sym__0__7272995257348976042), sym__0__1928421907625115531(__sym__0__1928421907625115531), sym__0__6254739572024865371(__sym__0__6254739572024865371), sym__0___45_5257913184343802104(__sym__0___45_5257913184343802104), sym__0___45_1520289822717538230(__sym__0___45_1520289822717538230), sym__0___45_8628415396103686184(__sym__0___45_8628415396103686184), sym__0__2109492732871942412(__sym__0__2109492732871942412), sym__0__5385658520341277382(__sym__0__5385658520341277382), sym__0__3660583386293997969(__sym__0__3660583386293997969), sym__0___45_3013711856665730696(__sym__0___45_3013711856665730696)
  {
  }
  Record37() 
  {
  }
  std::string show() const{
    std::stringstream o;
    o << sym__0___45_531840894949671910 << " | " << arrToString(sym__0___45_7594568260455252811) << " | " << arrToString(sym__0___45_4224396157642132841) << " | " << arrToString(sym__0___45_5121813103072643223) << " | " << arrToString(sym__0__3627274254091843899) << " | " << arrToString(sym__0___45_519289659968682554) << " | " << arrToString(sym__0__5824930074457018933) << " | " << sym__0__8300140134385342025 << " | " << sym__0___45_4363113810210080717 << " | " << sym__0___45_2180998471546424549 << " | " << sym__0___45_591129746765413155 << " | " << sym__0___45_4416720451126861422 << " | " << sym__0___45_2100514126469912481 << " | " << arrToString(sym__0__3750234095707159570) << " | " << sym__0___45_7960421939889289288 << " | " << arrToString(sym__0___45_8655770192480484197) << " | " << sym__0__2072590499357086155 << " | " << sym__0__8268830136148095561 << " | " << sym__0___45_678210870537240385 << " | " << sym__0__6112270341236569873 << " | " << sym__0__8598037934431251909 << " | " << sym__0__5291402561130019774 << " | " << sym__0___45_7851524774395097220 << " | " << arrToString(sym__0__1291698872846441412) << " | " << sym__0__8986418791032324453 << " | " << arrToString(sym__0__2167360253537002837) << " | " << arrToString(sym__0__8141858625439628603) << " | " << arrToString(sym__0___45_7931886843684217772) << " | " << sym__0___45_2549139954849286782 << " | " << sym__0___45_1691445119060855580 << " | " << arrToString(sym__0__7474331622035256461) << " | " << sym__0___45_667953329600979866 << " | " << sym__0___45_3035057609626888019 << " | " << sym__0___45_8476599677752189563 << " | " << sym__0___45_6389391189957387661 << " | " << sym__0___45_6486695610681891724 << " | " << arrToString(sym__0__4796994603556539905) << " | " << arrToString(sym__0___45_6306286879286504951) << " | " << arrToString(sym__0___45_922796240211516024) << " | " << arrToString(sym__0__2810436566368623008) << " | " << arrToString(sym__0__7272995257348976042) << " | " << sym__0__1928421907625115531 << " | " << arrToString(sym__0__6254739572024865371) << " | " << arrToString(sym__0___45_5257913184343802104) << " | " << arrToString(sym__0___45_1520289822717538230) << " | " << arrToString(sym__0___45_8628415396103686184) << " | " << arrToString(sym__0__2109492732871942412) << " | " << arrToString(sym__0__5385658520341277382) << " | " << sym__0__3660583386293997969 << " | " << arrToString(sym__0___45_3013711856665730696);
    return o.str();
  }
  bool operator <(const Record37& otherRec) const{
    return (otherRec.sym__0___45_531840894949671910 < sym__0___45_531840894949671910 && (otherRec.sym__0___45_7594568260455252811 < sym__0___45_7594568260455252811 && (otherRec.sym__0___45_4224396157642132841 < sym__0___45_4224396157642132841 && (otherRec.sym__0___45_5121813103072643223 < sym__0___45_5121813103072643223 && (otherRec.sym__0__3627274254091843899 < sym__0__3627274254091843899 && (otherRec.sym__0___45_519289659968682554 < sym__0___45_519289659968682554 && (otherRec.sym__0__5824930074457018933 < sym__0__5824930074457018933 && (otherRec.sym__0__8300140134385342025 < sym__0__8300140134385342025 && (otherRec.sym__0___45_4363113810210080717 < sym__0___45_4363113810210080717 && (otherRec.sym__0___45_2180998471546424549 < sym__0___45_2180998471546424549 && (otherRec.sym__0___45_591129746765413155 < sym__0___45_591129746765413155 && (otherRec.sym__0___45_4416720451126861422 < sym__0___45_4416720451126861422 && (otherRec.sym__0___45_2100514126469912481 < sym__0___45_2100514126469912481 && (otherRec.sym__0__3750234095707159570 < sym__0__3750234095707159570 && (otherRec.sym__0___45_7960421939889289288 < sym__0___45_7960421939889289288 && (otherRec.sym__0___45_8655770192480484197 < sym__0___45_8655770192480484197 && (otherRec.sym__0__2072590499357086155 < sym__0__2072590499357086155 && (otherRec.sym__0__8268830136148095561 < sym__0__8268830136148095561 && (otherRec.sym__0___45_678210870537240385 < sym__0___45_678210870537240385 && (otherRec.sym__0__6112270341236569873 < sym__0__6112270341236569873 && (otherRec.sym__0__8598037934431251909 < sym__0__8598037934431251909 && (otherRec.sym__0__5291402561130019774 < sym__0__5291402561130019774 && (otherRec.sym__0___45_7851524774395097220 < sym__0___45_7851524774395097220 && (otherRec.sym__0__1291698872846441412 < sym__0__1291698872846441412 && (otherRec.sym__0__8986418791032324453 < sym__0__8986418791032324453 && (otherRec.sym__0__2167360253537002837 < sym__0__2167360253537002837 && (otherRec.sym__0__8141858625439628603 < sym__0__8141858625439628603 && (otherRec.sym__0___45_7931886843684217772 < sym__0___45_7931886843684217772 && (otherRec.sym__0___45_2549139954849286782 < sym__0___45_2549139954849286782 && (otherRec.sym__0___45_1691445119060855580 < sym__0___45_1691445119060855580 && (otherRec.sym__0__7474331622035256461 < sym__0__7474331622035256461 && (otherRec.sym__0___45_667953329600979866 < sym__0___45_667953329600979866 && (otherRec.sym__0___45_3035057609626888019 < sym__0___45_3035057609626888019 && (otherRec.sym__0___45_8476599677752189563 < sym__0___45_8476599677752189563 && (otherRec.sym__0___45_6389391189957387661 < sym__0___45_6389391189957387661 && (otherRec.sym__0___45_6486695610681891724 < sym__0___45_6486695610681891724 && (otherRec.sym__0__4796994603556539905 < sym__0__4796994603556539905 && (otherRec.sym__0___45_6306286879286504951 < sym__0___45_6306286879286504951 && (otherRec.sym__0___45_922796240211516024 < sym__0___45_922796240211516024 && (otherRec.sym__0__2810436566368623008 < sym__0__2810436566368623008 && (otherRec.sym__0__7272995257348976042 < sym__0__7272995257348976042 && (otherRec.sym__0__1928421907625115531 < sym__0__1928421907625115531 && (otherRec.sym__0__6254739572024865371 < sym__0__6254739572024865371 && (otherRec.sym__0___45_5257913184343802104 < sym__0___45_5257913184343802104 && (otherRec.sym__0___45_1520289822717538230 < sym__0___45_1520289822717538230 && (otherRec.sym__0___45_8628415396103686184 < sym__0___45_8628415396103686184 && (otherRec.sym__0__2109492732871942412 < sym__0__2109492732871942412 && (otherRec.sym__0__5385658520341277382 < sym__0__5385658520341277382 && (otherRec.sym__0__3660583386293997969 < sym__0__3660583386293997969 && otherRec.sym__0___45_3013711856665730696 < sym__0___45_3013711856665730696)))))))))))))))))))))))))))))))))))))))))))))))));
  }
  bool operator ==(const Record37& otherRec) const{
    return (otherRec.sym__0___45_531840894949671910 == sym__0___45_531840894949671910 && (otherRec.sym__0___45_7594568260455252811 == sym__0___45_7594568260455252811 && (otherRec.sym__0___45_4224396157642132841 == sym__0___45_4224396157642132841 && (otherRec.sym__0___45_5121813103072643223 == sym__0___45_5121813103072643223 && (otherRec.sym__0__3627274254091843899 == sym__0__3627274254091843899 && (otherRec.sym__0___45_519289659968682554 == sym__0___45_519289659968682554 && (otherRec.sym__0__5824930074457018933 == sym__0__5824930074457018933 && (otherRec.sym__0__8300140134385342025 == sym__0__8300140134385342025 && (otherRec.sym__0___45_4363113810210080717 == sym__0___45_4363113810210080717 && (otherRec.sym__0___45_2180998471546424549 == sym__0___45_2180998471546424549 && (otherRec.sym__0___45_591129746765413155 == sym__0___45_591129746765413155 && (otherRec.sym__0___45_4416720451126861422 == sym__0___45_4416720451126861422 && (otherRec.sym__0___45_2100514126469912481 == sym__0___45_2100514126469912481 && (otherRec.sym__0__3750234095707159570 == sym__0__3750234095707159570 && (otherRec.sym__0___45_7960421939889289288 == sym__0___45_7960421939889289288 && (otherRec.sym__0___45_8655770192480484197 == sym__0___45_8655770192480484197 && (otherRec.sym__0__2072590499357086155 == sym__0__2072590499357086155 && (otherRec.sym__0__8268830136148095561 == sym__0__8268830136148095561 && (otherRec.sym__0___45_678210870537240385 == sym__0___45_678210870537240385 && (otherRec.sym__0__6112270341236569873 == sym__0__6112270341236569873 && (otherRec.sym__0__8598037934431251909 == sym__0__8598037934431251909 && (otherRec.sym__0__5291402561130019774 == sym__0__5291402561130019774 && (otherRec.sym__0___45_7851524774395097220 == sym__0___45_7851524774395097220 && (otherRec.sym__0__1291698872846441412 == sym__0__1291698872846441412 && (otherRec.sym__0__8986418791032324453 == sym__0__8986418791032324453 && (otherRec.sym__0__2167360253537002837 == sym__0__2167360253537002837 && (otherRec.sym__0__8141858625439628603 == sym__0__8141858625439628603 && (otherRec.sym__0___45_7931886843684217772 == sym__0___45_7931886843684217772 && (otherRec.sym__0___45_2549139954849286782 == sym__0___45_2549139954849286782 && (otherRec.sym__0___45_1691445119060855580 == sym__0___45_1691445119060855580 && (otherRec.sym__0__7474331622035256461 == sym__0__7474331622035256461 && (otherRec.sym__0___45_667953329600979866 == sym__0___45_667953329600979866 && (otherRec.sym__0___45_3035057609626888019 == sym__0___45_3035057609626888019 && (otherRec.sym__0___45_8476599677752189563 == sym__0___45_8476599677752189563 && (otherRec.sym__0___45_6389391189957387661 == sym__0___45_6389391189957387661 && (otherRec.sym__0___45_6486695610681891724 == sym__0___45_6486695610681891724 && (otherRec.sym__0__4796994603556539905 == sym__0__4796994603556539905 && (otherRec.sym__0___45_6306286879286504951 == sym__0___45_6306286879286504951 && (otherRec.sym__0___45_922796240211516024 == sym__0___45_922796240211516024 && (otherRec.sym__0__2810436566368623008 == sym__0__2810436566368623008 && (otherRec.sym__0__7272995257348976042 == sym__0__7272995257348976042 && (otherRec.sym__0__1928421907625115531 == sym__0__1928421907625115531 && (otherRec.sym__0__6254739572024865371 == sym__0__6254739572024865371 && (otherRec.sym__0___45_5257913184343802104 == sym__0___45_5257913184343802104 && (otherRec.sym__0___45_1520289822717538230 == sym__0___45_1520289822717538230 && (otherRec.sym__0___45_8628415396103686184 == sym__0___45_8628415396103686184 && (otherRec.sym__0__2109492732871942412 == sym__0__2109492732871942412 && (otherRec.sym__0__5385658520341277382 == sym__0__5385658520341277382 && (otherRec.sym__0__3660583386293997969 == sym__0__3660583386293997969 && otherRec.sym__0___45_3013711856665730696 == sym__0___45_3013711856665730696)))))))))))))))))))))))))))))))))))))))))))))))));
  }
  bool operator !=(const Record37& otherRec) const{
    return (otherRec.sym__0___45_531840894949671910 != sym__0___45_531840894949671910 || (otherRec.sym__0___45_7594568260455252811 != sym__0___45_7594568260455252811 || (otherRec.sym__0___45_4224396157642132841 != sym__0___45_4224396157642132841 || (otherRec.sym__0___45_5121813103072643223 != sym__0___45_5121813103072643223 || (otherRec.sym__0__3627274254091843899 != sym__0__3627274254091843899 || (otherRec.sym__0___45_519289659968682554 != sym__0___45_519289659968682554 || (otherRec.sym__0__5824930074457018933 != sym__0__5824930074457018933 || (otherRec.sym__0__8300140134385342025 != sym__0__8300140134385342025 || (otherRec.sym__0___45_4363113810210080717 != sym__0___45_4363113810210080717 || (otherRec.sym__0___45_2180998471546424549 != sym__0___45_2180998471546424549 || (otherRec.sym__0___45_591129746765413155 != sym__0___45_591129746765413155 || (otherRec.sym__0___45_4416720451126861422 != sym__0___45_4416720451126861422 || (otherRec.sym__0___45_2100514126469912481 != sym__0___45_2100514126469912481 || (otherRec.sym__0__3750234095707159570 != sym__0__3750234095707159570 || (otherRec.sym__0___45_7960421939889289288 != sym__0___45_7960421939889289288 || (otherRec.sym__0___45_8655770192480484197 != sym__0___45_8655770192480484197 || (otherRec.sym__0__2072590499357086155 != sym__0__2072590499357086155 || (otherRec.sym__0__8268830136148095561 != sym__0__8268830136148095561 || (otherRec.sym__0___45_678210870537240385 != sym__0___45_678210870537240385 || (otherRec.sym__0__6112270341236569873 != sym__0__6112270341236569873 || (otherRec.sym__0__8598037934431251909 != sym__0__8598037934431251909 || (otherRec.sym__0__5291402561130019774 != sym__0__5291402561130019774 || (otherRec.sym__0___45_7851524774395097220 != sym__0___45_7851524774395097220 || (otherRec.sym__0__1291698872846441412 != sym__0__1291698872846441412 || (otherRec.sym__0__8986418791032324453 != sym__0__8986418791032324453 || (otherRec.sym__0__2167360253537002837 != sym__0__2167360253537002837 || (otherRec.sym__0__8141858625439628603 != sym__0__8141858625439628603 || (otherRec.sym__0___45_7931886843684217772 != sym__0___45_7931886843684217772 || (otherRec.sym__0___45_2549139954849286782 != sym__0___45_2549139954849286782 || (otherRec.sym__0___45_1691445119060855580 != sym__0___45_1691445119060855580 || (otherRec.sym__0__7474331622035256461 != sym__0__7474331622035256461 || (otherRec.sym__0___45_667953329600979866 != sym__0___45_667953329600979866 || (otherRec.sym__0___45_3035057609626888019 != sym__0___45_3035057609626888019 || (otherRec.sym__0___45_8476599677752189563 != sym__0___45_8476599677752189563 || (otherRec.sym__0___45_6389391189957387661 != sym__0___45_6389391189957387661 || (otherRec.sym__0___45_6486695610681891724 != sym__0___45_6486695610681891724 || (otherRec.sym__0__4796994603556539905 != sym__0__4796994603556539905 || (otherRec.sym__0___45_6306286879286504951 != sym__0___45_6306286879286504951 || (otherRec.sym__0___45_922796240211516024 != sym__0___45_922796240211516024 || (otherRec.sym__0__2810436566368623008 != sym__0__2810436566368623008 || (otherRec.sym__0__7272995257348976042 != sym__0__7272995257348976042 || (otherRec.sym__0__1928421907625115531 != sym__0__1928421907625115531 || (otherRec.sym__0__6254739572024865371 != sym__0__6254739572024865371 || (otherRec.sym__0___45_5257913184343802104 != sym__0___45_5257913184343802104 || (otherRec.sym__0___45_1520289822717538230 != sym__0___45_1520289822717538230 || (otherRec.sym__0___45_8628415396103686184 != sym__0___45_8628415396103686184 || (otherRec.sym__0__2109492732871942412 != sym__0__2109492732871942412 || (otherRec.sym__0__5385658520341277382 != sym__0__5385658520341277382 || (otherRec.sym__0__3660583386293997969 != sym__0__3660583386293997969 || otherRec.sym__0___45_3013711856665730696 != sym__0___45_3013711856665730696)))))))))))))))))))))))))))))))))))))))))))))))));
  }
  unsigned sym__0___45_531840894949671910;
  fluidb_string<25> sym__0___45_7594568260455252811;
  fluidb_string<40> sym__0___45_4224396157642132841;
  fluidb_string<16> sym__0___45_5121813103072643223;
  fluidb_string<16> sym__0__3627274254091843899;
  fluidb_string<13> sym__0___45_519289659968682554;
  fluidb_string<15> sym__0__5824930074457018933;
  unsigned sym__0__8300140134385342025;
  int sym__0___45_4363113810210080717;
  unsigned sym__0___45_2180998471546424549;
  unsigned sym__0___45_591129746765413155;
  unsigned sym__0___45_4416720451126861422;
  unsigned sym__0___45_2100514126469912481;
  fluidb_string<21> sym__0__3750234095707159570;
  unsigned sym__0___45_7960421939889289288;
  fluidb_string<10> sym__0___45_8655770192480484197;
  unsigned sym__0__2072590499357086155;
  double sym__0__8268830136148095561;
  unsigned sym__0___45_678210870537240385;
  double sym__0__6112270341236569873;
  unsigned sym__0__8598037934431251909;
  unsigned sym__0__5291402561130019774;
  double sym__0___45_7851524774395097220;
  fluidb_string<13> sym__0__1291698872846441412;
  unsigned sym__0__8986418791032324453;
  fluidb_string<18> sym__0__2167360253537002837;
  fluidb_string<9> sym__0__8141858625439628603;
  fluidb_string<9> sym__0___45_7931886843684217772;
  unsigned sym__0___45_2549139954849286782;
  unsigned sym__0___45_1691445119060855580;
  fluidb_string<7> sym__0__7474331622035256461;
  unsigned sym__0___45_667953329600979866;
  unsigned sym__0___45_3035057609626888019;
  unsigned sym__0___45_8476599677752189563;
  unsigned sym__0___45_6389391189957387661;
  unsigned sym__0___45_6486695610681891724;
  fluidb_string<15> sym__0__4796994603556539905;
  fluidb_string<2> sym__0___45_6306286879286504951;
  fluidb_string<2> sym__0___45_922796240211516024;
  fluidb_string<2> sym__0__2810436566368623008;
  fluidb_string<2> sym__0__7272995257348976042;
  unsigned sym__0__1928421907625115531;
  fluidb_string<55> sym__0__6254739572024865371;
  fluidb_string<25> sym__0___45_5257913184343802104;
  fluidb_string<7> sym__0___45_1520289822717538230;
  fluidb_string<10> sym__0___45_8628415396103686184;
  fluidb_string<11> sym__0__2109492732871942412;
  fluidb_string<25> sym__0__5385658520341277382;
  unsigned sym__0__3660583386293997969;
  fluidb_string<10> sym__0___45_3013711856665730696;
 private:
};


class Record6 {
 public:
  Record6(unsigned __sym__0___45_7574074018531922998, int __sym__0__1125464382786937920, unsigned __sym__0___45_8257174981563598792, unsigned __sym__0__957746932829998382, unsigned __sym__0__934137931677987637, unsigned __sym__0___45_7332894783442362324, fluidb_string<21> __sym__0__8974811218372806325, unsigned __sym__0___45_5217562530132451785, fluidb_string<10> __sym__0__7851147553396318904, unsigned __sym__0___45_4975505511391694456, double __sym__0___45_7249986409969561654, unsigned __sym__0__4671626969570181580, double __sym__0___45_3666121704283105054, unsigned __sym__0__5495011930072844518, unsigned __sym__0___45_4423447118092167055, double __sym__0___45_1608082021099887893, fluidb_string<13> __sym__0__1584187396639360899) : sym__0___45_7574074018531922998(__sym__0___45_7574074018531922998), sym__0__1125464382786937920(__sym__0__1125464382786937920), sym__0___45_8257174981563598792(__sym__0___45_8257174981563598792), sym__0__957746932829998382(__sym__0__957746932829998382), sym__0__934137931677987637(__sym__0__934137931677987637), sym__0___45_7332894783442362324(__sym__0___45_7332894783442362324), sym__0__8974811218372806325(__sym__0__8974811218372806325), sym__0___45_5217562530132451785(__sym__0___45_5217562530132451785), sym__0__7851147553396318904(__sym__0__7851147553396318904), sym__0___45_4975505511391694456(__sym__0___45_4975505511391694456), sym__0___45_7249986409969561654(__sym__0___45_7249986409969561654), sym__0__4671626969570181580(__sym__0__4671626969570181580), sym__0___45_3666121704283105054(__sym__0___45_3666121704283105054), sym__0__5495011930072844518(__sym__0__5495011930072844518), sym__0___45_4423447118092167055(__sym__0___45_4423447118092167055), sym__0___45_1608082021099887893(__sym__0___45_1608082021099887893), sym__0__1584187396639360899(__sym__0__1584187396639360899)
  {
  }
  Record6() 
  {
  }
  std::string show() const{
    std::stringstream o;
    o << sym__0___45_7574074018531922998 << " | " << sym__0__1125464382786937920 << " | " << sym__0___45_8257174981563598792 << " | " << sym__0__957746932829998382 << " | " << sym__0__934137931677987637 << " | " << sym__0___45_7332894783442362324 << " | " << arrToString(sym__0__8974811218372806325) << " | " << sym__0___45_5217562530132451785 << " | " << arrToString(sym__0__7851147553396318904) << " | " << sym__0___45_4975505511391694456 << " | " << sym__0___45_7249986409969561654 << " | " << sym__0__4671626969570181580 << " | " << sym__0___45_3666121704283105054 << " | " << sym__0__5495011930072844518 << " | " << sym__0___45_4423447118092167055 << " | " << sym__0___45_1608082021099887893 << " | " << arrToString(sym__0__1584187396639360899);
    return o.str();
  }
  bool operator <(const Record6& otherRec) const{
    return (otherRec.sym__0___45_7574074018531922998 < sym__0___45_7574074018531922998 && (otherRec.sym__0__1125464382786937920 < sym__0__1125464382786937920 && (otherRec.sym__0___45_8257174981563598792 < sym__0___45_8257174981563598792 && (otherRec.sym__0__957746932829998382 < sym__0__957746932829998382 && (otherRec.sym__0__934137931677987637 < sym__0__934137931677987637 && (otherRec.sym__0___45_7332894783442362324 < sym__0___45_7332894783442362324 && (otherRec.sym__0__8974811218372806325 < sym__0__8974811218372806325 && (otherRec.sym__0___45_5217562530132451785 < sym__0___45_5217562530132451785 && (otherRec.sym__0__7851147553396318904 < sym__0__7851147553396318904 && (otherRec.sym__0___45_4975505511391694456 < sym__0___45_4975505511391694456 && (otherRec.sym__0___45_7249986409969561654 < sym__0___45_7249986409969561654 && (otherRec.sym__0__4671626969570181580 < sym__0__4671626969570181580 && (otherRec.sym__0___45_3666121704283105054 < sym__0___45_3666121704283105054 && (otherRec.sym__0__5495011930072844518 < sym__0__5495011930072844518 && (otherRec.sym__0___45_4423447118092167055 < sym__0___45_4423447118092167055 && (otherRec.sym__0___45_1608082021099887893 < sym__0___45_1608082021099887893 && otherRec.sym__0__1584187396639360899 < sym__0__1584187396639360899))))))))))))))));
  }
  bool operator ==(const Record6& otherRec) const{
    return (otherRec.sym__0___45_7574074018531922998 == sym__0___45_7574074018531922998 && (otherRec.sym__0__1125464382786937920 == sym__0__1125464382786937920 && (otherRec.sym__0___45_8257174981563598792 == sym__0___45_8257174981563598792 && (otherRec.sym__0__957746932829998382 == sym__0__957746932829998382 && (otherRec.sym__0__934137931677987637 == sym__0__934137931677987637 && (otherRec.sym__0___45_7332894783442362324 == sym__0___45_7332894783442362324 && (otherRec.sym__0__8974811218372806325 == sym__0__8974811218372806325 && (otherRec.sym__0___45_5217562530132451785 == sym__0___45_5217562530132451785 && (otherRec.sym__0__7851147553396318904 == sym__0__7851147553396318904 && (otherRec.sym__0___45_4975505511391694456 == sym__0___45_4975505511391694456 && (otherRec.sym__0___45_7249986409969561654 == sym__0___45_7249986409969561654 && (otherRec.sym__0__4671626969570181580 == sym__0__4671626969570181580 && (otherRec.sym__0___45_3666121704283105054 == sym__0___45_3666121704283105054 && (otherRec.sym__0__5495011930072844518 == sym__0__5495011930072844518 && (otherRec.sym__0___45_4423447118092167055 == sym__0___45_4423447118092167055 && (otherRec.sym__0___45_1608082021099887893 == sym__0___45_1608082021099887893 && otherRec.sym__0__1584187396639360899 == sym__0__1584187396639360899))))))))))))))));
  }
  bool operator !=(const Record6& otherRec) const{
    return (otherRec.sym__0___45_7574074018531922998 != sym__0___45_7574074018531922998 || (otherRec.sym__0__1125464382786937920 != sym__0__1125464382786937920 || (otherRec.sym__0___45_8257174981563598792 != sym__0___45_8257174981563598792 || (otherRec.sym__0__957746932829998382 != sym__0__957746932829998382 || (otherRec.sym__0__934137931677987637 != sym__0__934137931677987637 || (otherRec.sym__0___45_7332894783442362324 != sym__0___45_7332894783442362324 || (otherRec.sym__0__8974811218372806325 != sym__0__8974811218372806325 || (otherRec.sym__0___45_5217562530132451785 != sym__0___45_5217562530132451785 || (otherRec.sym__0__7851147553396318904 != sym__0__7851147553396318904 || (otherRec.sym__0___45_4975505511391694456 != sym__0___45_4975505511391694456 || (otherRec.sym__0___45_7249986409969561654 != sym__0___45_7249986409969561654 || (otherRec.sym__0__4671626969570181580 != sym__0__4671626969570181580 || (otherRec.sym__0___45_3666121704283105054 != sym__0___45_3666121704283105054 || (otherRec.sym__0__5495011930072844518 != sym__0__5495011930072844518 || (otherRec.sym__0___45_4423447118092167055 != sym__0___45_4423447118092167055 || (otherRec.sym__0___45_1608082021099887893 != sym__0___45_1608082021099887893 || otherRec.sym__0__1584187396639360899 != sym__0__1584187396639360899))))))))))))))));
  }
  unsigned sym__0___45_7574074018531922998;
  int sym__0__1125464382786937920;
  unsigned sym__0___45_8257174981563598792;
  unsigned sym__0__957746932829998382;
  unsigned sym__0__934137931677987637;
  unsigned sym__0___45_7332894783442362324;
  fluidb_string<21> sym__0__8974811218372806325;
  unsigned sym__0___45_5217562530132451785;
  fluidb_string<10> sym__0__7851147553396318904;
  unsigned sym__0___45_4975505511391694456;
  double sym__0___45_7249986409969561654;
  unsigned sym__0__4671626969570181580;
  double sym__0___45_3666121704283105054;
  unsigned sym__0__5495011930072844518;
  unsigned sym__0___45_4423447118092167055;
  double sym__0___45_1608082021099887893;
  fluidb_string<13> sym__0__1584187396639360899;
 private:
};


class Record9 {
 public:
  Record9(unsigned __sortElem0) : sortElem0(__sortElem0)
  {
  }
  Record9() 
  {
  }
  std::string show() const{
    std::stringstream o;
    o << sortElem0;
    return o.str();
  }
  bool operator <(const Record9& otherRec) const{
    return otherRec.sortElem0 < sortElem0;
  }
  bool operator ==(const Record9& otherRec) const{
    return otherRec.sortElem0 == sortElem0;
  }
  bool operator !=(const Record9& otherRec) const{
    return otherRec.sortElem0 != sortElem0;
  }
  unsigned sortElem0;
 private:
};


class Record16 {
 public:
  Record16(unsigned __sym__0__2037864888707786451, fluidb_string<18> __sym__0__8533656712666151747, fluidb_string<9> __sym__0__646314041574508429, fluidb_string<9> __sym__0__6064137978327902054, unsigned __sym__0__3754157776500852496, unsigned __sym__0__6284345160241949046, fluidb_string<7> __sym__0___45_773692805971570325, unsigned __sym__0___45_8399474032083007524, unsigned __sym__0___45_2038947427357444789, unsigned __sym__0__6071994954612827827, unsigned __sym__0__7742515703067448213, unsigned __sym__0__5201219213304227654, fluidb_string<15> __sym__0___45_5896625796158057241, fluidb_string<2> __sym__0___45_1108504872221226081, fluidb_string<2> __sym__0__1055103969674359346, fluidb_string<2> __sym__0__9115626546918942554, fluidb_string<2> __sym__0___45_6850413444013389848) : sym__0__2037864888707786451(__sym__0__2037864888707786451), sym__0__8533656712666151747(__sym__0__8533656712666151747), sym__0__646314041574508429(__sym__0__646314041574508429), sym__0__6064137978327902054(__sym__0__6064137978327902054), sym__0__3754157776500852496(__sym__0__3754157776500852496), sym__0__6284345160241949046(__sym__0__6284345160241949046), sym__0___45_773692805971570325(__sym__0___45_773692805971570325), sym__0___45_8399474032083007524(__sym__0___45_8399474032083007524), sym__0___45_2038947427357444789(__sym__0___45_2038947427357444789), sym__0__6071994954612827827(__sym__0__6071994954612827827), sym__0__7742515703067448213(__sym__0__7742515703067448213), sym__0__5201219213304227654(__sym__0__5201219213304227654), sym__0___45_5896625796158057241(__sym__0___45_5896625796158057241), sym__0___45_1108504872221226081(__sym__0___45_1108504872221226081), sym__0__1055103969674359346(__sym__0__1055103969674359346), sym__0__9115626546918942554(__sym__0__9115626546918942554), sym__0___45_6850413444013389848(__sym__0___45_6850413444013389848)
  {
  }
  Record16() 
  {
  }
  std::string show() const{
    std::stringstream o;
    o << sym__0__2037864888707786451 << " | " << arrToString(sym__0__8533656712666151747) << " | " << arrToString(sym__0__646314041574508429) << " | " << arrToString(sym__0__6064137978327902054) << " | " << sym__0__3754157776500852496 << " | " << sym__0__6284345160241949046 << " | " << arrToString(sym__0___45_773692805971570325) << " | " << sym__0___45_8399474032083007524 << " | " << sym__0___45_2038947427357444789 << " | " << sym__0__6071994954612827827 << " | " << sym__0__7742515703067448213 << " | " << sym__0__5201219213304227654 << " | " << arrToString(sym__0___45_5896625796158057241) << " | " << arrToString(sym__0___45_1108504872221226081) << " | " << arrToString(sym__0__1055103969674359346) << " | " << arrToString(sym__0__9115626546918942554) << " | " << arrToString(sym__0___45_6850413444013389848);
    return o.str();
  }
  bool operator <(const Record16& otherRec) const{
    return (otherRec.sym__0__2037864888707786451 < sym__0__2037864888707786451 && (otherRec.sym__0__8533656712666151747 < sym__0__8533656712666151747 && (otherRec.sym__0__646314041574508429 < sym__0__646314041574508429 && (otherRec.sym__0__6064137978327902054 < sym__0__6064137978327902054 && (otherRec.sym__0__3754157776500852496 < sym__0__3754157776500852496 && (otherRec.sym__0__6284345160241949046 < sym__0__6284345160241949046 && (otherRec.sym__0___45_773692805971570325 < sym__0___45_773692805971570325 && (otherRec.sym__0___45_8399474032083007524 < sym__0___45_8399474032083007524 && (otherRec.sym__0___45_2038947427357444789 < sym__0___45_2038947427357444789 && (otherRec.sym__0__6071994954612827827 < sym__0__6071994954612827827 && (otherRec.sym__0__7742515703067448213 < sym__0__7742515703067448213 && (otherRec.sym__0__5201219213304227654 < sym__0__5201219213304227654 && (otherRec.sym__0___45_5896625796158057241 < sym__0___45_5896625796158057241 && (otherRec.sym__0___45_1108504872221226081 < sym__0___45_1108504872221226081 && (otherRec.sym__0__1055103969674359346 < sym__0__1055103969674359346 && (otherRec.sym__0__9115626546918942554 < sym__0__9115626546918942554 && otherRec.sym__0___45_6850413444013389848 < sym__0___45_6850413444013389848))))))))))))))));
  }
  bool operator ==(const Record16& otherRec) const{
    return (otherRec.sym__0__2037864888707786451 == sym__0__2037864888707786451 && (otherRec.sym__0__8533656712666151747 == sym__0__8533656712666151747 && (otherRec.sym__0__646314041574508429 == sym__0__646314041574508429 && (otherRec.sym__0__6064137978327902054 == sym__0__6064137978327902054 && (otherRec.sym__0__3754157776500852496 == sym__0__3754157776500852496 && (otherRec.sym__0__6284345160241949046 == sym__0__6284345160241949046 && (otherRec.sym__0___45_773692805971570325 == sym__0___45_773692805971570325 && (otherRec.sym__0___45_8399474032083007524 == sym__0___45_8399474032083007524 && (otherRec.sym__0___45_2038947427357444789 == sym__0___45_2038947427357444789 && (otherRec.sym__0__6071994954612827827 == sym__0__6071994954612827827 && (otherRec.sym__0__7742515703067448213 == sym__0__7742515703067448213 && (otherRec.sym__0__5201219213304227654 == sym__0__5201219213304227654 && (otherRec.sym__0___45_5896625796158057241 == sym__0___45_5896625796158057241 && (otherRec.sym__0___45_1108504872221226081 == sym__0___45_1108504872221226081 && (otherRec.sym__0__1055103969674359346 == sym__0__1055103969674359346 && (otherRec.sym__0__9115626546918942554 == sym__0__9115626546918942554 && otherRec.sym__0___45_6850413444013389848 == sym__0___45_6850413444013389848))))))))))))))));
  }
  bool operator !=(const Record16& otherRec) const{
    return (otherRec.sym__0__2037864888707786451 != sym__0__2037864888707786451 || (otherRec.sym__0__8533656712666151747 != sym__0__8533656712666151747 || (otherRec.sym__0__646314041574508429 != sym__0__646314041574508429 || (otherRec.sym__0__6064137978327902054 != sym__0__6064137978327902054 || (otherRec.sym__0__3754157776500852496 != sym__0__3754157776500852496 || (otherRec.sym__0__6284345160241949046 != sym__0__6284345160241949046 || (otherRec.sym__0___45_773692805971570325 != sym__0___45_773692805971570325 || (otherRec.sym__0___45_8399474032083007524 != sym__0___45_8399474032083007524 || (otherRec.sym__0___45_2038947427357444789 != sym__0___45_2038947427357444789 || (otherRec.sym__0__6071994954612827827 != sym__0__6071994954612827827 || (otherRec.sym__0__7742515703067448213 != sym__0__7742515703067448213 || (otherRec.sym__0__5201219213304227654 != sym__0__5201219213304227654 || (otherRec.sym__0___45_5896625796158057241 != sym__0___45_5896625796158057241 || (otherRec.sym__0___45_1108504872221226081 != sym__0___45_1108504872221226081 || (otherRec.sym__0__1055103969674359346 != sym__0__1055103969674359346 || (otherRec.sym__0__9115626546918942554 != sym__0__9115626546918942554 || otherRec.sym__0___45_6850413444013389848 != sym__0___45_6850413444013389848))))))))))))))));
  }
  unsigned sym__0__2037864888707786451;
  fluidb_string<18> sym__0__8533656712666151747;
  fluidb_string<9> sym__0__646314041574508429;
  fluidb_string<9> sym__0__6064137978327902054;
  unsigned sym__0__3754157776500852496;
  unsigned sym__0__6284345160241949046;
  fluidb_string<7> sym__0___45_773692805971570325;
  unsigned sym__0___45_8399474032083007524;
  unsigned sym__0___45_2038947427357444789;
  unsigned sym__0__6071994954612827827;
  unsigned sym__0__7742515703067448213;
  unsigned sym__0__5201219213304227654;
  fluidb_string<15> sym__0___45_5896625796158057241;
  fluidb_string<2> sym__0___45_1108504872221226081;
  fluidb_string<2> sym__0__1055103969674359346;
  fluidb_string<2> sym__0__9115626546918942554;
  fluidb_string<2> sym__0___45_6850413444013389848;
 private:
};


class Record7 {
 public:
  Record7(unsigned __sym__0___45_3155469710477025854, fluidb_string<25> __sym__0__8766469660263769977, fluidb_string<40> __sym__0___45_6144354271442381233, fluidb_string<16> __sym__0__2727208471230034133, fluidb_string<16> __sym__0__7788957850431024971, fluidb_string<13> __sym__0__5632195630113750390, fluidb_string<15> __sym__0__4926275076645314297, unsigned __sym__0___45_7137791472644812299, int __sym__0___45_2813699981773424797, unsigned __sym__0___45_6175277399440513685, unsigned __sym__0__1409704747327734913, unsigned __sym__0__451691505510288026, unsigned __sym__0___45_4966514451884084393, fluidb_string<21> __sym__0___45_284572256646387942, unsigned __sym__0__68241557041125844, fluidb_string<10> __sym__0__928096461745559787, unsigned __sym__0___45_563877423123364261, double __sym__0__6404443559459687925, unsigned __sym__0__6414047109737507703, double __sym__0__6077218524359747965, unsigned __sym__0__7270344143352673993, unsigned __sym__0___45_3670951109586063922, double __sym__0__9136521336260351024, fluidb_string<13> __sym__0___45_8729274925847332424) : sym__0___45_3155469710477025854(__sym__0___45_3155469710477025854), sym__0__8766469660263769977(__sym__0__8766469660263769977), sym__0___45_6144354271442381233(__sym__0___45_6144354271442381233), sym__0__2727208471230034133(__sym__0__2727208471230034133), sym__0__7788957850431024971(__sym__0__7788957850431024971), sym__0__5632195630113750390(__sym__0__5632195630113750390), sym__0__4926275076645314297(__sym__0__4926275076645314297), sym__0___45_7137791472644812299(__sym__0___45_7137791472644812299), sym__0___45_2813699981773424797(__sym__0___45_2813699981773424797), sym__0___45_6175277399440513685(__sym__0___45_6175277399440513685), sym__0__1409704747327734913(__sym__0__1409704747327734913), sym__0__451691505510288026(__sym__0__451691505510288026), sym__0___45_4966514451884084393(__sym__0___45_4966514451884084393), sym__0___45_284572256646387942(__sym__0___45_284572256646387942), sym__0__68241557041125844(__sym__0__68241557041125844), sym__0__928096461745559787(__sym__0__928096461745559787), sym__0___45_563877423123364261(__sym__0___45_563877423123364261), sym__0__6404443559459687925(__sym__0__6404443559459687925), sym__0__6414047109737507703(__sym__0__6414047109737507703), sym__0__6077218524359747965(__sym__0__6077218524359747965), sym__0__7270344143352673993(__sym__0__7270344143352673993), sym__0___45_3670951109586063922(__sym__0___45_3670951109586063922), sym__0__9136521336260351024(__sym__0__9136521336260351024), sym__0___45_8729274925847332424(__sym__0___45_8729274925847332424)
  {
  }
  Record7() 
  {
  }
  std::string show() const{
    std::stringstream o;
    o << sym__0___45_3155469710477025854 << " | " << arrToString(sym__0__8766469660263769977) << " | " << arrToString(sym__0___45_6144354271442381233) << " | " << arrToString(sym__0__2727208471230034133) << " | " << arrToString(sym__0__7788957850431024971) << " | " << arrToString(sym__0__5632195630113750390) << " | " << arrToString(sym__0__4926275076645314297) << " | " << sym__0___45_7137791472644812299 << " | " << sym__0___45_2813699981773424797 << " | " << sym__0___45_6175277399440513685 << " | " << sym__0__1409704747327734913 << " | " << sym__0__451691505510288026 << " | " << sym__0___45_4966514451884084393 << " | " << arrToString(sym__0___45_284572256646387942) << " | " << sym__0__68241557041125844 << " | " << arrToString(sym__0__928096461745559787) << " | " << sym__0___45_563877423123364261 << " | " << sym__0__6404443559459687925 << " | " << sym__0__6414047109737507703 << " | " << sym__0__6077218524359747965 << " | " << sym__0__7270344143352673993 << " | " << sym__0___45_3670951109586063922 << " | " << sym__0__9136521336260351024 << " | " << arrToString(sym__0___45_8729274925847332424);
    return o.str();
  }
  bool operator <(const Record7& otherRec) const{
    return (otherRec.sym__0___45_3155469710477025854 < sym__0___45_3155469710477025854 && (otherRec.sym__0__8766469660263769977 < sym__0__8766469660263769977 && (otherRec.sym__0___45_6144354271442381233 < sym__0___45_6144354271442381233 && (otherRec.sym__0__2727208471230034133 < sym__0__2727208471230034133 && (otherRec.sym__0__7788957850431024971 < sym__0__7788957850431024971 && (otherRec.sym__0__5632195630113750390 < sym__0__5632195630113750390 && (otherRec.sym__0__4926275076645314297 < sym__0__4926275076645314297 && (otherRec.sym__0___45_7137791472644812299 < sym__0___45_7137791472644812299 && (otherRec.sym__0___45_2813699981773424797 < sym__0___45_2813699981773424797 && (otherRec.sym__0___45_6175277399440513685 < sym__0___45_6175277399440513685 && (otherRec.sym__0__1409704747327734913 < sym__0__1409704747327734913 && (otherRec.sym__0__451691505510288026 < sym__0__451691505510288026 && (otherRec.sym__0___45_4966514451884084393 < sym__0___45_4966514451884084393 && (otherRec.sym__0___45_284572256646387942 < sym__0___45_284572256646387942 && (otherRec.sym__0__68241557041125844 < sym__0__68241557041125844 && (otherRec.sym__0__928096461745559787 < sym__0__928096461745559787 && (otherRec.sym__0___45_563877423123364261 < sym__0___45_563877423123364261 && (otherRec.sym__0__6404443559459687925 < sym__0__6404443559459687925 && (otherRec.sym__0__6414047109737507703 < sym__0__6414047109737507703 && (otherRec.sym__0__6077218524359747965 < sym__0__6077218524359747965 && (otherRec.sym__0__7270344143352673993 < sym__0__7270344143352673993 && (otherRec.sym__0___45_3670951109586063922 < sym__0___45_3670951109586063922 && (otherRec.sym__0__9136521336260351024 < sym__0__9136521336260351024 && otherRec.sym__0___45_8729274925847332424 < sym__0___45_8729274925847332424)))))))))))))))))))))));
  }
  bool operator ==(const Record7& otherRec) const{
    return (otherRec.sym__0___45_3155469710477025854 == sym__0___45_3155469710477025854 && (otherRec.sym__0__8766469660263769977 == sym__0__8766469660263769977 && (otherRec.sym__0___45_6144354271442381233 == sym__0___45_6144354271442381233 && (otherRec.sym__0__2727208471230034133 == sym__0__2727208471230034133 && (otherRec.sym__0__7788957850431024971 == sym__0__7788957850431024971 && (otherRec.sym__0__5632195630113750390 == sym__0__5632195630113750390 && (otherRec.sym__0__4926275076645314297 == sym__0__4926275076645314297 && (otherRec.sym__0___45_7137791472644812299 == sym__0___45_7137791472644812299 && (otherRec.sym__0___45_2813699981773424797 == sym__0___45_2813699981773424797 && (otherRec.sym__0___45_6175277399440513685 == sym__0___45_6175277399440513685 && (otherRec.sym__0__1409704747327734913 == sym__0__1409704747327734913 && (otherRec.sym__0__451691505510288026 == sym__0__451691505510288026 && (otherRec.sym__0___45_4966514451884084393 == sym__0___45_4966514451884084393 && (otherRec.sym__0___45_284572256646387942 == sym__0___45_284572256646387942 && (otherRec.sym__0__68241557041125844 == sym__0__68241557041125844 && (otherRec.sym__0__928096461745559787 == sym__0__928096461745559787 && (otherRec.sym__0___45_563877423123364261 == sym__0___45_563877423123364261 && (otherRec.sym__0__6404443559459687925 == sym__0__6404443559459687925 && (otherRec.sym__0__6414047109737507703 == sym__0__6414047109737507703 && (otherRec.sym__0__6077218524359747965 == sym__0__6077218524359747965 && (otherRec.sym__0__7270344143352673993 == sym__0__7270344143352673993 && (otherRec.sym__0___45_3670951109586063922 == sym__0___45_3670951109586063922 && (otherRec.sym__0__9136521336260351024 == sym__0__9136521336260351024 && otherRec.sym__0___45_8729274925847332424 == sym__0___45_8729274925847332424)))))))))))))))))))))));
  }
  bool operator !=(const Record7& otherRec) const{
    return (otherRec.sym__0___45_3155469710477025854 != sym__0___45_3155469710477025854 || (otherRec.sym__0__8766469660263769977 != sym__0__8766469660263769977 || (otherRec.sym__0___45_6144354271442381233 != sym__0___45_6144354271442381233 || (otherRec.sym__0__2727208471230034133 != sym__0__2727208471230034133 || (otherRec.sym__0__7788957850431024971 != sym__0__7788957850431024971 || (otherRec.sym__0__5632195630113750390 != sym__0__5632195630113750390 || (otherRec.sym__0__4926275076645314297 != sym__0__4926275076645314297 || (otherRec.sym__0___45_7137791472644812299 != sym__0___45_7137791472644812299 || (otherRec.sym__0___45_2813699981773424797 != sym__0___45_2813699981773424797 || (otherRec.sym__0___45_6175277399440513685 != sym__0___45_6175277399440513685 || (otherRec.sym__0__1409704747327734913 != sym__0__1409704747327734913 || (otherRec.sym__0__451691505510288026 != sym__0__451691505510288026 || (otherRec.sym__0___45_4966514451884084393 != sym__0___45_4966514451884084393 || (otherRec.sym__0___45_284572256646387942 != sym__0___45_284572256646387942 || (otherRec.sym__0__68241557041125844 != sym__0__68241557041125844 || (otherRec.sym__0__928096461745559787 != sym__0__928096461745559787 || (otherRec.sym__0___45_563877423123364261 != sym__0___45_563877423123364261 || (otherRec.sym__0__6404443559459687925 != sym__0__6404443559459687925 || (otherRec.sym__0__6414047109737507703 != sym__0__6414047109737507703 || (otherRec.sym__0__6077218524359747965 != sym__0__6077218524359747965 || (otherRec.sym__0__7270344143352673993 != sym__0__7270344143352673993 || (otherRec.sym__0___45_3670951109586063922 != sym__0___45_3670951109586063922 || (otherRec.sym__0__9136521336260351024 != sym__0__9136521336260351024 || otherRec.sym__0___45_8729274925847332424 != sym__0___45_8729274925847332424)))))))))))))))))))))));
  }
  unsigned sym__0___45_3155469710477025854;
  fluidb_string<25> sym__0__8766469660263769977;
  fluidb_string<40> sym__0___45_6144354271442381233;
  fluidb_string<16> sym__0__2727208471230034133;
  fluidb_string<16> sym__0__7788957850431024971;
  fluidb_string<13> sym__0__5632195630113750390;
  fluidb_string<15> sym__0__4926275076645314297;
  unsigned sym__0___45_7137791472644812299;
  int sym__0___45_2813699981773424797;
  unsigned sym__0___45_6175277399440513685;
  unsigned sym__0__1409704747327734913;
  unsigned sym__0__451691505510288026;
  unsigned sym__0___45_4966514451884084393;
  fluidb_string<21> sym__0___45_284572256646387942;
  unsigned sym__0__68241557041125844;
  fluidb_string<10> sym__0__928096461745559787;
  unsigned sym__0___45_563877423123364261;
  double sym__0__6404443559459687925;
  unsigned sym__0__6414047109737507703;
  double sym__0__6077218524359747965;
  unsigned sym__0__7270344143352673993;
  unsigned sym__0___45_3670951109586063922;
  double sym__0__9136521336260351024;
  fluidb_string<13> sym__0___45_8729274925847332424;
 private:
};


class Record5 {
 public:
  Record5(unsigned __sym__0___45_6115530667314534627, fluidb_string<25> __sym__0___45_7270672493020807758, fluidb_string<40> __sym__0___45_304981752148764540, fluidb_string<16> __sym__0__3854231876403755558, fluidb_string<16> __sym__0___45_4362638061872192936, fluidb_string<13> __sym__0__5448005239976098329, fluidb_string<15> __sym__0___45_5552695260950044366) : sym__0___45_6115530667314534627(__sym__0___45_6115530667314534627), sym__0___45_7270672493020807758(__sym__0___45_7270672493020807758), sym__0___45_304981752148764540(__sym__0___45_304981752148764540), sym__0__3854231876403755558(__sym__0__3854231876403755558), sym__0___45_4362638061872192936(__sym__0___45_4362638061872192936), sym__0__5448005239976098329(__sym__0__5448005239976098329), sym__0___45_5552695260950044366(__sym__0___45_5552695260950044366)
  {
  }
  Record5() 
  {
  }
  std::string show() const{
    std::stringstream o;
    o << sym__0___45_6115530667314534627 << " | " << arrToString(sym__0___45_7270672493020807758) << " | " << arrToString(sym__0___45_304981752148764540) << " | " << arrToString(sym__0__3854231876403755558) << " | " << arrToString(sym__0___45_4362638061872192936) << " | " << arrToString(sym__0__5448005239976098329) << " | " << arrToString(sym__0___45_5552695260950044366);
    return o.str();
  }
  bool operator <(const Record5& otherRec) const{
    return (otherRec.sym__0___45_6115530667314534627 < sym__0___45_6115530667314534627 && (otherRec.sym__0___45_7270672493020807758 < sym__0___45_7270672493020807758 && (otherRec.sym__0___45_304981752148764540 < sym__0___45_304981752148764540 && (otherRec.sym__0__3854231876403755558 < sym__0__3854231876403755558 && (otherRec.sym__0___45_4362638061872192936 < sym__0___45_4362638061872192936 && (otherRec.sym__0__5448005239976098329 < sym__0__5448005239976098329 && otherRec.sym__0___45_5552695260950044366 < sym__0___45_5552695260950044366))))));
  }
  bool operator ==(const Record5& otherRec) const{
    return (otherRec.sym__0___45_6115530667314534627 == sym__0___45_6115530667314534627 && (otherRec.sym__0___45_7270672493020807758 == sym__0___45_7270672493020807758 && (otherRec.sym__0___45_304981752148764540 == sym__0___45_304981752148764540 && (otherRec.sym__0__3854231876403755558 == sym__0__3854231876403755558 && (otherRec.sym__0___45_4362638061872192936 == sym__0___45_4362638061872192936 && (otherRec.sym__0__5448005239976098329 == sym__0__5448005239976098329 && otherRec.sym__0___45_5552695260950044366 == sym__0___45_5552695260950044366))))));
  }
  bool operator !=(const Record5& otherRec) const{
    return (otherRec.sym__0___45_6115530667314534627 != sym__0___45_6115530667314534627 || (otherRec.sym__0___45_7270672493020807758 != sym__0___45_7270672493020807758 || (otherRec.sym__0___45_304981752148764540 != sym__0___45_304981752148764540 || (otherRec.sym__0__3854231876403755558 != sym__0__3854231876403755558 || (otherRec.sym__0___45_4362638061872192936 != sym__0___45_4362638061872192936 || (otherRec.sym__0__5448005239976098329 != sym__0__5448005239976098329 || otherRec.sym__0___45_5552695260950044366 != sym__0___45_5552695260950044366))))));
  }
  unsigned sym__0___45_6115530667314534627;
  fluidb_string<25> sym__0___45_7270672493020807758;
  fluidb_string<40> sym__0___45_304981752148764540;
  fluidb_string<16> sym__0__3854231876403755558;
  fluidb_string<16> sym__0___45_4362638061872192936;
  fluidb_string<13> sym__0__5448005239976098329;
  fluidb_string<15> sym__0___45_5552695260950044366;
 private:
};


class Record1 {
 public:
  Record1(unsigned __sym__0___45_9117911789383871612, fluidb_string<25> __sym__0___45_1547112764757372609, fluidb_string<40> __sym__0___45_8663957751614366179, fluidb_string<16> __sym__0__1466641425010216931, fluidb_string<16> __sym__0__3672857626658041553, fluidb_string<13> __sym__0___45_3362440237381592032, fluidb_string<15> __sym__0___45_6631364176934158657) : sym__0___45_9117911789383871612(__sym__0___45_9117911789383871612), sym__0___45_1547112764757372609(__sym__0___45_1547112764757372609), sym__0___45_8663957751614366179(__sym__0___45_8663957751614366179), sym__0__1466641425010216931(__sym__0__1466641425010216931), sym__0__3672857626658041553(__sym__0__3672857626658041553), sym__0___45_3362440237381592032(__sym__0___45_3362440237381592032), sym__0___45_6631364176934158657(__sym__0___45_6631364176934158657)
  {
  }
  Record1() 
  {
  }
  std::string show() const{
    std::stringstream o;
    o << sym__0___45_9117911789383871612 << " | " << arrToString(sym__0___45_1547112764757372609) << " | " << arrToString(sym__0___45_8663957751614366179) << " | " << arrToString(sym__0__1466641425010216931) << " | " << arrToString(sym__0__3672857626658041553) << " | " << arrToString(sym__0___45_3362440237381592032) << " | " << arrToString(sym__0___45_6631364176934158657);
    return o.str();
  }
  bool operator <(const Record1& otherRec) const{
    return (otherRec.sym__0___45_9117911789383871612 < sym__0___45_9117911789383871612 && (otherRec.sym__0___45_1547112764757372609 < sym__0___45_1547112764757372609 && (otherRec.sym__0___45_8663957751614366179 < sym__0___45_8663957751614366179 && (otherRec.sym__0__1466641425010216931 < sym__0__1466641425010216931 && (otherRec.sym__0__3672857626658041553 < sym__0__3672857626658041553 && (otherRec.sym__0___45_3362440237381592032 < sym__0___45_3362440237381592032 && otherRec.sym__0___45_6631364176934158657 < sym__0___45_6631364176934158657))))));
  }
  bool operator ==(const Record1& otherRec) const{
    return (otherRec.sym__0___45_9117911789383871612 == sym__0___45_9117911789383871612 && (otherRec.sym__0___45_1547112764757372609 == sym__0___45_1547112764757372609 && (otherRec.sym__0___45_8663957751614366179 == sym__0___45_8663957751614366179 && (otherRec.sym__0__1466641425010216931 == sym__0__1466641425010216931 && (otherRec.sym__0__3672857626658041553 == sym__0__3672857626658041553 && (otherRec.sym__0___45_3362440237381592032 == sym__0___45_3362440237381592032 && otherRec.sym__0___45_6631364176934158657 == sym__0___45_6631364176934158657))))));
  }
  bool operator !=(const Record1& otherRec) const{
    return (otherRec.sym__0___45_9117911789383871612 != sym__0___45_9117911789383871612 || (otherRec.sym__0___45_1547112764757372609 != sym__0___45_1547112764757372609 || (otherRec.sym__0___45_8663957751614366179 != sym__0___45_8663957751614366179 || (otherRec.sym__0__1466641425010216931 != sym__0__1466641425010216931 || (otherRec.sym__0__3672857626658041553 != sym__0__3672857626658041553 || (otherRec.sym__0___45_3362440237381592032 != sym__0___45_3362440237381592032 || otherRec.sym__0___45_6631364176934158657 != sym__0___45_6631364176934158657))))));
  }
  unsigned sym__0___45_9117911789383871612;
  fluidb_string<25> sym__0___45_1547112764757372609;
  fluidb_string<40> sym__0___45_8663957751614366179;
  fluidb_string<16> sym__0__1466641425010216931;
  fluidb_string<16> sym__0__3672857626658041553;
  fluidb_string<13> sym__0___45_3362440237381592032;
  fluidb_string<15> sym__0___45_6631364176934158657;
 private:
};


class Record17 {
 public:
  Record17(unsigned __sym__0___45_395632927433559406, fluidb_string<25> __sym__0__3500080010252534473, fluidb_string<40> __sym__0__2800931817820227903, fluidb_string<16> __sym__0__7557617225319929765, fluidb_string<16> __sym__0___45_3980497182018067045, fluidb_string<13> __sym__0__2235173403257069670, fluidb_string<15> __sym__0___45_6641253057665067959, unsigned __sym__0__1255259528474633157, int __sym__0___45_4404182672923859309, unsigned __sym__0___45_614365468487006021, unsigned __sym__0__5021292656532353329, unsigned __sym__0__4343635027495243018, unsigned __sym__0___45_3654849337237924089, fluidb_string<21> __sym__0__6124017931208230794, unsigned __sym__0__2631968767089293636, fluidb_string<10> __sym__0__8161280318223951419, unsigned __sym__0__6646444558267925131, double __sym__0___45_371840055694522427, unsigned __sym__0__1207871997281537063, double __sym__0___45_8251624728007457683, unsigned __sym__0___45_1977777050929051591, unsigned __sym__0__5291527997285077246, double __sym__0__1945446523025649920, fluidb_string<13> __sym__0__8649969499362766248, unsigned __sym__0___45_9152772373621530983, fluidb_string<18> __sym__0__4661399151085104809, fluidb_string<9> __sym__0___45_2328336135844765285, fluidb_string<9> __sym__0__7204907144595482904, unsigned __sym__0__6947146092885793306, unsigned __sym__0___45_4879039772515408504, fluidb_string<7> __sym__0___45_3380765295385793791, unsigned __sym__0__1357424853380084934, unsigned __sym__0__1623525206981402081, unsigned __sym__0___45_7738248275094052359, unsigned __sym__0___45_5520726833947609389, unsigned __sym__0__7046675501704695032, fluidb_string<15> __sym__0___45_6418041259452967043, fluidb_string<2> __sym__0___45_1891834319792150395, fluidb_string<2> __sym__0__8613816579654205812, fluidb_string<2> __sym__0__4752565720665066828, fluidb_string<2> __sym__0___45_4077601550282544382) : sym__0___45_395632927433559406(__sym__0___45_395632927433559406), sym__0__3500080010252534473(__sym__0__3500080010252534473), sym__0__2800931817820227903(__sym__0__2800931817820227903), sym__0__7557617225319929765(__sym__0__7557617225319929765), sym__0___45_3980497182018067045(__sym__0___45_3980497182018067045), sym__0__2235173403257069670(__sym__0__2235173403257069670), sym__0___45_6641253057665067959(__sym__0___45_6641253057665067959), sym__0__1255259528474633157(__sym__0__1255259528474633157), sym__0___45_4404182672923859309(__sym__0___45_4404182672923859309), sym__0___45_614365468487006021(__sym__0___45_614365468487006021), sym__0__5021292656532353329(__sym__0__5021292656532353329), sym__0__4343635027495243018(__sym__0__4343635027495243018), sym__0___45_3654849337237924089(__sym__0___45_3654849337237924089), sym__0__6124017931208230794(__sym__0__6124017931208230794), sym__0__2631968767089293636(__sym__0__2631968767089293636), sym__0__8161280318223951419(__sym__0__8161280318223951419), sym__0__6646444558267925131(__sym__0__6646444558267925131), sym__0___45_371840055694522427(__sym__0___45_371840055694522427), sym__0__1207871997281537063(__sym__0__1207871997281537063), sym__0___45_8251624728007457683(__sym__0___45_8251624728007457683), sym__0___45_1977777050929051591(__sym__0___45_1977777050929051591), sym__0__5291527997285077246(__sym__0__5291527997285077246), sym__0__1945446523025649920(__sym__0__1945446523025649920), sym__0__8649969499362766248(__sym__0__8649969499362766248), sym__0___45_9152772373621530983(__sym__0___45_9152772373621530983), sym__0__4661399151085104809(__sym__0__4661399151085104809), sym__0___45_2328336135844765285(__sym__0___45_2328336135844765285), sym__0__7204907144595482904(__sym__0__7204907144595482904), sym__0__6947146092885793306(__sym__0__6947146092885793306), sym__0___45_4879039772515408504(__sym__0___45_4879039772515408504), sym__0___45_3380765295385793791(__sym__0___45_3380765295385793791), sym__0__1357424853380084934(__sym__0__1357424853380084934), sym__0__1623525206981402081(__sym__0__1623525206981402081), sym__0___45_7738248275094052359(__sym__0___45_7738248275094052359), sym__0___45_5520726833947609389(__sym__0___45_5520726833947609389), sym__0__7046675501704695032(__sym__0__7046675501704695032), sym__0___45_6418041259452967043(__sym__0___45_6418041259452967043), sym__0___45_1891834319792150395(__sym__0___45_1891834319792150395), sym__0__8613816579654205812(__sym__0__8613816579654205812), sym__0__4752565720665066828(__sym__0__4752565720665066828), sym__0___45_4077601550282544382(__sym__0___45_4077601550282544382)
  {
  }
  Record17() 
  {
  }
  std::string show() const{
    std::stringstream o;
    o << sym__0___45_395632927433559406 << " | " << arrToString(sym__0__3500080010252534473) << " | " << arrToString(sym__0__2800931817820227903) << " | " << arrToString(sym__0__7557617225319929765) << " | " << arrToString(sym__0___45_3980497182018067045) << " | " << arrToString(sym__0__2235173403257069670) << " | " << arrToString(sym__0___45_6641253057665067959) << " | " << sym__0__1255259528474633157 << " | " << sym__0___45_4404182672923859309 << " | " << sym__0___45_614365468487006021 << " | " << sym__0__5021292656532353329 << " | " << sym__0__4343635027495243018 << " | " << sym__0___45_3654849337237924089 << " | " << arrToString(sym__0__6124017931208230794) << " | " << sym__0__2631968767089293636 << " | " << arrToString(sym__0__8161280318223951419) << " | " << sym__0__6646444558267925131 << " | " << sym__0___45_371840055694522427 << " | " << sym__0__1207871997281537063 << " | " << sym__0___45_8251624728007457683 << " | " << sym__0___45_1977777050929051591 << " | " << sym__0__5291527997285077246 << " | " << sym__0__1945446523025649920 << " | " << arrToString(sym__0__8649969499362766248) << " | " << sym__0___45_9152772373621530983 << " | " << arrToString(sym__0__4661399151085104809) << " | " << arrToString(sym__0___45_2328336135844765285) << " | " << arrToString(sym__0__7204907144595482904) << " | " << sym__0__6947146092885793306 << " | " << sym__0___45_4879039772515408504 << " | " << arrToString(sym__0___45_3380765295385793791) << " | " << sym__0__1357424853380084934 << " | " << sym__0__1623525206981402081 << " | " << sym__0___45_7738248275094052359 << " | " << sym__0___45_5520726833947609389 << " | " << sym__0__7046675501704695032 << " | " << arrToString(sym__0___45_6418041259452967043) << " | " << arrToString(sym__0___45_1891834319792150395) << " | " << arrToString(sym__0__8613816579654205812) << " | " << arrToString(sym__0__4752565720665066828) << " | " << arrToString(sym__0___45_4077601550282544382);
    return o.str();
  }
  bool operator <(const Record17& otherRec) const{
    return (otherRec.sym__0___45_395632927433559406 < sym__0___45_395632927433559406 && (otherRec.sym__0__3500080010252534473 < sym__0__3500080010252534473 && (otherRec.sym__0__2800931817820227903 < sym__0__2800931817820227903 && (otherRec.sym__0__7557617225319929765 < sym__0__7557617225319929765 && (otherRec.sym__0___45_3980497182018067045 < sym__0___45_3980497182018067045 && (otherRec.sym__0__2235173403257069670 < sym__0__2235173403257069670 && (otherRec.sym__0___45_6641253057665067959 < sym__0___45_6641253057665067959 && (otherRec.sym__0__1255259528474633157 < sym__0__1255259528474633157 && (otherRec.sym__0___45_4404182672923859309 < sym__0___45_4404182672923859309 && (otherRec.sym__0___45_614365468487006021 < sym__0___45_614365468487006021 && (otherRec.sym__0__5021292656532353329 < sym__0__5021292656532353329 && (otherRec.sym__0__4343635027495243018 < sym__0__4343635027495243018 && (otherRec.sym__0___45_3654849337237924089 < sym__0___45_3654849337237924089 && (otherRec.sym__0__6124017931208230794 < sym__0__6124017931208230794 && (otherRec.sym__0__2631968767089293636 < sym__0__2631968767089293636 && (otherRec.sym__0__8161280318223951419 < sym__0__8161280318223951419 && (otherRec.sym__0__6646444558267925131 < sym__0__6646444558267925131 && (otherRec.sym__0___45_371840055694522427 < sym__0___45_371840055694522427 && (otherRec.sym__0__1207871997281537063 < sym__0__1207871997281537063 && (otherRec.sym__0___45_8251624728007457683 < sym__0___45_8251624728007457683 && (otherRec.sym__0___45_1977777050929051591 < sym__0___45_1977777050929051591 && (otherRec.sym__0__5291527997285077246 < sym__0__5291527997285077246 && (otherRec.sym__0__1945446523025649920 < sym__0__1945446523025649920 && (otherRec.sym__0__8649969499362766248 < sym__0__8649969499362766248 && (otherRec.sym__0___45_9152772373621530983 < sym__0___45_9152772373621530983 && (otherRec.sym__0__4661399151085104809 < sym__0__4661399151085104809 && (otherRec.sym__0___45_2328336135844765285 < sym__0___45_2328336135844765285 && (otherRec.sym__0__7204907144595482904 < sym__0__7204907144595482904 && (otherRec.sym__0__6947146092885793306 < sym__0__6947146092885793306 && (otherRec.sym__0___45_4879039772515408504 < sym__0___45_4879039772515408504 && (otherRec.sym__0___45_3380765295385793791 < sym__0___45_3380765295385793791 && (otherRec.sym__0__1357424853380084934 < sym__0__1357424853380084934 && (otherRec.sym__0__1623525206981402081 < sym__0__1623525206981402081 && (otherRec.sym__0___45_7738248275094052359 < sym__0___45_7738248275094052359 && (otherRec.sym__0___45_5520726833947609389 < sym__0___45_5520726833947609389 && (otherRec.sym__0__7046675501704695032 < sym__0__7046675501704695032 && (otherRec.sym__0___45_6418041259452967043 < sym__0___45_6418041259452967043 && (otherRec.sym__0___45_1891834319792150395 < sym__0___45_1891834319792150395 && (otherRec.sym__0__8613816579654205812 < sym__0__8613816579654205812 && (otherRec.sym__0__4752565720665066828 < sym__0__4752565720665066828 && otherRec.sym__0___45_4077601550282544382 < sym__0___45_4077601550282544382))))))))))))))))))))))))))))))))))))))));
  }
  bool operator ==(const Record17& otherRec) const{
    return (otherRec.sym__0___45_395632927433559406 == sym__0___45_395632927433559406 && (otherRec.sym__0__3500080010252534473 == sym__0__3500080010252534473 && (otherRec.sym__0__2800931817820227903 == sym__0__2800931817820227903 && (otherRec.sym__0__7557617225319929765 == sym__0__7557617225319929765 && (otherRec.sym__0___45_3980497182018067045 == sym__0___45_3980497182018067045 && (otherRec.sym__0__2235173403257069670 == sym__0__2235173403257069670 && (otherRec.sym__0___45_6641253057665067959 == sym__0___45_6641253057665067959 && (otherRec.sym__0__1255259528474633157 == sym__0__1255259528474633157 && (otherRec.sym__0___45_4404182672923859309 == sym__0___45_4404182672923859309 && (otherRec.sym__0___45_614365468487006021 == sym__0___45_614365468487006021 && (otherRec.sym__0__5021292656532353329 == sym__0__5021292656532353329 && (otherRec.sym__0__4343635027495243018 == sym__0__4343635027495243018 && (otherRec.sym__0___45_3654849337237924089 == sym__0___45_3654849337237924089 && (otherRec.sym__0__6124017931208230794 == sym__0__6124017931208230794 && (otherRec.sym__0__2631968767089293636 == sym__0__2631968767089293636 && (otherRec.sym__0__8161280318223951419 == sym__0__8161280318223951419 && (otherRec.sym__0__6646444558267925131 == sym__0__6646444558267925131 && (otherRec.sym__0___45_371840055694522427 == sym__0___45_371840055694522427 && (otherRec.sym__0__1207871997281537063 == sym__0__1207871997281537063 && (otherRec.sym__0___45_8251624728007457683 == sym__0___45_8251624728007457683 && (otherRec.sym__0___45_1977777050929051591 == sym__0___45_1977777050929051591 && (otherRec.sym__0__5291527997285077246 == sym__0__5291527997285077246 && (otherRec.sym__0__1945446523025649920 == sym__0__1945446523025649920 && (otherRec.sym__0__8649969499362766248 == sym__0__8649969499362766248 && (otherRec.sym__0___45_9152772373621530983 == sym__0___45_9152772373621530983 && (otherRec.sym__0__4661399151085104809 == sym__0__4661399151085104809 && (otherRec.sym__0___45_2328336135844765285 == sym__0___45_2328336135844765285 && (otherRec.sym__0__7204907144595482904 == sym__0__7204907144595482904 && (otherRec.sym__0__6947146092885793306 == sym__0__6947146092885793306 && (otherRec.sym__0___45_4879039772515408504 == sym__0___45_4879039772515408504 && (otherRec.sym__0___45_3380765295385793791 == sym__0___45_3380765295385793791 && (otherRec.sym__0__1357424853380084934 == sym__0__1357424853380084934 && (otherRec.sym__0__1623525206981402081 == sym__0__1623525206981402081 && (otherRec.sym__0___45_7738248275094052359 == sym__0___45_7738248275094052359 && (otherRec.sym__0___45_5520726833947609389 == sym__0___45_5520726833947609389 && (otherRec.sym__0__7046675501704695032 == sym__0__7046675501704695032 && (otherRec.sym__0___45_6418041259452967043 == sym__0___45_6418041259452967043 && (otherRec.sym__0___45_1891834319792150395 == sym__0___45_1891834319792150395 && (otherRec.sym__0__8613816579654205812 == sym__0__8613816579654205812 && (otherRec.sym__0__4752565720665066828 == sym__0__4752565720665066828 && otherRec.sym__0___45_4077601550282544382 == sym__0___45_4077601550282544382))))))))))))))))))))))))))))))))))))))));
  }
  bool operator !=(const Record17& otherRec) const{
    return (otherRec.sym__0___45_395632927433559406 != sym__0___45_395632927433559406 || (otherRec.sym__0__3500080010252534473 != sym__0__3500080010252534473 || (otherRec.sym__0__2800931817820227903 != sym__0__2800931817820227903 || (otherRec.sym__0__7557617225319929765 != sym__0__7557617225319929765 || (otherRec.sym__0___45_3980497182018067045 != sym__0___45_3980497182018067045 || (otherRec.sym__0__2235173403257069670 != sym__0__2235173403257069670 || (otherRec.sym__0___45_6641253057665067959 != sym__0___45_6641253057665067959 || (otherRec.sym__0__1255259528474633157 != sym__0__1255259528474633157 || (otherRec.sym__0___45_4404182672923859309 != sym__0___45_4404182672923859309 || (otherRec.sym__0___45_614365468487006021 != sym__0___45_614365468487006021 || (otherRec.sym__0__5021292656532353329 != sym__0__5021292656532353329 || (otherRec.sym__0__4343635027495243018 != sym__0__4343635027495243018 || (otherRec.sym__0___45_3654849337237924089 != sym__0___45_3654849337237924089 || (otherRec.sym__0__6124017931208230794 != sym__0__6124017931208230794 || (otherRec.sym__0__2631968767089293636 != sym__0__2631968767089293636 || (otherRec.sym__0__8161280318223951419 != sym__0__8161280318223951419 || (otherRec.sym__0__6646444558267925131 != sym__0__6646444558267925131 || (otherRec.sym__0___45_371840055694522427 != sym__0___45_371840055694522427 || (otherRec.sym__0__1207871997281537063 != sym__0__1207871997281537063 || (otherRec.sym__0___45_8251624728007457683 != sym__0___45_8251624728007457683 || (otherRec.sym__0___45_1977777050929051591 != sym__0___45_1977777050929051591 || (otherRec.sym__0__5291527997285077246 != sym__0__5291527997285077246 || (otherRec.sym__0__1945446523025649920 != sym__0__1945446523025649920 || (otherRec.sym__0__8649969499362766248 != sym__0__8649969499362766248 || (otherRec.sym__0___45_9152772373621530983 != sym__0___45_9152772373621530983 || (otherRec.sym__0__4661399151085104809 != sym__0__4661399151085104809 || (otherRec.sym__0___45_2328336135844765285 != sym__0___45_2328336135844765285 || (otherRec.sym__0__7204907144595482904 != sym__0__7204907144595482904 || (otherRec.sym__0__6947146092885793306 != sym__0__6947146092885793306 || (otherRec.sym__0___45_4879039772515408504 != sym__0___45_4879039772515408504 || (otherRec.sym__0___45_3380765295385793791 != sym__0___45_3380765295385793791 || (otherRec.sym__0__1357424853380084934 != sym__0__1357424853380084934 || (otherRec.sym__0__1623525206981402081 != sym__0__1623525206981402081 || (otherRec.sym__0___45_7738248275094052359 != sym__0___45_7738248275094052359 || (otherRec.sym__0___45_5520726833947609389 != sym__0___45_5520726833947609389 || (otherRec.sym__0__7046675501704695032 != sym__0__7046675501704695032 || (otherRec.sym__0___45_6418041259452967043 != sym__0___45_6418041259452967043 || (otherRec.sym__0___45_1891834319792150395 != sym__0___45_1891834319792150395 || (otherRec.sym__0__8613816579654205812 != sym__0__8613816579654205812 || (otherRec.sym__0__4752565720665066828 != sym__0__4752565720665066828 || otherRec.sym__0___45_4077601550282544382 != sym__0___45_4077601550282544382))))))))))))))))))))))))))))))))))))))));
  }
  unsigned sym__0___45_395632927433559406;
  fluidb_string<25> sym__0__3500080010252534473;
  fluidb_string<40> sym__0__2800931817820227903;
  fluidb_string<16> sym__0__7557617225319929765;
  fluidb_string<16> sym__0___45_3980497182018067045;
  fluidb_string<13> sym__0__2235173403257069670;
  fluidb_string<15> sym__0___45_6641253057665067959;
  unsigned sym__0__1255259528474633157;
  int sym__0___45_4404182672923859309;
  unsigned sym__0___45_614365468487006021;
  unsigned sym__0__5021292656532353329;
  unsigned sym__0__4343635027495243018;
  unsigned sym__0___45_3654849337237924089;
  fluidb_string<21> sym__0__6124017931208230794;
  unsigned sym__0__2631968767089293636;
  fluidb_string<10> sym__0__8161280318223951419;
  unsigned sym__0__6646444558267925131;
  double sym__0___45_371840055694522427;
  unsigned sym__0__1207871997281537063;
  double sym__0___45_8251624728007457683;
  unsigned sym__0___45_1977777050929051591;
  unsigned sym__0__5291527997285077246;
  double sym__0__1945446523025649920;
  fluidb_string<13> sym__0__8649969499362766248;
  unsigned sym__0___45_9152772373621530983;
  fluidb_string<18> sym__0__4661399151085104809;
  fluidb_string<9> sym__0___45_2328336135844765285;
  fluidb_string<9> sym__0__7204907144595482904;
  unsigned sym__0__6947146092885793306;
  unsigned sym__0___45_4879039772515408504;
  fluidb_string<7> sym__0___45_3380765295385793791;
  unsigned sym__0__1357424853380084934;
  unsigned sym__0__1623525206981402081;
  unsigned sym__0___45_7738248275094052359;
  unsigned sym__0___45_5520726833947609389;
  unsigned sym__0__7046675501704695032;
  fluidb_string<15> sym__0___45_6418041259452967043;
  fluidb_string<2> sym__0___45_1891834319792150395;
  fluidb_string<2> sym__0__8613816579654205812;
  fluidb_string<2> sym__0__4752565720665066828;
  fluidb_string<2> sym__0___45_4077601550282544382;
 private:
};


class CallableClass2 {
 public:
  bool operator()(const Record1& record0) {
    return like(record0.sym__0___45_3362440237381592032, "AMERICA");
  }
  typedef bool Codomain;
  typedef Record1 Domain0;
 private:
};


class CallableClass22 {
 public:
  Record9 operator()(const Record16& record21) {
    return Record9(record21.sym__0__2037864888707786451);
  }
  typedef Record9 Codomain;
  typedef Record16 Domain0;
 private:
};


class CallableClass20 {
 public:
  Record9 operator()(const Record7& record19) {
    return Record9(record19.sym__0___45_4966514451884084393);
  }
  typedef Record9 Codomain;
  typedef Record7 Domain0;
 private:
};


class CallableClass33 {
 public:
  bool operator()(const Record26& record32) {
    return like(record32.sym__0___45_8824352318197405717, "MFGR#12");
  }
  typedef bool Codomain;
  typedef Record26 Domain0;
 private:
};


class CallableClass40 {
 public:
  Record35 operator()(const Record37& record34) {
    return Record35(vAggrSum36(record34.sym__0__8598037934431251909), vAggrFirst38(record34.sym__0___45_2549139954849286782), vAggrFirst39(record34.sym__0___45_8628415396103686184));
  }
  typedef Record35 Codomain;
  typedef Record37 Domain0;
 private:
  AggrSum<unsigned> vAggrSum36;
  AggrFirst<unsigned> vAggrFirst38;
  AggrFirst<fluidb_string<10>> vAggrFirst39;
};


class CallableClass18 {
 public:
  Record17 operator()(const Record7& record14, const Record16& record15) {
    return Record17(record14.sym__0___45_3155469710477025854, record14.sym__0__8766469660263769977, record14.sym__0___45_6144354271442381233, record14.sym__0__2727208471230034133, record14.sym__0__7788957850431024971, record14.sym__0__5632195630113750390, record14.sym__0__4926275076645314297, record14.sym__0___45_7137791472644812299, record14.sym__0___45_2813699981773424797, record14.sym__0___45_6175277399440513685, record14.sym__0__1409704747327734913, record14.sym__0__451691505510288026, record14.sym__0___45_4966514451884084393, record14.sym__0___45_284572256646387942, record14.sym__0__68241557041125844, record14.sym__0__928096461745559787, record14.sym__0___45_563877423123364261, record14.sym__0__6404443559459687925, record14.sym__0__6414047109737507703, record14.sym__0__6077218524359747965, record14.sym__0__7270344143352673993, record14.sym__0___45_3670951109586063922, record14.sym__0__9136521336260351024, record14.sym__0___45_8729274925847332424, record15.sym__0__2037864888707786451, record15.sym__0__8533656712666151747, record15.sym__0__646314041574508429, record15.sym__0__6064137978327902054, record15.sym__0__3754157776500852496, record15.sym__0__6284345160241949046, record15.sym__0___45_773692805971570325, record15.sym__0___45_8399474032083007524, record15.sym__0___45_2038947427357444789, record15.sym__0__6071994954612827827, record15.sym__0__7742515703067448213, record15.sym__0__5201219213304227654, record15.sym__0___45_5896625796158057241, record15.sym__0___45_1108504872221226081, record15.sym__0__1055103969674359346, record15.sym__0__9115626546918942554, record15.sym__0___45_6850413444013389848);
  }
  typedef Record17 Codomain;
  typedef Record7 Domain0;
  typedef Record16 Domain1;
 private:
};


class CallableClass42 {
 public:
  Record41 operator()(const Record37& record34) {
    return Record41(record34.sym__0___45_2549139954849286782, record34.sym__0___45_8628415396103686184);
  }
  typedef Record41 Codomain;
  typedef Record37 Domain0;
 private:
};


class CallableClass11 {
 public:
  Record9 operator()(const Record5& record10) {
    return Record9(record10.sym__0___45_6115530667314534627);
  }
  typedef Record9 Codomain;
  typedef Record5 Domain0;
 private:
};


class CallableClass29 {
 public:
  Record9 operator()(const Record17& record28) {
    return Record9(record28.sym__0__5021292656532353329);
  }
  typedef Record9 Codomain;
  typedef Record17 Domain0;
 private:
};


class CallableClass13 {
 public:
  Record9 operator()(const Record6& record12) {
    return Record9(record12.sym__0__934137931677987637);
  }
  typedef Record9 Codomain;
  typedef Record6 Domain0;
 private:
};


class CallableClass8 {
 public:
  Record7 operator()(const Record5& record3, const Record6& record4) {
    return Record7(record3.sym__0___45_6115530667314534627, record3.sym__0___45_7270672493020807758, record3.sym__0___45_304981752148764540, record3.sym__0__3854231876403755558, record3.sym__0___45_4362638061872192936, record3.sym__0__5448005239976098329, record3.sym__0___45_5552695260950044366, record4.sym__0___45_7574074018531922998, record4.sym__0__1125464382786937920, record4.sym__0___45_8257174981563598792, record4.sym__0__957746932829998382, record4.sym__0__934137931677987637, record4.sym__0___45_7332894783442362324, record4.sym__0__8974811218372806325, record4.sym__0___45_5217562530132451785, record4.sym__0__7851147553396318904, record4.sym__0___45_4975505511391694456, record4.sym__0___45_7249986409969561654, record4.sym__0__4671626969570181580, record4.sym__0___45_3666121704283105054, record4.sym__0__5495011930072844518, record4.sym__0___45_4423447118092167055, record4.sym__0___45_1608082021099887893, record4.sym__0__1584187396639360899);
  }
  typedef Record7 Codomain;
  typedef Record5 Domain0;
  typedef Record6 Domain1;
 private:
};


class CallableClass31 {
 public:
  Record9 operator()(const Record25& record30) {
    return Record9(record30.sym__0__7178003535380331304);
  }
  typedef Record9 Codomain;
  typedef Record25 Domain0;
 private:
};


class CallableClass44 {
 public:
  Record41 operator()(const Record35& record43) {
    return Record41(record43.sym__0___45_6261698000977207925, record43.sym__0__1631598784897141641);
  }
  typedef Record41 Codomain;
  typedef Record35 Domain0;
 private:
};


class CallableClass27 {
 public:
  Record26 operator()(const Record17& record23, const Record25& record24) {
    return Record26(record23.sym__0___45_395632927433559406, record23.sym__0__3500080010252534473, record23.sym__0__2800931817820227903, record23.sym__0__7557617225319929765, record23.sym__0___45_3980497182018067045, record23.sym__0__2235173403257069670, record23.sym__0___45_6641253057665067959, record23.sym__0__1255259528474633157, record23.sym__0___45_4404182672923859309, record23.sym__0___45_614365468487006021, record23.sym__0__5021292656532353329, record23.sym__0__4343635027495243018, record23.sym__0___45_3654849337237924089, record23.sym__0__6124017931208230794, record23.sym__0__2631968767089293636, record23.sym__0__8161280318223951419, record23.sym__0__6646444558267925131, record23.sym__0___45_371840055694522427, record23.sym__0__1207871997281537063, record23.sym__0___45_8251624728007457683, record23.sym__0___45_1977777050929051591, record23.sym__0__5291527997285077246, record23.sym__0__1945446523025649920, record23.sym__0__8649969499362766248, record23.sym__0___45_9152772373621530983, record23.sym__0__4661399151085104809, record23.sym__0___45_2328336135844765285, record23.sym__0__7204907144595482904, record23.sym__0__6947146092885793306, record23.sym__0___45_4879039772515408504, record23.sym__0___45_3380765295385793791, record23.sym__0__1357424853380084934, record23.sym__0__1623525206981402081, record23.sym__0___45_7738248275094052359, record23.sym__0___45_5520726833947609389, record23.sym__0__7046675501704695032, record23.sym__0___45_6418041259452967043, record23.sym__0___45_1891834319792150395, record23.sym__0__8613816579654205812, record23.sym__0__4752565720665066828, record23.sym__0___45_4077601550282544382, record24.sym__0__7178003535380331304, record24.sym__0___45_7020257275696364520, record24.sym__0___45_6307179734719967033, record24.sym__0__4568304886257136061, record24.sym__0___45_6291097039630000265, record24.sym__0__551327770031967739, record24.sym__0__3827696365022297353, record24.sym__0___45_1779543743759935870, record24.sym__0__3752090135924368535);
  }
  typedef Record26 Codomain;
  typedef Record17 Domain0;
  typedef Record25 Domain1;
 private:
};






int main() {
  // ForwardTrigger: (Just 
  //   (Right 
  //     [
  //      QSel 
  //         (P0 
  //           (R2 RLike 
  //               (R0 (E0 (ESym "s_region"))) 
  //               (R0 (E0 (EString "AMERICA")))))
  std::cout << "ForwardTrigger: (Just \n  (Right \n    [\n     QSel \n        (P0 \n          (R2 RLike \n              (R0 (E0 (ESym \"s_region\"))) \n              (R0 (E0 (EString \"AMERICA\")))))\n    ]))" << std::endl;
  {
    auto operation = mkSelect<CallableClass2>(Just<const std::string>("/tmp/fluidb_store/data26.dat"), Just<const std::string>("/tmp/fluidb_store/data27.dat"), "/run/user/1000/fluidb-data/supplier.dat");
    operation.run();
    operation.print_output(10);
  }
  // ForwardTrigger: (Just 
  //   (Left 
  //     [
  //      QJoin 
  //         (P0 
  //           (R2 REq 
  //               (R0 (E0 (ESym "lo_suppkey"))) 
  //               (R0 (E0 (ESym "s_suppkey")))))
  std::cout << "ForwardTrigger: (Just \n  (Left \n    [\n     QJoin \n        (P0 \n          (R2 REq \n              (R0 (E0 (ESym \"lo_suppkey\"))) \n              (R0 (E0 (ESym \"s_suppkey\")))))\n    ]))" << std::endl;
  {
    auto operation = mkEquiJoin<CallableClass11, CallableClass13, CallableClass8>(Just<const std::string>("/tmp/fluidb_store/data24.dat"), Just<const std::string>("/tmp/fluidb_store/data28.dat"), Just<const std::string>("/tmp/fluidb_store/data29.dat"), "/tmp/fluidb_store/data26.dat", "/run/user/1000/fluidb-data/lineorder.dat");
    operation.run();
    operation.print_output(10);
  }
  // ForwardTrigger: (Just 
  //   (Left 
  //     [
  //      QJoin 
  //         (P0 
  //           (R2 REq 
  //               (R0 (E0 (ESym "lo_orderdate"))) 
  //               (R0 (E0 (ESym "d_datekey")))))
  std::cout << "ForwardTrigger: (Just \n  (Left \n    [\n     QJoin \n        (P0 \n          (R2 REq \n              (R0 (E0 (ESym \"lo_orderdate\"))) \n              (R0 (E0 (ESym \"d_datekey\")))))\n    ]))" << std::endl;
  {
    auto operation = mkEquiJoin<CallableClass20, CallableClass22, CallableClass18>(Just<const std::string>("/tmp/fluidb_store/data22.dat"), Just<const std::string>("/tmp/fluidb_store/data32.dat"), Just<const std::string>("/tmp/fluidb_store/data33.dat"), "/tmp/fluidb_store/data24.dat", "/run/user/1000/fluidb-data/date.dat");
    operation.run();
    operation.print_output(10);
  }
  // ForwardTrigger: (Just 
  //   (Left 
  //     [
  //      QJoin 
  //         (P0 
  //           (R2 REq 
  //               (R0 (E0 (ESym "lo_partkey"))) 
  //               (R0 (E0 (ESym "p_partkey")))))
  std::cout << "ForwardTrigger: (Just \n  (Left \n    [\n     QJoin \n        (P0 \n          (R2 REq \n              (R0 (E0 (ESym \"lo_partkey\"))) \n              (R0 (E0 (ESym \"p_partkey\")))))\n    ]))" << std::endl;
  {
    auto operation = mkEquiJoin<CallableClass29, CallableClass31, CallableClass27>(Just<const std::string>("/tmp/fluidb_store/data37.dat"), Just<const std::string>("/tmp/fluidb_store/data36.dat"), Just<const std::string>("/tmp/fluidb_store/data38.dat"), "/tmp/fluidb_store/data22.dat", "/run/user/1000/fluidb-data/part.dat");
    operation.run();
    operation.print_output(10);
  }
  // Delete: (S 
  //   (P1 
  //     PNot 
  //     (P0 
  //       (R2 RLike 
  //           (R0 (E0 (ESym "s_region"))) 
  //           (R0 (E0 (EString "AMERICA")))))) 
  std::cout << "Delete: (S \n  (P1 \n    PNot \n    (P0 \n      (R2 RLike \n          (R0 (E0 (ESym \"s_region\"))) \n          (R0 (E0 (EString \"AMERICA\")))))) \n  (Q0 (TSymbol \"supplier\")))" << std::endl;
  deleteFile("/tmp/fluidb_store/data27.dat");
  // Delete: (Q2 
  //   (QLeftAntijoin 
  //     (P0 
  //       (R2 REq 
  //           (R0 (E0 (ESym "lo_suppkey"))) 
  //           (R0 (E0 (ESym "s_suppkey")))))) 
  //   (S 
  //     (P0 
  //       (R2 RLike 
  //           (R0 (E0 (ESym "s_region"))) 
  //           (R0 (E0 (EString "AMERICA"))))) 
  //     (Q0 (TSymbol "supplier"))) 
  std::cout << "Delete: (Q2 \n  (QLeftAntijoin \n    (P0 \n      (R2 REq \n          (R0 (E0 (ESym \"lo_suppkey\"))) \n          (R0 (E0 (ESym \"s_suppkey\")))))) \n  (S \n    (P0 \n      (R2 RLike \n          (R0 (E0 (ESym \"s_region\"))) \n          (R0 (E0 (EString \"AMERICA\"))))) \n    (Q0 (TSymbol \"supplier\"))) \n  (Q0 (TSymbol \"lineorder\")))" << std::endl;
  deleteFile("/tmp/fluidb_store/data28.dat");
  std::cout << "Delete: (Q0 (TSymbol \"lineorder\"))" << std::endl;
  deleteFile("/run/user/1000/fluidb-data/lineorder.dat");
  // Delete: (S 
  //   (P0 
  //     (R2 RLike (R0 (E0 (ESym "s_region"))) (R0 (E0 (EString "AMERICA"))))) 
  std::cout << "Delete: (S \n  (P0 \n    (R2 RLike (R0 (E0 (ESym \"s_region\"))) (R0 (E0 (EString \"AMERICA\"))))) \n  (Q0 (TSymbol \"supplier\")))" << std::endl;
  deleteFile("/tmp/fluidb_store/data26.dat");
  // Delete: (Q2 
  //   (QLeftAntijoin 
  //     (P0 
  //       (R2 REq 
  //           (R0 (E0 (ESym "lo_orderdate"))) 
  //           (R0 (E0 (ESym "d_datekey")))))) 
  //   (J 
  //     (P0 
  //       (R2 REq 
  //           (R0 (E0 (ESym "lo_suppkey"))) 
  //           (R0 (E0 (ESym "s_suppkey"))))) 
  //     (S 
  //       (P0 
  //         (R2 RLike 
  //             (R0 (E0 (ESym "s_region"))) 
  //             (R0 (E0 (EString "AMERICA"))))) 
  //       (Q0 (TSymbol "supplier"))) 
  //     (Q0 (TSymbol "lineorder"))) 
  std::cout << "Delete: (Q2 \n  (QLeftAntijoin \n    (P0 \n      (R2 REq \n          (R0 (E0 (ESym \"lo_orderdate\"))) \n          (R0 (E0 (ESym \"d_datekey\")))))) \n  (J \n    (P0 \n      (R2 REq \n          (R0 (E0 (ESym \"lo_suppkey\"))) \n          (R0 (E0 (ESym \"s_suppkey\"))))) \n    (S \n      (P0 \n        (R2 RLike \n            (R0 (E0 (ESym \"s_region\"))) \n            (R0 (E0 (EString \"AMERICA\"))))) \n      (Q0 (TSymbol \"supplier\"))) \n    (Q0 (TSymbol \"lineorder\"))) \n  (Q0 (TSymbol \"date\")))" << std::endl;
  deleteFile("/tmp/fluidb_store/data32.dat");
  // Delete: (Q2 
  //   (QRightAntijoin 
  //     (P0 
  //       (R2 REq 
  //           (R0 (E0 (ESym "lo_orderdate"))) 
  //           (R0 (E0 (ESym "d_datekey")))))) 
  //   (J 
  //     (P0 
  //       (R2 REq 
  //           (R0 (E0 (ESym "lo_suppkey"))) 
  //           (R0 (E0 (ESym "s_suppkey"))))) 
  //     (S 
  //       (P0 
  //         (R2 RLike 
  //             (R0 (E0 (ESym "s_region"))) 
  //             (R0 (E0 (EString "AMERICA"))))) 
  //       (Q0 (TSymbol "supplier"))) 
  //     (Q0 (TSymbol "lineorder"))) 
  std::cout << "Delete: (Q2 \n  (QRightAntijoin \n    (P0 \n      (R2 REq \n          (R0 (E0 (ESym \"lo_orderdate\"))) \n          (R0 (E0 (ESym \"d_datekey\")))))) \n  (J \n    (P0 \n      (R2 REq \n          (R0 (E0 (ESym \"lo_suppkey\"))) \n          (R0 (E0 (ESym \"s_suppkey\"))))) \n    (S \n      (P0 \n        (R2 RLike \n            (R0 (E0 (ESym \"s_region\"))) \n            (R0 (E0 (EString \"AMERICA\"))))) \n      (Q0 (TSymbol \"supplier\"))) \n    (Q0 (TSymbol \"lineorder\"))) \n  (Q0 (TSymbol \"date\")))" << std::endl;
  deleteFile("/tmp/fluidb_store/data33.dat");
  // Delete: (Q2 
  //   (QLeftAntijoin 
  //     (P0 
  //       (R2 REq 
  //           (R0 (E0 (ESym "lo_partkey"))) 
  //           (R0 (E0 (ESym "p_partkey")))))) 
  //   (J 
  //     (P0 
  //       (R2 REq 
  //           (R0 (E0 (ESym "lo_orderdate"))) 
  //           (R0 (E0 (ESym "d_datekey"))))) 
  //     (S 
  //       (P0 
  //         (R2 RLike 
  //             (R0 (E0 (ESym "s_region"))) 
  //             (R0 (E0 (EString "AMERICA"))))) 
  //       (J 
  //         (P0 
  //           (R2 REq 
  //               (R0 (E0 (ESym "lo_suppkey"))) 
  //               (R0 (E0 (ESym "s_suppkey"))))) 
  //         (Q0 (TSymbol "supplier")) 
  //         (Q0 (TSymbol "lineorder")))) 
  //     (Q0 (TSymbol "date"))) 
  std::cout << "Delete: (Q2 \n  (QLeftAntijoin \n    (P0 \n      (R2 REq \n          (R0 (E0 (ESym \"lo_partkey\"))) \n          (R0 (E0 (ESym \"p_partkey\")))))) \n  (J \n    (P0 \n      (R2 REq \n          (R0 (E0 (ESym \"lo_orderdate\"))) \n          (R0 (E0 (ESym \"d_datekey\"))))) \n    (S \n      (P0 \n        (R2 RLike \n            (R0 (E0 (ESym \"s_region\"))) \n            (R0 (E0 (EString \"AMERICA\"))))) \n      (J \n        (P0 \n          (R2 REq \n              (R0 (E0 (ESym \"lo_suppkey\"))) \n              (R0 (E0 (ESym \"s_suppkey\"))))) \n        (Q0 (TSymbol \"supplier\")) \n        (Q0 (TSymbol \"lineorder\")))) \n    (Q0 (TSymbol \"date\"))) \n  (Q0 (TSymbol \"part\")))" << std::endl;
  deleteFile("/tmp/fluidb_store/data36.dat");
  std::cout << "Delete: (Q0 (TSymbol \"part\"))" << std::endl;
  deleteFile("/run/user/1000/fluidb-data/part.dat");
  // Delete: (S 
  //   (P0 
  //     (R2 RLike (R0 (E0 (ESym "s_region"))) (R0 (E0 (EString "AMERICA"))))) 
  //   (J 
  //     (P0 
  //       (R2 REq 
  //           (R0 (E0 (ESym "lo_orderdate"))) 
  //           (R0 (E0 (ESym "d_datekey"))))) 
  //     (J 
  //       (P0 
  //         (R2 REq 
  //             (R0 (E0 (ESym "lo_suppkey"))) 
  //             (R0 (E0 (ESym "s_suppkey"))))) 
  //       (Q0 (TSymbol "supplier")) 
  //       (Q0 (TSymbol "lineorder"))) 
  std::cout << "Delete: (S \n  (P0 \n    (R2 RLike (R0 (E0 (ESym \"s_region\"))) (R0 (E0 (EString \"AMERICA\"))))) \n  (J \n    (P0 \n      (R2 REq \n          (R0 (E0 (ESym \"lo_orderdate\"))) \n          (R0 (E0 (ESym \"d_datekey\"))))) \n    (J \n      (P0 \n        (R2 REq \n            (R0 (E0 (ESym \"lo_suppkey\"))) \n            (R0 (E0 (ESym \"s_suppkey\"))))) \n      (Q0 (TSymbol \"supplier\")) \n      (Q0 (TSymbol \"lineorder\"))) \n    (Q0 (TSymbol \"date\"))))" << std::endl;
  deleteFile("/tmp/fluidb_store/data22.dat");
  // ForwardTrigger: (Just 
  //   (Right 
  //     [
  //      QSel 
  //         (P0 
  //           (R2 RLike 
  //               (R0 (E0 (ESym "p_category"))) 
  //               (R0 (E0 (EString "MFGR#12")))))
  std::cout << "ForwardTrigger: (Just \n  (Right \n    [\n     QSel \n        (P0 \n          (R2 RLike \n              (R0 (E0 (ESym \"p_category\"))) \n              (R0 (E0 (EString \"MFGR#12\")))))\n    ]))" << std::endl;
  {
    auto operation = mkSelect<CallableClass33>(Just<const std::string>("/tmp/fluidb_store/data20.dat"), Just<const std::string>("/tmp/fluidb_store/data41.dat"), "/tmp/fluidb_store/data37.dat");
    operation.run();
    operation.print_output(10);
  }
  // ForwardTrigger: (Just 
  //   (Right 
  //     [
  //      QGroup 
  //         [(ESym "tmpSym0",E0 (NAggr AggrSum (E0 (ESym "lo_revenue")))),
  //          (ESym "d_year",E0 (NAggr AggrFirst (E0 (ESym "d_year")))),
  //          (ESym "p_brand1",E0 (NAggr AggrFirst (E0 (ESym "p_brand1"))))] 
  //         [E0 (ESym "d_year"),E0 (ESym "p_brand1")]
  std::cout << "ForwardTrigger: (Just \n  (Right \n    [\n     QGroup \n        [(ESym \"tmpSym0\",E0 (NAggr AggrSum (E0 (ESym \"lo_revenue\")))),\n         (ESym \"d_year\",E0 (NAggr AggrFirst (E0 (ESym \"d_year\")))),\n         (ESym \"p_brand1\",E0 (NAggr AggrFirst (E0 (ESym \"p_brand1\"))))] \n        [E0 (ESym \"d_year\"),E0 (ESym \"p_brand1\")]\n    ]))" << std::endl;
  {
    auto operation = mkAggregation<CallableClass40, CallableClass42>(Just<const std::string>("/tmp/fluidb_store/data60.dat"), Just<const std::string>("/tmp/fluidb_store/data20.dat"), "/tmp/fluidb_store/data20.dat");
    operation.run();
    operation.print_output(10);
  }
  std::cout << "ForwardTrigger: (Just (Right [QSort [E0 (ESym \"d_year\"),E0 (ESym \"p_brand1\")]]))" << std::endl;
  {
    auto operation = mkSort<CallableClass44>(Just<const std::string>("/tmp/fluidb_store/data61.dat"), Just<const std::string>("/tmp/fluidb_store/data60.dat"), "/tmp/fluidb_store/data60.dat");
    operation.run();
    operation.print_output(10);
  }
  report_counters();
  return 0;
}
