#include <array>

#include <string>

#include <codegen.hh>
class Record1 {
 public:
  Record1(unsigned __sym__0__7577655604576576020, fluidb_string<18> __sym__0___45_2957579613704386588, fluidb_string<9> __sym__0__3873855183530032714, fluidb_string<9> __sym__0___45_5414786619423294939, unsigned __sym__0__5557137180551786739, unsigned __sym__0___45_6042740597378878507, fluidb_string<7> __sym__0___45_5833642980832303428, unsigned __sym__0___45_5108599129385010601, unsigned __sym__0__6596363747273139740, unsigned __sym__0___45_3780820615727466252, unsigned __sym__0___45_5733022218377332670, unsigned __sym__0___45_1101619184546797307, fluidb_string<15> __sym__0__5315661629871309616, fluidb_string<2> __sym__0__1548970624774688888, fluidb_string<2> __sym__0__3082040486510970809, fluidb_string<2> __sym__0___45_3773548088295367727, fluidb_string<2> __sym__0__2425475927764529115, unsigned __sym__0__3550854697533762172, fluidb_string<18> __sym__0___45_2428002636247423964, fluidb_string<40> __sym__0__2537603616087343230, fluidb_string<11> __sym__0___45_5133924085204218680, fluidb_string<15> __sym__0__1411885469038113506, fluidb_string<13> __sym__0___45_4336521243533294241, fluidb_string<15> __sym__0___45_2416233287424533084, fluidb_string<21> __sym__0___45_8608893297661193168, unsigned __sym__0__6600743152885821739, fluidb_string<25> __sym__0__8327451819077700100, fluidb_string<40> __sym__0__6397198241134363110, fluidb_string<16> __sym__0___45_5337640715365439464, fluidb_string<16> __sym__0__6843344685518481994, fluidb_string<13> __sym__0___45_281035451017513097, fluidb_string<15> __sym__0__978963012373614724, unsigned __sym__0___45_138255197005962184, int __sym__0__8723886903896913538, unsigned __sym__0___45_6396778144419774102, unsigned __sym__0__4345290193888622188, unsigned __sym__0__4748858544164465891, unsigned __sym__0___45_2013870166617871634, fluidb_string<21> __sym__0__4486213189679553123, unsigned __sym__0__2044116807841453321, fluidb_string<10> __sym__0__5619260977463858154, unsigned __sym__0___45_8920615137005718662, double __sym__0__2992813735709491256, unsigned __sym__0___45_4738111187081458162, double __sym__0__7342994916058425376, unsigned __sym__0___45_102160816985196364, unsigned __sym__0__1283865848515870159, double __sym__0___45_6653948180198187699, fluidb_string<13> __sym__0__1838544743518506357) : sym__0__7577655604576576020(__sym__0__7577655604576576020), sym__0___45_2957579613704386588(__sym__0___45_2957579613704386588), sym__0__3873855183530032714(__sym__0__3873855183530032714), sym__0___45_5414786619423294939(__sym__0___45_5414786619423294939), sym__0__5557137180551786739(__sym__0__5557137180551786739), sym__0___45_6042740597378878507(__sym__0___45_6042740597378878507), sym__0___45_5833642980832303428(__sym__0___45_5833642980832303428), sym__0___45_5108599129385010601(__sym__0___45_5108599129385010601), sym__0__6596363747273139740(__sym__0__6596363747273139740), sym__0___45_3780820615727466252(__sym__0___45_3780820615727466252), sym__0___45_5733022218377332670(__sym__0___45_5733022218377332670), sym__0___45_1101619184546797307(__sym__0___45_1101619184546797307), sym__0__5315661629871309616(__sym__0__5315661629871309616), sym__0__1548970624774688888(__sym__0__1548970624774688888), sym__0__3082040486510970809(__sym__0__3082040486510970809), sym__0___45_3773548088295367727(__sym__0___45_3773548088295367727), sym__0__2425475927764529115(__sym__0__2425475927764529115), sym__0__3550854697533762172(__sym__0__3550854697533762172), sym__0___45_2428002636247423964(__sym__0___45_2428002636247423964), sym__0__2537603616087343230(__sym__0__2537603616087343230), sym__0___45_5133924085204218680(__sym__0___45_5133924085204218680), sym__0__1411885469038113506(__sym__0__1411885469038113506), sym__0___45_4336521243533294241(__sym__0___45_4336521243533294241), sym__0___45_2416233287424533084(__sym__0___45_2416233287424533084), sym__0___45_8608893297661193168(__sym__0___45_8608893297661193168), sym__0__6600743152885821739(__sym__0__6600743152885821739), sym__0__8327451819077700100(__sym__0__8327451819077700100), sym__0__6397198241134363110(__sym__0__6397198241134363110), sym__0___45_5337640715365439464(__sym__0___45_5337640715365439464), sym__0__6843344685518481994(__sym__0__6843344685518481994), sym__0___45_281035451017513097(__sym__0___45_281035451017513097), sym__0__978963012373614724(__sym__0__978963012373614724), sym__0___45_138255197005962184(__sym__0___45_138255197005962184), sym__0__8723886903896913538(__sym__0__8723886903896913538), sym__0___45_6396778144419774102(__sym__0___45_6396778144419774102), sym__0__4345290193888622188(__sym__0__4345290193888622188), sym__0__4748858544164465891(__sym__0__4748858544164465891), sym__0___45_2013870166617871634(__sym__0___45_2013870166617871634), sym__0__4486213189679553123(__sym__0__4486213189679553123), sym__0__2044116807841453321(__sym__0__2044116807841453321), sym__0__5619260977463858154(__sym__0__5619260977463858154), sym__0___45_8920615137005718662(__sym__0___45_8920615137005718662), sym__0__2992813735709491256(__sym__0__2992813735709491256), sym__0___45_4738111187081458162(__sym__0___45_4738111187081458162), sym__0__7342994916058425376(__sym__0__7342994916058425376), sym__0___45_102160816985196364(__sym__0___45_102160816985196364), sym__0__1283865848515870159(__sym__0__1283865848515870159), sym__0___45_6653948180198187699(__sym__0___45_6653948180198187699), sym__0__1838544743518506357(__sym__0__1838544743518506357)
  {
  }
  Record1() 
  {
  }
  std::string show() const{
    std::stringstream o;
    o << sym__0__7577655604576576020 << " | " << arrToString(sym__0___45_2957579613704386588) << " | " << arrToString(sym__0__3873855183530032714) << " | " << arrToString(sym__0___45_5414786619423294939) << " | " << sym__0__5557137180551786739 << " | " << sym__0___45_6042740597378878507 << " | " << arrToString(sym__0___45_5833642980832303428) << " | " << sym__0___45_5108599129385010601 << " | " << sym__0__6596363747273139740 << " | " << sym__0___45_3780820615727466252 << " | " << sym__0___45_5733022218377332670 << " | " << sym__0___45_1101619184546797307 << " | " << arrToString(sym__0__5315661629871309616) << " | " << arrToString(sym__0__1548970624774688888) << " | " << arrToString(sym__0__3082040486510970809) << " | " << arrToString(sym__0___45_3773548088295367727) << " | " << arrToString(sym__0__2425475927764529115) << " | " << sym__0__3550854697533762172 << " | " << arrToString(sym__0___45_2428002636247423964) << " | " << arrToString(sym__0__2537603616087343230) << " | " << arrToString(sym__0___45_5133924085204218680) << " | " << arrToString(sym__0__1411885469038113506) << " | " << arrToString(sym__0___45_4336521243533294241) << " | " << arrToString(sym__0___45_2416233287424533084) << " | " << arrToString(sym__0___45_8608893297661193168) << " | " << sym__0__6600743152885821739 << " | " << arrToString(sym__0__8327451819077700100) << " | " << arrToString(sym__0__6397198241134363110) << " | " << arrToString(sym__0___45_5337640715365439464) << " | " << arrToString(sym__0__6843344685518481994) << " | " << arrToString(sym__0___45_281035451017513097) << " | " << arrToString(sym__0__978963012373614724) << " | " << sym__0___45_138255197005962184 << " | " << sym__0__8723886903896913538 << " | " << sym__0___45_6396778144419774102 << " | " << sym__0__4345290193888622188 << " | " << sym__0__4748858544164465891 << " | " << sym__0___45_2013870166617871634 << " | " << arrToString(sym__0__4486213189679553123) << " | " << sym__0__2044116807841453321 << " | " << arrToString(sym__0__5619260977463858154) << " | " << sym__0___45_8920615137005718662 << " | " << sym__0__2992813735709491256 << " | " << sym__0___45_4738111187081458162 << " | " << sym__0__7342994916058425376 << " | " << sym__0___45_102160816985196364 << " | " << sym__0__1283865848515870159 << " | " << sym__0___45_6653948180198187699 << " | " << arrToString(sym__0__1838544743518506357);
    return o.str();
  }
  bool operator <(const Record1& otherRec) const{
    return (otherRec.sym__0__7577655604576576020 < sym__0__7577655604576576020 && (otherRec.sym__0___45_2957579613704386588 < sym__0___45_2957579613704386588 && (otherRec.sym__0__3873855183530032714 < sym__0__3873855183530032714 && (otherRec.sym__0___45_5414786619423294939 < sym__0___45_5414786619423294939 && (otherRec.sym__0__5557137180551786739 < sym__0__5557137180551786739 && (otherRec.sym__0___45_6042740597378878507 < sym__0___45_6042740597378878507 && (otherRec.sym__0___45_5833642980832303428 < sym__0___45_5833642980832303428 && (otherRec.sym__0___45_5108599129385010601 < sym__0___45_5108599129385010601 && (otherRec.sym__0__6596363747273139740 < sym__0__6596363747273139740 && (otherRec.sym__0___45_3780820615727466252 < sym__0___45_3780820615727466252 && (otherRec.sym__0___45_5733022218377332670 < sym__0___45_5733022218377332670 && (otherRec.sym__0___45_1101619184546797307 < sym__0___45_1101619184546797307 && (otherRec.sym__0__5315661629871309616 < sym__0__5315661629871309616 && (otherRec.sym__0__1548970624774688888 < sym__0__1548970624774688888 && (otherRec.sym__0__3082040486510970809 < sym__0__3082040486510970809 && (otherRec.sym__0___45_3773548088295367727 < sym__0___45_3773548088295367727 && (otherRec.sym__0__2425475927764529115 < sym__0__2425475927764529115 && (otherRec.sym__0__3550854697533762172 < sym__0__3550854697533762172 && (otherRec.sym__0___45_2428002636247423964 < sym__0___45_2428002636247423964 && (otherRec.sym__0__2537603616087343230 < sym__0__2537603616087343230 && (otherRec.sym__0___45_5133924085204218680 < sym__0___45_5133924085204218680 && (otherRec.sym__0__1411885469038113506 < sym__0__1411885469038113506 && (otherRec.sym__0___45_4336521243533294241 < sym__0___45_4336521243533294241 && (otherRec.sym__0___45_2416233287424533084 < sym__0___45_2416233287424533084 && (otherRec.sym__0___45_8608893297661193168 < sym__0___45_8608893297661193168 && (otherRec.sym__0__6600743152885821739 < sym__0__6600743152885821739 && (otherRec.sym__0__8327451819077700100 < sym__0__8327451819077700100 && (otherRec.sym__0__6397198241134363110 < sym__0__6397198241134363110 && (otherRec.sym__0___45_5337640715365439464 < sym__0___45_5337640715365439464 && (otherRec.sym__0__6843344685518481994 < sym__0__6843344685518481994 && (otherRec.sym__0___45_281035451017513097 < sym__0___45_281035451017513097 && (otherRec.sym__0__978963012373614724 < sym__0__978963012373614724 && (otherRec.sym__0___45_138255197005962184 < sym__0___45_138255197005962184 && (otherRec.sym__0__8723886903896913538 < sym__0__8723886903896913538 && (otherRec.sym__0___45_6396778144419774102 < sym__0___45_6396778144419774102 && (otherRec.sym__0__4345290193888622188 < sym__0__4345290193888622188 && (otherRec.sym__0__4748858544164465891 < sym__0__4748858544164465891 && (otherRec.sym__0___45_2013870166617871634 < sym__0___45_2013870166617871634 && (otherRec.sym__0__4486213189679553123 < sym__0__4486213189679553123 && (otherRec.sym__0__2044116807841453321 < sym__0__2044116807841453321 && (otherRec.sym__0__5619260977463858154 < sym__0__5619260977463858154 && (otherRec.sym__0___45_8920615137005718662 < sym__0___45_8920615137005718662 && (otherRec.sym__0__2992813735709491256 < sym__0__2992813735709491256 && (otherRec.sym__0___45_4738111187081458162 < sym__0___45_4738111187081458162 && (otherRec.sym__0__7342994916058425376 < sym__0__7342994916058425376 && (otherRec.sym__0___45_102160816985196364 < sym__0___45_102160816985196364 && (otherRec.sym__0__1283865848515870159 < sym__0__1283865848515870159 && (otherRec.sym__0___45_6653948180198187699 < sym__0___45_6653948180198187699 && otherRec.sym__0__1838544743518506357 < sym__0__1838544743518506357))))))))))))))))))))))))))))))))))))))))))))))));
  }
  bool operator ==(const Record1& otherRec) const{
    return (otherRec.sym__0__7577655604576576020 == sym__0__7577655604576576020 && (otherRec.sym__0___45_2957579613704386588 == sym__0___45_2957579613704386588 && (otherRec.sym__0__3873855183530032714 == sym__0__3873855183530032714 && (otherRec.sym__0___45_5414786619423294939 == sym__0___45_5414786619423294939 && (otherRec.sym__0__5557137180551786739 == sym__0__5557137180551786739 && (otherRec.sym__0___45_6042740597378878507 == sym__0___45_6042740597378878507 && (otherRec.sym__0___45_5833642980832303428 == sym__0___45_5833642980832303428 && (otherRec.sym__0___45_5108599129385010601 == sym__0___45_5108599129385010601 && (otherRec.sym__0__6596363747273139740 == sym__0__6596363747273139740 && (otherRec.sym__0___45_3780820615727466252 == sym__0___45_3780820615727466252 && (otherRec.sym__0___45_5733022218377332670 == sym__0___45_5733022218377332670 && (otherRec.sym__0___45_1101619184546797307 == sym__0___45_1101619184546797307 && (otherRec.sym__0__5315661629871309616 == sym__0__5315661629871309616 && (otherRec.sym__0__1548970624774688888 == sym__0__1548970624774688888 && (otherRec.sym__0__3082040486510970809 == sym__0__3082040486510970809 && (otherRec.sym__0___45_3773548088295367727 == sym__0___45_3773548088295367727 && (otherRec.sym__0__2425475927764529115 == sym__0__2425475927764529115 && (otherRec.sym__0__3550854697533762172 == sym__0__3550854697533762172 && (otherRec.sym__0___45_2428002636247423964 == sym__0___45_2428002636247423964 && (otherRec.sym__0__2537603616087343230 == sym__0__2537603616087343230 && (otherRec.sym__0___45_5133924085204218680 == sym__0___45_5133924085204218680 && (otherRec.sym__0__1411885469038113506 == sym__0__1411885469038113506 && (otherRec.sym__0___45_4336521243533294241 == sym__0___45_4336521243533294241 && (otherRec.sym__0___45_2416233287424533084 == sym__0___45_2416233287424533084 && (otherRec.sym__0___45_8608893297661193168 == sym__0___45_8608893297661193168 && (otherRec.sym__0__6600743152885821739 == sym__0__6600743152885821739 && (otherRec.sym__0__8327451819077700100 == sym__0__8327451819077700100 && (otherRec.sym__0__6397198241134363110 == sym__0__6397198241134363110 && (otherRec.sym__0___45_5337640715365439464 == sym__0___45_5337640715365439464 && (otherRec.sym__0__6843344685518481994 == sym__0__6843344685518481994 && (otherRec.sym__0___45_281035451017513097 == sym__0___45_281035451017513097 && (otherRec.sym__0__978963012373614724 == sym__0__978963012373614724 && (otherRec.sym__0___45_138255197005962184 == sym__0___45_138255197005962184 && (otherRec.sym__0__8723886903896913538 == sym__0__8723886903896913538 && (otherRec.sym__0___45_6396778144419774102 == sym__0___45_6396778144419774102 && (otherRec.sym__0__4345290193888622188 == sym__0__4345290193888622188 && (otherRec.sym__0__4748858544164465891 == sym__0__4748858544164465891 && (otherRec.sym__0___45_2013870166617871634 == sym__0___45_2013870166617871634 && (otherRec.sym__0__4486213189679553123 == sym__0__4486213189679553123 && (otherRec.sym__0__2044116807841453321 == sym__0__2044116807841453321 && (otherRec.sym__0__5619260977463858154 == sym__0__5619260977463858154 && (otherRec.sym__0___45_8920615137005718662 == sym__0___45_8920615137005718662 && (otherRec.sym__0__2992813735709491256 == sym__0__2992813735709491256 && (otherRec.sym__0___45_4738111187081458162 == sym__0___45_4738111187081458162 && (otherRec.sym__0__7342994916058425376 == sym__0__7342994916058425376 && (otherRec.sym__0___45_102160816985196364 == sym__0___45_102160816985196364 && (otherRec.sym__0__1283865848515870159 == sym__0__1283865848515870159 && (otherRec.sym__0___45_6653948180198187699 == sym__0___45_6653948180198187699 && otherRec.sym__0__1838544743518506357 == sym__0__1838544743518506357))))))))))))))))))))))))))))))))))))))))))))))));
  }
  bool operator !=(const Record1& otherRec) const{
    return (otherRec.sym__0__7577655604576576020 != sym__0__7577655604576576020 || (otherRec.sym__0___45_2957579613704386588 != sym__0___45_2957579613704386588 || (otherRec.sym__0__3873855183530032714 != sym__0__3873855183530032714 || (otherRec.sym__0___45_5414786619423294939 != sym__0___45_5414786619423294939 || (otherRec.sym__0__5557137180551786739 != sym__0__5557137180551786739 || (otherRec.sym__0___45_6042740597378878507 != sym__0___45_6042740597378878507 || (otherRec.sym__0___45_5833642980832303428 != sym__0___45_5833642980832303428 || (otherRec.sym__0___45_5108599129385010601 != sym__0___45_5108599129385010601 || (otherRec.sym__0__6596363747273139740 != sym__0__6596363747273139740 || (otherRec.sym__0___45_3780820615727466252 != sym__0___45_3780820615727466252 || (otherRec.sym__0___45_5733022218377332670 != sym__0___45_5733022218377332670 || (otherRec.sym__0___45_1101619184546797307 != sym__0___45_1101619184546797307 || (otherRec.sym__0__5315661629871309616 != sym__0__5315661629871309616 || (otherRec.sym__0__1548970624774688888 != sym__0__1548970624774688888 || (otherRec.sym__0__3082040486510970809 != sym__0__3082040486510970809 || (otherRec.sym__0___45_3773548088295367727 != sym__0___45_3773548088295367727 || (otherRec.sym__0__2425475927764529115 != sym__0__2425475927764529115 || (otherRec.sym__0__3550854697533762172 != sym__0__3550854697533762172 || (otherRec.sym__0___45_2428002636247423964 != sym__0___45_2428002636247423964 || (otherRec.sym__0__2537603616087343230 != sym__0__2537603616087343230 || (otherRec.sym__0___45_5133924085204218680 != sym__0___45_5133924085204218680 || (otherRec.sym__0__1411885469038113506 != sym__0__1411885469038113506 || (otherRec.sym__0___45_4336521243533294241 != sym__0___45_4336521243533294241 || (otherRec.sym__0___45_2416233287424533084 != sym__0___45_2416233287424533084 || (otherRec.sym__0___45_8608893297661193168 != sym__0___45_8608893297661193168 || (otherRec.sym__0__6600743152885821739 != sym__0__6600743152885821739 || (otherRec.sym__0__8327451819077700100 != sym__0__8327451819077700100 || (otherRec.sym__0__6397198241134363110 != sym__0__6397198241134363110 || (otherRec.sym__0___45_5337640715365439464 != sym__0___45_5337640715365439464 || (otherRec.sym__0__6843344685518481994 != sym__0__6843344685518481994 || (otherRec.sym__0___45_281035451017513097 != sym__0___45_281035451017513097 || (otherRec.sym__0__978963012373614724 != sym__0__978963012373614724 || (otherRec.sym__0___45_138255197005962184 != sym__0___45_138255197005962184 || (otherRec.sym__0__8723886903896913538 != sym__0__8723886903896913538 || (otherRec.sym__0___45_6396778144419774102 != sym__0___45_6396778144419774102 || (otherRec.sym__0__4345290193888622188 != sym__0__4345290193888622188 || (otherRec.sym__0__4748858544164465891 != sym__0__4748858544164465891 || (otherRec.sym__0___45_2013870166617871634 != sym__0___45_2013870166617871634 || (otherRec.sym__0__4486213189679553123 != sym__0__4486213189679553123 || (otherRec.sym__0__2044116807841453321 != sym__0__2044116807841453321 || (otherRec.sym__0__5619260977463858154 != sym__0__5619260977463858154 || (otherRec.sym__0___45_8920615137005718662 != sym__0___45_8920615137005718662 || (otherRec.sym__0__2992813735709491256 != sym__0__2992813735709491256 || (otherRec.sym__0___45_4738111187081458162 != sym__0___45_4738111187081458162 || (otherRec.sym__0__7342994916058425376 != sym__0__7342994916058425376 || (otherRec.sym__0___45_102160816985196364 != sym__0___45_102160816985196364 || (otherRec.sym__0__1283865848515870159 != sym__0__1283865848515870159 || (otherRec.sym__0___45_6653948180198187699 != sym__0___45_6653948180198187699 || otherRec.sym__0__1838544743518506357 != sym__0__1838544743518506357))))))))))))))))))))))))))))))))))))))))))))))));
  }
  unsigned sym__0__7577655604576576020;
  fluidb_string<18> sym__0___45_2957579613704386588;
  fluidb_string<9> sym__0__3873855183530032714;
  fluidb_string<9> sym__0___45_5414786619423294939;
  unsigned sym__0__5557137180551786739;
  unsigned sym__0___45_6042740597378878507;
  fluidb_string<7> sym__0___45_5833642980832303428;
  unsigned sym__0___45_5108599129385010601;
  unsigned sym__0__6596363747273139740;
  unsigned sym__0___45_3780820615727466252;
  unsigned sym__0___45_5733022218377332670;
  unsigned sym__0___45_1101619184546797307;
  fluidb_string<15> sym__0__5315661629871309616;
  fluidb_string<2> sym__0__1548970624774688888;
  fluidb_string<2> sym__0__3082040486510970809;
  fluidb_string<2> sym__0___45_3773548088295367727;
  fluidb_string<2> sym__0__2425475927764529115;
  unsigned sym__0__3550854697533762172;
  fluidb_string<18> sym__0___45_2428002636247423964;
  fluidb_string<40> sym__0__2537603616087343230;
  fluidb_string<11> sym__0___45_5133924085204218680;
  fluidb_string<15> sym__0__1411885469038113506;
  fluidb_string<13> sym__0___45_4336521243533294241;
  fluidb_string<15> sym__0___45_2416233287424533084;
  fluidb_string<21> sym__0___45_8608893297661193168;
  unsigned sym__0__6600743152885821739;
  fluidb_string<25> sym__0__8327451819077700100;
  fluidb_string<40> sym__0__6397198241134363110;
  fluidb_string<16> sym__0___45_5337640715365439464;
  fluidb_string<16> sym__0__6843344685518481994;
  fluidb_string<13> sym__0___45_281035451017513097;
  fluidb_string<15> sym__0__978963012373614724;
  unsigned sym__0___45_138255197005962184;
  int sym__0__8723886903896913538;
  unsigned sym__0___45_6396778144419774102;
  unsigned sym__0__4345290193888622188;
  unsigned sym__0__4748858544164465891;
  unsigned sym__0___45_2013870166617871634;
  fluidb_string<21> sym__0__4486213189679553123;
  unsigned sym__0__2044116807841453321;
  fluidb_string<10> sym__0__5619260977463858154;
  unsigned sym__0___45_8920615137005718662;
  double sym__0__2992813735709491256;
  unsigned sym__0___45_4738111187081458162;
  double sym__0__7342994916058425376;
  unsigned sym__0___45_102160816985196364;
  unsigned sym__0__1283865848515870159;
  double sym__0___45_6653948180198187699;
  fluidb_string<13> sym__0__1838544743518506357;
 private:
};


class Record20 {
 public:
  Record20(unsigned __sortElem0) : sortElem0(__sortElem0)
  {
  }
  Record20() 
  {
  }
  std::string show() const{
    std::stringstream o;
    o << sortElem0;
    return o.str();
  }
  bool operator <(const Record20& otherRec) const{
    return otherRec.sortElem0 < sortElem0;
  }
  bool operator ==(const Record20& otherRec) const{
    return otherRec.sortElem0 == sortElem0;
  }
  bool operator !=(const Record20& otherRec) const{
    return otherRec.sortElem0 != sortElem0;
  }
  unsigned sortElem0;
 private:
};


class Record5 {
 public:
  Record5(unsigned __sym__0___45_3523672673417197226, fluidb_string<18> __sym__0__7338935531898451142, fluidb_string<9> __sym__0___45_7199667234944324856, fluidb_string<9> __sym__0___45_2898977301459403037, unsigned __sym__0__8142673845411997397, unsigned __sym__0___45_3365840036496070669, fluidb_string<7> __sym__0__713848592987116206, unsigned __sym__0__1022708471739059609, unsigned __sym__0__1609622665336162318, unsigned __sym__0__5894560879969492790, unsigned __sym__0__6161713668904618576, unsigned __sym__0___45_5350160591170912573, fluidb_string<15> __sym__0__7890067861864424994, fluidb_string<2> __sym__0__6708753188419736154, fluidb_string<2> __sym__0__4582149681986391415, fluidb_string<2> __sym__0___45_8718474134339807009, fluidb_string<2> __sym__0___45_1547707910421817299, unsigned __sym__0__6068529779339057262, fluidb_string<18> __sym__0___45_4730693783839834362, fluidb_string<40> __sym__0__2079260478496303340, fluidb_string<11> __sym__0___45_3956792959991438582, fluidb_string<15> __sym__0___45_8316559279801582864, fluidb_string<13> __sym__0___45_3104075498139127471, fluidb_string<15> __sym__0___45_6637589282919129210, fluidb_string<21> __sym__0__3173083570778740002, unsigned __sym__0__49568785671724893, fluidb_string<25> __sym__0___45_8671242175283524122, fluidb_string<40> __sym__0__8045204309842333188, fluidb_string<16> __sym__0__7388366118437445626, fluidb_string<16> __sym__0___45_6247682992415910136, fluidb_string<13> __sym__0___45_8476130017571818055, fluidb_string<15> __sym__0__522454679001458534, unsigned __sym__0__6203194341659602714, int __sym__0___45_8346406923246249328, unsigned __sym__0__7261181942821772584, unsigned __sym__0__4921385962903522046, unsigned __sym__0___45_373861829262187483, unsigned __sym__0__7581746963088065020, fluidb_string<21> __sym__0__361377377101151909, unsigned __sym__0___45_3700129260976925913, fluidb_string<10> __sym__0__6098359273528291496, unsigned __sym__0___45_4676353293641220968, double __sym__0__7082112007385025306, unsigned __sym__0__7160864855686602780, double __sym__0___45_8233331576153659470, unsigned __sym__0___45_2888559707917916682, unsigned __sym__0__1989813165103345441, double __sym__0___45_5693677300964040709, fluidb_string<13> __sym__0__5140151745458422419) : sym__0___45_3523672673417197226(__sym__0___45_3523672673417197226), sym__0__7338935531898451142(__sym__0__7338935531898451142), sym__0___45_7199667234944324856(__sym__0___45_7199667234944324856), sym__0___45_2898977301459403037(__sym__0___45_2898977301459403037), sym__0__8142673845411997397(__sym__0__8142673845411997397), sym__0___45_3365840036496070669(__sym__0___45_3365840036496070669), sym__0__713848592987116206(__sym__0__713848592987116206), sym__0__1022708471739059609(__sym__0__1022708471739059609), sym__0__1609622665336162318(__sym__0__1609622665336162318), sym__0__5894560879969492790(__sym__0__5894560879969492790), sym__0__6161713668904618576(__sym__0__6161713668904618576), sym__0___45_5350160591170912573(__sym__0___45_5350160591170912573), sym__0__7890067861864424994(__sym__0__7890067861864424994), sym__0__6708753188419736154(__sym__0__6708753188419736154), sym__0__4582149681986391415(__sym__0__4582149681986391415), sym__0___45_8718474134339807009(__sym__0___45_8718474134339807009), sym__0___45_1547707910421817299(__sym__0___45_1547707910421817299), sym__0__6068529779339057262(__sym__0__6068529779339057262), sym__0___45_4730693783839834362(__sym__0___45_4730693783839834362), sym__0__2079260478496303340(__sym__0__2079260478496303340), sym__0___45_3956792959991438582(__sym__0___45_3956792959991438582), sym__0___45_8316559279801582864(__sym__0___45_8316559279801582864), sym__0___45_3104075498139127471(__sym__0___45_3104075498139127471), sym__0___45_6637589282919129210(__sym__0___45_6637589282919129210), sym__0__3173083570778740002(__sym__0__3173083570778740002), sym__0__49568785671724893(__sym__0__49568785671724893), sym__0___45_8671242175283524122(__sym__0___45_8671242175283524122), sym__0__8045204309842333188(__sym__0__8045204309842333188), sym__0__7388366118437445626(__sym__0__7388366118437445626), sym__0___45_6247682992415910136(__sym__0___45_6247682992415910136), sym__0___45_8476130017571818055(__sym__0___45_8476130017571818055), sym__0__522454679001458534(__sym__0__522454679001458534), sym__0__6203194341659602714(__sym__0__6203194341659602714), sym__0___45_8346406923246249328(__sym__0___45_8346406923246249328), sym__0__7261181942821772584(__sym__0__7261181942821772584), sym__0__4921385962903522046(__sym__0__4921385962903522046), sym__0___45_373861829262187483(__sym__0___45_373861829262187483), sym__0__7581746963088065020(__sym__0__7581746963088065020), sym__0__361377377101151909(__sym__0__361377377101151909), sym__0___45_3700129260976925913(__sym__0___45_3700129260976925913), sym__0__6098359273528291496(__sym__0__6098359273528291496), sym__0___45_4676353293641220968(__sym__0___45_4676353293641220968), sym__0__7082112007385025306(__sym__0__7082112007385025306), sym__0__7160864855686602780(__sym__0__7160864855686602780), sym__0___45_8233331576153659470(__sym__0___45_8233331576153659470), sym__0___45_2888559707917916682(__sym__0___45_2888559707917916682), sym__0__1989813165103345441(__sym__0__1989813165103345441), sym__0___45_5693677300964040709(__sym__0___45_5693677300964040709), sym__0__5140151745458422419(__sym__0__5140151745458422419)
  {
  }
  Record5() 
  {
  }
  std::string show() const{
    std::stringstream o;
    o << sym__0___45_3523672673417197226 << " | " << arrToString(sym__0__7338935531898451142) << " | " << arrToString(sym__0___45_7199667234944324856) << " | " << arrToString(sym__0___45_2898977301459403037) << " | " << sym__0__8142673845411997397 << " | " << sym__0___45_3365840036496070669 << " | " << arrToString(sym__0__713848592987116206) << " | " << sym__0__1022708471739059609 << " | " << sym__0__1609622665336162318 << " | " << sym__0__5894560879969492790 << " | " << sym__0__6161713668904618576 << " | " << sym__0___45_5350160591170912573 << " | " << arrToString(sym__0__7890067861864424994) << " | " << arrToString(sym__0__6708753188419736154) << " | " << arrToString(sym__0__4582149681986391415) << " | " << arrToString(sym__0___45_8718474134339807009) << " | " << arrToString(sym__0___45_1547707910421817299) << " | " << sym__0__6068529779339057262 << " | " << arrToString(sym__0___45_4730693783839834362) << " | " << arrToString(sym__0__2079260478496303340) << " | " << arrToString(sym__0___45_3956792959991438582) << " | " << arrToString(sym__0___45_8316559279801582864) << " | " << arrToString(sym__0___45_3104075498139127471) << " | " << arrToString(sym__0___45_6637589282919129210) << " | " << arrToString(sym__0__3173083570778740002) << " | " << sym__0__49568785671724893 << " | " << arrToString(sym__0___45_8671242175283524122) << " | " << arrToString(sym__0__8045204309842333188) << " | " << arrToString(sym__0__7388366118437445626) << " | " << arrToString(sym__0___45_6247682992415910136) << " | " << arrToString(sym__0___45_8476130017571818055) << " | " << arrToString(sym__0__522454679001458534) << " | " << sym__0__6203194341659602714 << " | " << sym__0___45_8346406923246249328 << " | " << sym__0__7261181942821772584 << " | " << sym__0__4921385962903522046 << " | " << sym__0___45_373861829262187483 << " | " << sym__0__7581746963088065020 << " | " << arrToString(sym__0__361377377101151909) << " | " << sym__0___45_3700129260976925913 << " | " << arrToString(sym__0__6098359273528291496) << " | " << sym__0___45_4676353293641220968 << " | " << sym__0__7082112007385025306 << " | " << sym__0__7160864855686602780 << " | " << sym__0___45_8233331576153659470 << " | " << sym__0___45_2888559707917916682 << " | " << sym__0__1989813165103345441 << " | " << sym__0___45_5693677300964040709 << " | " << arrToString(sym__0__5140151745458422419);
    return o.str();
  }
  bool operator <(const Record5& otherRec) const{
    return (otherRec.sym__0___45_3523672673417197226 < sym__0___45_3523672673417197226 && (otherRec.sym__0__7338935531898451142 < sym__0__7338935531898451142 && (otherRec.sym__0___45_7199667234944324856 < sym__0___45_7199667234944324856 && (otherRec.sym__0___45_2898977301459403037 < sym__0___45_2898977301459403037 && (otherRec.sym__0__8142673845411997397 < sym__0__8142673845411997397 && (otherRec.sym__0___45_3365840036496070669 < sym__0___45_3365840036496070669 && (otherRec.sym__0__713848592987116206 < sym__0__713848592987116206 && (otherRec.sym__0__1022708471739059609 < sym__0__1022708471739059609 && (otherRec.sym__0__1609622665336162318 < sym__0__1609622665336162318 && (otherRec.sym__0__5894560879969492790 < sym__0__5894560879969492790 && (otherRec.sym__0__6161713668904618576 < sym__0__6161713668904618576 && (otherRec.sym__0___45_5350160591170912573 < sym__0___45_5350160591170912573 && (otherRec.sym__0__7890067861864424994 < sym__0__7890067861864424994 && (otherRec.sym__0__6708753188419736154 < sym__0__6708753188419736154 && (otherRec.sym__0__4582149681986391415 < sym__0__4582149681986391415 && (otherRec.sym__0___45_8718474134339807009 < sym__0___45_8718474134339807009 && (otherRec.sym__0___45_1547707910421817299 < sym__0___45_1547707910421817299 && (otherRec.sym__0__6068529779339057262 < sym__0__6068529779339057262 && (otherRec.sym__0___45_4730693783839834362 < sym__0___45_4730693783839834362 && (otherRec.sym__0__2079260478496303340 < sym__0__2079260478496303340 && (otherRec.sym__0___45_3956792959991438582 < sym__0___45_3956792959991438582 && (otherRec.sym__0___45_8316559279801582864 < sym__0___45_8316559279801582864 && (otherRec.sym__0___45_3104075498139127471 < sym__0___45_3104075498139127471 && (otherRec.sym__0___45_6637589282919129210 < sym__0___45_6637589282919129210 && (otherRec.sym__0__3173083570778740002 < sym__0__3173083570778740002 && (otherRec.sym__0__49568785671724893 < sym__0__49568785671724893 && (otherRec.sym__0___45_8671242175283524122 < sym__0___45_8671242175283524122 && (otherRec.sym__0__8045204309842333188 < sym__0__8045204309842333188 && (otherRec.sym__0__7388366118437445626 < sym__0__7388366118437445626 && (otherRec.sym__0___45_6247682992415910136 < sym__0___45_6247682992415910136 && (otherRec.sym__0___45_8476130017571818055 < sym__0___45_8476130017571818055 && (otherRec.sym__0__522454679001458534 < sym__0__522454679001458534 && (otherRec.sym__0__6203194341659602714 < sym__0__6203194341659602714 && (otherRec.sym__0___45_8346406923246249328 < sym__0___45_8346406923246249328 && (otherRec.sym__0__7261181942821772584 < sym__0__7261181942821772584 && (otherRec.sym__0__4921385962903522046 < sym__0__4921385962903522046 && (otherRec.sym__0___45_373861829262187483 < sym__0___45_373861829262187483 && (otherRec.sym__0__7581746963088065020 < sym__0__7581746963088065020 && (otherRec.sym__0__361377377101151909 < sym__0__361377377101151909 && (otherRec.sym__0___45_3700129260976925913 < sym__0___45_3700129260976925913 && (otherRec.sym__0__6098359273528291496 < sym__0__6098359273528291496 && (otherRec.sym__0___45_4676353293641220968 < sym__0___45_4676353293641220968 && (otherRec.sym__0__7082112007385025306 < sym__0__7082112007385025306 && (otherRec.sym__0__7160864855686602780 < sym__0__7160864855686602780 && (otherRec.sym__0___45_8233331576153659470 < sym__0___45_8233331576153659470 && (otherRec.sym__0___45_2888559707917916682 < sym__0___45_2888559707917916682 && (otherRec.sym__0__1989813165103345441 < sym__0__1989813165103345441 && (otherRec.sym__0___45_5693677300964040709 < sym__0___45_5693677300964040709 && otherRec.sym__0__5140151745458422419 < sym__0__5140151745458422419))))))))))))))))))))))))))))))))))))))))))))))));
  }
  bool operator ==(const Record5& otherRec) const{
    return (otherRec.sym__0___45_3523672673417197226 == sym__0___45_3523672673417197226 && (otherRec.sym__0__7338935531898451142 == sym__0__7338935531898451142 && (otherRec.sym__0___45_7199667234944324856 == sym__0___45_7199667234944324856 && (otherRec.sym__0___45_2898977301459403037 == sym__0___45_2898977301459403037 && (otherRec.sym__0__8142673845411997397 == sym__0__8142673845411997397 && (otherRec.sym__0___45_3365840036496070669 == sym__0___45_3365840036496070669 && (otherRec.sym__0__713848592987116206 == sym__0__713848592987116206 && (otherRec.sym__0__1022708471739059609 == sym__0__1022708471739059609 && (otherRec.sym__0__1609622665336162318 == sym__0__1609622665336162318 && (otherRec.sym__0__5894560879969492790 == sym__0__5894560879969492790 && (otherRec.sym__0__6161713668904618576 == sym__0__6161713668904618576 && (otherRec.sym__0___45_5350160591170912573 == sym__0___45_5350160591170912573 && (otherRec.sym__0__7890067861864424994 == sym__0__7890067861864424994 && (otherRec.sym__0__6708753188419736154 == sym__0__6708753188419736154 && (otherRec.sym__0__4582149681986391415 == sym__0__4582149681986391415 && (otherRec.sym__0___45_8718474134339807009 == sym__0___45_8718474134339807009 && (otherRec.sym__0___45_1547707910421817299 == sym__0___45_1547707910421817299 && (otherRec.sym__0__6068529779339057262 == sym__0__6068529779339057262 && (otherRec.sym__0___45_4730693783839834362 == sym__0___45_4730693783839834362 && (otherRec.sym__0__2079260478496303340 == sym__0__2079260478496303340 && (otherRec.sym__0___45_3956792959991438582 == sym__0___45_3956792959991438582 && (otherRec.sym__0___45_8316559279801582864 == sym__0___45_8316559279801582864 && (otherRec.sym__0___45_3104075498139127471 == sym__0___45_3104075498139127471 && (otherRec.sym__0___45_6637589282919129210 == sym__0___45_6637589282919129210 && (otherRec.sym__0__3173083570778740002 == sym__0__3173083570778740002 && (otherRec.sym__0__49568785671724893 == sym__0__49568785671724893 && (otherRec.sym__0___45_8671242175283524122 == sym__0___45_8671242175283524122 && (otherRec.sym__0__8045204309842333188 == sym__0__8045204309842333188 && (otherRec.sym__0__7388366118437445626 == sym__0__7388366118437445626 && (otherRec.sym__0___45_6247682992415910136 == sym__0___45_6247682992415910136 && (otherRec.sym__0___45_8476130017571818055 == sym__0___45_8476130017571818055 && (otherRec.sym__0__522454679001458534 == sym__0__522454679001458534 && (otherRec.sym__0__6203194341659602714 == sym__0__6203194341659602714 && (otherRec.sym__0___45_8346406923246249328 == sym__0___45_8346406923246249328 && (otherRec.sym__0__7261181942821772584 == sym__0__7261181942821772584 && (otherRec.sym__0__4921385962903522046 == sym__0__4921385962903522046 && (otherRec.sym__0___45_373861829262187483 == sym__0___45_373861829262187483 && (otherRec.sym__0__7581746963088065020 == sym__0__7581746963088065020 && (otherRec.sym__0__361377377101151909 == sym__0__361377377101151909 && (otherRec.sym__0___45_3700129260976925913 == sym__0___45_3700129260976925913 && (otherRec.sym__0__6098359273528291496 == sym__0__6098359273528291496 && (otherRec.sym__0___45_4676353293641220968 == sym__0___45_4676353293641220968 && (otherRec.sym__0__7082112007385025306 == sym__0__7082112007385025306 && (otherRec.sym__0__7160864855686602780 == sym__0__7160864855686602780 && (otherRec.sym__0___45_8233331576153659470 == sym__0___45_8233331576153659470 && (otherRec.sym__0___45_2888559707917916682 == sym__0___45_2888559707917916682 && (otherRec.sym__0__1989813165103345441 == sym__0__1989813165103345441 && (otherRec.sym__0___45_5693677300964040709 == sym__0___45_5693677300964040709 && otherRec.sym__0__5140151745458422419 == sym__0__5140151745458422419))))))))))))))))))))))))))))))))))))))))))))))));
  }
  bool operator !=(const Record5& otherRec) const{
    return (otherRec.sym__0___45_3523672673417197226 != sym__0___45_3523672673417197226 || (otherRec.sym__0__7338935531898451142 != sym__0__7338935531898451142 || (otherRec.sym__0___45_7199667234944324856 != sym__0___45_7199667234944324856 || (otherRec.sym__0___45_2898977301459403037 != sym__0___45_2898977301459403037 || (otherRec.sym__0__8142673845411997397 != sym__0__8142673845411997397 || (otherRec.sym__0___45_3365840036496070669 != sym__0___45_3365840036496070669 || (otherRec.sym__0__713848592987116206 != sym__0__713848592987116206 || (otherRec.sym__0__1022708471739059609 != sym__0__1022708471739059609 || (otherRec.sym__0__1609622665336162318 != sym__0__1609622665336162318 || (otherRec.sym__0__5894560879969492790 != sym__0__5894560879969492790 || (otherRec.sym__0__6161713668904618576 != sym__0__6161713668904618576 || (otherRec.sym__0___45_5350160591170912573 != sym__0___45_5350160591170912573 || (otherRec.sym__0__7890067861864424994 != sym__0__7890067861864424994 || (otherRec.sym__0__6708753188419736154 != sym__0__6708753188419736154 || (otherRec.sym__0__4582149681986391415 != sym__0__4582149681986391415 || (otherRec.sym__0___45_8718474134339807009 != sym__0___45_8718474134339807009 || (otherRec.sym__0___45_1547707910421817299 != sym__0___45_1547707910421817299 || (otherRec.sym__0__6068529779339057262 != sym__0__6068529779339057262 || (otherRec.sym__0___45_4730693783839834362 != sym__0___45_4730693783839834362 || (otherRec.sym__0__2079260478496303340 != sym__0__2079260478496303340 || (otherRec.sym__0___45_3956792959991438582 != sym__0___45_3956792959991438582 || (otherRec.sym__0___45_8316559279801582864 != sym__0___45_8316559279801582864 || (otherRec.sym__0___45_3104075498139127471 != sym__0___45_3104075498139127471 || (otherRec.sym__0___45_6637589282919129210 != sym__0___45_6637589282919129210 || (otherRec.sym__0__3173083570778740002 != sym__0__3173083570778740002 || (otherRec.sym__0__49568785671724893 != sym__0__49568785671724893 || (otherRec.sym__0___45_8671242175283524122 != sym__0___45_8671242175283524122 || (otherRec.sym__0__8045204309842333188 != sym__0__8045204309842333188 || (otherRec.sym__0__7388366118437445626 != sym__0__7388366118437445626 || (otherRec.sym__0___45_6247682992415910136 != sym__0___45_6247682992415910136 || (otherRec.sym__0___45_8476130017571818055 != sym__0___45_8476130017571818055 || (otherRec.sym__0__522454679001458534 != sym__0__522454679001458534 || (otherRec.sym__0__6203194341659602714 != sym__0__6203194341659602714 || (otherRec.sym__0___45_8346406923246249328 != sym__0___45_8346406923246249328 || (otherRec.sym__0__7261181942821772584 != sym__0__7261181942821772584 || (otherRec.sym__0__4921385962903522046 != sym__0__4921385962903522046 || (otherRec.sym__0___45_373861829262187483 != sym__0___45_373861829262187483 || (otherRec.sym__0__7581746963088065020 != sym__0__7581746963088065020 || (otherRec.sym__0__361377377101151909 != sym__0__361377377101151909 || (otherRec.sym__0___45_3700129260976925913 != sym__0___45_3700129260976925913 || (otherRec.sym__0__6098359273528291496 != sym__0__6098359273528291496 || (otherRec.sym__0___45_4676353293641220968 != sym__0___45_4676353293641220968 || (otherRec.sym__0__7082112007385025306 != sym__0__7082112007385025306 || (otherRec.sym__0__7160864855686602780 != sym__0__7160864855686602780 || (otherRec.sym__0___45_8233331576153659470 != sym__0___45_8233331576153659470 || (otherRec.sym__0___45_2888559707917916682 != sym__0___45_2888559707917916682 || (otherRec.sym__0__1989813165103345441 != sym__0__1989813165103345441 || (otherRec.sym__0___45_5693677300964040709 != sym__0___45_5693677300964040709 || otherRec.sym__0__5140151745458422419 != sym__0__5140151745458422419))))))))))))))))))))))))))))))))))))))))))))))));
  }
  unsigned sym__0___45_3523672673417197226;
  fluidb_string<18> sym__0__7338935531898451142;
  fluidb_string<9> sym__0___45_7199667234944324856;
  fluidb_string<9> sym__0___45_2898977301459403037;
  unsigned sym__0__8142673845411997397;
  unsigned sym__0___45_3365840036496070669;
  fluidb_string<7> sym__0__713848592987116206;
  unsigned sym__0__1022708471739059609;
  unsigned sym__0__1609622665336162318;
  unsigned sym__0__5894560879969492790;
  unsigned sym__0__6161713668904618576;
  unsigned sym__0___45_5350160591170912573;
  fluidb_string<15> sym__0__7890067861864424994;
  fluidb_string<2> sym__0__6708753188419736154;
  fluidb_string<2> sym__0__4582149681986391415;
  fluidb_string<2> sym__0___45_8718474134339807009;
  fluidb_string<2> sym__0___45_1547707910421817299;
  unsigned sym__0__6068529779339057262;
  fluidb_string<18> sym__0___45_4730693783839834362;
  fluidb_string<40> sym__0__2079260478496303340;
  fluidb_string<11> sym__0___45_3956792959991438582;
  fluidb_string<15> sym__0___45_8316559279801582864;
  fluidb_string<13> sym__0___45_3104075498139127471;
  fluidb_string<15> sym__0___45_6637589282919129210;
  fluidb_string<21> sym__0__3173083570778740002;
  unsigned sym__0__49568785671724893;
  fluidb_string<25> sym__0___45_8671242175283524122;
  fluidb_string<40> sym__0__8045204309842333188;
  fluidb_string<16> sym__0__7388366118437445626;
  fluidb_string<16> sym__0___45_6247682992415910136;
  fluidb_string<13> sym__0___45_8476130017571818055;
  fluidb_string<15> sym__0__522454679001458534;
  unsigned sym__0__6203194341659602714;
  int sym__0___45_8346406923246249328;
  unsigned sym__0__7261181942821772584;
  unsigned sym__0__4921385962903522046;
  unsigned sym__0___45_373861829262187483;
  unsigned sym__0__7581746963088065020;
  fluidb_string<21> sym__0__361377377101151909;
  unsigned sym__0___45_3700129260976925913;
  fluidb_string<10> sym__0__6098359273528291496;
  unsigned sym__0___45_4676353293641220968;
  double sym__0__7082112007385025306;
  unsigned sym__0__7160864855686602780;
  double sym__0___45_8233331576153659470;
  unsigned sym__0___45_2888559707917916682;
  unsigned sym__0__1989813165103345441;
  double sym__0___45_5693677300964040709;
  fluidb_string<13> sym__0__5140151745458422419;
 private:
};


class Record10 {
 public:
  Record10(unsigned __sym__0__9129251347634301288, fluidb_string<18> __sym__0___45_6054610750783156008, fluidb_string<9> __sym__0__5114159968815000430, fluidb_string<9> __sym__0__4882418220590314147, unsigned __sym__0__5912165115292323025, unsigned __sym__0___45_1898921036134915277, fluidb_string<7> __sym__0___45_3355937333080833904, unsigned __sym__0__4523196171742936133, unsigned __sym__0___45_669043640686266768, unsigned __sym__0___45_807502522391685304, unsigned __sym__0__5978583622473619078, unsigned __sym__0__7667625134875896963, fluidb_string<15> __sym__0__1141796479023120196, fluidb_string<2> __sym__0__1469379387491777068, fluidb_string<2> __sym__0__4727701876414981207, fluidb_string<2> __sym__0___45_1377883405744867601, fluidb_string<2> __sym__0__7834912808742248473, unsigned __sym__0___45_8200515075879493680, fluidb_string<18> __sym__0___45_5999345331201606248, fluidb_string<40> __sym__0___45_6151453051504149198, fluidb_string<11> __sym__0__2196925836082587100, fluidb_string<15> __sym__0__3281045596873157414, fluidb_string<13> __sym__0___45_7947799549852207059, fluidb_string<15> __sym__0__665896293318711576, fluidb_string<21> __sym__0___45_1369638599846897084, unsigned __sym__0__6920509631355683977, fluidb_string<25> __sym__0__6145269722867635448, fluidb_string<40> __sym__0__5484543966280855866, fluidb_string<16> __sym__0__2977773391091542732, fluidb_string<16> __sym__0___45_2696586719379751058, fluidb_string<13> __sym__0__6115568021865341157, fluidb_string<15> __sym__0___45_1374649252887321224, unsigned __sym__0__5400475506062602860, int __sym__0___45_2162106017621218234, unsigned __sym__0__4255029333099325966, unsigned __sym__0__5772793184221378976, unsigned __sym__0___45_6763192759432361567, unsigned __sym__0___45_8720580161973614270, fluidb_string<21> __sym__0__5813914033401412385, unsigned __sym__0___45_2553968467001529977, fluidb_string<10> __sym__0__6784288579576574606, unsigned __sym__0___45_752510532203263426, double __sym__0__1299561572090877548, unsigned __sym__0___45_6789456010122780702, double __sym__0__1623941919451968532, unsigned __sym__0___45_5363104405034702968, unsigned __sym__0__3267017113418461885, double __sym__0___45_4421103194815695765, fluidb_string<13> __sym__0___45_151953433332730669) : sym__0__9129251347634301288(__sym__0__9129251347634301288), sym__0___45_6054610750783156008(__sym__0___45_6054610750783156008), sym__0__5114159968815000430(__sym__0__5114159968815000430), sym__0__4882418220590314147(__sym__0__4882418220590314147), sym__0__5912165115292323025(__sym__0__5912165115292323025), sym__0___45_1898921036134915277(__sym__0___45_1898921036134915277), sym__0___45_3355937333080833904(__sym__0___45_3355937333080833904), sym__0__4523196171742936133(__sym__0__4523196171742936133), sym__0___45_669043640686266768(__sym__0___45_669043640686266768), sym__0___45_807502522391685304(__sym__0___45_807502522391685304), sym__0__5978583622473619078(__sym__0__5978583622473619078), sym__0__7667625134875896963(__sym__0__7667625134875896963), sym__0__1141796479023120196(__sym__0__1141796479023120196), sym__0__1469379387491777068(__sym__0__1469379387491777068), sym__0__4727701876414981207(__sym__0__4727701876414981207), sym__0___45_1377883405744867601(__sym__0___45_1377883405744867601), sym__0__7834912808742248473(__sym__0__7834912808742248473), sym__0___45_8200515075879493680(__sym__0___45_8200515075879493680), sym__0___45_5999345331201606248(__sym__0___45_5999345331201606248), sym__0___45_6151453051504149198(__sym__0___45_6151453051504149198), sym__0__2196925836082587100(__sym__0__2196925836082587100), sym__0__3281045596873157414(__sym__0__3281045596873157414), sym__0___45_7947799549852207059(__sym__0___45_7947799549852207059), sym__0__665896293318711576(__sym__0__665896293318711576), sym__0___45_1369638599846897084(__sym__0___45_1369638599846897084), sym__0__6920509631355683977(__sym__0__6920509631355683977), sym__0__6145269722867635448(__sym__0__6145269722867635448), sym__0__5484543966280855866(__sym__0__5484543966280855866), sym__0__2977773391091542732(__sym__0__2977773391091542732), sym__0___45_2696586719379751058(__sym__0___45_2696586719379751058), sym__0__6115568021865341157(__sym__0__6115568021865341157), sym__0___45_1374649252887321224(__sym__0___45_1374649252887321224), sym__0__5400475506062602860(__sym__0__5400475506062602860), sym__0___45_2162106017621218234(__sym__0___45_2162106017621218234), sym__0__4255029333099325966(__sym__0__4255029333099325966), sym__0__5772793184221378976(__sym__0__5772793184221378976), sym__0___45_6763192759432361567(__sym__0___45_6763192759432361567), sym__0___45_8720580161973614270(__sym__0___45_8720580161973614270), sym__0__5813914033401412385(__sym__0__5813914033401412385), sym__0___45_2553968467001529977(__sym__0___45_2553968467001529977), sym__0__6784288579576574606(__sym__0__6784288579576574606), sym__0___45_752510532203263426(__sym__0___45_752510532203263426), sym__0__1299561572090877548(__sym__0__1299561572090877548), sym__0___45_6789456010122780702(__sym__0___45_6789456010122780702), sym__0__1623941919451968532(__sym__0__1623941919451968532), sym__0___45_5363104405034702968(__sym__0___45_5363104405034702968), sym__0__3267017113418461885(__sym__0__3267017113418461885), sym__0___45_4421103194815695765(__sym__0___45_4421103194815695765), sym__0___45_151953433332730669(__sym__0___45_151953433332730669)
  {
  }
  Record10() 
  {
  }
  std::string show() const{
    std::stringstream o;
    o << sym__0__9129251347634301288 << " | " << arrToString(sym__0___45_6054610750783156008) << " | " << arrToString(sym__0__5114159968815000430) << " | " << arrToString(sym__0__4882418220590314147) << " | " << sym__0__5912165115292323025 << " | " << sym__0___45_1898921036134915277 << " | " << arrToString(sym__0___45_3355937333080833904) << " | " << sym__0__4523196171742936133 << " | " << sym__0___45_669043640686266768 << " | " << sym__0___45_807502522391685304 << " | " << sym__0__5978583622473619078 << " | " << sym__0__7667625134875896963 << " | " << arrToString(sym__0__1141796479023120196) << " | " << arrToString(sym__0__1469379387491777068) << " | " << arrToString(sym__0__4727701876414981207) << " | " << arrToString(sym__0___45_1377883405744867601) << " | " << arrToString(sym__0__7834912808742248473) << " | " << sym__0___45_8200515075879493680 << " | " << arrToString(sym__0___45_5999345331201606248) << " | " << arrToString(sym__0___45_6151453051504149198) << " | " << arrToString(sym__0__2196925836082587100) << " | " << arrToString(sym__0__3281045596873157414) << " | " << arrToString(sym__0___45_7947799549852207059) << " | " << arrToString(sym__0__665896293318711576) << " | " << arrToString(sym__0___45_1369638599846897084) << " | " << sym__0__6920509631355683977 << " | " << arrToString(sym__0__6145269722867635448) << " | " << arrToString(sym__0__5484543966280855866) << " | " << arrToString(sym__0__2977773391091542732) << " | " << arrToString(sym__0___45_2696586719379751058) << " | " << arrToString(sym__0__6115568021865341157) << " | " << arrToString(sym__0___45_1374649252887321224) << " | " << sym__0__5400475506062602860 << " | " << sym__0___45_2162106017621218234 << " | " << sym__0__4255029333099325966 << " | " << sym__0__5772793184221378976 << " | " << sym__0___45_6763192759432361567 << " | " << sym__0___45_8720580161973614270 << " | " << arrToString(sym__0__5813914033401412385) << " | " << sym__0___45_2553968467001529977 << " | " << arrToString(sym__0__6784288579576574606) << " | " << sym__0___45_752510532203263426 << " | " << sym__0__1299561572090877548 << " | " << sym__0___45_6789456010122780702 << " | " << sym__0__1623941919451968532 << " | " << sym__0___45_5363104405034702968 << " | " << sym__0__3267017113418461885 << " | " << sym__0___45_4421103194815695765 << " | " << arrToString(sym__0___45_151953433332730669);
    return o.str();
  }
  bool operator <(const Record10& otherRec) const{
    return (otherRec.sym__0__9129251347634301288 < sym__0__9129251347634301288 && (otherRec.sym__0___45_6054610750783156008 < sym__0___45_6054610750783156008 && (otherRec.sym__0__5114159968815000430 < sym__0__5114159968815000430 && (otherRec.sym__0__4882418220590314147 < sym__0__4882418220590314147 && (otherRec.sym__0__5912165115292323025 < sym__0__5912165115292323025 && (otherRec.sym__0___45_1898921036134915277 < sym__0___45_1898921036134915277 && (otherRec.sym__0___45_3355937333080833904 < sym__0___45_3355937333080833904 && (otherRec.sym__0__4523196171742936133 < sym__0__4523196171742936133 && (otherRec.sym__0___45_669043640686266768 < sym__0___45_669043640686266768 && (otherRec.sym__0___45_807502522391685304 < sym__0___45_807502522391685304 && (otherRec.sym__0__5978583622473619078 < sym__0__5978583622473619078 && (otherRec.sym__0__7667625134875896963 < sym__0__7667625134875896963 && (otherRec.sym__0__1141796479023120196 < sym__0__1141796479023120196 && (otherRec.sym__0__1469379387491777068 < sym__0__1469379387491777068 && (otherRec.sym__0__4727701876414981207 < sym__0__4727701876414981207 && (otherRec.sym__0___45_1377883405744867601 < sym__0___45_1377883405744867601 && (otherRec.sym__0__7834912808742248473 < sym__0__7834912808742248473 && (otherRec.sym__0___45_8200515075879493680 < sym__0___45_8200515075879493680 && (otherRec.sym__0___45_5999345331201606248 < sym__0___45_5999345331201606248 && (otherRec.sym__0___45_6151453051504149198 < sym__0___45_6151453051504149198 && (otherRec.sym__0__2196925836082587100 < sym__0__2196925836082587100 && (otherRec.sym__0__3281045596873157414 < sym__0__3281045596873157414 && (otherRec.sym__0___45_7947799549852207059 < sym__0___45_7947799549852207059 && (otherRec.sym__0__665896293318711576 < sym__0__665896293318711576 && (otherRec.sym__0___45_1369638599846897084 < sym__0___45_1369638599846897084 && (otherRec.sym__0__6920509631355683977 < sym__0__6920509631355683977 && (otherRec.sym__0__6145269722867635448 < sym__0__6145269722867635448 && (otherRec.sym__0__5484543966280855866 < sym__0__5484543966280855866 && (otherRec.sym__0__2977773391091542732 < sym__0__2977773391091542732 && (otherRec.sym__0___45_2696586719379751058 < sym__0___45_2696586719379751058 && (otherRec.sym__0__6115568021865341157 < sym__0__6115568021865341157 && (otherRec.sym__0___45_1374649252887321224 < sym__0___45_1374649252887321224 && (otherRec.sym__0__5400475506062602860 < sym__0__5400475506062602860 && (otherRec.sym__0___45_2162106017621218234 < sym__0___45_2162106017621218234 && (otherRec.sym__0__4255029333099325966 < sym__0__4255029333099325966 && (otherRec.sym__0__5772793184221378976 < sym__0__5772793184221378976 && (otherRec.sym__0___45_6763192759432361567 < sym__0___45_6763192759432361567 && (otherRec.sym__0___45_8720580161973614270 < sym__0___45_8720580161973614270 && (otherRec.sym__0__5813914033401412385 < sym__0__5813914033401412385 && (otherRec.sym__0___45_2553968467001529977 < sym__0___45_2553968467001529977 && (otherRec.sym__0__6784288579576574606 < sym__0__6784288579576574606 && (otherRec.sym__0___45_752510532203263426 < sym__0___45_752510532203263426 && (otherRec.sym__0__1299561572090877548 < sym__0__1299561572090877548 && (otherRec.sym__0___45_6789456010122780702 < sym__0___45_6789456010122780702 && (otherRec.sym__0__1623941919451968532 < sym__0__1623941919451968532 && (otherRec.sym__0___45_5363104405034702968 < sym__0___45_5363104405034702968 && (otherRec.sym__0__3267017113418461885 < sym__0__3267017113418461885 && (otherRec.sym__0___45_4421103194815695765 < sym__0___45_4421103194815695765 && otherRec.sym__0___45_151953433332730669 < sym__0___45_151953433332730669))))))))))))))))))))))))))))))))))))))))))))))));
  }
  bool operator ==(const Record10& otherRec) const{
    return (otherRec.sym__0__9129251347634301288 == sym__0__9129251347634301288 && (otherRec.sym__0___45_6054610750783156008 == sym__0___45_6054610750783156008 && (otherRec.sym__0__5114159968815000430 == sym__0__5114159968815000430 && (otherRec.sym__0__4882418220590314147 == sym__0__4882418220590314147 && (otherRec.sym__0__5912165115292323025 == sym__0__5912165115292323025 && (otherRec.sym__0___45_1898921036134915277 == sym__0___45_1898921036134915277 && (otherRec.sym__0___45_3355937333080833904 == sym__0___45_3355937333080833904 && (otherRec.sym__0__4523196171742936133 == sym__0__4523196171742936133 && (otherRec.sym__0___45_669043640686266768 == sym__0___45_669043640686266768 && (otherRec.sym__0___45_807502522391685304 == sym__0___45_807502522391685304 && (otherRec.sym__0__5978583622473619078 == sym__0__5978583622473619078 && (otherRec.sym__0__7667625134875896963 == sym__0__7667625134875896963 && (otherRec.sym__0__1141796479023120196 == sym__0__1141796479023120196 && (otherRec.sym__0__1469379387491777068 == sym__0__1469379387491777068 && (otherRec.sym__0__4727701876414981207 == sym__0__4727701876414981207 && (otherRec.sym__0___45_1377883405744867601 == sym__0___45_1377883405744867601 && (otherRec.sym__0__7834912808742248473 == sym__0__7834912808742248473 && (otherRec.sym__0___45_8200515075879493680 == sym__0___45_8200515075879493680 && (otherRec.sym__0___45_5999345331201606248 == sym__0___45_5999345331201606248 && (otherRec.sym__0___45_6151453051504149198 == sym__0___45_6151453051504149198 && (otherRec.sym__0__2196925836082587100 == sym__0__2196925836082587100 && (otherRec.sym__0__3281045596873157414 == sym__0__3281045596873157414 && (otherRec.sym__0___45_7947799549852207059 == sym__0___45_7947799549852207059 && (otherRec.sym__0__665896293318711576 == sym__0__665896293318711576 && (otherRec.sym__0___45_1369638599846897084 == sym__0___45_1369638599846897084 && (otherRec.sym__0__6920509631355683977 == sym__0__6920509631355683977 && (otherRec.sym__0__6145269722867635448 == sym__0__6145269722867635448 && (otherRec.sym__0__5484543966280855866 == sym__0__5484543966280855866 && (otherRec.sym__0__2977773391091542732 == sym__0__2977773391091542732 && (otherRec.sym__0___45_2696586719379751058 == sym__0___45_2696586719379751058 && (otherRec.sym__0__6115568021865341157 == sym__0__6115568021865341157 && (otherRec.sym__0___45_1374649252887321224 == sym__0___45_1374649252887321224 && (otherRec.sym__0__5400475506062602860 == sym__0__5400475506062602860 && (otherRec.sym__0___45_2162106017621218234 == sym__0___45_2162106017621218234 && (otherRec.sym__0__4255029333099325966 == sym__0__4255029333099325966 && (otherRec.sym__0__5772793184221378976 == sym__0__5772793184221378976 && (otherRec.sym__0___45_6763192759432361567 == sym__0___45_6763192759432361567 && (otherRec.sym__0___45_8720580161973614270 == sym__0___45_8720580161973614270 && (otherRec.sym__0__5813914033401412385 == sym__0__5813914033401412385 && (otherRec.sym__0___45_2553968467001529977 == sym__0___45_2553968467001529977 && (otherRec.sym__0__6784288579576574606 == sym__0__6784288579576574606 && (otherRec.sym__0___45_752510532203263426 == sym__0___45_752510532203263426 && (otherRec.sym__0__1299561572090877548 == sym__0__1299561572090877548 && (otherRec.sym__0___45_6789456010122780702 == sym__0___45_6789456010122780702 && (otherRec.sym__0__1623941919451968532 == sym__0__1623941919451968532 && (otherRec.sym__0___45_5363104405034702968 == sym__0___45_5363104405034702968 && (otherRec.sym__0__3267017113418461885 == sym__0__3267017113418461885 && (otherRec.sym__0___45_4421103194815695765 == sym__0___45_4421103194815695765 && otherRec.sym__0___45_151953433332730669 == sym__0___45_151953433332730669))))))))))))))))))))))))))))))))))))))))))))))));
  }
  bool operator !=(const Record10& otherRec) const{
    return (otherRec.sym__0__9129251347634301288 != sym__0__9129251347634301288 || (otherRec.sym__0___45_6054610750783156008 != sym__0___45_6054610750783156008 || (otherRec.sym__0__5114159968815000430 != sym__0__5114159968815000430 || (otherRec.sym__0__4882418220590314147 != sym__0__4882418220590314147 || (otherRec.sym__0__5912165115292323025 != sym__0__5912165115292323025 || (otherRec.sym__0___45_1898921036134915277 != sym__0___45_1898921036134915277 || (otherRec.sym__0___45_3355937333080833904 != sym__0___45_3355937333080833904 || (otherRec.sym__0__4523196171742936133 != sym__0__4523196171742936133 || (otherRec.sym__0___45_669043640686266768 != sym__0___45_669043640686266768 || (otherRec.sym__0___45_807502522391685304 != sym__0___45_807502522391685304 || (otherRec.sym__0__5978583622473619078 != sym__0__5978583622473619078 || (otherRec.sym__0__7667625134875896963 != sym__0__7667625134875896963 || (otherRec.sym__0__1141796479023120196 != sym__0__1141796479023120196 || (otherRec.sym__0__1469379387491777068 != sym__0__1469379387491777068 || (otherRec.sym__0__4727701876414981207 != sym__0__4727701876414981207 || (otherRec.sym__0___45_1377883405744867601 != sym__0___45_1377883405744867601 || (otherRec.sym__0__7834912808742248473 != sym__0__7834912808742248473 || (otherRec.sym__0___45_8200515075879493680 != sym__0___45_8200515075879493680 || (otherRec.sym__0___45_5999345331201606248 != sym__0___45_5999345331201606248 || (otherRec.sym__0___45_6151453051504149198 != sym__0___45_6151453051504149198 || (otherRec.sym__0__2196925836082587100 != sym__0__2196925836082587100 || (otherRec.sym__0__3281045596873157414 != sym__0__3281045596873157414 || (otherRec.sym__0___45_7947799549852207059 != sym__0___45_7947799549852207059 || (otherRec.sym__0__665896293318711576 != sym__0__665896293318711576 || (otherRec.sym__0___45_1369638599846897084 != sym__0___45_1369638599846897084 || (otherRec.sym__0__6920509631355683977 != sym__0__6920509631355683977 || (otherRec.sym__0__6145269722867635448 != sym__0__6145269722867635448 || (otherRec.sym__0__5484543966280855866 != sym__0__5484543966280855866 || (otherRec.sym__0__2977773391091542732 != sym__0__2977773391091542732 || (otherRec.sym__0___45_2696586719379751058 != sym__0___45_2696586719379751058 || (otherRec.sym__0__6115568021865341157 != sym__0__6115568021865341157 || (otherRec.sym__0___45_1374649252887321224 != sym__0___45_1374649252887321224 || (otherRec.sym__0__5400475506062602860 != sym__0__5400475506062602860 || (otherRec.sym__0___45_2162106017621218234 != sym__0___45_2162106017621218234 || (otherRec.sym__0__4255029333099325966 != sym__0__4255029333099325966 || (otherRec.sym__0__5772793184221378976 != sym__0__5772793184221378976 || (otherRec.sym__0___45_6763192759432361567 != sym__0___45_6763192759432361567 || (otherRec.sym__0___45_8720580161973614270 != sym__0___45_8720580161973614270 || (otherRec.sym__0__5813914033401412385 != sym__0__5813914033401412385 || (otherRec.sym__0___45_2553968467001529977 != sym__0___45_2553968467001529977 || (otherRec.sym__0__6784288579576574606 != sym__0__6784288579576574606 || (otherRec.sym__0___45_752510532203263426 != sym__0___45_752510532203263426 || (otherRec.sym__0__1299561572090877548 != sym__0__1299561572090877548 || (otherRec.sym__0___45_6789456010122780702 != sym__0___45_6789456010122780702 || (otherRec.sym__0__1623941919451968532 != sym__0__1623941919451968532 || (otherRec.sym__0___45_5363104405034702968 != sym__0___45_5363104405034702968 || (otherRec.sym__0__3267017113418461885 != sym__0__3267017113418461885 || (otherRec.sym__0___45_4421103194815695765 != sym__0___45_4421103194815695765 || otherRec.sym__0___45_151953433332730669 != sym__0___45_151953433332730669))))))))))))))))))))))))))))))))))))))))))))))));
  }
  unsigned sym__0__9129251347634301288;
  fluidb_string<18> sym__0___45_6054610750783156008;
  fluidb_string<9> sym__0__5114159968815000430;
  fluidb_string<9> sym__0__4882418220590314147;
  unsigned sym__0__5912165115292323025;
  unsigned sym__0___45_1898921036134915277;
  fluidb_string<7> sym__0___45_3355937333080833904;
  unsigned sym__0__4523196171742936133;
  unsigned sym__0___45_669043640686266768;
  unsigned sym__0___45_807502522391685304;
  unsigned sym__0__5978583622473619078;
  unsigned sym__0__7667625134875896963;
  fluidb_string<15> sym__0__1141796479023120196;
  fluidb_string<2> sym__0__1469379387491777068;
  fluidb_string<2> sym__0__4727701876414981207;
  fluidb_string<2> sym__0___45_1377883405744867601;
  fluidb_string<2> sym__0__7834912808742248473;
  unsigned sym__0___45_8200515075879493680;
  fluidb_string<18> sym__0___45_5999345331201606248;
  fluidb_string<40> sym__0___45_6151453051504149198;
  fluidb_string<11> sym__0__2196925836082587100;
  fluidb_string<15> sym__0__3281045596873157414;
  fluidb_string<13> sym__0___45_7947799549852207059;
  fluidb_string<15> sym__0__665896293318711576;
  fluidb_string<21> sym__0___45_1369638599846897084;
  unsigned sym__0__6920509631355683977;
  fluidb_string<25> sym__0__6145269722867635448;
  fluidb_string<40> sym__0__5484543966280855866;
  fluidb_string<16> sym__0__2977773391091542732;
  fluidb_string<16> sym__0___45_2696586719379751058;
  fluidb_string<13> sym__0__6115568021865341157;
  fluidb_string<15> sym__0___45_1374649252887321224;
  unsigned sym__0__5400475506062602860;
  int sym__0___45_2162106017621218234;
  unsigned sym__0__4255029333099325966;
  unsigned sym__0__5772793184221378976;
  unsigned sym__0___45_6763192759432361567;
  unsigned sym__0___45_8720580161973614270;
  fluidb_string<21> sym__0__5813914033401412385;
  unsigned sym__0___45_2553968467001529977;
  fluidb_string<10> sym__0__6784288579576574606;
  unsigned sym__0___45_752510532203263426;
  double sym__0__1299561572090877548;
  unsigned sym__0___45_6789456010122780702;
  double sym__0__1623941919451968532;
  unsigned sym__0___45_5363104405034702968;
  unsigned sym__0__3267017113418461885;
  double sym__0___45_4421103194815695765;
  fluidb_string<13> sym__0___45_151953433332730669;
 private:
};


class Record4 {
 public:
  Record4(fluidb_string<11> __sortElem0, fluidb_string<16> __sortElem1, unsigned __sortElem2) : sortElem0(__sortElem0), sortElem1(__sortElem1), sortElem2(__sortElem2)
  {
  }
  Record4() 
  {
  }
  std::string show() const{
    std::stringstream o;
    o << arrToString(sortElem0) << " | " << arrToString(sortElem1) << " | " << sortElem2;
    return o.str();
  }
  bool operator <(const Record4& otherRec) const{
    return (otherRec.sortElem0 < sortElem0 && (otherRec.sortElem1 < sortElem1 && otherRec.sortElem2 < sortElem2));
  }
  bool operator ==(const Record4& otherRec) const{
    return (otherRec.sortElem0 == sortElem0 && (otherRec.sortElem1 == sortElem1 && otherRec.sortElem2 == sortElem2));
  }
  bool operator !=(const Record4& otherRec) const{
    return (otherRec.sortElem0 != sortElem0 || (otherRec.sortElem1 != sortElem1 || otherRec.sortElem2 != sortElem2));
  }
  fluidb_string<11> sortElem0;
  fluidb_string<16> sortElem1;
  unsigned sortElem2;
 private:
};


class Record8 {
 public:
  Record8(fluidb_string<11> __sym__0__6512602571464442166, fluidb_string<16> __sym__0___45_899545416550877978, unsigned __sym__0__7414216243436872385, unsigned __sym__0__8456665735688363071) : sym__0__6512602571464442166(__sym__0__6512602571464442166), sym__0___45_899545416550877978(__sym__0___45_899545416550877978), sym__0__7414216243436872385(__sym__0__7414216243436872385), sym__0__8456665735688363071(__sym__0__8456665735688363071)
  {
  }
  Record8() 
  {
  }
  std::string show() const{
    std::stringstream o;
    o << arrToString(sym__0__6512602571464442166) << " | " << arrToString(sym__0___45_899545416550877978) << " | " << sym__0__7414216243436872385 << " | " << sym__0__8456665735688363071;
    return o.str();
  }
  bool operator <(const Record8& otherRec) const{
    return (otherRec.sym__0__6512602571464442166 < sym__0__6512602571464442166 && (otherRec.sym__0___45_899545416550877978 < sym__0___45_899545416550877978 && (otherRec.sym__0__7414216243436872385 < sym__0__7414216243436872385 && otherRec.sym__0__8456665735688363071 < sym__0__8456665735688363071)));
  }
  bool operator ==(const Record8& otherRec) const{
    return (otherRec.sym__0__6512602571464442166 == sym__0__6512602571464442166 && (otherRec.sym__0___45_899545416550877978 == sym__0___45_899545416550877978 && (otherRec.sym__0__7414216243436872385 == sym__0__7414216243436872385 && otherRec.sym__0__8456665735688363071 == sym__0__8456665735688363071)));
  }
  bool operator !=(const Record8& otherRec) const{
    return (otherRec.sym__0__6512602571464442166 != sym__0__6512602571464442166 || (otherRec.sym__0___45_899545416550877978 != sym__0___45_899545416550877978 || (otherRec.sym__0__7414216243436872385 != sym__0__7414216243436872385 || otherRec.sym__0__8456665735688363071 != sym__0__8456665735688363071)));
  }
  fluidb_string<11> sym__0__6512602571464442166;
  fluidb_string<16> sym__0___45_899545416550877978;
  unsigned sym__0__7414216243436872385;
  unsigned sym__0__8456665735688363071;
 private:
};


class CallableClass6 {
 public:
  Record4 operator()(const Record5& record3) {
    return Record4(record3.sym__0___45_3956792959991438582, record3.sym__0__7388366118437445626, record3.sym__0__8142673845411997397);
  }
  typedef Record4 Codomain;
  typedef Record5 Domain0;
 private:
};


class CallableClass2 {
 public:
  bool operator()(const Record1& record0) {
    return ((((like(record0.sym__0___45_5133924085204218680, "UNITED KI1") || like(record0.sym__0___45_5133924085204218680, "UNITED KI5")) && (record0.sym__0__5557137180551786739 >= 1992)) && (record0.sym__0__5557137180551786739 <= 1997)) && (like(record0.sym__0___45_5337640715365439464, "UNITED KI1") || like(record0.sym__0___45_5337640715365439464, "UNITED KI5")));
  }
  typedef bool Codomain;
  typedef Record1 Domain0;
 private:
};


class CallableClass18 {
 public:
  CallableClass18() : isSet(false)
  {
  }
  bool operator()(const Record10& record7) {
    if (isSet && record7.sym__0__2196925836082587100 == staticExp15 && record7.sym__0__2977773391091542732 == staticExp16 && record7.sym__0__5912165115292323025 == staticExp17) {
      return false;
    } else {
      staticExp15 = record7.sym__0__2196925836082587100;
      staticExp16 = record7.sym__0__2977773391091542732;
      staticExp17 = record7.sym__0__5912165115292323025;
      if (isSet) {
        return true;
      } else {
        isSet = true;
        return false;
      }
    }
  }
  typedef bool Codomain;
  typedef Record10 Domain0;
 private:
  bool isSet;
  fluidb_string<11> staticExp15;
  fluidb_string<16> staticExp16;
  unsigned staticExp17;
};


class CallableClass21 {
 public:
  Record20 operator()(const Record8& record19) {
    return Record20((-(record19.sym__0__8456665735688363071)));
  }
  typedef Record20 Codomain;
  typedef Record8 Domain0;
 private:
};


class CallableClass14 {
 public:
  Record8 operator()(const Record10& record7) {
    return Record8(vAggrFirst9(record7.sym__0__2196925836082587100), vAggrFirst11(record7.sym__0__2977773391091542732), vAggrFirst12(record7.sym__0__5912165115292323025), vAggrSum13(record7.sym__0___45_5363104405034702968));
  }
  typedef Record8 Codomain;
  typedef Record10 Domain0;
 private:
  AggrFirst<fluidb_string<11>> vAggrFirst9;
  AggrFirst<fluidb_string<16>> vAggrFirst11;
  AggrFirst<unsigned> vAggrFirst12;
  AggrSum<unsigned> vAggrSum13;
};






int main() {
  // ForwardTrigger: (Just 
  //   (Right 
  //     [
  //      QSel 
  //         (P2 
  //           PAnd 
  //           (P2 
  //             PAnd 
  //             (P2 
  //               PAnd 
  //               (P2 
  //                 POr 
  //                 (P0 
  //                   (R2 RLike 
  //                       (R0 (E0 (ESym "c_city"))) 
  //                       (R0 (E0 (EString "UNITED KI1"))))) 
  //                 (P0 
  //                   (R2 RLike 
  //                       (R0 (E0 (ESym "c_city"))) 
  //                       (R0 (E0 (EString "UNITED KI5")))))) 
  //               (P0 
  //                 (R2 RGe (R0 (E0 (ESym "d_year"))) (R0 (E0 (EInt 1992)))))) 
  //             (P0 
  //               (R2 RLe (R0 (E0 (ESym "d_year"))) (R0 (E0 (EInt 1997)))))) 
  //           (P2 
  //             POr 
  //             (P0 
  //               (R2 RLike 
  //                   (R0 (E0 (ESym "s_city"))) 
  //                   (R0 (E0 (EString "UNITED KI1"))))) 
  //             (P0 
  //               (R2 RLike 
  //                   (R0 (E0 (ESym "s_city"))) 
  //                   (R0 (E0 (EString "UNITED KI5")))))))
  std::cout << "ForwardTrigger: (Just \n  (Right \n    [\n     QSel \n        (P2 \n          PAnd \n          (P2 \n            PAnd \n            (P2 \n              PAnd \n              (P2 \n                POr \n                (P0 \n                  (R2 RLike \n                      (R0 (E0 (ESym \"c_city\"))) \n                      (R0 (E0 (EString \"UNITED KI1\"))))) \n                (P0 \n                  (R2 RLike \n                      (R0 (E0 (ESym \"c_city\"))) \n                      (R0 (E0 (EString \"UNITED KI5\")))))) \n              (P0 \n                (R2 RGe (R0 (E0 (ESym \"d_year\"))) (R0 (E0 (EInt 1992)))))) \n            (P0 \n              (R2 RLe (R0 (E0 (ESym \"d_year\"))) (R0 (E0 (EInt 1997)))))) \n          (P2 \n            POr \n            (P0 \n              (R2 RLike \n                  (R0 (E0 (ESym \"s_city\"))) \n                  (R0 (E0 (EString \"UNITED KI1\"))))) \n            (P0 \n              (R2 RLike \n                  (R0 (E0 (ESym \"s_city\"))) \n                  (R0 (E0 (EString \"UNITED KI5\")))))))\n    ]))" << std::endl;
  {
    auto operation = mkSelect<CallableClass2>(Just<const std::string>("data222.dat"), Just<const std::string>("data223.dat"), "data159.dat");
    operation.run();
    operation.print_output(10);
  }
  // ForwardTrigger: (Just 
  //   (Right 
  std::cout << "ForwardTrigger: (Just \n  (Right \n    [QSort [E0 (ESym \"c_city\"),E0 (ESym \"s_city\"),E0 (ESym \"d_year\")]]))" << std::endl;
  {
    auto operation = mkSort<CallableClass6>(Just<const std::string>("data235.dat"), Just<const std::string>("data222.dat"), "data222.dat");
    operation.run();
    operation.print_output(10);
  }
  // ForwardTrigger: (Just 
  //   (Right 
  //     [
  //      QGroup 
  //         [(ESym "c_city",E0 (NAggr AggrFirst (E0 (ESym "c_city")))),
  //          (ESym "s_city",E0 (NAggr AggrFirst (E0 (ESym "s_city")))),
  //          (ESym "d_year",E0 (NAggr AggrFirst (E0 (ESym "d_year")))),
  //          (ESym "revenue",E0 (NAggr AggrSum (E0 (ESym "lo_revenue"))))] 
  //         [E0 (ESym "c_city"),E0 (ESym "s_city"),E0 (ESym "d_year")]
  std::cout << "ForwardTrigger: (Just \n  (Right \n    [\n     QGroup \n        [(ESym \"c_city\",E0 (NAggr AggrFirst (E0 (ESym \"c_city\")))),\n         (ESym \"s_city\",E0 (NAggr AggrFirst (E0 (ESym \"s_city\")))),\n         (ESym \"d_year\",E0 (NAggr AggrFirst (E0 (ESym \"d_year\")))),\n         (ESym \"revenue\",E0 (NAggr AggrSum (E0 (ESym \"lo_revenue\"))))] \n        [E0 (ESym \"c_city\"),E0 (ESym \"s_city\"),E0 (ESym \"d_year\")]\n    ]))" << std::endl;
  {
    auto operation = mkAggregation<CallableClass14, CallableClass18>(Just<const std::string>("data236.dat"), Just<const std::string>("data235.dat"), "data235.dat");
    operation.run();
    operation.print_output(10);
  }
  std::cout << "ForwardTrigger: (Just (Right [QSort [E1 ENeg (E0 (ESym \"revenue\"))]]))" << std::endl;
  {
    auto operation = mkSort<CallableClass21>(Just<const std::string>("data237.dat"), Just<const std::string>("data236.dat"), "data236.dat");
    operation.run();
    operation.print_output(10);
  }
  return 0;
}
