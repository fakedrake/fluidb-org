#include <array>

#include <string>

#include <codegen.hh>
class Record38 {
 public:
  Record38(unsigned __sym__0__7178003535380331304, fluidb_string<55> __sym__0___45_7020257275696364520, fluidb_string<25> __sym__0___45_6307179734719967033, fluidb_string<7> __sym__0__4568304886257136061, fluidb_string<10> __sym__0___45_6291097039630000265, fluidb_string<11> __sym__0__551327770031967739, fluidb_string<25> __sym__0__3827696365022297353, unsigned __sym__0___45_1779543743759935870, fluidb_string<10> __sym__0__3752090135924368535) : sym__0__7178003535380331304(__sym__0__7178003535380331304), sym__0___45_7020257275696364520(__sym__0___45_7020257275696364520), sym__0___45_6307179734719967033(__sym__0___45_6307179734719967033), sym__0__4568304886257136061(__sym__0__4568304886257136061), sym__0___45_6291097039630000265(__sym__0___45_6291097039630000265), sym__0__551327770031967739(__sym__0__551327770031967739), sym__0__3827696365022297353(__sym__0__3827696365022297353), sym__0___45_1779543743759935870(__sym__0___45_1779543743759935870), sym__0__3752090135924368535(__sym__0__3752090135924368535)
  {
  }
  Record38() 
  {
  }
  std::string show() const{
    std::stringstream o;
    o << sym__0__7178003535380331304 << " | " << arrToString(sym__0___45_7020257275696364520) << " | " << arrToString(sym__0___45_6307179734719967033) << " | " << arrToString(sym__0__4568304886257136061) << " | " << arrToString(sym__0___45_6291097039630000265) << " | " << arrToString(sym__0__551327770031967739) << " | " << arrToString(sym__0__3827696365022297353) << " | " << sym__0___45_1779543743759935870 << " | " << arrToString(sym__0__3752090135924368535);
    return o.str();
  }
  bool operator <(const Record38& otherRec) const{
    return (otherRec.sym__0__7178003535380331304 < sym__0__7178003535380331304 && (otherRec.sym__0___45_7020257275696364520 < sym__0___45_7020257275696364520 && (otherRec.sym__0___45_6307179734719967033 < sym__0___45_6307179734719967033 && (otherRec.sym__0__4568304886257136061 < sym__0__4568304886257136061 && (otherRec.sym__0___45_6291097039630000265 < sym__0___45_6291097039630000265 && (otherRec.sym__0__551327770031967739 < sym__0__551327770031967739 && (otherRec.sym__0__3827696365022297353 < sym__0__3827696365022297353 && (otherRec.sym__0___45_1779543743759935870 < sym__0___45_1779543743759935870 && otherRec.sym__0__3752090135924368535 < sym__0__3752090135924368535))))))));
  }
  bool operator ==(const Record38& otherRec) const{
    return (otherRec.sym__0__7178003535380331304 == sym__0__7178003535380331304 && (otherRec.sym__0___45_7020257275696364520 == sym__0___45_7020257275696364520 && (otherRec.sym__0___45_6307179734719967033 == sym__0___45_6307179734719967033 && (otherRec.sym__0__4568304886257136061 == sym__0__4568304886257136061 && (otherRec.sym__0___45_6291097039630000265 == sym__0___45_6291097039630000265 && (otherRec.sym__0__551327770031967739 == sym__0__551327770031967739 && (otherRec.sym__0__3827696365022297353 == sym__0__3827696365022297353 && (otherRec.sym__0___45_1779543743759935870 == sym__0___45_1779543743759935870 && otherRec.sym__0__3752090135924368535 == sym__0__3752090135924368535))))))));
  }
  bool operator !=(const Record38& otherRec) const{
    return (otherRec.sym__0__7178003535380331304 != sym__0__7178003535380331304 || (otherRec.sym__0___45_7020257275696364520 != sym__0___45_7020257275696364520 || (otherRec.sym__0___45_6307179734719967033 != sym__0___45_6307179734719967033 || (otherRec.sym__0__4568304886257136061 != sym__0__4568304886257136061 || (otherRec.sym__0___45_6291097039630000265 != sym__0___45_6291097039630000265 || (otherRec.sym__0__551327770031967739 != sym__0__551327770031967739 || (otherRec.sym__0__3827696365022297353 != sym__0__3827696365022297353 || (otherRec.sym__0___45_1779543743759935870 != sym__0___45_1779543743759935870 || otherRec.sym__0__3752090135924368535 != sym__0__3752090135924368535))))))));
  }
  unsigned sym__0__7178003535380331304;
  fluidb_string<55> sym__0___45_7020257275696364520;
  fluidb_string<25> sym__0___45_6307179734719967033;
  fluidb_string<7> sym__0__4568304886257136061;
  fluidb_string<10> sym__0___45_6291097039630000265;
  fluidb_string<11> sym__0__551327770031967739;
  fluidb_string<25> sym__0__3827696365022297353;
  unsigned sym__0___45_1779543743759935870;
  fluidb_string<10> sym__0__3752090135924368535;
 private:
};


class Record27 {
 public:
  Record27(unsigned __sym__0__4372542746767163120, fluidb_string<25> __sym__0__7291234239744567015, fluidb_string<40> __sym__0___45_2945148771978206519, fluidb_string<16> __sym__0__9066131360244541523, fluidb_string<16> __sym__0___45_3141610423430954875, fluidb_string<13> __sym__0___45_48823844125550444, fluidb_string<15> __sym__0___45_2254220267881863833, unsigned __sym__0__2946936484788718195, int __sym__0__504735173358333181, unsigned __sym__0__1452188522949023653, unsigned __sym__0___45_2657492161898157233, unsigned __sym__0___45_987842803716760408, unsigned __sym__0___45_6875670777258577967, fluidb_string<21> __sym__0___45_8641169863086791640, unsigned __sym__0__7997513962957964838, fluidb_string<10> __sym__0___45_8074303378450868187, unsigned __sym__0___45_5439503659608321099, double __sym__0___45_4838150504089667981, unsigned __sym__0___45_1113402395773502735, double __sym__0__1528879458381326491, unsigned __sym__0__5851356904441458071, unsigned __sym__0___45_828667146484332308, double __sym__0___45_1275492933982204654, fluidb_string<13> __sym__0___45_3902892325604260038, unsigned __sym__0___45_7194258103397040393, fluidb_string<18> __sym__0___45_8311281370945695033, fluidb_string<9> __sym__0__8575846920293631109, fluidb_string<9> __sym__0__5343665666360763882, unsigned __sym__0___45_4624961410068665672, unsigned __sym__0__1960467209448353178, fluidb_string<7> __sym__0__381225273923569055, unsigned __sym__0__126903777808869748, unsigned __sym__0___45_7458475196620949249, unsigned __sym__0___45_7480747543138695209, unsigned __sym__0__6551865222392686781, unsigned __sym__0__1996689749703497418, fluidb_string<15> __sym__0__1763116611259713899, fluidb_string<2> __sym__0__2110874379199058099, fluidb_string<2> __sym__0__3311067543024370390, fluidb_string<2> __sym__0__8456067252248352494, fluidb_string<2> __sym__0__3238385799004727648, unsigned __sym__0___45_2741220126910062753, fluidb_string<18> __sym__0___45_6265485073447630585, fluidb_string<40> __sym__0__488457007585890081, fluidb_string<11> __sym__0___45_288772107636416765, fluidb_string<15> __sym__0__7392611004520676189, fluidb_string<13> __sym__0__5188547399620210812, fluidb_string<15> __sym__0___45_8557699829218318201, fluidb_string<21> __sym__0___45_1776408124027591573) : sym__0__4372542746767163120(__sym__0__4372542746767163120), sym__0__7291234239744567015(__sym__0__7291234239744567015), sym__0___45_2945148771978206519(__sym__0___45_2945148771978206519), sym__0__9066131360244541523(__sym__0__9066131360244541523), sym__0___45_3141610423430954875(__sym__0___45_3141610423430954875), sym__0___45_48823844125550444(__sym__0___45_48823844125550444), sym__0___45_2254220267881863833(__sym__0___45_2254220267881863833), sym__0__2946936484788718195(__sym__0__2946936484788718195), sym__0__504735173358333181(__sym__0__504735173358333181), sym__0__1452188522949023653(__sym__0__1452188522949023653), sym__0___45_2657492161898157233(__sym__0___45_2657492161898157233), sym__0___45_987842803716760408(__sym__0___45_987842803716760408), sym__0___45_6875670777258577967(__sym__0___45_6875670777258577967), sym__0___45_8641169863086791640(__sym__0___45_8641169863086791640), sym__0__7997513962957964838(__sym__0__7997513962957964838), sym__0___45_8074303378450868187(__sym__0___45_8074303378450868187), sym__0___45_5439503659608321099(__sym__0___45_5439503659608321099), sym__0___45_4838150504089667981(__sym__0___45_4838150504089667981), sym__0___45_1113402395773502735(__sym__0___45_1113402395773502735), sym__0__1528879458381326491(__sym__0__1528879458381326491), sym__0__5851356904441458071(__sym__0__5851356904441458071), sym__0___45_828667146484332308(__sym__0___45_828667146484332308), sym__0___45_1275492933982204654(__sym__0___45_1275492933982204654), sym__0___45_3902892325604260038(__sym__0___45_3902892325604260038), sym__0___45_7194258103397040393(__sym__0___45_7194258103397040393), sym__0___45_8311281370945695033(__sym__0___45_8311281370945695033), sym__0__8575846920293631109(__sym__0__8575846920293631109), sym__0__5343665666360763882(__sym__0__5343665666360763882), sym__0___45_4624961410068665672(__sym__0___45_4624961410068665672), sym__0__1960467209448353178(__sym__0__1960467209448353178), sym__0__381225273923569055(__sym__0__381225273923569055), sym__0__126903777808869748(__sym__0__126903777808869748), sym__0___45_7458475196620949249(__sym__0___45_7458475196620949249), sym__0___45_7480747543138695209(__sym__0___45_7480747543138695209), sym__0__6551865222392686781(__sym__0__6551865222392686781), sym__0__1996689749703497418(__sym__0__1996689749703497418), sym__0__1763116611259713899(__sym__0__1763116611259713899), sym__0__2110874379199058099(__sym__0__2110874379199058099), sym__0__3311067543024370390(__sym__0__3311067543024370390), sym__0__8456067252248352494(__sym__0__8456067252248352494), sym__0__3238385799004727648(__sym__0__3238385799004727648), sym__0___45_2741220126910062753(__sym__0___45_2741220126910062753), sym__0___45_6265485073447630585(__sym__0___45_6265485073447630585), sym__0__488457007585890081(__sym__0__488457007585890081), sym__0___45_288772107636416765(__sym__0___45_288772107636416765), sym__0__7392611004520676189(__sym__0__7392611004520676189), sym__0__5188547399620210812(__sym__0__5188547399620210812), sym__0___45_8557699829218318201(__sym__0___45_8557699829218318201), sym__0___45_1776408124027591573(__sym__0___45_1776408124027591573)
  {
  }
  Record27() 
  {
  }
  std::string show() const{
    std::stringstream o;
    o << sym__0__4372542746767163120 << " | " << arrToString(sym__0__7291234239744567015) << " | " << arrToString(sym__0___45_2945148771978206519) << " | " << arrToString(sym__0__9066131360244541523) << " | " << arrToString(sym__0___45_3141610423430954875) << " | " << arrToString(sym__0___45_48823844125550444) << " | " << arrToString(sym__0___45_2254220267881863833) << " | " << sym__0__2946936484788718195 << " | " << sym__0__504735173358333181 << " | " << sym__0__1452188522949023653 << " | " << sym__0___45_2657492161898157233 << " | " << sym__0___45_987842803716760408 << " | " << sym__0___45_6875670777258577967 << " | " << arrToString(sym__0___45_8641169863086791640) << " | " << sym__0__7997513962957964838 << " | " << arrToString(sym__0___45_8074303378450868187) << " | " << sym__0___45_5439503659608321099 << " | " << sym__0___45_4838150504089667981 << " | " << sym__0___45_1113402395773502735 << " | " << sym__0__1528879458381326491 << " | " << sym__0__5851356904441458071 << " | " << sym__0___45_828667146484332308 << " | " << sym__0___45_1275492933982204654 << " | " << arrToString(sym__0___45_3902892325604260038) << " | " << sym__0___45_7194258103397040393 << " | " << arrToString(sym__0___45_8311281370945695033) << " | " << arrToString(sym__0__8575846920293631109) << " | " << arrToString(sym__0__5343665666360763882) << " | " << sym__0___45_4624961410068665672 << " | " << sym__0__1960467209448353178 << " | " << arrToString(sym__0__381225273923569055) << " | " << sym__0__126903777808869748 << " | " << sym__0___45_7458475196620949249 << " | " << sym__0___45_7480747543138695209 << " | " << sym__0__6551865222392686781 << " | " << sym__0__1996689749703497418 << " | " << arrToString(sym__0__1763116611259713899) << " | " << arrToString(sym__0__2110874379199058099) << " | " << arrToString(sym__0__3311067543024370390) << " | " << arrToString(sym__0__8456067252248352494) << " | " << arrToString(sym__0__3238385799004727648) << " | " << sym__0___45_2741220126910062753 << " | " << arrToString(sym__0___45_6265485073447630585) << " | " << arrToString(sym__0__488457007585890081) << " | " << arrToString(sym__0___45_288772107636416765) << " | " << arrToString(sym__0__7392611004520676189) << " | " << arrToString(sym__0__5188547399620210812) << " | " << arrToString(sym__0___45_8557699829218318201) << " | " << arrToString(sym__0___45_1776408124027591573);
    return o.str();
  }
  bool operator <(const Record27& otherRec) const{
    return (otherRec.sym__0__4372542746767163120 < sym__0__4372542746767163120 && (otherRec.sym__0__7291234239744567015 < sym__0__7291234239744567015 && (otherRec.sym__0___45_2945148771978206519 < sym__0___45_2945148771978206519 && (otherRec.sym__0__9066131360244541523 < sym__0__9066131360244541523 && (otherRec.sym__0___45_3141610423430954875 < sym__0___45_3141610423430954875 && (otherRec.sym__0___45_48823844125550444 < sym__0___45_48823844125550444 && (otherRec.sym__0___45_2254220267881863833 < sym__0___45_2254220267881863833 && (otherRec.sym__0__2946936484788718195 < sym__0__2946936484788718195 && (otherRec.sym__0__504735173358333181 < sym__0__504735173358333181 && (otherRec.sym__0__1452188522949023653 < sym__0__1452188522949023653 && (otherRec.sym__0___45_2657492161898157233 < sym__0___45_2657492161898157233 && (otherRec.sym__0___45_987842803716760408 < sym__0___45_987842803716760408 && (otherRec.sym__0___45_6875670777258577967 < sym__0___45_6875670777258577967 && (otherRec.sym__0___45_8641169863086791640 < sym__0___45_8641169863086791640 && (otherRec.sym__0__7997513962957964838 < sym__0__7997513962957964838 && (otherRec.sym__0___45_8074303378450868187 < sym__0___45_8074303378450868187 && (otherRec.sym__0___45_5439503659608321099 < sym__0___45_5439503659608321099 && (otherRec.sym__0___45_4838150504089667981 < sym__0___45_4838150504089667981 && (otherRec.sym__0___45_1113402395773502735 < sym__0___45_1113402395773502735 && (otherRec.sym__0__1528879458381326491 < sym__0__1528879458381326491 && (otherRec.sym__0__5851356904441458071 < sym__0__5851356904441458071 && (otherRec.sym__0___45_828667146484332308 < sym__0___45_828667146484332308 && (otherRec.sym__0___45_1275492933982204654 < sym__0___45_1275492933982204654 && (otherRec.sym__0___45_3902892325604260038 < sym__0___45_3902892325604260038 && (otherRec.sym__0___45_7194258103397040393 < sym__0___45_7194258103397040393 && (otherRec.sym__0___45_8311281370945695033 < sym__0___45_8311281370945695033 && (otherRec.sym__0__8575846920293631109 < sym__0__8575846920293631109 && (otherRec.sym__0__5343665666360763882 < sym__0__5343665666360763882 && (otherRec.sym__0___45_4624961410068665672 < sym__0___45_4624961410068665672 && (otherRec.sym__0__1960467209448353178 < sym__0__1960467209448353178 && (otherRec.sym__0__381225273923569055 < sym__0__381225273923569055 && (otherRec.sym__0__126903777808869748 < sym__0__126903777808869748 && (otherRec.sym__0___45_7458475196620949249 < sym__0___45_7458475196620949249 && (otherRec.sym__0___45_7480747543138695209 < sym__0___45_7480747543138695209 && (otherRec.sym__0__6551865222392686781 < sym__0__6551865222392686781 && (otherRec.sym__0__1996689749703497418 < sym__0__1996689749703497418 && (otherRec.sym__0__1763116611259713899 < sym__0__1763116611259713899 && (otherRec.sym__0__2110874379199058099 < sym__0__2110874379199058099 && (otherRec.sym__0__3311067543024370390 < sym__0__3311067543024370390 && (otherRec.sym__0__8456067252248352494 < sym__0__8456067252248352494 && (otherRec.sym__0__3238385799004727648 < sym__0__3238385799004727648 && (otherRec.sym__0___45_2741220126910062753 < sym__0___45_2741220126910062753 && (otherRec.sym__0___45_6265485073447630585 < sym__0___45_6265485073447630585 && (otherRec.sym__0__488457007585890081 < sym__0__488457007585890081 && (otherRec.sym__0___45_288772107636416765 < sym__0___45_288772107636416765 && (otherRec.sym__0__7392611004520676189 < sym__0__7392611004520676189 && (otherRec.sym__0__5188547399620210812 < sym__0__5188547399620210812 && (otherRec.sym__0___45_8557699829218318201 < sym__0___45_8557699829218318201 && otherRec.sym__0___45_1776408124027591573 < sym__0___45_1776408124027591573))))))))))))))))))))))))))))))))))))))))))))))));
  }
  bool operator ==(const Record27& otherRec) const{
    return (otherRec.sym__0__4372542746767163120 == sym__0__4372542746767163120 && (otherRec.sym__0__7291234239744567015 == sym__0__7291234239744567015 && (otherRec.sym__0___45_2945148771978206519 == sym__0___45_2945148771978206519 && (otherRec.sym__0__9066131360244541523 == sym__0__9066131360244541523 && (otherRec.sym__0___45_3141610423430954875 == sym__0___45_3141610423430954875 && (otherRec.sym__0___45_48823844125550444 == sym__0___45_48823844125550444 && (otherRec.sym__0___45_2254220267881863833 == sym__0___45_2254220267881863833 && (otherRec.sym__0__2946936484788718195 == sym__0__2946936484788718195 && (otherRec.sym__0__504735173358333181 == sym__0__504735173358333181 && (otherRec.sym__0__1452188522949023653 == sym__0__1452188522949023653 && (otherRec.sym__0___45_2657492161898157233 == sym__0___45_2657492161898157233 && (otherRec.sym__0___45_987842803716760408 == sym__0___45_987842803716760408 && (otherRec.sym__0___45_6875670777258577967 == sym__0___45_6875670777258577967 && (otherRec.sym__0___45_8641169863086791640 == sym__0___45_8641169863086791640 && (otherRec.sym__0__7997513962957964838 == sym__0__7997513962957964838 && (otherRec.sym__0___45_8074303378450868187 == sym__0___45_8074303378450868187 && (otherRec.sym__0___45_5439503659608321099 == sym__0___45_5439503659608321099 && (otherRec.sym__0___45_4838150504089667981 == sym__0___45_4838150504089667981 && (otherRec.sym__0___45_1113402395773502735 == sym__0___45_1113402395773502735 && (otherRec.sym__0__1528879458381326491 == sym__0__1528879458381326491 && (otherRec.sym__0__5851356904441458071 == sym__0__5851356904441458071 && (otherRec.sym__0___45_828667146484332308 == sym__0___45_828667146484332308 && (otherRec.sym__0___45_1275492933982204654 == sym__0___45_1275492933982204654 && (otherRec.sym__0___45_3902892325604260038 == sym__0___45_3902892325604260038 && (otherRec.sym__0___45_7194258103397040393 == sym__0___45_7194258103397040393 && (otherRec.sym__0___45_8311281370945695033 == sym__0___45_8311281370945695033 && (otherRec.sym__0__8575846920293631109 == sym__0__8575846920293631109 && (otherRec.sym__0__5343665666360763882 == sym__0__5343665666360763882 && (otherRec.sym__0___45_4624961410068665672 == sym__0___45_4624961410068665672 && (otherRec.sym__0__1960467209448353178 == sym__0__1960467209448353178 && (otherRec.sym__0__381225273923569055 == sym__0__381225273923569055 && (otherRec.sym__0__126903777808869748 == sym__0__126903777808869748 && (otherRec.sym__0___45_7458475196620949249 == sym__0___45_7458475196620949249 && (otherRec.sym__0___45_7480747543138695209 == sym__0___45_7480747543138695209 && (otherRec.sym__0__6551865222392686781 == sym__0__6551865222392686781 && (otherRec.sym__0__1996689749703497418 == sym__0__1996689749703497418 && (otherRec.sym__0__1763116611259713899 == sym__0__1763116611259713899 && (otherRec.sym__0__2110874379199058099 == sym__0__2110874379199058099 && (otherRec.sym__0__3311067543024370390 == sym__0__3311067543024370390 && (otherRec.sym__0__8456067252248352494 == sym__0__8456067252248352494 && (otherRec.sym__0__3238385799004727648 == sym__0__3238385799004727648 && (otherRec.sym__0___45_2741220126910062753 == sym__0___45_2741220126910062753 && (otherRec.sym__0___45_6265485073447630585 == sym__0___45_6265485073447630585 && (otherRec.sym__0__488457007585890081 == sym__0__488457007585890081 && (otherRec.sym__0___45_288772107636416765 == sym__0___45_288772107636416765 && (otherRec.sym__0__7392611004520676189 == sym__0__7392611004520676189 && (otherRec.sym__0__5188547399620210812 == sym__0__5188547399620210812 && (otherRec.sym__0___45_8557699829218318201 == sym__0___45_8557699829218318201 && otherRec.sym__0___45_1776408124027591573 == sym__0___45_1776408124027591573))))))))))))))))))))))))))))))))))))))))))))))));
  }
  bool operator !=(const Record27& otherRec) const{
    return (otherRec.sym__0__4372542746767163120 != sym__0__4372542746767163120 || (otherRec.sym__0__7291234239744567015 != sym__0__7291234239744567015 || (otherRec.sym__0___45_2945148771978206519 != sym__0___45_2945148771978206519 || (otherRec.sym__0__9066131360244541523 != sym__0__9066131360244541523 || (otherRec.sym__0___45_3141610423430954875 != sym__0___45_3141610423430954875 || (otherRec.sym__0___45_48823844125550444 != sym__0___45_48823844125550444 || (otherRec.sym__0___45_2254220267881863833 != sym__0___45_2254220267881863833 || (otherRec.sym__0__2946936484788718195 != sym__0__2946936484788718195 || (otherRec.sym__0__504735173358333181 != sym__0__504735173358333181 || (otherRec.sym__0__1452188522949023653 != sym__0__1452188522949023653 || (otherRec.sym__0___45_2657492161898157233 != sym__0___45_2657492161898157233 || (otherRec.sym__0___45_987842803716760408 != sym__0___45_987842803716760408 || (otherRec.sym__0___45_6875670777258577967 != sym__0___45_6875670777258577967 || (otherRec.sym__0___45_8641169863086791640 != sym__0___45_8641169863086791640 || (otherRec.sym__0__7997513962957964838 != sym__0__7997513962957964838 || (otherRec.sym__0___45_8074303378450868187 != sym__0___45_8074303378450868187 || (otherRec.sym__0___45_5439503659608321099 != sym__0___45_5439503659608321099 || (otherRec.sym__0___45_4838150504089667981 != sym__0___45_4838150504089667981 || (otherRec.sym__0___45_1113402395773502735 != sym__0___45_1113402395773502735 || (otherRec.sym__0__1528879458381326491 != sym__0__1528879458381326491 || (otherRec.sym__0__5851356904441458071 != sym__0__5851356904441458071 || (otherRec.sym__0___45_828667146484332308 != sym__0___45_828667146484332308 || (otherRec.sym__0___45_1275492933982204654 != sym__0___45_1275492933982204654 || (otherRec.sym__0___45_3902892325604260038 != sym__0___45_3902892325604260038 || (otherRec.sym__0___45_7194258103397040393 != sym__0___45_7194258103397040393 || (otherRec.sym__0___45_8311281370945695033 != sym__0___45_8311281370945695033 || (otherRec.sym__0__8575846920293631109 != sym__0__8575846920293631109 || (otherRec.sym__0__5343665666360763882 != sym__0__5343665666360763882 || (otherRec.sym__0___45_4624961410068665672 != sym__0___45_4624961410068665672 || (otherRec.sym__0__1960467209448353178 != sym__0__1960467209448353178 || (otherRec.sym__0__381225273923569055 != sym__0__381225273923569055 || (otherRec.sym__0__126903777808869748 != sym__0__126903777808869748 || (otherRec.sym__0___45_7458475196620949249 != sym__0___45_7458475196620949249 || (otherRec.sym__0___45_7480747543138695209 != sym__0___45_7480747543138695209 || (otherRec.sym__0__6551865222392686781 != sym__0__6551865222392686781 || (otherRec.sym__0__1996689749703497418 != sym__0__1996689749703497418 || (otherRec.sym__0__1763116611259713899 != sym__0__1763116611259713899 || (otherRec.sym__0__2110874379199058099 != sym__0__2110874379199058099 || (otherRec.sym__0__3311067543024370390 != sym__0__3311067543024370390 || (otherRec.sym__0__8456067252248352494 != sym__0__8456067252248352494 || (otherRec.sym__0__3238385799004727648 != sym__0__3238385799004727648 || (otherRec.sym__0___45_2741220126910062753 != sym__0___45_2741220126910062753 || (otherRec.sym__0___45_6265485073447630585 != sym__0___45_6265485073447630585 || (otherRec.sym__0__488457007585890081 != sym__0__488457007585890081 || (otherRec.sym__0___45_288772107636416765 != sym__0___45_288772107636416765 || (otherRec.sym__0__7392611004520676189 != sym__0__7392611004520676189 || (otherRec.sym__0__5188547399620210812 != sym__0__5188547399620210812 || (otherRec.sym__0___45_8557699829218318201 != sym__0___45_8557699829218318201 || otherRec.sym__0___45_1776408124027591573 != sym__0___45_1776408124027591573))))))))))))))))))))))))))))))))))))))))))))))));
  }
  unsigned sym__0__4372542746767163120;
  fluidb_string<25> sym__0__7291234239744567015;
  fluidb_string<40> sym__0___45_2945148771978206519;
  fluidb_string<16> sym__0__9066131360244541523;
  fluidb_string<16> sym__0___45_3141610423430954875;
  fluidb_string<13> sym__0___45_48823844125550444;
  fluidb_string<15> sym__0___45_2254220267881863833;
  unsigned sym__0__2946936484788718195;
  int sym__0__504735173358333181;
  unsigned sym__0__1452188522949023653;
  unsigned sym__0___45_2657492161898157233;
  unsigned sym__0___45_987842803716760408;
  unsigned sym__0___45_6875670777258577967;
  fluidb_string<21> sym__0___45_8641169863086791640;
  unsigned sym__0__7997513962957964838;
  fluidb_string<10> sym__0___45_8074303378450868187;
  unsigned sym__0___45_5439503659608321099;
  double sym__0___45_4838150504089667981;
  unsigned sym__0___45_1113402395773502735;
  double sym__0__1528879458381326491;
  unsigned sym__0__5851356904441458071;
  unsigned sym__0___45_828667146484332308;
  double sym__0___45_1275492933982204654;
  fluidb_string<13> sym__0___45_3902892325604260038;
  unsigned sym__0___45_7194258103397040393;
  fluidb_string<18> sym__0___45_8311281370945695033;
  fluidb_string<9> sym__0__8575846920293631109;
  fluidb_string<9> sym__0__5343665666360763882;
  unsigned sym__0___45_4624961410068665672;
  unsigned sym__0__1960467209448353178;
  fluidb_string<7> sym__0__381225273923569055;
  unsigned sym__0__126903777808869748;
  unsigned sym__0___45_7458475196620949249;
  unsigned sym__0___45_7480747543138695209;
  unsigned sym__0__6551865222392686781;
  unsigned sym__0__1996689749703497418;
  fluidb_string<15> sym__0__1763116611259713899;
  fluidb_string<2> sym__0__2110874379199058099;
  fluidb_string<2> sym__0__3311067543024370390;
  fluidb_string<2> sym__0__8456067252248352494;
  fluidb_string<2> sym__0__3238385799004727648;
  unsigned sym__0___45_2741220126910062753;
  fluidb_string<18> sym__0___45_6265485073447630585;
  fluidb_string<40> sym__0__488457007585890081;
  fluidb_string<11> sym__0___45_288772107636416765;
  fluidb_string<15> sym__0__7392611004520676189;
  fluidb_string<13> sym__0__5188547399620210812;
  fluidb_string<15> sym__0___45_8557699829218318201;
  fluidb_string<21> sym__0___45_1776408124027591573;
 private:
};


class Record17 {
 public:
  Record17(unsigned __sortElem0) : sortElem0(__sortElem0)
  {
  }
  Record17() 
  {
  }
  std::string show() const{
    std::stringstream o;
    o << sortElem0;
    return o.str();
  }
  bool operator <(const Record17& otherRec) const{
    return otherRec.sortElem0 < sortElem0;
  }
  bool operator ==(const Record17& otherRec) const{
    return otherRec.sortElem0 == sortElem0;
  }
  bool operator !=(const Record17& otherRec) const{
    return otherRec.sortElem0 != sortElem0;
  }
  unsigned sortElem0;
 private:
};


class Record55 {
 public:
  Record55(unsigned __sortElem0, fluidb_string<16> __sortElem1, fluidb_string<10> __sortElem2) : sortElem0(__sortElem0), sortElem1(__sortElem1), sortElem2(__sortElem2)
  {
  }
  Record55() 
  {
  }
  std::string show() const{
    std::stringstream o;
    o << sortElem0 << " | " << arrToString(sortElem1) << " | " << arrToString(sortElem2);
    return o.str();
  }
  bool operator <(const Record55& otherRec) const{
    return (otherRec.sortElem0 < sortElem0 && (otherRec.sortElem1 < sortElem1 && otherRec.sortElem2 < sortElem2));
  }
  bool operator ==(const Record55& otherRec) const{
    return (otherRec.sortElem0 == sortElem0 && (otherRec.sortElem1 == sortElem1 && otherRec.sortElem2 == sortElem2));
  }
  bool operator !=(const Record55& otherRec) const{
    return (otherRec.sortElem0 != sortElem0 || (otherRec.sortElem1 != sortElem1 || otherRec.sortElem2 != sortElem2));
  }
  unsigned sortElem0;
  fluidb_string<16> sortElem1;
  fluidb_string<10> sortElem2;
 private:
};


class Record8 {
 public:
  Record8(unsigned __sym__0__2833764152503888409, fluidb_string<18> __sym__0__6938021140779677761, fluidb_string<40> __sym__0___45_4700201805806600089, fluidb_string<11> __sym__0__3362667619044778557, fluidb_string<15> __sym__0__2679827580767046755, fluidb_string<13> __sym__0___45_4186304031693649930, fluidb_string<15> __sym__0__8596564865999609793, fluidb_string<21> __sym__0___45_1671053890158572571, unsigned __sym__0__2256924431415148013, int __sym__0__347872876320563651, unsigned __sym__0___45_7666447219434903317, unsigned __sym__0__1272718151591622153, unsigned __sym__0__4584633926271658914, unsigned __sym__0___45_4610773208091240233, fluidb_string<21> __sym__0___45_5766638191766435038, unsigned __sym__0___45_5211223358204127380, fluidb_string<10> __sym__0__8435431464460332395, unsigned __sym__0___45_6450191115912157957, double __sym__0__7921907673157171693, unsigned __sym__0___45_1699747741436218441, double __sym__0___45_2985562469054236715, unsigned __sym__0__3746029949899912401, unsigned __sym__0___45_989155948099215770, double __sym__0___45_1667761180508152936, fluidb_string<13> __sym__0__5854462121170882944, unsigned __sym__0___45_1023382914117654422, fluidb_string<25> __sym__0__6224010339127806049, fluidb_string<40> __sym__0___45_8804639047977952305, fluidb_string<16> __sym__0__8926375957639307021, fluidb_string<16> __sym__0__5153200798583684363, fluidb_string<13> __sym__0___45_794494697990656050, fluidb_string<15> __sym__0__7308161412148661473) : sym__0__2833764152503888409(__sym__0__2833764152503888409), sym__0__6938021140779677761(__sym__0__6938021140779677761), sym__0___45_4700201805806600089(__sym__0___45_4700201805806600089), sym__0__3362667619044778557(__sym__0__3362667619044778557), sym__0__2679827580767046755(__sym__0__2679827580767046755), sym__0___45_4186304031693649930(__sym__0___45_4186304031693649930), sym__0__8596564865999609793(__sym__0__8596564865999609793), sym__0___45_1671053890158572571(__sym__0___45_1671053890158572571), sym__0__2256924431415148013(__sym__0__2256924431415148013), sym__0__347872876320563651(__sym__0__347872876320563651), sym__0___45_7666447219434903317(__sym__0___45_7666447219434903317), sym__0__1272718151591622153(__sym__0__1272718151591622153), sym__0__4584633926271658914(__sym__0__4584633926271658914), sym__0___45_4610773208091240233(__sym__0___45_4610773208091240233), sym__0___45_5766638191766435038(__sym__0___45_5766638191766435038), sym__0___45_5211223358204127380(__sym__0___45_5211223358204127380), sym__0__8435431464460332395(__sym__0__8435431464460332395), sym__0___45_6450191115912157957(__sym__0___45_6450191115912157957), sym__0__7921907673157171693(__sym__0__7921907673157171693), sym__0___45_1699747741436218441(__sym__0___45_1699747741436218441), sym__0___45_2985562469054236715(__sym__0___45_2985562469054236715), sym__0__3746029949899912401(__sym__0__3746029949899912401), sym__0___45_989155948099215770(__sym__0___45_989155948099215770), sym__0___45_1667761180508152936(__sym__0___45_1667761180508152936), sym__0__5854462121170882944(__sym__0__5854462121170882944), sym__0___45_1023382914117654422(__sym__0___45_1023382914117654422), sym__0__6224010339127806049(__sym__0__6224010339127806049), sym__0___45_8804639047977952305(__sym__0___45_8804639047977952305), sym__0__8926375957639307021(__sym__0__8926375957639307021), sym__0__5153200798583684363(__sym__0__5153200798583684363), sym__0___45_794494697990656050(__sym__0___45_794494697990656050), sym__0__7308161412148661473(__sym__0__7308161412148661473)
  {
  }
  Record8() 
  {
  }
  std::string show() const{
    std::stringstream o;
    o << sym__0__2833764152503888409 << " | " << arrToString(sym__0__6938021140779677761) << " | " << arrToString(sym__0___45_4700201805806600089) << " | " << arrToString(sym__0__3362667619044778557) << " | " << arrToString(sym__0__2679827580767046755) << " | " << arrToString(sym__0___45_4186304031693649930) << " | " << arrToString(sym__0__8596564865999609793) << " | " << arrToString(sym__0___45_1671053890158572571) << " | " << sym__0__2256924431415148013 << " | " << sym__0__347872876320563651 << " | " << sym__0___45_7666447219434903317 << " | " << sym__0__1272718151591622153 << " | " << sym__0__4584633926271658914 << " | " << sym__0___45_4610773208091240233 << " | " << arrToString(sym__0___45_5766638191766435038) << " | " << sym__0___45_5211223358204127380 << " | " << arrToString(sym__0__8435431464460332395) << " | " << sym__0___45_6450191115912157957 << " | " << sym__0__7921907673157171693 << " | " << sym__0___45_1699747741436218441 << " | " << sym__0___45_2985562469054236715 << " | " << sym__0__3746029949899912401 << " | " << sym__0___45_989155948099215770 << " | " << sym__0___45_1667761180508152936 << " | " << arrToString(sym__0__5854462121170882944) << " | " << sym__0___45_1023382914117654422 << " | " << arrToString(sym__0__6224010339127806049) << " | " << arrToString(sym__0___45_8804639047977952305) << " | " << arrToString(sym__0__8926375957639307021) << " | " << arrToString(sym__0__5153200798583684363) << " | " << arrToString(sym__0___45_794494697990656050) << " | " << arrToString(sym__0__7308161412148661473);
    return o.str();
  }
  bool operator <(const Record8& otherRec) const{
    return (otherRec.sym__0__2833764152503888409 < sym__0__2833764152503888409 && (otherRec.sym__0__6938021140779677761 < sym__0__6938021140779677761 && (otherRec.sym__0___45_4700201805806600089 < sym__0___45_4700201805806600089 && (otherRec.sym__0__3362667619044778557 < sym__0__3362667619044778557 && (otherRec.sym__0__2679827580767046755 < sym__0__2679827580767046755 && (otherRec.sym__0___45_4186304031693649930 < sym__0___45_4186304031693649930 && (otherRec.sym__0__8596564865999609793 < sym__0__8596564865999609793 && (otherRec.sym__0___45_1671053890158572571 < sym__0___45_1671053890158572571 && (otherRec.sym__0__2256924431415148013 < sym__0__2256924431415148013 && (otherRec.sym__0__347872876320563651 < sym__0__347872876320563651 && (otherRec.sym__0___45_7666447219434903317 < sym__0___45_7666447219434903317 && (otherRec.sym__0__1272718151591622153 < sym__0__1272718151591622153 && (otherRec.sym__0__4584633926271658914 < sym__0__4584633926271658914 && (otherRec.sym__0___45_4610773208091240233 < sym__0___45_4610773208091240233 && (otherRec.sym__0___45_5766638191766435038 < sym__0___45_5766638191766435038 && (otherRec.sym__0___45_5211223358204127380 < sym__0___45_5211223358204127380 && (otherRec.sym__0__8435431464460332395 < sym__0__8435431464460332395 && (otherRec.sym__0___45_6450191115912157957 < sym__0___45_6450191115912157957 && (otherRec.sym__0__7921907673157171693 < sym__0__7921907673157171693 && (otherRec.sym__0___45_1699747741436218441 < sym__0___45_1699747741436218441 && (otherRec.sym__0___45_2985562469054236715 < sym__0___45_2985562469054236715 && (otherRec.sym__0__3746029949899912401 < sym__0__3746029949899912401 && (otherRec.sym__0___45_989155948099215770 < sym__0___45_989155948099215770 && (otherRec.sym__0___45_1667761180508152936 < sym__0___45_1667761180508152936 && (otherRec.sym__0__5854462121170882944 < sym__0__5854462121170882944 && (otherRec.sym__0___45_1023382914117654422 < sym__0___45_1023382914117654422 && (otherRec.sym__0__6224010339127806049 < sym__0__6224010339127806049 && (otherRec.sym__0___45_8804639047977952305 < sym__0___45_8804639047977952305 && (otherRec.sym__0__8926375957639307021 < sym__0__8926375957639307021 && (otherRec.sym__0__5153200798583684363 < sym__0__5153200798583684363 && (otherRec.sym__0___45_794494697990656050 < sym__0___45_794494697990656050 && otherRec.sym__0__7308161412148661473 < sym__0__7308161412148661473)))))))))))))))))))))))))))))));
  }
  bool operator ==(const Record8& otherRec) const{
    return (otherRec.sym__0__2833764152503888409 == sym__0__2833764152503888409 && (otherRec.sym__0__6938021140779677761 == sym__0__6938021140779677761 && (otherRec.sym__0___45_4700201805806600089 == sym__0___45_4700201805806600089 && (otherRec.sym__0__3362667619044778557 == sym__0__3362667619044778557 && (otherRec.sym__0__2679827580767046755 == sym__0__2679827580767046755 && (otherRec.sym__0___45_4186304031693649930 == sym__0___45_4186304031693649930 && (otherRec.sym__0__8596564865999609793 == sym__0__8596564865999609793 && (otherRec.sym__0___45_1671053890158572571 == sym__0___45_1671053890158572571 && (otherRec.sym__0__2256924431415148013 == sym__0__2256924431415148013 && (otherRec.sym__0__347872876320563651 == sym__0__347872876320563651 && (otherRec.sym__0___45_7666447219434903317 == sym__0___45_7666447219434903317 && (otherRec.sym__0__1272718151591622153 == sym__0__1272718151591622153 && (otherRec.sym__0__4584633926271658914 == sym__0__4584633926271658914 && (otherRec.sym__0___45_4610773208091240233 == sym__0___45_4610773208091240233 && (otherRec.sym__0___45_5766638191766435038 == sym__0___45_5766638191766435038 && (otherRec.sym__0___45_5211223358204127380 == sym__0___45_5211223358204127380 && (otherRec.sym__0__8435431464460332395 == sym__0__8435431464460332395 && (otherRec.sym__0___45_6450191115912157957 == sym__0___45_6450191115912157957 && (otherRec.sym__0__7921907673157171693 == sym__0__7921907673157171693 && (otherRec.sym__0___45_1699747741436218441 == sym__0___45_1699747741436218441 && (otherRec.sym__0___45_2985562469054236715 == sym__0___45_2985562469054236715 && (otherRec.sym__0__3746029949899912401 == sym__0__3746029949899912401 && (otherRec.sym__0___45_989155948099215770 == sym__0___45_989155948099215770 && (otherRec.sym__0___45_1667761180508152936 == sym__0___45_1667761180508152936 && (otherRec.sym__0__5854462121170882944 == sym__0__5854462121170882944 && (otherRec.sym__0___45_1023382914117654422 == sym__0___45_1023382914117654422 && (otherRec.sym__0__6224010339127806049 == sym__0__6224010339127806049 && (otherRec.sym__0___45_8804639047977952305 == sym__0___45_8804639047977952305 && (otherRec.sym__0__8926375957639307021 == sym__0__8926375957639307021 && (otherRec.sym__0__5153200798583684363 == sym__0__5153200798583684363 && (otherRec.sym__0___45_794494697990656050 == sym__0___45_794494697990656050 && otherRec.sym__0__7308161412148661473 == sym__0__7308161412148661473)))))))))))))))))))))))))))))));
  }
  bool operator !=(const Record8& otherRec) const{
    return (otherRec.sym__0__2833764152503888409 != sym__0__2833764152503888409 || (otherRec.sym__0__6938021140779677761 != sym__0__6938021140779677761 || (otherRec.sym__0___45_4700201805806600089 != sym__0___45_4700201805806600089 || (otherRec.sym__0__3362667619044778557 != sym__0__3362667619044778557 || (otherRec.sym__0__2679827580767046755 != sym__0__2679827580767046755 || (otherRec.sym__0___45_4186304031693649930 != sym__0___45_4186304031693649930 || (otherRec.sym__0__8596564865999609793 != sym__0__8596564865999609793 || (otherRec.sym__0___45_1671053890158572571 != sym__0___45_1671053890158572571 || (otherRec.sym__0__2256924431415148013 != sym__0__2256924431415148013 || (otherRec.sym__0__347872876320563651 != sym__0__347872876320563651 || (otherRec.sym__0___45_7666447219434903317 != sym__0___45_7666447219434903317 || (otherRec.sym__0__1272718151591622153 != sym__0__1272718151591622153 || (otherRec.sym__0__4584633926271658914 != sym__0__4584633926271658914 || (otherRec.sym__0___45_4610773208091240233 != sym__0___45_4610773208091240233 || (otherRec.sym__0___45_5766638191766435038 != sym__0___45_5766638191766435038 || (otherRec.sym__0___45_5211223358204127380 != sym__0___45_5211223358204127380 || (otherRec.sym__0__8435431464460332395 != sym__0__8435431464460332395 || (otherRec.sym__0___45_6450191115912157957 != sym__0___45_6450191115912157957 || (otherRec.sym__0__7921907673157171693 != sym__0__7921907673157171693 || (otherRec.sym__0___45_1699747741436218441 != sym__0___45_1699747741436218441 || (otherRec.sym__0___45_2985562469054236715 != sym__0___45_2985562469054236715 || (otherRec.sym__0__3746029949899912401 != sym__0__3746029949899912401 || (otherRec.sym__0___45_989155948099215770 != sym__0___45_989155948099215770 || (otherRec.sym__0___45_1667761180508152936 != sym__0___45_1667761180508152936 || (otherRec.sym__0__5854462121170882944 != sym__0__5854462121170882944 || (otherRec.sym__0___45_1023382914117654422 != sym__0___45_1023382914117654422 || (otherRec.sym__0__6224010339127806049 != sym__0__6224010339127806049 || (otherRec.sym__0___45_8804639047977952305 != sym__0___45_8804639047977952305 || (otherRec.sym__0__8926375957639307021 != sym__0__8926375957639307021 || (otherRec.sym__0__5153200798583684363 != sym__0__5153200798583684363 || (otherRec.sym__0___45_794494697990656050 != sym__0___45_794494697990656050 || otherRec.sym__0__7308161412148661473 != sym__0__7308161412148661473)))))))))))))))))))))))))))))));
  }
  unsigned sym__0__2833764152503888409;
  fluidb_string<18> sym__0__6938021140779677761;
  fluidb_string<40> sym__0___45_4700201805806600089;
  fluidb_string<11> sym__0__3362667619044778557;
  fluidb_string<15> sym__0__2679827580767046755;
  fluidb_string<13> sym__0___45_4186304031693649930;
  fluidb_string<15> sym__0__8596564865999609793;
  fluidb_string<21> sym__0___45_1671053890158572571;
  unsigned sym__0__2256924431415148013;
  int sym__0__347872876320563651;
  unsigned sym__0___45_7666447219434903317;
  unsigned sym__0__1272718151591622153;
  unsigned sym__0__4584633926271658914;
  unsigned sym__0___45_4610773208091240233;
  fluidb_string<21> sym__0___45_5766638191766435038;
  unsigned sym__0___45_5211223358204127380;
  fluidb_string<10> sym__0__8435431464460332395;
  unsigned sym__0___45_6450191115912157957;
  double sym__0__7921907673157171693;
  unsigned sym__0___45_1699747741436218441;
  double sym__0___45_2985562469054236715;
  unsigned sym__0__3746029949899912401;
  unsigned sym__0___45_989155948099215770;
  double sym__0___45_1667761180508152936;
  fluidb_string<13> sym__0__5854462121170882944;
  unsigned sym__0___45_1023382914117654422;
  fluidb_string<25> sym__0__6224010339127806049;
  fluidb_string<40> sym__0___45_8804639047977952305;
  fluidb_string<16> sym__0__8926375957639307021;
  fluidb_string<16> sym__0__5153200798583684363;
  fluidb_string<13> sym__0___45_794494697990656050;
  fluidb_string<15> sym__0__7308161412148661473;
 private:
};


class Record26 {
 public:
  Record26(unsigned __sym__0__1196038122209723224, fluidb_string<25> __sym__0___45_5396739333020453801, fluidb_string<40> __sym__0__7318687715908221809, fluidb_string<16> __sym__0__2891697849105026659, fluidb_string<16> __sym__0__1705870681861471261, fluidb_string<13> __sym__0__4085985592626786348, fluidb_string<15> __sym__0___45_2546290346218932265, unsigned __sym__0__8845872946768435011, int __sym__0___45_536981335351402283, unsigned __sym__0__7156593816844630781, unsigned __sym__0__1878735381655673343, unsigned __sym__0___45_7967195135681474416, unsigned __sym__0__3115653129156217, fluidb_string<21> __sym__0__1583988969561549072, unsigned __sym__0___45_3657663143348245634, fluidb_string<10> __sym__0__6169465618573060221, unsigned __sym__0__7654885345897107213, double __sym__0__5757227188790481731, unsigned __sym__0___45_7730226973009959847, double __sym__0__4629686008780986923, unsigned __sym__0__5444316439887834055, unsigned __sym__0__7286973418962910916, double __sym__0__1604931916608195386, fluidb_string<13> __sym__0__489177568005913122, unsigned __sym__0___45_8465484648693951129, fluidb_string<18> __sym__0__7822680167585103223, fluidb_string<9> __sym__0___45_3173623228407185379, fluidb_string<9> __sym__0___45_3249583474025477806, unsigned __sym__0__1019831724731857824, unsigned __sym__0__6357552419948953026, fluidb_string<7> __sym__0___45_8615703586696965681, unsigned __sym__0___45_7005742229109547444, unsigned __sym__0__8774624207768670575, unsigned __sym__0__3138244998511594119, unsigned __sym__0___45_4685601122410998251, unsigned __sym__0__2656125265768258418, fluidb_string<15> __sym__0__5511557204728954683, fluidb_string<2> __sym__0___45_3552301622842007037, fluidb_string<2> __sym__0__3839551924916702702, fluidb_string<2> __sym__0___45_2488677329649749562, fluidb_string<2> __sym__0___45_3033584803630280248) : sym__0__1196038122209723224(__sym__0__1196038122209723224), sym__0___45_5396739333020453801(__sym__0___45_5396739333020453801), sym__0__7318687715908221809(__sym__0__7318687715908221809), sym__0__2891697849105026659(__sym__0__2891697849105026659), sym__0__1705870681861471261(__sym__0__1705870681861471261), sym__0__4085985592626786348(__sym__0__4085985592626786348), sym__0___45_2546290346218932265(__sym__0___45_2546290346218932265), sym__0__8845872946768435011(__sym__0__8845872946768435011), sym__0___45_536981335351402283(__sym__0___45_536981335351402283), sym__0__7156593816844630781(__sym__0__7156593816844630781), sym__0__1878735381655673343(__sym__0__1878735381655673343), sym__0___45_7967195135681474416(__sym__0___45_7967195135681474416), sym__0__3115653129156217(__sym__0__3115653129156217), sym__0__1583988969561549072(__sym__0__1583988969561549072), sym__0___45_3657663143348245634(__sym__0___45_3657663143348245634), sym__0__6169465618573060221(__sym__0__6169465618573060221), sym__0__7654885345897107213(__sym__0__7654885345897107213), sym__0__5757227188790481731(__sym__0__5757227188790481731), sym__0___45_7730226973009959847(__sym__0___45_7730226973009959847), sym__0__4629686008780986923(__sym__0__4629686008780986923), sym__0__5444316439887834055(__sym__0__5444316439887834055), sym__0__7286973418962910916(__sym__0__7286973418962910916), sym__0__1604931916608195386(__sym__0__1604931916608195386), sym__0__489177568005913122(__sym__0__489177568005913122), sym__0___45_8465484648693951129(__sym__0___45_8465484648693951129), sym__0__7822680167585103223(__sym__0__7822680167585103223), sym__0___45_3173623228407185379(__sym__0___45_3173623228407185379), sym__0___45_3249583474025477806(__sym__0___45_3249583474025477806), sym__0__1019831724731857824(__sym__0__1019831724731857824), sym__0__6357552419948953026(__sym__0__6357552419948953026), sym__0___45_8615703586696965681(__sym__0___45_8615703586696965681), sym__0___45_7005742229109547444(__sym__0___45_7005742229109547444), sym__0__8774624207768670575(__sym__0__8774624207768670575), sym__0__3138244998511594119(__sym__0__3138244998511594119), sym__0___45_4685601122410998251(__sym__0___45_4685601122410998251), sym__0__2656125265768258418(__sym__0__2656125265768258418), sym__0__5511557204728954683(__sym__0__5511557204728954683), sym__0___45_3552301622842007037(__sym__0___45_3552301622842007037), sym__0__3839551924916702702(__sym__0__3839551924916702702), sym__0___45_2488677329649749562(__sym__0___45_2488677329649749562), sym__0___45_3033584803630280248(__sym__0___45_3033584803630280248)
  {
  }
  Record26() 
  {
  }
  std::string show() const{
    std::stringstream o;
    o << sym__0__1196038122209723224 << " | " << arrToString(sym__0___45_5396739333020453801) << " | " << arrToString(sym__0__7318687715908221809) << " | " << arrToString(sym__0__2891697849105026659) << " | " << arrToString(sym__0__1705870681861471261) << " | " << arrToString(sym__0__4085985592626786348) << " | " << arrToString(sym__0___45_2546290346218932265) << " | " << sym__0__8845872946768435011 << " | " << sym__0___45_536981335351402283 << " | " << sym__0__7156593816844630781 << " | " << sym__0__1878735381655673343 << " | " << sym__0___45_7967195135681474416 << " | " << sym__0__3115653129156217 << " | " << arrToString(sym__0__1583988969561549072) << " | " << sym__0___45_3657663143348245634 << " | " << arrToString(sym__0__6169465618573060221) << " | " << sym__0__7654885345897107213 << " | " << sym__0__5757227188790481731 << " | " << sym__0___45_7730226973009959847 << " | " << sym__0__4629686008780986923 << " | " << sym__0__5444316439887834055 << " | " << sym__0__7286973418962910916 << " | " << sym__0__1604931916608195386 << " | " << arrToString(sym__0__489177568005913122) << " | " << sym__0___45_8465484648693951129 << " | " << arrToString(sym__0__7822680167585103223) << " | " << arrToString(sym__0___45_3173623228407185379) << " | " << arrToString(sym__0___45_3249583474025477806) << " | " << sym__0__1019831724731857824 << " | " << sym__0__6357552419948953026 << " | " << arrToString(sym__0___45_8615703586696965681) << " | " << sym__0___45_7005742229109547444 << " | " << sym__0__8774624207768670575 << " | " << sym__0__3138244998511594119 << " | " << sym__0___45_4685601122410998251 << " | " << sym__0__2656125265768258418 << " | " << arrToString(sym__0__5511557204728954683) << " | " << arrToString(sym__0___45_3552301622842007037) << " | " << arrToString(sym__0__3839551924916702702) << " | " << arrToString(sym__0___45_2488677329649749562) << " | " << arrToString(sym__0___45_3033584803630280248);
    return o.str();
  }
  bool operator <(const Record26& otherRec) const{
    return (otherRec.sym__0__1196038122209723224 < sym__0__1196038122209723224 && (otherRec.sym__0___45_5396739333020453801 < sym__0___45_5396739333020453801 && (otherRec.sym__0__7318687715908221809 < sym__0__7318687715908221809 && (otherRec.sym__0__2891697849105026659 < sym__0__2891697849105026659 && (otherRec.sym__0__1705870681861471261 < sym__0__1705870681861471261 && (otherRec.sym__0__4085985592626786348 < sym__0__4085985592626786348 && (otherRec.sym__0___45_2546290346218932265 < sym__0___45_2546290346218932265 && (otherRec.sym__0__8845872946768435011 < sym__0__8845872946768435011 && (otherRec.sym__0___45_536981335351402283 < sym__0___45_536981335351402283 && (otherRec.sym__0__7156593816844630781 < sym__0__7156593816844630781 && (otherRec.sym__0__1878735381655673343 < sym__0__1878735381655673343 && (otherRec.sym__0___45_7967195135681474416 < sym__0___45_7967195135681474416 && (otherRec.sym__0__3115653129156217 < sym__0__3115653129156217 && (otherRec.sym__0__1583988969561549072 < sym__0__1583988969561549072 && (otherRec.sym__0___45_3657663143348245634 < sym__0___45_3657663143348245634 && (otherRec.sym__0__6169465618573060221 < sym__0__6169465618573060221 && (otherRec.sym__0__7654885345897107213 < sym__0__7654885345897107213 && (otherRec.sym__0__5757227188790481731 < sym__0__5757227188790481731 && (otherRec.sym__0___45_7730226973009959847 < sym__0___45_7730226973009959847 && (otherRec.sym__0__4629686008780986923 < sym__0__4629686008780986923 && (otherRec.sym__0__5444316439887834055 < sym__0__5444316439887834055 && (otherRec.sym__0__7286973418962910916 < sym__0__7286973418962910916 && (otherRec.sym__0__1604931916608195386 < sym__0__1604931916608195386 && (otherRec.sym__0__489177568005913122 < sym__0__489177568005913122 && (otherRec.sym__0___45_8465484648693951129 < sym__0___45_8465484648693951129 && (otherRec.sym__0__7822680167585103223 < sym__0__7822680167585103223 && (otherRec.sym__0___45_3173623228407185379 < sym__0___45_3173623228407185379 && (otherRec.sym__0___45_3249583474025477806 < sym__0___45_3249583474025477806 && (otherRec.sym__0__1019831724731857824 < sym__0__1019831724731857824 && (otherRec.sym__0__6357552419948953026 < sym__0__6357552419948953026 && (otherRec.sym__0___45_8615703586696965681 < sym__0___45_8615703586696965681 && (otherRec.sym__0___45_7005742229109547444 < sym__0___45_7005742229109547444 && (otherRec.sym__0__8774624207768670575 < sym__0__8774624207768670575 && (otherRec.sym__0__3138244998511594119 < sym__0__3138244998511594119 && (otherRec.sym__0___45_4685601122410998251 < sym__0___45_4685601122410998251 && (otherRec.sym__0__2656125265768258418 < sym__0__2656125265768258418 && (otherRec.sym__0__5511557204728954683 < sym__0__5511557204728954683 && (otherRec.sym__0___45_3552301622842007037 < sym__0___45_3552301622842007037 && (otherRec.sym__0__3839551924916702702 < sym__0__3839551924916702702 && (otherRec.sym__0___45_2488677329649749562 < sym__0___45_2488677329649749562 && otherRec.sym__0___45_3033584803630280248 < sym__0___45_3033584803630280248))))))))))))))))))))))))))))))))))))))));
  }
  bool operator ==(const Record26& otherRec) const{
    return (otherRec.sym__0__1196038122209723224 == sym__0__1196038122209723224 && (otherRec.sym__0___45_5396739333020453801 == sym__0___45_5396739333020453801 && (otherRec.sym__0__7318687715908221809 == sym__0__7318687715908221809 && (otherRec.sym__0__2891697849105026659 == sym__0__2891697849105026659 && (otherRec.sym__0__1705870681861471261 == sym__0__1705870681861471261 && (otherRec.sym__0__4085985592626786348 == sym__0__4085985592626786348 && (otherRec.sym__0___45_2546290346218932265 == sym__0___45_2546290346218932265 && (otherRec.sym__0__8845872946768435011 == sym__0__8845872946768435011 && (otherRec.sym__0___45_536981335351402283 == sym__0___45_536981335351402283 && (otherRec.sym__0__7156593816844630781 == sym__0__7156593816844630781 && (otherRec.sym__0__1878735381655673343 == sym__0__1878735381655673343 && (otherRec.sym__0___45_7967195135681474416 == sym__0___45_7967195135681474416 && (otherRec.sym__0__3115653129156217 == sym__0__3115653129156217 && (otherRec.sym__0__1583988969561549072 == sym__0__1583988969561549072 && (otherRec.sym__0___45_3657663143348245634 == sym__0___45_3657663143348245634 && (otherRec.sym__0__6169465618573060221 == sym__0__6169465618573060221 && (otherRec.sym__0__7654885345897107213 == sym__0__7654885345897107213 && (otherRec.sym__0__5757227188790481731 == sym__0__5757227188790481731 && (otherRec.sym__0___45_7730226973009959847 == sym__0___45_7730226973009959847 && (otherRec.sym__0__4629686008780986923 == sym__0__4629686008780986923 && (otherRec.sym__0__5444316439887834055 == sym__0__5444316439887834055 && (otherRec.sym__0__7286973418962910916 == sym__0__7286973418962910916 && (otherRec.sym__0__1604931916608195386 == sym__0__1604931916608195386 && (otherRec.sym__0__489177568005913122 == sym__0__489177568005913122 && (otherRec.sym__0___45_8465484648693951129 == sym__0___45_8465484648693951129 && (otherRec.sym__0__7822680167585103223 == sym__0__7822680167585103223 && (otherRec.sym__0___45_3173623228407185379 == sym__0___45_3173623228407185379 && (otherRec.sym__0___45_3249583474025477806 == sym__0___45_3249583474025477806 && (otherRec.sym__0__1019831724731857824 == sym__0__1019831724731857824 && (otherRec.sym__0__6357552419948953026 == sym__0__6357552419948953026 && (otherRec.sym__0___45_8615703586696965681 == sym__0___45_8615703586696965681 && (otherRec.sym__0___45_7005742229109547444 == sym__0___45_7005742229109547444 && (otherRec.sym__0__8774624207768670575 == sym__0__8774624207768670575 && (otherRec.sym__0__3138244998511594119 == sym__0__3138244998511594119 && (otherRec.sym__0___45_4685601122410998251 == sym__0___45_4685601122410998251 && (otherRec.sym__0__2656125265768258418 == sym__0__2656125265768258418 && (otherRec.sym__0__5511557204728954683 == sym__0__5511557204728954683 && (otherRec.sym__0___45_3552301622842007037 == sym__0___45_3552301622842007037 && (otherRec.sym__0__3839551924916702702 == sym__0__3839551924916702702 && (otherRec.sym__0___45_2488677329649749562 == sym__0___45_2488677329649749562 && otherRec.sym__0___45_3033584803630280248 == sym__0___45_3033584803630280248))))))))))))))))))))))))))))))))))))))));
  }
  bool operator !=(const Record26& otherRec) const{
    return (otherRec.sym__0__1196038122209723224 != sym__0__1196038122209723224 || (otherRec.sym__0___45_5396739333020453801 != sym__0___45_5396739333020453801 || (otherRec.sym__0__7318687715908221809 != sym__0__7318687715908221809 || (otherRec.sym__0__2891697849105026659 != sym__0__2891697849105026659 || (otherRec.sym__0__1705870681861471261 != sym__0__1705870681861471261 || (otherRec.sym__0__4085985592626786348 != sym__0__4085985592626786348 || (otherRec.sym__0___45_2546290346218932265 != sym__0___45_2546290346218932265 || (otherRec.sym__0__8845872946768435011 != sym__0__8845872946768435011 || (otherRec.sym__0___45_536981335351402283 != sym__0___45_536981335351402283 || (otherRec.sym__0__7156593816844630781 != sym__0__7156593816844630781 || (otherRec.sym__0__1878735381655673343 != sym__0__1878735381655673343 || (otherRec.sym__0___45_7967195135681474416 != sym__0___45_7967195135681474416 || (otherRec.sym__0__3115653129156217 != sym__0__3115653129156217 || (otherRec.sym__0__1583988969561549072 != sym__0__1583988969561549072 || (otherRec.sym__0___45_3657663143348245634 != sym__0___45_3657663143348245634 || (otherRec.sym__0__6169465618573060221 != sym__0__6169465618573060221 || (otherRec.sym__0__7654885345897107213 != sym__0__7654885345897107213 || (otherRec.sym__0__5757227188790481731 != sym__0__5757227188790481731 || (otherRec.sym__0___45_7730226973009959847 != sym__0___45_7730226973009959847 || (otherRec.sym__0__4629686008780986923 != sym__0__4629686008780986923 || (otherRec.sym__0__5444316439887834055 != sym__0__5444316439887834055 || (otherRec.sym__0__7286973418962910916 != sym__0__7286973418962910916 || (otherRec.sym__0__1604931916608195386 != sym__0__1604931916608195386 || (otherRec.sym__0__489177568005913122 != sym__0__489177568005913122 || (otherRec.sym__0___45_8465484648693951129 != sym__0___45_8465484648693951129 || (otherRec.sym__0__7822680167585103223 != sym__0__7822680167585103223 || (otherRec.sym__0___45_3173623228407185379 != sym__0___45_3173623228407185379 || (otherRec.sym__0___45_3249583474025477806 != sym__0___45_3249583474025477806 || (otherRec.sym__0__1019831724731857824 != sym__0__1019831724731857824 || (otherRec.sym__0__6357552419948953026 != sym__0__6357552419948953026 || (otherRec.sym__0___45_8615703586696965681 != sym__0___45_8615703586696965681 || (otherRec.sym__0___45_7005742229109547444 != sym__0___45_7005742229109547444 || (otherRec.sym__0__8774624207768670575 != sym__0__8774624207768670575 || (otherRec.sym__0__3138244998511594119 != sym__0__3138244998511594119 || (otherRec.sym__0___45_4685601122410998251 != sym__0___45_4685601122410998251 || (otherRec.sym__0__2656125265768258418 != sym__0__2656125265768258418 || (otherRec.sym__0__5511557204728954683 != sym__0__5511557204728954683 || (otherRec.sym__0___45_3552301622842007037 != sym__0___45_3552301622842007037 || (otherRec.sym__0__3839551924916702702 != sym__0__3839551924916702702 || (otherRec.sym__0___45_2488677329649749562 != sym__0___45_2488677329649749562 || otherRec.sym__0___45_3033584803630280248 != sym__0___45_3033584803630280248))))))))))))))))))))))))))))))))))))))));
  }
  unsigned sym__0__1196038122209723224;
  fluidb_string<25> sym__0___45_5396739333020453801;
  fluidb_string<40> sym__0__7318687715908221809;
  fluidb_string<16> sym__0__2891697849105026659;
  fluidb_string<16> sym__0__1705870681861471261;
  fluidb_string<13> sym__0__4085985592626786348;
  fluidb_string<15> sym__0___45_2546290346218932265;
  unsigned sym__0__8845872946768435011;
  int sym__0___45_536981335351402283;
  unsigned sym__0__7156593816844630781;
  unsigned sym__0__1878735381655673343;
  unsigned sym__0___45_7967195135681474416;
  unsigned sym__0__3115653129156217;
  fluidb_string<21> sym__0__1583988969561549072;
  unsigned sym__0___45_3657663143348245634;
  fluidb_string<10> sym__0__6169465618573060221;
  unsigned sym__0__7654885345897107213;
  double sym__0__5757227188790481731;
  unsigned sym__0___45_7730226973009959847;
  double sym__0__4629686008780986923;
  unsigned sym__0__5444316439887834055;
  unsigned sym__0__7286973418962910916;
  double sym__0__1604931916608195386;
  fluidb_string<13> sym__0__489177568005913122;
  unsigned sym__0___45_8465484648693951129;
  fluidb_string<18> sym__0__7822680167585103223;
  fluidb_string<9> sym__0___45_3173623228407185379;
  fluidb_string<9> sym__0___45_3249583474025477806;
  unsigned sym__0__1019831724731857824;
  unsigned sym__0__6357552419948953026;
  fluidb_string<7> sym__0___45_8615703586696965681;
  unsigned sym__0___45_7005742229109547444;
  unsigned sym__0__8774624207768670575;
  unsigned sym__0__3138244998511594119;
  unsigned sym__0___45_4685601122410998251;
  unsigned sym__0__2656125265768258418;
  fluidb_string<15> sym__0__5511557204728954683;
  fluidb_string<2> sym__0___45_3552301622842007037;
  fluidb_string<2> sym__0__3839551924916702702;
  fluidb_string<2> sym__0___45_2488677329649749562;
  fluidb_string<2> sym__0___45_3033584803630280248;
 private:
};


class Record39 {
 public:
  Record39(unsigned __sym__0__2592840547366705296, fluidb_string<25> __sym__0__2788895063297001099, fluidb_string<40> __sym__0__1545257135384253129, fluidb_string<16> __sym__0___45_4622664073058890953, fluidb_string<16> __sym__0__7774459284859713893, fluidb_string<13> __sym__0__5464006631725545620, fluidb_string<15> __sym__0___45_3247512146210145269, unsigned __sym__0__9165007797673129751, int __sym__0__6736597523581036605, unsigned __sym__0___45_3324970871059066299, unsigned __sym__0__8802187528961009747, unsigned __sym__0___45_8153453103254980376, unsigned __sym__0___45_878170619108389423, fluidb_string<21> __sym__0___45_874194379502172824, unsigned __sym__0__8610439003510773098, fluidb_string<10> __sym__0__984338793883944389, unsigned __sym__0___45_241371384806950923, double __sym__0__4499056235050439447, unsigned __sym__0___45_602104477057249231, double __sym__0__2154432795296205471, unsigned __sym__0__8120436674510863259, unsigned __sym__0__8733838863403650604, double __sym__0__6144840941019744502, fluidb_string<13> __sym__0___45_4519435874778032514, unsigned __sym__0__7183756631487345723, fluidb_string<18> __sym__0__4004283392749253291, fluidb_string<9> __sym__0__7402856733199756645, fluidb_string<9> __sym__0___45_7276118071870614642, unsigned __sym__0__7689696364618968408, unsigned __sym__0__265232048543772062, fluidb_string<7> __sym__0___45_7391712330109786621, unsigned __sym__0__9093515676270508468, unsigned __sym__0__2039577949113231011, unsigned __sym__0___45_5518709817667950629, unsigned __sym__0__7446880365925781245, unsigned __sym__0__3933602404904280238, fluidb_string<15> __sym__0__839558304030626831, fluidb_string<2> __sym__0__1895092311538388823, fluidb_string<2> __sym__0__2442462535421269690, fluidb_string<2> __sym__0___45_3615474655229170638, fluidb_string<2> __sym__0__8806662867934001568, unsigned __sym__0___45_4159199765988317501, fluidb_string<18> __sym__0___45_5417534366741502741, fluidb_string<40> __sym__0__4597400568918183105, fluidb_string<11> __sym__0__8819540415296482823, fluidb_string<15> __sym__0___45_623355213379307427, fluidb_string<13> __sym__0__7994108978447880988, fluidb_string<15> __sym__0__7664015906371024747, fluidb_string<21> __sym__0___45_6006206227144636657, unsigned __sym__0__3122376255932122421, fluidb_string<55> __sym__0__5682795704482796293, fluidb_string<25> __sym__0__4547320860663492666, fluidb_string<7> __sym__0___45_8670773565387601472, fluidb_string<10> __sym__0___45_13570145613494646, fluidb_string<11> __sym__0__219157410367458310, fluidb_string<25> __sym__0__698480510036799380, unsigned __sym__0__5321414200743551775, fluidb_string<10> __sym__0__4130486035242774698) : sym__0__2592840547366705296(__sym__0__2592840547366705296), sym__0__2788895063297001099(__sym__0__2788895063297001099), sym__0__1545257135384253129(__sym__0__1545257135384253129), sym__0___45_4622664073058890953(__sym__0___45_4622664073058890953), sym__0__7774459284859713893(__sym__0__7774459284859713893), sym__0__5464006631725545620(__sym__0__5464006631725545620), sym__0___45_3247512146210145269(__sym__0___45_3247512146210145269), sym__0__9165007797673129751(__sym__0__9165007797673129751), sym__0__6736597523581036605(__sym__0__6736597523581036605), sym__0___45_3324970871059066299(__sym__0___45_3324970871059066299), sym__0__8802187528961009747(__sym__0__8802187528961009747), sym__0___45_8153453103254980376(__sym__0___45_8153453103254980376), sym__0___45_878170619108389423(__sym__0___45_878170619108389423), sym__0___45_874194379502172824(__sym__0___45_874194379502172824), sym__0__8610439003510773098(__sym__0__8610439003510773098), sym__0__984338793883944389(__sym__0__984338793883944389), sym__0___45_241371384806950923(__sym__0___45_241371384806950923), sym__0__4499056235050439447(__sym__0__4499056235050439447), sym__0___45_602104477057249231(__sym__0___45_602104477057249231), sym__0__2154432795296205471(__sym__0__2154432795296205471), sym__0__8120436674510863259(__sym__0__8120436674510863259), sym__0__8733838863403650604(__sym__0__8733838863403650604), sym__0__6144840941019744502(__sym__0__6144840941019744502), sym__0___45_4519435874778032514(__sym__0___45_4519435874778032514), sym__0__7183756631487345723(__sym__0__7183756631487345723), sym__0__4004283392749253291(__sym__0__4004283392749253291), sym__0__7402856733199756645(__sym__0__7402856733199756645), sym__0___45_7276118071870614642(__sym__0___45_7276118071870614642), sym__0__7689696364618968408(__sym__0__7689696364618968408), sym__0__265232048543772062(__sym__0__265232048543772062), sym__0___45_7391712330109786621(__sym__0___45_7391712330109786621), sym__0__9093515676270508468(__sym__0__9093515676270508468), sym__0__2039577949113231011(__sym__0__2039577949113231011), sym__0___45_5518709817667950629(__sym__0___45_5518709817667950629), sym__0__7446880365925781245(__sym__0__7446880365925781245), sym__0__3933602404904280238(__sym__0__3933602404904280238), sym__0__839558304030626831(__sym__0__839558304030626831), sym__0__1895092311538388823(__sym__0__1895092311538388823), sym__0__2442462535421269690(__sym__0__2442462535421269690), sym__0___45_3615474655229170638(__sym__0___45_3615474655229170638), sym__0__8806662867934001568(__sym__0__8806662867934001568), sym__0___45_4159199765988317501(__sym__0___45_4159199765988317501), sym__0___45_5417534366741502741(__sym__0___45_5417534366741502741), sym__0__4597400568918183105(__sym__0__4597400568918183105), sym__0__8819540415296482823(__sym__0__8819540415296482823), sym__0___45_623355213379307427(__sym__0___45_623355213379307427), sym__0__7994108978447880988(__sym__0__7994108978447880988), sym__0__7664015906371024747(__sym__0__7664015906371024747), sym__0___45_6006206227144636657(__sym__0___45_6006206227144636657), sym__0__3122376255932122421(__sym__0__3122376255932122421), sym__0__5682795704482796293(__sym__0__5682795704482796293), sym__0__4547320860663492666(__sym__0__4547320860663492666), sym__0___45_8670773565387601472(__sym__0___45_8670773565387601472), sym__0___45_13570145613494646(__sym__0___45_13570145613494646), sym__0__219157410367458310(__sym__0__219157410367458310), sym__0__698480510036799380(__sym__0__698480510036799380), sym__0__5321414200743551775(__sym__0__5321414200743551775), sym__0__4130486035242774698(__sym__0__4130486035242774698)
  {
  }
  Record39() 
  {
  }
  std::string show() const{
    std::stringstream o;
    o << sym__0__2592840547366705296 << " | " << arrToString(sym__0__2788895063297001099) << " | " << arrToString(sym__0__1545257135384253129) << " | " << arrToString(sym__0___45_4622664073058890953) << " | " << arrToString(sym__0__7774459284859713893) << " | " << arrToString(sym__0__5464006631725545620) << " | " << arrToString(sym__0___45_3247512146210145269) << " | " << sym__0__9165007797673129751 << " | " << sym__0__6736597523581036605 << " | " << sym__0___45_3324970871059066299 << " | " << sym__0__8802187528961009747 << " | " << sym__0___45_8153453103254980376 << " | " << sym__0___45_878170619108389423 << " | " << arrToString(sym__0___45_874194379502172824) << " | " << sym__0__8610439003510773098 << " | " << arrToString(sym__0__984338793883944389) << " | " << sym__0___45_241371384806950923 << " | " << sym__0__4499056235050439447 << " | " << sym__0___45_602104477057249231 << " | " << sym__0__2154432795296205471 << " | " << sym__0__8120436674510863259 << " | " << sym__0__8733838863403650604 << " | " << sym__0__6144840941019744502 << " | " << arrToString(sym__0___45_4519435874778032514) << " | " << sym__0__7183756631487345723 << " | " << arrToString(sym__0__4004283392749253291) << " | " << arrToString(sym__0__7402856733199756645) << " | " << arrToString(sym__0___45_7276118071870614642) << " | " << sym__0__7689696364618968408 << " | " << sym__0__265232048543772062 << " | " << arrToString(sym__0___45_7391712330109786621) << " | " << sym__0__9093515676270508468 << " | " << sym__0__2039577949113231011 << " | " << sym__0___45_5518709817667950629 << " | " << sym__0__7446880365925781245 << " | " << sym__0__3933602404904280238 << " | " << arrToString(sym__0__839558304030626831) << " | " << arrToString(sym__0__1895092311538388823) << " | " << arrToString(sym__0__2442462535421269690) << " | " << arrToString(sym__0___45_3615474655229170638) << " | " << arrToString(sym__0__8806662867934001568) << " | " << sym__0___45_4159199765988317501 << " | " << arrToString(sym__0___45_5417534366741502741) << " | " << arrToString(sym__0__4597400568918183105) << " | " << arrToString(sym__0__8819540415296482823) << " | " << arrToString(sym__0___45_623355213379307427) << " | " << arrToString(sym__0__7994108978447880988) << " | " << arrToString(sym__0__7664015906371024747) << " | " << arrToString(sym__0___45_6006206227144636657) << " | " << sym__0__3122376255932122421 << " | " << arrToString(sym__0__5682795704482796293) << " | " << arrToString(sym__0__4547320860663492666) << " | " << arrToString(sym__0___45_8670773565387601472) << " | " << arrToString(sym__0___45_13570145613494646) << " | " << arrToString(sym__0__219157410367458310) << " | " << arrToString(sym__0__698480510036799380) << " | " << sym__0__5321414200743551775 << " | " << arrToString(sym__0__4130486035242774698);
    return o.str();
  }
  bool operator <(const Record39& otherRec) const{
    return (otherRec.sym__0__2592840547366705296 < sym__0__2592840547366705296 && (otherRec.sym__0__2788895063297001099 < sym__0__2788895063297001099 && (otherRec.sym__0__1545257135384253129 < sym__0__1545257135384253129 && (otherRec.sym__0___45_4622664073058890953 < sym__0___45_4622664073058890953 && (otherRec.sym__0__7774459284859713893 < sym__0__7774459284859713893 && (otherRec.sym__0__5464006631725545620 < sym__0__5464006631725545620 && (otherRec.sym__0___45_3247512146210145269 < sym__0___45_3247512146210145269 && (otherRec.sym__0__9165007797673129751 < sym__0__9165007797673129751 && (otherRec.sym__0__6736597523581036605 < sym__0__6736597523581036605 && (otherRec.sym__0___45_3324970871059066299 < sym__0___45_3324970871059066299 && (otherRec.sym__0__8802187528961009747 < sym__0__8802187528961009747 && (otherRec.sym__0___45_8153453103254980376 < sym__0___45_8153453103254980376 && (otherRec.sym__0___45_878170619108389423 < sym__0___45_878170619108389423 && (otherRec.sym__0___45_874194379502172824 < sym__0___45_874194379502172824 && (otherRec.sym__0__8610439003510773098 < sym__0__8610439003510773098 && (otherRec.sym__0__984338793883944389 < sym__0__984338793883944389 && (otherRec.sym__0___45_241371384806950923 < sym__0___45_241371384806950923 && (otherRec.sym__0__4499056235050439447 < sym__0__4499056235050439447 && (otherRec.sym__0___45_602104477057249231 < sym__0___45_602104477057249231 && (otherRec.sym__0__2154432795296205471 < sym__0__2154432795296205471 && (otherRec.sym__0__8120436674510863259 < sym__0__8120436674510863259 && (otherRec.sym__0__8733838863403650604 < sym__0__8733838863403650604 && (otherRec.sym__0__6144840941019744502 < sym__0__6144840941019744502 && (otherRec.sym__0___45_4519435874778032514 < sym__0___45_4519435874778032514 && (otherRec.sym__0__7183756631487345723 < sym__0__7183756631487345723 && (otherRec.sym__0__4004283392749253291 < sym__0__4004283392749253291 && (otherRec.sym__0__7402856733199756645 < sym__0__7402856733199756645 && (otherRec.sym__0___45_7276118071870614642 < sym__0___45_7276118071870614642 && (otherRec.sym__0__7689696364618968408 < sym__0__7689696364618968408 && (otherRec.sym__0__265232048543772062 < sym__0__265232048543772062 && (otherRec.sym__0___45_7391712330109786621 < sym__0___45_7391712330109786621 && (otherRec.sym__0__9093515676270508468 < sym__0__9093515676270508468 && (otherRec.sym__0__2039577949113231011 < sym__0__2039577949113231011 && (otherRec.sym__0___45_5518709817667950629 < sym__0___45_5518709817667950629 && (otherRec.sym__0__7446880365925781245 < sym__0__7446880365925781245 && (otherRec.sym__0__3933602404904280238 < sym__0__3933602404904280238 && (otherRec.sym__0__839558304030626831 < sym__0__839558304030626831 && (otherRec.sym__0__1895092311538388823 < sym__0__1895092311538388823 && (otherRec.sym__0__2442462535421269690 < sym__0__2442462535421269690 && (otherRec.sym__0___45_3615474655229170638 < sym__0___45_3615474655229170638 && (otherRec.sym__0__8806662867934001568 < sym__0__8806662867934001568 && (otherRec.sym__0___45_4159199765988317501 < sym__0___45_4159199765988317501 && (otherRec.sym__0___45_5417534366741502741 < sym__0___45_5417534366741502741 && (otherRec.sym__0__4597400568918183105 < sym__0__4597400568918183105 && (otherRec.sym__0__8819540415296482823 < sym__0__8819540415296482823 && (otherRec.sym__0___45_623355213379307427 < sym__0___45_623355213379307427 && (otherRec.sym__0__7994108978447880988 < sym__0__7994108978447880988 && (otherRec.sym__0__7664015906371024747 < sym__0__7664015906371024747 && (otherRec.sym__0___45_6006206227144636657 < sym__0___45_6006206227144636657 && (otherRec.sym__0__3122376255932122421 < sym__0__3122376255932122421 && (otherRec.sym__0__5682795704482796293 < sym__0__5682795704482796293 && (otherRec.sym__0__4547320860663492666 < sym__0__4547320860663492666 && (otherRec.sym__0___45_8670773565387601472 < sym__0___45_8670773565387601472 && (otherRec.sym__0___45_13570145613494646 < sym__0___45_13570145613494646 && (otherRec.sym__0__219157410367458310 < sym__0__219157410367458310 && (otherRec.sym__0__698480510036799380 < sym__0__698480510036799380 && (otherRec.sym__0__5321414200743551775 < sym__0__5321414200743551775 && otherRec.sym__0__4130486035242774698 < sym__0__4130486035242774698)))))))))))))))))))))))))))))))))))))))))))))))))))))))));
  }
  bool operator ==(const Record39& otherRec) const{
    return (otherRec.sym__0__2592840547366705296 == sym__0__2592840547366705296 && (otherRec.sym__0__2788895063297001099 == sym__0__2788895063297001099 && (otherRec.sym__0__1545257135384253129 == sym__0__1545257135384253129 && (otherRec.sym__0___45_4622664073058890953 == sym__0___45_4622664073058890953 && (otherRec.sym__0__7774459284859713893 == sym__0__7774459284859713893 && (otherRec.sym__0__5464006631725545620 == sym__0__5464006631725545620 && (otherRec.sym__0___45_3247512146210145269 == sym__0___45_3247512146210145269 && (otherRec.sym__0__9165007797673129751 == sym__0__9165007797673129751 && (otherRec.sym__0__6736597523581036605 == sym__0__6736597523581036605 && (otherRec.sym__0___45_3324970871059066299 == sym__0___45_3324970871059066299 && (otherRec.sym__0__8802187528961009747 == sym__0__8802187528961009747 && (otherRec.sym__0___45_8153453103254980376 == sym__0___45_8153453103254980376 && (otherRec.sym__0___45_878170619108389423 == sym__0___45_878170619108389423 && (otherRec.sym__0___45_874194379502172824 == sym__0___45_874194379502172824 && (otherRec.sym__0__8610439003510773098 == sym__0__8610439003510773098 && (otherRec.sym__0__984338793883944389 == sym__0__984338793883944389 && (otherRec.sym__0___45_241371384806950923 == sym__0___45_241371384806950923 && (otherRec.sym__0__4499056235050439447 == sym__0__4499056235050439447 && (otherRec.sym__0___45_602104477057249231 == sym__0___45_602104477057249231 && (otherRec.sym__0__2154432795296205471 == sym__0__2154432795296205471 && (otherRec.sym__0__8120436674510863259 == sym__0__8120436674510863259 && (otherRec.sym__0__8733838863403650604 == sym__0__8733838863403650604 && (otherRec.sym__0__6144840941019744502 == sym__0__6144840941019744502 && (otherRec.sym__0___45_4519435874778032514 == sym__0___45_4519435874778032514 && (otherRec.sym__0__7183756631487345723 == sym__0__7183756631487345723 && (otherRec.sym__0__4004283392749253291 == sym__0__4004283392749253291 && (otherRec.sym__0__7402856733199756645 == sym__0__7402856733199756645 && (otherRec.sym__0___45_7276118071870614642 == sym__0___45_7276118071870614642 && (otherRec.sym__0__7689696364618968408 == sym__0__7689696364618968408 && (otherRec.sym__0__265232048543772062 == sym__0__265232048543772062 && (otherRec.sym__0___45_7391712330109786621 == sym__0___45_7391712330109786621 && (otherRec.sym__0__9093515676270508468 == sym__0__9093515676270508468 && (otherRec.sym__0__2039577949113231011 == sym__0__2039577949113231011 && (otherRec.sym__0___45_5518709817667950629 == sym__0___45_5518709817667950629 && (otherRec.sym__0__7446880365925781245 == sym__0__7446880365925781245 && (otherRec.sym__0__3933602404904280238 == sym__0__3933602404904280238 && (otherRec.sym__0__839558304030626831 == sym__0__839558304030626831 && (otherRec.sym__0__1895092311538388823 == sym__0__1895092311538388823 && (otherRec.sym__0__2442462535421269690 == sym__0__2442462535421269690 && (otherRec.sym__0___45_3615474655229170638 == sym__0___45_3615474655229170638 && (otherRec.sym__0__8806662867934001568 == sym__0__8806662867934001568 && (otherRec.sym__0___45_4159199765988317501 == sym__0___45_4159199765988317501 && (otherRec.sym__0___45_5417534366741502741 == sym__0___45_5417534366741502741 && (otherRec.sym__0__4597400568918183105 == sym__0__4597400568918183105 && (otherRec.sym__0__8819540415296482823 == sym__0__8819540415296482823 && (otherRec.sym__0___45_623355213379307427 == sym__0___45_623355213379307427 && (otherRec.sym__0__7994108978447880988 == sym__0__7994108978447880988 && (otherRec.sym__0__7664015906371024747 == sym__0__7664015906371024747 && (otherRec.sym__0___45_6006206227144636657 == sym__0___45_6006206227144636657 && (otherRec.sym__0__3122376255932122421 == sym__0__3122376255932122421 && (otherRec.sym__0__5682795704482796293 == sym__0__5682795704482796293 && (otherRec.sym__0__4547320860663492666 == sym__0__4547320860663492666 && (otherRec.sym__0___45_8670773565387601472 == sym__0___45_8670773565387601472 && (otherRec.sym__0___45_13570145613494646 == sym__0___45_13570145613494646 && (otherRec.sym__0__219157410367458310 == sym__0__219157410367458310 && (otherRec.sym__0__698480510036799380 == sym__0__698480510036799380 && (otherRec.sym__0__5321414200743551775 == sym__0__5321414200743551775 && otherRec.sym__0__4130486035242774698 == sym__0__4130486035242774698)))))))))))))))))))))))))))))))))))))))))))))))))))))))));
  }
  bool operator !=(const Record39& otherRec) const{
    return (otherRec.sym__0__2592840547366705296 != sym__0__2592840547366705296 || (otherRec.sym__0__2788895063297001099 != sym__0__2788895063297001099 || (otherRec.sym__0__1545257135384253129 != sym__0__1545257135384253129 || (otherRec.sym__0___45_4622664073058890953 != sym__0___45_4622664073058890953 || (otherRec.sym__0__7774459284859713893 != sym__0__7774459284859713893 || (otherRec.sym__0__5464006631725545620 != sym__0__5464006631725545620 || (otherRec.sym__0___45_3247512146210145269 != sym__0___45_3247512146210145269 || (otherRec.sym__0__9165007797673129751 != sym__0__9165007797673129751 || (otherRec.sym__0__6736597523581036605 != sym__0__6736597523581036605 || (otherRec.sym__0___45_3324970871059066299 != sym__0___45_3324970871059066299 || (otherRec.sym__0__8802187528961009747 != sym__0__8802187528961009747 || (otherRec.sym__0___45_8153453103254980376 != sym__0___45_8153453103254980376 || (otherRec.sym__0___45_878170619108389423 != sym__0___45_878170619108389423 || (otherRec.sym__0___45_874194379502172824 != sym__0___45_874194379502172824 || (otherRec.sym__0__8610439003510773098 != sym__0__8610439003510773098 || (otherRec.sym__0__984338793883944389 != sym__0__984338793883944389 || (otherRec.sym__0___45_241371384806950923 != sym__0___45_241371384806950923 || (otherRec.sym__0__4499056235050439447 != sym__0__4499056235050439447 || (otherRec.sym__0___45_602104477057249231 != sym__0___45_602104477057249231 || (otherRec.sym__0__2154432795296205471 != sym__0__2154432795296205471 || (otherRec.sym__0__8120436674510863259 != sym__0__8120436674510863259 || (otherRec.sym__0__8733838863403650604 != sym__0__8733838863403650604 || (otherRec.sym__0__6144840941019744502 != sym__0__6144840941019744502 || (otherRec.sym__0___45_4519435874778032514 != sym__0___45_4519435874778032514 || (otherRec.sym__0__7183756631487345723 != sym__0__7183756631487345723 || (otherRec.sym__0__4004283392749253291 != sym__0__4004283392749253291 || (otherRec.sym__0__7402856733199756645 != sym__0__7402856733199756645 || (otherRec.sym__0___45_7276118071870614642 != sym__0___45_7276118071870614642 || (otherRec.sym__0__7689696364618968408 != sym__0__7689696364618968408 || (otherRec.sym__0__265232048543772062 != sym__0__265232048543772062 || (otherRec.sym__0___45_7391712330109786621 != sym__0___45_7391712330109786621 || (otherRec.sym__0__9093515676270508468 != sym__0__9093515676270508468 || (otherRec.sym__0__2039577949113231011 != sym__0__2039577949113231011 || (otherRec.sym__0___45_5518709817667950629 != sym__0___45_5518709817667950629 || (otherRec.sym__0__7446880365925781245 != sym__0__7446880365925781245 || (otherRec.sym__0__3933602404904280238 != sym__0__3933602404904280238 || (otherRec.sym__0__839558304030626831 != sym__0__839558304030626831 || (otherRec.sym__0__1895092311538388823 != sym__0__1895092311538388823 || (otherRec.sym__0__2442462535421269690 != sym__0__2442462535421269690 || (otherRec.sym__0___45_3615474655229170638 != sym__0___45_3615474655229170638 || (otherRec.sym__0__8806662867934001568 != sym__0__8806662867934001568 || (otherRec.sym__0___45_4159199765988317501 != sym__0___45_4159199765988317501 || (otherRec.sym__0___45_5417534366741502741 != sym__0___45_5417534366741502741 || (otherRec.sym__0__4597400568918183105 != sym__0__4597400568918183105 || (otherRec.sym__0__8819540415296482823 != sym__0__8819540415296482823 || (otherRec.sym__0___45_623355213379307427 != sym__0___45_623355213379307427 || (otherRec.sym__0__7994108978447880988 != sym__0__7994108978447880988 || (otherRec.sym__0__7664015906371024747 != sym__0__7664015906371024747 || (otherRec.sym__0___45_6006206227144636657 != sym__0___45_6006206227144636657 || (otherRec.sym__0__3122376255932122421 != sym__0__3122376255932122421 || (otherRec.sym__0__5682795704482796293 != sym__0__5682795704482796293 || (otherRec.sym__0__4547320860663492666 != sym__0__4547320860663492666 || (otherRec.sym__0___45_8670773565387601472 != sym__0___45_8670773565387601472 || (otherRec.sym__0___45_13570145613494646 != sym__0___45_13570145613494646 || (otherRec.sym__0__219157410367458310 != sym__0__219157410367458310 || (otherRec.sym__0__698480510036799380 != sym__0__698480510036799380 || (otherRec.sym__0__5321414200743551775 != sym__0__5321414200743551775 || otherRec.sym__0__4130486035242774698 != sym__0__4130486035242774698)))))))))))))))))))))))))))))))))))))))))))))))))))))))));
  }
  unsigned sym__0__2592840547366705296;
  fluidb_string<25> sym__0__2788895063297001099;
  fluidb_string<40> sym__0__1545257135384253129;
  fluidb_string<16> sym__0___45_4622664073058890953;
  fluidb_string<16> sym__0__7774459284859713893;
  fluidb_string<13> sym__0__5464006631725545620;
  fluidb_string<15> sym__0___45_3247512146210145269;
  unsigned sym__0__9165007797673129751;
  int sym__0__6736597523581036605;
  unsigned sym__0___45_3324970871059066299;
  unsigned sym__0__8802187528961009747;
  unsigned sym__0___45_8153453103254980376;
  unsigned sym__0___45_878170619108389423;
  fluidb_string<21> sym__0___45_874194379502172824;
  unsigned sym__0__8610439003510773098;
  fluidb_string<10> sym__0__984338793883944389;
  unsigned sym__0___45_241371384806950923;
  double sym__0__4499056235050439447;
  unsigned sym__0___45_602104477057249231;
  double sym__0__2154432795296205471;
  unsigned sym__0__8120436674510863259;
  unsigned sym__0__8733838863403650604;
  double sym__0__6144840941019744502;
  fluidb_string<13> sym__0___45_4519435874778032514;
  unsigned sym__0__7183756631487345723;
  fluidb_string<18> sym__0__4004283392749253291;
  fluidb_string<9> sym__0__7402856733199756645;
  fluidb_string<9> sym__0___45_7276118071870614642;
  unsigned sym__0__7689696364618968408;
  unsigned sym__0__265232048543772062;
  fluidb_string<7> sym__0___45_7391712330109786621;
  unsigned sym__0__9093515676270508468;
  unsigned sym__0__2039577949113231011;
  unsigned sym__0___45_5518709817667950629;
  unsigned sym__0__7446880365925781245;
  unsigned sym__0__3933602404904280238;
  fluidb_string<15> sym__0__839558304030626831;
  fluidb_string<2> sym__0__1895092311538388823;
  fluidb_string<2> sym__0__2442462535421269690;
  fluidb_string<2> sym__0___45_3615474655229170638;
  fluidb_string<2> sym__0__8806662867934001568;
  unsigned sym__0___45_4159199765988317501;
  fluidb_string<18> sym__0___45_5417534366741502741;
  fluidb_string<40> sym__0__4597400568918183105;
  fluidb_string<11> sym__0__8819540415296482823;
  fluidb_string<15> sym__0___45_623355213379307427;
  fluidb_string<13> sym__0__7994108978447880988;
  fluidb_string<15> sym__0__7664015906371024747;
  fluidb_string<21> sym__0___45_6006206227144636657;
  unsigned sym__0__3122376255932122421;
  fluidb_string<55> sym__0__5682795704482796293;
  fluidb_string<25> sym__0__4547320860663492666;
  fluidb_string<7> sym__0___45_8670773565387601472;
  fluidb_string<10> sym__0___45_13570145613494646;
  fluidb_string<11> sym__0__219157410367458310;
  fluidb_string<25> sym__0__698480510036799380;
  unsigned sym__0__5321414200743551775;
  fluidb_string<10> sym__0__4130486035242774698;
 private:
};


class Record50 {
 public:
  Record50(unsigned __sym__0___45_8432259835637048949, fluidb_string<25> __sym__0__4548729478722910608, fluidb_string<40> __sym__0___45_121547008029878490, fluidb_string<16> __sym__0__3269568155542253564, fluidb_string<16> __sym__0__3982220672063046018, fluidb_string<13> __sym__0__4693536182358499263, fluidb_string<15> __sym__0__2984872593914002448, unsigned __sym__0___45_3083177374599918180, int __sym__0___45_4767370105190669238, unsigned __sym__0__7622263690412824738, unsigned __sym__0__51540186613445224, unsigned __sym__0__5816250341010414547, unsigned __sym__0___45_4395275123805465570, fluidb_string<21> __sym__0___45_7314445511356925101, unsigned __sym__0__1160535804228364061, fluidb_string<10> __sym__0___45_658439635996140254, unsigned __sym__0__5408690261773440146, double __sym__0__4735189913708153244, unsigned __sym__0___45_8984691491589025986, double __sym__0__4667820012727147444, unsigned __sym__0__2342925512217931808, unsigned __sym__0__1214124832604663335, double __sym__0__3255112656206796761, fluidb_string<13> __sym__0__4481647413238555121, unsigned __sym__0__1547076744925930880, fluidb_string<18> __sym__0__3079651708208385520, fluidb_string<9> __sym__0__722488589300315522, fluidb_string<9> __sym__0__5728736137952035521, unsigned __sym__0__1016643266231007683, unsigned __sym__0__7488963553490858577, fluidb_string<7> __sym__0___45_5912777685800611816, unsigned __sym__0__5163174048669277343, unsigned __sym__0__1804747360158272504, unsigned __sym__0___45_8585488438570493216, unsigned __sym__0___45_5255213217507996278, unsigned __sym__0__922056654626502433, fluidb_string<15> __sym__0__8167091386086901924, fluidb_string<2> __sym__0___45_6557548601784909220, fluidb_string<2> __sym__0__3982600392097801133, fluidb_string<2> __sym__0___45_2639369843693128107, fluidb_string<2> __sym__0___45_2892948589959819237, unsigned __sym__0__6297984954898127448, fluidb_string<18> __sym__0___45_2539705795808102992, fluidb_string<40> __sym__0__4925130884886294926, fluidb_string<11> __sym__0___45_6056498752508205364, fluidb_string<15> __sym__0___45_5529708794626966486, fluidb_string<13> __sym__0___45_4737680138599499881, fluidb_string<15> __sym__0__6984993766776696624, fluidb_string<21> __sym__0___45_8393949379764847708, unsigned __sym__0__4462919605968504146, fluidb_string<55> __sym__0__6874577426955441634, fluidb_string<25> __sym__0___45_1088065985843605459, fluidb_string<7> __sym__0__228349805477520123, fluidb_string<10> __sym__0___45_3813708782342371331, fluidb_string<11> __sym__0__2924304181004936681, fluidb_string<25> __sym__0___45_812065277175253313, unsigned __sym__0___45_879260575341141708, fluidb_string<10> __sym__0___45_5047397743832953891) : sym__0___45_8432259835637048949(__sym__0___45_8432259835637048949), sym__0__4548729478722910608(__sym__0__4548729478722910608), sym__0___45_121547008029878490(__sym__0___45_121547008029878490), sym__0__3269568155542253564(__sym__0__3269568155542253564), sym__0__3982220672063046018(__sym__0__3982220672063046018), sym__0__4693536182358499263(__sym__0__4693536182358499263), sym__0__2984872593914002448(__sym__0__2984872593914002448), sym__0___45_3083177374599918180(__sym__0___45_3083177374599918180), sym__0___45_4767370105190669238(__sym__0___45_4767370105190669238), sym__0__7622263690412824738(__sym__0__7622263690412824738), sym__0__51540186613445224(__sym__0__51540186613445224), sym__0__5816250341010414547(__sym__0__5816250341010414547), sym__0___45_4395275123805465570(__sym__0___45_4395275123805465570), sym__0___45_7314445511356925101(__sym__0___45_7314445511356925101), sym__0__1160535804228364061(__sym__0__1160535804228364061), sym__0___45_658439635996140254(__sym__0___45_658439635996140254), sym__0__5408690261773440146(__sym__0__5408690261773440146), sym__0__4735189913708153244(__sym__0__4735189913708153244), sym__0___45_8984691491589025986(__sym__0___45_8984691491589025986), sym__0__4667820012727147444(__sym__0__4667820012727147444), sym__0__2342925512217931808(__sym__0__2342925512217931808), sym__0__1214124832604663335(__sym__0__1214124832604663335), sym__0__3255112656206796761(__sym__0__3255112656206796761), sym__0__4481647413238555121(__sym__0__4481647413238555121), sym__0__1547076744925930880(__sym__0__1547076744925930880), sym__0__3079651708208385520(__sym__0__3079651708208385520), sym__0__722488589300315522(__sym__0__722488589300315522), sym__0__5728736137952035521(__sym__0__5728736137952035521), sym__0__1016643266231007683(__sym__0__1016643266231007683), sym__0__7488963553490858577(__sym__0__7488963553490858577), sym__0___45_5912777685800611816(__sym__0___45_5912777685800611816), sym__0__5163174048669277343(__sym__0__5163174048669277343), sym__0__1804747360158272504(__sym__0__1804747360158272504), sym__0___45_8585488438570493216(__sym__0___45_8585488438570493216), sym__0___45_5255213217507996278(__sym__0___45_5255213217507996278), sym__0__922056654626502433(__sym__0__922056654626502433), sym__0__8167091386086901924(__sym__0__8167091386086901924), sym__0___45_6557548601784909220(__sym__0___45_6557548601784909220), sym__0__3982600392097801133(__sym__0__3982600392097801133), sym__0___45_2639369843693128107(__sym__0___45_2639369843693128107), sym__0___45_2892948589959819237(__sym__0___45_2892948589959819237), sym__0__6297984954898127448(__sym__0__6297984954898127448), sym__0___45_2539705795808102992(__sym__0___45_2539705795808102992), sym__0__4925130884886294926(__sym__0__4925130884886294926), sym__0___45_6056498752508205364(__sym__0___45_6056498752508205364), sym__0___45_5529708794626966486(__sym__0___45_5529708794626966486), sym__0___45_4737680138599499881(__sym__0___45_4737680138599499881), sym__0__6984993766776696624(__sym__0__6984993766776696624), sym__0___45_8393949379764847708(__sym__0___45_8393949379764847708), sym__0__4462919605968504146(__sym__0__4462919605968504146), sym__0__6874577426955441634(__sym__0__6874577426955441634), sym__0___45_1088065985843605459(__sym__0___45_1088065985843605459), sym__0__228349805477520123(__sym__0__228349805477520123), sym__0___45_3813708782342371331(__sym__0___45_3813708782342371331), sym__0__2924304181004936681(__sym__0__2924304181004936681), sym__0___45_812065277175253313(__sym__0___45_812065277175253313), sym__0___45_879260575341141708(__sym__0___45_879260575341141708), sym__0___45_5047397743832953891(__sym__0___45_5047397743832953891)
  {
  }
  Record50() 
  {
  }
  std::string show() const{
    std::stringstream o;
    o << sym__0___45_8432259835637048949 << " | " << arrToString(sym__0__4548729478722910608) << " | " << arrToString(sym__0___45_121547008029878490) << " | " << arrToString(sym__0__3269568155542253564) << " | " << arrToString(sym__0__3982220672063046018) << " | " << arrToString(sym__0__4693536182358499263) << " | " << arrToString(sym__0__2984872593914002448) << " | " << sym__0___45_3083177374599918180 << " | " << sym__0___45_4767370105190669238 << " | " << sym__0__7622263690412824738 << " | " << sym__0__51540186613445224 << " | " << sym__0__5816250341010414547 << " | " << sym__0___45_4395275123805465570 << " | " << arrToString(sym__0___45_7314445511356925101) << " | " << sym__0__1160535804228364061 << " | " << arrToString(sym__0___45_658439635996140254) << " | " << sym__0__5408690261773440146 << " | " << sym__0__4735189913708153244 << " | " << sym__0___45_8984691491589025986 << " | " << sym__0__4667820012727147444 << " | " << sym__0__2342925512217931808 << " | " << sym__0__1214124832604663335 << " | " << sym__0__3255112656206796761 << " | " << arrToString(sym__0__4481647413238555121) << " | " << sym__0__1547076744925930880 << " | " << arrToString(sym__0__3079651708208385520) << " | " << arrToString(sym__0__722488589300315522) << " | " << arrToString(sym__0__5728736137952035521) << " | " << sym__0__1016643266231007683 << " | " << sym__0__7488963553490858577 << " | " << arrToString(sym__0___45_5912777685800611816) << " | " << sym__0__5163174048669277343 << " | " << sym__0__1804747360158272504 << " | " << sym__0___45_8585488438570493216 << " | " << sym__0___45_5255213217507996278 << " | " << sym__0__922056654626502433 << " | " << arrToString(sym__0__8167091386086901924) << " | " << arrToString(sym__0___45_6557548601784909220) << " | " << arrToString(sym__0__3982600392097801133) << " | " << arrToString(sym__0___45_2639369843693128107) << " | " << arrToString(sym__0___45_2892948589959819237) << " | " << sym__0__6297984954898127448 << " | " << arrToString(sym__0___45_2539705795808102992) << " | " << arrToString(sym__0__4925130884886294926) << " | " << arrToString(sym__0___45_6056498752508205364) << " | " << arrToString(sym__0___45_5529708794626966486) << " | " << arrToString(sym__0___45_4737680138599499881) << " | " << arrToString(sym__0__6984993766776696624) << " | " << arrToString(sym__0___45_8393949379764847708) << " | " << sym__0__4462919605968504146 << " | " << arrToString(sym__0__6874577426955441634) << " | " << arrToString(sym__0___45_1088065985843605459) << " | " << arrToString(sym__0__228349805477520123) << " | " << arrToString(sym__0___45_3813708782342371331) << " | " << arrToString(sym__0__2924304181004936681) << " | " << arrToString(sym__0___45_812065277175253313) << " | " << sym__0___45_879260575341141708 << " | " << arrToString(sym__0___45_5047397743832953891);
    return o.str();
  }
  bool operator <(const Record50& otherRec) const{
    return (otherRec.sym__0___45_8432259835637048949 < sym__0___45_8432259835637048949 && (otherRec.sym__0__4548729478722910608 < sym__0__4548729478722910608 && (otherRec.sym__0___45_121547008029878490 < sym__0___45_121547008029878490 && (otherRec.sym__0__3269568155542253564 < sym__0__3269568155542253564 && (otherRec.sym__0__3982220672063046018 < sym__0__3982220672063046018 && (otherRec.sym__0__4693536182358499263 < sym__0__4693536182358499263 && (otherRec.sym__0__2984872593914002448 < sym__0__2984872593914002448 && (otherRec.sym__0___45_3083177374599918180 < sym__0___45_3083177374599918180 && (otherRec.sym__0___45_4767370105190669238 < sym__0___45_4767370105190669238 && (otherRec.sym__0__7622263690412824738 < sym__0__7622263690412824738 && (otherRec.sym__0__51540186613445224 < sym__0__51540186613445224 && (otherRec.sym__0__5816250341010414547 < sym__0__5816250341010414547 && (otherRec.sym__0___45_4395275123805465570 < sym__0___45_4395275123805465570 && (otherRec.sym__0___45_7314445511356925101 < sym__0___45_7314445511356925101 && (otherRec.sym__0__1160535804228364061 < sym__0__1160535804228364061 && (otherRec.sym__0___45_658439635996140254 < sym__0___45_658439635996140254 && (otherRec.sym__0__5408690261773440146 < sym__0__5408690261773440146 && (otherRec.sym__0__4735189913708153244 < sym__0__4735189913708153244 && (otherRec.sym__0___45_8984691491589025986 < sym__0___45_8984691491589025986 && (otherRec.sym__0__4667820012727147444 < sym__0__4667820012727147444 && (otherRec.sym__0__2342925512217931808 < sym__0__2342925512217931808 && (otherRec.sym__0__1214124832604663335 < sym__0__1214124832604663335 && (otherRec.sym__0__3255112656206796761 < sym__0__3255112656206796761 && (otherRec.sym__0__4481647413238555121 < sym__0__4481647413238555121 && (otherRec.sym__0__1547076744925930880 < sym__0__1547076744925930880 && (otherRec.sym__0__3079651708208385520 < sym__0__3079651708208385520 && (otherRec.sym__0__722488589300315522 < sym__0__722488589300315522 && (otherRec.sym__0__5728736137952035521 < sym__0__5728736137952035521 && (otherRec.sym__0__1016643266231007683 < sym__0__1016643266231007683 && (otherRec.sym__0__7488963553490858577 < sym__0__7488963553490858577 && (otherRec.sym__0___45_5912777685800611816 < sym__0___45_5912777685800611816 && (otherRec.sym__0__5163174048669277343 < sym__0__5163174048669277343 && (otherRec.sym__0__1804747360158272504 < sym__0__1804747360158272504 && (otherRec.sym__0___45_8585488438570493216 < sym__0___45_8585488438570493216 && (otherRec.sym__0___45_5255213217507996278 < sym__0___45_5255213217507996278 && (otherRec.sym__0__922056654626502433 < sym__0__922056654626502433 && (otherRec.sym__0__8167091386086901924 < sym__0__8167091386086901924 && (otherRec.sym__0___45_6557548601784909220 < sym__0___45_6557548601784909220 && (otherRec.sym__0__3982600392097801133 < sym__0__3982600392097801133 && (otherRec.sym__0___45_2639369843693128107 < sym__0___45_2639369843693128107 && (otherRec.sym__0___45_2892948589959819237 < sym__0___45_2892948589959819237 && (otherRec.sym__0__6297984954898127448 < sym__0__6297984954898127448 && (otherRec.sym__0___45_2539705795808102992 < sym__0___45_2539705795808102992 && (otherRec.sym__0__4925130884886294926 < sym__0__4925130884886294926 && (otherRec.sym__0___45_6056498752508205364 < sym__0___45_6056498752508205364 && (otherRec.sym__0___45_5529708794626966486 < sym__0___45_5529708794626966486 && (otherRec.sym__0___45_4737680138599499881 < sym__0___45_4737680138599499881 && (otherRec.sym__0__6984993766776696624 < sym__0__6984993766776696624 && (otherRec.sym__0___45_8393949379764847708 < sym__0___45_8393949379764847708 && (otherRec.sym__0__4462919605968504146 < sym__0__4462919605968504146 && (otherRec.sym__0__6874577426955441634 < sym__0__6874577426955441634 && (otherRec.sym__0___45_1088065985843605459 < sym__0___45_1088065985843605459 && (otherRec.sym__0__228349805477520123 < sym__0__228349805477520123 && (otherRec.sym__0___45_3813708782342371331 < sym__0___45_3813708782342371331 && (otherRec.sym__0__2924304181004936681 < sym__0__2924304181004936681 && (otherRec.sym__0___45_812065277175253313 < sym__0___45_812065277175253313 && (otherRec.sym__0___45_879260575341141708 < sym__0___45_879260575341141708 && otherRec.sym__0___45_5047397743832953891 < sym__0___45_5047397743832953891)))))))))))))))))))))))))))))))))))))))))))))))))))))))));
  }
  bool operator ==(const Record50& otherRec) const{
    return (otherRec.sym__0___45_8432259835637048949 == sym__0___45_8432259835637048949 && (otherRec.sym__0__4548729478722910608 == sym__0__4548729478722910608 && (otherRec.sym__0___45_121547008029878490 == sym__0___45_121547008029878490 && (otherRec.sym__0__3269568155542253564 == sym__0__3269568155542253564 && (otherRec.sym__0__3982220672063046018 == sym__0__3982220672063046018 && (otherRec.sym__0__4693536182358499263 == sym__0__4693536182358499263 && (otherRec.sym__0__2984872593914002448 == sym__0__2984872593914002448 && (otherRec.sym__0___45_3083177374599918180 == sym__0___45_3083177374599918180 && (otherRec.sym__0___45_4767370105190669238 == sym__0___45_4767370105190669238 && (otherRec.sym__0__7622263690412824738 == sym__0__7622263690412824738 && (otherRec.sym__0__51540186613445224 == sym__0__51540186613445224 && (otherRec.sym__0__5816250341010414547 == sym__0__5816250341010414547 && (otherRec.sym__0___45_4395275123805465570 == sym__0___45_4395275123805465570 && (otherRec.sym__0___45_7314445511356925101 == sym__0___45_7314445511356925101 && (otherRec.sym__0__1160535804228364061 == sym__0__1160535804228364061 && (otherRec.sym__0___45_658439635996140254 == sym__0___45_658439635996140254 && (otherRec.sym__0__5408690261773440146 == sym__0__5408690261773440146 && (otherRec.sym__0__4735189913708153244 == sym__0__4735189913708153244 && (otherRec.sym__0___45_8984691491589025986 == sym__0___45_8984691491589025986 && (otherRec.sym__0__4667820012727147444 == sym__0__4667820012727147444 && (otherRec.sym__0__2342925512217931808 == sym__0__2342925512217931808 && (otherRec.sym__0__1214124832604663335 == sym__0__1214124832604663335 && (otherRec.sym__0__3255112656206796761 == sym__0__3255112656206796761 && (otherRec.sym__0__4481647413238555121 == sym__0__4481647413238555121 && (otherRec.sym__0__1547076744925930880 == sym__0__1547076744925930880 && (otherRec.sym__0__3079651708208385520 == sym__0__3079651708208385520 && (otherRec.sym__0__722488589300315522 == sym__0__722488589300315522 && (otherRec.sym__0__5728736137952035521 == sym__0__5728736137952035521 && (otherRec.sym__0__1016643266231007683 == sym__0__1016643266231007683 && (otherRec.sym__0__7488963553490858577 == sym__0__7488963553490858577 && (otherRec.sym__0___45_5912777685800611816 == sym__0___45_5912777685800611816 && (otherRec.sym__0__5163174048669277343 == sym__0__5163174048669277343 && (otherRec.sym__0__1804747360158272504 == sym__0__1804747360158272504 && (otherRec.sym__0___45_8585488438570493216 == sym__0___45_8585488438570493216 && (otherRec.sym__0___45_5255213217507996278 == sym__0___45_5255213217507996278 && (otherRec.sym__0__922056654626502433 == sym__0__922056654626502433 && (otherRec.sym__0__8167091386086901924 == sym__0__8167091386086901924 && (otherRec.sym__0___45_6557548601784909220 == sym__0___45_6557548601784909220 && (otherRec.sym__0__3982600392097801133 == sym__0__3982600392097801133 && (otherRec.sym__0___45_2639369843693128107 == sym__0___45_2639369843693128107 && (otherRec.sym__0___45_2892948589959819237 == sym__0___45_2892948589959819237 && (otherRec.sym__0__6297984954898127448 == sym__0__6297984954898127448 && (otherRec.sym__0___45_2539705795808102992 == sym__0___45_2539705795808102992 && (otherRec.sym__0__4925130884886294926 == sym__0__4925130884886294926 && (otherRec.sym__0___45_6056498752508205364 == sym__0___45_6056498752508205364 && (otherRec.sym__0___45_5529708794626966486 == sym__0___45_5529708794626966486 && (otherRec.sym__0___45_4737680138599499881 == sym__0___45_4737680138599499881 && (otherRec.sym__0__6984993766776696624 == sym__0__6984993766776696624 && (otherRec.sym__0___45_8393949379764847708 == sym__0___45_8393949379764847708 && (otherRec.sym__0__4462919605968504146 == sym__0__4462919605968504146 && (otherRec.sym__0__6874577426955441634 == sym__0__6874577426955441634 && (otherRec.sym__0___45_1088065985843605459 == sym__0___45_1088065985843605459 && (otherRec.sym__0__228349805477520123 == sym__0__228349805477520123 && (otherRec.sym__0___45_3813708782342371331 == sym__0___45_3813708782342371331 && (otherRec.sym__0__2924304181004936681 == sym__0__2924304181004936681 && (otherRec.sym__0___45_812065277175253313 == sym__0___45_812065277175253313 && (otherRec.sym__0___45_879260575341141708 == sym__0___45_879260575341141708 && otherRec.sym__0___45_5047397743832953891 == sym__0___45_5047397743832953891)))))))))))))))))))))))))))))))))))))))))))))))))))))))));
  }
  bool operator !=(const Record50& otherRec) const{
    return (otherRec.sym__0___45_8432259835637048949 != sym__0___45_8432259835637048949 || (otherRec.sym__0__4548729478722910608 != sym__0__4548729478722910608 || (otherRec.sym__0___45_121547008029878490 != sym__0___45_121547008029878490 || (otherRec.sym__0__3269568155542253564 != sym__0__3269568155542253564 || (otherRec.sym__0__3982220672063046018 != sym__0__3982220672063046018 || (otherRec.sym__0__4693536182358499263 != sym__0__4693536182358499263 || (otherRec.sym__0__2984872593914002448 != sym__0__2984872593914002448 || (otherRec.sym__0___45_3083177374599918180 != sym__0___45_3083177374599918180 || (otherRec.sym__0___45_4767370105190669238 != sym__0___45_4767370105190669238 || (otherRec.sym__0__7622263690412824738 != sym__0__7622263690412824738 || (otherRec.sym__0__51540186613445224 != sym__0__51540186613445224 || (otherRec.sym__0__5816250341010414547 != sym__0__5816250341010414547 || (otherRec.sym__0___45_4395275123805465570 != sym__0___45_4395275123805465570 || (otherRec.sym__0___45_7314445511356925101 != sym__0___45_7314445511356925101 || (otherRec.sym__0__1160535804228364061 != sym__0__1160535804228364061 || (otherRec.sym__0___45_658439635996140254 != sym__0___45_658439635996140254 || (otherRec.sym__0__5408690261773440146 != sym__0__5408690261773440146 || (otherRec.sym__0__4735189913708153244 != sym__0__4735189913708153244 || (otherRec.sym__0___45_8984691491589025986 != sym__0___45_8984691491589025986 || (otherRec.sym__0__4667820012727147444 != sym__0__4667820012727147444 || (otherRec.sym__0__2342925512217931808 != sym__0__2342925512217931808 || (otherRec.sym__0__1214124832604663335 != sym__0__1214124832604663335 || (otherRec.sym__0__3255112656206796761 != sym__0__3255112656206796761 || (otherRec.sym__0__4481647413238555121 != sym__0__4481647413238555121 || (otherRec.sym__0__1547076744925930880 != sym__0__1547076744925930880 || (otherRec.sym__0__3079651708208385520 != sym__0__3079651708208385520 || (otherRec.sym__0__722488589300315522 != sym__0__722488589300315522 || (otherRec.sym__0__5728736137952035521 != sym__0__5728736137952035521 || (otherRec.sym__0__1016643266231007683 != sym__0__1016643266231007683 || (otherRec.sym__0__7488963553490858577 != sym__0__7488963553490858577 || (otherRec.sym__0___45_5912777685800611816 != sym__0___45_5912777685800611816 || (otherRec.sym__0__5163174048669277343 != sym__0__5163174048669277343 || (otherRec.sym__0__1804747360158272504 != sym__0__1804747360158272504 || (otherRec.sym__0___45_8585488438570493216 != sym__0___45_8585488438570493216 || (otherRec.sym__0___45_5255213217507996278 != sym__0___45_5255213217507996278 || (otherRec.sym__0__922056654626502433 != sym__0__922056654626502433 || (otherRec.sym__0__8167091386086901924 != sym__0__8167091386086901924 || (otherRec.sym__0___45_6557548601784909220 != sym__0___45_6557548601784909220 || (otherRec.sym__0__3982600392097801133 != sym__0__3982600392097801133 || (otherRec.sym__0___45_2639369843693128107 != sym__0___45_2639369843693128107 || (otherRec.sym__0___45_2892948589959819237 != sym__0___45_2892948589959819237 || (otherRec.sym__0__6297984954898127448 != sym__0__6297984954898127448 || (otherRec.sym__0___45_2539705795808102992 != sym__0___45_2539705795808102992 || (otherRec.sym__0__4925130884886294926 != sym__0__4925130884886294926 || (otherRec.sym__0___45_6056498752508205364 != sym__0___45_6056498752508205364 || (otherRec.sym__0___45_5529708794626966486 != sym__0___45_5529708794626966486 || (otherRec.sym__0___45_4737680138599499881 != sym__0___45_4737680138599499881 || (otherRec.sym__0__6984993766776696624 != sym__0__6984993766776696624 || (otherRec.sym__0___45_8393949379764847708 != sym__0___45_8393949379764847708 || (otherRec.sym__0__4462919605968504146 != sym__0__4462919605968504146 || (otherRec.sym__0__6874577426955441634 != sym__0__6874577426955441634 || (otherRec.sym__0___45_1088065985843605459 != sym__0___45_1088065985843605459 || (otherRec.sym__0__228349805477520123 != sym__0__228349805477520123 || (otherRec.sym__0___45_3813708782342371331 != sym__0___45_3813708782342371331 || (otherRec.sym__0__2924304181004936681 != sym__0__2924304181004936681 || (otherRec.sym__0___45_812065277175253313 != sym__0___45_812065277175253313 || (otherRec.sym__0___45_879260575341141708 != sym__0___45_879260575341141708 || otherRec.sym__0___45_5047397743832953891 != sym__0___45_5047397743832953891)))))))))))))))))))))))))))))))))))))))))))))))))))))))));
  }
  unsigned sym__0___45_8432259835637048949;
  fluidb_string<25> sym__0__4548729478722910608;
  fluidb_string<40> sym__0___45_121547008029878490;
  fluidb_string<16> sym__0__3269568155542253564;
  fluidb_string<16> sym__0__3982220672063046018;
  fluidb_string<13> sym__0__4693536182358499263;
  fluidb_string<15> sym__0__2984872593914002448;
  unsigned sym__0___45_3083177374599918180;
  int sym__0___45_4767370105190669238;
  unsigned sym__0__7622263690412824738;
  unsigned sym__0__51540186613445224;
  unsigned sym__0__5816250341010414547;
  unsigned sym__0___45_4395275123805465570;
  fluidb_string<21> sym__0___45_7314445511356925101;
  unsigned sym__0__1160535804228364061;
  fluidb_string<10> sym__0___45_658439635996140254;
  unsigned sym__0__5408690261773440146;
  double sym__0__4735189913708153244;
  unsigned sym__0___45_8984691491589025986;
  double sym__0__4667820012727147444;
  unsigned sym__0__2342925512217931808;
  unsigned sym__0__1214124832604663335;
  double sym__0__3255112656206796761;
  fluidb_string<13> sym__0__4481647413238555121;
  unsigned sym__0__1547076744925930880;
  fluidb_string<18> sym__0__3079651708208385520;
  fluidb_string<9> sym__0__722488589300315522;
  fluidb_string<9> sym__0__5728736137952035521;
  unsigned sym__0__1016643266231007683;
  unsigned sym__0__7488963553490858577;
  fluidb_string<7> sym__0___45_5912777685800611816;
  unsigned sym__0__5163174048669277343;
  unsigned sym__0__1804747360158272504;
  unsigned sym__0___45_8585488438570493216;
  unsigned sym__0___45_5255213217507996278;
  unsigned sym__0__922056654626502433;
  fluidb_string<15> sym__0__8167091386086901924;
  fluidb_string<2> sym__0___45_6557548601784909220;
  fluidb_string<2> sym__0__3982600392097801133;
  fluidb_string<2> sym__0___45_2639369843693128107;
  fluidb_string<2> sym__0___45_2892948589959819237;
  unsigned sym__0__6297984954898127448;
  fluidb_string<18> sym__0___45_2539705795808102992;
  fluidb_string<40> sym__0__4925130884886294926;
  fluidb_string<11> sym__0___45_6056498752508205364;
  fluidb_string<15> sym__0___45_5529708794626966486;
  fluidb_string<13> sym__0___45_4737680138599499881;
  fluidb_string<15> sym__0__6984993766776696624;
  fluidb_string<21> sym__0___45_8393949379764847708;
  unsigned sym__0__4462919605968504146;
  fluidb_string<55> sym__0__6874577426955441634;
  fluidb_string<25> sym__0___45_1088065985843605459;
  fluidb_string<7> sym__0__228349805477520123;
  fluidb_string<10> sym__0___45_3813708782342371331;
  fluidb_string<11> sym__0__2924304181004936681;
  fluidb_string<25> sym__0___45_812065277175253313;
  unsigned sym__0___45_879260575341141708;
  fluidb_string<10> sym__0___45_5047397743832953891;
 private:
};


class Record2 {
 public:
  Record2(unsigned __sym__0___45_3862182167894734233, fluidb_string<18> __sym__0___45_5049546618211835241, fluidb_string<9> __sym__0___45_2996783662751493035, fluidb_string<9> __sym__0___45_8620453348494972806, unsigned __sym__0__1925891775692302472, unsigned __sym__0___45_4666290150124134966, fluidb_string<7> __sym__0__2396615500282490031, unsigned __sym__0___45_3413279326547145180, unsigned __sym__0__7931789082922299215, unsigned __sym__0__4128851951395191943, unsigned __sym__0__1414614919079575917, unsigned __sym__0___45_4769868403273652582, fluidb_string<15> __sym__0___45_423989522690221765, fluidb_string<2> __sym__0__670880538897647363, fluidb_string<2> __sym__0___45_6595340929265439258, fluidb_string<2> __sym__0___45_4807245048316597474, fluidb_string<2> __sym__0___45_2845474408872645744, unsigned __sym__0___45_3923001362387400637, int __sym__0___45_4068285250723832019, unsigned __sym__0__5927661182141962805, unsigned __sym__0__2192637400238122239, unsigned __sym__0___45_4592297025100810856, unsigned __sym__0__5820861992669913537, fluidb_string<21> __sym__0__2988599564076309784, unsigned __sym__0___45_8469125589459601770, fluidb_string<10> __sym__0___45_2479075576716686155, unsigned __sym__0__5905974904445628197, double __sym__0__8482341455033398339, unsigned __sym__0___45_6780802777767537759, double __sym__0___45_4873871374223645685, unsigned __sym__0___45_776774550833357369, unsigned __sym__0___45_135773926070893412, double __sym__0___45_4302867605132693150, fluidb_string<13> __sym__0__1118838070725597482, unsigned __sym__0___45_1590115651450644480, fluidb_string<25> __sym__0__3192438338873126263, fluidb_string<40> __sym__0___45_2134007651753731143, fluidb_string<16> __sym__0___45_6288836903209208989, fluidb_string<16> __sym__0___45_7991989887002259371, fluidb_string<13> __sym__0___45_355683640189594620, fluidb_string<15> __sym__0__4955587123024849399, unsigned __sym__0__7822702969493777647, fluidb_string<18> __sym__0___45_7097577767643705257, fluidb_string<40> __sym__0___45_4128354664746428815, fluidb_string<11> __sym__0___45_181005402936645453, fluidb_string<15> __sym__0___45_4114345702155733811, fluidb_string<13> __sym__0__2126085240536350732, fluidb_string<15> __sym__0__2978611118299427799, fluidb_string<21> __sym__0___45_924665267353701317) : sym__0___45_3862182167894734233(__sym__0___45_3862182167894734233), sym__0___45_5049546618211835241(__sym__0___45_5049546618211835241), sym__0___45_2996783662751493035(__sym__0___45_2996783662751493035), sym__0___45_8620453348494972806(__sym__0___45_8620453348494972806), sym__0__1925891775692302472(__sym__0__1925891775692302472), sym__0___45_4666290150124134966(__sym__0___45_4666290150124134966), sym__0__2396615500282490031(__sym__0__2396615500282490031), sym__0___45_3413279326547145180(__sym__0___45_3413279326547145180), sym__0__7931789082922299215(__sym__0__7931789082922299215), sym__0__4128851951395191943(__sym__0__4128851951395191943), sym__0__1414614919079575917(__sym__0__1414614919079575917), sym__0___45_4769868403273652582(__sym__0___45_4769868403273652582), sym__0___45_423989522690221765(__sym__0___45_423989522690221765), sym__0__670880538897647363(__sym__0__670880538897647363), sym__0___45_6595340929265439258(__sym__0___45_6595340929265439258), sym__0___45_4807245048316597474(__sym__0___45_4807245048316597474), sym__0___45_2845474408872645744(__sym__0___45_2845474408872645744), sym__0___45_3923001362387400637(__sym__0___45_3923001362387400637), sym__0___45_4068285250723832019(__sym__0___45_4068285250723832019), sym__0__5927661182141962805(__sym__0__5927661182141962805), sym__0__2192637400238122239(__sym__0__2192637400238122239), sym__0___45_4592297025100810856(__sym__0___45_4592297025100810856), sym__0__5820861992669913537(__sym__0__5820861992669913537), sym__0__2988599564076309784(__sym__0__2988599564076309784), sym__0___45_8469125589459601770(__sym__0___45_8469125589459601770), sym__0___45_2479075576716686155(__sym__0___45_2479075576716686155), sym__0__5905974904445628197(__sym__0__5905974904445628197), sym__0__8482341455033398339(__sym__0__8482341455033398339), sym__0___45_6780802777767537759(__sym__0___45_6780802777767537759), sym__0___45_4873871374223645685(__sym__0___45_4873871374223645685), sym__0___45_776774550833357369(__sym__0___45_776774550833357369), sym__0___45_135773926070893412(__sym__0___45_135773926070893412), sym__0___45_4302867605132693150(__sym__0___45_4302867605132693150), sym__0__1118838070725597482(__sym__0__1118838070725597482), sym__0___45_1590115651450644480(__sym__0___45_1590115651450644480), sym__0__3192438338873126263(__sym__0__3192438338873126263), sym__0___45_2134007651753731143(__sym__0___45_2134007651753731143), sym__0___45_6288836903209208989(__sym__0___45_6288836903209208989), sym__0___45_7991989887002259371(__sym__0___45_7991989887002259371), sym__0___45_355683640189594620(__sym__0___45_355683640189594620), sym__0__4955587123024849399(__sym__0__4955587123024849399), sym__0__7822702969493777647(__sym__0__7822702969493777647), sym__0___45_7097577767643705257(__sym__0___45_7097577767643705257), sym__0___45_4128354664746428815(__sym__0___45_4128354664746428815), sym__0___45_181005402936645453(__sym__0___45_181005402936645453), sym__0___45_4114345702155733811(__sym__0___45_4114345702155733811), sym__0__2126085240536350732(__sym__0__2126085240536350732), sym__0__2978611118299427799(__sym__0__2978611118299427799), sym__0___45_924665267353701317(__sym__0___45_924665267353701317)
  {
  }
  Record2() 
  {
  }
  std::string show() const{
    std::stringstream o;
    o << sym__0___45_3862182167894734233 << " | " << arrToString(sym__0___45_5049546618211835241) << " | " << arrToString(sym__0___45_2996783662751493035) << " | " << arrToString(sym__0___45_8620453348494972806) << " | " << sym__0__1925891775692302472 << " | " << sym__0___45_4666290150124134966 << " | " << arrToString(sym__0__2396615500282490031) << " | " << sym__0___45_3413279326547145180 << " | " << sym__0__7931789082922299215 << " | " << sym__0__4128851951395191943 << " | " << sym__0__1414614919079575917 << " | " << sym__0___45_4769868403273652582 << " | " << arrToString(sym__0___45_423989522690221765) << " | " << arrToString(sym__0__670880538897647363) << " | " << arrToString(sym__0___45_6595340929265439258) << " | " << arrToString(sym__0___45_4807245048316597474) << " | " << arrToString(sym__0___45_2845474408872645744) << " | " << sym__0___45_3923001362387400637 << " | " << sym__0___45_4068285250723832019 << " | " << sym__0__5927661182141962805 << " | " << sym__0__2192637400238122239 << " | " << sym__0___45_4592297025100810856 << " | " << sym__0__5820861992669913537 << " | " << arrToString(sym__0__2988599564076309784) << " | " << sym__0___45_8469125589459601770 << " | " << arrToString(sym__0___45_2479075576716686155) << " | " << sym__0__5905974904445628197 << " | " << sym__0__8482341455033398339 << " | " << sym__0___45_6780802777767537759 << " | " << sym__0___45_4873871374223645685 << " | " << sym__0___45_776774550833357369 << " | " << sym__0___45_135773926070893412 << " | " << sym__0___45_4302867605132693150 << " | " << arrToString(sym__0__1118838070725597482) << " | " << sym__0___45_1590115651450644480 << " | " << arrToString(sym__0__3192438338873126263) << " | " << arrToString(sym__0___45_2134007651753731143) << " | " << arrToString(sym__0___45_6288836903209208989) << " | " << arrToString(sym__0___45_7991989887002259371) << " | " << arrToString(sym__0___45_355683640189594620) << " | " << arrToString(sym__0__4955587123024849399) << " | " << sym__0__7822702969493777647 << " | " << arrToString(sym__0___45_7097577767643705257) << " | " << arrToString(sym__0___45_4128354664746428815) << " | " << arrToString(sym__0___45_181005402936645453) << " | " << arrToString(sym__0___45_4114345702155733811) << " | " << arrToString(sym__0__2126085240536350732) << " | " << arrToString(sym__0__2978611118299427799) << " | " << arrToString(sym__0___45_924665267353701317);
    return o.str();
  }
  bool operator <(const Record2& otherRec) const{
    return (otherRec.sym__0___45_3862182167894734233 < sym__0___45_3862182167894734233 && (otherRec.sym__0___45_5049546618211835241 < sym__0___45_5049546618211835241 && (otherRec.sym__0___45_2996783662751493035 < sym__0___45_2996783662751493035 && (otherRec.sym__0___45_8620453348494972806 < sym__0___45_8620453348494972806 && (otherRec.sym__0__1925891775692302472 < sym__0__1925891775692302472 && (otherRec.sym__0___45_4666290150124134966 < sym__0___45_4666290150124134966 && (otherRec.sym__0__2396615500282490031 < sym__0__2396615500282490031 && (otherRec.sym__0___45_3413279326547145180 < sym__0___45_3413279326547145180 && (otherRec.sym__0__7931789082922299215 < sym__0__7931789082922299215 && (otherRec.sym__0__4128851951395191943 < sym__0__4128851951395191943 && (otherRec.sym__0__1414614919079575917 < sym__0__1414614919079575917 && (otherRec.sym__0___45_4769868403273652582 < sym__0___45_4769868403273652582 && (otherRec.sym__0___45_423989522690221765 < sym__0___45_423989522690221765 && (otherRec.sym__0__670880538897647363 < sym__0__670880538897647363 && (otherRec.sym__0___45_6595340929265439258 < sym__0___45_6595340929265439258 && (otherRec.sym__0___45_4807245048316597474 < sym__0___45_4807245048316597474 && (otherRec.sym__0___45_2845474408872645744 < sym__0___45_2845474408872645744 && (otherRec.sym__0___45_3923001362387400637 < sym__0___45_3923001362387400637 && (otherRec.sym__0___45_4068285250723832019 < sym__0___45_4068285250723832019 && (otherRec.sym__0__5927661182141962805 < sym__0__5927661182141962805 && (otherRec.sym__0__2192637400238122239 < sym__0__2192637400238122239 && (otherRec.sym__0___45_4592297025100810856 < sym__0___45_4592297025100810856 && (otherRec.sym__0__5820861992669913537 < sym__0__5820861992669913537 && (otherRec.sym__0__2988599564076309784 < sym__0__2988599564076309784 && (otherRec.sym__0___45_8469125589459601770 < sym__0___45_8469125589459601770 && (otherRec.sym__0___45_2479075576716686155 < sym__0___45_2479075576716686155 && (otherRec.sym__0__5905974904445628197 < sym__0__5905974904445628197 && (otherRec.sym__0__8482341455033398339 < sym__0__8482341455033398339 && (otherRec.sym__0___45_6780802777767537759 < sym__0___45_6780802777767537759 && (otherRec.sym__0___45_4873871374223645685 < sym__0___45_4873871374223645685 && (otherRec.sym__0___45_776774550833357369 < sym__0___45_776774550833357369 && (otherRec.sym__0___45_135773926070893412 < sym__0___45_135773926070893412 && (otherRec.sym__0___45_4302867605132693150 < sym__0___45_4302867605132693150 && (otherRec.sym__0__1118838070725597482 < sym__0__1118838070725597482 && (otherRec.sym__0___45_1590115651450644480 < sym__0___45_1590115651450644480 && (otherRec.sym__0__3192438338873126263 < sym__0__3192438338873126263 && (otherRec.sym__0___45_2134007651753731143 < sym__0___45_2134007651753731143 && (otherRec.sym__0___45_6288836903209208989 < sym__0___45_6288836903209208989 && (otherRec.sym__0___45_7991989887002259371 < sym__0___45_7991989887002259371 && (otherRec.sym__0___45_355683640189594620 < sym__0___45_355683640189594620 && (otherRec.sym__0__4955587123024849399 < sym__0__4955587123024849399 && (otherRec.sym__0__7822702969493777647 < sym__0__7822702969493777647 && (otherRec.sym__0___45_7097577767643705257 < sym__0___45_7097577767643705257 && (otherRec.sym__0___45_4128354664746428815 < sym__0___45_4128354664746428815 && (otherRec.sym__0___45_181005402936645453 < sym__0___45_181005402936645453 && (otherRec.sym__0___45_4114345702155733811 < sym__0___45_4114345702155733811 && (otherRec.sym__0__2126085240536350732 < sym__0__2126085240536350732 && (otherRec.sym__0__2978611118299427799 < sym__0__2978611118299427799 && otherRec.sym__0___45_924665267353701317 < sym__0___45_924665267353701317))))))))))))))))))))))))))))))))))))))))))))))));
  }
  bool operator ==(const Record2& otherRec) const{
    return (otherRec.sym__0___45_3862182167894734233 == sym__0___45_3862182167894734233 && (otherRec.sym__0___45_5049546618211835241 == sym__0___45_5049546618211835241 && (otherRec.sym__0___45_2996783662751493035 == sym__0___45_2996783662751493035 && (otherRec.sym__0___45_8620453348494972806 == sym__0___45_8620453348494972806 && (otherRec.sym__0__1925891775692302472 == sym__0__1925891775692302472 && (otherRec.sym__0___45_4666290150124134966 == sym__0___45_4666290150124134966 && (otherRec.sym__0__2396615500282490031 == sym__0__2396615500282490031 && (otherRec.sym__0___45_3413279326547145180 == sym__0___45_3413279326547145180 && (otherRec.sym__0__7931789082922299215 == sym__0__7931789082922299215 && (otherRec.sym__0__4128851951395191943 == sym__0__4128851951395191943 && (otherRec.sym__0__1414614919079575917 == sym__0__1414614919079575917 && (otherRec.sym__0___45_4769868403273652582 == sym__0___45_4769868403273652582 && (otherRec.sym__0___45_423989522690221765 == sym__0___45_423989522690221765 && (otherRec.sym__0__670880538897647363 == sym__0__670880538897647363 && (otherRec.sym__0___45_6595340929265439258 == sym__0___45_6595340929265439258 && (otherRec.sym__0___45_4807245048316597474 == sym__0___45_4807245048316597474 && (otherRec.sym__0___45_2845474408872645744 == sym__0___45_2845474408872645744 && (otherRec.sym__0___45_3923001362387400637 == sym__0___45_3923001362387400637 && (otherRec.sym__0___45_4068285250723832019 == sym__0___45_4068285250723832019 && (otherRec.sym__0__5927661182141962805 == sym__0__5927661182141962805 && (otherRec.sym__0__2192637400238122239 == sym__0__2192637400238122239 && (otherRec.sym__0___45_4592297025100810856 == sym__0___45_4592297025100810856 && (otherRec.sym__0__5820861992669913537 == sym__0__5820861992669913537 && (otherRec.sym__0__2988599564076309784 == sym__0__2988599564076309784 && (otherRec.sym__0___45_8469125589459601770 == sym__0___45_8469125589459601770 && (otherRec.sym__0___45_2479075576716686155 == sym__0___45_2479075576716686155 && (otherRec.sym__0__5905974904445628197 == sym__0__5905974904445628197 && (otherRec.sym__0__8482341455033398339 == sym__0__8482341455033398339 && (otherRec.sym__0___45_6780802777767537759 == sym__0___45_6780802777767537759 && (otherRec.sym__0___45_4873871374223645685 == sym__0___45_4873871374223645685 && (otherRec.sym__0___45_776774550833357369 == sym__0___45_776774550833357369 && (otherRec.sym__0___45_135773926070893412 == sym__0___45_135773926070893412 && (otherRec.sym__0___45_4302867605132693150 == sym__0___45_4302867605132693150 && (otherRec.sym__0__1118838070725597482 == sym__0__1118838070725597482 && (otherRec.sym__0___45_1590115651450644480 == sym__0___45_1590115651450644480 && (otherRec.sym__0__3192438338873126263 == sym__0__3192438338873126263 && (otherRec.sym__0___45_2134007651753731143 == sym__0___45_2134007651753731143 && (otherRec.sym__0___45_6288836903209208989 == sym__0___45_6288836903209208989 && (otherRec.sym__0___45_7991989887002259371 == sym__0___45_7991989887002259371 && (otherRec.sym__0___45_355683640189594620 == sym__0___45_355683640189594620 && (otherRec.sym__0__4955587123024849399 == sym__0__4955587123024849399 && (otherRec.sym__0__7822702969493777647 == sym__0__7822702969493777647 && (otherRec.sym__0___45_7097577767643705257 == sym__0___45_7097577767643705257 && (otherRec.sym__0___45_4128354664746428815 == sym__0___45_4128354664746428815 && (otherRec.sym__0___45_181005402936645453 == sym__0___45_181005402936645453 && (otherRec.sym__0___45_4114345702155733811 == sym__0___45_4114345702155733811 && (otherRec.sym__0__2126085240536350732 == sym__0__2126085240536350732 && (otherRec.sym__0__2978611118299427799 == sym__0__2978611118299427799 && otherRec.sym__0___45_924665267353701317 == sym__0___45_924665267353701317))))))))))))))))))))))))))))))))))))))))))))))));
  }
  bool operator !=(const Record2& otherRec) const{
    return (otherRec.sym__0___45_3862182167894734233 != sym__0___45_3862182167894734233 || (otherRec.sym__0___45_5049546618211835241 != sym__0___45_5049546618211835241 || (otherRec.sym__0___45_2996783662751493035 != sym__0___45_2996783662751493035 || (otherRec.sym__0___45_8620453348494972806 != sym__0___45_8620453348494972806 || (otherRec.sym__0__1925891775692302472 != sym__0__1925891775692302472 || (otherRec.sym__0___45_4666290150124134966 != sym__0___45_4666290150124134966 || (otherRec.sym__0__2396615500282490031 != sym__0__2396615500282490031 || (otherRec.sym__0___45_3413279326547145180 != sym__0___45_3413279326547145180 || (otherRec.sym__0__7931789082922299215 != sym__0__7931789082922299215 || (otherRec.sym__0__4128851951395191943 != sym__0__4128851951395191943 || (otherRec.sym__0__1414614919079575917 != sym__0__1414614919079575917 || (otherRec.sym__0___45_4769868403273652582 != sym__0___45_4769868403273652582 || (otherRec.sym__0___45_423989522690221765 != sym__0___45_423989522690221765 || (otherRec.sym__0__670880538897647363 != sym__0__670880538897647363 || (otherRec.sym__0___45_6595340929265439258 != sym__0___45_6595340929265439258 || (otherRec.sym__0___45_4807245048316597474 != sym__0___45_4807245048316597474 || (otherRec.sym__0___45_2845474408872645744 != sym__0___45_2845474408872645744 || (otherRec.sym__0___45_3923001362387400637 != sym__0___45_3923001362387400637 || (otherRec.sym__0___45_4068285250723832019 != sym__0___45_4068285250723832019 || (otherRec.sym__0__5927661182141962805 != sym__0__5927661182141962805 || (otherRec.sym__0__2192637400238122239 != sym__0__2192637400238122239 || (otherRec.sym__0___45_4592297025100810856 != sym__0___45_4592297025100810856 || (otherRec.sym__0__5820861992669913537 != sym__0__5820861992669913537 || (otherRec.sym__0__2988599564076309784 != sym__0__2988599564076309784 || (otherRec.sym__0___45_8469125589459601770 != sym__0___45_8469125589459601770 || (otherRec.sym__0___45_2479075576716686155 != sym__0___45_2479075576716686155 || (otherRec.sym__0__5905974904445628197 != sym__0__5905974904445628197 || (otherRec.sym__0__8482341455033398339 != sym__0__8482341455033398339 || (otherRec.sym__0___45_6780802777767537759 != sym__0___45_6780802777767537759 || (otherRec.sym__0___45_4873871374223645685 != sym__0___45_4873871374223645685 || (otherRec.sym__0___45_776774550833357369 != sym__0___45_776774550833357369 || (otherRec.sym__0___45_135773926070893412 != sym__0___45_135773926070893412 || (otherRec.sym__0___45_4302867605132693150 != sym__0___45_4302867605132693150 || (otherRec.sym__0__1118838070725597482 != sym__0__1118838070725597482 || (otherRec.sym__0___45_1590115651450644480 != sym__0___45_1590115651450644480 || (otherRec.sym__0__3192438338873126263 != sym__0__3192438338873126263 || (otherRec.sym__0___45_2134007651753731143 != sym__0___45_2134007651753731143 || (otherRec.sym__0___45_6288836903209208989 != sym__0___45_6288836903209208989 || (otherRec.sym__0___45_7991989887002259371 != sym__0___45_7991989887002259371 || (otherRec.sym__0___45_355683640189594620 != sym__0___45_355683640189594620 || (otherRec.sym__0__4955587123024849399 != sym__0__4955587123024849399 || (otherRec.sym__0__7822702969493777647 != sym__0__7822702969493777647 || (otherRec.sym__0___45_7097577767643705257 != sym__0___45_7097577767643705257 || (otherRec.sym__0___45_4128354664746428815 != sym__0___45_4128354664746428815 || (otherRec.sym__0___45_181005402936645453 != sym__0___45_181005402936645453 || (otherRec.sym__0___45_4114345702155733811 != sym__0___45_4114345702155733811 || (otherRec.sym__0__2126085240536350732 != sym__0__2126085240536350732 || (otherRec.sym__0__2978611118299427799 != sym__0__2978611118299427799 || otherRec.sym__0___45_924665267353701317 != sym__0___45_924665267353701317))))))))))))))))))))))))))))))))))))))))))))))));
  }
  unsigned sym__0___45_3862182167894734233;
  fluidb_string<18> sym__0___45_5049546618211835241;
  fluidb_string<9> sym__0___45_2996783662751493035;
  fluidb_string<9> sym__0___45_8620453348494972806;
  unsigned sym__0__1925891775692302472;
  unsigned sym__0___45_4666290150124134966;
  fluidb_string<7> sym__0__2396615500282490031;
  unsigned sym__0___45_3413279326547145180;
  unsigned sym__0__7931789082922299215;
  unsigned sym__0__4128851951395191943;
  unsigned sym__0__1414614919079575917;
  unsigned sym__0___45_4769868403273652582;
  fluidb_string<15> sym__0___45_423989522690221765;
  fluidb_string<2> sym__0__670880538897647363;
  fluidb_string<2> sym__0___45_6595340929265439258;
  fluidb_string<2> sym__0___45_4807245048316597474;
  fluidb_string<2> sym__0___45_2845474408872645744;
  unsigned sym__0___45_3923001362387400637;
  int sym__0___45_4068285250723832019;
  unsigned sym__0__5927661182141962805;
  unsigned sym__0__2192637400238122239;
  unsigned sym__0___45_4592297025100810856;
  unsigned sym__0__5820861992669913537;
  fluidb_string<21> sym__0__2988599564076309784;
  unsigned sym__0___45_8469125589459601770;
  fluidb_string<10> sym__0___45_2479075576716686155;
  unsigned sym__0__5905974904445628197;
  double sym__0__8482341455033398339;
  unsigned sym__0___45_6780802777767537759;
  double sym__0___45_4873871374223645685;
  unsigned sym__0___45_776774550833357369;
  unsigned sym__0___45_135773926070893412;
  double sym__0___45_4302867605132693150;
  fluidb_string<13> sym__0__1118838070725597482;
  unsigned sym__0___45_1590115651450644480;
  fluidb_string<25> sym__0__3192438338873126263;
  fluidb_string<40> sym__0___45_2134007651753731143;
  fluidb_string<16> sym__0___45_6288836903209208989;
  fluidb_string<16> sym__0___45_7991989887002259371;
  fluidb_string<13> sym__0___45_355683640189594620;
  fluidb_string<15> sym__0__4955587123024849399;
  unsigned sym__0__7822702969493777647;
  fluidb_string<18> sym__0___45_7097577767643705257;
  fluidb_string<40> sym__0___45_4128354664746428815;
  fluidb_string<11> sym__0___45_181005402936645453;
  fluidb_string<15> sym__0___45_4114345702155733811;
  fluidb_string<13> sym__0__2126085240536350732;
  fluidb_string<15> sym__0__2978611118299427799;
  fluidb_string<21> sym__0___45_924665267353701317;
 private:
};


class Record48 {
 public:
  Record48(unsigned __sym__0___45_3626104775580424569, fluidb_string<16> __sym__0__2860600750035231010, fluidb_string<10> __sym__0__8292664984119007321, unsigned __sym__0___45_6555077712838142657) : sym__0___45_3626104775580424569(__sym__0___45_3626104775580424569), sym__0__2860600750035231010(__sym__0__2860600750035231010), sym__0__8292664984119007321(__sym__0__8292664984119007321), sym__0___45_6555077712838142657(__sym__0___45_6555077712838142657)
  {
  }
  Record48() 
  {
  }
  std::string show() const{
    std::stringstream o;
    o << sym__0___45_3626104775580424569 << " | " << arrToString(sym__0__2860600750035231010) << " | " << arrToString(sym__0__8292664984119007321) << " | " << sym__0___45_6555077712838142657;
    return o.str();
  }
  bool operator <(const Record48& otherRec) const{
    return (otherRec.sym__0___45_3626104775580424569 < sym__0___45_3626104775580424569 && (otherRec.sym__0__2860600750035231010 < sym__0__2860600750035231010 && (otherRec.sym__0__8292664984119007321 < sym__0__8292664984119007321 && otherRec.sym__0___45_6555077712838142657 < sym__0___45_6555077712838142657)));
  }
  bool operator ==(const Record48& otherRec) const{
    return (otherRec.sym__0___45_3626104775580424569 == sym__0___45_3626104775580424569 && (otherRec.sym__0__2860600750035231010 == sym__0__2860600750035231010 && (otherRec.sym__0__8292664984119007321 == sym__0__8292664984119007321 && otherRec.sym__0___45_6555077712838142657 == sym__0___45_6555077712838142657)));
  }
  bool operator !=(const Record48& otherRec) const{
    return (otherRec.sym__0___45_3626104775580424569 != sym__0___45_3626104775580424569 || (otherRec.sym__0__2860600750035231010 != sym__0__2860600750035231010 || (otherRec.sym__0__8292664984119007321 != sym__0__8292664984119007321 || otherRec.sym__0___45_6555077712838142657 != sym__0___45_6555077712838142657)));
  }
  unsigned sym__0___45_3626104775580424569;
  fluidb_string<16> sym__0__2860600750035231010;
  fluidb_string<10> sym__0__8292664984119007321;
  unsigned sym__0___45_6555077712838142657;
 private:
};


class Record37 {
 public:
  Record37(unsigned __sym__0___45_6180681665671689455, fluidb_string<25> __sym__0___45_7492215985175491366, fluidb_string<40> __sym__0__3108260102440442872, fluidb_string<16> __sym__0__4242088751554333190, fluidb_string<16> __sym__0__4419222406440371028, fluidb_string<13> __sym__0___45_4395878808383970875, fluidb_string<15> __sym__0__5421156455815400282, unsigned __sym__0___45_1631867111754601434, int __sym__0__5956167765210805980, unsigned __sym__0___45_4504547450980902284, unsigned __sym__0__2571611128943656626, unsigned __sym__0___45_7797291820866539495, unsigned __sym__0__8112696983606547888, fluidb_string<21> __sym__0___45_8859514051634859623, unsigned __sym__0__1155613969670303859, fluidb_string<10> __sym__0__6875278589307593972, unsigned __sym__0___45_961680512448388956, double __sym__0___45_674541735213940698, unsigned __sym__0___45_821091676724229936, double __sym__0___45_4702801186563994626, unsigned __sym__0___45_3023845865529546326, unsigned __sym__0__5284478023732558701, double __sym__0__253975703545414575, fluidb_string<13> __sym__0__2038562371344131399, unsigned __sym__0___45_2600703832754715382, fluidb_string<18> __sym__0___45_7578273935239857990, fluidb_string<9> __sym__0__875191355534311252, fluidb_string<9> __sym__0___45_6042256660357361193, unsigned __sym__0__2251162898911166857, unsigned __sym__0__8322995032561243047, fluidb_string<7> __sym__0__3359760786864885346, unsigned __sym__0__4755955500146647717, unsigned __sym__0__825634143835399618, unsigned __sym__0___45_5673193308586008598, unsigned __sym__0__2344416604488212124, unsigned __sym__0__996127159005129399, fluidb_string<15> __sym__0___45_8445295692641080722, fluidb_string<2> __sym__0___45_9133478590074263962, fluidb_string<2> __sym__0___45_1949673146646224253, fluidb_string<2> __sym__0___45_3693142685708191253, fluidb_string<2> __sym__0___45_7021098367134788127, unsigned __sym__0__1445832851994825762, fluidb_string<18> __sym__0__4538888751267676410, fluidb_string<40> __sym__0__6214774548635804832, fluidb_string<11> __sym__0__5647889798153721686, fluidb_string<15> __sym__0__7215382845017137468, fluidb_string<13> __sym__0___45_7064023331726131555, fluidb_string<15> __sym__0__2464748358755927674, fluidb_string<21> __sym__0__1701416785032206702) : sym__0___45_6180681665671689455(__sym__0___45_6180681665671689455), sym__0___45_7492215985175491366(__sym__0___45_7492215985175491366), sym__0__3108260102440442872(__sym__0__3108260102440442872), sym__0__4242088751554333190(__sym__0__4242088751554333190), sym__0__4419222406440371028(__sym__0__4419222406440371028), sym__0___45_4395878808383970875(__sym__0___45_4395878808383970875), sym__0__5421156455815400282(__sym__0__5421156455815400282), sym__0___45_1631867111754601434(__sym__0___45_1631867111754601434), sym__0__5956167765210805980(__sym__0__5956167765210805980), sym__0___45_4504547450980902284(__sym__0___45_4504547450980902284), sym__0__2571611128943656626(__sym__0__2571611128943656626), sym__0___45_7797291820866539495(__sym__0___45_7797291820866539495), sym__0__8112696983606547888(__sym__0__8112696983606547888), sym__0___45_8859514051634859623(__sym__0___45_8859514051634859623), sym__0__1155613969670303859(__sym__0__1155613969670303859), sym__0__6875278589307593972(__sym__0__6875278589307593972), sym__0___45_961680512448388956(__sym__0___45_961680512448388956), sym__0___45_674541735213940698(__sym__0___45_674541735213940698), sym__0___45_821091676724229936(__sym__0___45_821091676724229936), sym__0___45_4702801186563994626(__sym__0___45_4702801186563994626), sym__0___45_3023845865529546326(__sym__0___45_3023845865529546326), sym__0__5284478023732558701(__sym__0__5284478023732558701), sym__0__253975703545414575(__sym__0__253975703545414575), sym__0__2038562371344131399(__sym__0__2038562371344131399), sym__0___45_2600703832754715382(__sym__0___45_2600703832754715382), sym__0___45_7578273935239857990(__sym__0___45_7578273935239857990), sym__0__875191355534311252(__sym__0__875191355534311252), sym__0___45_6042256660357361193(__sym__0___45_6042256660357361193), sym__0__2251162898911166857(__sym__0__2251162898911166857), sym__0__8322995032561243047(__sym__0__8322995032561243047), sym__0__3359760786864885346(__sym__0__3359760786864885346), sym__0__4755955500146647717(__sym__0__4755955500146647717), sym__0__825634143835399618(__sym__0__825634143835399618), sym__0___45_5673193308586008598(__sym__0___45_5673193308586008598), sym__0__2344416604488212124(__sym__0__2344416604488212124), sym__0__996127159005129399(__sym__0__996127159005129399), sym__0___45_8445295692641080722(__sym__0___45_8445295692641080722), sym__0___45_9133478590074263962(__sym__0___45_9133478590074263962), sym__0___45_1949673146646224253(__sym__0___45_1949673146646224253), sym__0___45_3693142685708191253(__sym__0___45_3693142685708191253), sym__0___45_7021098367134788127(__sym__0___45_7021098367134788127), sym__0__1445832851994825762(__sym__0__1445832851994825762), sym__0__4538888751267676410(__sym__0__4538888751267676410), sym__0__6214774548635804832(__sym__0__6214774548635804832), sym__0__5647889798153721686(__sym__0__5647889798153721686), sym__0__7215382845017137468(__sym__0__7215382845017137468), sym__0___45_7064023331726131555(__sym__0___45_7064023331726131555), sym__0__2464748358755927674(__sym__0__2464748358755927674), sym__0__1701416785032206702(__sym__0__1701416785032206702)
  {
  }
  Record37() 
  {
  }
  std::string show() const{
    std::stringstream o;
    o << sym__0___45_6180681665671689455 << " | " << arrToString(sym__0___45_7492215985175491366) << " | " << arrToString(sym__0__3108260102440442872) << " | " << arrToString(sym__0__4242088751554333190) << " | " << arrToString(sym__0__4419222406440371028) << " | " << arrToString(sym__0___45_4395878808383970875) << " | " << arrToString(sym__0__5421156455815400282) << " | " << sym__0___45_1631867111754601434 << " | " << sym__0__5956167765210805980 << " | " << sym__0___45_4504547450980902284 << " | " << sym__0__2571611128943656626 << " | " << sym__0___45_7797291820866539495 << " | " << sym__0__8112696983606547888 << " | " << arrToString(sym__0___45_8859514051634859623) << " | " << sym__0__1155613969670303859 << " | " << arrToString(sym__0__6875278589307593972) << " | " << sym__0___45_961680512448388956 << " | " << sym__0___45_674541735213940698 << " | " << sym__0___45_821091676724229936 << " | " << sym__0___45_4702801186563994626 << " | " << sym__0___45_3023845865529546326 << " | " << sym__0__5284478023732558701 << " | " << sym__0__253975703545414575 << " | " << arrToString(sym__0__2038562371344131399) << " | " << sym__0___45_2600703832754715382 << " | " << arrToString(sym__0___45_7578273935239857990) << " | " << arrToString(sym__0__875191355534311252) << " | " << arrToString(sym__0___45_6042256660357361193) << " | " << sym__0__2251162898911166857 << " | " << sym__0__8322995032561243047 << " | " << arrToString(sym__0__3359760786864885346) << " | " << sym__0__4755955500146647717 << " | " << sym__0__825634143835399618 << " | " << sym__0___45_5673193308586008598 << " | " << sym__0__2344416604488212124 << " | " << sym__0__996127159005129399 << " | " << arrToString(sym__0___45_8445295692641080722) << " | " << arrToString(sym__0___45_9133478590074263962) << " | " << arrToString(sym__0___45_1949673146646224253) << " | " << arrToString(sym__0___45_3693142685708191253) << " | " << arrToString(sym__0___45_7021098367134788127) << " | " << sym__0__1445832851994825762 << " | " << arrToString(sym__0__4538888751267676410) << " | " << arrToString(sym__0__6214774548635804832) << " | " << arrToString(sym__0__5647889798153721686) << " | " << arrToString(sym__0__7215382845017137468) << " | " << arrToString(sym__0___45_7064023331726131555) << " | " << arrToString(sym__0__2464748358755927674) << " | " << arrToString(sym__0__1701416785032206702);
    return o.str();
  }
  bool operator <(const Record37& otherRec) const{
    return (otherRec.sym__0___45_6180681665671689455 < sym__0___45_6180681665671689455 && (otherRec.sym__0___45_7492215985175491366 < sym__0___45_7492215985175491366 && (otherRec.sym__0__3108260102440442872 < sym__0__3108260102440442872 && (otherRec.sym__0__4242088751554333190 < sym__0__4242088751554333190 && (otherRec.sym__0__4419222406440371028 < sym__0__4419222406440371028 && (otherRec.sym__0___45_4395878808383970875 < sym__0___45_4395878808383970875 && (otherRec.sym__0__5421156455815400282 < sym__0__5421156455815400282 && (otherRec.sym__0___45_1631867111754601434 < sym__0___45_1631867111754601434 && (otherRec.sym__0__5956167765210805980 < sym__0__5956167765210805980 && (otherRec.sym__0___45_4504547450980902284 < sym__0___45_4504547450980902284 && (otherRec.sym__0__2571611128943656626 < sym__0__2571611128943656626 && (otherRec.sym__0___45_7797291820866539495 < sym__0___45_7797291820866539495 && (otherRec.sym__0__8112696983606547888 < sym__0__8112696983606547888 && (otherRec.sym__0___45_8859514051634859623 < sym__0___45_8859514051634859623 && (otherRec.sym__0__1155613969670303859 < sym__0__1155613969670303859 && (otherRec.sym__0__6875278589307593972 < sym__0__6875278589307593972 && (otherRec.sym__0___45_961680512448388956 < sym__0___45_961680512448388956 && (otherRec.sym__0___45_674541735213940698 < sym__0___45_674541735213940698 && (otherRec.sym__0___45_821091676724229936 < sym__0___45_821091676724229936 && (otherRec.sym__0___45_4702801186563994626 < sym__0___45_4702801186563994626 && (otherRec.sym__0___45_3023845865529546326 < sym__0___45_3023845865529546326 && (otherRec.sym__0__5284478023732558701 < sym__0__5284478023732558701 && (otherRec.sym__0__253975703545414575 < sym__0__253975703545414575 && (otherRec.sym__0__2038562371344131399 < sym__0__2038562371344131399 && (otherRec.sym__0___45_2600703832754715382 < sym__0___45_2600703832754715382 && (otherRec.sym__0___45_7578273935239857990 < sym__0___45_7578273935239857990 && (otherRec.sym__0__875191355534311252 < sym__0__875191355534311252 && (otherRec.sym__0___45_6042256660357361193 < sym__0___45_6042256660357361193 && (otherRec.sym__0__2251162898911166857 < sym__0__2251162898911166857 && (otherRec.sym__0__8322995032561243047 < sym__0__8322995032561243047 && (otherRec.sym__0__3359760786864885346 < sym__0__3359760786864885346 && (otherRec.sym__0__4755955500146647717 < sym__0__4755955500146647717 && (otherRec.sym__0__825634143835399618 < sym__0__825634143835399618 && (otherRec.sym__0___45_5673193308586008598 < sym__0___45_5673193308586008598 && (otherRec.sym__0__2344416604488212124 < sym__0__2344416604488212124 && (otherRec.sym__0__996127159005129399 < sym__0__996127159005129399 && (otherRec.sym__0___45_8445295692641080722 < sym__0___45_8445295692641080722 && (otherRec.sym__0___45_9133478590074263962 < sym__0___45_9133478590074263962 && (otherRec.sym__0___45_1949673146646224253 < sym__0___45_1949673146646224253 && (otherRec.sym__0___45_3693142685708191253 < sym__0___45_3693142685708191253 && (otherRec.sym__0___45_7021098367134788127 < sym__0___45_7021098367134788127 && (otherRec.sym__0__1445832851994825762 < sym__0__1445832851994825762 && (otherRec.sym__0__4538888751267676410 < sym__0__4538888751267676410 && (otherRec.sym__0__6214774548635804832 < sym__0__6214774548635804832 && (otherRec.sym__0__5647889798153721686 < sym__0__5647889798153721686 && (otherRec.sym__0__7215382845017137468 < sym__0__7215382845017137468 && (otherRec.sym__0___45_7064023331726131555 < sym__0___45_7064023331726131555 && (otherRec.sym__0__2464748358755927674 < sym__0__2464748358755927674 && otherRec.sym__0__1701416785032206702 < sym__0__1701416785032206702))))))))))))))))))))))))))))))))))))))))))))))));
  }
  bool operator ==(const Record37& otherRec) const{
    return (otherRec.sym__0___45_6180681665671689455 == sym__0___45_6180681665671689455 && (otherRec.sym__0___45_7492215985175491366 == sym__0___45_7492215985175491366 && (otherRec.sym__0__3108260102440442872 == sym__0__3108260102440442872 && (otherRec.sym__0__4242088751554333190 == sym__0__4242088751554333190 && (otherRec.sym__0__4419222406440371028 == sym__0__4419222406440371028 && (otherRec.sym__0___45_4395878808383970875 == sym__0___45_4395878808383970875 && (otherRec.sym__0__5421156455815400282 == sym__0__5421156455815400282 && (otherRec.sym__0___45_1631867111754601434 == sym__0___45_1631867111754601434 && (otherRec.sym__0__5956167765210805980 == sym__0__5956167765210805980 && (otherRec.sym__0___45_4504547450980902284 == sym__0___45_4504547450980902284 && (otherRec.sym__0__2571611128943656626 == sym__0__2571611128943656626 && (otherRec.sym__0___45_7797291820866539495 == sym__0___45_7797291820866539495 && (otherRec.sym__0__8112696983606547888 == sym__0__8112696983606547888 && (otherRec.sym__0___45_8859514051634859623 == sym__0___45_8859514051634859623 && (otherRec.sym__0__1155613969670303859 == sym__0__1155613969670303859 && (otherRec.sym__0__6875278589307593972 == sym__0__6875278589307593972 && (otherRec.sym__0___45_961680512448388956 == sym__0___45_961680512448388956 && (otherRec.sym__0___45_674541735213940698 == sym__0___45_674541735213940698 && (otherRec.sym__0___45_821091676724229936 == sym__0___45_821091676724229936 && (otherRec.sym__0___45_4702801186563994626 == sym__0___45_4702801186563994626 && (otherRec.sym__0___45_3023845865529546326 == sym__0___45_3023845865529546326 && (otherRec.sym__0__5284478023732558701 == sym__0__5284478023732558701 && (otherRec.sym__0__253975703545414575 == sym__0__253975703545414575 && (otherRec.sym__0__2038562371344131399 == sym__0__2038562371344131399 && (otherRec.sym__0___45_2600703832754715382 == sym__0___45_2600703832754715382 && (otherRec.sym__0___45_7578273935239857990 == sym__0___45_7578273935239857990 && (otherRec.sym__0__875191355534311252 == sym__0__875191355534311252 && (otherRec.sym__0___45_6042256660357361193 == sym__0___45_6042256660357361193 && (otherRec.sym__0__2251162898911166857 == sym__0__2251162898911166857 && (otherRec.sym__0__8322995032561243047 == sym__0__8322995032561243047 && (otherRec.sym__0__3359760786864885346 == sym__0__3359760786864885346 && (otherRec.sym__0__4755955500146647717 == sym__0__4755955500146647717 && (otherRec.sym__0__825634143835399618 == sym__0__825634143835399618 && (otherRec.sym__0___45_5673193308586008598 == sym__0___45_5673193308586008598 && (otherRec.sym__0__2344416604488212124 == sym__0__2344416604488212124 && (otherRec.sym__0__996127159005129399 == sym__0__996127159005129399 && (otherRec.sym__0___45_8445295692641080722 == sym__0___45_8445295692641080722 && (otherRec.sym__0___45_9133478590074263962 == sym__0___45_9133478590074263962 && (otherRec.sym__0___45_1949673146646224253 == sym__0___45_1949673146646224253 && (otherRec.sym__0___45_3693142685708191253 == sym__0___45_3693142685708191253 && (otherRec.sym__0___45_7021098367134788127 == sym__0___45_7021098367134788127 && (otherRec.sym__0__1445832851994825762 == sym__0__1445832851994825762 && (otherRec.sym__0__4538888751267676410 == sym__0__4538888751267676410 && (otherRec.sym__0__6214774548635804832 == sym__0__6214774548635804832 && (otherRec.sym__0__5647889798153721686 == sym__0__5647889798153721686 && (otherRec.sym__0__7215382845017137468 == sym__0__7215382845017137468 && (otherRec.sym__0___45_7064023331726131555 == sym__0___45_7064023331726131555 && (otherRec.sym__0__2464748358755927674 == sym__0__2464748358755927674 && otherRec.sym__0__1701416785032206702 == sym__0__1701416785032206702))))))))))))))))))))))))))))))))))))))))))))))));
  }
  bool operator !=(const Record37& otherRec) const{
    return (otherRec.sym__0___45_6180681665671689455 != sym__0___45_6180681665671689455 || (otherRec.sym__0___45_7492215985175491366 != sym__0___45_7492215985175491366 || (otherRec.sym__0__3108260102440442872 != sym__0__3108260102440442872 || (otherRec.sym__0__4242088751554333190 != sym__0__4242088751554333190 || (otherRec.sym__0__4419222406440371028 != sym__0__4419222406440371028 || (otherRec.sym__0___45_4395878808383970875 != sym__0___45_4395878808383970875 || (otherRec.sym__0__5421156455815400282 != sym__0__5421156455815400282 || (otherRec.sym__0___45_1631867111754601434 != sym__0___45_1631867111754601434 || (otherRec.sym__0__5956167765210805980 != sym__0__5956167765210805980 || (otherRec.sym__0___45_4504547450980902284 != sym__0___45_4504547450980902284 || (otherRec.sym__0__2571611128943656626 != sym__0__2571611128943656626 || (otherRec.sym__0___45_7797291820866539495 != sym__0___45_7797291820866539495 || (otherRec.sym__0__8112696983606547888 != sym__0__8112696983606547888 || (otherRec.sym__0___45_8859514051634859623 != sym__0___45_8859514051634859623 || (otherRec.sym__0__1155613969670303859 != sym__0__1155613969670303859 || (otherRec.sym__0__6875278589307593972 != sym__0__6875278589307593972 || (otherRec.sym__0___45_961680512448388956 != sym__0___45_961680512448388956 || (otherRec.sym__0___45_674541735213940698 != sym__0___45_674541735213940698 || (otherRec.sym__0___45_821091676724229936 != sym__0___45_821091676724229936 || (otherRec.sym__0___45_4702801186563994626 != sym__0___45_4702801186563994626 || (otherRec.sym__0___45_3023845865529546326 != sym__0___45_3023845865529546326 || (otherRec.sym__0__5284478023732558701 != sym__0__5284478023732558701 || (otherRec.sym__0__253975703545414575 != sym__0__253975703545414575 || (otherRec.sym__0__2038562371344131399 != sym__0__2038562371344131399 || (otherRec.sym__0___45_2600703832754715382 != sym__0___45_2600703832754715382 || (otherRec.sym__0___45_7578273935239857990 != sym__0___45_7578273935239857990 || (otherRec.sym__0__875191355534311252 != sym__0__875191355534311252 || (otherRec.sym__0___45_6042256660357361193 != sym__0___45_6042256660357361193 || (otherRec.sym__0__2251162898911166857 != sym__0__2251162898911166857 || (otherRec.sym__0__8322995032561243047 != sym__0__8322995032561243047 || (otherRec.sym__0__3359760786864885346 != sym__0__3359760786864885346 || (otherRec.sym__0__4755955500146647717 != sym__0__4755955500146647717 || (otherRec.sym__0__825634143835399618 != sym__0__825634143835399618 || (otherRec.sym__0___45_5673193308586008598 != sym__0___45_5673193308586008598 || (otherRec.sym__0__2344416604488212124 != sym__0__2344416604488212124 || (otherRec.sym__0__996127159005129399 != sym__0__996127159005129399 || (otherRec.sym__0___45_8445295692641080722 != sym__0___45_8445295692641080722 || (otherRec.sym__0___45_9133478590074263962 != sym__0___45_9133478590074263962 || (otherRec.sym__0___45_1949673146646224253 != sym__0___45_1949673146646224253 || (otherRec.sym__0___45_3693142685708191253 != sym__0___45_3693142685708191253 || (otherRec.sym__0___45_7021098367134788127 != sym__0___45_7021098367134788127 || (otherRec.sym__0__1445832851994825762 != sym__0__1445832851994825762 || (otherRec.sym__0__4538888751267676410 != sym__0__4538888751267676410 || (otherRec.sym__0__6214774548635804832 != sym__0__6214774548635804832 || (otherRec.sym__0__5647889798153721686 != sym__0__5647889798153721686 || (otherRec.sym__0__7215382845017137468 != sym__0__7215382845017137468 || (otherRec.sym__0___45_7064023331726131555 != sym__0___45_7064023331726131555 || (otherRec.sym__0__2464748358755927674 != sym__0__2464748358755927674 || otherRec.sym__0__1701416785032206702 != sym__0__1701416785032206702))))))))))))))))))))))))))))))))))))))))))))))));
  }
  unsigned sym__0___45_6180681665671689455;
  fluidb_string<25> sym__0___45_7492215985175491366;
  fluidb_string<40> sym__0__3108260102440442872;
  fluidb_string<16> sym__0__4242088751554333190;
  fluidb_string<16> sym__0__4419222406440371028;
  fluidb_string<13> sym__0___45_4395878808383970875;
  fluidb_string<15> sym__0__5421156455815400282;
  unsigned sym__0___45_1631867111754601434;
  int sym__0__5956167765210805980;
  unsigned sym__0___45_4504547450980902284;
  unsigned sym__0__2571611128943656626;
  unsigned sym__0___45_7797291820866539495;
  unsigned sym__0__8112696983606547888;
  fluidb_string<21> sym__0___45_8859514051634859623;
  unsigned sym__0__1155613969670303859;
  fluidb_string<10> sym__0__6875278589307593972;
  unsigned sym__0___45_961680512448388956;
  double sym__0___45_674541735213940698;
  unsigned sym__0___45_821091676724229936;
  double sym__0___45_4702801186563994626;
  unsigned sym__0___45_3023845865529546326;
  unsigned sym__0__5284478023732558701;
  double sym__0__253975703545414575;
  fluidb_string<13> sym__0__2038562371344131399;
  unsigned sym__0___45_2600703832754715382;
  fluidb_string<18> sym__0___45_7578273935239857990;
  fluidb_string<9> sym__0__875191355534311252;
  fluidb_string<9> sym__0___45_6042256660357361193;
  unsigned sym__0__2251162898911166857;
  unsigned sym__0__8322995032561243047;
  fluidb_string<7> sym__0__3359760786864885346;
  unsigned sym__0__4755955500146647717;
  unsigned sym__0__825634143835399618;
  unsigned sym__0___45_5673193308586008598;
  unsigned sym__0__2344416604488212124;
  unsigned sym__0__996127159005129399;
  fluidb_string<15> sym__0___45_8445295692641080722;
  fluidb_string<2> sym__0___45_9133478590074263962;
  fluidb_string<2> sym__0___45_1949673146646224253;
  fluidb_string<2> sym__0___45_3693142685708191253;
  fluidb_string<2> sym__0___45_7021098367134788127;
  unsigned sym__0__1445832851994825762;
  fluidb_string<18> sym__0__4538888751267676410;
  fluidb_string<40> sym__0__6214774548635804832;
  fluidb_string<11> sym__0__5647889798153721686;
  fluidb_string<15> sym__0__7215382845017137468;
  fluidb_string<13> sym__0___45_7064023331726131555;
  fluidb_string<15> sym__0__2464748358755927674;
  fluidb_string<21> sym__0__1701416785032206702;
 private:
};


class Record1 {
 public:
  Record1(unsigned __sym__0__4519803852684427543, fluidb_string<18> __sym__0___45_4343360485772802425, fluidb_string<9> __sym__0___45_4964707487098413267, fluidb_string<9> __sym__0___45_4968176427635671902, unsigned __sym__0___45_6976515134520023056, unsigned __sym__0___45_6407986363906595150, fluidb_string<7> __sym__0__7276429137656386527, unsigned __sym__0__4221568001408061244, unsigned __sym__0__5318835693872869311, unsigned __sym__0___45_5662655200901224073, unsigned __sym__0___45_3865525655503432699, unsigned __sym__0__6565687540723274882, fluidb_string<15> __sym__0__8756313061100779083, fluidb_string<2> __sym__0__406217822861760083, fluidb_string<2> __sym__0__6583192417747851262, fluidb_string<2> __sym__0__6482281155504029302, fluidb_string<2> __sym__0__7679621352908603000, unsigned __sym__0___45_5057802021856473709, int __sym__0___45_6839534157954023739, unsigned __sym__0__3554709552784421197, unsigned __sym__0___45_4889171900302414417, unsigned __sym__0___45_4161758501735212672, unsigned __sym__0___45_7938631388649493975, fluidb_string<21> __sym__0___45_699785309432656128, unsigned __sym__0___45_2045490810393326482, fluidb_string<10> __sym__0__3215571782344721357, unsigned __sym__0__7405671162454692029, double __sym__0__2221693701692461459, unsigned __sym__0___45_7916622968205270455, double __sym__0___45_187379753214360613, unsigned __sym__0__3625366936415753399, unsigned __sym__0__8944804994507528308, double __sym__0___45_5827336879747782262, fluidb_string<13> __sym__0__1350428008193598418, unsigned __sym__0__3585920367783378280, fluidb_string<25> __sym__0___45_1379309617935839321, fluidb_string<40> __sym__0___45_4244869060837491615, fluidb_string<16> __sym__0___45_6246622897322295949, fluidb_string<16> __sym__0___45_7650291061553794259, fluidb_string<13> __sym__0___45_1236860414731734564, fluidb_string<15> __sym__0___45_3875846966030338521) : sym__0__4519803852684427543(__sym__0__4519803852684427543), sym__0___45_4343360485772802425(__sym__0___45_4343360485772802425), sym__0___45_4964707487098413267(__sym__0___45_4964707487098413267), sym__0___45_4968176427635671902(__sym__0___45_4968176427635671902), sym__0___45_6976515134520023056(__sym__0___45_6976515134520023056), sym__0___45_6407986363906595150(__sym__0___45_6407986363906595150), sym__0__7276429137656386527(__sym__0__7276429137656386527), sym__0__4221568001408061244(__sym__0__4221568001408061244), sym__0__5318835693872869311(__sym__0__5318835693872869311), sym__0___45_5662655200901224073(__sym__0___45_5662655200901224073), sym__0___45_3865525655503432699(__sym__0___45_3865525655503432699), sym__0__6565687540723274882(__sym__0__6565687540723274882), sym__0__8756313061100779083(__sym__0__8756313061100779083), sym__0__406217822861760083(__sym__0__406217822861760083), sym__0__6583192417747851262(__sym__0__6583192417747851262), sym__0__6482281155504029302(__sym__0__6482281155504029302), sym__0__7679621352908603000(__sym__0__7679621352908603000), sym__0___45_5057802021856473709(__sym__0___45_5057802021856473709), sym__0___45_6839534157954023739(__sym__0___45_6839534157954023739), sym__0__3554709552784421197(__sym__0__3554709552784421197), sym__0___45_4889171900302414417(__sym__0___45_4889171900302414417), sym__0___45_4161758501735212672(__sym__0___45_4161758501735212672), sym__0___45_7938631388649493975(__sym__0___45_7938631388649493975), sym__0___45_699785309432656128(__sym__0___45_699785309432656128), sym__0___45_2045490810393326482(__sym__0___45_2045490810393326482), sym__0__3215571782344721357(__sym__0__3215571782344721357), sym__0__7405671162454692029(__sym__0__7405671162454692029), sym__0__2221693701692461459(__sym__0__2221693701692461459), sym__0___45_7916622968205270455(__sym__0___45_7916622968205270455), sym__0___45_187379753214360613(__sym__0___45_187379753214360613), sym__0__3625366936415753399(__sym__0__3625366936415753399), sym__0__8944804994507528308(__sym__0__8944804994507528308), sym__0___45_5827336879747782262(__sym__0___45_5827336879747782262), sym__0__1350428008193598418(__sym__0__1350428008193598418), sym__0__3585920367783378280(__sym__0__3585920367783378280), sym__0___45_1379309617935839321(__sym__0___45_1379309617935839321), sym__0___45_4244869060837491615(__sym__0___45_4244869060837491615), sym__0___45_6246622897322295949(__sym__0___45_6246622897322295949), sym__0___45_7650291061553794259(__sym__0___45_7650291061553794259), sym__0___45_1236860414731734564(__sym__0___45_1236860414731734564), sym__0___45_3875846966030338521(__sym__0___45_3875846966030338521)
  {
  }
  Record1() 
  {
  }
  std::string show() const{
    std::stringstream o;
    o << sym__0__4519803852684427543 << " | " << arrToString(sym__0___45_4343360485772802425) << " | " << arrToString(sym__0___45_4964707487098413267) << " | " << arrToString(sym__0___45_4968176427635671902) << " | " << sym__0___45_6976515134520023056 << " | " << sym__0___45_6407986363906595150 << " | " << arrToString(sym__0__7276429137656386527) << " | " << sym__0__4221568001408061244 << " | " << sym__0__5318835693872869311 << " | " << sym__0___45_5662655200901224073 << " | " << sym__0___45_3865525655503432699 << " | " << sym__0__6565687540723274882 << " | " << arrToString(sym__0__8756313061100779083) << " | " << arrToString(sym__0__406217822861760083) << " | " << arrToString(sym__0__6583192417747851262) << " | " << arrToString(sym__0__6482281155504029302) << " | " << arrToString(sym__0__7679621352908603000) << " | " << sym__0___45_5057802021856473709 << " | " << sym__0___45_6839534157954023739 << " | " << sym__0__3554709552784421197 << " | " << sym__0___45_4889171900302414417 << " | " << sym__0___45_4161758501735212672 << " | " << sym__0___45_7938631388649493975 << " | " << arrToString(sym__0___45_699785309432656128) << " | " << sym__0___45_2045490810393326482 << " | " << arrToString(sym__0__3215571782344721357) << " | " << sym__0__7405671162454692029 << " | " << sym__0__2221693701692461459 << " | " << sym__0___45_7916622968205270455 << " | " << sym__0___45_187379753214360613 << " | " << sym__0__3625366936415753399 << " | " << sym__0__8944804994507528308 << " | " << sym__0___45_5827336879747782262 << " | " << arrToString(sym__0__1350428008193598418) << " | " << sym__0__3585920367783378280 << " | " << arrToString(sym__0___45_1379309617935839321) << " | " << arrToString(sym__0___45_4244869060837491615) << " | " << arrToString(sym__0___45_6246622897322295949) << " | " << arrToString(sym__0___45_7650291061553794259) << " | " << arrToString(sym__0___45_1236860414731734564) << " | " << arrToString(sym__0___45_3875846966030338521);
    return o.str();
  }
  bool operator <(const Record1& otherRec) const{
    return (otherRec.sym__0__4519803852684427543 < sym__0__4519803852684427543 && (otherRec.sym__0___45_4343360485772802425 < sym__0___45_4343360485772802425 && (otherRec.sym__0___45_4964707487098413267 < sym__0___45_4964707487098413267 && (otherRec.sym__0___45_4968176427635671902 < sym__0___45_4968176427635671902 && (otherRec.sym__0___45_6976515134520023056 < sym__0___45_6976515134520023056 && (otherRec.sym__0___45_6407986363906595150 < sym__0___45_6407986363906595150 && (otherRec.sym__0__7276429137656386527 < sym__0__7276429137656386527 && (otherRec.sym__0__4221568001408061244 < sym__0__4221568001408061244 && (otherRec.sym__0__5318835693872869311 < sym__0__5318835693872869311 && (otherRec.sym__0___45_5662655200901224073 < sym__0___45_5662655200901224073 && (otherRec.sym__0___45_3865525655503432699 < sym__0___45_3865525655503432699 && (otherRec.sym__0__6565687540723274882 < sym__0__6565687540723274882 && (otherRec.sym__0__8756313061100779083 < sym__0__8756313061100779083 && (otherRec.sym__0__406217822861760083 < sym__0__406217822861760083 && (otherRec.sym__0__6583192417747851262 < sym__0__6583192417747851262 && (otherRec.sym__0__6482281155504029302 < sym__0__6482281155504029302 && (otherRec.sym__0__7679621352908603000 < sym__0__7679621352908603000 && (otherRec.sym__0___45_5057802021856473709 < sym__0___45_5057802021856473709 && (otherRec.sym__0___45_6839534157954023739 < sym__0___45_6839534157954023739 && (otherRec.sym__0__3554709552784421197 < sym__0__3554709552784421197 && (otherRec.sym__0___45_4889171900302414417 < sym__0___45_4889171900302414417 && (otherRec.sym__0___45_4161758501735212672 < sym__0___45_4161758501735212672 && (otherRec.sym__0___45_7938631388649493975 < sym__0___45_7938631388649493975 && (otherRec.sym__0___45_699785309432656128 < sym__0___45_699785309432656128 && (otherRec.sym__0___45_2045490810393326482 < sym__0___45_2045490810393326482 && (otherRec.sym__0__3215571782344721357 < sym__0__3215571782344721357 && (otherRec.sym__0__7405671162454692029 < sym__0__7405671162454692029 && (otherRec.sym__0__2221693701692461459 < sym__0__2221693701692461459 && (otherRec.sym__0___45_7916622968205270455 < sym__0___45_7916622968205270455 && (otherRec.sym__0___45_187379753214360613 < sym__0___45_187379753214360613 && (otherRec.sym__0__3625366936415753399 < sym__0__3625366936415753399 && (otherRec.sym__0__8944804994507528308 < sym__0__8944804994507528308 && (otherRec.sym__0___45_5827336879747782262 < sym__0___45_5827336879747782262 && (otherRec.sym__0__1350428008193598418 < sym__0__1350428008193598418 && (otherRec.sym__0__3585920367783378280 < sym__0__3585920367783378280 && (otherRec.sym__0___45_1379309617935839321 < sym__0___45_1379309617935839321 && (otherRec.sym__0___45_4244869060837491615 < sym__0___45_4244869060837491615 && (otherRec.sym__0___45_6246622897322295949 < sym__0___45_6246622897322295949 && (otherRec.sym__0___45_7650291061553794259 < sym__0___45_7650291061553794259 && (otherRec.sym__0___45_1236860414731734564 < sym__0___45_1236860414731734564 && otherRec.sym__0___45_3875846966030338521 < sym__0___45_3875846966030338521))))))))))))))))))))))))))))))))))))))));
  }
  bool operator ==(const Record1& otherRec) const{
    return (otherRec.sym__0__4519803852684427543 == sym__0__4519803852684427543 && (otherRec.sym__0___45_4343360485772802425 == sym__0___45_4343360485772802425 && (otherRec.sym__0___45_4964707487098413267 == sym__0___45_4964707487098413267 && (otherRec.sym__0___45_4968176427635671902 == sym__0___45_4968176427635671902 && (otherRec.sym__0___45_6976515134520023056 == sym__0___45_6976515134520023056 && (otherRec.sym__0___45_6407986363906595150 == sym__0___45_6407986363906595150 && (otherRec.sym__0__7276429137656386527 == sym__0__7276429137656386527 && (otherRec.sym__0__4221568001408061244 == sym__0__4221568001408061244 && (otherRec.sym__0__5318835693872869311 == sym__0__5318835693872869311 && (otherRec.sym__0___45_5662655200901224073 == sym__0___45_5662655200901224073 && (otherRec.sym__0___45_3865525655503432699 == sym__0___45_3865525655503432699 && (otherRec.sym__0__6565687540723274882 == sym__0__6565687540723274882 && (otherRec.sym__0__8756313061100779083 == sym__0__8756313061100779083 && (otherRec.sym__0__406217822861760083 == sym__0__406217822861760083 && (otherRec.sym__0__6583192417747851262 == sym__0__6583192417747851262 && (otherRec.sym__0__6482281155504029302 == sym__0__6482281155504029302 && (otherRec.sym__0__7679621352908603000 == sym__0__7679621352908603000 && (otherRec.sym__0___45_5057802021856473709 == sym__0___45_5057802021856473709 && (otherRec.sym__0___45_6839534157954023739 == sym__0___45_6839534157954023739 && (otherRec.sym__0__3554709552784421197 == sym__0__3554709552784421197 && (otherRec.sym__0___45_4889171900302414417 == sym__0___45_4889171900302414417 && (otherRec.sym__0___45_4161758501735212672 == sym__0___45_4161758501735212672 && (otherRec.sym__0___45_7938631388649493975 == sym__0___45_7938631388649493975 && (otherRec.sym__0___45_699785309432656128 == sym__0___45_699785309432656128 && (otherRec.sym__0___45_2045490810393326482 == sym__0___45_2045490810393326482 && (otherRec.sym__0__3215571782344721357 == sym__0__3215571782344721357 && (otherRec.sym__0__7405671162454692029 == sym__0__7405671162454692029 && (otherRec.sym__0__2221693701692461459 == sym__0__2221693701692461459 && (otherRec.sym__0___45_7916622968205270455 == sym__0___45_7916622968205270455 && (otherRec.sym__0___45_187379753214360613 == sym__0___45_187379753214360613 && (otherRec.sym__0__3625366936415753399 == sym__0__3625366936415753399 && (otherRec.sym__0__8944804994507528308 == sym__0__8944804994507528308 && (otherRec.sym__0___45_5827336879747782262 == sym__0___45_5827336879747782262 && (otherRec.sym__0__1350428008193598418 == sym__0__1350428008193598418 && (otherRec.sym__0__3585920367783378280 == sym__0__3585920367783378280 && (otherRec.sym__0___45_1379309617935839321 == sym__0___45_1379309617935839321 && (otherRec.sym__0___45_4244869060837491615 == sym__0___45_4244869060837491615 && (otherRec.sym__0___45_6246622897322295949 == sym__0___45_6246622897322295949 && (otherRec.sym__0___45_7650291061553794259 == sym__0___45_7650291061553794259 && (otherRec.sym__0___45_1236860414731734564 == sym__0___45_1236860414731734564 && otherRec.sym__0___45_3875846966030338521 == sym__0___45_3875846966030338521))))))))))))))))))))))))))))))))))))))));
  }
  bool operator !=(const Record1& otherRec) const{
    return (otherRec.sym__0__4519803852684427543 != sym__0__4519803852684427543 || (otherRec.sym__0___45_4343360485772802425 != sym__0___45_4343360485772802425 || (otherRec.sym__0___45_4964707487098413267 != sym__0___45_4964707487098413267 || (otherRec.sym__0___45_4968176427635671902 != sym__0___45_4968176427635671902 || (otherRec.sym__0___45_6976515134520023056 != sym__0___45_6976515134520023056 || (otherRec.sym__0___45_6407986363906595150 != sym__0___45_6407986363906595150 || (otherRec.sym__0__7276429137656386527 != sym__0__7276429137656386527 || (otherRec.sym__0__4221568001408061244 != sym__0__4221568001408061244 || (otherRec.sym__0__5318835693872869311 != sym__0__5318835693872869311 || (otherRec.sym__0___45_5662655200901224073 != sym__0___45_5662655200901224073 || (otherRec.sym__0___45_3865525655503432699 != sym__0___45_3865525655503432699 || (otherRec.sym__0__6565687540723274882 != sym__0__6565687540723274882 || (otherRec.sym__0__8756313061100779083 != sym__0__8756313061100779083 || (otherRec.sym__0__406217822861760083 != sym__0__406217822861760083 || (otherRec.sym__0__6583192417747851262 != sym__0__6583192417747851262 || (otherRec.sym__0__6482281155504029302 != sym__0__6482281155504029302 || (otherRec.sym__0__7679621352908603000 != sym__0__7679621352908603000 || (otherRec.sym__0___45_5057802021856473709 != sym__0___45_5057802021856473709 || (otherRec.sym__0___45_6839534157954023739 != sym__0___45_6839534157954023739 || (otherRec.sym__0__3554709552784421197 != sym__0__3554709552784421197 || (otherRec.sym__0___45_4889171900302414417 != sym__0___45_4889171900302414417 || (otherRec.sym__0___45_4161758501735212672 != sym__0___45_4161758501735212672 || (otherRec.sym__0___45_7938631388649493975 != sym__0___45_7938631388649493975 || (otherRec.sym__0___45_699785309432656128 != sym__0___45_699785309432656128 || (otherRec.sym__0___45_2045490810393326482 != sym__0___45_2045490810393326482 || (otherRec.sym__0__3215571782344721357 != sym__0__3215571782344721357 || (otherRec.sym__0__7405671162454692029 != sym__0__7405671162454692029 || (otherRec.sym__0__2221693701692461459 != sym__0__2221693701692461459 || (otherRec.sym__0___45_7916622968205270455 != sym__0___45_7916622968205270455 || (otherRec.sym__0___45_187379753214360613 != sym__0___45_187379753214360613 || (otherRec.sym__0__3625366936415753399 != sym__0__3625366936415753399 || (otherRec.sym__0__8944804994507528308 != sym__0__8944804994507528308 || (otherRec.sym__0___45_5827336879747782262 != sym__0___45_5827336879747782262 || (otherRec.sym__0__1350428008193598418 != sym__0__1350428008193598418 || (otherRec.sym__0__3585920367783378280 != sym__0__3585920367783378280 || (otherRec.sym__0___45_1379309617935839321 != sym__0___45_1379309617935839321 || (otherRec.sym__0___45_4244869060837491615 != sym__0___45_4244869060837491615 || (otherRec.sym__0___45_6246622897322295949 != sym__0___45_6246622897322295949 || (otherRec.sym__0___45_7650291061553794259 != sym__0___45_7650291061553794259 || (otherRec.sym__0___45_1236860414731734564 != sym__0___45_1236860414731734564 || otherRec.sym__0___45_3875846966030338521 != sym__0___45_3875846966030338521))))))))))))))))))))))))))))))))))))))));
  }
  unsigned sym__0__4519803852684427543;
  fluidb_string<18> sym__0___45_4343360485772802425;
  fluidb_string<9> sym__0___45_4964707487098413267;
  fluidb_string<9> sym__0___45_4968176427635671902;
  unsigned sym__0___45_6976515134520023056;
  unsigned sym__0___45_6407986363906595150;
  fluidb_string<7> sym__0__7276429137656386527;
  unsigned sym__0__4221568001408061244;
  unsigned sym__0__5318835693872869311;
  unsigned sym__0___45_5662655200901224073;
  unsigned sym__0___45_3865525655503432699;
  unsigned sym__0__6565687540723274882;
  fluidb_string<15> sym__0__8756313061100779083;
  fluidb_string<2> sym__0__406217822861760083;
  fluidb_string<2> sym__0__6583192417747851262;
  fluidb_string<2> sym__0__6482281155504029302;
  fluidb_string<2> sym__0__7679621352908603000;
  unsigned sym__0___45_5057802021856473709;
  int sym__0___45_6839534157954023739;
  unsigned sym__0__3554709552784421197;
  unsigned sym__0___45_4889171900302414417;
  unsigned sym__0___45_4161758501735212672;
  unsigned sym__0___45_7938631388649493975;
  fluidb_string<21> sym__0___45_699785309432656128;
  unsigned sym__0___45_2045490810393326482;
  fluidb_string<10> sym__0__3215571782344721357;
  unsigned sym__0__7405671162454692029;
  double sym__0__2221693701692461459;
  unsigned sym__0___45_7916622968205270455;
  double sym__0___45_187379753214360613;
  unsigned sym__0__3625366936415753399;
  unsigned sym__0__8944804994507528308;
  double sym__0___45_5827336879747782262;
  fluidb_string<13> sym__0__1350428008193598418;
  unsigned sym__0__3585920367783378280;
  fluidb_string<25> sym__0___45_1379309617935839321;
  fluidb_string<40> sym__0___45_4244869060837491615;
  fluidb_string<16> sym__0___45_6246622897322295949;
  fluidb_string<16> sym__0___45_7650291061553794259;
  fluidb_string<13> sym__0___45_1236860414731734564;
  fluidb_string<15> sym__0___45_3875846966030338521;
 private:
};


class Record15 {
 public:
  Record15(unsigned __sym__0__2102316481828394123, fluidb_string<25> __sym__0__1780257040091145452, fluidb_string<40> __sym__0__3109939911660640430, fluidb_string<16> __sym__0___45_2175199227983174320, fluidb_string<16> __sym__0__2274992661292194562, fluidb_string<13> __sym__0___45_52536403880094569, fluidb_string<15> __sym__0__8474116574285927276, unsigned __sym__0__1835503384076924528, int __sym__0__586412267723269786, unsigned __sym__0__1353367320182642978, unsigned __sym__0___45_6351222752813626636, unsigned __sym__0___45_805067702695824989, unsigned __sym__0__914509637812701046, fluidb_string<21> __sym__0__7895450651221174051, unsigned __sym__0__5942285589324576545, fluidb_string<10> __sym__0__3979382234526804898, unsigned __sym__0___45_6103522369909819246, double __sym__0__1873148039180761712, unsigned __sym__0__1430551526674366102, double __sym__0__1048818672001592248, unsigned __sym__0__5723353836447658492, unsigned __sym__0___45_2233273278156881105, double __sym__0___45_1120880788595637835, fluidb_string<13> __sym__0___45_6361490230660137987, unsigned __sym__0___45_7131249874638266788, fluidb_string<18> __sym__0__7265729621635359692, fluidb_string<9> __sym__0___45_2986035740159621374, fluidb_string<9> __sym__0__5081664509798388941, unsigned __sym__0___45_8518596434939314413, unsigned __sym__0__1988221653138390749, fluidb_string<7> __sym__0___45_8801377200944175068, unsigned __sym__0___45_4634183629139578121, unsigned __sym__0__806472603637564420, unsigned __sym__0__1725829484083430844, unsigned __sym__0___45_5279274827282678566, unsigned __sym__0___45_9129247388617675603, fluidb_string<15> __sym__0__1232225844204183080, fluidb_string<2> __sym__0__9184663680502119984, fluidb_string<2> __sym__0___45_9023997483659527503, fluidb_string<2> __sym__0___45_1026604631201554135, fluidb_string<2> __sym__0___45_7189754320372197989) : sym__0__2102316481828394123(__sym__0__2102316481828394123), sym__0__1780257040091145452(__sym__0__1780257040091145452), sym__0__3109939911660640430(__sym__0__3109939911660640430), sym__0___45_2175199227983174320(__sym__0___45_2175199227983174320), sym__0__2274992661292194562(__sym__0__2274992661292194562), sym__0___45_52536403880094569(__sym__0___45_52536403880094569), sym__0__8474116574285927276(__sym__0__8474116574285927276), sym__0__1835503384076924528(__sym__0__1835503384076924528), sym__0__586412267723269786(__sym__0__586412267723269786), sym__0__1353367320182642978(__sym__0__1353367320182642978), sym__0___45_6351222752813626636(__sym__0___45_6351222752813626636), sym__0___45_805067702695824989(__sym__0___45_805067702695824989), sym__0__914509637812701046(__sym__0__914509637812701046), sym__0__7895450651221174051(__sym__0__7895450651221174051), sym__0__5942285589324576545(__sym__0__5942285589324576545), sym__0__3979382234526804898(__sym__0__3979382234526804898), sym__0___45_6103522369909819246(__sym__0___45_6103522369909819246), sym__0__1873148039180761712(__sym__0__1873148039180761712), sym__0__1430551526674366102(__sym__0__1430551526674366102), sym__0__1048818672001592248(__sym__0__1048818672001592248), sym__0__5723353836447658492(__sym__0__5723353836447658492), sym__0___45_2233273278156881105(__sym__0___45_2233273278156881105), sym__0___45_1120880788595637835(__sym__0___45_1120880788595637835), sym__0___45_6361490230660137987(__sym__0___45_6361490230660137987), sym__0___45_7131249874638266788(__sym__0___45_7131249874638266788), sym__0__7265729621635359692(__sym__0__7265729621635359692), sym__0___45_2986035740159621374(__sym__0___45_2986035740159621374), sym__0__5081664509798388941(__sym__0__5081664509798388941), sym__0___45_8518596434939314413(__sym__0___45_8518596434939314413), sym__0__1988221653138390749(__sym__0__1988221653138390749), sym__0___45_8801377200944175068(__sym__0___45_8801377200944175068), sym__0___45_4634183629139578121(__sym__0___45_4634183629139578121), sym__0__806472603637564420(__sym__0__806472603637564420), sym__0__1725829484083430844(__sym__0__1725829484083430844), sym__0___45_5279274827282678566(__sym__0___45_5279274827282678566), sym__0___45_9129247388617675603(__sym__0___45_9129247388617675603), sym__0__1232225844204183080(__sym__0__1232225844204183080), sym__0__9184663680502119984(__sym__0__9184663680502119984), sym__0___45_9023997483659527503(__sym__0___45_9023997483659527503), sym__0___45_1026604631201554135(__sym__0___45_1026604631201554135), sym__0___45_7189754320372197989(__sym__0___45_7189754320372197989)
  {
  }
  Record15() 
  {
  }
  std::string show() const{
    std::stringstream o;
    o << sym__0__2102316481828394123 << " | " << arrToString(sym__0__1780257040091145452) << " | " << arrToString(sym__0__3109939911660640430) << " | " << arrToString(sym__0___45_2175199227983174320) << " | " << arrToString(sym__0__2274992661292194562) << " | " << arrToString(sym__0___45_52536403880094569) << " | " << arrToString(sym__0__8474116574285927276) << " | " << sym__0__1835503384076924528 << " | " << sym__0__586412267723269786 << " | " << sym__0__1353367320182642978 << " | " << sym__0___45_6351222752813626636 << " | " << sym__0___45_805067702695824989 << " | " << sym__0__914509637812701046 << " | " << arrToString(sym__0__7895450651221174051) << " | " << sym__0__5942285589324576545 << " | " << arrToString(sym__0__3979382234526804898) << " | " << sym__0___45_6103522369909819246 << " | " << sym__0__1873148039180761712 << " | " << sym__0__1430551526674366102 << " | " << sym__0__1048818672001592248 << " | " << sym__0__5723353836447658492 << " | " << sym__0___45_2233273278156881105 << " | " << sym__0___45_1120880788595637835 << " | " << arrToString(sym__0___45_6361490230660137987) << " | " << sym__0___45_7131249874638266788 << " | " << arrToString(sym__0__7265729621635359692) << " | " << arrToString(sym__0___45_2986035740159621374) << " | " << arrToString(sym__0__5081664509798388941) << " | " << sym__0___45_8518596434939314413 << " | " << sym__0__1988221653138390749 << " | " << arrToString(sym__0___45_8801377200944175068) << " | " << sym__0___45_4634183629139578121 << " | " << sym__0__806472603637564420 << " | " << sym__0__1725829484083430844 << " | " << sym__0___45_5279274827282678566 << " | " << sym__0___45_9129247388617675603 << " | " << arrToString(sym__0__1232225844204183080) << " | " << arrToString(sym__0__9184663680502119984) << " | " << arrToString(sym__0___45_9023997483659527503) << " | " << arrToString(sym__0___45_1026604631201554135) << " | " << arrToString(sym__0___45_7189754320372197989);
    return o.str();
  }
  bool operator <(const Record15& otherRec) const{
    return (otherRec.sym__0__2102316481828394123 < sym__0__2102316481828394123 && (otherRec.sym__0__1780257040091145452 < sym__0__1780257040091145452 && (otherRec.sym__0__3109939911660640430 < sym__0__3109939911660640430 && (otherRec.sym__0___45_2175199227983174320 < sym__0___45_2175199227983174320 && (otherRec.sym__0__2274992661292194562 < sym__0__2274992661292194562 && (otherRec.sym__0___45_52536403880094569 < sym__0___45_52536403880094569 && (otherRec.sym__0__8474116574285927276 < sym__0__8474116574285927276 && (otherRec.sym__0__1835503384076924528 < sym__0__1835503384076924528 && (otherRec.sym__0__586412267723269786 < sym__0__586412267723269786 && (otherRec.sym__0__1353367320182642978 < sym__0__1353367320182642978 && (otherRec.sym__0___45_6351222752813626636 < sym__0___45_6351222752813626636 && (otherRec.sym__0___45_805067702695824989 < sym__0___45_805067702695824989 && (otherRec.sym__0__914509637812701046 < sym__0__914509637812701046 && (otherRec.sym__0__7895450651221174051 < sym__0__7895450651221174051 && (otherRec.sym__0__5942285589324576545 < sym__0__5942285589324576545 && (otherRec.sym__0__3979382234526804898 < sym__0__3979382234526804898 && (otherRec.sym__0___45_6103522369909819246 < sym__0___45_6103522369909819246 && (otherRec.sym__0__1873148039180761712 < sym__0__1873148039180761712 && (otherRec.sym__0__1430551526674366102 < sym__0__1430551526674366102 && (otherRec.sym__0__1048818672001592248 < sym__0__1048818672001592248 && (otherRec.sym__0__5723353836447658492 < sym__0__5723353836447658492 && (otherRec.sym__0___45_2233273278156881105 < sym__0___45_2233273278156881105 && (otherRec.sym__0___45_1120880788595637835 < sym__0___45_1120880788595637835 && (otherRec.sym__0___45_6361490230660137987 < sym__0___45_6361490230660137987 && (otherRec.sym__0___45_7131249874638266788 < sym__0___45_7131249874638266788 && (otherRec.sym__0__7265729621635359692 < sym__0__7265729621635359692 && (otherRec.sym__0___45_2986035740159621374 < sym__0___45_2986035740159621374 && (otherRec.sym__0__5081664509798388941 < sym__0__5081664509798388941 && (otherRec.sym__0___45_8518596434939314413 < sym__0___45_8518596434939314413 && (otherRec.sym__0__1988221653138390749 < sym__0__1988221653138390749 && (otherRec.sym__0___45_8801377200944175068 < sym__0___45_8801377200944175068 && (otherRec.sym__0___45_4634183629139578121 < sym__0___45_4634183629139578121 && (otherRec.sym__0__806472603637564420 < sym__0__806472603637564420 && (otherRec.sym__0__1725829484083430844 < sym__0__1725829484083430844 && (otherRec.sym__0___45_5279274827282678566 < sym__0___45_5279274827282678566 && (otherRec.sym__0___45_9129247388617675603 < sym__0___45_9129247388617675603 && (otherRec.sym__0__1232225844204183080 < sym__0__1232225844204183080 && (otherRec.sym__0__9184663680502119984 < sym__0__9184663680502119984 && (otherRec.sym__0___45_9023997483659527503 < sym__0___45_9023997483659527503 && (otherRec.sym__0___45_1026604631201554135 < sym__0___45_1026604631201554135 && otherRec.sym__0___45_7189754320372197989 < sym__0___45_7189754320372197989))))))))))))))))))))))))))))))))))))))));
  }
  bool operator ==(const Record15& otherRec) const{
    return (otherRec.sym__0__2102316481828394123 == sym__0__2102316481828394123 && (otherRec.sym__0__1780257040091145452 == sym__0__1780257040091145452 && (otherRec.sym__0__3109939911660640430 == sym__0__3109939911660640430 && (otherRec.sym__0___45_2175199227983174320 == sym__0___45_2175199227983174320 && (otherRec.sym__0__2274992661292194562 == sym__0__2274992661292194562 && (otherRec.sym__0___45_52536403880094569 == sym__0___45_52536403880094569 && (otherRec.sym__0__8474116574285927276 == sym__0__8474116574285927276 && (otherRec.sym__0__1835503384076924528 == sym__0__1835503384076924528 && (otherRec.sym__0__586412267723269786 == sym__0__586412267723269786 && (otherRec.sym__0__1353367320182642978 == sym__0__1353367320182642978 && (otherRec.sym__0___45_6351222752813626636 == sym__0___45_6351222752813626636 && (otherRec.sym__0___45_805067702695824989 == sym__0___45_805067702695824989 && (otherRec.sym__0__914509637812701046 == sym__0__914509637812701046 && (otherRec.sym__0__7895450651221174051 == sym__0__7895450651221174051 && (otherRec.sym__0__5942285589324576545 == sym__0__5942285589324576545 && (otherRec.sym__0__3979382234526804898 == sym__0__3979382234526804898 && (otherRec.sym__0___45_6103522369909819246 == sym__0___45_6103522369909819246 && (otherRec.sym__0__1873148039180761712 == sym__0__1873148039180761712 && (otherRec.sym__0__1430551526674366102 == sym__0__1430551526674366102 && (otherRec.sym__0__1048818672001592248 == sym__0__1048818672001592248 && (otherRec.sym__0__5723353836447658492 == sym__0__5723353836447658492 && (otherRec.sym__0___45_2233273278156881105 == sym__0___45_2233273278156881105 && (otherRec.sym__0___45_1120880788595637835 == sym__0___45_1120880788595637835 && (otherRec.sym__0___45_6361490230660137987 == sym__0___45_6361490230660137987 && (otherRec.sym__0___45_7131249874638266788 == sym__0___45_7131249874638266788 && (otherRec.sym__0__7265729621635359692 == sym__0__7265729621635359692 && (otherRec.sym__0___45_2986035740159621374 == sym__0___45_2986035740159621374 && (otherRec.sym__0__5081664509798388941 == sym__0__5081664509798388941 && (otherRec.sym__0___45_8518596434939314413 == sym__0___45_8518596434939314413 && (otherRec.sym__0__1988221653138390749 == sym__0__1988221653138390749 && (otherRec.sym__0___45_8801377200944175068 == sym__0___45_8801377200944175068 && (otherRec.sym__0___45_4634183629139578121 == sym__0___45_4634183629139578121 && (otherRec.sym__0__806472603637564420 == sym__0__806472603637564420 && (otherRec.sym__0__1725829484083430844 == sym__0__1725829484083430844 && (otherRec.sym__0___45_5279274827282678566 == sym__0___45_5279274827282678566 && (otherRec.sym__0___45_9129247388617675603 == sym__0___45_9129247388617675603 && (otherRec.sym__0__1232225844204183080 == sym__0__1232225844204183080 && (otherRec.sym__0__9184663680502119984 == sym__0__9184663680502119984 && (otherRec.sym__0___45_9023997483659527503 == sym__0___45_9023997483659527503 && (otherRec.sym__0___45_1026604631201554135 == sym__0___45_1026604631201554135 && otherRec.sym__0___45_7189754320372197989 == sym__0___45_7189754320372197989))))))))))))))))))))))))))))))))))))))));
  }
  bool operator !=(const Record15& otherRec) const{
    return (otherRec.sym__0__2102316481828394123 != sym__0__2102316481828394123 || (otherRec.sym__0__1780257040091145452 != sym__0__1780257040091145452 || (otherRec.sym__0__3109939911660640430 != sym__0__3109939911660640430 || (otherRec.sym__0___45_2175199227983174320 != sym__0___45_2175199227983174320 || (otherRec.sym__0__2274992661292194562 != sym__0__2274992661292194562 || (otherRec.sym__0___45_52536403880094569 != sym__0___45_52536403880094569 || (otherRec.sym__0__8474116574285927276 != sym__0__8474116574285927276 || (otherRec.sym__0__1835503384076924528 != sym__0__1835503384076924528 || (otherRec.sym__0__586412267723269786 != sym__0__586412267723269786 || (otherRec.sym__0__1353367320182642978 != sym__0__1353367320182642978 || (otherRec.sym__0___45_6351222752813626636 != sym__0___45_6351222752813626636 || (otherRec.sym__0___45_805067702695824989 != sym__0___45_805067702695824989 || (otherRec.sym__0__914509637812701046 != sym__0__914509637812701046 || (otherRec.sym__0__7895450651221174051 != sym__0__7895450651221174051 || (otherRec.sym__0__5942285589324576545 != sym__0__5942285589324576545 || (otherRec.sym__0__3979382234526804898 != sym__0__3979382234526804898 || (otherRec.sym__0___45_6103522369909819246 != sym__0___45_6103522369909819246 || (otherRec.sym__0__1873148039180761712 != sym__0__1873148039180761712 || (otherRec.sym__0__1430551526674366102 != sym__0__1430551526674366102 || (otherRec.sym__0__1048818672001592248 != sym__0__1048818672001592248 || (otherRec.sym__0__5723353836447658492 != sym__0__5723353836447658492 || (otherRec.sym__0___45_2233273278156881105 != sym__0___45_2233273278156881105 || (otherRec.sym__0___45_1120880788595637835 != sym__0___45_1120880788595637835 || (otherRec.sym__0___45_6361490230660137987 != sym__0___45_6361490230660137987 || (otherRec.sym__0___45_7131249874638266788 != sym__0___45_7131249874638266788 || (otherRec.sym__0__7265729621635359692 != sym__0__7265729621635359692 || (otherRec.sym__0___45_2986035740159621374 != sym__0___45_2986035740159621374 || (otherRec.sym__0__5081664509798388941 != sym__0__5081664509798388941 || (otherRec.sym__0___45_8518596434939314413 != sym__0___45_8518596434939314413 || (otherRec.sym__0__1988221653138390749 != sym__0__1988221653138390749 || (otherRec.sym__0___45_8801377200944175068 != sym__0___45_8801377200944175068 || (otherRec.sym__0___45_4634183629139578121 != sym__0___45_4634183629139578121 || (otherRec.sym__0__806472603637564420 != sym__0__806472603637564420 || (otherRec.sym__0__1725829484083430844 != sym__0__1725829484083430844 || (otherRec.sym__0___45_5279274827282678566 != sym__0___45_5279274827282678566 || (otherRec.sym__0___45_9129247388617675603 != sym__0___45_9129247388617675603 || (otherRec.sym__0__1232225844204183080 != sym__0__1232225844204183080 || (otherRec.sym__0__9184663680502119984 != sym__0__9184663680502119984 || (otherRec.sym__0___45_9023997483659527503 != sym__0___45_9023997483659527503 || (otherRec.sym__0___45_1026604631201554135 != sym__0___45_1026604631201554135 || otherRec.sym__0___45_7189754320372197989 != sym__0___45_7189754320372197989))))))))))))))))))))))))))))))))))))))));
  }
  unsigned sym__0__2102316481828394123;
  fluidb_string<25> sym__0__1780257040091145452;
  fluidb_string<40> sym__0__3109939911660640430;
  fluidb_string<16> sym__0___45_2175199227983174320;
  fluidb_string<16> sym__0__2274992661292194562;
  fluidb_string<13> sym__0___45_52536403880094569;
  fluidb_string<15> sym__0__8474116574285927276;
  unsigned sym__0__1835503384076924528;
  int sym__0__586412267723269786;
  unsigned sym__0__1353367320182642978;
  unsigned sym__0___45_6351222752813626636;
  unsigned sym__0___45_805067702695824989;
  unsigned sym__0__914509637812701046;
  fluidb_string<21> sym__0__7895450651221174051;
  unsigned sym__0__5942285589324576545;
  fluidb_string<10> sym__0__3979382234526804898;
  unsigned sym__0___45_6103522369909819246;
  double sym__0__1873148039180761712;
  unsigned sym__0__1430551526674366102;
  double sym__0__1048818672001592248;
  unsigned sym__0__5723353836447658492;
  unsigned sym__0___45_2233273278156881105;
  double sym__0___45_1120880788595637835;
  fluidb_string<13> sym__0___45_6361490230660137987;
  unsigned sym__0___45_7131249874638266788;
  fluidb_string<18> sym__0__7265729621635359692;
  fluidb_string<9> sym__0___45_2986035740159621374;
  fluidb_string<9> sym__0__5081664509798388941;
  unsigned sym__0___45_8518596434939314413;
  unsigned sym__0__1988221653138390749;
  fluidb_string<7> sym__0___45_8801377200944175068;
  unsigned sym__0___45_4634183629139578121;
  unsigned sym__0__806472603637564420;
  unsigned sym__0__1725829484083430844;
  unsigned sym__0___45_5279274827282678566;
  unsigned sym__0___45_9129247388617675603;
  fluidb_string<15> sym__0__1232225844204183080;
  fluidb_string<2> sym__0__9184663680502119984;
  fluidb_string<2> sym__0___45_9023997483659527503;
  fluidb_string<2> sym__0___45_1026604631201554135;
  fluidb_string<2> sym__0___45_7189754320372197989;
 private:
};


class Record14 {
 public:
  Record14(unsigned __sym__0___45_3961143035674407474, fluidb_string<18> __sym__0___45_6251899802584687138, fluidb_string<9> __sym__0__7895704682370371792, fluidb_string<9> __sym__0___45_4486276699369081973, unsigned __sym__0__1119005997298974989, unsigned __sym__0__3623076037790620667, fluidb_string<7> __sym__0___45_369211045765545994, unsigned __sym__0___45_2252349090140989903, unsigned __sym__0___45_6519715028980934506, unsigned __sym__0__6988144115678218478, unsigned __sym__0__1168585672581702408, unsigned __sym__0___45_1566345155802505557, fluidb_string<15> __sym__0___45_3812637469976556790, fluidb_string<2> __sym__0___45_2398128448016703502, fluidb_string<2> __sym__0__5574729781191990975, fluidb_string<2> __sym__0___45_5962954882039921225, fluidb_string<2> __sym__0___45_7276734914968453131, unsigned __sym__0__5341165382232817970, int __sym__0__5806605655987033032, unsigned __sym__0___45_6623407408063066704, unsigned __sym__0___45_1670026162273154778, unsigned __sym__0__2289386367904588797, unsigned __sym__0__8025829587274267860, fluidb_string<21> __sym__0__454237065112775549, unsigned __sym__0__608217599158647375, fluidb_string<10> __sym__0__4347069016709593136, unsigned __sym__0__4553650632168714688, double __sym__0__586349573025064242, unsigned __sym__0__144523031940788660, double __sym__0__2942207309637238010, unsigned __sym__0__1782085603058736686, unsigned __sym__0__3001704397998344329, double __sym__0___45_2662583778072919661, fluidb_string<13> __sym__0__8853539013824041307) : sym__0___45_3961143035674407474(__sym__0___45_3961143035674407474), sym__0___45_6251899802584687138(__sym__0___45_6251899802584687138), sym__0__7895704682370371792(__sym__0__7895704682370371792), sym__0___45_4486276699369081973(__sym__0___45_4486276699369081973), sym__0__1119005997298974989(__sym__0__1119005997298974989), sym__0__3623076037790620667(__sym__0__3623076037790620667), sym__0___45_369211045765545994(__sym__0___45_369211045765545994), sym__0___45_2252349090140989903(__sym__0___45_2252349090140989903), sym__0___45_6519715028980934506(__sym__0___45_6519715028980934506), sym__0__6988144115678218478(__sym__0__6988144115678218478), sym__0__1168585672581702408(__sym__0__1168585672581702408), sym__0___45_1566345155802505557(__sym__0___45_1566345155802505557), sym__0___45_3812637469976556790(__sym__0___45_3812637469976556790), sym__0___45_2398128448016703502(__sym__0___45_2398128448016703502), sym__0__5574729781191990975(__sym__0__5574729781191990975), sym__0___45_5962954882039921225(__sym__0___45_5962954882039921225), sym__0___45_7276734914968453131(__sym__0___45_7276734914968453131), sym__0__5341165382232817970(__sym__0__5341165382232817970), sym__0__5806605655987033032(__sym__0__5806605655987033032), sym__0___45_6623407408063066704(__sym__0___45_6623407408063066704), sym__0___45_1670026162273154778(__sym__0___45_1670026162273154778), sym__0__2289386367904588797(__sym__0__2289386367904588797), sym__0__8025829587274267860(__sym__0__8025829587274267860), sym__0__454237065112775549(__sym__0__454237065112775549), sym__0__608217599158647375(__sym__0__608217599158647375), sym__0__4347069016709593136(__sym__0__4347069016709593136), sym__0__4553650632168714688(__sym__0__4553650632168714688), sym__0__586349573025064242(__sym__0__586349573025064242), sym__0__144523031940788660(__sym__0__144523031940788660), sym__0__2942207309637238010(__sym__0__2942207309637238010), sym__0__1782085603058736686(__sym__0__1782085603058736686), sym__0__3001704397998344329(__sym__0__3001704397998344329), sym__0___45_2662583778072919661(__sym__0___45_2662583778072919661), sym__0__8853539013824041307(__sym__0__8853539013824041307)
  {
  }
  Record14() 
  {
  }
  std::string show() const{
    std::stringstream o;
    o << sym__0___45_3961143035674407474 << " | " << arrToString(sym__0___45_6251899802584687138) << " | " << arrToString(sym__0__7895704682370371792) << " | " << arrToString(sym__0___45_4486276699369081973) << " | " << sym__0__1119005997298974989 << " | " << sym__0__3623076037790620667 << " | " << arrToString(sym__0___45_369211045765545994) << " | " << sym__0___45_2252349090140989903 << " | " << sym__0___45_6519715028980934506 << " | " << sym__0__6988144115678218478 << " | " << sym__0__1168585672581702408 << " | " << sym__0___45_1566345155802505557 << " | " << arrToString(sym__0___45_3812637469976556790) << " | " << arrToString(sym__0___45_2398128448016703502) << " | " << arrToString(sym__0__5574729781191990975) << " | " << arrToString(sym__0___45_5962954882039921225) << " | " << arrToString(sym__0___45_7276734914968453131) << " | " << sym__0__5341165382232817970 << " | " << sym__0__5806605655987033032 << " | " << sym__0___45_6623407408063066704 << " | " << sym__0___45_1670026162273154778 << " | " << sym__0__2289386367904588797 << " | " << sym__0__8025829587274267860 << " | " << arrToString(sym__0__454237065112775549) << " | " << sym__0__608217599158647375 << " | " << arrToString(sym__0__4347069016709593136) << " | " << sym__0__4553650632168714688 << " | " << sym__0__586349573025064242 << " | " << sym__0__144523031940788660 << " | " << sym__0__2942207309637238010 << " | " << sym__0__1782085603058736686 << " | " << sym__0__3001704397998344329 << " | " << sym__0___45_2662583778072919661 << " | " << arrToString(sym__0__8853539013824041307);
    return o.str();
  }
  bool operator <(const Record14& otherRec) const{
    return (otherRec.sym__0___45_3961143035674407474 < sym__0___45_3961143035674407474 && (otherRec.sym__0___45_6251899802584687138 < sym__0___45_6251899802584687138 && (otherRec.sym__0__7895704682370371792 < sym__0__7895704682370371792 && (otherRec.sym__0___45_4486276699369081973 < sym__0___45_4486276699369081973 && (otherRec.sym__0__1119005997298974989 < sym__0__1119005997298974989 && (otherRec.sym__0__3623076037790620667 < sym__0__3623076037790620667 && (otherRec.sym__0___45_369211045765545994 < sym__0___45_369211045765545994 && (otherRec.sym__0___45_2252349090140989903 < sym__0___45_2252349090140989903 && (otherRec.sym__0___45_6519715028980934506 < sym__0___45_6519715028980934506 && (otherRec.sym__0__6988144115678218478 < sym__0__6988144115678218478 && (otherRec.sym__0__1168585672581702408 < sym__0__1168585672581702408 && (otherRec.sym__0___45_1566345155802505557 < sym__0___45_1566345155802505557 && (otherRec.sym__0___45_3812637469976556790 < sym__0___45_3812637469976556790 && (otherRec.sym__0___45_2398128448016703502 < sym__0___45_2398128448016703502 && (otherRec.sym__0__5574729781191990975 < sym__0__5574729781191990975 && (otherRec.sym__0___45_5962954882039921225 < sym__0___45_5962954882039921225 && (otherRec.sym__0___45_7276734914968453131 < sym__0___45_7276734914968453131 && (otherRec.sym__0__5341165382232817970 < sym__0__5341165382232817970 && (otherRec.sym__0__5806605655987033032 < sym__0__5806605655987033032 && (otherRec.sym__0___45_6623407408063066704 < sym__0___45_6623407408063066704 && (otherRec.sym__0___45_1670026162273154778 < sym__0___45_1670026162273154778 && (otherRec.sym__0__2289386367904588797 < sym__0__2289386367904588797 && (otherRec.sym__0__8025829587274267860 < sym__0__8025829587274267860 && (otherRec.sym__0__454237065112775549 < sym__0__454237065112775549 && (otherRec.sym__0__608217599158647375 < sym__0__608217599158647375 && (otherRec.sym__0__4347069016709593136 < sym__0__4347069016709593136 && (otherRec.sym__0__4553650632168714688 < sym__0__4553650632168714688 && (otherRec.sym__0__586349573025064242 < sym__0__586349573025064242 && (otherRec.sym__0__144523031940788660 < sym__0__144523031940788660 && (otherRec.sym__0__2942207309637238010 < sym__0__2942207309637238010 && (otherRec.sym__0__1782085603058736686 < sym__0__1782085603058736686 && (otherRec.sym__0__3001704397998344329 < sym__0__3001704397998344329 && (otherRec.sym__0___45_2662583778072919661 < sym__0___45_2662583778072919661 && otherRec.sym__0__8853539013824041307 < sym__0__8853539013824041307)))))))))))))))))))))))))))))))));
  }
  bool operator ==(const Record14& otherRec) const{
    return (otherRec.sym__0___45_3961143035674407474 == sym__0___45_3961143035674407474 && (otherRec.sym__0___45_6251899802584687138 == sym__0___45_6251899802584687138 && (otherRec.sym__0__7895704682370371792 == sym__0__7895704682370371792 && (otherRec.sym__0___45_4486276699369081973 == sym__0___45_4486276699369081973 && (otherRec.sym__0__1119005997298974989 == sym__0__1119005997298974989 && (otherRec.sym__0__3623076037790620667 == sym__0__3623076037790620667 && (otherRec.sym__0___45_369211045765545994 == sym__0___45_369211045765545994 && (otherRec.sym__0___45_2252349090140989903 == sym__0___45_2252349090140989903 && (otherRec.sym__0___45_6519715028980934506 == sym__0___45_6519715028980934506 && (otherRec.sym__0__6988144115678218478 == sym__0__6988144115678218478 && (otherRec.sym__0__1168585672581702408 == sym__0__1168585672581702408 && (otherRec.sym__0___45_1566345155802505557 == sym__0___45_1566345155802505557 && (otherRec.sym__0___45_3812637469976556790 == sym__0___45_3812637469976556790 && (otherRec.sym__0___45_2398128448016703502 == sym__0___45_2398128448016703502 && (otherRec.sym__0__5574729781191990975 == sym__0__5574729781191990975 && (otherRec.sym__0___45_5962954882039921225 == sym__0___45_5962954882039921225 && (otherRec.sym__0___45_7276734914968453131 == sym__0___45_7276734914968453131 && (otherRec.sym__0__5341165382232817970 == sym__0__5341165382232817970 && (otherRec.sym__0__5806605655987033032 == sym__0__5806605655987033032 && (otherRec.sym__0___45_6623407408063066704 == sym__0___45_6623407408063066704 && (otherRec.sym__0___45_1670026162273154778 == sym__0___45_1670026162273154778 && (otherRec.sym__0__2289386367904588797 == sym__0__2289386367904588797 && (otherRec.sym__0__8025829587274267860 == sym__0__8025829587274267860 && (otherRec.sym__0__454237065112775549 == sym__0__454237065112775549 && (otherRec.sym__0__608217599158647375 == sym__0__608217599158647375 && (otherRec.sym__0__4347069016709593136 == sym__0__4347069016709593136 && (otherRec.sym__0__4553650632168714688 == sym__0__4553650632168714688 && (otherRec.sym__0__586349573025064242 == sym__0__586349573025064242 && (otherRec.sym__0__144523031940788660 == sym__0__144523031940788660 && (otherRec.sym__0__2942207309637238010 == sym__0__2942207309637238010 && (otherRec.sym__0__1782085603058736686 == sym__0__1782085603058736686 && (otherRec.sym__0__3001704397998344329 == sym__0__3001704397998344329 && (otherRec.sym__0___45_2662583778072919661 == sym__0___45_2662583778072919661 && otherRec.sym__0__8853539013824041307 == sym__0__8853539013824041307)))))))))))))))))))))))))))))))));
  }
  bool operator !=(const Record14& otherRec) const{
    return (otherRec.sym__0___45_3961143035674407474 != sym__0___45_3961143035674407474 || (otherRec.sym__0___45_6251899802584687138 != sym__0___45_6251899802584687138 || (otherRec.sym__0__7895704682370371792 != sym__0__7895704682370371792 || (otherRec.sym__0___45_4486276699369081973 != sym__0___45_4486276699369081973 || (otherRec.sym__0__1119005997298974989 != sym__0__1119005997298974989 || (otherRec.sym__0__3623076037790620667 != sym__0__3623076037790620667 || (otherRec.sym__0___45_369211045765545994 != sym__0___45_369211045765545994 || (otherRec.sym__0___45_2252349090140989903 != sym__0___45_2252349090140989903 || (otherRec.sym__0___45_6519715028980934506 != sym__0___45_6519715028980934506 || (otherRec.sym__0__6988144115678218478 != sym__0__6988144115678218478 || (otherRec.sym__0__1168585672581702408 != sym__0__1168585672581702408 || (otherRec.sym__0___45_1566345155802505557 != sym__0___45_1566345155802505557 || (otherRec.sym__0___45_3812637469976556790 != sym__0___45_3812637469976556790 || (otherRec.sym__0___45_2398128448016703502 != sym__0___45_2398128448016703502 || (otherRec.sym__0__5574729781191990975 != sym__0__5574729781191990975 || (otherRec.sym__0___45_5962954882039921225 != sym__0___45_5962954882039921225 || (otherRec.sym__0___45_7276734914968453131 != sym__0___45_7276734914968453131 || (otherRec.sym__0__5341165382232817970 != sym__0__5341165382232817970 || (otherRec.sym__0__5806605655987033032 != sym__0__5806605655987033032 || (otherRec.sym__0___45_6623407408063066704 != sym__0___45_6623407408063066704 || (otherRec.sym__0___45_1670026162273154778 != sym__0___45_1670026162273154778 || (otherRec.sym__0__2289386367904588797 != sym__0__2289386367904588797 || (otherRec.sym__0__8025829587274267860 != sym__0__8025829587274267860 || (otherRec.sym__0__454237065112775549 != sym__0__454237065112775549 || (otherRec.sym__0__608217599158647375 != sym__0__608217599158647375 || (otherRec.sym__0__4347069016709593136 != sym__0__4347069016709593136 || (otherRec.sym__0__4553650632168714688 != sym__0__4553650632168714688 || (otherRec.sym__0__586349573025064242 != sym__0__586349573025064242 || (otherRec.sym__0__144523031940788660 != sym__0__144523031940788660 || (otherRec.sym__0__2942207309637238010 != sym__0__2942207309637238010 || (otherRec.sym__0__1782085603058736686 != sym__0__1782085603058736686 || (otherRec.sym__0__3001704397998344329 != sym__0__3001704397998344329 || (otherRec.sym__0___45_2662583778072919661 != sym__0___45_2662583778072919661 || otherRec.sym__0__8853539013824041307 != sym__0__8853539013824041307)))))))))))))))))))))))))))))))));
  }
  unsigned sym__0___45_3961143035674407474;
  fluidb_string<18> sym__0___45_6251899802584687138;
  fluidb_string<9> sym__0__7895704682370371792;
  fluidb_string<9> sym__0___45_4486276699369081973;
  unsigned sym__0__1119005997298974989;
  unsigned sym__0__3623076037790620667;
  fluidb_string<7> sym__0___45_369211045765545994;
  unsigned sym__0___45_2252349090140989903;
  unsigned sym__0___45_6519715028980934506;
  unsigned sym__0__6988144115678218478;
  unsigned sym__0__1168585672581702408;
  unsigned sym__0___45_1566345155802505557;
  fluidb_string<15> sym__0___45_3812637469976556790;
  fluidb_string<2> sym__0___45_2398128448016703502;
  fluidb_string<2> sym__0__5574729781191990975;
  fluidb_string<2> sym__0___45_5962954882039921225;
  fluidb_string<2> sym__0___45_7276734914968453131;
  unsigned sym__0__5341165382232817970;
  int sym__0__5806605655987033032;
  unsigned sym__0___45_6623407408063066704;
  unsigned sym__0___45_1670026162273154778;
  unsigned sym__0__2289386367904588797;
  unsigned sym__0__8025829587274267860;
  fluidb_string<21> sym__0__454237065112775549;
  unsigned sym__0__608217599158647375;
  fluidb_string<10> sym__0__4347069016709593136;
  unsigned sym__0__4553650632168714688;
  double sym__0__586349573025064242;
  unsigned sym__0__144523031940788660;
  double sym__0__2942207309637238010;
  unsigned sym__0__1782085603058736686;
  unsigned sym__0__3001704397998344329;
  double sym__0___45_2662583778072919661;
  fluidb_string<13> sym__0__8853539013824041307;
 private:
};


class Record4 {
 public:
  Record4(unsigned __sym__0__59163526776084807, fluidb_string<18> __sym__0___45_1313357857405786385, fluidb_string<40> __sym__0__1337312907475566789, fluidb_string<11> __sym__0__8014013609240026595, fluidb_string<15> __sym__0___45_4888925151068446247, fluidb_string<13> __sym__0__661408193145534136, fluidb_string<15> __sym__0___45_7159405632382799505, fluidb_string<21> __sym__0___45_7793359246716293237) : sym__0__59163526776084807(__sym__0__59163526776084807), sym__0___45_1313357857405786385(__sym__0___45_1313357857405786385), sym__0__1337312907475566789(__sym__0__1337312907475566789), sym__0__8014013609240026595(__sym__0__8014013609240026595), sym__0___45_4888925151068446247(__sym__0___45_4888925151068446247), sym__0__661408193145534136(__sym__0__661408193145534136), sym__0___45_7159405632382799505(__sym__0___45_7159405632382799505), sym__0___45_7793359246716293237(__sym__0___45_7793359246716293237)
  {
  }
  Record4() 
  {
  }
  std::string show() const{
    std::stringstream o;
    o << sym__0__59163526776084807 << " | " << arrToString(sym__0___45_1313357857405786385) << " | " << arrToString(sym__0__1337312907475566789) << " | " << arrToString(sym__0__8014013609240026595) << " | " << arrToString(sym__0___45_4888925151068446247) << " | " << arrToString(sym__0__661408193145534136) << " | " << arrToString(sym__0___45_7159405632382799505) << " | " << arrToString(sym__0___45_7793359246716293237);
    return o.str();
  }
  bool operator <(const Record4& otherRec) const{
    return (otherRec.sym__0__59163526776084807 < sym__0__59163526776084807 && (otherRec.sym__0___45_1313357857405786385 < sym__0___45_1313357857405786385 && (otherRec.sym__0__1337312907475566789 < sym__0__1337312907475566789 && (otherRec.sym__0__8014013609240026595 < sym__0__8014013609240026595 && (otherRec.sym__0___45_4888925151068446247 < sym__0___45_4888925151068446247 && (otherRec.sym__0__661408193145534136 < sym__0__661408193145534136 && (otherRec.sym__0___45_7159405632382799505 < sym__0___45_7159405632382799505 && otherRec.sym__0___45_7793359246716293237 < sym__0___45_7793359246716293237)))))));
  }
  bool operator ==(const Record4& otherRec) const{
    return (otherRec.sym__0__59163526776084807 == sym__0__59163526776084807 && (otherRec.sym__0___45_1313357857405786385 == sym__0___45_1313357857405786385 && (otherRec.sym__0__1337312907475566789 == sym__0__1337312907475566789 && (otherRec.sym__0__8014013609240026595 == sym__0__8014013609240026595 && (otherRec.sym__0___45_4888925151068446247 == sym__0___45_4888925151068446247 && (otherRec.sym__0__661408193145534136 == sym__0__661408193145534136 && (otherRec.sym__0___45_7159405632382799505 == sym__0___45_7159405632382799505 && otherRec.sym__0___45_7793359246716293237 == sym__0___45_7793359246716293237)))))));
  }
  bool operator !=(const Record4& otherRec) const{
    return (otherRec.sym__0__59163526776084807 != sym__0__59163526776084807 || (otherRec.sym__0___45_1313357857405786385 != sym__0___45_1313357857405786385 || (otherRec.sym__0__1337312907475566789 != sym__0__1337312907475566789 || (otherRec.sym__0__8014013609240026595 != sym__0__8014013609240026595 || (otherRec.sym__0___45_4888925151068446247 != sym__0___45_4888925151068446247 || (otherRec.sym__0__661408193145534136 != sym__0__661408193145534136 || (otherRec.sym__0___45_7159405632382799505 != sym__0___45_7159405632382799505 || otherRec.sym__0___45_7793359246716293237 != sym__0___45_7793359246716293237)))))));
  }
  unsigned sym__0__59163526776084807;
  fluidb_string<18> sym__0___45_1313357857405786385;
  fluidb_string<40> sym__0__1337312907475566789;
  fluidb_string<11> sym__0__8014013609240026595;
  fluidb_string<15> sym__0___45_4888925151068446247;
  fluidb_string<13> sym__0__661408193145534136;
  fluidb_string<15> sym__0___45_7159405632382799505;
  fluidb_string<21> sym__0___45_7793359246716293237;
 private:
};


class Record10 {
 public:
  Record10(unsigned __sym__0___45_9117911789383871612, fluidb_string<25> __sym__0___45_1547112764757372609, fluidb_string<40> __sym__0___45_8663957751614366179, fluidb_string<16> __sym__0__1466641425010216931, fluidb_string<16> __sym__0__3672857626658041553, fluidb_string<13> __sym__0___45_3362440237381592032, fluidb_string<15> __sym__0___45_6631364176934158657) : sym__0___45_9117911789383871612(__sym__0___45_9117911789383871612), sym__0___45_1547112764757372609(__sym__0___45_1547112764757372609), sym__0___45_8663957751614366179(__sym__0___45_8663957751614366179), sym__0__1466641425010216931(__sym__0__1466641425010216931), sym__0__3672857626658041553(__sym__0__3672857626658041553), sym__0___45_3362440237381592032(__sym__0___45_3362440237381592032), sym__0___45_6631364176934158657(__sym__0___45_6631364176934158657)
  {
  }
  Record10() 
  {
  }
  std::string show() const{
    std::stringstream o;
    o << sym__0___45_9117911789383871612 << " | " << arrToString(sym__0___45_1547112764757372609) << " | " << arrToString(sym__0___45_8663957751614366179) << " | " << arrToString(sym__0__1466641425010216931) << " | " << arrToString(sym__0__3672857626658041553) << " | " << arrToString(sym__0___45_3362440237381592032) << " | " << arrToString(sym__0___45_6631364176934158657);
    return o.str();
  }
  bool operator <(const Record10& otherRec) const{
    return (otherRec.sym__0___45_9117911789383871612 < sym__0___45_9117911789383871612 && (otherRec.sym__0___45_1547112764757372609 < sym__0___45_1547112764757372609 && (otherRec.sym__0___45_8663957751614366179 < sym__0___45_8663957751614366179 && (otherRec.sym__0__1466641425010216931 < sym__0__1466641425010216931 && (otherRec.sym__0__3672857626658041553 < sym__0__3672857626658041553 && (otherRec.sym__0___45_3362440237381592032 < sym__0___45_3362440237381592032 && otherRec.sym__0___45_6631364176934158657 < sym__0___45_6631364176934158657))))));
  }
  bool operator ==(const Record10& otherRec) const{
    return (otherRec.sym__0___45_9117911789383871612 == sym__0___45_9117911789383871612 && (otherRec.sym__0___45_1547112764757372609 == sym__0___45_1547112764757372609 && (otherRec.sym__0___45_8663957751614366179 == sym__0___45_8663957751614366179 && (otherRec.sym__0__1466641425010216931 == sym__0__1466641425010216931 && (otherRec.sym__0__3672857626658041553 == sym__0__3672857626658041553 && (otherRec.sym__0___45_3362440237381592032 == sym__0___45_3362440237381592032 && otherRec.sym__0___45_6631364176934158657 == sym__0___45_6631364176934158657))))));
  }
  bool operator !=(const Record10& otherRec) const{
    return (otherRec.sym__0___45_9117911789383871612 != sym__0___45_9117911789383871612 || (otherRec.sym__0___45_1547112764757372609 != sym__0___45_1547112764757372609 || (otherRec.sym__0___45_8663957751614366179 != sym__0___45_8663957751614366179 || (otherRec.sym__0__1466641425010216931 != sym__0__1466641425010216931 || (otherRec.sym__0__3672857626658041553 != sym__0__3672857626658041553 || (otherRec.sym__0___45_3362440237381592032 != sym__0___45_3362440237381592032 || otherRec.sym__0___45_6631364176934158657 != sym__0___45_6631364176934158657))))));
  }
  unsigned sym__0___45_9117911789383871612;
  fluidb_string<25> sym__0___45_1547112764757372609;
  fluidb_string<40> sym__0___45_8663957751614366179;
  fluidb_string<16> sym__0__1466641425010216931;
  fluidb_string<16> sym__0__3672857626658041553;
  fluidb_string<13> sym__0___45_3362440237381592032;
  fluidb_string<15> sym__0___45_6631364176934158657;
 private:
};


class Record7 {
 public:
  Record7(unsigned __sym__0__9004647469590526899, fluidb_string<18> __sym__0___45_1621348641261898005, fluidb_string<40> __sym__0__614427126981106829, fluidb_string<11> __sym__0___45_2454293820925122065, fluidb_string<15> __sym__0__6553227872838818177, fluidb_string<13> __sym__0___45_4248174812301520048, fluidb_string<15> __sym__0___45_3914904628387332757, fluidb_string<21> __sym__0___45_5446426298209956761, unsigned __sym__0___45_2558673723420522753, int __sym__0___45_3519351712545876895, unsigned __sym__0___45_1754306014800131719, unsigned __sym__0__6212025267607306819, unsigned __sym__0__2772749593389396148, unsigned __sym__0___45_4019035565219397859, fluidb_string<21> __sym__0___45_6819607202635958988, unsigned __sym__0__4920008974061631994, fluidb_string<10> __sym__0___45_8128105244823042823, unsigned __sym__0___45_2374853137558343895, double __sym__0__930686933803596543, unsigned __sym__0__5145129428883827325, double __sym__0__1860202553700236407, unsigned __sym__0___45_20127004494246501, unsigned __sym__0___45_3013783536855820064, double __sym__0___45_288503368240108258, fluidb_string<13> __sym__0___45_2265690738963363690) : sym__0__9004647469590526899(__sym__0__9004647469590526899), sym__0___45_1621348641261898005(__sym__0___45_1621348641261898005), sym__0__614427126981106829(__sym__0__614427126981106829), sym__0___45_2454293820925122065(__sym__0___45_2454293820925122065), sym__0__6553227872838818177(__sym__0__6553227872838818177), sym__0___45_4248174812301520048(__sym__0___45_4248174812301520048), sym__0___45_3914904628387332757(__sym__0___45_3914904628387332757), sym__0___45_5446426298209956761(__sym__0___45_5446426298209956761), sym__0___45_2558673723420522753(__sym__0___45_2558673723420522753), sym__0___45_3519351712545876895(__sym__0___45_3519351712545876895), sym__0___45_1754306014800131719(__sym__0___45_1754306014800131719), sym__0__6212025267607306819(__sym__0__6212025267607306819), sym__0__2772749593389396148(__sym__0__2772749593389396148), sym__0___45_4019035565219397859(__sym__0___45_4019035565219397859), sym__0___45_6819607202635958988(__sym__0___45_6819607202635958988), sym__0__4920008974061631994(__sym__0__4920008974061631994), sym__0___45_8128105244823042823(__sym__0___45_8128105244823042823), sym__0___45_2374853137558343895(__sym__0___45_2374853137558343895), sym__0__930686933803596543(__sym__0__930686933803596543), sym__0__5145129428883827325(__sym__0__5145129428883827325), sym__0__1860202553700236407(__sym__0__1860202553700236407), sym__0___45_20127004494246501(__sym__0___45_20127004494246501), sym__0___45_3013783536855820064(__sym__0___45_3013783536855820064), sym__0___45_288503368240108258(__sym__0___45_288503368240108258), sym__0___45_2265690738963363690(__sym__0___45_2265690738963363690)
  {
  }
  Record7() 
  {
  }
  std::string show() const{
    std::stringstream o;
    o << sym__0__9004647469590526899 << " | " << arrToString(sym__0___45_1621348641261898005) << " | " << arrToString(sym__0__614427126981106829) << " | " << arrToString(sym__0___45_2454293820925122065) << " | " << arrToString(sym__0__6553227872838818177) << " | " << arrToString(sym__0___45_4248174812301520048) << " | " << arrToString(sym__0___45_3914904628387332757) << " | " << arrToString(sym__0___45_5446426298209956761) << " | " << sym__0___45_2558673723420522753 << " | " << sym__0___45_3519351712545876895 << " | " << sym__0___45_1754306014800131719 << " | " << sym__0__6212025267607306819 << " | " << sym__0__2772749593389396148 << " | " << sym__0___45_4019035565219397859 << " | " << arrToString(sym__0___45_6819607202635958988) << " | " << sym__0__4920008974061631994 << " | " << arrToString(sym__0___45_8128105244823042823) << " | " << sym__0___45_2374853137558343895 << " | " << sym__0__930686933803596543 << " | " << sym__0__5145129428883827325 << " | " << sym__0__1860202553700236407 << " | " << sym__0___45_20127004494246501 << " | " << sym__0___45_3013783536855820064 << " | " << sym__0___45_288503368240108258 << " | " << arrToString(sym__0___45_2265690738963363690);
    return o.str();
  }
  bool operator <(const Record7& otherRec) const{
    return (otherRec.sym__0__9004647469590526899 < sym__0__9004647469590526899 && (otherRec.sym__0___45_1621348641261898005 < sym__0___45_1621348641261898005 && (otherRec.sym__0__614427126981106829 < sym__0__614427126981106829 && (otherRec.sym__0___45_2454293820925122065 < sym__0___45_2454293820925122065 && (otherRec.sym__0__6553227872838818177 < sym__0__6553227872838818177 && (otherRec.sym__0___45_4248174812301520048 < sym__0___45_4248174812301520048 && (otherRec.sym__0___45_3914904628387332757 < sym__0___45_3914904628387332757 && (otherRec.sym__0___45_5446426298209956761 < sym__0___45_5446426298209956761 && (otherRec.sym__0___45_2558673723420522753 < sym__0___45_2558673723420522753 && (otherRec.sym__0___45_3519351712545876895 < sym__0___45_3519351712545876895 && (otherRec.sym__0___45_1754306014800131719 < sym__0___45_1754306014800131719 && (otherRec.sym__0__6212025267607306819 < sym__0__6212025267607306819 && (otherRec.sym__0__2772749593389396148 < sym__0__2772749593389396148 && (otherRec.sym__0___45_4019035565219397859 < sym__0___45_4019035565219397859 && (otherRec.sym__0___45_6819607202635958988 < sym__0___45_6819607202635958988 && (otherRec.sym__0__4920008974061631994 < sym__0__4920008974061631994 && (otherRec.sym__0___45_8128105244823042823 < sym__0___45_8128105244823042823 && (otherRec.sym__0___45_2374853137558343895 < sym__0___45_2374853137558343895 && (otherRec.sym__0__930686933803596543 < sym__0__930686933803596543 && (otherRec.sym__0__5145129428883827325 < sym__0__5145129428883827325 && (otherRec.sym__0__1860202553700236407 < sym__0__1860202553700236407 && (otherRec.sym__0___45_20127004494246501 < sym__0___45_20127004494246501 && (otherRec.sym__0___45_3013783536855820064 < sym__0___45_3013783536855820064 && (otherRec.sym__0___45_288503368240108258 < sym__0___45_288503368240108258 && otherRec.sym__0___45_2265690738963363690 < sym__0___45_2265690738963363690))))))))))))))))))))))));
  }
  bool operator ==(const Record7& otherRec) const{
    return (otherRec.sym__0__9004647469590526899 == sym__0__9004647469590526899 && (otherRec.sym__0___45_1621348641261898005 == sym__0___45_1621348641261898005 && (otherRec.sym__0__614427126981106829 == sym__0__614427126981106829 && (otherRec.sym__0___45_2454293820925122065 == sym__0___45_2454293820925122065 && (otherRec.sym__0__6553227872838818177 == sym__0__6553227872838818177 && (otherRec.sym__0___45_4248174812301520048 == sym__0___45_4248174812301520048 && (otherRec.sym__0___45_3914904628387332757 == sym__0___45_3914904628387332757 && (otherRec.sym__0___45_5446426298209956761 == sym__0___45_5446426298209956761 && (otherRec.sym__0___45_2558673723420522753 == sym__0___45_2558673723420522753 && (otherRec.sym__0___45_3519351712545876895 == sym__0___45_3519351712545876895 && (otherRec.sym__0___45_1754306014800131719 == sym__0___45_1754306014800131719 && (otherRec.sym__0__6212025267607306819 == sym__0__6212025267607306819 && (otherRec.sym__0__2772749593389396148 == sym__0__2772749593389396148 && (otherRec.sym__0___45_4019035565219397859 == sym__0___45_4019035565219397859 && (otherRec.sym__0___45_6819607202635958988 == sym__0___45_6819607202635958988 && (otherRec.sym__0__4920008974061631994 == sym__0__4920008974061631994 && (otherRec.sym__0___45_8128105244823042823 == sym__0___45_8128105244823042823 && (otherRec.sym__0___45_2374853137558343895 == sym__0___45_2374853137558343895 && (otherRec.sym__0__930686933803596543 == sym__0__930686933803596543 && (otherRec.sym__0__5145129428883827325 == sym__0__5145129428883827325 && (otherRec.sym__0__1860202553700236407 == sym__0__1860202553700236407 && (otherRec.sym__0___45_20127004494246501 == sym__0___45_20127004494246501 && (otherRec.sym__0___45_3013783536855820064 == sym__0___45_3013783536855820064 && (otherRec.sym__0___45_288503368240108258 == sym__0___45_288503368240108258 && otherRec.sym__0___45_2265690738963363690 == sym__0___45_2265690738963363690))))))))))))))))))))))));
  }
  bool operator !=(const Record7& otherRec) const{
    return (otherRec.sym__0__9004647469590526899 != sym__0__9004647469590526899 || (otherRec.sym__0___45_1621348641261898005 != sym__0___45_1621348641261898005 || (otherRec.sym__0__614427126981106829 != sym__0__614427126981106829 || (otherRec.sym__0___45_2454293820925122065 != sym__0___45_2454293820925122065 || (otherRec.sym__0__6553227872838818177 != sym__0__6553227872838818177 || (otherRec.sym__0___45_4248174812301520048 != sym__0___45_4248174812301520048 || (otherRec.sym__0___45_3914904628387332757 != sym__0___45_3914904628387332757 || (otherRec.sym__0___45_5446426298209956761 != sym__0___45_5446426298209956761 || (otherRec.sym__0___45_2558673723420522753 != sym__0___45_2558673723420522753 || (otherRec.sym__0___45_3519351712545876895 != sym__0___45_3519351712545876895 || (otherRec.sym__0___45_1754306014800131719 != sym__0___45_1754306014800131719 || (otherRec.sym__0__6212025267607306819 != sym__0__6212025267607306819 || (otherRec.sym__0__2772749593389396148 != sym__0__2772749593389396148 || (otherRec.sym__0___45_4019035565219397859 != sym__0___45_4019035565219397859 || (otherRec.sym__0___45_6819607202635958988 != sym__0___45_6819607202635958988 || (otherRec.sym__0__4920008974061631994 != sym__0__4920008974061631994 || (otherRec.sym__0___45_8128105244823042823 != sym__0___45_8128105244823042823 || (otherRec.sym__0___45_2374853137558343895 != sym__0___45_2374853137558343895 || (otherRec.sym__0__930686933803596543 != sym__0__930686933803596543 || (otherRec.sym__0__5145129428883827325 != sym__0__5145129428883827325 || (otherRec.sym__0__1860202553700236407 != sym__0__1860202553700236407 || (otherRec.sym__0___45_20127004494246501 != sym__0___45_20127004494246501 || (otherRec.sym__0___45_3013783536855820064 != sym__0___45_3013783536855820064 || (otherRec.sym__0___45_288503368240108258 != sym__0___45_288503368240108258 || otherRec.sym__0___45_2265690738963363690 != sym__0___45_2265690738963363690))))))))))))))))))))))));
  }
  unsigned sym__0__9004647469590526899;
  fluidb_string<18> sym__0___45_1621348641261898005;
  fluidb_string<40> sym__0__614427126981106829;
  fluidb_string<11> sym__0___45_2454293820925122065;
  fluidb_string<15> sym__0__6553227872838818177;
  fluidb_string<13> sym__0___45_4248174812301520048;
  fluidb_string<15> sym__0___45_3914904628387332757;
  fluidb_string<21> sym__0___45_5446426298209956761;
  unsigned sym__0___45_2558673723420522753;
  int sym__0___45_3519351712545876895;
  unsigned sym__0___45_1754306014800131719;
  unsigned sym__0__6212025267607306819;
  unsigned sym__0__2772749593389396148;
  unsigned sym__0___45_4019035565219397859;
  fluidb_string<21> sym__0___45_6819607202635958988;
  unsigned sym__0__4920008974061631994;
  fluidb_string<10> sym__0___45_8128105244823042823;
  unsigned sym__0___45_2374853137558343895;
  double sym__0__930686933803596543;
  unsigned sym__0__5145129428883827325;
  double sym__0__1860202553700236407;
  unsigned sym__0___45_20127004494246501;
  unsigned sym__0___45_3013783536855820064;
  double sym__0___45_288503368240108258;
  fluidb_string<13> sym__0___45_2265690738963363690;
 private:
};


class CallableClass23 {
 public:
  bool operator()(const Record15& record22) {
    return (((record22.sym__0___45_8518596434939314413 == 1997) || (record22.sym__0___45_8518596434939314413 == 1998)) && like(record22.sym__0__2274992661292194562, "UNITED STATES"));
  }
  typedef bool Codomain;
  typedef Record15 Domain0;
 private:
};


class CallableClass46 {
 public:
  bool operator()(const Record39& record45) {
    return like(record45.sym__0___45_8670773565387601472, "MFGR#14");
  }
  typedef bool Codomain;
  typedef Record39 Domain0;
 private:
};


class CallableClass28 {
 public:
  Record27 operator()(const Record26& record24, const Record4& record25) {
    return Record27(record24.sym__0__1196038122209723224, record24.sym__0___45_5396739333020453801, record24.sym__0__7318687715908221809, record24.sym__0__2891697849105026659, record24.sym__0__1705870681861471261, record24.sym__0__4085985592626786348, record24.sym__0___45_2546290346218932265, record24.sym__0__8845872946768435011, record24.sym__0___45_536981335351402283, record24.sym__0__7156593816844630781, record24.sym__0__1878735381655673343, record24.sym__0___45_7967195135681474416, record24.sym__0__3115653129156217, record24.sym__0__1583988969561549072, record24.sym__0___45_3657663143348245634, record24.sym__0__6169465618573060221, record24.sym__0__7654885345897107213, record24.sym__0__5757227188790481731, record24.sym__0___45_7730226973009959847, record24.sym__0__4629686008780986923, record24.sym__0__5444316439887834055, record24.sym__0__7286973418962910916, record24.sym__0__1604931916608195386, record24.sym__0__489177568005913122, record24.sym__0___45_8465484648693951129, record24.sym__0__7822680167585103223, record24.sym__0___45_3173623228407185379, record24.sym__0___45_3249583474025477806, record24.sym__0__1019831724731857824, record24.sym__0__6357552419948953026, record24.sym__0___45_8615703586696965681, record24.sym__0___45_7005742229109547444, record24.sym__0__8774624207768670575, record24.sym__0__3138244998511594119, record24.sym__0___45_4685601122410998251, record24.sym__0__2656125265768258418, record24.sym__0__5511557204728954683, record24.sym__0___45_3552301622842007037, record24.sym__0__3839551924916702702, record24.sym__0___45_2488677329649749562, record24.sym__0___45_3033584803630280248, record25.sym__0__59163526776084807, record25.sym__0___45_1313357857405786385, record25.sym__0__1337312907475566789, record25.sym__0__8014013609240026595, record25.sym__0___45_4888925151068446247, record25.sym__0__661408193145534136, record25.sym__0___45_7159405632382799505, record25.sym__0___45_7793359246716293237);
  }
  typedef Record27 Codomain;
  typedef Record26 Domain0;
  typedef Record4 Domain1;
 private:
};


class CallableClass19 {
 public:
  Record17 operator()(const Record14& record18) {
    return Record17(record18.sym__0__2289386367904588797);
  }
  typedef Record17 Codomain;
  typedef Record14 Domain0;
 private:
};


class CallableClass11 {
 public:
  Record10 operator()(const Record8& record6) {
    return Record10(record6.sym__0___45_1023382914117654422, record6.sym__0__6224010339127806049, record6.sym__0___45_8804639047977952305, record6.sym__0__8926375957639307021, record6.sym__0__5153200798583684363, record6.sym__0___45_794494697990656050, record6.sym__0__7308161412148661473);
  }
  typedef Record10 Codomain;
  typedef Record8 Domain0;
 private:
};


class CallableClass30 {
 public:
  Record17 operator()(const Record26& record29) {
    return Record17(record29.sym__0__7156593816844630781);
  }
  typedef Record17 Codomain;
  typedef Record26 Domain0;
 private:
};


class CallableClass40 {
 public:
  Record39 operator()(const Record37& record35, const Record38& record36) {
    return Record39(record35.sym__0___45_6180681665671689455, record35.sym__0___45_7492215985175491366, record35.sym__0__3108260102440442872, record35.sym__0__4242088751554333190, record35.sym__0__4419222406440371028, record35.sym__0___45_4395878808383970875, record35.sym__0__5421156455815400282, record35.sym__0___45_1631867111754601434, record35.sym__0__5956167765210805980, record35.sym__0___45_4504547450980902284, record35.sym__0__2571611128943656626, record35.sym__0___45_7797291820866539495, record35.sym__0__8112696983606547888, record35.sym__0___45_8859514051634859623, record35.sym__0__1155613969670303859, record35.sym__0__6875278589307593972, record35.sym__0___45_961680512448388956, record35.sym__0___45_674541735213940698, record35.sym__0___45_821091676724229936, record35.sym__0___45_4702801186563994626, record35.sym__0___45_3023845865529546326, record35.sym__0__5284478023732558701, record35.sym__0__253975703545414575, record35.sym__0__2038562371344131399, record35.sym__0___45_2600703832754715382, record35.sym__0___45_7578273935239857990, record35.sym__0__875191355534311252, record35.sym__0___45_6042256660357361193, record35.sym__0__2251162898911166857, record35.sym__0__8322995032561243047, record35.sym__0__3359760786864885346, record35.sym__0__4755955500146647717, record35.sym__0__825634143835399618, record35.sym__0___45_5673193308586008598, record35.sym__0__2344416604488212124, record35.sym__0__996127159005129399, record35.sym__0___45_8445295692641080722, record35.sym__0___45_9133478590074263962, record35.sym__0___45_1949673146646224253, record35.sym__0___45_3693142685708191253, record35.sym__0___45_7021098367134788127, record35.sym__0__1445832851994825762, record35.sym__0__4538888751267676410, record35.sym__0__6214774548635804832, record35.sym__0__5647889798153721686, record35.sym__0__7215382845017137468, record35.sym__0___45_7064023331726131555, record35.sym__0__2464748358755927674, record35.sym__0__1701416785032206702, record36.sym__0__7178003535380331304, record36.sym__0___45_7020257275696364520, record36.sym__0___45_6307179734719967033, record36.sym__0__4568304886257136061, record36.sym__0___45_6291097039630000265, record36.sym__0__551327770031967739, record36.sym__0__3827696365022297353, record36.sym__0___45_1779543743759935870, record36.sym__0__3752090135924368535);
  }
  typedef Record39 Codomain;
  typedef Record37 Domain0;
  typedef Record38 Domain1;
 private:
};


class CallableClass9 {
 public:
  Record7 operator()(const Record8& record6) {
    return Record7(record6.sym__0__2833764152503888409, record6.sym__0__6938021140779677761, record6.sym__0___45_4700201805806600089, record6.sym__0__3362667619044778557, record6.sym__0__2679827580767046755, record6.sym__0___45_4186304031693649930, record6.sym__0__8596564865999609793, record6.sym__0___45_1671053890158572571, record6.sym__0__2256924431415148013, record6.sym__0__347872876320563651, record6.sym__0___45_7666447219434903317, record6.sym__0__1272718151591622153, record6.sym__0__4584633926271658914, record6.sym__0___45_4610773208091240233, record6.sym__0___45_5766638191766435038, record6.sym__0___45_5211223358204127380, record6.sym__0__8435431464460332395, record6.sym__0___45_6450191115912157957, record6.sym__0__7921907673157171693, record6.sym__0___45_1699747741436218441, record6.sym__0___45_2985562469054236715, record6.sym__0__3746029949899912401, record6.sym__0___45_989155948099215770, record6.sym__0___45_1667761180508152936, record6.sym__0__5854462121170882944);
  }
  typedef Record7 Codomain;
  typedef Record8 Domain0;
 private:
};


class CallableClass34 {
 public:
  bool operator()(const Record27& record33) {
    return like(record33.sym__0__5188547399620210812, "AMERICA");
  }
  typedef bool Codomain;
  typedef Record27 Domain0;
 private:
};


class CallableClass56 {
 public:
  Record55 operator()(const Record50& record47) {
    return Record55(record47.sym__0__1016643266231007683, record47.sym__0__3269568155542253564, record47.sym__0___45_3813708782342371331);
  }
  typedef Record55 Codomain;
  typedef Record50 Domain0;
 private:
};


class CallableClass32 {
 public:
  Record17 operator()(const Record4& record31) {
    return Record17(record31.sym__0__59163526776084807);
  }
  typedef Record17 Codomain;
  typedef Record4 Domain0;
 private:
};


class CallableClass21 {
 public:
  Record17 operator()(const Record10& record20) {
    return Record17(record20.sym__0___45_9117911789383871612);
  }
  typedef Record17 Codomain;
  typedef Record10 Domain0;
 private:
};


class CallableClass5 {
 public:
  Record4 operator()(const Record2& record0) {
    return Record4(record0.sym__0__7822702969493777647, record0.sym__0___45_7097577767643705257, record0.sym__0___45_4128354664746428815, record0.sym__0___45_181005402936645453, record0.sym__0___45_4114345702155733811, record0.sym__0__2126085240536350732, record0.sym__0__2978611118299427799, record0.sym__0___45_924665267353701317);
  }
  typedef Record4 Codomain;
  typedef Record2 Domain0;
 private:
};


class CallableClass42 {
 public:
  Record17 operator()(const Record37& record41) {
    return Record17(record41.sym__0__2571611128943656626);
  }
  typedef Record17 Codomain;
  typedef Record37 Domain0;
 private:
};


class CallableClass3 {
 public:
  Record1 operator()(const Record2& record0) {
    return Record1(record0.sym__0___45_3862182167894734233, record0.sym__0___45_5049546618211835241, record0.sym__0___45_2996783662751493035, record0.sym__0___45_8620453348494972806, record0.sym__0__1925891775692302472, record0.sym__0___45_4666290150124134966, record0.sym__0__2396615500282490031, record0.sym__0___45_3413279326547145180, record0.sym__0__7931789082922299215, record0.sym__0__4128851951395191943, record0.sym__0__1414614919079575917, record0.sym__0___45_4769868403273652582, record0.sym__0___45_423989522690221765, record0.sym__0__670880538897647363, record0.sym__0___45_6595340929265439258, record0.sym__0___45_4807245048316597474, record0.sym__0___45_2845474408872645744, record0.sym__0___45_3923001362387400637, record0.sym__0___45_4068285250723832019, record0.sym__0__5927661182141962805, record0.sym__0__2192637400238122239, record0.sym__0___45_4592297025100810856, record0.sym__0__5820861992669913537, record0.sym__0__2988599564076309784, record0.sym__0___45_8469125589459601770, record0.sym__0___45_2479075576716686155, record0.sym__0__5905974904445628197, record0.sym__0__8482341455033398339, record0.sym__0___45_6780802777767537759, record0.sym__0___45_4873871374223645685, record0.sym__0___45_776774550833357369, record0.sym__0___45_135773926070893412, record0.sym__0___45_4302867605132693150, record0.sym__0__1118838070725597482, record0.sym__0___45_1590115651450644480, record0.sym__0__3192438338873126263, record0.sym__0___45_2134007651753731143, record0.sym__0___45_6288836903209208989, record0.sym__0___45_7991989887002259371, record0.sym__0___45_355683640189594620, record0.sym__0__4955587123024849399);
  }
  typedef Record1 Codomain;
  typedef Record2 Domain0;
 private:
};


class CallableClass44 {
 public:
  Record17 operator()(const Record38& record43) {
    return Record17(record43.sym__0__7178003535380331304);
  }
  typedef Record17 Codomain;
  typedef Record38 Domain0;
 private:
};


class CallableClass16 {
 public:
  Record15 operator()(const Record14& record12, const Record10& record13) {
    return Record15(record13.sym__0___45_9117911789383871612, record13.sym__0___45_1547112764757372609, record13.sym__0___45_8663957751614366179, record13.sym__0__1466641425010216931, record13.sym__0__3672857626658041553, record13.sym__0___45_3362440237381592032, record13.sym__0___45_6631364176934158657, record12.sym__0__5341165382232817970, record12.sym__0__5806605655987033032, record12.sym__0___45_6623407408063066704, record12.sym__0___45_1670026162273154778, record12.sym__0__2289386367904588797, record12.sym__0__8025829587274267860, record12.sym__0__454237065112775549, record12.sym__0__608217599158647375, record12.sym__0__4347069016709593136, record12.sym__0__4553650632168714688, record12.sym__0__586349573025064242, record12.sym__0__144523031940788660, record12.sym__0__2942207309637238010, record12.sym__0__1782085603058736686, record12.sym__0__3001704397998344329, record12.sym__0___45_2662583778072919661, record12.sym__0__8853539013824041307, record12.sym__0___45_3961143035674407474, record12.sym__0___45_6251899802584687138, record12.sym__0__7895704682370371792, record12.sym__0___45_4486276699369081973, record12.sym__0__1119005997298974989, record12.sym__0__3623076037790620667, record12.sym__0___45_369211045765545994, record12.sym__0___45_2252349090140989903, record12.sym__0___45_6519715028980934506, record12.sym__0__6988144115678218478, record12.sym__0__1168585672581702408, record12.sym__0___45_1566345155802505557, record12.sym__0___45_3812637469976556790, record12.sym__0___45_2398128448016703502, record12.sym__0__5574729781191990975, record12.sym__0___45_5962954882039921225, record12.sym__0___45_7276734914968453131);
  }
  typedef Record15 Codomain;
  typedef Record14 Domain0;
  typedef Record10 Domain1;
 private:
};


class CallableClass54 {
 public:
  Record48 operator()(const Record50& record47) {
    return Record48(vAggrFirst49(record47.sym__0__1016643266231007683), vAggrFirst51(record47.sym__0__3269568155542253564), vAggrFirst52(record47.sym__0___45_3813708782342371331), vAggrSum53((record47.sym__0__2342925512217931808 - record47.sym__0__1214124832604663335)));
  }
  typedef Record48 Codomain;
  typedef Record50 Domain0;
 private:
  AggrFirst<unsigned> vAggrFirst49;
  AggrFirst<fluidb_string<16>> vAggrFirst51;
  AggrFirst<fluidb_string<10>> vAggrFirst52;
  AggrSum<unsigned> vAggrSum53;
};


class CallableClass58 {
 public:
  Record55 operator()(const Record48& record57) {
    return Record55(record57.sym__0___45_3626104775580424569, record57.sym__0__2860600750035231010, record57.sym__0__8292664984119007321);
  }
  typedef Record55 Codomain;
  typedef Record48 Domain0;
 private:
};






int main() {
  // ReverseTrigger: (Just 
  //   (Left 
  //     [
  //      QJoin 
  //         (P0 
  //           (R2 REq 
  //               (R0 (E0 (ESym "lo_custkey"))) 
  //               (R0 (E0 (ESym "c_custkey")))))
  std::cout << "ReverseTrigger: (Just \n  (Left \n    [\n     QJoin \n        (P0 \n          (R2 REq \n              (R0 (E0 (ESym \"lo_custkey\"))) \n              (R0 (E0 (ESym \"c_custkey\")))))\n    ]))" << std::endl;
  {
    auto operation = mkUnJoin<CallableClass3, CallableClass5>(Just("/tmp/fluidb_store/data328.dat"), Nothing(), Just("/tmp/fluidb_store/data329.dat"), Nothing(), Just("/tmp/fluidb_store/data4.dat"));
    operation.run();
    operation.print_output(10);
  }
  // ReverseTrigger: (Just 
  //   (Left 
  //     [
  //      QJoin 
  //         (P0 
  //           (R2 REq 
  //               (R0 (E0 (ESym "lo_suppkey"))) 
  //               (R0 (E0 (ESym "s_suppkey")))))
  std::cout << "ReverseTrigger: (Just \n  (Left \n    [\n     QJoin \n        (P0 \n          (R2 REq \n              (R0 (E0 (ESym \"lo_suppkey\"))) \n              (R0 (E0 (ESym \"s_suppkey\")))))\n    ]))" << std::endl;
  {
    auto operation = mkUnJoin<CallableClass9, CallableClass11>(Just("/tmp/fluidb_store/data296.dat"), Nothing(), Just("/tmp/fluidb_store/data297.dat"), Nothing(), Just("/tmp/fluidb_store/data3.dat"));
    operation.run();
    operation.print_output(10);
  }
  // Delete: (Q1 
  //   (QSort 
  //     [E0 (ESym "d_year"),E0 (ESym "s_nation"),E0 (ESym "p_category")]) 
  //   (Q1 
  //     (QGroup 
  //       [
  //        (ESym "d_year",E0 (NAggr AggrFirst (E0 (ESym "d_year")))),
  //        (ESym "s_nation",E0 (NAggr AggrFirst (E0 (ESym "s_nation")))),
  //        (ESym "p_category",E0 (NAggr AggrFirst (E0 (ESym "p_category")))),
  //        (
  //          ESym "profit",
  //          E0 
  //             (NAggr 
  //               AggrSum 
  //               (E2 ESub 
  //                   (E0 (ESym "lo_revenue")) 
  //                   (E0 (ESym "lo_supplycost"))))
  //         )
  //       ] 
  //       [E0 (ESym "d_year"),E0 (ESym "s_nation"),E0 (ESym "p_category")]) 
  //     (S 
  //       (P2 
  //         PAnd 
  //         (P2 
  //           PAnd 
  //           (P2 
  //             PAnd 
  //             (P0 
  //               (R2 RLike 
  //                   (R0 (E0 (ESym "c_region"))) 
  //                   (R0 (E0 (EString "AMERICA"))))) 
  //             (P0 
  //               (R2 RLike 
  //                   (R0 (E0 (ESym "s_region"))) 
  //                   (R0 (E0 (EString "AMERICA")))))) 
  //           (P2 
  //             POr 
  //             (P0 
  //               (R2 REq (R0 (E0 (ESym "d_year"))) (R0 (E0 (EInt 1997))))) 
  //             (P0 
  //               (R2 REq (R0 (E0 (ESym "d_year"))) (R0 (E0 (EInt 1998))))))) 
  //         (P2 
  //           POr 
  //           (P0 
  //             (R2 RLike 
  //                 (R0 (E0 (ESym "p_mfgr"))) 
  //                 (R0 (E0 (EString "MFGR#1"))))) 
  //           (P0 
  //             (R2 RLike 
  //                 (R0 (E0 (ESym "p_mfgr"))) 
  //                 (R0 (E0 (EString "MFGR#2"))))))) 
  //       (J 
  //         (P0 
  //           (R2 REq 
  //               (R0 (E0 (ESym "lo_partkey"))) 
  //               (R0 (E0 (ESym "p_partkey"))))) 
  //         (J 
  //           (P0 
  //             (R2 REq 
  //                 (R0 (E0 (ESym "lo_custkey"))) 
  //                 (R0 (E0 (ESym "c_custkey"))))) 
  //           (J 
  //             (P0 
  //               (R2 REq 
  //                   (R0 (E0 (ESym "lo_suppkey"))) 
  //                   (R0 (E0 (ESym "s_suppkey"))))) 
  //             (J 
  //               (P0 
  //                 (R2 REq 
  //                     (R0 (E0 (ESym "lo_orderdate"))) 
  //                     (R0 (E0 (ESym "d_datekey"))))) 
  //               (Q0 (TSymbol "date")) 
  //               (Q0 (TSymbol "lineorder"))) 
  //             (Q0 (TSymbol "supplier"))) 
  //           (Q0 (TSymbol "customer"))) 
  std::cout << "Delete: N342" << std::endl;
  deleteFile("/tmp/fluidb_store/data342.dat");
  // Delete: (Q1 
  //   (QGroup 
  //     [
  //      (ESym "d_year",E0 (NAggr AggrFirst (E0 (ESym "d_year")))),
  //      (ESym "s_nation",E0 (NAggr AggrFirst (E0 (ESym "s_nation")))),
  //      (ESym "p_category",E0 (NAggr AggrFirst (E0 (ESym "p_category")))),
  //      (
  //        ESym "profit",
  //        E0 
  //           (NAggr 
  //             AggrSum 
  //             (E2 ESub 
  //                 (E0 (ESym "lo_revenue")) 
  //                 (E0 (ESym "lo_supplycost"))))
  //       )
  //     ] 
  //     [E0 (ESym "d_year"),E0 (ESym "s_nation"),E0 (ESym "p_category")]) 
  //   (S 
  //     (P2 
  //       PAnd 
  //       (P2 
  //         PAnd 
  //         (P2 
  //           PAnd 
  //           (P0 
  //             (R2 RLike 
  //                 (R0 (E0 (ESym "c_region"))) 
  //                 (R0 (E0 (EString "AMERICA"))))) 
  //           (P0 
  //             (R2 RLike 
  //                 (R0 (E0 (ESym "s_region"))) 
  //                 (R0 (E0 (EString "AMERICA")))))) 
  //         (P2 POr 
  //             (P0 (R2 REq (R0 (E0 (ESym "d_year"))) (R0 (E0 (EInt 1997))))) 
  //             (P0 (R2 REq (R0 (E0 (ESym "d_year"))) (R0 (E0 (EInt 1998))))))) 
  //       (P2 
  //         POr 
  //         (P0 
  //           (R2 RLike 
  //               (R0 (E0 (ESym "p_mfgr"))) 
  //               (R0 (E0 (EString "MFGR#1"))))) 
  //         (P0 
  //           (R2 RLike 
  //               (R0 (E0 (ESym "p_mfgr"))) 
  //               (R0 (E0 (EString "MFGR#2"))))))) 
  //     (J 
  //       (P0 
  //         (R2 REq 
  //             (R0 (E0 (ESym "lo_partkey"))) 
  //             (R0 (E0 (ESym "p_partkey"))))) 
  //       (J 
  //         (P0 
  //           (R2 REq 
  //               (R0 (E0 (ESym "lo_custkey"))) 
  //               (R0 (E0 (ESym "c_custkey"))))) 
  //         (J 
  //           (P0 
  //             (R2 REq 
  //                 (R0 (E0 (ESym "lo_suppkey"))) 
  //                 (R0 (E0 (ESym "s_suppkey"))))) 
  //           (J 
  //             (P0 
  //               (R2 REq 
  //                   (R0 (E0 (ESym "lo_orderdate"))) 
  //                   (R0 (E0 (ESym "d_datekey"))))) 
  //             (Q0 (TSymbol "date")) 
  //             (Q0 (TSymbol "lineorder"))) 
  //           (Q0 (TSymbol "supplier"))) 
  //         (Q0 (TSymbol "customer"))) 
  std::cout << "Delete: N341" << std::endl;
  deleteFile("/tmp/fluidb_store/data341.dat");
  // Delete: (S 
  //   (P1 
  //     PNot 
  //     (P0 
  //       (R2 RLike 
  //           (R0 (E0 (ESym "s_region"))) 
  //           (R0 (E0 (EString "AMERICA")))))) 
  //   (J 
  //     (P0 
  //       (R2 REq 
  //           (R0 (E0 (ESym "lo_suppkey"))) 
  //           (R0 (E0 (ESym "s_suppkey"))))) 
  //     (S 
  //       (P2 POr 
  //           (P0 (R2 REq (R0 (E0 (ESym "d_year"))) (R0 (E0 (EInt 1997))))) 
  //           (P0 (R2 REq (R0 (E0 (ESym "d_year"))) (R0 (E0 (EInt 1998)))))) 
  //       (J 
  //         (P0 
  //           (R2 REq 
  //               (R0 (E0 (ESym "lo_orderdate"))) 
  //               (R0 (E0 (ESym "d_datekey"))))) 
  //         (Q0 (TSymbol "date")) 
  //         (Q0 (TSymbol "lineorder")))) 
  std::cout << "Delete: N326" << std::endl;
  deleteFile("/tmp/fluidb_store/data326.dat");
  // Delete: (S 
  //   (P1 
  //     PNot 
  //     (P2 POr 
  //         (P0 (R2 REq (R0 (E0 (ESym "d_year"))) (R0 (E0 (EInt 1997))))) 
  //         (P0 (R2 REq (R0 (E0 (ESym "d_year"))) (R0 (E0 (EInt 1998))))))) 
  //   (J 
  //     (P0 
  //       (R2 REq 
  //           (R0 (E0 (ESym "lo_orderdate"))) 
  //           (R0 (E0 (ESym "d_datekey"))))) 
  //     (Q0 (TSymbol "date")) 
  std::cout << "Delete: N320" << std::endl;
  deleteFile("/tmp/fluidb_store/data320.dat");
  // Delete: (Q2 
  //   (QLeftAntijoin 
  //     (P0 
  //       (R2 REq 
  //           (R0 (E0 (ESym "lo_partkey"))) 
  //           (R0 (E0 (ESym "p_partkey")))))) 
  //   (S 
  //     (P0 
  //       (R2 RLike 
  //           (R0 (E0 (ESym "c_region"))) 
  //           (R0 (E0 (EString "AMERICA"))))) 
  //     (J 
  //       (P0 
  //         (R2 REq 
  //             (R0 (E0 (ESym "lo_custkey"))) 
  //             (R0 (E0 (ESym "c_custkey"))))) 
  //       (S 
  //         (P2 
  //           PAnd 
  //           (P2 
  //             POr 
  //             (P0 
  //               (R2 REq (R0 (E0 (ESym "d_year"))) (R0 (E0 (EInt 1997))))) 
  //             (P0 
  //               (R2 REq (R0 (E0 (ESym "d_year"))) (R0 (E0 (EInt 1998)))))) 
  //           (P0 
  //             (R2 RLike 
  //                 (R0 (E0 (ESym "s_region"))) 
  //                 (R0 (E0 (EString "AMERICA")))))) 
  //         (J 
  //           (P0 
  //             (R2 REq 
  //                 (R0 (E0 (ESym "lo_suppkey"))) 
  //                 (R0 (E0 (ESym "s_suppkey"))))) 
  //           (J 
  //             (P0 
  //               (R2 REq 
  //                   (R0 (E0 (ESym "lo_orderdate"))) 
  //                   (R0 (E0 (ESym "d_datekey"))))) 
  //             (Q0 (TSymbol "date")) 
  //             (Q0 (TSymbol "lineorder"))) 
  //           (Q0 (TSymbol "supplier")))) 
  //       (Q0 (TSymbol "customer")))) 
  std::cout << "Delete: N335" << std::endl;
  deleteFile("/tmp/fluidb_store/data335.dat");
  // Delete: (Q2 
  //   (QRightAntijoin 
  //     (P0 
  //       (R2 REq 
  //           (R0 (E0 (ESym "lo_partkey"))) 
  //           (R0 (E0 (ESym "p_partkey")))))) 
  //   (S 
  //     (P0 
  //       (R2 RLike 
  //           (R0 (E0 (ESym "c_region"))) 
  //           (R0 (E0 (EString "AMERICA"))))) 
  //     (J 
  //       (P0 
  //         (R2 REq 
  //             (R0 (E0 (ESym "lo_custkey"))) 
  //             (R0 (E0 (ESym "c_custkey"))))) 
  //       (S 
  //         (P2 
  //           PAnd 
  //           (P2 
  //             POr 
  //             (P0 
  //               (R2 REq (R0 (E0 (ESym "d_year"))) (R0 (E0 (EInt 1997))))) 
  //             (P0 
  //               (R2 REq (R0 (E0 (ESym "d_year"))) (R0 (E0 (EInt 1998)))))) 
  //           (P0 
  //             (R2 RLike 
  //                 (R0 (E0 (ESym "s_region"))) 
  //                 (R0 (E0 (EString "AMERICA")))))) 
  //         (J 
  //           (P0 
  //             (R2 REq 
  //                 (R0 (E0 (ESym "lo_suppkey"))) 
  //                 (R0 (E0 (ESym "s_suppkey"))))) 
  //           (J 
  //             (P0 
  //               (R2 REq 
  //                   (R0 (E0 (ESym "lo_orderdate"))) 
  //                   (R0 (E0 (ESym "d_datekey"))))) 
  //             (Q0 (TSymbol "date")) 
  //             (Q0 (TSymbol "lineorder"))) 
  //           (Q0 (TSymbol "supplier")))) 
  //       (Q0 (TSymbol "customer")))) 
  std::cout << "Delete: N337" << std::endl;
  deleteFile("/tmp/fluidb_store/data337.dat");
  // Delete: (S 
  //   (P2 
  //     PAnd 
  //     (P2 
  //       PAnd 
  //       (P2 
  //         PAnd 
  //         (P0 
  //           (R2 RLike 
  //               (R0 (E0 (ESym "c_region"))) 
  //               (R0 (E0 (EString "AMERICA"))))) 
  //         (P0 
  //           (R2 RLike 
  //               (R0 (E0 (ESym "s_region"))) 
  //               (R0 (E0 (EString "AMERICA")))))) 
  //       (P2 POr 
  //           (P0 (R2 REq (R0 (E0 (ESym "d_year"))) (R0 (E0 (EInt 1997))))) 
  //           (P0 (R2 REq (R0 (E0 (ESym "d_year"))) (R0 (E0 (EInt 1998))))))) 
  //     (P2 
  //       POr 
  //       (P0 
  //         (R2 RLike 
  //             (R0 (E0 (ESym "p_mfgr"))) 
  //             (R0 (E0 (EString "MFGR#1"))))) 
  //       (P0 
  //         (R2 RLike 
  //             (R0 (E0 (ESym "p_mfgr"))) 
  //             (R0 (E0 (EString "MFGR#2"))))))) 
  //   (J 
  //     (P0 
  //       (R2 REq 
  //           (R0 (E0 (ESym "lo_partkey"))) 
  //           (R0 (E0 (ESym "p_partkey"))))) 
  //     (J 
  //       (P0 
  //         (R2 REq 
  //             (R0 (E0 (ESym "lo_custkey"))) 
  //             (R0 (E0 (ESym "c_custkey"))))) 
  //       (J 
  //         (P0 
  //           (R2 REq 
  //               (R0 (E0 (ESym "lo_suppkey"))) 
  //               (R0 (E0 (ESym "s_suppkey"))))) 
  //         (J 
  //           (P0 
  //             (R2 REq 
  //                 (R0 (E0 (ESym "lo_orderdate"))) 
  //                 (R0 (E0 (ESym "d_datekey"))))) 
  //           (Q0 (TSymbol "date")) 
  //           (Q0 (TSymbol "lineorder"))) 
  //         (Q0 (TSymbol "supplier"))) 
  //       (Q0 (TSymbol "customer"))) 
  std::cout << "Delete: N313" << std::endl;
  deleteFile("/tmp/fluidb_store/data313.dat");
  // ForwardTrigger: (Just 
  //   (Left 
  //     [
  //      QJoin 
  //         (P0 
  //           (R2 REq 
  //               (R0 (E0 (ESym "lo_suppkey"))) 
  //               (R0 (E0 (ESym "s_suppkey")))))
  std::cout << "ForwardTrigger: (Just \n  (Left \n    [\n     QJoin \n        (P0 \n          (R2 REq \n              (R0 (E0 (ESym \"lo_suppkey\"))) \n              (R0 (E0 (ESym \"s_suppkey\")))))\n    ]))" << std::endl;
  {
    auto operation = mkEquiJoin<CallableClass19, CallableClass21, CallableClass16>(Just<const std::string>("/tmp/fluidb_store/data31.dat"), Just<const std::string>("/tmp/fluidb_store/data258.dat"), Just<const std::string>("/tmp/fluidb_store/data259.dat"), "/tmp/fluidb_store/data139.dat", "/tmp/fluidb_store/data3.dat");
    operation.run();
    operation.print_output(10);
  }
  // Delete: (S 
  //   (P1 
  //     PNot 
  //     (P2 
  //       POr 
  //       (P0 
  //         (R2 RLike 
  //             (R0 (E0 (ESym "p_mfgr"))) 
  //             (R0 (E0 (EString "MFGR#1"))))) 
  //       (P0 
  //         (R2 RLike 
  //             (R0 (E0 (ESym "p_mfgr"))) 
  //             (R0 (E0 (EString "MFGR#2"))))))) 
  //   (J 
  //     (P0 
  //       (R2 REq 
  //           (R0 (E0 (ESym "lo_partkey"))) 
  //           (R0 (E0 (ESym "p_partkey"))))) 
  //     (S 
  //       (P2 
  //         PAnd 
  //         (P2 
  //           PAnd 
  //           (P0 
  //             (R2 RLike 
  //                 (R0 (E0 (ESym "s_region"))) 
  //                 (R0 (E0 (EString "AMERICA"))))) 
  //           (P2 
  //             POr 
  //             (P0 
  //               (R2 REq (R0 (E0 (ESym "d_year"))) (R0 (E0 (EInt 1997))))) 
  //             (P0 
  //               (R2 REq (R0 (E0 (ESym "d_year"))) (R0 (E0 (EInt 1998))))))) 
  //         (P0 
  //           (R2 RLike 
  //               (R0 (E0 (ESym "c_region"))) 
  //               (R0 (E0 (EString "AMERICA")))))) 
  //       (J 
  //         (P0 
  //           (R2 REq 
  //               (R0 (E0 (ESym "lo_custkey"))) 
  //               (R0 (E0 (ESym "c_custkey"))))) 
  //         (J 
  //           (P0 
  //             (R2 REq 
  //                 (R0 (E0 (ESym "lo_suppkey"))) 
  //                 (R0 (E0 (ESym "s_suppkey"))))) 
  //           (J 
  //             (P0 
  //               (R2 REq 
  //                   (R0 (E0 (ESym "lo_orderdate"))) 
  //                   (R0 (E0 (ESym "d_datekey"))))) 
  //             (Q0 (TSymbol "date")) 
  //             (Q0 (TSymbol "lineorder"))) 
  //           (Q0 (TSymbol "supplier"))) 
  //         (Q0 (TSymbol "customer")))) 
  std::cout << "Delete: N340" << std::endl;
  deleteFile("/tmp/fluidb_store/data340.dat");
  // Delete: (J 
  //   (P0 
  //     (R2 REq (R0 (E0 (ESym "lo_partkey"))) (R0 (E0 (ESym "p_partkey"))))) 
  //   (S 
  //     (P0 
  //       (R2 RLike 
  //           (R0 (E0 (ESym "c_region"))) 
  //           (R0 (E0 (EString "AMERICA"))))) 
  //     (J 
  //       (P0 
  //         (R2 REq 
  //             (R0 (E0 (ESym "lo_custkey"))) 
  //             (R0 (E0 (ESym "c_custkey"))))) 
  //       (S 
  //         (P2 
  //           PAnd 
  //           (P2 
  //             POr 
  //             (P0 
  //               (R2 REq (R0 (E0 (ESym "d_year"))) (R0 (E0 (EInt 1997))))) 
  //             (P0 
  //               (R2 REq (R0 (E0 (ESym "d_year"))) (R0 (E0 (EInt 1998)))))) 
  //           (P0 
  //             (R2 RLike 
  //                 (R0 (E0 (ESym "s_region"))) 
  //                 (R0 (E0 (EString "AMERICA")))))) 
  //         (J 
  //           (P0 
  //             (R2 REq 
  //                 (R0 (E0 (ESym "lo_suppkey"))) 
  //                 (R0 (E0 (ESym "s_suppkey"))))) 
  //           (J 
  //             (P0 
  //               (R2 REq 
  //                   (R0 (E0 (ESym "lo_orderdate"))) 
  //                   (R0 (E0 (ESym "d_datekey"))))) 
  //             (Q0 (TSymbol "date")) 
  //             (Q0 (TSymbol "lineorder"))) 
  //           (Q0 (TSymbol "supplier")))) 
  //       (Q0 (TSymbol "customer")))) 
  std::cout << "Delete: N336" << std::endl;
  deleteFile("/tmp/fluidb_store/data336.dat");
  // ForwardTrigger: (Just 
  //   (Right 
  //     [
  //      QSel 
  //         (P2 
  //           PAnd 
  //           (P2 
  //             POr 
  //             (P0 
  //               (R2 REq (R0 (E0 (ESym "d_year"))) (R0 (E0 (EInt 1997))))) 
  //             (P0 
  //               (R2 REq (R0 (E0 (ESym "d_year"))) (R0 (E0 (EInt 1998)))))) 
  //           (P0 
  //             (R2 RLike 
  //                 (R0 (E0 (ESym "s_nation"))) 
  //                 (R0 (E0 (EString "UNITED STATES"))))))
  std::cout << "ForwardTrigger: (Just \n  (Right \n    [\n     QSel \n        (P2 \n          PAnd \n          (P2 \n            POr \n            (P0 \n              (R2 REq (R0 (E0 (ESym \"d_year\"))) (R0 (E0 (EInt 1997))))) \n            (P0 \n              (R2 REq (R0 (E0 (ESym \"d_year\"))) (R0 (E0 (EInt 1998)))))) \n          (P0 \n            (R2 RLike \n                (R0 (E0 (ESym \"s_nation\"))) \n                (R0 (E0 (EString \"UNITED STATES\"))))))\n    ]))" << std::endl;
  {
    auto operation = mkSelect<CallableClass23>(Just<const std::string>("/tmp/fluidb_store/data347.dat"), Just<const std::string>("/tmp/fluidb_store/data348.dat"), "/tmp/fluidb_store/data31.dat");
    operation.run();
    operation.print_output(10);
  }
  // ForwardTrigger: (Just 
  //   (Left 
  //     [
  //      QJoin 
  //         (P0 
  //           (R2 REq 
  //               (R0 (E0 (ESym "lo_custkey"))) 
  //               (R0 (E0 (ESym "c_custkey")))))
  std::cout << "ForwardTrigger: (Just \n  (Left \n    [\n     QJoin \n        (P0 \n          (R2 REq \n              (R0 (E0 (ESym \"lo_custkey\"))) \n              (R0 (E0 (ESym \"c_custkey\")))))\n    ]))" << std::endl;
  {
    auto operation = mkEquiJoin<CallableClass30, CallableClass32, CallableClass28>(Just<const std::string>("/tmp/fluidb_store/data351.dat"), Just<const std::string>("/tmp/fluidb_store/data350.dat"), Just<const std::string>("/tmp/fluidb_store/data352.dat"), "/tmp/fluidb_store/data347.dat", "/tmp/fluidb_store/data4.dat");
    operation.run();
    operation.print_output(10);
  }
  // ForwardTrigger: (Just 
  //   (Right 
  //     [
  //      QSel 
  //         (P0 
  //           (R2 RLike 
  //               (R0 (E0 (ESym "c_region"))) 
  //               (R0 (E0 (EString "AMERICA")))))
  std::cout << "ForwardTrigger: (Just \n  (Right \n    [\n     QSel \n        (P0 \n          (R2 RLike \n              (R0 (E0 (ESym \"c_region\"))) \n              (R0 (E0 (EString \"AMERICA\")))))\n    ]))" << std::endl;
  {
    auto operation = mkSelect<CallableClass34>(Just<const std::string>("/tmp/fluidb_store/data345.dat"), Just<const std::string>("/tmp/fluidb_store/data355.dat"), "/tmp/fluidb_store/data351.dat");
    operation.run();
    operation.print_output(10);
  }
  // Delete: (Q2 
  //   (QRightAntijoin 
  //     (P0 
  //       (R2 REq 
  //           (R0 (E0 (ESym "lo_custkey"))) 
  //           (R0 (E0 (ESym "c_custkey")))))) 
  //   (S 
  //     (P0 
  //       (R2 RLike 
  //           (R0 (E0 (ESym "s_region"))) 
  //           (R0 (E0 (EString "AMERICA"))))) 
  //     (J 
  //       (P0 
  //         (R2 REq 
  //             (R0 (E0 (ESym "lo_suppkey"))) 
  //             (R0 (E0 (ESym "s_suppkey"))))) 
  //       (S 
  //         (P2 POr 
  //             (P0 (R2 REq (R0 (E0 (ESym "d_year"))) (R0 (E0 (EInt 1997))))) 
  //             (P0 (R2 REq (R0 (E0 (ESym "d_year"))) (R0 (E0 (EInt 1998)))))) 
  //         (J 
  //           (P0 
  //             (R2 REq 
  //                 (R0 (E0 (ESym "lo_orderdate"))) 
  //                 (R0 (E0 (ESym "d_datekey"))))) 
  //           (Q0 (TSymbol "date")) 
  //           (Q0 (TSymbol "lineorder")))) 
  //       (Q0 (TSymbol "supplier")))) 
  std::cout << "Delete: N329" << std::endl;
  deleteFile("/tmp/fluidb_store/data329.dat");
  // Delete: (S 
  //   (P1 
  //     PNot 
  //     (P0 
  //       (R2 RLike 
  //           (R0 (E0 (ESym "c_region"))) 
  //           (R0 (E0 (EString "AMERICA")))))) 
  //   (J 
  //     (P0 
  //       (R2 REq 
  //           (R0 (E0 (ESym "lo_custkey"))) 
  //           (R0 (E0 (ESym "c_custkey"))))) 
  //     (S 
  //       (P2 
  //         PAnd 
  //         (P2 POr 
  //             (P0 (R2 REq (R0 (E0 (ESym "d_year"))) (R0 (E0 (EInt 1997))))) 
  //             (P0 (R2 REq (R0 (E0 (ESym "d_year"))) (R0 (E0 (EInt 1998)))))) 
  //         (P0 
  //           (R2 RLike 
  //               (R0 (E0 (ESym "s_nation"))) 
  //               (R0 (E0 (EString "UNITED STATES")))))) 
  //       (J 
  //         (P0 
  //           (R2 REq 
  //               (R0 (E0 (ESym "lo_suppkey"))) 
  //               (R0 (E0 (ESym "s_suppkey"))))) 
  //         (J 
  //           (P0 
  //             (R2 REq 
  //                 (R0 (E0 (ESym "lo_orderdate"))) 
  //                 (R0 (E0 (ESym "d_datekey"))))) 
  //           (Q0 (TSymbol "date")) 
  //           (Q0 (TSymbol "lineorder"))) 
  //         (Q0 (TSymbol "supplier")))) 
  std::cout << "Delete: N355" << std::endl;
  deleteFile("/tmp/fluidb_store/data355.dat");
  // Delete: (J 
  //   (P0 
  //     (R2 REq (R0 (E0 (ESym "lo_custkey"))) (R0 (E0 (ESym "c_custkey"))))) 
  //   (S 
  //     (P0 
  //       (R2 RLike 
  //           (R0 (E0 (ESym "s_nation"))) 
  //           (R0 (E0 (EString "UNITED STATES"))))) 
  //     (J 
  //       (P0 
  //         (R2 REq 
  //             (R0 (E0 (ESym "lo_suppkey"))) 
  //             (R0 (E0 (ESym "s_suppkey"))))) 
  //       (S 
  //         (P2 POr 
  //             (P0 (R2 REq (R0 (E0 (ESym "d_year"))) (R0 (E0 (EInt 1997))))) 
  //             (P0 (R2 REq (R0 (E0 (ESym "d_year"))) (R0 (E0 (EInt 1998)))))) 
  //         (J 
  //           (P0 
  //             (R2 REq 
  //                 (R0 (E0 (ESym "lo_orderdate"))) 
  //                 (R0 (E0 (ESym "d_datekey"))))) 
  //           (Q0 (TSymbol "date")) 
  //           (Q0 (TSymbol "lineorder")))) 
  //       (Q0 (TSymbol "supplier")))) 
  std::cout << "Delete: N351" << std::endl;
  deleteFile("/tmp/fluidb_store/data351.dat");
  // Delete: (Q2 
  //   (QRightAntijoin 
  //     (P0 
  //       (R2 REq 
  //           (R0 (E0 (ESym "lo_suppkey"))) 
  //           (R0 (E0 (ESym "s_suppkey")))))) 
  //   (S 
  //     (P0 
  //       (R2 RLike 
  //           (R0 (E0 (ESym "c_region"))) 
  //           (R0 (E0 (EString "AMERICA"))))) 
  //     (J 
  //       (P0 
  //         (R2 REq 
  //             (R0 (E0 (ESym "lo_custkey"))) 
  //             (R0 (E0 (ESym "c_custkey"))))) 
  //       (Q0 (TSymbol "customer")) 
  //       (Q0 (TSymbol "lineorder")))) 
  std::cout << "Delete: N297" << std::endl;
  deleteFile("/tmp/fluidb_store/data297.dat");
  // Delete: (Q2 
  //   (QLeftAntijoin 
  //     (P0 
  //       (R2 REq 
  //           (R0 (E0 (ESym "lo_custkey"))) 
  //           (R0 (E0 (ESym "c_custkey")))))) 
  //   (S 
  //     (P0 
  //       (R2 RLike 
  //           (R0 (E0 (ESym "s_nation"))) 
  //           (R0 (E0 (EString "UNITED STATES"))))) 
  //     (J 
  //       (P0 
  //         (R2 REq 
  //             (R0 (E0 (ESym "lo_suppkey"))) 
  //             (R0 (E0 (ESym "s_suppkey"))))) 
  //       (S 
  //         (P2 POr 
  //             (P0 (R2 REq (R0 (E0 (ESym "d_year"))) (R0 (E0 (EInt 1997))))) 
  //             (P0 (R2 REq (R0 (E0 (ESym "d_year"))) (R0 (E0 (EInt 1998)))))) 
  //         (J 
  //           (P0 
  //             (R2 REq 
  //                 (R0 (E0 (ESym "lo_orderdate"))) 
  //                 (R0 (E0 (ESym "d_datekey"))))) 
  //           (Q0 (TSymbol "date")) 
  //           (Q0 (TSymbol "lineorder")))) 
  //       (Q0 (TSymbol "supplier")))) 
  std::cout << "Delete: N350" << std::endl;
  deleteFile("/tmp/fluidb_store/data350.dat");
  // Delete: (Q2 
  //   (QRightAntijoin 
  //     (P0 
  //       (R2 REq 
  //           (R0 (E0 (ESym "lo_custkey"))) 
  //           (R0 (E0 (ESym "c_custkey")))))) 
  //   (S 
  //     (P0 
  //       (R2 RLike 
  //           (R0 (E0 (ESym "s_nation"))) 
  //           (R0 (E0 (EString "UNITED STATES"))))) 
  //     (J 
  //       (P0 
  //         (R2 REq 
  //             (R0 (E0 (ESym "lo_suppkey"))) 
  //             (R0 (E0 (ESym "s_suppkey"))))) 
  //       (S 
  //         (P2 POr 
  //             (P0 (R2 REq (R0 (E0 (ESym "d_year"))) (R0 (E0 (EInt 1997))))) 
  //             (P0 (R2 REq (R0 (E0 (ESym "d_year"))) (R0 (E0 (EInt 1998)))))) 
  //         (J 
  //           (P0 
  //             (R2 REq 
  //                 (R0 (E0 (ESym "lo_orderdate"))) 
  //                 (R0 (E0 (ESym "d_datekey"))))) 
  //           (Q0 (TSymbol "date")) 
  //           (Q0 (TSymbol "lineorder")))) 
  //       (Q0 (TSymbol "supplier")))) 
  std::cout << "Delete: N352" << std::endl;
  deleteFile("/tmp/fluidb_store/data352.dat");
  // Delete: (Q2 
  //   (QLeftAntijoin 
  //     (P0 
  //       (R2 REq 
  //           (R0 (E0 (ESym "lo_suppkey"))) 
  //           (R0 (E0 (ESym "s_suppkey")))))) 
  //   (J 
  //     (P0 
  //       (R2 REq 
  //           (R0 (E0 (ESym "lo_orderdate"))) 
  //           (R0 (E0 (ESym "d_datekey"))))) 
  //     (Q0 (TSymbol "date")) 
  //     (Q0 (TSymbol "lineorder"))) 
  std::cout << "Delete: N258" << std::endl;
  deleteFile("/tmp/fluidb_store/data258.dat");
  std::cout << "Delete: N3" << std::endl;
  deleteFile("/tmp/fluidb_store/data3.dat");
  // Delete: (J 
  //   (P0 
  //     (R2 REq 
  //         (R0 (E0 (ESym "lo_orderdate"))) 
  //         (R0 (E0 (ESym "d_datekey"))))) 
  //   (Q0 (TSymbol "date")) 
  std::cout << "Delete: N139" << std::endl;
  deleteFile("/tmp/fluidb_store/data139.dat");
  // ForwardTrigger: (Just 
  //   (Left 
  //     [
  //      QJoin 
  //         (P0 
  //           (R2 REq 
  //               (R0 (E0 (ESym "lo_partkey"))) 
  //               (R0 (E0 (ESym "p_partkey")))))
  std::cout << "ForwardTrigger: (Just \n  (Left \n    [\n     QJoin \n        (P0 \n          (R2 REq \n              (R0 (E0 (ESym \"lo_partkey\"))) \n              (R0 (E0 (ESym \"p_partkey\")))))\n    ]))" << std::endl;
  {
    auto operation = mkEquiJoin<CallableClass42, CallableClass44, CallableClass40>(Just<const std::string>("/tmp/fluidb_store/data367.dat"), Just<const std::string>("/tmp/fluidb_store/data366.dat"), Just<const std::string>("/tmp/fluidb_store/data368.dat"), "/tmp/fluidb_store/data345.dat", "/run/user/1000/fluidb-data/part.dat");
    operation.run();
    operation.print_output(10);
  }
  // Delete: (J 
  //   (P0 
  //     (R2 REq (R0 (E0 (ESym "lo_suppkey"))) (R0 (E0 (ESym "s_suppkey"))))) 
  //   (S 
  //     (P0 
  //       (R2 RLike 
  //           (R0 (E0 (ESym "c_region"))) 
  //           (R0 (E0 (EString "AMERICA"))))) 
  //     (J 
  //       (P0 
  //         (R2 REq 
  //             (R0 (E0 (ESym "lo_custkey"))) 
  //             (R0 (E0 (ESym "c_custkey"))))) 
  //       (Q0 (TSymbol "customer")) 
  //       (Q0 (TSymbol "lineorder")))) 
  std::cout << "Delete: N296" << std::endl;
  deleteFile("/tmp/fluidb_store/data296.dat");
  // Delete: (S 
  //   (P2 
  //     PAnd 
  //     (P2 POr 
  //         (P0 (R2 REq (R0 (E0 (ESym "d_year"))) (R0 (E0 (EInt 1997))))) 
  //         (P0 (R2 REq (R0 (E0 (ESym "d_year"))) (R0 (E0 (EInt 1998)))))) 
  //     (P0 
  //       (R2 RLike 
  //           (R0 (E0 (ESym "s_nation"))) 
  //           (R0 (E0 (EString "UNITED STATES")))))) 
  //   (J 
  //     (P0 
  //       (R2 REq 
  //           (R0 (E0 (ESym "lo_suppkey"))) 
  //           (R0 (E0 (ESym "s_suppkey"))))) 
  //     (J 
  //       (P0 
  //         (R2 REq 
  //             (R0 (E0 (ESym "lo_orderdate"))) 
  //             (R0 (E0 (ESym "d_datekey"))))) 
  //       (Q0 (TSymbol "date")) 
  //       (Q0 (TSymbol "lineorder"))) 
  std::cout << "Delete: N347" << std::endl;
  deleteFile("/tmp/fluidb_store/data347.dat");
  // Delete: (S 
  //   (P1 
  //     PNot 
  //     (P2 
  //       PAnd 
  //       (P2 POr 
  //           (P0 (R2 REq (R0 (E0 (ESym "d_year"))) (R0 (E0 (EInt 1997))))) 
  //           (P0 (R2 REq (R0 (E0 (ESym "d_year"))) (R0 (E0 (EInt 1998)))))) 
  //       (P0 
  //         (R2 RLike 
  //             (R0 (E0 (ESym "s_nation"))) 
  //             (R0 (E0 (EString "UNITED STATES"))))))) 
  //   (J 
  //     (P0 
  //       (R2 REq 
  //           (R0 (E0 (ESym "lo_suppkey"))) 
  //           (R0 (E0 (ESym "s_suppkey"))))) 
  //     (J 
  //       (P0 
  //         (R2 REq 
  //             (R0 (E0 (ESym "lo_orderdate"))) 
  //             (R0 (E0 (ESym "d_datekey"))))) 
  //       (Q0 (TSymbol "date")) 
  //       (Q0 (TSymbol "lineorder"))) 
  std::cout << "Delete: N348" << std::endl;
  deleteFile("/tmp/fluidb_store/data348.dat");
  // ForwardTrigger: (Just 
  //   (Right 
  //     [
  //      QSel 
  //         (P0 
  //           (R2 RLike 
  //               (R0 (E0 (ESym "p_category"))) 
  //               (R0 (E0 (EString "MFGR#14")))))
  std::cout << "ForwardTrigger: (Just \n  (Right \n    [\n     QSel \n        (P0 \n          (R2 RLike \n              (R0 (E0 (ESym \"p_category\"))) \n              (R0 (E0 (EString \"MFGR#14\")))))\n    ]))" << std::endl;
  {
    auto operation = mkSelect<CallableClass46>(Just<const std::string>("/tmp/fluidb_store/data343.dat"), Just<const std::string>("/tmp/fluidb_store/data371.dat"), "/tmp/fluidb_store/data367.dat");
    operation.run();
    operation.print_output(10);
  }
  // ForwardTrigger: (Just 
  //   (Right 
  //     [
  //      QGroup 
  //         [
  //          (ESym "d_year",E0 (NAggr AggrFirst (E0 (ESym "d_year")))),
  //          (ESym "s_city",E0 (NAggr AggrFirst (E0 (ESym "s_city")))),
  //          (ESym "p_brand1",E0 (NAggr AggrFirst (E0 (ESym "p_brand1")))),
  //          (
  //            ESym "profit",
  //            E0 
  //               (NAggr 
  //                 AggrSum 
  //                 (E2 ESub 
  //                     (E0 (ESym "lo_revenue")) 
  //                     (E0 (ESym "lo_supplycost"))))
  //           )
  //         ] 
  //         [E0 (ESym "d_year"),E0 (ESym "s_city"),E0 (ESym "p_brand1")]
  std::cout << "ForwardTrigger: (Just \n  (Right \n    [\n     QGroup \n        [\n         (ESym \"d_year\",E0 (NAggr AggrFirst (E0 (ESym \"d_year\")))),\n         (ESym \"s_city\",E0 (NAggr AggrFirst (E0 (ESym \"s_city\")))),\n         (ESym \"p_brand1\",E0 (NAggr AggrFirst (E0 (ESym \"p_brand1\")))),\n         (\n           ESym \"profit\",\n           E0 \n              (NAggr \n                AggrSum \n                (E2 ESub \n                    (E0 (ESym \"lo_revenue\")) \n                    (E0 (ESym \"lo_supplycost\"))))\n          )\n        ] \n        [E0 (ESym \"d_year\"),E0 (ESym \"s_city\"),E0 (ESym \"p_brand1\")]\n    ]))" << std::endl;
  {
    auto operation = mkAggregation<CallableClass54, CallableClass56>(Just<const std::string>("/tmp/fluidb_store/data372.dat"), Just<const std::string>("/tmp/fluidb_store/data343.dat"), "/tmp/fluidb_store/data343.dat");
    operation.run();
    operation.print_output(10);
  }
  // ForwardTrigger: (Just 
  //   (Right 
  std::cout << "ForwardTrigger: (Just \n  (Right \n    [QSort [E0 (ESym \"d_year\"),E0 (ESym \"s_city\"),E0 (ESym \"p_brand1\")]]))" << std::endl;
  {
    auto operation = mkSort<CallableClass58>(Just<const std::string>("/tmp/fluidb_store/data373.dat"), Just<const std::string>("/tmp/fluidb_store/data372.dat"), "/tmp/fluidb_store/data372.dat");
    operation.run();
    operation.print_output(10);
  }
  report_counters();
  return 0;
}
