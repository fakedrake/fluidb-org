#include <array>

#include <string>

#include <codegen.hh>
class Record28 {
 public:
  Record28(unsigned __sortElem0, fluidb_string<10> __sortElem1) : sortElem0(__sortElem0), sortElem1(__sortElem1)
  {
  }
  Record28() 
  {
  }
  std::string show() const{
    std::stringstream o;
    o << sortElem0 << " | " << arrToString(sortElem1);
    return o.str();
  }
  bool operator <(const Record28& otherRec) const{
    return (otherRec.sortElem0 < sortElem0 && otherRec.sortElem1 < sortElem1);
  }
  bool operator ==(const Record28& otherRec) const{
    return (otherRec.sortElem0 == sortElem0 && otherRec.sortElem1 == sortElem1);
  }
  bool operator !=(const Record28& otherRec) const{
    return (otherRec.sortElem0 != sortElem0 || otherRec.sortElem1 != sortElem1);
  }
  unsigned sortElem0;
  fluidb_string<10> sortElem1;
 private:
};


class Record12 {
 public:
  Record12(unsigned __sym__0___45_5856119524029611077, fluidb_string<25> __sym__0___45_6117756446690137488, fluidb_string<40> __sym__0___45_1224041454770943330, fluidb_string<16> __sym__0__3812587929888833564, fluidb_string<16> __sym__0___45_8008422244145826406, fluidb_string<13> __sym__0___45_4939322251048870433, fluidb_string<15> __sym__0__9053752194642805744, unsigned __sym__0__7640136232660398972, int __sym__0__3289943100803186450, unsigned __sym__0___45_5627701903624601606, unsigned __sym__0___45_863299618022773480, unsigned __sym__0__8136723066761439923, unsigned __sym__0___45_8900710125615980474, fluidb_string<21> __sym__0__3462758906763983155, unsigned __sym__0__3593248492832864765, fluidb_string<10> __sym__0__570789152911192442, unsigned __sym__0___45_898962213167368918, double __sym__0__8374566300773412732, unsigned __sym__0__3427059227198728358, double __sym__0___45_6183981215901482044, unsigned __sym__0__5401582859916018176, unsigned __sym__0___45_5742182270645980233, double __sym__0___45_6866160564727197111, fluidb_string<13> __sym__0__5391279297800068881, unsigned __sym__0__6547894395141806496, fluidb_string<18> __sym__0___45_3537255481618975984, fluidb_string<9> __sym__0___45_489602595012032102, fluidb_string<9> __sym__0___45_4289355322834357343, unsigned __sym__0__3088708723790424355, unsigned __sym__0__7661335306996867761, fluidb_string<7> __sym__0__5988258660856233160, unsigned __sym__0__9055435109332708863, unsigned __sym__0___45_8293017417291819416, unsigned __sym__0__6710199602869345088, unsigned __sym__0___45_6808136983507392814, unsigned __sym__0__4732268644213463873, fluidb_string<15> __sym__0___45_9054202570868277068, fluidb_string<2> __sym__0___45_2078724704519105348, fluidb_string<2> __sym__0__1821380049868269517, fluidb_string<2> __sym__0__9082608366399799653, fluidb_string<2> __sym__0__3719923678451811915, unsigned __sym__0___45_4532026337430972310, fluidb_string<55> __sym__0__5967878085860026810, fluidb_string<25> __sym__0__4437551601976402253, fluidb_string<7> __sym__0___45_8824352318197405717, fluidb_string<10> __sym__0__462272293144630813, fluidb_string<11> __sym__0__6951672169272331993, fluidb_string<25> __sym__0__8001753553028231903, unsigned __sym__0__7959165797094177348, fluidb_string<10> __sym__0__3796606591825283389) : sym__0___45_5856119524029611077(__sym__0___45_5856119524029611077), sym__0___45_6117756446690137488(__sym__0___45_6117756446690137488), sym__0___45_1224041454770943330(__sym__0___45_1224041454770943330), sym__0__3812587929888833564(__sym__0__3812587929888833564), sym__0___45_8008422244145826406(__sym__0___45_8008422244145826406), sym__0___45_4939322251048870433(__sym__0___45_4939322251048870433), sym__0__9053752194642805744(__sym__0__9053752194642805744), sym__0__7640136232660398972(__sym__0__7640136232660398972), sym__0__3289943100803186450(__sym__0__3289943100803186450), sym__0___45_5627701903624601606(__sym__0___45_5627701903624601606), sym__0___45_863299618022773480(__sym__0___45_863299618022773480), sym__0__8136723066761439923(__sym__0__8136723066761439923), sym__0___45_8900710125615980474(__sym__0___45_8900710125615980474), sym__0__3462758906763983155(__sym__0__3462758906763983155), sym__0__3593248492832864765(__sym__0__3593248492832864765), sym__0__570789152911192442(__sym__0__570789152911192442), sym__0___45_898962213167368918(__sym__0___45_898962213167368918), sym__0__8374566300773412732(__sym__0__8374566300773412732), sym__0__3427059227198728358(__sym__0__3427059227198728358), sym__0___45_6183981215901482044(__sym__0___45_6183981215901482044), sym__0__5401582859916018176(__sym__0__5401582859916018176), sym__0___45_5742182270645980233(__sym__0___45_5742182270645980233), sym__0___45_6866160564727197111(__sym__0___45_6866160564727197111), sym__0__5391279297800068881(__sym__0__5391279297800068881), sym__0__6547894395141806496(__sym__0__6547894395141806496), sym__0___45_3537255481618975984(__sym__0___45_3537255481618975984), sym__0___45_489602595012032102(__sym__0___45_489602595012032102), sym__0___45_4289355322834357343(__sym__0___45_4289355322834357343), sym__0__3088708723790424355(__sym__0__3088708723790424355), sym__0__7661335306996867761(__sym__0__7661335306996867761), sym__0__5988258660856233160(__sym__0__5988258660856233160), sym__0__9055435109332708863(__sym__0__9055435109332708863), sym__0___45_8293017417291819416(__sym__0___45_8293017417291819416), sym__0__6710199602869345088(__sym__0__6710199602869345088), sym__0___45_6808136983507392814(__sym__0___45_6808136983507392814), sym__0__4732268644213463873(__sym__0__4732268644213463873), sym__0___45_9054202570868277068(__sym__0___45_9054202570868277068), sym__0___45_2078724704519105348(__sym__0___45_2078724704519105348), sym__0__1821380049868269517(__sym__0__1821380049868269517), sym__0__9082608366399799653(__sym__0__9082608366399799653), sym__0__3719923678451811915(__sym__0__3719923678451811915), sym__0___45_4532026337430972310(__sym__0___45_4532026337430972310), sym__0__5967878085860026810(__sym__0__5967878085860026810), sym__0__4437551601976402253(__sym__0__4437551601976402253), sym__0___45_8824352318197405717(__sym__0___45_8824352318197405717), sym__0__462272293144630813(__sym__0__462272293144630813), sym__0__6951672169272331993(__sym__0__6951672169272331993), sym__0__8001753553028231903(__sym__0__8001753553028231903), sym__0__7959165797094177348(__sym__0__7959165797094177348), sym__0__3796606591825283389(__sym__0__3796606591825283389)
  {
  }
  Record12() 
  {
  }
  std::string show() const{
    std::stringstream o;
    o << sym__0___45_5856119524029611077 << " | " << arrToString(sym__0___45_6117756446690137488) << " | " << arrToString(sym__0___45_1224041454770943330) << " | " << arrToString(sym__0__3812587929888833564) << " | " << arrToString(sym__0___45_8008422244145826406) << " | " << arrToString(sym__0___45_4939322251048870433) << " | " << arrToString(sym__0__9053752194642805744) << " | " << sym__0__7640136232660398972 << " | " << sym__0__3289943100803186450 << " | " << sym__0___45_5627701903624601606 << " | " << sym__0___45_863299618022773480 << " | " << sym__0__8136723066761439923 << " | " << sym__0___45_8900710125615980474 << " | " << arrToString(sym__0__3462758906763983155) << " | " << sym__0__3593248492832864765 << " | " << arrToString(sym__0__570789152911192442) << " | " << sym__0___45_898962213167368918 << " | " << sym__0__8374566300773412732 << " | " << sym__0__3427059227198728358 << " | " << sym__0___45_6183981215901482044 << " | " << sym__0__5401582859916018176 << " | " << sym__0___45_5742182270645980233 << " | " << sym__0___45_6866160564727197111 << " | " << arrToString(sym__0__5391279297800068881) << " | " << sym__0__6547894395141806496 << " | " << arrToString(sym__0___45_3537255481618975984) << " | " << arrToString(sym__0___45_489602595012032102) << " | " << arrToString(sym__0___45_4289355322834357343) << " | " << sym__0__3088708723790424355 << " | " << sym__0__7661335306996867761 << " | " << arrToString(sym__0__5988258660856233160) << " | " << sym__0__9055435109332708863 << " | " << sym__0___45_8293017417291819416 << " | " << sym__0__6710199602869345088 << " | " << sym__0___45_6808136983507392814 << " | " << sym__0__4732268644213463873 << " | " << arrToString(sym__0___45_9054202570868277068) << " | " << arrToString(sym__0___45_2078724704519105348) << " | " << arrToString(sym__0__1821380049868269517) << " | " << arrToString(sym__0__9082608366399799653) << " | " << arrToString(sym__0__3719923678451811915) << " | " << sym__0___45_4532026337430972310 << " | " << arrToString(sym__0__5967878085860026810) << " | " << arrToString(sym__0__4437551601976402253) << " | " << arrToString(sym__0___45_8824352318197405717) << " | " << arrToString(sym__0__462272293144630813) << " | " << arrToString(sym__0__6951672169272331993) << " | " << arrToString(sym__0__8001753553028231903) << " | " << sym__0__7959165797094177348 << " | " << arrToString(sym__0__3796606591825283389);
    return o.str();
  }
  bool operator <(const Record12& otherRec) const{
    return (otherRec.sym__0___45_5856119524029611077 < sym__0___45_5856119524029611077 && (otherRec.sym__0___45_6117756446690137488 < sym__0___45_6117756446690137488 && (otherRec.sym__0___45_1224041454770943330 < sym__0___45_1224041454770943330 && (otherRec.sym__0__3812587929888833564 < sym__0__3812587929888833564 && (otherRec.sym__0___45_8008422244145826406 < sym__0___45_8008422244145826406 && (otherRec.sym__0___45_4939322251048870433 < sym__0___45_4939322251048870433 && (otherRec.sym__0__9053752194642805744 < sym__0__9053752194642805744 && (otherRec.sym__0__7640136232660398972 < sym__0__7640136232660398972 && (otherRec.sym__0__3289943100803186450 < sym__0__3289943100803186450 && (otherRec.sym__0___45_5627701903624601606 < sym__0___45_5627701903624601606 && (otherRec.sym__0___45_863299618022773480 < sym__0___45_863299618022773480 && (otherRec.sym__0__8136723066761439923 < sym__0__8136723066761439923 && (otherRec.sym__0___45_8900710125615980474 < sym__0___45_8900710125615980474 && (otherRec.sym__0__3462758906763983155 < sym__0__3462758906763983155 && (otherRec.sym__0__3593248492832864765 < sym__0__3593248492832864765 && (otherRec.sym__0__570789152911192442 < sym__0__570789152911192442 && (otherRec.sym__0___45_898962213167368918 < sym__0___45_898962213167368918 && (otherRec.sym__0__8374566300773412732 < sym__0__8374566300773412732 && (otherRec.sym__0__3427059227198728358 < sym__0__3427059227198728358 && (otherRec.sym__0___45_6183981215901482044 < sym__0___45_6183981215901482044 && (otherRec.sym__0__5401582859916018176 < sym__0__5401582859916018176 && (otherRec.sym__0___45_5742182270645980233 < sym__0___45_5742182270645980233 && (otherRec.sym__0___45_6866160564727197111 < sym__0___45_6866160564727197111 && (otherRec.sym__0__5391279297800068881 < sym__0__5391279297800068881 && (otherRec.sym__0__6547894395141806496 < sym__0__6547894395141806496 && (otherRec.sym__0___45_3537255481618975984 < sym__0___45_3537255481618975984 && (otherRec.sym__0___45_489602595012032102 < sym__0___45_489602595012032102 && (otherRec.sym__0___45_4289355322834357343 < sym__0___45_4289355322834357343 && (otherRec.sym__0__3088708723790424355 < sym__0__3088708723790424355 && (otherRec.sym__0__7661335306996867761 < sym__0__7661335306996867761 && (otherRec.sym__0__5988258660856233160 < sym__0__5988258660856233160 && (otherRec.sym__0__9055435109332708863 < sym__0__9055435109332708863 && (otherRec.sym__0___45_8293017417291819416 < sym__0___45_8293017417291819416 && (otherRec.sym__0__6710199602869345088 < sym__0__6710199602869345088 && (otherRec.sym__0___45_6808136983507392814 < sym__0___45_6808136983507392814 && (otherRec.sym__0__4732268644213463873 < sym__0__4732268644213463873 && (otherRec.sym__0___45_9054202570868277068 < sym__0___45_9054202570868277068 && (otherRec.sym__0___45_2078724704519105348 < sym__0___45_2078724704519105348 && (otherRec.sym__0__1821380049868269517 < sym__0__1821380049868269517 && (otherRec.sym__0__9082608366399799653 < sym__0__9082608366399799653 && (otherRec.sym__0__3719923678451811915 < sym__0__3719923678451811915 && (otherRec.sym__0___45_4532026337430972310 < sym__0___45_4532026337430972310 && (otherRec.sym__0__5967878085860026810 < sym__0__5967878085860026810 && (otherRec.sym__0__4437551601976402253 < sym__0__4437551601976402253 && (otherRec.sym__0___45_8824352318197405717 < sym__0___45_8824352318197405717 && (otherRec.sym__0__462272293144630813 < sym__0__462272293144630813 && (otherRec.sym__0__6951672169272331993 < sym__0__6951672169272331993 && (otherRec.sym__0__8001753553028231903 < sym__0__8001753553028231903 && (otherRec.sym__0__7959165797094177348 < sym__0__7959165797094177348 && otherRec.sym__0__3796606591825283389 < sym__0__3796606591825283389)))))))))))))))))))))))))))))))))))))))))))))))));
  }
  bool operator ==(const Record12& otherRec) const{
    return (otherRec.sym__0___45_5856119524029611077 == sym__0___45_5856119524029611077 && (otherRec.sym__0___45_6117756446690137488 == sym__0___45_6117756446690137488 && (otherRec.sym__0___45_1224041454770943330 == sym__0___45_1224041454770943330 && (otherRec.sym__0__3812587929888833564 == sym__0__3812587929888833564 && (otherRec.sym__0___45_8008422244145826406 == sym__0___45_8008422244145826406 && (otherRec.sym__0___45_4939322251048870433 == sym__0___45_4939322251048870433 && (otherRec.sym__0__9053752194642805744 == sym__0__9053752194642805744 && (otherRec.sym__0__7640136232660398972 == sym__0__7640136232660398972 && (otherRec.sym__0__3289943100803186450 == sym__0__3289943100803186450 && (otherRec.sym__0___45_5627701903624601606 == sym__0___45_5627701903624601606 && (otherRec.sym__0___45_863299618022773480 == sym__0___45_863299618022773480 && (otherRec.sym__0__8136723066761439923 == sym__0__8136723066761439923 && (otherRec.sym__0___45_8900710125615980474 == sym__0___45_8900710125615980474 && (otherRec.sym__0__3462758906763983155 == sym__0__3462758906763983155 && (otherRec.sym__0__3593248492832864765 == sym__0__3593248492832864765 && (otherRec.sym__0__570789152911192442 == sym__0__570789152911192442 && (otherRec.sym__0___45_898962213167368918 == sym__0___45_898962213167368918 && (otherRec.sym__0__8374566300773412732 == sym__0__8374566300773412732 && (otherRec.sym__0__3427059227198728358 == sym__0__3427059227198728358 && (otherRec.sym__0___45_6183981215901482044 == sym__0___45_6183981215901482044 && (otherRec.sym__0__5401582859916018176 == sym__0__5401582859916018176 && (otherRec.sym__0___45_5742182270645980233 == sym__0___45_5742182270645980233 && (otherRec.sym__0___45_6866160564727197111 == sym__0___45_6866160564727197111 && (otherRec.sym__0__5391279297800068881 == sym__0__5391279297800068881 && (otherRec.sym__0__6547894395141806496 == sym__0__6547894395141806496 && (otherRec.sym__0___45_3537255481618975984 == sym__0___45_3537255481618975984 && (otherRec.sym__0___45_489602595012032102 == sym__0___45_489602595012032102 && (otherRec.sym__0___45_4289355322834357343 == sym__0___45_4289355322834357343 && (otherRec.sym__0__3088708723790424355 == sym__0__3088708723790424355 && (otherRec.sym__0__7661335306996867761 == sym__0__7661335306996867761 && (otherRec.sym__0__5988258660856233160 == sym__0__5988258660856233160 && (otherRec.sym__0__9055435109332708863 == sym__0__9055435109332708863 && (otherRec.sym__0___45_8293017417291819416 == sym__0___45_8293017417291819416 && (otherRec.sym__0__6710199602869345088 == sym__0__6710199602869345088 && (otherRec.sym__0___45_6808136983507392814 == sym__0___45_6808136983507392814 && (otherRec.sym__0__4732268644213463873 == sym__0__4732268644213463873 && (otherRec.sym__0___45_9054202570868277068 == sym__0___45_9054202570868277068 && (otherRec.sym__0___45_2078724704519105348 == sym__0___45_2078724704519105348 && (otherRec.sym__0__1821380049868269517 == sym__0__1821380049868269517 && (otherRec.sym__0__9082608366399799653 == sym__0__9082608366399799653 && (otherRec.sym__0__3719923678451811915 == sym__0__3719923678451811915 && (otherRec.sym__0___45_4532026337430972310 == sym__0___45_4532026337430972310 && (otherRec.sym__0__5967878085860026810 == sym__0__5967878085860026810 && (otherRec.sym__0__4437551601976402253 == sym__0__4437551601976402253 && (otherRec.sym__0___45_8824352318197405717 == sym__0___45_8824352318197405717 && (otherRec.sym__0__462272293144630813 == sym__0__462272293144630813 && (otherRec.sym__0__6951672169272331993 == sym__0__6951672169272331993 && (otherRec.sym__0__8001753553028231903 == sym__0__8001753553028231903 && (otherRec.sym__0__7959165797094177348 == sym__0__7959165797094177348 && otherRec.sym__0__3796606591825283389 == sym__0__3796606591825283389)))))))))))))))))))))))))))))))))))))))))))))))));
  }
  bool operator !=(const Record12& otherRec) const{
    return (otherRec.sym__0___45_5856119524029611077 != sym__0___45_5856119524029611077 || (otherRec.sym__0___45_6117756446690137488 != sym__0___45_6117756446690137488 || (otherRec.sym__0___45_1224041454770943330 != sym__0___45_1224041454770943330 || (otherRec.sym__0__3812587929888833564 != sym__0__3812587929888833564 || (otherRec.sym__0___45_8008422244145826406 != sym__0___45_8008422244145826406 || (otherRec.sym__0___45_4939322251048870433 != sym__0___45_4939322251048870433 || (otherRec.sym__0__9053752194642805744 != sym__0__9053752194642805744 || (otherRec.sym__0__7640136232660398972 != sym__0__7640136232660398972 || (otherRec.sym__0__3289943100803186450 != sym__0__3289943100803186450 || (otherRec.sym__0___45_5627701903624601606 != sym__0___45_5627701903624601606 || (otherRec.sym__0___45_863299618022773480 != sym__0___45_863299618022773480 || (otherRec.sym__0__8136723066761439923 != sym__0__8136723066761439923 || (otherRec.sym__0___45_8900710125615980474 != sym__0___45_8900710125615980474 || (otherRec.sym__0__3462758906763983155 != sym__0__3462758906763983155 || (otherRec.sym__0__3593248492832864765 != sym__0__3593248492832864765 || (otherRec.sym__0__570789152911192442 != sym__0__570789152911192442 || (otherRec.sym__0___45_898962213167368918 != sym__0___45_898962213167368918 || (otherRec.sym__0__8374566300773412732 != sym__0__8374566300773412732 || (otherRec.sym__0__3427059227198728358 != sym__0__3427059227198728358 || (otherRec.sym__0___45_6183981215901482044 != sym__0___45_6183981215901482044 || (otherRec.sym__0__5401582859916018176 != sym__0__5401582859916018176 || (otherRec.sym__0___45_5742182270645980233 != sym__0___45_5742182270645980233 || (otherRec.sym__0___45_6866160564727197111 != sym__0___45_6866160564727197111 || (otherRec.sym__0__5391279297800068881 != sym__0__5391279297800068881 || (otherRec.sym__0__6547894395141806496 != sym__0__6547894395141806496 || (otherRec.sym__0___45_3537255481618975984 != sym__0___45_3537255481618975984 || (otherRec.sym__0___45_489602595012032102 != sym__0___45_489602595012032102 || (otherRec.sym__0___45_4289355322834357343 != sym__0___45_4289355322834357343 || (otherRec.sym__0__3088708723790424355 != sym__0__3088708723790424355 || (otherRec.sym__0__7661335306996867761 != sym__0__7661335306996867761 || (otherRec.sym__0__5988258660856233160 != sym__0__5988258660856233160 || (otherRec.sym__0__9055435109332708863 != sym__0__9055435109332708863 || (otherRec.sym__0___45_8293017417291819416 != sym__0___45_8293017417291819416 || (otherRec.sym__0__6710199602869345088 != sym__0__6710199602869345088 || (otherRec.sym__0___45_6808136983507392814 != sym__0___45_6808136983507392814 || (otherRec.sym__0__4732268644213463873 != sym__0__4732268644213463873 || (otherRec.sym__0___45_9054202570868277068 != sym__0___45_9054202570868277068 || (otherRec.sym__0___45_2078724704519105348 != sym__0___45_2078724704519105348 || (otherRec.sym__0__1821380049868269517 != sym__0__1821380049868269517 || (otherRec.sym__0__9082608366399799653 != sym__0__9082608366399799653 || (otherRec.sym__0__3719923678451811915 != sym__0__3719923678451811915 || (otherRec.sym__0___45_4532026337430972310 != sym__0___45_4532026337430972310 || (otherRec.sym__0__5967878085860026810 != sym__0__5967878085860026810 || (otherRec.sym__0__4437551601976402253 != sym__0__4437551601976402253 || (otherRec.sym__0___45_8824352318197405717 != sym__0___45_8824352318197405717 || (otherRec.sym__0__462272293144630813 != sym__0__462272293144630813 || (otherRec.sym__0__6951672169272331993 != sym__0__6951672169272331993 || (otherRec.sym__0__8001753553028231903 != sym__0__8001753553028231903 || (otherRec.sym__0__7959165797094177348 != sym__0__7959165797094177348 || otherRec.sym__0__3796606591825283389 != sym__0__3796606591825283389)))))))))))))))))))))))))))))))))))))))))))))))));
  }
  unsigned sym__0___45_5856119524029611077;
  fluidb_string<25> sym__0___45_6117756446690137488;
  fluidb_string<40> sym__0___45_1224041454770943330;
  fluidb_string<16> sym__0__3812587929888833564;
  fluidb_string<16> sym__0___45_8008422244145826406;
  fluidb_string<13> sym__0___45_4939322251048870433;
  fluidb_string<15> sym__0__9053752194642805744;
  unsigned sym__0__7640136232660398972;
  int sym__0__3289943100803186450;
  unsigned sym__0___45_5627701903624601606;
  unsigned sym__0___45_863299618022773480;
  unsigned sym__0__8136723066761439923;
  unsigned sym__0___45_8900710125615980474;
  fluidb_string<21> sym__0__3462758906763983155;
  unsigned sym__0__3593248492832864765;
  fluidb_string<10> sym__0__570789152911192442;
  unsigned sym__0___45_898962213167368918;
  double sym__0__8374566300773412732;
  unsigned sym__0__3427059227198728358;
  double sym__0___45_6183981215901482044;
  unsigned sym__0__5401582859916018176;
  unsigned sym__0___45_5742182270645980233;
  double sym__0___45_6866160564727197111;
  fluidb_string<13> sym__0__5391279297800068881;
  unsigned sym__0__6547894395141806496;
  fluidb_string<18> sym__0___45_3537255481618975984;
  fluidb_string<9> sym__0___45_489602595012032102;
  fluidb_string<9> sym__0___45_4289355322834357343;
  unsigned sym__0__3088708723790424355;
  unsigned sym__0__7661335306996867761;
  fluidb_string<7> sym__0__5988258660856233160;
  unsigned sym__0__9055435109332708863;
  unsigned sym__0___45_8293017417291819416;
  unsigned sym__0__6710199602869345088;
  unsigned sym__0___45_6808136983507392814;
  unsigned sym__0__4732268644213463873;
  fluidb_string<15> sym__0___45_9054202570868277068;
  fluidb_string<2> sym__0___45_2078724704519105348;
  fluidb_string<2> sym__0__1821380049868269517;
  fluidb_string<2> sym__0__9082608366399799653;
  fluidb_string<2> sym__0__3719923678451811915;
  unsigned sym__0___45_4532026337430972310;
  fluidb_string<55> sym__0__5967878085860026810;
  fluidb_string<25> sym__0__4437551601976402253;
  fluidb_string<7> sym__0___45_8824352318197405717;
  fluidb_string<10> sym__0__462272293144630813;
  fluidb_string<11> sym__0__6951672169272331993;
  fluidb_string<25> sym__0__8001753553028231903;
  unsigned sym__0__7959165797094177348;
  fluidb_string<10> sym__0__3796606591825283389;
 private:
};


class Record4 {
 public:
  Record4(unsigned __sym__0__7178003535380331304, fluidb_string<55> __sym__0___45_7020257275696364520, fluidb_string<25> __sym__0___45_6307179734719967033, fluidb_string<7> __sym__0__4568304886257136061, fluidb_string<10> __sym__0___45_6291097039630000265, fluidb_string<11> __sym__0__551327770031967739, fluidb_string<25> __sym__0__3827696365022297353, unsigned __sym__0___45_1779543743759935870, fluidb_string<10> __sym__0__3752090135924368535) : sym__0__7178003535380331304(__sym__0__7178003535380331304), sym__0___45_7020257275696364520(__sym__0___45_7020257275696364520), sym__0___45_6307179734719967033(__sym__0___45_6307179734719967033), sym__0__4568304886257136061(__sym__0__4568304886257136061), sym__0___45_6291097039630000265(__sym__0___45_6291097039630000265), sym__0__551327770031967739(__sym__0__551327770031967739), sym__0__3827696365022297353(__sym__0__3827696365022297353), sym__0___45_1779543743759935870(__sym__0___45_1779543743759935870), sym__0__3752090135924368535(__sym__0__3752090135924368535)
  {
  }
  Record4() 
  {
  }
  std::string show() const{
    std::stringstream o;
    o << sym__0__7178003535380331304 << " | " << arrToString(sym__0___45_7020257275696364520) << " | " << arrToString(sym__0___45_6307179734719967033) << " | " << arrToString(sym__0__4568304886257136061) << " | " << arrToString(sym__0___45_6291097039630000265) << " | " << arrToString(sym__0__551327770031967739) << " | " << arrToString(sym__0__3827696365022297353) << " | " << sym__0___45_1779543743759935870 << " | " << arrToString(sym__0__3752090135924368535);
    return o.str();
  }
  bool operator <(const Record4& otherRec) const{
    return (otherRec.sym__0__7178003535380331304 < sym__0__7178003535380331304 && (otherRec.sym__0___45_7020257275696364520 < sym__0___45_7020257275696364520 && (otherRec.sym__0___45_6307179734719967033 < sym__0___45_6307179734719967033 && (otherRec.sym__0__4568304886257136061 < sym__0__4568304886257136061 && (otherRec.sym__0___45_6291097039630000265 < sym__0___45_6291097039630000265 && (otherRec.sym__0__551327770031967739 < sym__0__551327770031967739 && (otherRec.sym__0__3827696365022297353 < sym__0__3827696365022297353 && (otherRec.sym__0___45_1779543743759935870 < sym__0___45_1779543743759935870 && otherRec.sym__0__3752090135924368535 < sym__0__3752090135924368535))))))));
  }
  bool operator ==(const Record4& otherRec) const{
    return (otherRec.sym__0__7178003535380331304 == sym__0__7178003535380331304 && (otherRec.sym__0___45_7020257275696364520 == sym__0___45_7020257275696364520 && (otherRec.sym__0___45_6307179734719967033 == sym__0___45_6307179734719967033 && (otherRec.sym__0__4568304886257136061 == sym__0__4568304886257136061 && (otherRec.sym__0___45_6291097039630000265 == sym__0___45_6291097039630000265 && (otherRec.sym__0__551327770031967739 == sym__0__551327770031967739 && (otherRec.sym__0__3827696365022297353 == sym__0__3827696365022297353 && (otherRec.sym__0___45_1779543743759935870 == sym__0___45_1779543743759935870 && otherRec.sym__0__3752090135924368535 == sym__0__3752090135924368535))))))));
  }
  bool operator !=(const Record4& otherRec) const{
    return (otherRec.sym__0__7178003535380331304 != sym__0__7178003535380331304 || (otherRec.sym__0___45_7020257275696364520 != sym__0___45_7020257275696364520 || (otherRec.sym__0___45_6307179734719967033 != sym__0___45_6307179734719967033 || (otherRec.sym__0__4568304886257136061 != sym__0__4568304886257136061 || (otherRec.sym__0___45_6291097039630000265 != sym__0___45_6291097039630000265 || (otherRec.sym__0__551327770031967739 != sym__0__551327770031967739 || (otherRec.sym__0__3827696365022297353 != sym__0__3827696365022297353 || (otherRec.sym__0___45_1779543743759935870 != sym__0___45_1779543743759935870 || otherRec.sym__0__3752090135924368535 != sym__0__3752090135924368535))))))));
  }
  unsigned sym__0__7178003535380331304;
  fluidb_string<55> sym__0___45_7020257275696364520;
  fluidb_string<25> sym__0___45_6307179734719967033;
  fluidb_string<7> sym__0__4568304886257136061;
  fluidb_string<10> sym__0___45_6291097039630000265;
  fluidb_string<11> sym__0__551327770031967739;
  fluidb_string<25> sym__0__3827696365022297353;
  unsigned sym__0___45_1779543743759935870;
  fluidb_string<10> sym__0__3752090135924368535;
 private:
};


class Record22 {
 public:
  Record22(unsigned __sym__0___45_7743617557643973661, unsigned __sym__0___45_6261698000977207925, fluidb_string<10> __sym__0__1631598784897141641) : sym__0___45_7743617557643973661(__sym__0___45_7743617557643973661), sym__0___45_6261698000977207925(__sym__0___45_6261698000977207925), sym__0__1631598784897141641(__sym__0__1631598784897141641)
  {
  }
  Record22() 
  {
  }
  std::string show() const{
    std::stringstream o;
    o << sym__0___45_7743617557643973661 << " | " << sym__0___45_6261698000977207925 << " | " << arrToString(sym__0__1631598784897141641);
    return o.str();
  }
  bool operator <(const Record22& otherRec) const{
    return (otherRec.sym__0___45_7743617557643973661 < sym__0___45_7743617557643973661 && (otherRec.sym__0___45_6261698000977207925 < sym__0___45_6261698000977207925 && otherRec.sym__0__1631598784897141641 < sym__0__1631598784897141641));
  }
  bool operator ==(const Record22& otherRec) const{
    return (otherRec.sym__0___45_7743617557643973661 == sym__0___45_7743617557643973661 && (otherRec.sym__0___45_6261698000977207925 == sym__0___45_6261698000977207925 && otherRec.sym__0__1631598784897141641 == sym__0__1631598784897141641));
  }
  bool operator !=(const Record22& otherRec) const{
    return (otherRec.sym__0___45_7743617557643973661 != sym__0___45_7743617557643973661 || (otherRec.sym__0___45_6261698000977207925 != sym__0___45_6261698000977207925 || otherRec.sym__0__1631598784897141641 != sym__0__1631598784897141641));
  }
  unsigned sym__0___45_7743617557643973661;
  unsigned sym__0___45_6261698000977207925;
  fluidb_string<10> sym__0__1631598784897141641;
 private:
};


class Record24 {
 public:
  Record24(unsigned __sym__0___45_531840894949671910, fluidb_string<25> __sym__0___45_7594568260455252811, fluidb_string<40> __sym__0___45_4224396157642132841, fluidb_string<16> __sym__0___45_5121813103072643223, fluidb_string<16> __sym__0__3627274254091843899, fluidb_string<13> __sym__0___45_519289659968682554, fluidb_string<15> __sym__0__5824930074457018933, unsigned __sym__0__8300140134385342025, int __sym__0___45_4363113810210080717, unsigned __sym__0___45_2180998471546424549, unsigned __sym__0___45_591129746765413155, unsigned __sym__0___45_4416720451126861422, unsigned __sym__0___45_2100514126469912481, fluidb_string<21> __sym__0__3750234095707159570, unsigned __sym__0___45_7960421939889289288, fluidb_string<10> __sym__0___45_8655770192480484197, unsigned __sym__0__2072590499357086155, double __sym__0__8268830136148095561, unsigned __sym__0___45_678210870537240385, double __sym__0__6112270341236569873, unsigned __sym__0__8598037934431251909, unsigned __sym__0__5291402561130019774, double __sym__0___45_7851524774395097220, fluidb_string<13> __sym__0__1291698872846441412, unsigned __sym__0__8986418791032324453, fluidb_string<18> __sym__0__2167360253537002837, fluidb_string<9> __sym__0__8141858625439628603, fluidb_string<9> __sym__0___45_7931886843684217772, unsigned __sym__0___45_2549139954849286782, unsigned __sym__0___45_1691445119060855580, fluidb_string<7> __sym__0__7474331622035256461, unsigned __sym__0___45_667953329600979866, unsigned __sym__0___45_3035057609626888019, unsigned __sym__0___45_8476599677752189563, unsigned __sym__0___45_6389391189957387661, unsigned __sym__0___45_6486695610681891724, fluidb_string<15> __sym__0__4796994603556539905, fluidb_string<2> __sym__0___45_6306286879286504951, fluidb_string<2> __sym__0___45_922796240211516024, fluidb_string<2> __sym__0__2810436566368623008, fluidb_string<2> __sym__0__7272995257348976042, unsigned __sym__0__1928421907625115531, fluidb_string<55> __sym__0__6254739572024865371, fluidb_string<25> __sym__0___45_5257913184343802104, fluidb_string<7> __sym__0___45_1520289822717538230, fluidb_string<10> __sym__0___45_8628415396103686184, fluidb_string<11> __sym__0__2109492732871942412, fluidb_string<25> __sym__0__5385658520341277382, unsigned __sym__0__3660583386293997969, fluidb_string<10> __sym__0___45_3013711856665730696) : sym__0___45_531840894949671910(__sym__0___45_531840894949671910), sym__0___45_7594568260455252811(__sym__0___45_7594568260455252811), sym__0___45_4224396157642132841(__sym__0___45_4224396157642132841), sym__0___45_5121813103072643223(__sym__0___45_5121813103072643223), sym__0__3627274254091843899(__sym__0__3627274254091843899), sym__0___45_519289659968682554(__sym__0___45_519289659968682554), sym__0__5824930074457018933(__sym__0__5824930074457018933), sym__0__8300140134385342025(__sym__0__8300140134385342025), sym__0___45_4363113810210080717(__sym__0___45_4363113810210080717), sym__0___45_2180998471546424549(__sym__0___45_2180998471546424549), sym__0___45_591129746765413155(__sym__0___45_591129746765413155), sym__0___45_4416720451126861422(__sym__0___45_4416720451126861422), sym__0___45_2100514126469912481(__sym__0___45_2100514126469912481), sym__0__3750234095707159570(__sym__0__3750234095707159570), sym__0___45_7960421939889289288(__sym__0___45_7960421939889289288), sym__0___45_8655770192480484197(__sym__0___45_8655770192480484197), sym__0__2072590499357086155(__sym__0__2072590499357086155), sym__0__8268830136148095561(__sym__0__8268830136148095561), sym__0___45_678210870537240385(__sym__0___45_678210870537240385), sym__0__6112270341236569873(__sym__0__6112270341236569873), sym__0__8598037934431251909(__sym__0__8598037934431251909), sym__0__5291402561130019774(__sym__0__5291402561130019774), sym__0___45_7851524774395097220(__sym__0___45_7851524774395097220), sym__0__1291698872846441412(__sym__0__1291698872846441412), sym__0__8986418791032324453(__sym__0__8986418791032324453), sym__0__2167360253537002837(__sym__0__2167360253537002837), sym__0__8141858625439628603(__sym__0__8141858625439628603), sym__0___45_7931886843684217772(__sym__0___45_7931886843684217772), sym__0___45_2549139954849286782(__sym__0___45_2549139954849286782), sym__0___45_1691445119060855580(__sym__0___45_1691445119060855580), sym__0__7474331622035256461(__sym__0__7474331622035256461), sym__0___45_667953329600979866(__sym__0___45_667953329600979866), sym__0___45_3035057609626888019(__sym__0___45_3035057609626888019), sym__0___45_8476599677752189563(__sym__0___45_8476599677752189563), sym__0___45_6389391189957387661(__sym__0___45_6389391189957387661), sym__0___45_6486695610681891724(__sym__0___45_6486695610681891724), sym__0__4796994603556539905(__sym__0__4796994603556539905), sym__0___45_6306286879286504951(__sym__0___45_6306286879286504951), sym__0___45_922796240211516024(__sym__0___45_922796240211516024), sym__0__2810436566368623008(__sym__0__2810436566368623008), sym__0__7272995257348976042(__sym__0__7272995257348976042), sym__0__1928421907625115531(__sym__0__1928421907625115531), sym__0__6254739572024865371(__sym__0__6254739572024865371), sym__0___45_5257913184343802104(__sym__0___45_5257913184343802104), sym__0___45_1520289822717538230(__sym__0___45_1520289822717538230), sym__0___45_8628415396103686184(__sym__0___45_8628415396103686184), sym__0__2109492732871942412(__sym__0__2109492732871942412), sym__0__5385658520341277382(__sym__0__5385658520341277382), sym__0__3660583386293997969(__sym__0__3660583386293997969), sym__0___45_3013711856665730696(__sym__0___45_3013711856665730696)
  {
  }
  Record24() 
  {
  }
  std::string show() const{
    std::stringstream o;
    o << sym__0___45_531840894949671910 << " | " << arrToString(sym__0___45_7594568260455252811) << " | " << arrToString(sym__0___45_4224396157642132841) << " | " << arrToString(sym__0___45_5121813103072643223) << " | " << arrToString(sym__0__3627274254091843899) << " | " << arrToString(sym__0___45_519289659968682554) << " | " << arrToString(sym__0__5824930074457018933) << " | " << sym__0__8300140134385342025 << " | " << sym__0___45_4363113810210080717 << " | " << sym__0___45_2180998471546424549 << " | " << sym__0___45_591129746765413155 << " | " << sym__0___45_4416720451126861422 << " | " << sym__0___45_2100514126469912481 << " | " << arrToString(sym__0__3750234095707159570) << " | " << sym__0___45_7960421939889289288 << " | " << arrToString(sym__0___45_8655770192480484197) << " | " << sym__0__2072590499357086155 << " | " << sym__0__8268830136148095561 << " | " << sym__0___45_678210870537240385 << " | " << sym__0__6112270341236569873 << " | " << sym__0__8598037934431251909 << " | " << sym__0__5291402561130019774 << " | " << sym__0___45_7851524774395097220 << " | " << arrToString(sym__0__1291698872846441412) << " | " << sym__0__8986418791032324453 << " | " << arrToString(sym__0__2167360253537002837) << " | " << arrToString(sym__0__8141858625439628603) << " | " << arrToString(sym__0___45_7931886843684217772) << " | " << sym__0___45_2549139954849286782 << " | " << sym__0___45_1691445119060855580 << " | " << arrToString(sym__0__7474331622035256461) << " | " << sym__0___45_667953329600979866 << " | " << sym__0___45_3035057609626888019 << " | " << sym__0___45_8476599677752189563 << " | " << sym__0___45_6389391189957387661 << " | " << sym__0___45_6486695610681891724 << " | " << arrToString(sym__0__4796994603556539905) << " | " << arrToString(sym__0___45_6306286879286504951) << " | " << arrToString(sym__0___45_922796240211516024) << " | " << arrToString(sym__0__2810436566368623008) << " | " << arrToString(sym__0__7272995257348976042) << " | " << sym__0__1928421907625115531 << " | " << arrToString(sym__0__6254739572024865371) << " | " << arrToString(sym__0___45_5257913184343802104) << " | " << arrToString(sym__0___45_1520289822717538230) << " | " << arrToString(sym__0___45_8628415396103686184) << " | " << arrToString(sym__0__2109492732871942412) << " | " << arrToString(sym__0__5385658520341277382) << " | " << sym__0__3660583386293997969 << " | " << arrToString(sym__0___45_3013711856665730696);
    return o.str();
  }
  bool operator <(const Record24& otherRec) const{
    return (otherRec.sym__0___45_531840894949671910 < sym__0___45_531840894949671910 && (otherRec.sym__0___45_7594568260455252811 < sym__0___45_7594568260455252811 && (otherRec.sym__0___45_4224396157642132841 < sym__0___45_4224396157642132841 && (otherRec.sym__0___45_5121813103072643223 < sym__0___45_5121813103072643223 && (otherRec.sym__0__3627274254091843899 < sym__0__3627274254091843899 && (otherRec.sym__0___45_519289659968682554 < sym__0___45_519289659968682554 && (otherRec.sym__0__5824930074457018933 < sym__0__5824930074457018933 && (otherRec.sym__0__8300140134385342025 < sym__0__8300140134385342025 && (otherRec.sym__0___45_4363113810210080717 < sym__0___45_4363113810210080717 && (otherRec.sym__0___45_2180998471546424549 < sym__0___45_2180998471546424549 && (otherRec.sym__0___45_591129746765413155 < sym__0___45_591129746765413155 && (otherRec.sym__0___45_4416720451126861422 < sym__0___45_4416720451126861422 && (otherRec.sym__0___45_2100514126469912481 < sym__0___45_2100514126469912481 && (otherRec.sym__0__3750234095707159570 < sym__0__3750234095707159570 && (otherRec.sym__0___45_7960421939889289288 < sym__0___45_7960421939889289288 && (otherRec.sym__0___45_8655770192480484197 < sym__0___45_8655770192480484197 && (otherRec.sym__0__2072590499357086155 < sym__0__2072590499357086155 && (otherRec.sym__0__8268830136148095561 < sym__0__8268830136148095561 && (otherRec.sym__0___45_678210870537240385 < sym__0___45_678210870537240385 && (otherRec.sym__0__6112270341236569873 < sym__0__6112270341236569873 && (otherRec.sym__0__8598037934431251909 < sym__0__8598037934431251909 && (otherRec.sym__0__5291402561130019774 < sym__0__5291402561130019774 && (otherRec.sym__0___45_7851524774395097220 < sym__0___45_7851524774395097220 && (otherRec.sym__0__1291698872846441412 < sym__0__1291698872846441412 && (otherRec.sym__0__8986418791032324453 < sym__0__8986418791032324453 && (otherRec.sym__0__2167360253537002837 < sym__0__2167360253537002837 && (otherRec.sym__0__8141858625439628603 < sym__0__8141858625439628603 && (otherRec.sym__0___45_7931886843684217772 < sym__0___45_7931886843684217772 && (otherRec.sym__0___45_2549139954849286782 < sym__0___45_2549139954849286782 && (otherRec.sym__0___45_1691445119060855580 < sym__0___45_1691445119060855580 && (otherRec.sym__0__7474331622035256461 < sym__0__7474331622035256461 && (otherRec.sym__0___45_667953329600979866 < sym__0___45_667953329600979866 && (otherRec.sym__0___45_3035057609626888019 < sym__0___45_3035057609626888019 && (otherRec.sym__0___45_8476599677752189563 < sym__0___45_8476599677752189563 && (otherRec.sym__0___45_6389391189957387661 < sym__0___45_6389391189957387661 && (otherRec.sym__0___45_6486695610681891724 < sym__0___45_6486695610681891724 && (otherRec.sym__0__4796994603556539905 < sym__0__4796994603556539905 && (otherRec.sym__0___45_6306286879286504951 < sym__0___45_6306286879286504951 && (otherRec.sym__0___45_922796240211516024 < sym__0___45_922796240211516024 && (otherRec.sym__0__2810436566368623008 < sym__0__2810436566368623008 && (otherRec.sym__0__7272995257348976042 < sym__0__7272995257348976042 && (otherRec.sym__0__1928421907625115531 < sym__0__1928421907625115531 && (otherRec.sym__0__6254739572024865371 < sym__0__6254739572024865371 && (otherRec.sym__0___45_5257913184343802104 < sym__0___45_5257913184343802104 && (otherRec.sym__0___45_1520289822717538230 < sym__0___45_1520289822717538230 && (otherRec.sym__0___45_8628415396103686184 < sym__0___45_8628415396103686184 && (otherRec.sym__0__2109492732871942412 < sym__0__2109492732871942412 && (otherRec.sym__0__5385658520341277382 < sym__0__5385658520341277382 && (otherRec.sym__0__3660583386293997969 < sym__0__3660583386293997969 && otherRec.sym__0___45_3013711856665730696 < sym__0___45_3013711856665730696)))))))))))))))))))))))))))))))))))))))))))))))));
  }
  bool operator ==(const Record24& otherRec) const{
    return (otherRec.sym__0___45_531840894949671910 == sym__0___45_531840894949671910 && (otherRec.sym__0___45_7594568260455252811 == sym__0___45_7594568260455252811 && (otherRec.sym__0___45_4224396157642132841 == sym__0___45_4224396157642132841 && (otherRec.sym__0___45_5121813103072643223 == sym__0___45_5121813103072643223 && (otherRec.sym__0__3627274254091843899 == sym__0__3627274254091843899 && (otherRec.sym__0___45_519289659968682554 == sym__0___45_519289659968682554 && (otherRec.sym__0__5824930074457018933 == sym__0__5824930074457018933 && (otherRec.sym__0__8300140134385342025 == sym__0__8300140134385342025 && (otherRec.sym__0___45_4363113810210080717 == sym__0___45_4363113810210080717 && (otherRec.sym__0___45_2180998471546424549 == sym__0___45_2180998471546424549 && (otherRec.sym__0___45_591129746765413155 == sym__0___45_591129746765413155 && (otherRec.sym__0___45_4416720451126861422 == sym__0___45_4416720451126861422 && (otherRec.sym__0___45_2100514126469912481 == sym__0___45_2100514126469912481 && (otherRec.sym__0__3750234095707159570 == sym__0__3750234095707159570 && (otherRec.sym__0___45_7960421939889289288 == sym__0___45_7960421939889289288 && (otherRec.sym__0___45_8655770192480484197 == sym__0___45_8655770192480484197 && (otherRec.sym__0__2072590499357086155 == sym__0__2072590499357086155 && (otherRec.sym__0__8268830136148095561 == sym__0__8268830136148095561 && (otherRec.sym__0___45_678210870537240385 == sym__0___45_678210870537240385 && (otherRec.sym__0__6112270341236569873 == sym__0__6112270341236569873 && (otherRec.sym__0__8598037934431251909 == sym__0__8598037934431251909 && (otherRec.sym__0__5291402561130019774 == sym__0__5291402561130019774 && (otherRec.sym__0___45_7851524774395097220 == sym__0___45_7851524774395097220 && (otherRec.sym__0__1291698872846441412 == sym__0__1291698872846441412 && (otherRec.sym__0__8986418791032324453 == sym__0__8986418791032324453 && (otherRec.sym__0__2167360253537002837 == sym__0__2167360253537002837 && (otherRec.sym__0__8141858625439628603 == sym__0__8141858625439628603 && (otherRec.sym__0___45_7931886843684217772 == sym__0___45_7931886843684217772 && (otherRec.sym__0___45_2549139954849286782 == sym__0___45_2549139954849286782 && (otherRec.sym__0___45_1691445119060855580 == sym__0___45_1691445119060855580 && (otherRec.sym__0__7474331622035256461 == sym__0__7474331622035256461 && (otherRec.sym__0___45_667953329600979866 == sym__0___45_667953329600979866 && (otherRec.sym__0___45_3035057609626888019 == sym__0___45_3035057609626888019 && (otherRec.sym__0___45_8476599677752189563 == sym__0___45_8476599677752189563 && (otherRec.sym__0___45_6389391189957387661 == sym__0___45_6389391189957387661 && (otherRec.sym__0___45_6486695610681891724 == sym__0___45_6486695610681891724 && (otherRec.sym__0__4796994603556539905 == sym__0__4796994603556539905 && (otherRec.sym__0___45_6306286879286504951 == sym__0___45_6306286879286504951 && (otherRec.sym__0___45_922796240211516024 == sym__0___45_922796240211516024 && (otherRec.sym__0__2810436566368623008 == sym__0__2810436566368623008 && (otherRec.sym__0__7272995257348976042 == sym__0__7272995257348976042 && (otherRec.sym__0__1928421907625115531 == sym__0__1928421907625115531 && (otherRec.sym__0__6254739572024865371 == sym__0__6254739572024865371 && (otherRec.sym__0___45_5257913184343802104 == sym__0___45_5257913184343802104 && (otherRec.sym__0___45_1520289822717538230 == sym__0___45_1520289822717538230 && (otherRec.sym__0___45_8628415396103686184 == sym__0___45_8628415396103686184 && (otherRec.sym__0__2109492732871942412 == sym__0__2109492732871942412 && (otherRec.sym__0__5385658520341277382 == sym__0__5385658520341277382 && (otherRec.sym__0__3660583386293997969 == sym__0__3660583386293997969 && otherRec.sym__0___45_3013711856665730696 == sym__0___45_3013711856665730696)))))))))))))))))))))))))))))))))))))))))))))))));
  }
  bool operator !=(const Record24& otherRec) const{
    return (otherRec.sym__0___45_531840894949671910 != sym__0___45_531840894949671910 || (otherRec.sym__0___45_7594568260455252811 != sym__0___45_7594568260455252811 || (otherRec.sym__0___45_4224396157642132841 != sym__0___45_4224396157642132841 || (otherRec.sym__0___45_5121813103072643223 != sym__0___45_5121813103072643223 || (otherRec.sym__0__3627274254091843899 != sym__0__3627274254091843899 || (otherRec.sym__0___45_519289659968682554 != sym__0___45_519289659968682554 || (otherRec.sym__0__5824930074457018933 != sym__0__5824930074457018933 || (otherRec.sym__0__8300140134385342025 != sym__0__8300140134385342025 || (otherRec.sym__0___45_4363113810210080717 != sym__0___45_4363113810210080717 || (otherRec.sym__0___45_2180998471546424549 != sym__0___45_2180998471546424549 || (otherRec.sym__0___45_591129746765413155 != sym__0___45_591129746765413155 || (otherRec.sym__0___45_4416720451126861422 != sym__0___45_4416720451126861422 || (otherRec.sym__0___45_2100514126469912481 != sym__0___45_2100514126469912481 || (otherRec.sym__0__3750234095707159570 != sym__0__3750234095707159570 || (otherRec.sym__0___45_7960421939889289288 != sym__0___45_7960421939889289288 || (otherRec.sym__0___45_8655770192480484197 != sym__0___45_8655770192480484197 || (otherRec.sym__0__2072590499357086155 != sym__0__2072590499357086155 || (otherRec.sym__0__8268830136148095561 != sym__0__8268830136148095561 || (otherRec.sym__0___45_678210870537240385 != sym__0___45_678210870537240385 || (otherRec.sym__0__6112270341236569873 != sym__0__6112270341236569873 || (otherRec.sym__0__8598037934431251909 != sym__0__8598037934431251909 || (otherRec.sym__0__5291402561130019774 != sym__0__5291402561130019774 || (otherRec.sym__0___45_7851524774395097220 != sym__0___45_7851524774395097220 || (otherRec.sym__0__1291698872846441412 != sym__0__1291698872846441412 || (otherRec.sym__0__8986418791032324453 != sym__0__8986418791032324453 || (otherRec.sym__0__2167360253537002837 != sym__0__2167360253537002837 || (otherRec.sym__0__8141858625439628603 != sym__0__8141858625439628603 || (otherRec.sym__0___45_7931886843684217772 != sym__0___45_7931886843684217772 || (otherRec.sym__0___45_2549139954849286782 != sym__0___45_2549139954849286782 || (otherRec.sym__0___45_1691445119060855580 != sym__0___45_1691445119060855580 || (otherRec.sym__0__7474331622035256461 != sym__0__7474331622035256461 || (otherRec.sym__0___45_667953329600979866 != sym__0___45_667953329600979866 || (otherRec.sym__0___45_3035057609626888019 != sym__0___45_3035057609626888019 || (otherRec.sym__0___45_8476599677752189563 != sym__0___45_8476599677752189563 || (otherRec.sym__0___45_6389391189957387661 != sym__0___45_6389391189957387661 || (otherRec.sym__0___45_6486695610681891724 != sym__0___45_6486695610681891724 || (otherRec.sym__0__4796994603556539905 != sym__0__4796994603556539905 || (otherRec.sym__0___45_6306286879286504951 != sym__0___45_6306286879286504951 || (otherRec.sym__0___45_922796240211516024 != sym__0___45_922796240211516024 || (otherRec.sym__0__2810436566368623008 != sym__0__2810436566368623008 || (otherRec.sym__0__7272995257348976042 != sym__0__7272995257348976042 || (otherRec.sym__0__1928421907625115531 != sym__0__1928421907625115531 || (otherRec.sym__0__6254739572024865371 != sym__0__6254739572024865371 || (otherRec.sym__0___45_5257913184343802104 != sym__0___45_5257913184343802104 || (otherRec.sym__0___45_1520289822717538230 != sym__0___45_1520289822717538230 || (otherRec.sym__0___45_8628415396103686184 != sym__0___45_8628415396103686184 || (otherRec.sym__0__2109492732871942412 != sym__0__2109492732871942412 || (otherRec.sym__0__5385658520341277382 != sym__0__5385658520341277382 || (otherRec.sym__0__3660583386293997969 != sym__0__3660583386293997969 || otherRec.sym__0___45_3013711856665730696 != sym__0___45_3013711856665730696)))))))))))))))))))))))))))))))))))))))))))))))));
  }
  unsigned sym__0___45_531840894949671910;
  fluidb_string<25> sym__0___45_7594568260455252811;
  fluidb_string<40> sym__0___45_4224396157642132841;
  fluidb_string<16> sym__0___45_5121813103072643223;
  fluidb_string<16> sym__0__3627274254091843899;
  fluidb_string<13> sym__0___45_519289659968682554;
  fluidb_string<15> sym__0__5824930074457018933;
  unsigned sym__0__8300140134385342025;
  int sym__0___45_4363113810210080717;
  unsigned sym__0___45_2180998471546424549;
  unsigned sym__0___45_591129746765413155;
  unsigned sym__0___45_4416720451126861422;
  unsigned sym__0___45_2100514126469912481;
  fluidb_string<21> sym__0__3750234095707159570;
  unsigned sym__0___45_7960421939889289288;
  fluidb_string<10> sym__0___45_8655770192480484197;
  unsigned sym__0__2072590499357086155;
  double sym__0__8268830136148095561;
  unsigned sym__0___45_678210870537240385;
  double sym__0__6112270341236569873;
  unsigned sym__0__8598037934431251909;
  unsigned sym__0__5291402561130019774;
  double sym__0___45_7851524774395097220;
  fluidb_string<13> sym__0__1291698872846441412;
  unsigned sym__0__8986418791032324453;
  fluidb_string<18> sym__0__2167360253537002837;
  fluidb_string<9> sym__0__8141858625439628603;
  fluidb_string<9> sym__0___45_7931886843684217772;
  unsigned sym__0___45_2549139954849286782;
  unsigned sym__0___45_1691445119060855580;
  fluidb_string<7> sym__0__7474331622035256461;
  unsigned sym__0___45_667953329600979866;
  unsigned sym__0___45_3035057609626888019;
  unsigned sym__0___45_8476599677752189563;
  unsigned sym__0___45_6389391189957387661;
  unsigned sym__0___45_6486695610681891724;
  fluidb_string<15> sym__0__4796994603556539905;
  fluidb_string<2> sym__0___45_6306286879286504951;
  fluidb_string<2> sym__0___45_922796240211516024;
  fluidb_string<2> sym__0__2810436566368623008;
  fluidb_string<2> sym__0__7272995257348976042;
  unsigned sym__0__1928421907625115531;
  fluidb_string<55> sym__0__6254739572024865371;
  fluidb_string<25> sym__0___45_5257913184343802104;
  fluidb_string<7> sym__0___45_1520289822717538230;
  fluidb_string<10> sym__0___45_8628415396103686184;
  fluidb_string<11> sym__0__2109492732871942412;
  fluidb_string<25> sym__0__5385658520341277382;
  unsigned sym__0__3660583386293997969;
  fluidb_string<10> sym__0___45_3013711856665730696;
 private:
};


class Record14 {
 public:
  Record14(unsigned __sortElem0) : sortElem0(__sortElem0)
  {
  }
  Record14() 
  {
  }
  std::string show() const{
    std::stringstream o;
    o << sortElem0;
    return o.str();
  }
  bool operator <(const Record14& otherRec) const{
    return otherRec.sortElem0 < sortElem0;
  }
  bool operator ==(const Record14& otherRec) const{
    return otherRec.sortElem0 == sortElem0;
  }
  bool operator !=(const Record14& otherRec) const{
    return otherRec.sortElem0 != sortElem0;
  }
  unsigned sortElem0;
 private:
};


class Record2 {
 public:
  Record2(unsigned __sym__0__2592840547366705296, fluidb_string<25> __sym__0__2788895063297001099, fluidb_string<40> __sym__0__1545257135384253129, fluidb_string<16> __sym__0___45_4622664073058890953, fluidb_string<16> __sym__0__7774459284859713893, fluidb_string<13> __sym__0__5464006631725545620, fluidb_string<15> __sym__0___45_3247512146210145269, unsigned __sym__0__9165007797673129751, int __sym__0__6736597523581036605, unsigned __sym__0___45_3324970871059066299, unsigned __sym__0__8802187528961009747, unsigned __sym__0___45_8153453103254980376, unsigned __sym__0___45_878170619108389423, fluidb_string<21> __sym__0___45_874194379502172824, unsigned __sym__0__8610439003510773098, fluidb_string<10> __sym__0__984338793883944389, unsigned __sym__0___45_241371384806950923, double __sym__0__4499056235050439447, unsigned __sym__0___45_602104477057249231, double __sym__0__2154432795296205471, unsigned __sym__0__8120436674510863259, unsigned __sym__0__8733838863403650604, double __sym__0__6144840941019744502, fluidb_string<13> __sym__0___45_4519435874778032514, unsigned __sym__0__7183756631487345723, fluidb_string<18> __sym__0__4004283392749253291, fluidb_string<9> __sym__0__7402856733199756645, fluidb_string<9> __sym__0___45_7276118071870614642, unsigned __sym__0__7689696364618968408, unsigned __sym__0__265232048543772062, fluidb_string<7> __sym__0___45_7391712330109786621, unsigned __sym__0__9093515676270508468, unsigned __sym__0__2039577949113231011, unsigned __sym__0___45_5518709817667950629, unsigned __sym__0__7446880365925781245, unsigned __sym__0__3933602404904280238, fluidb_string<15> __sym__0__839558304030626831, fluidb_string<2> __sym__0__1895092311538388823, fluidb_string<2> __sym__0__2442462535421269690, fluidb_string<2> __sym__0___45_3615474655229170638, fluidb_string<2> __sym__0__8806662867934001568, unsigned __sym__0___45_4159199765988317501, fluidb_string<18> __sym__0___45_5417534366741502741, fluidb_string<40> __sym__0__4597400568918183105, fluidb_string<11> __sym__0__8819540415296482823, fluidb_string<15> __sym__0___45_623355213379307427, fluidb_string<13> __sym__0__7994108978447880988, fluidb_string<15> __sym__0__7664015906371024747, fluidb_string<21> __sym__0___45_6006206227144636657, unsigned __sym__0__3122376255932122421, fluidb_string<55> __sym__0__5682795704482796293, fluidb_string<25> __sym__0__4547320860663492666, fluidb_string<7> __sym__0___45_8670773565387601472, fluidb_string<10> __sym__0___45_13570145613494646, fluidb_string<11> __sym__0__219157410367458310, fluidb_string<25> __sym__0__698480510036799380, unsigned __sym__0__5321414200743551775, fluidb_string<10> __sym__0__4130486035242774698) : sym__0__2592840547366705296(__sym__0__2592840547366705296), sym__0__2788895063297001099(__sym__0__2788895063297001099), sym__0__1545257135384253129(__sym__0__1545257135384253129), sym__0___45_4622664073058890953(__sym__0___45_4622664073058890953), sym__0__7774459284859713893(__sym__0__7774459284859713893), sym__0__5464006631725545620(__sym__0__5464006631725545620), sym__0___45_3247512146210145269(__sym__0___45_3247512146210145269), sym__0__9165007797673129751(__sym__0__9165007797673129751), sym__0__6736597523581036605(__sym__0__6736597523581036605), sym__0___45_3324970871059066299(__sym__0___45_3324970871059066299), sym__0__8802187528961009747(__sym__0__8802187528961009747), sym__0___45_8153453103254980376(__sym__0___45_8153453103254980376), sym__0___45_878170619108389423(__sym__0___45_878170619108389423), sym__0___45_874194379502172824(__sym__0___45_874194379502172824), sym__0__8610439003510773098(__sym__0__8610439003510773098), sym__0__984338793883944389(__sym__0__984338793883944389), sym__0___45_241371384806950923(__sym__0___45_241371384806950923), sym__0__4499056235050439447(__sym__0__4499056235050439447), sym__0___45_602104477057249231(__sym__0___45_602104477057249231), sym__0__2154432795296205471(__sym__0__2154432795296205471), sym__0__8120436674510863259(__sym__0__8120436674510863259), sym__0__8733838863403650604(__sym__0__8733838863403650604), sym__0__6144840941019744502(__sym__0__6144840941019744502), sym__0___45_4519435874778032514(__sym__0___45_4519435874778032514), sym__0__7183756631487345723(__sym__0__7183756631487345723), sym__0__4004283392749253291(__sym__0__4004283392749253291), sym__0__7402856733199756645(__sym__0__7402856733199756645), sym__0___45_7276118071870614642(__sym__0___45_7276118071870614642), sym__0__7689696364618968408(__sym__0__7689696364618968408), sym__0__265232048543772062(__sym__0__265232048543772062), sym__0___45_7391712330109786621(__sym__0___45_7391712330109786621), sym__0__9093515676270508468(__sym__0__9093515676270508468), sym__0__2039577949113231011(__sym__0__2039577949113231011), sym__0___45_5518709817667950629(__sym__0___45_5518709817667950629), sym__0__7446880365925781245(__sym__0__7446880365925781245), sym__0__3933602404904280238(__sym__0__3933602404904280238), sym__0__839558304030626831(__sym__0__839558304030626831), sym__0__1895092311538388823(__sym__0__1895092311538388823), sym__0__2442462535421269690(__sym__0__2442462535421269690), sym__0___45_3615474655229170638(__sym__0___45_3615474655229170638), sym__0__8806662867934001568(__sym__0__8806662867934001568), sym__0___45_4159199765988317501(__sym__0___45_4159199765988317501), sym__0___45_5417534366741502741(__sym__0___45_5417534366741502741), sym__0__4597400568918183105(__sym__0__4597400568918183105), sym__0__8819540415296482823(__sym__0__8819540415296482823), sym__0___45_623355213379307427(__sym__0___45_623355213379307427), sym__0__7994108978447880988(__sym__0__7994108978447880988), sym__0__7664015906371024747(__sym__0__7664015906371024747), sym__0___45_6006206227144636657(__sym__0___45_6006206227144636657), sym__0__3122376255932122421(__sym__0__3122376255932122421), sym__0__5682795704482796293(__sym__0__5682795704482796293), sym__0__4547320860663492666(__sym__0__4547320860663492666), sym__0___45_8670773565387601472(__sym__0___45_8670773565387601472), sym__0___45_13570145613494646(__sym__0___45_13570145613494646), sym__0__219157410367458310(__sym__0__219157410367458310), sym__0__698480510036799380(__sym__0__698480510036799380), sym__0__5321414200743551775(__sym__0__5321414200743551775), sym__0__4130486035242774698(__sym__0__4130486035242774698)
  {
  }
  Record2() 
  {
  }
  std::string show() const{
    std::stringstream o;
    o << sym__0__2592840547366705296 << " | " << arrToString(sym__0__2788895063297001099) << " | " << arrToString(sym__0__1545257135384253129) << " | " << arrToString(sym__0___45_4622664073058890953) << " | " << arrToString(sym__0__7774459284859713893) << " | " << arrToString(sym__0__5464006631725545620) << " | " << arrToString(sym__0___45_3247512146210145269) << " | " << sym__0__9165007797673129751 << " | " << sym__0__6736597523581036605 << " | " << sym__0___45_3324970871059066299 << " | " << sym__0__8802187528961009747 << " | " << sym__0___45_8153453103254980376 << " | " << sym__0___45_878170619108389423 << " | " << arrToString(sym__0___45_874194379502172824) << " | " << sym__0__8610439003510773098 << " | " << arrToString(sym__0__984338793883944389) << " | " << sym__0___45_241371384806950923 << " | " << sym__0__4499056235050439447 << " | " << sym__0___45_602104477057249231 << " | " << sym__0__2154432795296205471 << " | " << sym__0__8120436674510863259 << " | " << sym__0__8733838863403650604 << " | " << sym__0__6144840941019744502 << " | " << arrToString(sym__0___45_4519435874778032514) << " | " << sym__0__7183756631487345723 << " | " << arrToString(sym__0__4004283392749253291) << " | " << arrToString(sym__0__7402856733199756645) << " | " << arrToString(sym__0___45_7276118071870614642) << " | " << sym__0__7689696364618968408 << " | " << sym__0__265232048543772062 << " | " << arrToString(sym__0___45_7391712330109786621) << " | " << sym__0__9093515676270508468 << " | " << sym__0__2039577949113231011 << " | " << sym__0___45_5518709817667950629 << " | " << sym__0__7446880365925781245 << " | " << sym__0__3933602404904280238 << " | " << arrToString(sym__0__839558304030626831) << " | " << arrToString(sym__0__1895092311538388823) << " | " << arrToString(sym__0__2442462535421269690) << " | " << arrToString(sym__0___45_3615474655229170638) << " | " << arrToString(sym__0__8806662867934001568) << " | " << sym__0___45_4159199765988317501 << " | " << arrToString(sym__0___45_5417534366741502741) << " | " << arrToString(sym__0__4597400568918183105) << " | " << arrToString(sym__0__8819540415296482823) << " | " << arrToString(sym__0___45_623355213379307427) << " | " << arrToString(sym__0__7994108978447880988) << " | " << arrToString(sym__0__7664015906371024747) << " | " << arrToString(sym__0___45_6006206227144636657) << " | " << sym__0__3122376255932122421 << " | " << arrToString(sym__0__5682795704482796293) << " | " << arrToString(sym__0__4547320860663492666) << " | " << arrToString(sym__0___45_8670773565387601472) << " | " << arrToString(sym__0___45_13570145613494646) << " | " << arrToString(sym__0__219157410367458310) << " | " << arrToString(sym__0__698480510036799380) << " | " << sym__0__5321414200743551775 << " | " << arrToString(sym__0__4130486035242774698);
    return o.str();
  }
  bool operator <(const Record2& otherRec) const{
    return (otherRec.sym__0__2592840547366705296 < sym__0__2592840547366705296 && (otherRec.sym__0__2788895063297001099 < sym__0__2788895063297001099 && (otherRec.sym__0__1545257135384253129 < sym__0__1545257135384253129 && (otherRec.sym__0___45_4622664073058890953 < sym__0___45_4622664073058890953 && (otherRec.sym__0__7774459284859713893 < sym__0__7774459284859713893 && (otherRec.sym__0__5464006631725545620 < sym__0__5464006631725545620 && (otherRec.sym__0___45_3247512146210145269 < sym__0___45_3247512146210145269 && (otherRec.sym__0__9165007797673129751 < sym__0__9165007797673129751 && (otherRec.sym__0__6736597523581036605 < sym__0__6736597523581036605 && (otherRec.sym__0___45_3324970871059066299 < sym__0___45_3324970871059066299 && (otherRec.sym__0__8802187528961009747 < sym__0__8802187528961009747 && (otherRec.sym__0___45_8153453103254980376 < sym__0___45_8153453103254980376 && (otherRec.sym__0___45_878170619108389423 < sym__0___45_878170619108389423 && (otherRec.sym__0___45_874194379502172824 < sym__0___45_874194379502172824 && (otherRec.sym__0__8610439003510773098 < sym__0__8610439003510773098 && (otherRec.sym__0__984338793883944389 < sym__0__984338793883944389 && (otherRec.sym__0___45_241371384806950923 < sym__0___45_241371384806950923 && (otherRec.sym__0__4499056235050439447 < sym__0__4499056235050439447 && (otherRec.sym__0___45_602104477057249231 < sym__0___45_602104477057249231 && (otherRec.sym__0__2154432795296205471 < sym__0__2154432795296205471 && (otherRec.sym__0__8120436674510863259 < sym__0__8120436674510863259 && (otherRec.sym__0__8733838863403650604 < sym__0__8733838863403650604 && (otherRec.sym__0__6144840941019744502 < sym__0__6144840941019744502 && (otherRec.sym__0___45_4519435874778032514 < sym__0___45_4519435874778032514 && (otherRec.sym__0__7183756631487345723 < sym__0__7183756631487345723 && (otherRec.sym__0__4004283392749253291 < sym__0__4004283392749253291 && (otherRec.sym__0__7402856733199756645 < sym__0__7402856733199756645 && (otherRec.sym__0___45_7276118071870614642 < sym__0___45_7276118071870614642 && (otherRec.sym__0__7689696364618968408 < sym__0__7689696364618968408 && (otherRec.sym__0__265232048543772062 < sym__0__265232048543772062 && (otherRec.sym__0___45_7391712330109786621 < sym__0___45_7391712330109786621 && (otherRec.sym__0__9093515676270508468 < sym__0__9093515676270508468 && (otherRec.sym__0__2039577949113231011 < sym__0__2039577949113231011 && (otherRec.sym__0___45_5518709817667950629 < sym__0___45_5518709817667950629 && (otherRec.sym__0__7446880365925781245 < sym__0__7446880365925781245 && (otherRec.sym__0__3933602404904280238 < sym__0__3933602404904280238 && (otherRec.sym__0__839558304030626831 < sym__0__839558304030626831 && (otherRec.sym__0__1895092311538388823 < sym__0__1895092311538388823 && (otherRec.sym__0__2442462535421269690 < sym__0__2442462535421269690 && (otherRec.sym__0___45_3615474655229170638 < sym__0___45_3615474655229170638 && (otherRec.sym__0__8806662867934001568 < sym__0__8806662867934001568 && (otherRec.sym__0___45_4159199765988317501 < sym__0___45_4159199765988317501 && (otherRec.sym__0___45_5417534366741502741 < sym__0___45_5417534366741502741 && (otherRec.sym__0__4597400568918183105 < sym__0__4597400568918183105 && (otherRec.sym__0__8819540415296482823 < sym__0__8819540415296482823 && (otherRec.sym__0___45_623355213379307427 < sym__0___45_623355213379307427 && (otherRec.sym__0__7994108978447880988 < sym__0__7994108978447880988 && (otherRec.sym__0__7664015906371024747 < sym__0__7664015906371024747 && (otherRec.sym__0___45_6006206227144636657 < sym__0___45_6006206227144636657 && (otherRec.sym__0__3122376255932122421 < sym__0__3122376255932122421 && (otherRec.sym__0__5682795704482796293 < sym__0__5682795704482796293 && (otherRec.sym__0__4547320860663492666 < sym__0__4547320860663492666 && (otherRec.sym__0___45_8670773565387601472 < sym__0___45_8670773565387601472 && (otherRec.sym__0___45_13570145613494646 < sym__0___45_13570145613494646 && (otherRec.sym__0__219157410367458310 < sym__0__219157410367458310 && (otherRec.sym__0__698480510036799380 < sym__0__698480510036799380 && (otherRec.sym__0__5321414200743551775 < sym__0__5321414200743551775 && otherRec.sym__0__4130486035242774698 < sym__0__4130486035242774698)))))))))))))))))))))))))))))))))))))))))))))))))))))))));
  }
  bool operator ==(const Record2& otherRec) const{
    return (otherRec.sym__0__2592840547366705296 == sym__0__2592840547366705296 && (otherRec.sym__0__2788895063297001099 == sym__0__2788895063297001099 && (otherRec.sym__0__1545257135384253129 == sym__0__1545257135384253129 && (otherRec.sym__0___45_4622664073058890953 == sym__0___45_4622664073058890953 && (otherRec.sym__0__7774459284859713893 == sym__0__7774459284859713893 && (otherRec.sym__0__5464006631725545620 == sym__0__5464006631725545620 && (otherRec.sym__0___45_3247512146210145269 == sym__0___45_3247512146210145269 && (otherRec.sym__0__9165007797673129751 == sym__0__9165007797673129751 && (otherRec.sym__0__6736597523581036605 == sym__0__6736597523581036605 && (otherRec.sym__0___45_3324970871059066299 == sym__0___45_3324970871059066299 && (otherRec.sym__0__8802187528961009747 == sym__0__8802187528961009747 && (otherRec.sym__0___45_8153453103254980376 == sym__0___45_8153453103254980376 && (otherRec.sym__0___45_878170619108389423 == sym__0___45_878170619108389423 && (otherRec.sym__0___45_874194379502172824 == sym__0___45_874194379502172824 && (otherRec.sym__0__8610439003510773098 == sym__0__8610439003510773098 && (otherRec.sym__0__984338793883944389 == sym__0__984338793883944389 && (otherRec.sym__0___45_241371384806950923 == sym__0___45_241371384806950923 && (otherRec.sym__0__4499056235050439447 == sym__0__4499056235050439447 && (otherRec.sym__0___45_602104477057249231 == sym__0___45_602104477057249231 && (otherRec.sym__0__2154432795296205471 == sym__0__2154432795296205471 && (otherRec.sym__0__8120436674510863259 == sym__0__8120436674510863259 && (otherRec.sym__0__8733838863403650604 == sym__0__8733838863403650604 && (otherRec.sym__0__6144840941019744502 == sym__0__6144840941019744502 && (otherRec.sym__0___45_4519435874778032514 == sym__0___45_4519435874778032514 && (otherRec.sym__0__7183756631487345723 == sym__0__7183756631487345723 && (otherRec.sym__0__4004283392749253291 == sym__0__4004283392749253291 && (otherRec.sym__0__7402856733199756645 == sym__0__7402856733199756645 && (otherRec.sym__0___45_7276118071870614642 == sym__0___45_7276118071870614642 && (otherRec.sym__0__7689696364618968408 == sym__0__7689696364618968408 && (otherRec.sym__0__265232048543772062 == sym__0__265232048543772062 && (otherRec.sym__0___45_7391712330109786621 == sym__0___45_7391712330109786621 && (otherRec.sym__0__9093515676270508468 == sym__0__9093515676270508468 && (otherRec.sym__0__2039577949113231011 == sym__0__2039577949113231011 && (otherRec.sym__0___45_5518709817667950629 == sym__0___45_5518709817667950629 && (otherRec.sym__0__7446880365925781245 == sym__0__7446880365925781245 && (otherRec.sym__0__3933602404904280238 == sym__0__3933602404904280238 && (otherRec.sym__0__839558304030626831 == sym__0__839558304030626831 && (otherRec.sym__0__1895092311538388823 == sym__0__1895092311538388823 && (otherRec.sym__0__2442462535421269690 == sym__0__2442462535421269690 && (otherRec.sym__0___45_3615474655229170638 == sym__0___45_3615474655229170638 && (otherRec.sym__0__8806662867934001568 == sym__0__8806662867934001568 && (otherRec.sym__0___45_4159199765988317501 == sym__0___45_4159199765988317501 && (otherRec.sym__0___45_5417534366741502741 == sym__0___45_5417534366741502741 && (otherRec.sym__0__4597400568918183105 == sym__0__4597400568918183105 && (otherRec.sym__0__8819540415296482823 == sym__0__8819540415296482823 && (otherRec.sym__0___45_623355213379307427 == sym__0___45_623355213379307427 && (otherRec.sym__0__7994108978447880988 == sym__0__7994108978447880988 && (otherRec.sym__0__7664015906371024747 == sym__0__7664015906371024747 && (otherRec.sym__0___45_6006206227144636657 == sym__0___45_6006206227144636657 && (otherRec.sym__0__3122376255932122421 == sym__0__3122376255932122421 && (otherRec.sym__0__5682795704482796293 == sym__0__5682795704482796293 && (otherRec.sym__0__4547320860663492666 == sym__0__4547320860663492666 && (otherRec.sym__0___45_8670773565387601472 == sym__0___45_8670773565387601472 && (otherRec.sym__0___45_13570145613494646 == sym__0___45_13570145613494646 && (otherRec.sym__0__219157410367458310 == sym__0__219157410367458310 && (otherRec.sym__0__698480510036799380 == sym__0__698480510036799380 && (otherRec.sym__0__5321414200743551775 == sym__0__5321414200743551775 && otherRec.sym__0__4130486035242774698 == sym__0__4130486035242774698)))))))))))))))))))))))))))))))))))))))))))))))))))))))));
  }
  bool operator !=(const Record2& otherRec) const{
    return (otherRec.sym__0__2592840547366705296 != sym__0__2592840547366705296 || (otherRec.sym__0__2788895063297001099 != sym__0__2788895063297001099 || (otherRec.sym__0__1545257135384253129 != sym__0__1545257135384253129 || (otherRec.sym__0___45_4622664073058890953 != sym__0___45_4622664073058890953 || (otherRec.sym__0__7774459284859713893 != sym__0__7774459284859713893 || (otherRec.sym__0__5464006631725545620 != sym__0__5464006631725545620 || (otherRec.sym__0___45_3247512146210145269 != sym__0___45_3247512146210145269 || (otherRec.sym__0__9165007797673129751 != sym__0__9165007797673129751 || (otherRec.sym__0__6736597523581036605 != sym__0__6736597523581036605 || (otherRec.sym__0___45_3324970871059066299 != sym__0___45_3324970871059066299 || (otherRec.sym__0__8802187528961009747 != sym__0__8802187528961009747 || (otherRec.sym__0___45_8153453103254980376 != sym__0___45_8153453103254980376 || (otherRec.sym__0___45_878170619108389423 != sym__0___45_878170619108389423 || (otherRec.sym__0___45_874194379502172824 != sym__0___45_874194379502172824 || (otherRec.sym__0__8610439003510773098 != sym__0__8610439003510773098 || (otherRec.sym__0__984338793883944389 != sym__0__984338793883944389 || (otherRec.sym__0___45_241371384806950923 != sym__0___45_241371384806950923 || (otherRec.sym__0__4499056235050439447 != sym__0__4499056235050439447 || (otherRec.sym__0___45_602104477057249231 != sym__0___45_602104477057249231 || (otherRec.sym__0__2154432795296205471 != sym__0__2154432795296205471 || (otherRec.sym__0__8120436674510863259 != sym__0__8120436674510863259 || (otherRec.sym__0__8733838863403650604 != sym__0__8733838863403650604 || (otherRec.sym__0__6144840941019744502 != sym__0__6144840941019744502 || (otherRec.sym__0___45_4519435874778032514 != sym__0___45_4519435874778032514 || (otherRec.sym__0__7183756631487345723 != sym__0__7183756631487345723 || (otherRec.sym__0__4004283392749253291 != sym__0__4004283392749253291 || (otherRec.sym__0__7402856733199756645 != sym__0__7402856733199756645 || (otherRec.sym__0___45_7276118071870614642 != sym__0___45_7276118071870614642 || (otherRec.sym__0__7689696364618968408 != sym__0__7689696364618968408 || (otherRec.sym__0__265232048543772062 != sym__0__265232048543772062 || (otherRec.sym__0___45_7391712330109786621 != sym__0___45_7391712330109786621 || (otherRec.sym__0__9093515676270508468 != sym__0__9093515676270508468 || (otherRec.sym__0__2039577949113231011 != sym__0__2039577949113231011 || (otherRec.sym__0___45_5518709817667950629 != sym__0___45_5518709817667950629 || (otherRec.sym__0__7446880365925781245 != sym__0__7446880365925781245 || (otherRec.sym__0__3933602404904280238 != sym__0__3933602404904280238 || (otherRec.sym__0__839558304030626831 != sym__0__839558304030626831 || (otherRec.sym__0__1895092311538388823 != sym__0__1895092311538388823 || (otherRec.sym__0__2442462535421269690 != sym__0__2442462535421269690 || (otherRec.sym__0___45_3615474655229170638 != sym__0___45_3615474655229170638 || (otherRec.sym__0__8806662867934001568 != sym__0__8806662867934001568 || (otherRec.sym__0___45_4159199765988317501 != sym__0___45_4159199765988317501 || (otherRec.sym__0___45_5417534366741502741 != sym__0___45_5417534366741502741 || (otherRec.sym__0__4597400568918183105 != sym__0__4597400568918183105 || (otherRec.sym__0__8819540415296482823 != sym__0__8819540415296482823 || (otherRec.sym__0___45_623355213379307427 != sym__0___45_623355213379307427 || (otherRec.sym__0__7994108978447880988 != sym__0__7994108978447880988 || (otherRec.sym__0__7664015906371024747 != sym__0__7664015906371024747 || (otherRec.sym__0___45_6006206227144636657 != sym__0___45_6006206227144636657 || (otherRec.sym__0__3122376255932122421 != sym__0__3122376255932122421 || (otherRec.sym__0__5682795704482796293 != sym__0__5682795704482796293 || (otherRec.sym__0__4547320860663492666 != sym__0__4547320860663492666 || (otherRec.sym__0___45_8670773565387601472 != sym__0___45_8670773565387601472 || (otherRec.sym__0___45_13570145613494646 != sym__0___45_13570145613494646 || (otherRec.sym__0__219157410367458310 != sym__0__219157410367458310 || (otherRec.sym__0__698480510036799380 != sym__0__698480510036799380 || (otherRec.sym__0__5321414200743551775 != sym__0__5321414200743551775 || otherRec.sym__0__4130486035242774698 != sym__0__4130486035242774698)))))))))))))))))))))))))))))))))))))))))))))))))))))))));
  }
  unsigned sym__0__2592840547366705296;
  fluidb_string<25> sym__0__2788895063297001099;
  fluidb_string<40> sym__0__1545257135384253129;
  fluidb_string<16> sym__0___45_4622664073058890953;
  fluidb_string<16> sym__0__7774459284859713893;
  fluidb_string<13> sym__0__5464006631725545620;
  fluidb_string<15> sym__0___45_3247512146210145269;
  unsigned sym__0__9165007797673129751;
  int sym__0__6736597523581036605;
  unsigned sym__0___45_3324970871059066299;
  unsigned sym__0__8802187528961009747;
  unsigned sym__0___45_8153453103254980376;
  unsigned sym__0___45_878170619108389423;
  fluidb_string<21> sym__0___45_874194379502172824;
  unsigned sym__0__8610439003510773098;
  fluidb_string<10> sym__0__984338793883944389;
  unsigned sym__0___45_241371384806950923;
  double sym__0__4499056235050439447;
  unsigned sym__0___45_602104477057249231;
  double sym__0__2154432795296205471;
  unsigned sym__0__8120436674510863259;
  unsigned sym__0__8733838863403650604;
  double sym__0__6144840941019744502;
  fluidb_string<13> sym__0___45_4519435874778032514;
  unsigned sym__0__7183756631487345723;
  fluidb_string<18> sym__0__4004283392749253291;
  fluidb_string<9> sym__0__7402856733199756645;
  fluidb_string<9> sym__0___45_7276118071870614642;
  unsigned sym__0__7689696364618968408;
  unsigned sym__0__265232048543772062;
  fluidb_string<7> sym__0___45_7391712330109786621;
  unsigned sym__0__9093515676270508468;
  unsigned sym__0__2039577949113231011;
  unsigned sym__0___45_5518709817667950629;
  unsigned sym__0__7446880365925781245;
  unsigned sym__0__3933602404904280238;
  fluidb_string<15> sym__0__839558304030626831;
  fluidb_string<2> sym__0__1895092311538388823;
  fluidb_string<2> sym__0__2442462535421269690;
  fluidb_string<2> sym__0___45_3615474655229170638;
  fluidb_string<2> sym__0__8806662867934001568;
  unsigned sym__0___45_4159199765988317501;
  fluidb_string<18> sym__0___45_5417534366741502741;
  fluidb_string<40> sym__0__4597400568918183105;
  fluidb_string<11> sym__0__8819540415296482823;
  fluidb_string<15> sym__0___45_623355213379307427;
  fluidb_string<13> sym__0__7994108978447880988;
  fluidb_string<15> sym__0__7664015906371024747;
  fluidb_string<21> sym__0___45_6006206227144636657;
  unsigned sym__0__3122376255932122421;
  fluidb_string<55> sym__0__5682795704482796293;
  fluidb_string<25> sym__0__4547320860663492666;
  fluidb_string<7> sym__0___45_8670773565387601472;
  fluidb_string<10> sym__0___45_13570145613494646;
  fluidb_string<11> sym__0__219157410367458310;
  fluidb_string<25> sym__0__698480510036799380;
  unsigned sym__0__5321414200743551775;
  fluidb_string<10> sym__0__4130486035242774698;
 private:
};


class Record1 {
 public:
  Record1(unsigned __sym__0___45_6180681665671689455, fluidb_string<25> __sym__0___45_7492215985175491366, fluidb_string<40> __sym__0__3108260102440442872, fluidb_string<16> __sym__0__4242088751554333190, fluidb_string<16> __sym__0__4419222406440371028, fluidb_string<13> __sym__0___45_4395878808383970875, fluidb_string<15> __sym__0__5421156455815400282, unsigned __sym__0___45_1631867111754601434, int __sym__0__5956167765210805980, unsigned __sym__0___45_4504547450980902284, unsigned __sym__0__2571611128943656626, unsigned __sym__0___45_7797291820866539495, unsigned __sym__0__8112696983606547888, fluidb_string<21> __sym__0___45_8859514051634859623, unsigned __sym__0__1155613969670303859, fluidb_string<10> __sym__0__6875278589307593972, unsigned __sym__0___45_961680512448388956, double __sym__0___45_674541735213940698, unsigned __sym__0___45_821091676724229936, double __sym__0___45_4702801186563994626, unsigned __sym__0___45_3023845865529546326, unsigned __sym__0__5284478023732558701, double __sym__0__253975703545414575, fluidb_string<13> __sym__0__2038562371344131399, unsigned __sym__0___45_2600703832754715382, fluidb_string<18> __sym__0___45_7578273935239857990, fluidb_string<9> __sym__0__875191355534311252, fluidb_string<9> __sym__0___45_6042256660357361193, unsigned __sym__0__2251162898911166857, unsigned __sym__0__8322995032561243047, fluidb_string<7> __sym__0__3359760786864885346, unsigned __sym__0__4755955500146647717, unsigned __sym__0__825634143835399618, unsigned __sym__0___45_5673193308586008598, unsigned __sym__0__2344416604488212124, unsigned __sym__0__996127159005129399, fluidb_string<15> __sym__0___45_8445295692641080722, fluidb_string<2> __sym__0___45_9133478590074263962, fluidb_string<2> __sym__0___45_1949673146646224253, fluidb_string<2> __sym__0___45_3693142685708191253, fluidb_string<2> __sym__0___45_7021098367134788127, unsigned __sym__0__1445832851994825762, fluidb_string<18> __sym__0__4538888751267676410, fluidb_string<40> __sym__0__6214774548635804832, fluidb_string<11> __sym__0__5647889798153721686, fluidb_string<15> __sym__0__7215382845017137468, fluidb_string<13> __sym__0___45_7064023331726131555, fluidb_string<15> __sym__0__2464748358755927674, fluidb_string<21> __sym__0__1701416785032206702) : sym__0___45_6180681665671689455(__sym__0___45_6180681665671689455), sym__0___45_7492215985175491366(__sym__0___45_7492215985175491366), sym__0__3108260102440442872(__sym__0__3108260102440442872), sym__0__4242088751554333190(__sym__0__4242088751554333190), sym__0__4419222406440371028(__sym__0__4419222406440371028), sym__0___45_4395878808383970875(__sym__0___45_4395878808383970875), sym__0__5421156455815400282(__sym__0__5421156455815400282), sym__0___45_1631867111754601434(__sym__0___45_1631867111754601434), sym__0__5956167765210805980(__sym__0__5956167765210805980), sym__0___45_4504547450980902284(__sym__0___45_4504547450980902284), sym__0__2571611128943656626(__sym__0__2571611128943656626), sym__0___45_7797291820866539495(__sym__0___45_7797291820866539495), sym__0__8112696983606547888(__sym__0__8112696983606547888), sym__0___45_8859514051634859623(__sym__0___45_8859514051634859623), sym__0__1155613969670303859(__sym__0__1155613969670303859), sym__0__6875278589307593972(__sym__0__6875278589307593972), sym__0___45_961680512448388956(__sym__0___45_961680512448388956), sym__0___45_674541735213940698(__sym__0___45_674541735213940698), sym__0___45_821091676724229936(__sym__0___45_821091676724229936), sym__0___45_4702801186563994626(__sym__0___45_4702801186563994626), sym__0___45_3023845865529546326(__sym__0___45_3023845865529546326), sym__0__5284478023732558701(__sym__0__5284478023732558701), sym__0__253975703545414575(__sym__0__253975703545414575), sym__0__2038562371344131399(__sym__0__2038562371344131399), sym__0___45_2600703832754715382(__sym__0___45_2600703832754715382), sym__0___45_7578273935239857990(__sym__0___45_7578273935239857990), sym__0__875191355534311252(__sym__0__875191355534311252), sym__0___45_6042256660357361193(__sym__0___45_6042256660357361193), sym__0__2251162898911166857(__sym__0__2251162898911166857), sym__0__8322995032561243047(__sym__0__8322995032561243047), sym__0__3359760786864885346(__sym__0__3359760786864885346), sym__0__4755955500146647717(__sym__0__4755955500146647717), sym__0__825634143835399618(__sym__0__825634143835399618), sym__0___45_5673193308586008598(__sym__0___45_5673193308586008598), sym__0__2344416604488212124(__sym__0__2344416604488212124), sym__0__996127159005129399(__sym__0__996127159005129399), sym__0___45_8445295692641080722(__sym__0___45_8445295692641080722), sym__0___45_9133478590074263962(__sym__0___45_9133478590074263962), sym__0___45_1949673146646224253(__sym__0___45_1949673146646224253), sym__0___45_3693142685708191253(__sym__0___45_3693142685708191253), sym__0___45_7021098367134788127(__sym__0___45_7021098367134788127), sym__0__1445832851994825762(__sym__0__1445832851994825762), sym__0__4538888751267676410(__sym__0__4538888751267676410), sym__0__6214774548635804832(__sym__0__6214774548635804832), sym__0__5647889798153721686(__sym__0__5647889798153721686), sym__0__7215382845017137468(__sym__0__7215382845017137468), sym__0___45_7064023331726131555(__sym__0___45_7064023331726131555), sym__0__2464748358755927674(__sym__0__2464748358755927674), sym__0__1701416785032206702(__sym__0__1701416785032206702)
  {
  }
  Record1() 
  {
  }
  std::string show() const{
    std::stringstream o;
    o << sym__0___45_6180681665671689455 << " | " << arrToString(sym__0___45_7492215985175491366) << " | " << arrToString(sym__0__3108260102440442872) << " | " << arrToString(sym__0__4242088751554333190) << " | " << arrToString(sym__0__4419222406440371028) << " | " << arrToString(sym__0___45_4395878808383970875) << " | " << arrToString(sym__0__5421156455815400282) << " | " << sym__0___45_1631867111754601434 << " | " << sym__0__5956167765210805980 << " | " << sym__0___45_4504547450980902284 << " | " << sym__0__2571611128943656626 << " | " << sym__0___45_7797291820866539495 << " | " << sym__0__8112696983606547888 << " | " << arrToString(sym__0___45_8859514051634859623) << " | " << sym__0__1155613969670303859 << " | " << arrToString(sym__0__6875278589307593972) << " | " << sym__0___45_961680512448388956 << " | " << sym__0___45_674541735213940698 << " | " << sym__0___45_821091676724229936 << " | " << sym__0___45_4702801186563994626 << " | " << sym__0___45_3023845865529546326 << " | " << sym__0__5284478023732558701 << " | " << sym__0__253975703545414575 << " | " << arrToString(sym__0__2038562371344131399) << " | " << sym__0___45_2600703832754715382 << " | " << arrToString(sym__0___45_7578273935239857990) << " | " << arrToString(sym__0__875191355534311252) << " | " << arrToString(sym__0___45_6042256660357361193) << " | " << sym__0__2251162898911166857 << " | " << sym__0__8322995032561243047 << " | " << arrToString(sym__0__3359760786864885346) << " | " << sym__0__4755955500146647717 << " | " << sym__0__825634143835399618 << " | " << sym__0___45_5673193308586008598 << " | " << sym__0__2344416604488212124 << " | " << sym__0__996127159005129399 << " | " << arrToString(sym__0___45_8445295692641080722) << " | " << arrToString(sym__0___45_9133478590074263962) << " | " << arrToString(sym__0___45_1949673146646224253) << " | " << arrToString(sym__0___45_3693142685708191253) << " | " << arrToString(sym__0___45_7021098367134788127) << " | " << sym__0__1445832851994825762 << " | " << arrToString(sym__0__4538888751267676410) << " | " << arrToString(sym__0__6214774548635804832) << " | " << arrToString(sym__0__5647889798153721686) << " | " << arrToString(sym__0__7215382845017137468) << " | " << arrToString(sym__0___45_7064023331726131555) << " | " << arrToString(sym__0__2464748358755927674) << " | " << arrToString(sym__0__1701416785032206702);
    return o.str();
  }
  bool operator <(const Record1& otherRec) const{
    return (otherRec.sym__0___45_6180681665671689455 < sym__0___45_6180681665671689455 && (otherRec.sym__0___45_7492215985175491366 < sym__0___45_7492215985175491366 && (otherRec.sym__0__3108260102440442872 < sym__0__3108260102440442872 && (otherRec.sym__0__4242088751554333190 < sym__0__4242088751554333190 && (otherRec.sym__0__4419222406440371028 < sym__0__4419222406440371028 && (otherRec.sym__0___45_4395878808383970875 < sym__0___45_4395878808383970875 && (otherRec.sym__0__5421156455815400282 < sym__0__5421156455815400282 && (otherRec.sym__0___45_1631867111754601434 < sym__0___45_1631867111754601434 && (otherRec.sym__0__5956167765210805980 < sym__0__5956167765210805980 && (otherRec.sym__0___45_4504547450980902284 < sym__0___45_4504547450980902284 && (otherRec.sym__0__2571611128943656626 < sym__0__2571611128943656626 && (otherRec.sym__0___45_7797291820866539495 < sym__0___45_7797291820866539495 && (otherRec.sym__0__8112696983606547888 < sym__0__8112696983606547888 && (otherRec.sym__0___45_8859514051634859623 < sym__0___45_8859514051634859623 && (otherRec.sym__0__1155613969670303859 < sym__0__1155613969670303859 && (otherRec.sym__0__6875278589307593972 < sym__0__6875278589307593972 && (otherRec.sym__0___45_961680512448388956 < sym__0___45_961680512448388956 && (otherRec.sym__0___45_674541735213940698 < sym__0___45_674541735213940698 && (otherRec.sym__0___45_821091676724229936 < sym__0___45_821091676724229936 && (otherRec.sym__0___45_4702801186563994626 < sym__0___45_4702801186563994626 && (otherRec.sym__0___45_3023845865529546326 < sym__0___45_3023845865529546326 && (otherRec.sym__0__5284478023732558701 < sym__0__5284478023732558701 && (otherRec.sym__0__253975703545414575 < sym__0__253975703545414575 && (otherRec.sym__0__2038562371344131399 < sym__0__2038562371344131399 && (otherRec.sym__0___45_2600703832754715382 < sym__0___45_2600703832754715382 && (otherRec.sym__0___45_7578273935239857990 < sym__0___45_7578273935239857990 && (otherRec.sym__0__875191355534311252 < sym__0__875191355534311252 && (otherRec.sym__0___45_6042256660357361193 < sym__0___45_6042256660357361193 && (otherRec.sym__0__2251162898911166857 < sym__0__2251162898911166857 && (otherRec.sym__0__8322995032561243047 < sym__0__8322995032561243047 && (otherRec.sym__0__3359760786864885346 < sym__0__3359760786864885346 && (otherRec.sym__0__4755955500146647717 < sym__0__4755955500146647717 && (otherRec.sym__0__825634143835399618 < sym__0__825634143835399618 && (otherRec.sym__0___45_5673193308586008598 < sym__0___45_5673193308586008598 && (otherRec.sym__0__2344416604488212124 < sym__0__2344416604488212124 && (otherRec.sym__0__996127159005129399 < sym__0__996127159005129399 && (otherRec.sym__0___45_8445295692641080722 < sym__0___45_8445295692641080722 && (otherRec.sym__0___45_9133478590074263962 < sym__0___45_9133478590074263962 && (otherRec.sym__0___45_1949673146646224253 < sym__0___45_1949673146646224253 && (otherRec.sym__0___45_3693142685708191253 < sym__0___45_3693142685708191253 && (otherRec.sym__0___45_7021098367134788127 < sym__0___45_7021098367134788127 && (otherRec.sym__0__1445832851994825762 < sym__0__1445832851994825762 && (otherRec.sym__0__4538888751267676410 < sym__0__4538888751267676410 && (otherRec.sym__0__6214774548635804832 < sym__0__6214774548635804832 && (otherRec.sym__0__5647889798153721686 < sym__0__5647889798153721686 && (otherRec.sym__0__7215382845017137468 < sym__0__7215382845017137468 && (otherRec.sym__0___45_7064023331726131555 < sym__0___45_7064023331726131555 && (otherRec.sym__0__2464748358755927674 < sym__0__2464748358755927674 && otherRec.sym__0__1701416785032206702 < sym__0__1701416785032206702))))))))))))))))))))))))))))))))))))))))))))))));
  }
  bool operator ==(const Record1& otherRec) const{
    return (otherRec.sym__0___45_6180681665671689455 == sym__0___45_6180681665671689455 && (otherRec.sym__0___45_7492215985175491366 == sym__0___45_7492215985175491366 && (otherRec.sym__0__3108260102440442872 == sym__0__3108260102440442872 && (otherRec.sym__0__4242088751554333190 == sym__0__4242088751554333190 && (otherRec.sym__0__4419222406440371028 == sym__0__4419222406440371028 && (otherRec.sym__0___45_4395878808383970875 == sym__0___45_4395878808383970875 && (otherRec.sym__0__5421156455815400282 == sym__0__5421156455815400282 && (otherRec.sym__0___45_1631867111754601434 == sym__0___45_1631867111754601434 && (otherRec.sym__0__5956167765210805980 == sym__0__5956167765210805980 && (otherRec.sym__0___45_4504547450980902284 == sym__0___45_4504547450980902284 && (otherRec.sym__0__2571611128943656626 == sym__0__2571611128943656626 && (otherRec.sym__0___45_7797291820866539495 == sym__0___45_7797291820866539495 && (otherRec.sym__0__8112696983606547888 == sym__0__8112696983606547888 && (otherRec.sym__0___45_8859514051634859623 == sym__0___45_8859514051634859623 && (otherRec.sym__0__1155613969670303859 == sym__0__1155613969670303859 && (otherRec.sym__0__6875278589307593972 == sym__0__6875278589307593972 && (otherRec.sym__0___45_961680512448388956 == sym__0___45_961680512448388956 && (otherRec.sym__0___45_674541735213940698 == sym__0___45_674541735213940698 && (otherRec.sym__0___45_821091676724229936 == sym__0___45_821091676724229936 && (otherRec.sym__0___45_4702801186563994626 == sym__0___45_4702801186563994626 && (otherRec.sym__0___45_3023845865529546326 == sym__0___45_3023845865529546326 && (otherRec.sym__0__5284478023732558701 == sym__0__5284478023732558701 && (otherRec.sym__0__253975703545414575 == sym__0__253975703545414575 && (otherRec.sym__0__2038562371344131399 == sym__0__2038562371344131399 && (otherRec.sym__0___45_2600703832754715382 == sym__0___45_2600703832754715382 && (otherRec.sym__0___45_7578273935239857990 == sym__0___45_7578273935239857990 && (otherRec.sym__0__875191355534311252 == sym__0__875191355534311252 && (otherRec.sym__0___45_6042256660357361193 == sym__0___45_6042256660357361193 && (otherRec.sym__0__2251162898911166857 == sym__0__2251162898911166857 && (otherRec.sym__0__8322995032561243047 == sym__0__8322995032561243047 && (otherRec.sym__0__3359760786864885346 == sym__0__3359760786864885346 && (otherRec.sym__0__4755955500146647717 == sym__0__4755955500146647717 && (otherRec.sym__0__825634143835399618 == sym__0__825634143835399618 && (otherRec.sym__0___45_5673193308586008598 == sym__0___45_5673193308586008598 && (otherRec.sym__0__2344416604488212124 == sym__0__2344416604488212124 && (otherRec.sym__0__996127159005129399 == sym__0__996127159005129399 && (otherRec.sym__0___45_8445295692641080722 == sym__0___45_8445295692641080722 && (otherRec.sym__0___45_9133478590074263962 == sym__0___45_9133478590074263962 && (otherRec.sym__0___45_1949673146646224253 == sym__0___45_1949673146646224253 && (otherRec.sym__0___45_3693142685708191253 == sym__0___45_3693142685708191253 && (otherRec.sym__0___45_7021098367134788127 == sym__0___45_7021098367134788127 && (otherRec.sym__0__1445832851994825762 == sym__0__1445832851994825762 && (otherRec.sym__0__4538888751267676410 == sym__0__4538888751267676410 && (otherRec.sym__0__6214774548635804832 == sym__0__6214774548635804832 && (otherRec.sym__0__5647889798153721686 == sym__0__5647889798153721686 && (otherRec.sym__0__7215382845017137468 == sym__0__7215382845017137468 && (otherRec.sym__0___45_7064023331726131555 == sym__0___45_7064023331726131555 && (otherRec.sym__0__2464748358755927674 == sym__0__2464748358755927674 && otherRec.sym__0__1701416785032206702 == sym__0__1701416785032206702))))))))))))))))))))))))))))))))))))))))))))))));
  }
  bool operator !=(const Record1& otherRec) const{
    return (otherRec.sym__0___45_6180681665671689455 != sym__0___45_6180681665671689455 || (otherRec.sym__0___45_7492215985175491366 != sym__0___45_7492215985175491366 || (otherRec.sym__0__3108260102440442872 != sym__0__3108260102440442872 || (otherRec.sym__0__4242088751554333190 != sym__0__4242088751554333190 || (otherRec.sym__0__4419222406440371028 != sym__0__4419222406440371028 || (otherRec.sym__0___45_4395878808383970875 != sym__0___45_4395878808383970875 || (otherRec.sym__0__5421156455815400282 != sym__0__5421156455815400282 || (otherRec.sym__0___45_1631867111754601434 != sym__0___45_1631867111754601434 || (otherRec.sym__0__5956167765210805980 != sym__0__5956167765210805980 || (otherRec.sym__0___45_4504547450980902284 != sym__0___45_4504547450980902284 || (otherRec.sym__0__2571611128943656626 != sym__0__2571611128943656626 || (otherRec.sym__0___45_7797291820866539495 != sym__0___45_7797291820866539495 || (otherRec.sym__0__8112696983606547888 != sym__0__8112696983606547888 || (otherRec.sym__0___45_8859514051634859623 != sym__0___45_8859514051634859623 || (otherRec.sym__0__1155613969670303859 != sym__0__1155613969670303859 || (otherRec.sym__0__6875278589307593972 != sym__0__6875278589307593972 || (otherRec.sym__0___45_961680512448388956 != sym__0___45_961680512448388956 || (otherRec.sym__0___45_674541735213940698 != sym__0___45_674541735213940698 || (otherRec.sym__0___45_821091676724229936 != sym__0___45_821091676724229936 || (otherRec.sym__0___45_4702801186563994626 != sym__0___45_4702801186563994626 || (otherRec.sym__0___45_3023845865529546326 != sym__0___45_3023845865529546326 || (otherRec.sym__0__5284478023732558701 != sym__0__5284478023732558701 || (otherRec.sym__0__253975703545414575 != sym__0__253975703545414575 || (otherRec.sym__0__2038562371344131399 != sym__0__2038562371344131399 || (otherRec.sym__0___45_2600703832754715382 != sym__0___45_2600703832754715382 || (otherRec.sym__0___45_7578273935239857990 != sym__0___45_7578273935239857990 || (otherRec.sym__0__875191355534311252 != sym__0__875191355534311252 || (otherRec.sym__0___45_6042256660357361193 != sym__0___45_6042256660357361193 || (otherRec.sym__0__2251162898911166857 != sym__0__2251162898911166857 || (otherRec.sym__0__8322995032561243047 != sym__0__8322995032561243047 || (otherRec.sym__0__3359760786864885346 != sym__0__3359760786864885346 || (otherRec.sym__0__4755955500146647717 != sym__0__4755955500146647717 || (otherRec.sym__0__825634143835399618 != sym__0__825634143835399618 || (otherRec.sym__0___45_5673193308586008598 != sym__0___45_5673193308586008598 || (otherRec.sym__0__2344416604488212124 != sym__0__2344416604488212124 || (otherRec.sym__0__996127159005129399 != sym__0__996127159005129399 || (otherRec.sym__0___45_8445295692641080722 != sym__0___45_8445295692641080722 || (otherRec.sym__0___45_9133478590074263962 != sym__0___45_9133478590074263962 || (otherRec.sym__0___45_1949673146646224253 != sym__0___45_1949673146646224253 || (otherRec.sym__0___45_3693142685708191253 != sym__0___45_3693142685708191253 || (otherRec.sym__0___45_7021098367134788127 != sym__0___45_7021098367134788127 || (otherRec.sym__0__1445832851994825762 != sym__0__1445832851994825762 || (otherRec.sym__0__4538888751267676410 != sym__0__4538888751267676410 || (otherRec.sym__0__6214774548635804832 != sym__0__6214774548635804832 || (otherRec.sym__0__5647889798153721686 != sym__0__5647889798153721686 || (otherRec.sym__0__7215382845017137468 != sym__0__7215382845017137468 || (otherRec.sym__0___45_7064023331726131555 != sym__0___45_7064023331726131555 || (otherRec.sym__0__2464748358755927674 != sym__0__2464748358755927674 || otherRec.sym__0__1701416785032206702 != sym__0__1701416785032206702))))))))))))))))))))))))))))))))))))))))))))))));
  }
  unsigned sym__0___45_6180681665671689455;
  fluidb_string<25> sym__0___45_7492215985175491366;
  fluidb_string<40> sym__0__3108260102440442872;
  fluidb_string<16> sym__0__4242088751554333190;
  fluidb_string<16> sym__0__4419222406440371028;
  fluidb_string<13> sym__0___45_4395878808383970875;
  fluidb_string<15> sym__0__5421156455815400282;
  unsigned sym__0___45_1631867111754601434;
  int sym__0__5956167765210805980;
  unsigned sym__0___45_4504547450980902284;
  unsigned sym__0__2571611128943656626;
  unsigned sym__0___45_7797291820866539495;
  unsigned sym__0__8112696983606547888;
  fluidb_string<21> sym__0___45_8859514051634859623;
  unsigned sym__0__1155613969670303859;
  fluidb_string<10> sym__0__6875278589307593972;
  unsigned sym__0___45_961680512448388956;
  double sym__0___45_674541735213940698;
  unsigned sym__0___45_821091676724229936;
  double sym__0___45_4702801186563994626;
  unsigned sym__0___45_3023845865529546326;
  unsigned sym__0__5284478023732558701;
  double sym__0__253975703545414575;
  fluidb_string<13> sym__0__2038562371344131399;
  unsigned sym__0___45_2600703832754715382;
  fluidb_string<18> sym__0___45_7578273935239857990;
  fluidb_string<9> sym__0__875191355534311252;
  fluidb_string<9> sym__0___45_6042256660357361193;
  unsigned sym__0__2251162898911166857;
  unsigned sym__0__8322995032561243047;
  fluidb_string<7> sym__0__3359760786864885346;
  unsigned sym__0__4755955500146647717;
  unsigned sym__0__825634143835399618;
  unsigned sym__0___45_5673193308586008598;
  unsigned sym__0__2344416604488212124;
  unsigned sym__0__996127159005129399;
  fluidb_string<15> sym__0___45_8445295692641080722;
  fluidb_string<2> sym__0___45_9133478590074263962;
  fluidb_string<2> sym__0___45_1949673146646224253;
  fluidb_string<2> sym__0___45_3693142685708191253;
  fluidb_string<2> sym__0___45_7021098367134788127;
  unsigned sym__0__1445832851994825762;
  fluidb_string<18> sym__0__4538888751267676410;
  fluidb_string<40> sym__0__6214774548635804832;
  fluidb_string<11> sym__0__5647889798153721686;
  fluidb_string<15> sym__0__7215382845017137468;
  fluidb_string<13> sym__0___45_7064023331726131555;
  fluidb_string<15> sym__0__2464748358755927674;
  fluidb_string<21> sym__0__1701416785032206702;
 private:
};


class Record7 {
 public:
  Record7(unsigned __sym__0__2102316481828394123, fluidb_string<25> __sym__0__1780257040091145452, fluidb_string<40> __sym__0__3109939911660640430, fluidb_string<16> __sym__0___45_2175199227983174320, fluidb_string<16> __sym__0__2274992661292194562, fluidb_string<13> __sym__0___45_52536403880094569, fluidb_string<15> __sym__0__8474116574285927276, unsigned __sym__0__1835503384076924528, int __sym__0__586412267723269786, unsigned __sym__0__1353367320182642978, unsigned __sym__0___45_6351222752813626636, unsigned __sym__0___45_805067702695824989, unsigned __sym__0__914509637812701046, fluidb_string<21> __sym__0__7895450651221174051, unsigned __sym__0__5942285589324576545, fluidb_string<10> __sym__0__3979382234526804898, unsigned __sym__0___45_6103522369909819246, double __sym__0__1873148039180761712, unsigned __sym__0__1430551526674366102, double __sym__0__1048818672001592248, unsigned __sym__0__5723353836447658492, unsigned __sym__0___45_2233273278156881105, double __sym__0___45_1120880788595637835, fluidb_string<13> __sym__0___45_6361490230660137987, unsigned __sym__0___45_7131249874638266788, fluidb_string<18> __sym__0__7265729621635359692, fluidb_string<9> __sym__0___45_2986035740159621374, fluidb_string<9> __sym__0__5081664509798388941, unsigned __sym__0___45_8518596434939314413, unsigned __sym__0__1988221653138390749, fluidb_string<7> __sym__0___45_8801377200944175068, unsigned __sym__0___45_4634183629139578121, unsigned __sym__0__806472603637564420, unsigned __sym__0__1725829484083430844, unsigned __sym__0___45_5279274827282678566, unsigned __sym__0___45_9129247388617675603, fluidb_string<15> __sym__0__1232225844204183080, fluidb_string<2> __sym__0__9184663680502119984, fluidb_string<2> __sym__0___45_9023997483659527503, fluidb_string<2> __sym__0___45_1026604631201554135, fluidb_string<2> __sym__0___45_7189754320372197989) : sym__0__2102316481828394123(__sym__0__2102316481828394123), sym__0__1780257040091145452(__sym__0__1780257040091145452), sym__0__3109939911660640430(__sym__0__3109939911660640430), sym__0___45_2175199227983174320(__sym__0___45_2175199227983174320), sym__0__2274992661292194562(__sym__0__2274992661292194562), sym__0___45_52536403880094569(__sym__0___45_52536403880094569), sym__0__8474116574285927276(__sym__0__8474116574285927276), sym__0__1835503384076924528(__sym__0__1835503384076924528), sym__0__586412267723269786(__sym__0__586412267723269786), sym__0__1353367320182642978(__sym__0__1353367320182642978), sym__0___45_6351222752813626636(__sym__0___45_6351222752813626636), sym__0___45_805067702695824989(__sym__0___45_805067702695824989), sym__0__914509637812701046(__sym__0__914509637812701046), sym__0__7895450651221174051(__sym__0__7895450651221174051), sym__0__5942285589324576545(__sym__0__5942285589324576545), sym__0__3979382234526804898(__sym__0__3979382234526804898), sym__0___45_6103522369909819246(__sym__0___45_6103522369909819246), sym__0__1873148039180761712(__sym__0__1873148039180761712), sym__0__1430551526674366102(__sym__0__1430551526674366102), sym__0__1048818672001592248(__sym__0__1048818672001592248), sym__0__5723353836447658492(__sym__0__5723353836447658492), sym__0___45_2233273278156881105(__sym__0___45_2233273278156881105), sym__0___45_1120880788595637835(__sym__0___45_1120880788595637835), sym__0___45_6361490230660137987(__sym__0___45_6361490230660137987), sym__0___45_7131249874638266788(__sym__0___45_7131249874638266788), sym__0__7265729621635359692(__sym__0__7265729621635359692), sym__0___45_2986035740159621374(__sym__0___45_2986035740159621374), sym__0__5081664509798388941(__sym__0__5081664509798388941), sym__0___45_8518596434939314413(__sym__0___45_8518596434939314413), sym__0__1988221653138390749(__sym__0__1988221653138390749), sym__0___45_8801377200944175068(__sym__0___45_8801377200944175068), sym__0___45_4634183629139578121(__sym__0___45_4634183629139578121), sym__0__806472603637564420(__sym__0__806472603637564420), sym__0__1725829484083430844(__sym__0__1725829484083430844), sym__0___45_5279274827282678566(__sym__0___45_5279274827282678566), sym__0___45_9129247388617675603(__sym__0___45_9129247388617675603), sym__0__1232225844204183080(__sym__0__1232225844204183080), sym__0__9184663680502119984(__sym__0__9184663680502119984), sym__0___45_9023997483659527503(__sym__0___45_9023997483659527503), sym__0___45_1026604631201554135(__sym__0___45_1026604631201554135), sym__0___45_7189754320372197989(__sym__0___45_7189754320372197989)
  {
  }
  Record7() 
  {
  }
  std::string show() const{
    std::stringstream o;
    o << sym__0__2102316481828394123 << " | " << arrToString(sym__0__1780257040091145452) << " | " << arrToString(sym__0__3109939911660640430) << " | " << arrToString(sym__0___45_2175199227983174320) << " | " << arrToString(sym__0__2274992661292194562) << " | " << arrToString(sym__0___45_52536403880094569) << " | " << arrToString(sym__0__8474116574285927276) << " | " << sym__0__1835503384076924528 << " | " << sym__0__586412267723269786 << " | " << sym__0__1353367320182642978 << " | " << sym__0___45_6351222752813626636 << " | " << sym__0___45_805067702695824989 << " | " << sym__0__914509637812701046 << " | " << arrToString(sym__0__7895450651221174051) << " | " << sym__0__5942285589324576545 << " | " << arrToString(sym__0__3979382234526804898) << " | " << sym__0___45_6103522369909819246 << " | " << sym__0__1873148039180761712 << " | " << sym__0__1430551526674366102 << " | " << sym__0__1048818672001592248 << " | " << sym__0__5723353836447658492 << " | " << sym__0___45_2233273278156881105 << " | " << sym__0___45_1120880788595637835 << " | " << arrToString(sym__0___45_6361490230660137987) << " | " << sym__0___45_7131249874638266788 << " | " << arrToString(sym__0__7265729621635359692) << " | " << arrToString(sym__0___45_2986035740159621374) << " | " << arrToString(sym__0__5081664509798388941) << " | " << sym__0___45_8518596434939314413 << " | " << sym__0__1988221653138390749 << " | " << arrToString(sym__0___45_8801377200944175068) << " | " << sym__0___45_4634183629139578121 << " | " << sym__0__806472603637564420 << " | " << sym__0__1725829484083430844 << " | " << sym__0___45_5279274827282678566 << " | " << sym__0___45_9129247388617675603 << " | " << arrToString(sym__0__1232225844204183080) << " | " << arrToString(sym__0__9184663680502119984) << " | " << arrToString(sym__0___45_9023997483659527503) << " | " << arrToString(sym__0___45_1026604631201554135) << " | " << arrToString(sym__0___45_7189754320372197989);
    return o.str();
  }
  bool operator <(const Record7& otherRec) const{
    return (otherRec.sym__0__2102316481828394123 < sym__0__2102316481828394123 && (otherRec.sym__0__1780257040091145452 < sym__0__1780257040091145452 && (otherRec.sym__0__3109939911660640430 < sym__0__3109939911660640430 && (otherRec.sym__0___45_2175199227983174320 < sym__0___45_2175199227983174320 && (otherRec.sym__0__2274992661292194562 < sym__0__2274992661292194562 && (otherRec.sym__0___45_52536403880094569 < sym__0___45_52536403880094569 && (otherRec.sym__0__8474116574285927276 < sym__0__8474116574285927276 && (otherRec.sym__0__1835503384076924528 < sym__0__1835503384076924528 && (otherRec.sym__0__586412267723269786 < sym__0__586412267723269786 && (otherRec.sym__0__1353367320182642978 < sym__0__1353367320182642978 && (otherRec.sym__0___45_6351222752813626636 < sym__0___45_6351222752813626636 && (otherRec.sym__0___45_805067702695824989 < sym__0___45_805067702695824989 && (otherRec.sym__0__914509637812701046 < sym__0__914509637812701046 && (otherRec.sym__0__7895450651221174051 < sym__0__7895450651221174051 && (otherRec.sym__0__5942285589324576545 < sym__0__5942285589324576545 && (otherRec.sym__0__3979382234526804898 < sym__0__3979382234526804898 && (otherRec.sym__0___45_6103522369909819246 < sym__0___45_6103522369909819246 && (otherRec.sym__0__1873148039180761712 < sym__0__1873148039180761712 && (otherRec.sym__0__1430551526674366102 < sym__0__1430551526674366102 && (otherRec.sym__0__1048818672001592248 < sym__0__1048818672001592248 && (otherRec.sym__0__5723353836447658492 < sym__0__5723353836447658492 && (otherRec.sym__0___45_2233273278156881105 < sym__0___45_2233273278156881105 && (otherRec.sym__0___45_1120880788595637835 < sym__0___45_1120880788595637835 && (otherRec.sym__0___45_6361490230660137987 < sym__0___45_6361490230660137987 && (otherRec.sym__0___45_7131249874638266788 < sym__0___45_7131249874638266788 && (otherRec.sym__0__7265729621635359692 < sym__0__7265729621635359692 && (otherRec.sym__0___45_2986035740159621374 < sym__0___45_2986035740159621374 && (otherRec.sym__0__5081664509798388941 < sym__0__5081664509798388941 && (otherRec.sym__0___45_8518596434939314413 < sym__0___45_8518596434939314413 && (otherRec.sym__0__1988221653138390749 < sym__0__1988221653138390749 && (otherRec.sym__0___45_8801377200944175068 < sym__0___45_8801377200944175068 && (otherRec.sym__0___45_4634183629139578121 < sym__0___45_4634183629139578121 && (otherRec.sym__0__806472603637564420 < sym__0__806472603637564420 && (otherRec.sym__0__1725829484083430844 < sym__0__1725829484083430844 && (otherRec.sym__0___45_5279274827282678566 < sym__0___45_5279274827282678566 && (otherRec.sym__0___45_9129247388617675603 < sym__0___45_9129247388617675603 && (otherRec.sym__0__1232225844204183080 < sym__0__1232225844204183080 && (otherRec.sym__0__9184663680502119984 < sym__0__9184663680502119984 && (otherRec.sym__0___45_9023997483659527503 < sym__0___45_9023997483659527503 && (otherRec.sym__0___45_1026604631201554135 < sym__0___45_1026604631201554135 && otherRec.sym__0___45_7189754320372197989 < sym__0___45_7189754320372197989))))))))))))))))))))))))))))))))))))))));
  }
  bool operator ==(const Record7& otherRec) const{
    return (otherRec.sym__0__2102316481828394123 == sym__0__2102316481828394123 && (otherRec.sym__0__1780257040091145452 == sym__0__1780257040091145452 && (otherRec.sym__0__3109939911660640430 == sym__0__3109939911660640430 && (otherRec.sym__0___45_2175199227983174320 == sym__0___45_2175199227983174320 && (otherRec.sym__0__2274992661292194562 == sym__0__2274992661292194562 && (otherRec.sym__0___45_52536403880094569 == sym__0___45_52536403880094569 && (otherRec.sym__0__8474116574285927276 == sym__0__8474116574285927276 && (otherRec.sym__0__1835503384076924528 == sym__0__1835503384076924528 && (otherRec.sym__0__586412267723269786 == sym__0__586412267723269786 && (otherRec.sym__0__1353367320182642978 == sym__0__1353367320182642978 && (otherRec.sym__0___45_6351222752813626636 == sym__0___45_6351222752813626636 && (otherRec.sym__0___45_805067702695824989 == sym__0___45_805067702695824989 && (otherRec.sym__0__914509637812701046 == sym__0__914509637812701046 && (otherRec.sym__0__7895450651221174051 == sym__0__7895450651221174051 && (otherRec.sym__0__5942285589324576545 == sym__0__5942285589324576545 && (otherRec.sym__0__3979382234526804898 == sym__0__3979382234526804898 && (otherRec.sym__0___45_6103522369909819246 == sym__0___45_6103522369909819246 && (otherRec.sym__0__1873148039180761712 == sym__0__1873148039180761712 && (otherRec.sym__0__1430551526674366102 == sym__0__1430551526674366102 && (otherRec.sym__0__1048818672001592248 == sym__0__1048818672001592248 && (otherRec.sym__0__5723353836447658492 == sym__0__5723353836447658492 && (otherRec.sym__0___45_2233273278156881105 == sym__0___45_2233273278156881105 && (otherRec.sym__0___45_1120880788595637835 == sym__0___45_1120880788595637835 && (otherRec.sym__0___45_6361490230660137987 == sym__0___45_6361490230660137987 && (otherRec.sym__0___45_7131249874638266788 == sym__0___45_7131249874638266788 && (otherRec.sym__0__7265729621635359692 == sym__0__7265729621635359692 && (otherRec.sym__0___45_2986035740159621374 == sym__0___45_2986035740159621374 && (otherRec.sym__0__5081664509798388941 == sym__0__5081664509798388941 && (otherRec.sym__0___45_8518596434939314413 == sym__0___45_8518596434939314413 && (otherRec.sym__0__1988221653138390749 == sym__0__1988221653138390749 && (otherRec.sym__0___45_8801377200944175068 == sym__0___45_8801377200944175068 && (otherRec.sym__0___45_4634183629139578121 == sym__0___45_4634183629139578121 && (otherRec.sym__0__806472603637564420 == sym__0__806472603637564420 && (otherRec.sym__0__1725829484083430844 == sym__0__1725829484083430844 && (otherRec.sym__0___45_5279274827282678566 == sym__0___45_5279274827282678566 && (otherRec.sym__0___45_9129247388617675603 == sym__0___45_9129247388617675603 && (otherRec.sym__0__1232225844204183080 == sym__0__1232225844204183080 && (otherRec.sym__0__9184663680502119984 == sym__0__9184663680502119984 && (otherRec.sym__0___45_9023997483659527503 == sym__0___45_9023997483659527503 && (otherRec.sym__0___45_1026604631201554135 == sym__0___45_1026604631201554135 && otherRec.sym__0___45_7189754320372197989 == sym__0___45_7189754320372197989))))))))))))))))))))))))))))))))))))))));
  }
  bool operator !=(const Record7& otherRec) const{
    return (otherRec.sym__0__2102316481828394123 != sym__0__2102316481828394123 || (otherRec.sym__0__1780257040091145452 != sym__0__1780257040091145452 || (otherRec.sym__0__3109939911660640430 != sym__0__3109939911660640430 || (otherRec.sym__0___45_2175199227983174320 != sym__0___45_2175199227983174320 || (otherRec.sym__0__2274992661292194562 != sym__0__2274992661292194562 || (otherRec.sym__0___45_52536403880094569 != sym__0___45_52536403880094569 || (otherRec.sym__0__8474116574285927276 != sym__0__8474116574285927276 || (otherRec.sym__0__1835503384076924528 != sym__0__1835503384076924528 || (otherRec.sym__0__586412267723269786 != sym__0__586412267723269786 || (otherRec.sym__0__1353367320182642978 != sym__0__1353367320182642978 || (otherRec.sym__0___45_6351222752813626636 != sym__0___45_6351222752813626636 || (otherRec.sym__0___45_805067702695824989 != sym__0___45_805067702695824989 || (otherRec.sym__0__914509637812701046 != sym__0__914509637812701046 || (otherRec.sym__0__7895450651221174051 != sym__0__7895450651221174051 || (otherRec.sym__0__5942285589324576545 != sym__0__5942285589324576545 || (otherRec.sym__0__3979382234526804898 != sym__0__3979382234526804898 || (otherRec.sym__0___45_6103522369909819246 != sym__0___45_6103522369909819246 || (otherRec.sym__0__1873148039180761712 != sym__0__1873148039180761712 || (otherRec.sym__0__1430551526674366102 != sym__0__1430551526674366102 || (otherRec.sym__0__1048818672001592248 != sym__0__1048818672001592248 || (otherRec.sym__0__5723353836447658492 != sym__0__5723353836447658492 || (otherRec.sym__0___45_2233273278156881105 != sym__0___45_2233273278156881105 || (otherRec.sym__0___45_1120880788595637835 != sym__0___45_1120880788595637835 || (otherRec.sym__0___45_6361490230660137987 != sym__0___45_6361490230660137987 || (otherRec.sym__0___45_7131249874638266788 != sym__0___45_7131249874638266788 || (otherRec.sym__0__7265729621635359692 != sym__0__7265729621635359692 || (otherRec.sym__0___45_2986035740159621374 != sym__0___45_2986035740159621374 || (otherRec.sym__0__5081664509798388941 != sym__0__5081664509798388941 || (otherRec.sym__0___45_8518596434939314413 != sym__0___45_8518596434939314413 || (otherRec.sym__0__1988221653138390749 != sym__0__1988221653138390749 || (otherRec.sym__0___45_8801377200944175068 != sym__0___45_8801377200944175068 || (otherRec.sym__0___45_4634183629139578121 != sym__0___45_4634183629139578121 || (otherRec.sym__0__806472603637564420 != sym__0__806472603637564420 || (otherRec.sym__0__1725829484083430844 != sym__0__1725829484083430844 || (otherRec.sym__0___45_5279274827282678566 != sym__0___45_5279274827282678566 || (otherRec.sym__0___45_9129247388617675603 != sym__0___45_9129247388617675603 || (otherRec.sym__0__1232225844204183080 != sym__0__1232225844204183080 || (otherRec.sym__0__9184663680502119984 != sym__0__9184663680502119984 || (otherRec.sym__0___45_9023997483659527503 != sym__0___45_9023997483659527503 || (otherRec.sym__0___45_1026604631201554135 != sym__0___45_1026604631201554135 || otherRec.sym__0___45_7189754320372197989 != sym__0___45_7189754320372197989))))))))))))))))))))))))))))))))))))))));
  }
  unsigned sym__0__2102316481828394123;
  fluidb_string<25> sym__0__1780257040091145452;
  fluidb_string<40> sym__0__3109939911660640430;
  fluidb_string<16> sym__0___45_2175199227983174320;
  fluidb_string<16> sym__0__2274992661292194562;
  fluidb_string<13> sym__0___45_52536403880094569;
  fluidb_string<15> sym__0__8474116574285927276;
  unsigned sym__0__1835503384076924528;
  int sym__0__586412267723269786;
  unsigned sym__0__1353367320182642978;
  unsigned sym__0___45_6351222752813626636;
  unsigned sym__0___45_805067702695824989;
  unsigned sym__0__914509637812701046;
  fluidb_string<21> sym__0__7895450651221174051;
  unsigned sym__0__5942285589324576545;
  fluidb_string<10> sym__0__3979382234526804898;
  unsigned sym__0___45_6103522369909819246;
  double sym__0__1873148039180761712;
  unsigned sym__0__1430551526674366102;
  double sym__0__1048818672001592248;
  unsigned sym__0__5723353836447658492;
  unsigned sym__0___45_2233273278156881105;
  double sym__0___45_1120880788595637835;
  fluidb_string<13> sym__0___45_6361490230660137987;
  unsigned sym__0___45_7131249874638266788;
  fluidb_string<18> sym__0__7265729621635359692;
  fluidb_string<9> sym__0___45_2986035740159621374;
  fluidb_string<9> sym__0__5081664509798388941;
  unsigned sym__0___45_8518596434939314413;
  unsigned sym__0__1988221653138390749;
  fluidb_string<7> sym__0___45_8801377200944175068;
  unsigned sym__0___45_4634183629139578121;
  unsigned sym__0__806472603637564420;
  unsigned sym__0__1725829484083430844;
  unsigned sym__0___45_5279274827282678566;
  unsigned sym__0___45_9129247388617675603;
  fluidb_string<15> sym__0__1232225844204183080;
  fluidb_string<2> sym__0__9184663680502119984;
  fluidb_string<2> sym__0___45_9023997483659527503;
  fluidb_string<2> sym__0___45_1026604631201554135;
  fluidb_string<2> sym__0___45_7189754320372197989;
 private:
};


class Record11 {
 public:
  Record11(unsigned __sym__0___45_395632927433559406, fluidb_string<25> __sym__0__3500080010252534473, fluidb_string<40> __sym__0__2800931817820227903, fluidb_string<16> __sym__0__7557617225319929765, fluidb_string<16> __sym__0___45_3980497182018067045, fluidb_string<13> __sym__0__2235173403257069670, fluidb_string<15> __sym__0___45_6641253057665067959, unsigned __sym__0__1255259528474633157, int __sym__0___45_4404182672923859309, unsigned __sym__0___45_614365468487006021, unsigned __sym__0__5021292656532353329, unsigned __sym__0__4343635027495243018, unsigned __sym__0___45_3654849337237924089, fluidb_string<21> __sym__0__6124017931208230794, unsigned __sym__0__2631968767089293636, fluidb_string<10> __sym__0__8161280318223951419, unsigned __sym__0__6646444558267925131, double __sym__0___45_371840055694522427, unsigned __sym__0__1207871997281537063, double __sym__0___45_8251624728007457683, unsigned __sym__0___45_1977777050929051591, unsigned __sym__0__5291527997285077246, double __sym__0__1945446523025649920, fluidb_string<13> __sym__0__8649969499362766248, unsigned __sym__0___45_9152772373621530983, fluidb_string<18> __sym__0__4661399151085104809, fluidb_string<9> __sym__0___45_2328336135844765285, fluidb_string<9> __sym__0__7204907144595482904, unsigned __sym__0__6947146092885793306, unsigned __sym__0___45_4879039772515408504, fluidb_string<7> __sym__0___45_3380765295385793791, unsigned __sym__0__1357424853380084934, unsigned __sym__0__1623525206981402081, unsigned __sym__0___45_7738248275094052359, unsigned __sym__0___45_5520726833947609389, unsigned __sym__0__7046675501704695032, fluidb_string<15> __sym__0___45_6418041259452967043, fluidb_string<2> __sym__0___45_1891834319792150395, fluidb_string<2> __sym__0__8613816579654205812, fluidb_string<2> __sym__0__4752565720665066828, fluidb_string<2> __sym__0___45_4077601550282544382) : sym__0___45_395632927433559406(__sym__0___45_395632927433559406), sym__0__3500080010252534473(__sym__0__3500080010252534473), sym__0__2800931817820227903(__sym__0__2800931817820227903), sym__0__7557617225319929765(__sym__0__7557617225319929765), sym__0___45_3980497182018067045(__sym__0___45_3980497182018067045), sym__0__2235173403257069670(__sym__0__2235173403257069670), sym__0___45_6641253057665067959(__sym__0___45_6641253057665067959), sym__0__1255259528474633157(__sym__0__1255259528474633157), sym__0___45_4404182672923859309(__sym__0___45_4404182672923859309), sym__0___45_614365468487006021(__sym__0___45_614365468487006021), sym__0__5021292656532353329(__sym__0__5021292656532353329), sym__0__4343635027495243018(__sym__0__4343635027495243018), sym__0___45_3654849337237924089(__sym__0___45_3654849337237924089), sym__0__6124017931208230794(__sym__0__6124017931208230794), sym__0__2631968767089293636(__sym__0__2631968767089293636), sym__0__8161280318223951419(__sym__0__8161280318223951419), sym__0__6646444558267925131(__sym__0__6646444558267925131), sym__0___45_371840055694522427(__sym__0___45_371840055694522427), sym__0__1207871997281537063(__sym__0__1207871997281537063), sym__0___45_8251624728007457683(__sym__0___45_8251624728007457683), sym__0___45_1977777050929051591(__sym__0___45_1977777050929051591), sym__0__5291527997285077246(__sym__0__5291527997285077246), sym__0__1945446523025649920(__sym__0__1945446523025649920), sym__0__8649969499362766248(__sym__0__8649969499362766248), sym__0___45_9152772373621530983(__sym__0___45_9152772373621530983), sym__0__4661399151085104809(__sym__0__4661399151085104809), sym__0___45_2328336135844765285(__sym__0___45_2328336135844765285), sym__0__7204907144595482904(__sym__0__7204907144595482904), sym__0__6947146092885793306(__sym__0__6947146092885793306), sym__0___45_4879039772515408504(__sym__0___45_4879039772515408504), sym__0___45_3380765295385793791(__sym__0___45_3380765295385793791), sym__0__1357424853380084934(__sym__0__1357424853380084934), sym__0__1623525206981402081(__sym__0__1623525206981402081), sym__0___45_7738248275094052359(__sym__0___45_7738248275094052359), sym__0___45_5520726833947609389(__sym__0___45_5520726833947609389), sym__0__7046675501704695032(__sym__0__7046675501704695032), sym__0___45_6418041259452967043(__sym__0___45_6418041259452967043), sym__0___45_1891834319792150395(__sym__0___45_1891834319792150395), sym__0__8613816579654205812(__sym__0__8613816579654205812), sym__0__4752565720665066828(__sym__0__4752565720665066828), sym__0___45_4077601550282544382(__sym__0___45_4077601550282544382)
  {
  }
  Record11() 
  {
  }
  std::string show() const{
    std::stringstream o;
    o << sym__0___45_395632927433559406 << " | " << arrToString(sym__0__3500080010252534473) << " | " << arrToString(sym__0__2800931817820227903) << " | " << arrToString(sym__0__7557617225319929765) << " | " << arrToString(sym__0___45_3980497182018067045) << " | " << arrToString(sym__0__2235173403257069670) << " | " << arrToString(sym__0___45_6641253057665067959) << " | " << sym__0__1255259528474633157 << " | " << sym__0___45_4404182672923859309 << " | " << sym__0___45_614365468487006021 << " | " << sym__0__5021292656532353329 << " | " << sym__0__4343635027495243018 << " | " << sym__0___45_3654849337237924089 << " | " << arrToString(sym__0__6124017931208230794) << " | " << sym__0__2631968767089293636 << " | " << arrToString(sym__0__8161280318223951419) << " | " << sym__0__6646444558267925131 << " | " << sym__0___45_371840055694522427 << " | " << sym__0__1207871997281537063 << " | " << sym__0___45_8251624728007457683 << " | " << sym__0___45_1977777050929051591 << " | " << sym__0__5291527997285077246 << " | " << sym__0__1945446523025649920 << " | " << arrToString(sym__0__8649969499362766248) << " | " << sym__0___45_9152772373621530983 << " | " << arrToString(sym__0__4661399151085104809) << " | " << arrToString(sym__0___45_2328336135844765285) << " | " << arrToString(sym__0__7204907144595482904) << " | " << sym__0__6947146092885793306 << " | " << sym__0___45_4879039772515408504 << " | " << arrToString(sym__0___45_3380765295385793791) << " | " << sym__0__1357424853380084934 << " | " << sym__0__1623525206981402081 << " | " << sym__0___45_7738248275094052359 << " | " << sym__0___45_5520726833947609389 << " | " << sym__0__7046675501704695032 << " | " << arrToString(sym__0___45_6418041259452967043) << " | " << arrToString(sym__0___45_1891834319792150395) << " | " << arrToString(sym__0__8613816579654205812) << " | " << arrToString(sym__0__4752565720665066828) << " | " << arrToString(sym__0___45_4077601550282544382);
    return o.str();
  }
  bool operator <(const Record11& otherRec) const{
    return (otherRec.sym__0___45_395632927433559406 < sym__0___45_395632927433559406 && (otherRec.sym__0__3500080010252534473 < sym__0__3500080010252534473 && (otherRec.sym__0__2800931817820227903 < sym__0__2800931817820227903 && (otherRec.sym__0__7557617225319929765 < sym__0__7557617225319929765 && (otherRec.sym__0___45_3980497182018067045 < sym__0___45_3980497182018067045 && (otherRec.sym__0__2235173403257069670 < sym__0__2235173403257069670 && (otherRec.sym__0___45_6641253057665067959 < sym__0___45_6641253057665067959 && (otherRec.sym__0__1255259528474633157 < sym__0__1255259528474633157 && (otherRec.sym__0___45_4404182672923859309 < sym__0___45_4404182672923859309 && (otherRec.sym__0___45_614365468487006021 < sym__0___45_614365468487006021 && (otherRec.sym__0__5021292656532353329 < sym__0__5021292656532353329 && (otherRec.sym__0__4343635027495243018 < sym__0__4343635027495243018 && (otherRec.sym__0___45_3654849337237924089 < sym__0___45_3654849337237924089 && (otherRec.sym__0__6124017931208230794 < sym__0__6124017931208230794 && (otherRec.sym__0__2631968767089293636 < sym__0__2631968767089293636 && (otherRec.sym__0__8161280318223951419 < sym__0__8161280318223951419 && (otherRec.sym__0__6646444558267925131 < sym__0__6646444558267925131 && (otherRec.sym__0___45_371840055694522427 < sym__0___45_371840055694522427 && (otherRec.sym__0__1207871997281537063 < sym__0__1207871997281537063 && (otherRec.sym__0___45_8251624728007457683 < sym__0___45_8251624728007457683 && (otherRec.sym__0___45_1977777050929051591 < sym__0___45_1977777050929051591 && (otherRec.sym__0__5291527997285077246 < sym__0__5291527997285077246 && (otherRec.sym__0__1945446523025649920 < sym__0__1945446523025649920 && (otherRec.sym__0__8649969499362766248 < sym__0__8649969499362766248 && (otherRec.sym__0___45_9152772373621530983 < sym__0___45_9152772373621530983 && (otherRec.sym__0__4661399151085104809 < sym__0__4661399151085104809 && (otherRec.sym__0___45_2328336135844765285 < sym__0___45_2328336135844765285 && (otherRec.sym__0__7204907144595482904 < sym__0__7204907144595482904 && (otherRec.sym__0__6947146092885793306 < sym__0__6947146092885793306 && (otherRec.sym__0___45_4879039772515408504 < sym__0___45_4879039772515408504 && (otherRec.sym__0___45_3380765295385793791 < sym__0___45_3380765295385793791 && (otherRec.sym__0__1357424853380084934 < sym__0__1357424853380084934 && (otherRec.sym__0__1623525206981402081 < sym__0__1623525206981402081 && (otherRec.sym__0___45_7738248275094052359 < sym__0___45_7738248275094052359 && (otherRec.sym__0___45_5520726833947609389 < sym__0___45_5520726833947609389 && (otherRec.sym__0__7046675501704695032 < sym__0__7046675501704695032 && (otherRec.sym__0___45_6418041259452967043 < sym__0___45_6418041259452967043 && (otherRec.sym__0___45_1891834319792150395 < sym__0___45_1891834319792150395 && (otherRec.sym__0__8613816579654205812 < sym__0__8613816579654205812 && (otherRec.sym__0__4752565720665066828 < sym__0__4752565720665066828 && otherRec.sym__0___45_4077601550282544382 < sym__0___45_4077601550282544382))))))))))))))))))))))))))))))))))))))));
  }
  bool operator ==(const Record11& otherRec) const{
    return (otherRec.sym__0___45_395632927433559406 == sym__0___45_395632927433559406 && (otherRec.sym__0__3500080010252534473 == sym__0__3500080010252534473 && (otherRec.sym__0__2800931817820227903 == sym__0__2800931817820227903 && (otherRec.sym__0__7557617225319929765 == sym__0__7557617225319929765 && (otherRec.sym__0___45_3980497182018067045 == sym__0___45_3980497182018067045 && (otherRec.sym__0__2235173403257069670 == sym__0__2235173403257069670 && (otherRec.sym__0___45_6641253057665067959 == sym__0___45_6641253057665067959 && (otherRec.sym__0__1255259528474633157 == sym__0__1255259528474633157 && (otherRec.sym__0___45_4404182672923859309 == sym__0___45_4404182672923859309 && (otherRec.sym__0___45_614365468487006021 == sym__0___45_614365468487006021 && (otherRec.sym__0__5021292656532353329 == sym__0__5021292656532353329 && (otherRec.sym__0__4343635027495243018 == sym__0__4343635027495243018 && (otherRec.sym__0___45_3654849337237924089 == sym__0___45_3654849337237924089 && (otherRec.sym__0__6124017931208230794 == sym__0__6124017931208230794 && (otherRec.sym__0__2631968767089293636 == sym__0__2631968767089293636 && (otherRec.sym__0__8161280318223951419 == sym__0__8161280318223951419 && (otherRec.sym__0__6646444558267925131 == sym__0__6646444558267925131 && (otherRec.sym__0___45_371840055694522427 == sym__0___45_371840055694522427 && (otherRec.sym__0__1207871997281537063 == sym__0__1207871997281537063 && (otherRec.sym__0___45_8251624728007457683 == sym__0___45_8251624728007457683 && (otherRec.sym__0___45_1977777050929051591 == sym__0___45_1977777050929051591 && (otherRec.sym__0__5291527997285077246 == sym__0__5291527997285077246 && (otherRec.sym__0__1945446523025649920 == sym__0__1945446523025649920 && (otherRec.sym__0__8649969499362766248 == sym__0__8649969499362766248 && (otherRec.sym__0___45_9152772373621530983 == sym__0___45_9152772373621530983 && (otherRec.sym__0__4661399151085104809 == sym__0__4661399151085104809 && (otherRec.sym__0___45_2328336135844765285 == sym__0___45_2328336135844765285 && (otherRec.sym__0__7204907144595482904 == sym__0__7204907144595482904 && (otherRec.sym__0__6947146092885793306 == sym__0__6947146092885793306 && (otherRec.sym__0___45_4879039772515408504 == sym__0___45_4879039772515408504 && (otherRec.sym__0___45_3380765295385793791 == sym__0___45_3380765295385793791 && (otherRec.sym__0__1357424853380084934 == sym__0__1357424853380084934 && (otherRec.sym__0__1623525206981402081 == sym__0__1623525206981402081 && (otherRec.sym__0___45_7738248275094052359 == sym__0___45_7738248275094052359 && (otherRec.sym__0___45_5520726833947609389 == sym__0___45_5520726833947609389 && (otherRec.sym__0__7046675501704695032 == sym__0__7046675501704695032 && (otherRec.sym__0___45_6418041259452967043 == sym__0___45_6418041259452967043 && (otherRec.sym__0___45_1891834319792150395 == sym__0___45_1891834319792150395 && (otherRec.sym__0__8613816579654205812 == sym__0__8613816579654205812 && (otherRec.sym__0__4752565720665066828 == sym__0__4752565720665066828 && otherRec.sym__0___45_4077601550282544382 == sym__0___45_4077601550282544382))))))))))))))))))))))))))))))))))))))));
  }
  bool operator !=(const Record11& otherRec) const{
    return (otherRec.sym__0___45_395632927433559406 != sym__0___45_395632927433559406 || (otherRec.sym__0__3500080010252534473 != sym__0__3500080010252534473 || (otherRec.sym__0__2800931817820227903 != sym__0__2800931817820227903 || (otherRec.sym__0__7557617225319929765 != sym__0__7557617225319929765 || (otherRec.sym__0___45_3980497182018067045 != sym__0___45_3980497182018067045 || (otherRec.sym__0__2235173403257069670 != sym__0__2235173403257069670 || (otherRec.sym__0___45_6641253057665067959 != sym__0___45_6641253057665067959 || (otherRec.sym__0__1255259528474633157 != sym__0__1255259528474633157 || (otherRec.sym__0___45_4404182672923859309 != sym__0___45_4404182672923859309 || (otherRec.sym__0___45_614365468487006021 != sym__0___45_614365468487006021 || (otherRec.sym__0__5021292656532353329 != sym__0__5021292656532353329 || (otherRec.sym__0__4343635027495243018 != sym__0__4343635027495243018 || (otherRec.sym__0___45_3654849337237924089 != sym__0___45_3654849337237924089 || (otherRec.sym__0__6124017931208230794 != sym__0__6124017931208230794 || (otherRec.sym__0__2631968767089293636 != sym__0__2631968767089293636 || (otherRec.sym__0__8161280318223951419 != sym__0__8161280318223951419 || (otherRec.sym__0__6646444558267925131 != sym__0__6646444558267925131 || (otherRec.sym__0___45_371840055694522427 != sym__0___45_371840055694522427 || (otherRec.sym__0__1207871997281537063 != sym__0__1207871997281537063 || (otherRec.sym__0___45_8251624728007457683 != sym__0___45_8251624728007457683 || (otherRec.sym__0___45_1977777050929051591 != sym__0___45_1977777050929051591 || (otherRec.sym__0__5291527997285077246 != sym__0__5291527997285077246 || (otherRec.sym__0__1945446523025649920 != sym__0__1945446523025649920 || (otherRec.sym__0__8649969499362766248 != sym__0__8649969499362766248 || (otherRec.sym__0___45_9152772373621530983 != sym__0___45_9152772373621530983 || (otherRec.sym__0__4661399151085104809 != sym__0__4661399151085104809 || (otherRec.sym__0___45_2328336135844765285 != sym__0___45_2328336135844765285 || (otherRec.sym__0__7204907144595482904 != sym__0__7204907144595482904 || (otherRec.sym__0__6947146092885793306 != sym__0__6947146092885793306 || (otherRec.sym__0___45_4879039772515408504 != sym__0___45_4879039772515408504 || (otherRec.sym__0___45_3380765295385793791 != sym__0___45_3380765295385793791 || (otherRec.sym__0__1357424853380084934 != sym__0__1357424853380084934 || (otherRec.sym__0__1623525206981402081 != sym__0__1623525206981402081 || (otherRec.sym__0___45_7738248275094052359 != sym__0___45_7738248275094052359 || (otherRec.sym__0___45_5520726833947609389 != sym__0___45_5520726833947609389 || (otherRec.sym__0__7046675501704695032 != sym__0__7046675501704695032 || (otherRec.sym__0___45_6418041259452967043 != sym__0___45_6418041259452967043 || (otherRec.sym__0___45_1891834319792150395 != sym__0___45_1891834319792150395 || (otherRec.sym__0__8613816579654205812 != sym__0__8613816579654205812 || (otherRec.sym__0__4752565720665066828 != sym__0__4752565720665066828 || otherRec.sym__0___45_4077601550282544382 != sym__0___45_4077601550282544382))))))))))))))))))))))))))))))))))))))));
  }
  unsigned sym__0___45_395632927433559406;
  fluidb_string<25> sym__0__3500080010252534473;
  fluidb_string<40> sym__0__2800931817820227903;
  fluidb_string<16> sym__0__7557617225319929765;
  fluidb_string<16> sym__0___45_3980497182018067045;
  fluidb_string<13> sym__0__2235173403257069670;
  fluidb_string<15> sym__0___45_6641253057665067959;
  unsigned sym__0__1255259528474633157;
  int sym__0___45_4404182672923859309;
  unsigned sym__0___45_614365468487006021;
  unsigned sym__0__5021292656532353329;
  unsigned sym__0__4343635027495243018;
  unsigned sym__0___45_3654849337237924089;
  fluidb_string<21> sym__0__6124017931208230794;
  unsigned sym__0__2631968767089293636;
  fluidb_string<10> sym__0__8161280318223951419;
  unsigned sym__0__6646444558267925131;
  double sym__0___45_371840055694522427;
  unsigned sym__0__1207871997281537063;
  double sym__0___45_8251624728007457683;
  unsigned sym__0___45_1977777050929051591;
  unsigned sym__0__5291527997285077246;
  double sym__0__1945446523025649920;
  fluidb_string<13> sym__0__8649969499362766248;
  unsigned sym__0___45_9152772373621530983;
  fluidb_string<18> sym__0__4661399151085104809;
  fluidb_string<9> sym__0___45_2328336135844765285;
  fluidb_string<9> sym__0__7204907144595482904;
  unsigned sym__0__6947146092885793306;
  unsigned sym__0___45_4879039772515408504;
  fluidb_string<7> sym__0___45_3380765295385793791;
  unsigned sym__0__1357424853380084934;
  unsigned sym__0__1623525206981402081;
  unsigned sym__0___45_7738248275094052359;
  unsigned sym__0___45_5520726833947609389;
  unsigned sym__0__7046675501704695032;
  fluidb_string<15> sym__0___45_6418041259452967043;
  fluidb_string<2> sym__0___45_1891834319792150395;
  fluidb_string<2> sym__0__8613816579654205812;
  fluidb_string<2> sym__0__4752565720665066828;
  fluidb_string<2> sym__0___45_4077601550282544382;
 private:
};


class CallableClass16 {
 public:
  Record14 operator()(const Record11& record15) {
    return Record14(record15.sym__0__5021292656532353329);
  }
  typedef Record14 Codomain;
  typedef Record11 Domain0;
 private:
};


class CallableClass29 {
 public:
  Record28 operator()(const Record24& record21) {
    return Record28(record21.sym__0___45_2549139954849286782, record21.sym__0___45_8628415396103686184);
  }
  typedef Record28 Codomain;
  typedef Record24 Domain0;
 private:
};


class CallableClass31 {
 public:
  Record28 operator()(const Record22& record30) {
    return Record28(record30.sym__0___45_6261698000977207925, record30.sym__0__1631598784897141641);
  }
  typedef Record28 Codomain;
  typedef Record22 Domain0;
 private:
};


class CallableClass5 {
 public:
  Record4 operator()(const Record2& record0) {
    return Record4(record0.sym__0__3122376255932122421, record0.sym__0__5682795704482796293, record0.sym__0__4547320860663492666, record0.sym__0___45_8670773565387601472, record0.sym__0___45_13570145613494646, record0.sym__0__219157410367458310, record0.sym__0__698480510036799380, record0.sym__0__5321414200743551775, record0.sym__0__4130486035242774698);
  }
  typedef Record4 Codomain;
  typedef Record2 Domain0;
 private:
};


class CallableClass27 {
 public:
  Record22 operator()(const Record24& record21) {
    return Record22(vAggrSum23(record21.sym__0__8598037934431251909), vAggrFirst25(record21.sym__0___45_2549139954849286782), vAggrFirst26(record21.sym__0___45_8628415396103686184));
  }
  typedef Record22 Codomain;
  typedef Record24 Domain0;
 private:
  AggrSum<unsigned> vAggrSum23;
  AggrFirst<unsigned> vAggrFirst25;
  AggrFirst<fluidb_string<10>> vAggrFirst26;
};


class CallableClass3 {
 public:
  Record1 operator()(const Record2& record0) {
    return Record1(record0.sym__0__2592840547366705296, record0.sym__0__2788895063297001099, record0.sym__0__1545257135384253129, record0.sym__0___45_4622664073058890953, record0.sym__0__7774459284859713893, record0.sym__0__5464006631725545620, record0.sym__0___45_3247512146210145269, record0.sym__0__9165007797673129751, record0.sym__0__6736597523581036605, record0.sym__0___45_3324970871059066299, record0.sym__0__8802187528961009747, record0.sym__0___45_8153453103254980376, record0.sym__0___45_878170619108389423, record0.sym__0___45_874194379502172824, record0.sym__0__8610439003510773098, record0.sym__0__984338793883944389, record0.sym__0___45_241371384806950923, record0.sym__0__4499056235050439447, record0.sym__0___45_602104477057249231, record0.sym__0__2154432795296205471, record0.sym__0__8120436674510863259, record0.sym__0__8733838863403650604, record0.sym__0__6144840941019744502, record0.sym__0___45_4519435874778032514, record0.sym__0__7183756631487345723, record0.sym__0__4004283392749253291, record0.sym__0__7402856733199756645, record0.sym__0___45_7276118071870614642, record0.sym__0__7689696364618968408, record0.sym__0__265232048543772062, record0.sym__0___45_7391712330109786621, record0.sym__0__9093515676270508468, record0.sym__0__2039577949113231011, record0.sym__0___45_5518709817667950629, record0.sym__0__7446880365925781245, record0.sym__0__3933602404904280238, record0.sym__0__839558304030626831, record0.sym__0__1895092311538388823, record0.sym__0__2442462535421269690, record0.sym__0___45_3615474655229170638, record0.sym__0__8806662867934001568, record0.sym__0___45_4159199765988317501, record0.sym__0___45_5417534366741502741, record0.sym__0__4597400568918183105, record0.sym__0__8819540415296482823, record0.sym__0___45_623355213379307427, record0.sym__0__7994108978447880988, record0.sym__0__7664015906371024747, record0.sym__0___45_6006206227144636657);
  }
  typedef Record1 Codomain;
  typedef Record2 Domain0;
 private:
};


class CallableClass20 {
 public:
  bool operator()(const Record12& record19) {
    return like(record19.sym__0___45_8824352318197405717, "MFGR#12");
  }
  typedef bool Codomain;
  typedef Record12 Domain0;
 private:
};


class CallableClass8 {
 public:
  bool operator()(const Record7& record6) {
    return like(record6.sym__0___45_52536403880094569, "AMERICA");
  }
  typedef bool Codomain;
  typedef Record7 Domain0;
 private:
};


class CallableClass18 {
 public:
  Record14 operator()(const Record4& record17) {
    return Record14(record17.sym__0__7178003535380331304);
  }
  typedef Record14 Codomain;
  typedef Record4 Domain0;
 private:
};


class CallableClass13 {
 public:
  Record12 operator()(const Record11& record9, const Record4& record10) {
    return Record12(record9.sym__0___45_395632927433559406, record9.sym__0__3500080010252534473, record9.sym__0__2800931817820227903, record9.sym__0__7557617225319929765, record9.sym__0___45_3980497182018067045, record9.sym__0__2235173403257069670, record9.sym__0___45_6641253057665067959, record9.sym__0__1255259528474633157, record9.sym__0___45_4404182672923859309, record9.sym__0___45_614365468487006021, record9.sym__0__5021292656532353329, record9.sym__0__4343635027495243018, record9.sym__0___45_3654849337237924089, record9.sym__0__6124017931208230794, record9.sym__0__2631968767089293636, record9.sym__0__8161280318223951419, record9.sym__0__6646444558267925131, record9.sym__0___45_371840055694522427, record9.sym__0__1207871997281537063, record9.sym__0___45_8251624728007457683, record9.sym__0___45_1977777050929051591, record9.sym__0__5291527997285077246, record9.sym__0__1945446523025649920, record9.sym__0__8649969499362766248, record9.sym__0___45_9152772373621530983, record9.sym__0__4661399151085104809, record9.sym__0___45_2328336135844765285, record9.sym__0__7204907144595482904, record9.sym__0__6947146092885793306, record9.sym__0___45_4879039772515408504, record9.sym__0___45_3380765295385793791, record9.sym__0__1357424853380084934, record9.sym__0__1623525206981402081, record9.sym__0___45_7738248275094052359, record9.sym__0___45_5520726833947609389, record9.sym__0__7046675501704695032, record9.sym__0___45_6418041259452967043, record9.sym__0___45_1891834319792150395, record9.sym__0__8613816579654205812, record9.sym__0__4752565720665066828, record9.sym__0___45_4077601550282544382, record10.sym__0__7178003535380331304, record10.sym__0___45_7020257275696364520, record10.sym__0___45_6307179734719967033, record10.sym__0__4568304886257136061, record10.sym__0___45_6291097039630000265, record10.sym__0__551327770031967739, record10.sym__0__3827696365022297353, record10.sym__0___45_1779543743759935870, record10.sym__0__3752090135924368535);
  }
  typedef Record12 Codomain;
  typedef Record11 Domain0;
  typedef Record4 Domain1;
 private:
};






int main() {
  // ReverseTrigger: (Just 
  //   (Left 
  //     [
  //      QJoin 
  //         (P0 
  //           (R2 REq 
  //               (R0 (E0 (ESym "lo_partkey"))) 
  //               (R0 (E0 (ESym "p_partkey")))))
  std::cout << "ReverseTrigger: (Just \n  (Left \n    [\n     QJoin \n        (P0 \n          (R2 REq \n              (R0 (E0 (ESym \"lo_partkey\"))) \n              (R0 (E0 (ESym \"p_partkey\")))))\n    ]))" << std::endl;
  {
    auto operation = mkUnJoin<CallableClass3, CallableClass5>(Just("/tmp/fluidb_store/data367.dat"), Nothing(), Just("/tmp/fluidb_store/data368.dat"), Nothing(), Just("/tmp/fluidb_store/data2.dat"));
    operation.run();
    operation.print_output(10);
  }
  // Delete: (Q1 
  //   (QGroup 
  //     [
  //      (
  //        ESym "revenue",
  //        E0 
  //           (NAggr 
  //             AggrSum 
  //             (E2 EMul 
  //                 (E0 (ESym "lo_extendedprice")) 
  //                 (E0 (ESym "lo_discount"))))
  //       )
  //     ] 
  //     []) 
  //   (S 
  //     (P2 
  //       PAnd 
  //       (P2 
  //         PAnd 
  //         (P2 
  //           PAnd 
  //           (P0 
  //             (R2 RLe (R0 (E0 (EInt 4))) (R0 (E0 (ESym "lo_discount"))))) 
  //           (P0 
  //             (R2 RLe (R0 (E0 (ESym "lo_discount"))) (R0 (E0 (EInt 6)))))) 
  //         (P0 (R2 RLe (R0 (E0 (EInt 26))) (R0 (E0 (ESym "lo_quantity")))))) 
  //       (P0 (R2 RLe (R0 (E0 (ESym "lo_quantity"))) (R0 (E0 (EInt 35)))))) 
  //     (J 
  //       (P0 
  //         (R2 REq 
  //             (R0 (E0 (ESym "lo_orderdate"))) 
  //             (R0 (E0 (ESym "d_datekey"))))) 
  //       (S 
  //         (P0 
  //           (R2 REq 
  //               (R0 (E0 (ESym "d_yearmonthnum"))) 
  //               (R0 (E0 (EInt 199401))))) 
  //         (Q0 (TSymbol "date"))) 
  std::cout << "Delete: N14" << std::endl;
  deleteFile("/tmp/fluidb_store/data14.dat");
  // Delete: (S 
  //   (P2 
  //     PAnd 
  //     (P2 
  //       PAnd 
  //       (P2 PAnd 
  //           (P0 (R2 RLe (R0 (E0 (EInt 4))) (R0 (E0 (ESym "lo_discount"))))) 
  //           (P0 (R2 RLe (R0 (E0 (ESym "lo_discount"))) (R0 (E0 (EInt 6)))))) 
  //       (P0 (R2 RLe (R0 (E0 (EInt 26))) (R0 (E0 (ESym "lo_quantity")))))) 
  //     (P0 (R2 RLe (R0 (E0 (ESym "lo_quantity"))) (R0 (E0 (EInt 35)))))) 
  //   (J 
  //     (P0 
  //       (R2 REq 
  //           (R0 (E0 (ESym "lo_orderdate"))) 
  //           (R0 (E0 (ESym "d_datekey"))))) 
  //     (S 
  //       (P0 
  //         (R2 REq 
  //             (R0 (E0 (ESym "d_yearmonthnum"))) 
  //             (R0 (E0 (EInt 199401))))) 
  //       (Q0 (TSymbol "date"))) 
  std::cout << "Delete: N12" << std::endl;
  deleteFile("/tmp/fluidb_store/data12.dat");
  // Delete: (Q2 
  //   (QLeftAntijoin 
  //     (P0 
  //       (R2 REq 
  //           (R0 (E0 (ESym "lo_orderdate"))) 
  //           (R0 (E0 (ESym "d_datekey")))))) 
  //   (S 
  //     (P0 
  //       (R2 REq (R0 (E0 (ESym "d_yearmonthnum"))) (R0 (E0 (EInt 199401))))) 
  //     (Q0 (TSymbol "date"))) 
  std::cout << "Delete: N7" << std::endl;
  deleteFile("/tmp/fluidb_store/data7.dat");
  std::cout << "Delete: N0" << std::endl;
  deleteFile("/tmp/fluidb_store/data0.dat");
  // Delete: (S (P0 (R2 REq (R0 (E0 (ESym "d_yearmonthnum"))) (R0 (E0 (EInt 199401))))) 
  std::cout << "Delete: N5" << std::endl;
  deleteFile("/tmp/fluidb_store/data5.dat");
  // Delete: (Q2 
  //   (QRightAntijoin 
  //     (P0 
  //       (R2 REq 
  //           (R0 (E0 (ESym "lo_orderdate"))) 
  //           (R0 (E0 (ESym "d_datekey")))))) 
  //   (S 
  //     (P0 
  //       (R2 REq (R0 (E0 (ESym "d_yearmonthnum"))) (R0 (E0 (EInt 199401))))) 
  //     (Q0 (TSymbol "date"))) 
  std::cout << "Delete: N9" << std::endl;
  deleteFile("/tmp/fluidb_store/data9.dat");
  // Delete: (Q2 
  //   (QLeftAntijoin 
  //     (P0 
  //       (R2 REq 
  //           (R0 (E0 (ESym "lo_orderdate"))) 
  //           (R0 (E0 (ESym "d_datekey")))))) 
  //   (S (P0 (R2 REq (R0 (E0 (ESym "d_year"))) (R0 (E0 (EInt 1993))))) 
  //      (Q0 (TSymbol "date"))) 
  std::cout << "Delete: N17" << std::endl;
  deleteFile("/tmp/fluidb_store/data17.dat");
  // Delete: (J 
  //   (P0 
  //     (R2 REq 
  //         (R0 (E0 (ESym "lo_orderdate"))) 
  //         (R0 (E0 (ESym "d_datekey"))))) 
  //   (S 
  //     (P0 
  //       (R2 REq (R0 (E0 (ESym "d_yearmonthnum"))) (R0 (E0 (EInt 199401))))) 
  //     (Q0 (TSymbol "date"))) 
  std::cout << "Delete: N8" << std::endl;
  deleteFile("/tmp/fluidb_store/data8.dat");
  // Delete: (S 
  //   (P1 
  //     PNot 
  //     (P2 
  //       PAnd 
  //       (P2 
  //         PAnd 
  //         (P2 
  //           PAnd 
  //           (P0 
  //             (R2 RLe (R0 (E0 (EInt 4))) (R0 (E0 (ESym "lo_discount"))))) 
  //           (P0 
  //             (R2 RLe (R0 (E0 (ESym "lo_discount"))) (R0 (E0 (EInt 6)))))) 
  //         (P0 (R2 RLe (R0 (E0 (EInt 26))) (R0 (E0 (ESym "lo_quantity")))))) 
  //       (P0 (R2 RLe (R0 (E0 (ESym "lo_quantity"))) (R0 (E0 (EInt 35))))))) 
  //   (J 
  //     (P0 
  //       (R2 REq 
  //           (R0 (E0 (ESym "lo_orderdate"))) 
  //           (R0 (E0 (ESym "d_datekey"))))) 
  //     (S 
  //       (P0 
  //         (R2 REq 
  //             (R0 (E0 (ESym "d_yearmonthnum"))) 
  //             (R0 (E0 (EInt 199401))))) 
  //       (Q0 (TSymbol "date"))) 
  std::cout << "Delete: N13" << std::endl;
  deleteFile("/tmp/fluidb_store/data13.dat");
  // Delete: (S 
  //   (P1 
  //     PNot 
  //     (P2 
  //       PAnd 
  //       (P2 PAnd 
  //           (P0 (R2 RLe (R0 (E0 (EInt 1))) (R0 (E0 (ESym "lo_discount"))))) 
  //           (P0 (R2 RLe (R0 (E0 (ESym "lo_discount"))) (R0 (E0 (EInt 3)))))) 
  //       (P0 (R2 RLt (R0 (E0 (ESym "lo_quantity"))) (R0 (E0 (EInt 25))))))) 
  //   (J 
  //     (P0 
  //       (R2 REq 
  //           (R0 (E0 (ESym "lo_orderdate"))) 
  //           (R0 (E0 (ESym "d_datekey"))))) 
  //     (S (P0 (R2 REq (R0 (E0 (ESym "d_year"))) (R0 (E0 (EInt 1993))))) 
  //        (Q0 (TSymbol "date"))) 
  std::cout << "Delete: N23" << std::endl;
  deleteFile("/tmp/fluidb_store/data23.dat");
  // ForwardTrigger: (Just 
  //   (Right 
  //     [
  //      QSel 
  //         (P0 
  //           (R2 RLike 
  //               (R0 (E0 (ESym "s_region"))) 
  //               (R0 (E0 (EString "AMERICA")))))
  std::cout << "ForwardTrigger: (Just \n  (Right \n    [\n     QSel \n        (P0 \n          (R2 RLike \n              (R0 (E0 (ESym \"s_region\"))) \n              (R0 (E0 (EString \"AMERICA\")))))\n    ]))" << std::endl;
  {
    auto operation = mkSelect<CallableClass8>(Just<const std::string>("/tmp/fluidb_store/data42.dat"), Just<const std::string>("/tmp/fluidb_store/data43.dat"), "/tmp/fluidb_store/data31.dat");
    operation.run();
    operation.print_output(10);
  }
  // Delete: (S (P0 (R2 REq (R0 (E0 (ESym "d_year"))) (R0 (E0 (EInt 1993))))) 
  std::cout << "Delete: N15" << std::endl;
  deleteFile("/tmp/fluidb_store/data15.dat");
  // Delete: (Q2 
  //   (QRightAntijoin 
  //     (P0 
  //       (R2 REq 
  //           (R0 (E0 (ESym "lo_partkey"))) 
  //           (R0 (E0 (ESym "p_partkey")))))) 
  //   (S 
  //     (P0 
  //       (R2 RLike 
  //           (R0 (E0 (ESym "c_region"))) 
  //           (R0 (E0 (EString "AMERICA"))))) 
  //     (J 
  //       (P0 
  //         (R2 REq 
  //             (R0 (E0 (ESym "lo_custkey"))) 
  //             (R0 (E0 (ESym "c_custkey"))))) 
  //       (S 
  //         (P2 
  //           PAnd 
  //           (P2 
  //             POr 
  //             (P0 
  //               (R2 REq (R0 (E0 (ESym "d_year"))) (R0 (E0 (EInt 1997))))) 
  //             (P0 
  //               (R2 REq (R0 (E0 (ESym "d_year"))) (R0 (E0 (EInt 1998)))))) 
  //           (P0 
  //             (R2 RLike 
  //                 (R0 (E0 (ESym "s_nation"))) 
  //                 (R0 (E0 (EString "UNITED STATES")))))) 
  //         (J 
  //           (P0 
  //             (R2 REq 
  //                 (R0 (E0 (ESym "lo_suppkey"))) 
  //                 (R0 (E0 (ESym "s_suppkey"))))) 
  //           (J 
  //             (P0 
  //               (R2 REq 
  //                   (R0 (E0 (ESym "lo_orderdate"))) 
  //                   (R0 (E0 (ESym "d_datekey"))))) 
  //             (Q0 (TSymbol "date")) 
  //             (Q0 (TSymbol "lineorder"))) 
  //           (Q0 (TSymbol "supplier")))) 
  //       (Q0 (TSymbol "customer")))) 
  std::cout << "Delete: N368" << std::endl;
  deleteFile("/tmp/fluidb_store/data368.dat");
  // Delete: (S 
  //   (P1 
  //     PNot 
  //     (P0 
  //       (R2 RLike 
  //           (R0 (E0 (ESym "p_category"))) 
  //           (R0 (E0 (EString "MFGR#14")))))) 
  //   (J 
  //     (P0 
  //       (R2 REq 
  //           (R0 (E0 (ESym "lo_partkey"))) 
  //           (R0 (E0 (ESym "p_partkey"))))) 
  //     (S 
  //       (P2 
  //         PAnd 
  //         (P2 
  //           PAnd 
  //           (P0 
  //             (R2 RLike 
  //                 (R0 (E0 (ESym "s_nation"))) 
  //                 (R0 (E0 (EString "UNITED STATES"))))) 
  //           (P2 
  //             POr 
  //             (P0 
  //               (R2 REq (R0 (E0 (ESym "d_year"))) (R0 (E0 (EInt 1997))))) 
  //             (P0 
  //               (R2 REq (R0 (E0 (ESym "d_year"))) (R0 (E0 (EInt 1998))))))) 
  //         (P0 
  //           (R2 RLike 
  //               (R0 (E0 (ESym "c_region"))) 
  //               (R0 (E0 (EString "AMERICA")))))) 
  //       (J 
  //         (P0 
  //           (R2 REq 
  //               (R0 (E0 (ESym "lo_custkey"))) 
  //               (R0 (E0 (ESym "c_custkey"))))) 
  //         (J 
  //           (P0 
  //             (R2 REq 
  //                 (R0 (E0 (ESym "lo_suppkey"))) 
  //                 (R0 (E0 (ESym "s_suppkey"))))) 
  //           (J 
  //             (P0 
  //               (R2 REq 
  //                   (R0 (E0 (ESym "lo_orderdate"))) 
  //                   (R0 (E0 (ESym "d_datekey"))))) 
  //             (Q0 (TSymbol "date")) 
  //             (Q0 (TSymbol "lineorder"))) 
  //           (Q0 (TSymbol "supplier"))) 
  //         (Q0 (TSymbol "customer")))) 
  std::cout << "Delete: N371" << std::endl;
  deleteFile("/tmp/fluidb_store/data371.dat");
  // Delete: (J 
  //   (P0 
  //     (R2 REq (R0 (E0 (ESym "lo_partkey"))) (R0 (E0 (ESym "p_partkey"))))) 
  //   (S 
  //     (P0 
  //       (R2 RLike 
  //           (R0 (E0 (ESym "c_region"))) 
  //           (R0 (E0 (EString "AMERICA"))))) 
  //     (J 
  //       (P0 
  //         (R2 REq 
  //             (R0 (E0 (ESym "lo_custkey"))) 
  //             (R0 (E0 (ESym "c_custkey"))))) 
  //       (S 
  //         (P2 
  //           PAnd 
  //           (P2 
  //             POr 
  //             (P0 
  //               (R2 REq (R0 (E0 (ESym "d_year"))) (R0 (E0 (EInt 1997))))) 
  //             (P0 
  //               (R2 REq (R0 (E0 (ESym "d_year"))) (R0 (E0 (EInt 1998)))))) 
  //           (P0 
  //             (R2 RLike 
  //                 (R0 (E0 (ESym "s_nation"))) 
  //                 (R0 (E0 (EString "UNITED STATES")))))) 
  //         (J 
  //           (P0 
  //             (R2 REq 
  //                 (R0 (E0 (ESym "lo_suppkey"))) 
  //                 (R0 (E0 (ESym "s_suppkey"))))) 
  //           (J 
  //             (P0 
  //               (R2 REq 
  //                   (R0 (E0 (ESym "lo_orderdate"))) 
  //                   (R0 (E0 (ESym "d_datekey"))))) 
  //             (Q0 (TSymbol "date")) 
  //             (Q0 (TSymbol "lineorder"))) 
  //           (Q0 (TSymbol "supplier")))) 
  //       (Q0 (TSymbol "customer")))) 
  std::cout << "Delete: N367" << std::endl;
  deleteFile("/tmp/fluidb_store/data367.dat");
  // Delete: (S 
  //   (P1 
  //     PNot 
  //     (P0 
  //       (R2 RLike 
  //           (R0 (E0 (ESym "s_region"))) 
  //           (R0 (E0 (EString "AMERICA")))))) 
  //   (J 
  //     (P0 
  //       (R2 REq 
  //           (R0 (E0 (ESym "lo_orderdate"))) 
  //           (R0 (E0 (ESym "d_datekey"))))) 
  //     (J 
  //       (P0 
  //         (R2 REq 
  //             (R0 (E0 (ESym "lo_suppkey"))) 
  //             (R0 (E0 (ESym "s_suppkey"))))) 
  //       (Q0 (TSymbol "supplier")) 
  //       (Q0 (TSymbol "lineorder"))) 
  std::cout << "Delete: N43" << std::endl;
  deleteFile("/tmp/fluidb_store/data43.dat");
  // ForwardTrigger: (Just 
  //   (Left 
  //     [
  //      QJoin 
  //         (P0 
  //           (R2 REq 
  //               (R0 (E0 (ESym "lo_partkey"))) 
  //               (R0 (E0 (ESym "p_partkey")))))
  std::cout << "ForwardTrigger: (Just \n  (Left \n    [\n     QJoin \n        (P0 \n          (R2 REq \n              (R0 (E0 (ESym \"lo_partkey\"))) \n              (R0 (E0 (ESym \"p_partkey\")))))\n    ]))" << std::endl;
  {
    auto operation = mkEquiJoin<CallableClass16, CallableClass18, CallableClass13>(Just<const std::string>("/tmp/fluidb_store/data57.dat"), Just<const std::string>("/tmp/fluidb_store/data56.dat"), Just<const std::string>("/tmp/fluidb_store/data58.dat"), "/tmp/fluidb_store/data42.dat", "/tmp/fluidb_store/data2.dat");
    operation.run();
    operation.print_output(10);
  }
  // Delete: (Q2 
  //   (QLeftAntijoin 
  //     (P0 
  //       (R2 REq 
  //           (R0 (E0 (ESym "lo_partkey"))) 
  //           (R0 (E0 (ESym "p_partkey")))))) 
  //   (J 
  //     (P0 
  //       (R2 REq 
  //           (R0 (E0 (ESym "lo_orderdate"))) 
  //           (R0 (E0 (ESym "d_datekey"))))) 
  //     (S 
  //       (P0 
  //         (R2 RLike 
  //             (R0 (E0 (ESym "s_region"))) 
  //             (R0 (E0 (EString "AMERICA"))))) 
  //       (J 
  //         (P0 
  //           (R2 REq 
  //               (R0 (E0 (ESym "lo_suppkey"))) 
  //               (R0 (E0 (ESym "s_suppkey"))))) 
  //         (Q0 (TSymbol "supplier")) 
  //         (Q0 (TSymbol "lineorder")))) 
  //     (Q0 (TSymbol "date"))) 
  std::cout << "Delete: N56" << std::endl;
  deleteFile("/tmp/fluidb_store/data56.dat");
  std::cout << "Delete: N2" << std::endl;
  deleteFile("/tmp/fluidb_store/data2.dat");
  // Delete: (S 
  //   (P0 
  //     (R2 RLike (R0 (E0 (ESym "s_region"))) (R0 (E0 (EString "AMERICA"))))) 
  //   (J 
  //     (P0 
  //       (R2 REq 
  //           (R0 (E0 (ESym "lo_orderdate"))) 
  //           (R0 (E0 (ESym "d_datekey"))))) 
  //     (J 
  //       (P0 
  //         (R2 REq 
  //             (R0 (E0 (ESym "lo_suppkey"))) 
  //             (R0 (E0 (ESym "s_suppkey"))))) 
  //       (Q0 (TSymbol "supplier")) 
  //       (Q0 (TSymbol "lineorder"))) 
  std::cout << "Delete: N42" << std::endl;
  deleteFile("/tmp/fluidb_store/data42.dat");
  // ForwardTrigger: (Just 
  //   (Right 
  //     [
  //      QSel 
  //         (P0 
  //           (R2 RLike 
  //               (R0 (E0 (ESym "p_category"))) 
  //               (R0 (E0 (EString "MFGR#12")))))
  std::cout << "ForwardTrigger: (Just \n  (Right \n    [\n     QSel \n        (P0 \n          (R2 RLike \n              (R0 (E0 (ESym \"p_category\"))) \n              (R0 (E0 (EString \"MFGR#12\")))))\n    ]))" << std::endl;
  {
    auto operation = mkSelect<CallableClass20>(Just<const std::string>("/tmp/fluidb_store/data40.dat"), Nothing<const std::string>(), "/tmp/fluidb_store/data57.dat");
    operation.run();
    operation.print_output(10);
  }
  // ForwardTrigger: (Just 
  //   (Right 
  //     [
  //      QGroup 
  //         [(ESym "tmpSym0",E0 (NAggr AggrSum (E0 (ESym "lo_revenue")))),
  //          (ESym "d_year",E0 (NAggr AggrFirst (E0 (ESym "d_year")))),
  //          (ESym "p_brand1",E0 (NAggr AggrFirst (E0 (ESym "p_brand1"))))] 
  //         [E0 (ESym "d_year"),E0 (ESym "p_brand1")]
  std::cout << "ForwardTrigger: (Just \n  (Right \n    [\n     QGroup \n        [(ESym \"tmpSym0\",E0 (NAggr AggrSum (E0 (ESym \"lo_revenue\")))),\n         (ESym \"d_year\",E0 (NAggr AggrFirst (E0 (ESym \"d_year\")))),\n         (ESym \"p_brand1\",E0 (NAggr AggrFirst (E0 (ESym \"p_brand1\"))))] \n        [E0 (ESym \"d_year\"),E0 (ESym \"p_brand1\")]\n    ]))" << std::endl;
  {
    auto operation = mkAggregation<CallableClass27, CallableClass29>(Just<const std::string>("/tmp/fluidb_store/data80.dat"), Just<const std::string>("/tmp/fluidb_store/data40.dat"), "/tmp/fluidb_store/data40.dat");
    operation.run();
    operation.print_output(10);
  }
  std::cout << "ForwardTrigger: (Just (Right [QSort [E0 (ESym \"d_year\"),E0 (ESym \"p_brand1\")]]))" << std::endl;
  {
    auto operation = mkSort<CallableClass31>(Just<const std::string>("/tmp/fluidb_store/data81.dat"), Just<const std::string>("/tmp/fluidb_store/data80.dat"), "/tmp/fluidb_store/data80.dat");
    operation.run();
    operation.print_output(10);
  }
  report_counters();
  return 0;
}
