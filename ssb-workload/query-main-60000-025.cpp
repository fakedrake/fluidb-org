#include <array>

#include <string>

#include <codegen.hh>
class Record4 {
 public:
  Record4(unsigned __sym__0___45_7574074018531922998, int __sym__0__1125464382786937920, unsigned __sym__0___45_8257174981563598792, unsigned __sym__0__957746932829998382, unsigned __sym__0__934137931677987637, unsigned __sym__0___45_7332894783442362324, fluidb_string<21> __sym__0__8974811218372806325, unsigned __sym__0___45_5217562530132451785, fluidb_string<10> __sym__0__7851147553396318904, unsigned __sym__0___45_4975505511391694456, double __sym__0___45_7249986409969561654, unsigned __sym__0__4671626969570181580, double __sym__0___45_3666121704283105054, unsigned __sym__0__5495011930072844518, unsigned __sym__0___45_4423447118092167055, double __sym__0___45_1608082021099887893, fluidb_string<13> __sym__0__1584187396639360899) : sym__0___45_7574074018531922998(__sym__0___45_7574074018531922998), sym__0__1125464382786937920(__sym__0__1125464382786937920), sym__0___45_8257174981563598792(__sym__0___45_8257174981563598792), sym__0__957746932829998382(__sym__0__957746932829998382), sym__0__934137931677987637(__sym__0__934137931677987637), sym__0___45_7332894783442362324(__sym__0___45_7332894783442362324), sym__0__8974811218372806325(__sym__0__8974811218372806325), sym__0___45_5217562530132451785(__sym__0___45_5217562530132451785), sym__0__7851147553396318904(__sym__0__7851147553396318904), sym__0___45_4975505511391694456(__sym__0___45_4975505511391694456), sym__0___45_7249986409969561654(__sym__0___45_7249986409969561654), sym__0__4671626969570181580(__sym__0__4671626969570181580), sym__0___45_3666121704283105054(__sym__0___45_3666121704283105054), sym__0__5495011930072844518(__sym__0__5495011930072844518), sym__0___45_4423447118092167055(__sym__0___45_4423447118092167055), sym__0___45_1608082021099887893(__sym__0___45_1608082021099887893), sym__0__1584187396639360899(__sym__0__1584187396639360899)
  {
  }
  Record4() 
  {
  }
  std::string show() const{
    std::stringstream o;
    o << sym__0___45_7574074018531922998 << " | " << sym__0__1125464382786937920 << " | " << sym__0___45_8257174981563598792 << " | " << sym__0__957746932829998382 << " | " << sym__0__934137931677987637 << " | " << sym__0___45_7332894783442362324 << " | " << arrToString(sym__0__8974811218372806325) << " | " << sym__0___45_5217562530132451785 << " | " << arrToString(sym__0__7851147553396318904) << " | " << sym__0___45_4975505511391694456 << " | " << sym__0___45_7249986409969561654 << " | " << sym__0__4671626969570181580 << " | " << sym__0___45_3666121704283105054 << " | " << sym__0__5495011930072844518 << " | " << sym__0___45_4423447118092167055 << " | " << sym__0___45_1608082021099887893 << " | " << arrToString(sym__0__1584187396639360899);
    return o.str();
  }
  bool operator <(const Record4& otherRec) const{
    return (otherRec.sym__0___45_7574074018531922998 < sym__0___45_7574074018531922998 && (otherRec.sym__0__1125464382786937920 < sym__0__1125464382786937920 && (otherRec.sym__0___45_8257174981563598792 < sym__0___45_8257174981563598792 && (otherRec.sym__0__957746932829998382 < sym__0__957746932829998382 && (otherRec.sym__0__934137931677987637 < sym__0__934137931677987637 && (otherRec.sym__0___45_7332894783442362324 < sym__0___45_7332894783442362324 && (otherRec.sym__0__8974811218372806325 < sym__0__8974811218372806325 && (otherRec.sym__0___45_5217562530132451785 < sym__0___45_5217562530132451785 && (otherRec.sym__0__7851147553396318904 < sym__0__7851147553396318904 && (otherRec.sym__0___45_4975505511391694456 < sym__0___45_4975505511391694456 && (otherRec.sym__0___45_7249986409969561654 < sym__0___45_7249986409969561654 && (otherRec.sym__0__4671626969570181580 < sym__0__4671626969570181580 && (otherRec.sym__0___45_3666121704283105054 < sym__0___45_3666121704283105054 && (otherRec.sym__0__5495011930072844518 < sym__0__5495011930072844518 && (otherRec.sym__0___45_4423447118092167055 < sym__0___45_4423447118092167055 && (otherRec.sym__0___45_1608082021099887893 < sym__0___45_1608082021099887893 && otherRec.sym__0__1584187396639360899 < sym__0__1584187396639360899))))))))))))))));
  }
  bool operator ==(const Record4& otherRec) const{
    return (otherRec.sym__0___45_7574074018531922998 == sym__0___45_7574074018531922998 && (otherRec.sym__0__1125464382786937920 == sym__0__1125464382786937920 && (otherRec.sym__0___45_8257174981563598792 == sym__0___45_8257174981563598792 && (otherRec.sym__0__957746932829998382 == sym__0__957746932829998382 && (otherRec.sym__0__934137931677987637 == sym__0__934137931677987637 && (otherRec.sym__0___45_7332894783442362324 == sym__0___45_7332894783442362324 && (otherRec.sym__0__8974811218372806325 == sym__0__8974811218372806325 && (otherRec.sym__0___45_5217562530132451785 == sym__0___45_5217562530132451785 && (otherRec.sym__0__7851147553396318904 == sym__0__7851147553396318904 && (otherRec.sym__0___45_4975505511391694456 == sym__0___45_4975505511391694456 && (otherRec.sym__0___45_7249986409969561654 == sym__0___45_7249986409969561654 && (otherRec.sym__0__4671626969570181580 == sym__0__4671626969570181580 && (otherRec.sym__0___45_3666121704283105054 == sym__0___45_3666121704283105054 && (otherRec.sym__0__5495011930072844518 == sym__0__5495011930072844518 && (otherRec.sym__0___45_4423447118092167055 == sym__0___45_4423447118092167055 && (otherRec.sym__0___45_1608082021099887893 == sym__0___45_1608082021099887893 && otherRec.sym__0__1584187396639360899 == sym__0__1584187396639360899))))))))))))))));
  }
  bool operator !=(const Record4& otherRec) const{
    return (otherRec.sym__0___45_7574074018531922998 != sym__0___45_7574074018531922998 || (otherRec.sym__0__1125464382786937920 != sym__0__1125464382786937920 || (otherRec.sym__0___45_8257174981563598792 != sym__0___45_8257174981563598792 || (otherRec.sym__0__957746932829998382 != sym__0__957746932829998382 || (otherRec.sym__0__934137931677987637 != sym__0__934137931677987637 || (otherRec.sym__0___45_7332894783442362324 != sym__0___45_7332894783442362324 || (otherRec.sym__0__8974811218372806325 != sym__0__8974811218372806325 || (otherRec.sym__0___45_5217562530132451785 != sym__0___45_5217562530132451785 || (otherRec.sym__0__7851147553396318904 != sym__0__7851147553396318904 || (otherRec.sym__0___45_4975505511391694456 != sym__0___45_4975505511391694456 || (otherRec.sym__0___45_7249986409969561654 != sym__0___45_7249986409969561654 || (otherRec.sym__0__4671626969570181580 != sym__0__4671626969570181580 || (otherRec.sym__0___45_3666121704283105054 != sym__0___45_3666121704283105054 || (otherRec.sym__0__5495011930072844518 != sym__0__5495011930072844518 || (otherRec.sym__0___45_4423447118092167055 != sym__0___45_4423447118092167055 || (otherRec.sym__0___45_1608082021099887893 != sym__0___45_1608082021099887893 || otherRec.sym__0__1584187396639360899 != sym__0__1584187396639360899))))))))))))))));
  }
  unsigned sym__0___45_7574074018531922998;
  int sym__0__1125464382786937920;
  unsigned sym__0___45_8257174981563598792;
  unsigned sym__0__957746932829998382;
  unsigned sym__0__934137931677987637;
  unsigned sym__0___45_7332894783442362324;
  fluidb_string<21> sym__0__8974811218372806325;
  unsigned sym__0___45_5217562530132451785;
  fluidb_string<10> sym__0__7851147553396318904;
  unsigned sym__0___45_4975505511391694456;
  double sym__0___45_7249986409969561654;
  unsigned sym__0__4671626969570181580;
  double sym__0___45_3666121704283105054;
  unsigned sym__0__5495011930072844518;
  unsigned sym__0___45_4423447118092167055;
  double sym__0___45_1608082021099887893;
  fluidb_string<13> sym__0__1584187396639360899;
 private:
};


class Record16 {
 public:
  Record16(unsigned __sym__0__6245703584620992382, fluidb_string<18> __sym__0__8423503703594878606, fluidb_string<9> __sym__0__6356725463286426884, fluidb_string<9> __sym__0___45_3286136184259375045, unsigned __sym__0__4066203801312846649, unsigned __sym__0___45_8353576545653999317, fluidb_string<7> __sym__0___45_4468618322478996170, unsigned __sym__0___45_8422568292558358555, unsigned __sym__0__3253898844582805974, unsigned __sym__0__8575488047535294878, unsigned __sym__0__3435466710294281260, unsigned __sym__0___45_8522673847417648165, fluidb_string<15> __sym__0___45_7405363787420957662, fluidb_string<2> __sym__0__7765678614353932314, fluidb_string<2> __sym__0__10543855051499991, fluidb_string<2> __sym__0__3423339159521108575, fluidb_string<2> __sym__0___45_4718580705201763151) : sym__0__6245703584620992382(__sym__0__6245703584620992382), sym__0__8423503703594878606(__sym__0__8423503703594878606), sym__0__6356725463286426884(__sym__0__6356725463286426884), sym__0___45_3286136184259375045(__sym__0___45_3286136184259375045), sym__0__4066203801312846649(__sym__0__4066203801312846649), sym__0___45_8353576545653999317(__sym__0___45_8353576545653999317), sym__0___45_4468618322478996170(__sym__0___45_4468618322478996170), sym__0___45_8422568292558358555(__sym__0___45_8422568292558358555), sym__0__3253898844582805974(__sym__0__3253898844582805974), sym__0__8575488047535294878(__sym__0__8575488047535294878), sym__0__3435466710294281260(__sym__0__3435466710294281260), sym__0___45_8522673847417648165(__sym__0___45_8522673847417648165), sym__0___45_7405363787420957662(__sym__0___45_7405363787420957662), sym__0__7765678614353932314(__sym__0__7765678614353932314), sym__0__10543855051499991(__sym__0__10543855051499991), sym__0__3423339159521108575(__sym__0__3423339159521108575), sym__0___45_4718580705201763151(__sym__0___45_4718580705201763151)
  {
  }
  Record16() 
  {
  }
  std::string show() const{
    std::stringstream o;
    o << sym__0__6245703584620992382 << " | " << arrToString(sym__0__8423503703594878606) << " | " << arrToString(sym__0__6356725463286426884) << " | " << arrToString(sym__0___45_3286136184259375045) << " | " << sym__0__4066203801312846649 << " | " << sym__0___45_8353576545653999317 << " | " << arrToString(sym__0___45_4468618322478996170) << " | " << sym__0___45_8422568292558358555 << " | " << sym__0__3253898844582805974 << " | " << sym__0__8575488047535294878 << " | " << sym__0__3435466710294281260 << " | " << sym__0___45_8522673847417648165 << " | " << arrToString(sym__0___45_7405363787420957662) << " | " << arrToString(sym__0__7765678614353932314) << " | " << arrToString(sym__0__10543855051499991) << " | " << arrToString(sym__0__3423339159521108575) << " | " << arrToString(sym__0___45_4718580705201763151);
    return o.str();
  }
  bool operator <(const Record16& otherRec) const{
    return (otherRec.sym__0__6245703584620992382 < sym__0__6245703584620992382 && (otherRec.sym__0__8423503703594878606 < sym__0__8423503703594878606 && (otherRec.sym__0__6356725463286426884 < sym__0__6356725463286426884 && (otherRec.sym__0___45_3286136184259375045 < sym__0___45_3286136184259375045 && (otherRec.sym__0__4066203801312846649 < sym__0__4066203801312846649 && (otherRec.sym__0___45_8353576545653999317 < sym__0___45_8353576545653999317 && (otherRec.sym__0___45_4468618322478996170 < sym__0___45_4468618322478996170 && (otherRec.sym__0___45_8422568292558358555 < sym__0___45_8422568292558358555 && (otherRec.sym__0__3253898844582805974 < sym__0__3253898844582805974 && (otherRec.sym__0__8575488047535294878 < sym__0__8575488047535294878 && (otherRec.sym__0__3435466710294281260 < sym__0__3435466710294281260 && (otherRec.sym__0___45_8522673847417648165 < sym__0___45_8522673847417648165 && (otherRec.sym__0___45_7405363787420957662 < sym__0___45_7405363787420957662 && (otherRec.sym__0__7765678614353932314 < sym__0__7765678614353932314 && (otherRec.sym__0__10543855051499991 < sym__0__10543855051499991 && (otherRec.sym__0__3423339159521108575 < sym__0__3423339159521108575 && otherRec.sym__0___45_4718580705201763151 < sym__0___45_4718580705201763151))))))))))))))));
  }
  bool operator ==(const Record16& otherRec) const{
    return (otherRec.sym__0__6245703584620992382 == sym__0__6245703584620992382 && (otherRec.sym__0__8423503703594878606 == sym__0__8423503703594878606 && (otherRec.sym__0__6356725463286426884 == sym__0__6356725463286426884 && (otherRec.sym__0___45_3286136184259375045 == sym__0___45_3286136184259375045 && (otherRec.sym__0__4066203801312846649 == sym__0__4066203801312846649 && (otherRec.sym__0___45_8353576545653999317 == sym__0___45_8353576545653999317 && (otherRec.sym__0___45_4468618322478996170 == sym__0___45_4468618322478996170 && (otherRec.sym__0___45_8422568292558358555 == sym__0___45_8422568292558358555 && (otherRec.sym__0__3253898844582805974 == sym__0__3253898844582805974 && (otherRec.sym__0__8575488047535294878 == sym__0__8575488047535294878 && (otherRec.sym__0__3435466710294281260 == sym__0__3435466710294281260 && (otherRec.sym__0___45_8522673847417648165 == sym__0___45_8522673847417648165 && (otherRec.sym__0___45_7405363787420957662 == sym__0___45_7405363787420957662 && (otherRec.sym__0__7765678614353932314 == sym__0__7765678614353932314 && (otherRec.sym__0__10543855051499991 == sym__0__10543855051499991 && (otherRec.sym__0__3423339159521108575 == sym__0__3423339159521108575 && otherRec.sym__0___45_4718580705201763151 == sym__0___45_4718580705201763151))))))))))))))));
  }
  bool operator !=(const Record16& otherRec) const{
    return (otherRec.sym__0__6245703584620992382 != sym__0__6245703584620992382 || (otherRec.sym__0__8423503703594878606 != sym__0__8423503703594878606 || (otherRec.sym__0__6356725463286426884 != sym__0__6356725463286426884 || (otherRec.sym__0___45_3286136184259375045 != sym__0___45_3286136184259375045 || (otherRec.sym__0__4066203801312846649 != sym__0__4066203801312846649 || (otherRec.sym__0___45_8353576545653999317 != sym__0___45_8353576545653999317 || (otherRec.sym__0___45_4468618322478996170 != sym__0___45_4468618322478996170 || (otherRec.sym__0___45_8422568292558358555 != sym__0___45_8422568292558358555 || (otherRec.sym__0__3253898844582805974 != sym__0__3253898844582805974 || (otherRec.sym__0__8575488047535294878 != sym__0__8575488047535294878 || (otherRec.sym__0__3435466710294281260 != sym__0__3435466710294281260 || (otherRec.sym__0___45_8522673847417648165 != sym__0___45_8522673847417648165 || (otherRec.sym__0___45_7405363787420957662 != sym__0___45_7405363787420957662 || (otherRec.sym__0__7765678614353932314 != sym__0__7765678614353932314 || (otherRec.sym__0__10543855051499991 != sym__0__10543855051499991 || (otherRec.sym__0__3423339159521108575 != sym__0__3423339159521108575 || otherRec.sym__0___45_4718580705201763151 != sym__0___45_4718580705201763151))))))))))))))));
  }
  unsigned sym__0__6245703584620992382;
  fluidb_string<18> sym__0__8423503703594878606;
  fluidb_string<9> sym__0__6356725463286426884;
  fluidb_string<9> sym__0___45_3286136184259375045;
  unsigned sym__0__4066203801312846649;
  unsigned sym__0___45_8353576545653999317;
  fluidb_string<7> sym__0___45_4468618322478996170;
  unsigned sym__0___45_8422568292558358555;
  unsigned sym__0__3253898844582805974;
  unsigned sym__0__8575488047535294878;
  unsigned sym__0__3435466710294281260;
  unsigned sym__0___45_8522673847417648165;
  fluidb_string<15> sym__0___45_7405363787420957662;
  fluidb_string<2> sym__0__7765678614353932314;
  fluidb_string<2> sym__0__10543855051499991;
  fluidb_string<2> sym__0__3423339159521108575;
  fluidb_string<2> sym__0___45_4718580705201763151;
 private:
};


class Record19 {
 public:
  Record19(unsigned __sortElem0) : sortElem0(__sortElem0)
  {
  }
  Record19() 
  {
  }
  std::string show() const{
    std::stringstream o;
    o << sortElem0;
    return o.str();
  }
  bool operator <(const Record19& otherRec) const{
    return otherRec.sortElem0 < sortElem0;
  }
  bool operator ==(const Record19& otherRec) const{
    return otherRec.sortElem0 == sortElem0;
  }
  bool operator !=(const Record19& otherRec) const{
    return otherRec.sortElem0 != sortElem0;
  }
  unsigned sortElem0;
 private:
};


class Record10 {
 public:
  Record10(unsigned __sym__0__2037864888707786451, fluidb_string<18> __sym__0__8533656712666151747, fluidb_string<9> __sym__0__646314041574508429, fluidb_string<9> __sym__0__6064137978327902054, unsigned __sym__0__3754157776500852496, unsigned __sym__0__6284345160241949046, fluidb_string<7> __sym__0___45_773692805971570325, unsigned __sym__0___45_8399474032083007524, unsigned __sym__0___45_2038947427357444789, unsigned __sym__0__6071994954612827827, unsigned __sym__0__7742515703067448213, unsigned __sym__0__5201219213304227654, fluidb_string<15> __sym__0___45_5896625796158057241, fluidb_string<2> __sym__0___45_1108504872221226081, fluidb_string<2> __sym__0__1055103969674359346, fluidb_string<2> __sym__0__9115626546918942554, fluidb_string<2> __sym__0___45_6850413444013389848) : sym__0__2037864888707786451(__sym__0__2037864888707786451), sym__0__8533656712666151747(__sym__0__8533656712666151747), sym__0__646314041574508429(__sym__0__646314041574508429), sym__0__6064137978327902054(__sym__0__6064137978327902054), sym__0__3754157776500852496(__sym__0__3754157776500852496), sym__0__6284345160241949046(__sym__0__6284345160241949046), sym__0___45_773692805971570325(__sym__0___45_773692805971570325), sym__0___45_8399474032083007524(__sym__0___45_8399474032083007524), sym__0___45_2038947427357444789(__sym__0___45_2038947427357444789), sym__0__6071994954612827827(__sym__0__6071994954612827827), sym__0__7742515703067448213(__sym__0__7742515703067448213), sym__0__5201219213304227654(__sym__0__5201219213304227654), sym__0___45_5896625796158057241(__sym__0___45_5896625796158057241), sym__0___45_1108504872221226081(__sym__0___45_1108504872221226081), sym__0__1055103969674359346(__sym__0__1055103969674359346), sym__0__9115626546918942554(__sym__0__9115626546918942554), sym__0___45_6850413444013389848(__sym__0___45_6850413444013389848)
  {
  }
  Record10() 
  {
  }
  std::string show() const{
    std::stringstream o;
    o << sym__0__2037864888707786451 << " | " << arrToString(sym__0__8533656712666151747) << " | " << arrToString(sym__0__646314041574508429) << " | " << arrToString(sym__0__6064137978327902054) << " | " << sym__0__3754157776500852496 << " | " << sym__0__6284345160241949046 << " | " << arrToString(sym__0___45_773692805971570325) << " | " << sym__0___45_8399474032083007524 << " | " << sym__0___45_2038947427357444789 << " | " << sym__0__6071994954612827827 << " | " << sym__0__7742515703067448213 << " | " << sym__0__5201219213304227654 << " | " << arrToString(sym__0___45_5896625796158057241) << " | " << arrToString(sym__0___45_1108504872221226081) << " | " << arrToString(sym__0__1055103969674359346) << " | " << arrToString(sym__0__9115626546918942554) << " | " << arrToString(sym__0___45_6850413444013389848);
    return o.str();
  }
  bool operator <(const Record10& otherRec) const{
    return (otherRec.sym__0__2037864888707786451 < sym__0__2037864888707786451 && (otherRec.sym__0__8533656712666151747 < sym__0__8533656712666151747 && (otherRec.sym__0__646314041574508429 < sym__0__646314041574508429 && (otherRec.sym__0__6064137978327902054 < sym__0__6064137978327902054 && (otherRec.sym__0__3754157776500852496 < sym__0__3754157776500852496 && (otherRec.sym__0__6284345160241949046 < sym__0__6284345160241949046 && (otherRec.sym__0___45_773692805971570325 < sym__0___45_773692805971570325 && (otherRec.sym__0___45_8399474032083007524 < sym__0___45_8399474032083007524 && (otherRec.sym__0___45_2038947427357444789 < sym__0___45_2038947427357444789 && (otherRec.sym__0__6071994954612827827 < sym__0__6071994954612827827 && (otherRec.sym__0__7742515703067448213 < sym__0__7742515703067448213 && (otherRec.sym__0__5201219213304227654 < sym__0__5201219213304227654 && (otherRec.sym__0___45_5896625796158057241 < sym__0___45_5896625796158057241 && (otherRec.sym__0___45_1108504872221226081 < sym__0___45_1108504872221226081 && (otherRec.sym__0__1055103969674359346 < sym__0__1055103969674359346 && (otherRec.sym__0__9115626546918942554 < sym__0__9115626546918942554 && otherRec.sym__0___45_6850413444013389848 < sym__0___45_6850413444013389848))))))))))))))));
  }
  bool operator ==(const Record10& otherRec) const{
    return (otherRec.sym__0__2037864888707786451 == sym__0__2037864888707786451 && (otherRec.sym__0__8533656712666151747 == sym__0__8533656712666151747 && (otherRec.sym__0__646314041574508429 == sym__0__646314041574508429 && (otherRec.sym__0__6064137978327902054 == sym__0__6064137978327902054 && (otherRec.sym__0__3754157776500852496 == sym__0__3754157776500852496 && (otherRec.sym__0__6284345160241949046 == sym__0__6284345160241949046 && (otherRec.sym__0___45_773692805971570325 == sym__0___45_773692805971570325 && (otherRec.sym__0___45_8399474032083007524 == sym__0___45_8399474032083007524 && (otherRec.sym__0___45_2038947427357444789 == sym__0___45_2038947427357444789 && (otherRec.sym__0__6071994954612827827 == sym__0__6071994954612827827 && (otherRec.sym__0__7742515703067448213 == sym__0__7742515703067448213 && (otherRec.sym__0__5201219213304227654 == sym__0__5201219213304227654 && (otherRec.sym__0___45_5896625796158057241 == sym__0___45_5896625796158057241 && (otherRec.sym__0___45_1108504872221226081 == sym__0___45_1108504872221226081 && (otherRec.sym__0__1055103969674359346 == sym__0__1055103969674359346 && (otherRec.sym__0__9115626546918942554 == sym__0__9115626546918942554 && otherRec.sym__0___45_6850413444013389848 == sym__0___45_6850413444013389848))))))))))))))));
  }
  bool operator !=(const Record10& otherRec) const{
    return (otherRec.sym__0__2037864888707786451 != sym__0__2037864888707786451 || (otherRec.sym__0__8533656712666151747 != sym__0__8533656712666151747 || (otherRec.sym__0__646314041574508429 != sym__0__646314041574508429 || (otherRec.sym__0__6064137978327902054 != sym__0__6064137978327902054 || (otherRec.sym__0__3754157776500852496 != sym__0__3754157776500852496 || (otherRec.sym__0__6284345160241949046 != sym__0__6284345160241949046 || (otherRec.sym__0___45_773692805971570325 != sym__0___45_773692805971570325 || (otherRec.sym__0___45_8399474032083007524 != sym__0___45_8399474032083007524 || (otherRec.sym__0___45_2038947427357444789 != sym__0___45_2038947427357444789 || (otherRec.sym__0__6071994954612827827 != sym__0__6071994954612827827 || (otherRec.sym__0__7742515703067448213 != sym__0__7742515703067448213 || (otherRec.sym__0__5201219213304227654 != sym__0__5201219213304227654 || (otherRec.sym__0___45_5896625796158057241 != sym__0___45_5896625796158057241 || (otherRec.sym__0___45_1108504872221226081 != sym__0___45_1108504872221226081 || (otherRec.sym__0__1055103969674359346 != sym__0__1055103969674359346 || (otherRec.sym__0__9115626546918942554 != sym__0__9115626546918942554 || otherRec.sym__0___45_6850413444013389848 != sym__0___45_6850413444013389848))))))))))))))));
  }
  unsigned sym__0__2037864888707786451;
  fluidb_string<18> sym__0__8533656712666151747;
  fluidb_string<9> sym__0__646314041574508429;
  fluidb_string<9> sym__0__6064137978327902054;
  unsigned sym__0__3754157776500852496;
  unsigned sym__0__6284345160241949046;
  fluidb_string<7> sym__0___45_773692805971570325;
  unsigned sym__0___45_8399474032083007524;
  unsigned sym__0___45_2038947427357444789;
  unsigned sym__0__6071994954612827827;
  unsigned sym__0__7742515703067448213;
  unsigned sym__0__5201219213304227654;
  fluidb_string<15> sym__0___45_5896625796158057241;
  fluidb_string<2> sym__0___45_1108504872221226081;
  fluidb_string<2> sym__0__1055103969674359346;
  fluidb_string<2> sym__0__9115626546918942554;
  fluidb_string<2> sym__0___45_6850413444013389848;
 private:
};


class Record29 {
 public:
  Record29(unsigned __sym__0___45_5026075974618982988, fluidb_string<18> __sym__0__7432298433273316420, fluidb_string<9> __sym__0___45_9015786607055196246, fluidb_string<9> __sym__0__2198911933165628293, unsigned __sym__0__265946737683763507, unsigned __sym__0___45_1464149585091689867, fluidb_string<7> __sym__0__2331409523224201212, unsigned __sym__0___45_3400073426931819017, unsigned __sym__0___45_6721224733529750436, unsigned __sym__0___45_5131153606029886828, unsigned __sym__0__2129148228201323266, unsigned __sym__0__1543195012683462501, fluidb_string<15> __sym__0___45_419662238809251472, fluidb_string<2> __sym__0__2149452457125417400, fluidb_string<2> __sym__0__3812376377317131513, fluidb_string<2> __sym__0___45_6227654738589541775, fluidb_string<2> __sym__0___45_2617432061804376453, unsigned __sym__0___45_7795156420759674248, int __sym__0___45_7236562371630143166, unsigned __sym__0__444671558480953034, unsigned __sym__0__8818510988249917740, unsigned __sym__0__1826882263548907171, unsigned __sym__0__4643003986445135022, fluidb_string<21> __sym__0___45_9212412777591431901, unsigned __sym__0__677568687779685577, fluidb_string<10> __sym__0___45_1566867736534683574, unsigned __sym__0__1881638640430645786, double __sym__0__8532410199738998392, unsigned __sym__0___45_7387497052497342002, double __sym__0___45_2513573066306319392, unsigned __sym__0___45_4939503808341533868, unsigned __sym__0__8468299261170941839, double __sym__0__7117671213534841517, fluidb_string<13> __sym__0___45_3714301134690751467) : sym__0___45_5026075974618982988(__sym__0___45_5026075974618982988), sym__0__7432298433273316420(__sym__0__7432298433273316420), sym__0___45_9015786607055196246(__sym__0___45_9015786607055196246), sym__0__2198911933165628293(__sym__0__2198911933165628293), sym__0__265946737683763507(__sym__0__265946737683763507), sym__0___45_1464149585091689867(__sym__0___45_1464149585091689867), sym__0__2331409523224201212(__sym__0__2331409523224201212), sym__0___45_3400073426931819017(__sym__0___45_3400073426931819017), sym__0___45_6721224733529750436(__sym__0___45_6721224733529750436), sym__0___45_5131153606029886828(__sym__0___45_5131153606029886828), sym__0__2129148228201323266(__sym__0__2129148228201323266), sym__0__1543195012683462501(__sym__0__1543195012683462501), sym__0___45_419662238809251472(__sym__0___45_419662238809251472), sym__0__2149452457125417400(__sym__0__2149452457125417400), sym__0__3812376377317131513(__sym__0__3812376377317131513), sym__0___45_6227654738589541775(__sym__0___45_6227654738589541775), sym__0___45_2617432061804376453(__sym__0___45_2617432061804376453), sym__0___45_7795156420759674248(__sym__0___45_7795156420759674248), sym__0___45_7236562371630143166(__sym__0___45_7236562371630143166), sym__0__444671558480953034(__sym__0__444671558480953034), sym__0__8818510988249917740(__sym__0__8818510988249917740), sym__0__1826882263548907171(__sym__0__1826882263548907171), sym__0__4643003986445135022(__sym__0__4643003986445135022), sym__0___45_9212412777591431901(__sym__0___45_9212412777591431901), sym__0__677568687779685577(__sym__0__677568687779685577), sym__0___45_1566867736534683574(__sym__0___45_1566867736534683574), sym__0__1881638640430645786(__sym__0__1881638640430645786), sym__0__8532410199738998392(__sym__0__8532410199738998392), sym__0___45_7387497052497342002(__sym__0___45_7387497052497342002), sym__0___45_2513573066306319392(__sym__0___45_2513573066306319392), sym__0___45_4939503808341533868(__sym__0___45_4939503808341533868), sym__0__8468299261170941839(__sym__0__8468299261170941839), sym__0__7117671213534841517(__sym__0__7117671213534841517), sym__0___45_3714301134690751467(__sym__0___45_3714301134690751467)
  {
  }
  Record29() 
  {
  }
  std::string show() const{
    std::stringstream o;
    o << sym__0___45_5026075974618982988 << " | " << arrToString(sym__0__7432298433273316420) << " | " << arrToString(sym__0___45_9015786607055196246) << " | " << arrToString(sym__0__2198911933165628293) << " | " << sym__0__265946737683763507 << " | " << sym__0___45_1464149585091689867 << " | " << arrToString(sym__0__2331409523224201212) << " | " << sym__0___45_3400073426931819017 << " | " << sym__0___45_6721224733529750436 << " | " << sym__0___45_5131153606029886828 << " | " << sym__0__2129148228201323266 << " | " << sym__0__1543195012683462501 << " | " << arrToString(sym__0___45_419662238809251472) << " | " << arrToString(sym__0__2149452457125417400) << " | " << arrToString(sym__0__3812376377317131513) << " | " << arrToString(sym__0___45_6227654738589541775) << " | " << arrToString(sym__0___45_2617432061804376453) << " | " << sym__0___45_7795156420759674248 << " | " << sym__0___45_7236562371630143166 << " | " << sym__0__444671558480953034 << " | " << sym__0__8818510988249917740 << " | " << sym__0__1826882263548907171 << " | " << sym__0__4643003986445135022 << " | " << arrToString(sym__0___45_9212412777591431901) << " | " << sym__0__677568687779685577 << " | " << arrToString(sym__0___45_1566867736534683574) << " | " << sym__0__1881638640430645786 << " | " << sym__0__8532410199738998392 << " | " << sym__0___45_7387497052497342002 << " | " << sym__0___45_2513573066306319392 << " | " << sym__0___45_4939503808341533868 << " | " << sym__0__8468299261170941839 << " | " << sym__0__7117671213534841517 << " | " << arrToString(sym__0___45_3714301134690751467);
    return o.str();
  }
  bool operator <(const Record29& otherRec) const{
    return (otherRec.sym__0___45_5026075974618982988 < sym__0___45_5026075974618982988 && (otherRec.sym__0__7432298433273316420 < sym__0__7432298433273316420 && (otherRec.sym__0___45_9015786607055196246 < sym__0___45_9015786607055196246 && (otherRec.sym__0__2198911933165628293 < sym__0__2198911933165628293 && (otherRec.sym__0__265946737683763507 < sym__0__265946737683763507 && (otherRec.sym__0___45_1464149585091689867 < sym__0___45_1464149585091689867 && (otherRec.sym__0__2331409523224201212 < sym__0__2331409523224201212 && (otherRec.sym__0___45_3400073426931819017 < sym__0___45_3400073426931819017 && (otherRec.sym__0___45_6721224733529750436 < sym__0___45_6721224733529750436 && (otherRec.sym__0___45_5131153606029886828 < sym__0___45_5131153606029886828 && (otherRec.sym__0__2129148228201323266 < sym__0__2129148228201323266 && (otherRec.sym__0__1543195012683462501 < sym__0__1543195012683462501 && (otherRec.sym__0___45_419662238809251472 < sym__0___45_419662238809251472 && (otherRec.sym__0__2149452457125417400 < sym__0__2149452457125417400 && (otherRec.sym__0__3812376377317131513 < sym__0__3812376377317131513 && (otherRec.sym__0___45_6227654738589541775 < sym__0___45_6227654738589541775 && (otherRec.sym__0___45_2617432061804376453 < sym__0___45_2617432061804376453 && (otherRec.sym__0___45_7795156420759674248 < sym__0___45_7795156420759674248 && (otherRec.sym__0___45_7236562371630143166 < sym__0___45_7236562371630143166 && (otherRec.sym__0__444671558480953034 < sym__0__444671558480953034 && (otherRec.sym__0__8818510988249917740 < sym__0__8818510988249917740 && (otherRec.sym__0__1826882263548907171 < sym__0__1826882263548907171 && (otherRec.sym__0__4643003986445135022 < sym__0__4643003986445135022 && (otherRec.sym__0___45_9212412777591431901 < sym__0___45_9212412777591431901 && (otherRec.sym__0__677568687779685577 < sym__0__677568687779685577 && (otherRec.sym__0___45_1566867736534683574 < sym__0___45_1566867736534683574 && (otherRec.sym__0__1881638640430645786 < sym__0__1881638640430645786 && (otherRec.sym__0__8532410199738998392 < sym__0__8532410199738998392 && (otherRec.sym__0___45_7387497052497342002 < sym__0___45_7387497052497342002 && (otherRec.sym__0___45_2513573066306319392 < sym__0___45_2513573066306319392 && (otherRec.sym__0___45_4939503808341533868 < sym__0___45_4939503808341533868 && (otherRec.sym__0__8468299261170941839 < sym__0__8468299261170941839 && (otherRec.sym__0__7117671213534841517 < sym__0__7117671213534841517 && otherRec.sym__0___45_3714301134690751467 < sym__0___45_3714301134690751467)))))))))))))))))))))))))))))))));
  }
  bool operator ==(const Record29& otherRec) const{
    return (otherRec.sym__0___45_5026075974618982988 == sym__0___45_5026075974618982988 && (otherRec.sym__0__7432298433273316420 == sym__0__7432298433273316420 && (otherRec.sym__0___45_9015786607055196246 == sym__0___45_9015786607055196246 && (otherRec.sym__0__2198911933165628293 == sym__0__2198911933165628293 && (otherRec.sym__0__265946737683763507 == sym__0__265946737683763507 && (otherRec.sym__0___45_1464149585091689867 == sym__0___45_1464149585091689867 && (otherRec.sym__0__2331409523224201212 == sym__0__2331409523224201212 && (otherRec.sym__0___45_3400073426931819017 == sym__0___45_3400073426931819017 && (otherRec.sym__0___45_6721224733529750436 == sym__0___45_6721224733529750436 && (otherRec.sym__0___45_5131153606029886828 == sym__0___45_5131153606029886828 && (otherRec.sym__0__2129148228201323266 == sym__0__2129148228201323266 && (otherRec.sym__0__1543195012683462501 == sym__0__1543195012683462501 && (otherRec.sym__0___45_419662238809251472 == sym__0___45_419662238809251472 && (otherRec.sym__0__2149452457125417400 == sym__0__2149452457125417400 && (otherRec.sym__0__3812376377317131513 == sym__0__3812376377317131513 && (otherRec.sym__0___45_6227654738589541775 == sym__0___45_6227654738589541775 && (otherRec.sym__0___45_2617432061804376453 == sym__0___45_2617432061804376453 && (otherRec.sym__0___45_7795156420759674248 == sym__0___45_7795156420759674248 && (otherRec.sym__0___45_7236562371630143166 == sym__0___45_7236562371630143166 && (otherRec.sym__0__444671558480953034 == sym__0__444671558480953034 && (otherRec.sym__0__8818510988249917740 == sym__0__8818510988249917740 && (otherRec.sym__0__1826882263548907171 == sym__0__1826882263548907171 && (otherRec.sym__0__4643003986445135022 == sym__0__4643003986445135022 && (otherRec.sym__0___45_9212412777591431901 == sym__0___45_9212412777591431901 && (otherRec.sym__0__677568687779685577 == sym__0__677568687779685577 && (otherRec.sym__0___45_1566867736534683574 == sym__0___45_1566867736534683574 && (otherRec.sym__0__1881638640430645786 == sym__0__1881638640430645786 && (otherRec.sym__0__8532410199738998392 == sym__0__8532410199738998392 && (otherRec.sym__0___45_7387497052497342002 == sym__0___45_7387497052497342002 && (otherRec.sym__0___45_2513573066306319392 == sym__0___45_2513573066306319392 && (otherRec.sym__0___45_4939503808341533868 == sym__0___45_4939503808341533868 && (otherRec.sym__0__8468299261170941839 == sym__0__8468299261170941839 && (otherRec.sym__0__7117671213534841517 == sym__0__7117671213534841517 && otherRec.sym__0___45_3714301134690751467 == sym__0___45_3714301134690751467)))))))))))))))))))))))))))))))));
  }
  bool operator !=(const Record29& otherRec) const{
    return (otherRec.sym__0___45_5026075974618982988 != sym__0___45_5026075974618982988 || (otherRec.sym__0__7432298433273316420 != sym__0__7432298433273316420 || (otherRec.sym__0___45_9015786607055196246 != sym__0___45_9015786607055196246 || (otherRec.sym__0__2198911933165628293 != sym__0__2198911933165628293 || (otherRec.sym__0__265946737683763507 != sym__0__265946737683763507 || (otherRec.sym__0___45_1464149585091689867 != sym__0___45_1464149585091689867 || (otherRec.sym__0__2331409523224201212 != sym__0__2331409523224201212 || (otherRec.sym__0___45_3400073426931819017 != sym__0___45_3400073426931819017 || (otherRec.sym__0___45_6721224733529750436 != sym__0___45_6721224733529750436 || (otherRec.sym__0___45_5131153606029886828 != sym__0___45_5131153606029886828 || (otherRec.sym__0__2129148228201323266 != sym__0__2129148228201323266 || (otherRec.sym__0__1543195012683462501 != sym__0__1543195012683462501 || (otherRec.sym__0___45_419662238809251472 != sym__0___45_419662238809251472 || (otherRec.sym__0__2149452457125417400 != sym__0__2149452457125417400 || (otherRec.sym__0__3812376377317131513 != sym__0__3812376377317131513 || (otherRec.sym__0___45_6227654738589541775 != sym__0___45_6227654738589541775 || (otherRec.sym__0___45_2617432061804376453 != sym__0___45_2617432061804376453 || (otherRec.sym__0___45_7795156420759674248 != sym__0___45_7795156420759674248 || (otherRec.sym__0___45_7236562371630143166 != sym__0___45_7236562371630143166 || (otherRec.sym__0__444671558480953034 != sym__0__444671558480953034 || (otherRec.sym__0__8818510988249917740 != sym__0__8818510988249917740 || (otherRec.sym__0__1826882263548907171 != sym__0__1826882263548907171 || (otherRec.sym__0__4643003986445135022 != sym__0__4643003986445135022 || (otherRec.sym__0___45_9212412777591431901 != sym__0___45_9212412777591431901 || (otherRec.sym__0__677568687779685577 != sym__0__677568687779685577 || (otherRec.sym__0___45_1566867736534683574 != sym__0___45_1566867736534683574 || (otherRec.sym__0__1881638640430645786 != sym__0__1881638640430645786 || (otherRec.sym__0__8532410199738998392 != sym__0__8532410199738998392 || (otherRec.sym__0___45_7387497052497342002 != sym__0___45_7387497052497342002 || (otherRec.sym__0___45_2513573066306319392 != sym__0___45_2513573066306319392 || (otherRec.sym__0___45_4939503808341533868 != sym__0___45_4939503808341533868 || (otherRec.sym__0__8468299261170941839 != sym__0__8468299261170941839 || (otherRec.sym__0__7117671213534841517 != sym__0__7117671213534841517 || otherRec.sym__0___45_3714301134690751467 != sym__0___45_3714301134690751467)))))))))))))))))))))))))))))))));
  }
  unsigned sym__0___45_5026075974618982988;
  fluidb_string<18> sym__0__7432298433273316420;
  fluidb_string<9> sym__0___45_9015786607055196246;
  fluidb_string<9> sym__0__2198911933165628293;
  unsigned sym__0__265946737683763507;
  unsigned sym__0___45_1464149585091689867;
  fluidb_string<7> sym__0__2331409523224201212;
  unsigned sym__0___45_3400073426931819017;
  unsigned sym__0___45_6721224733529750436;
  unsigned sym__0___45_5131153606029886828;
  unsigned sym__0__2129148228201323266;
  unsigned sym__0__1543195012683462501;
  fluidb_string<15> sym__0___45_419662238809251472;
  fluidb_string<2> sym__0__2149452457125417400;
  fluidb_string<2> sym__0__3812376377317131513;
  fluidb_string<2> sym__0___45_6227654738589541775;
  fluidb_string<2> sym__0___45_2617432061804376453;
  unsigned sym__0___45_7795156420759674248;
  int sym__0___45_7236562371630143166;
  unsigned sym__0__444671558480953034;
  unsigned sym__0__8818510988249917740;
  unsigned sym__0__1826882263548907171;
  unsigned sym__0__4643003986445135022;
  fluidb_string<21> sym__0___45_9212412777591431901;
  unsigned sym__0__677568687779685577;
  fluidb_string<10> sym__0___45_1566867736534683574;
  unsigned sym__0__1881638640430645786;
  double sym__0__8532410199738998392;
  unsigned sym__0___45_7387497052497342002;
  double sym__0___45_2513573066306319392;
  unsigned sym__0___45_4939503808341533868;
  unsigned sym__0__8468299261170941839;
  double sym__0__7117671213534841517;
  fluidb_string<13> sym__0___45_3714301134690751467;
 private:
};


class Record17 {
 public:
  Record17(unsigned __sym__0__2237436879928175675, fluidb_string<18> __sym__0__2611420850730996427, fluidb_string<9> __sym__0__8580827633646556737, fluidb_string<9> __sym__0__3902406656410734878, unsigned __sym__0___45_5891800234269918308, unsigned __sym__0__1538625698420293134, fluidb_string<7> __sym__0___45_7770737979173508973, unsigned __sym__0___45_8493416926131562688, unsigned __sym__0___45_8523615618537444877, unsigned __sym__0__673904973748734491, unsigned __sym__0___45_3380685964368961911, unsigned __sym__0___45_5904043406584142850, fluidb_string<15> __sym__0__7179957875831373607, fluidb_string<2> __sym__0___45_4166143365315415745, fluidb_string<2> __sym__0__3207630749989215602, fluidb_string<2> __sym__0__5395374455822132186, fluidb_string<2> __sym__0___45_7225830269819405580, unsigned __sym__0__8991430536808361215, int __sym__0__4583131517034717385, unsigned __sym__0__1284725072524796001, unsigned __sym__0__3933934698775098051, unsigned __sym__0__3693867617571270668, unsigned __sym__0__3068847290209443605, fluidb_string<21> __sym__0___45_7777800476538033268, unsigned __sym__0___45_1578705594223344318, fluidb_string<10> __sym__0__4948472385509363425, unsigned __sym__0__3673553332159180977, double __sym__0__1218627844997812479, unsigned __sym__0___45_8294279676831449803, double __sym__0___45_6984436199184448105, unsigned __sym__0___45_6848192209483325989, unsigned __sym__0___45_9182405812039241464, double __sym__0___45_3072739000951748362, fluidb_string<13> __sym__0__1424431170346100142) : sym__0__2237436879928175675(__sym__0__2237436879928175675), sym__0__2611420850730996427(__sym__0__2611420850730996427), sym__0__8580827633646556737(__sym__0__8580827633646556737), sym__0__3902406656410734878(__sym__0__3902406656410734878), sym__0___45_5891800234269918308(__sym__0___45_5891800234269918308), sym__0__1538625698420293134(__sym__0__1538625698420293134), sym__0___45_7770737979173508973(__sym__0___45_7770737979173508973), sym__0___45_8493416926131562688(__sym__0___45_8493416926131562688), sym__0___45_8523615618537444877(__sym__0___45_8523615618537444877), sym__0__673904973748734491(__sym__0__673904973748734491), sym__0___45_3380685964368961911(__sym__0___45_3380685964368961911), sym__0___45_5904043406584142850(__sym__0___45_5904043406584142850), sym__0__7179957875831373607(__sym__0__7179957875831373607), sym__0___45_4166143365315415745(__sym__0___45_4166143365315415745), sym__0__3207630749989215602(__sym__0__3207630749989215602), sym__0__5395374455822132186(__sym__0__5395374455822132186), sym__0___45_7225830269819405580(__sym__0___45_7225830269819405580), sym__0__8991430536808361215(__sym__0__8991430536808361215), sym__0__4583131517034717385(__sym__0__4583131517034717385), sym__0__1284725072524796001(__sym__0__1284725072524796001), sym__0__3933934698775098051(__sym__0__3933934698775098051), sym__0__3693867617571270668(__sym__0__3693867617571270668), sym__0__3068847290209443605(__sym__0__3068847290209443605), sym__0___45_7777800476538033268(__sym__0___45_7777800476538033268), sym__0___45_1578705594223344318(__sym__0___45_1578705594223344318), sym__0__4948472385509363425(__sym__0__4948472385509363425), sym__0__3673553332159180977(__sym__0__3673553332159180977), sym__0__1218627844997812479(__sym__0__1218627844997812479), sym__0___45_8294279676831449803(__sym__0___45_8294279676831449803), sym__0___45_6984436199184448105(__sym__0___45_6984436199184448105), sym__0___45_6848192209483325989(__sym__0___45_6848192209483325989), sym__0___45_9182405812039241464(__sym__0___45_9182405812039241464), sym__0___45_3072739000951748362(__sym__0___45_3072739000951748362), sym__0__1424431170346100142(__sym__0__1424431170346100142)
  {
  }
  Record17() 
  {
  }
  std::string show() const{
    std::stringstream o;
    o << sym__0__2237436879928175675 << " | " << arrToString(sym__0__2611420850730996427) << " | " << arrToString(sym__0__8580827633646556737) << " | " << arrToString(sym__0__3902406656410734878) << " | " << sym__0___45_5891800234269918308 << " | " << sym__0__1538625698420293134 << " | " << arrToString(sym__0___45_7770737979173508973) << " | " << sym__0___45_8493416926131562688 << " | " << sym__0___45_8523615618537444877 << " | " << sym__0__673904973748734491 << " | " << sym__0___45_3380685964368961911 << " | " << sym__0___45_5904043406584142850 << " | " << arrToString(sym__0__7179957875831373607) << " | " << arrToString(sym__0___45_4166143365315415745) << " | " << arrToString(sym__0__3207630749989215602) << " | " << arrToString(sym__0__5395374455822132186) << " | " << arrToString(sym__0___45_7225830269819405580) << " | " << sym__0__8991430536808361215 << " | " << sym__0__4583131517034717385 << " | " << sym__0__1284725072524796001 << " | " << sym__0__3933934698775098051 << " | " << sym__0__3693867617571270668 << " | " << sym__0__3068847290209443605 << " | " << arrToString(sym__0___45_7777800476538033268) << " | " << sym__0___45_1578705594223344318 << " | " << arrToString(sym__0__4948472385509363425) << " | " << sym__0__3673553332159180977 << " | " << sym__0__1218627844997812479 << " | " << sym__0___45_8294279676831449803 << " | " << sym__0___45_6984436199184448105 << " | " << sym__0___45_6848192209483325989 << " | " << sym__0___45_9182405812039241464 << " | " << sym__0___45_3072739000951748362 << " | " << arrToString(sym__0__1424431170346100142);
    return o.str();
  }
  bool operator <(const Record17& otherRec) const{
    return (otherRec.sym__0__2237436879928175675 < sym__0__2237436879928175675 && (otherRec.sym__0__2611420850730996427 < sym__0__2611420850730996427 && (otherRec.sym__0__8580827633646556737 < sym__0__8580827633646556737 && (otherRec.sym__0__3902406656410734878 < sym__0__3902406656410734878 && (otherRec.sym__0___45_5891800234269918308 < sym__0___45_5891800234269918308 && (otherRec.sym__0__1538625698420293134 < sym__0__1538625698420293134 && (otherRec.sym__0___45_7770737979173508973 < sym__0___45_7770737979173508973 && (otherRec.sym__0___45_8493416926131562688 < sym__0___45_8493416926131562688 && (otherRec.sym__0___45_8523615618537444877 < sym__0___45_8523615618537444877 && (otherRec.sym__0__673904973748734491 < sym__0__673904973748734491 && (otherRec.sym__0___45_3380685964368961911 < sym__0___45_3380685964368961911 && (otherRec.sym__0___45_5904043406584142850 < sym__0___45_5904043406584142850 && (otherRec.sym__0__7179957875831373607 < sym__0__7179957875831373607 && (otherRec.sym__0___45_4166143365315415745 < sym__0___45_4166143365315415745 && (otherRec.sym__0__3207630749989215602 < sym__0__3207630749989215602 && (otherRec.sym__0__5395374455822132186 < sym__0__5395374455822132186 && (otherRec.sym__0___45_7225830269819405580 < sym__0___45_7225830269819405580 && (otherRec.sym__0__8991430536808361215 < sym__0__8991430536808361215 && (otherRec.sym__0__4583131517034717385 < sym__0__4583131517034717385 && (otherRec.sym__0__1284725072524796001 < sym__0__1284725072524796001 && (otherRec.sym__0__3933934698775098051 < sym__0__3933934698775098051 && (otherRec.sym__0__3693867617571270668 < sym__0__3693867617571270668 && (otherRec.sym__0__3068847290209443605 < sym__0__3068847290209443605 && (otherRec.sym__0___45_7777800476538033268 < sym__0___45_7777800476538033268 && (otherRec.sym__0___45_1578705594223344318 < sym__0___45_1578705594223344318 && (otherRec.sym__0__4948472385509363425 < sym__0__4948472385509363425 && (otherRec.sym__0__3673553332159180977 < sym__0__3673553332159180977 && (otherRec.sym__0__1218627844997812479 < sym__0__1218627844997812479 && (otherRec.sym__0___45_8294279676831449803 < sym__0___45_8294279676831449803 && (otherRec.sym__0___45_6984436199184448105 < sym__0___45_6984436199184448105 && (otherRec.sym__0___45_6848192209483325989 < sym__0___45_6848192209483325989 && (otherRec.sym__0___45_9182405812039241464 < sym__0___45_9182405812039241464 && (otherRec.sym__0___45_3072739000951748362 < sym__0___45_3072739000951748362 && otherRec.sym__0__1424431170346100142 < sym__0__1424431170346100142)))))))))))))))))))))))))))))))));
  }
  bool operator ==(const Record17& otherRec) const{
    return (otherRec.sym__0__2237436879928175675 == sym__0__2237436879928175675 && (otherRec.sym__0__2611420850730996427 == sym__0__2611420850730996427 && (otherRec.sym__0__8580827633646556737 == sym__0__8580827633646556737 && (otherRec.sym__0__3902406656410734878 == sym__0__3902406656410734878 && (otherRec.sym__0___45_5891800234269918308 == sym__0___45_5891800234269918308 && (otherRec.sym__0__1538625698420293134 == sym__0__1538625698420293134 && (otherRec.sym__0___45_7770737979173508973 == sym__0___45_7770737979173508973 && (otherRec.sym__0___45_8493416926131562688 == sym__0___45_8493416926131562688 && (otherRec.sym__0___45_8523615618537444877 == sym__0___45_8523615618537444877 && (otherRec.sym__0__673904973748734491 == sym__0__673904973748734491 && (otherRec.sym__0___45_3380685964368961911 == sym__0___45_3380685964368961911 && (otherRec.sym__0___45_5904043406584142850 == sym__0___45_5904043406584142850 && (otherRec.sym__0__7179957875831373607 == sym__0__7179957875831373607 && (otherRec.sym__0___45_4166143365315415745 == sym__0___45_4166143365315415745 && (otherRec.sym__0__3207630749989215602 == sym__0__3207630749989215602 && (otherRec.sym__0__5395374455822132186 == sym__0__5395374455822132186 && (otherRec.sym__0___45_7225830269819405580 == sym__0___45_7225830269819405580 && (otherRec.sym__0__8991430536808361215 == sym__0__8991430536808361215 && (otherRec.sym__0__4583131517034717385 == sym__0__4583131517034717385 && (otherRec.sym__0__1284725072524796001 == sym__0__1284725072524796001 && (otherRec.sym__0__3933934698775098051 == sym__0__3933934698775098051 && (otherRec.sym__0__3693867617571270668 == sym__0__3693867617571270668 && (otherRec.sym__0__3068847290209443605 == sym__0__3068847290209443605 && (otherRec.sym__0___45_7777800476538033268 == sym__0___45_7777800476538033268 && (otherRec.sym__0___45_1578705594223344318 == sym__0___45_1578705594223344318 && (otherRec.sym__0__4948472385509363425 == sym__0__4948472385509363425 && (otherRec.sym__0__3673553332159180977 == sym__0__3673553332159180977 && (otherRec.sym__0__1218627844997812479 == sym__0__1218627844997812479 && (otherRec.sym__0___45_8294279676831449803 == sym__0___45_8294279676831449803 && (otherRec.sym__0___45_6984436199184448105 == sym__0___45_6984436199184448105 && (otherRec.sym__0___45_6848192209483325989 == sym__0___45_6848192209483325989 && (otherRec.sym__0___45_9182405812039241464 == sym__0___45_9182405812039241464 && (otherRec.sym__0___45_3072739000951748362 == sym__0___45_3072739000951748362 && otherRec.sym__0__1424431170346100142 == sym__0__1424431170346100142)))))))))))))))))))))))))))))))));
  }
  bool operator !=(const Record17& otherRec) const{
    return (otherRec.sym__0__2237436879928175675 != sym__0__2237436879928175675 || (otherRec.sym__0__2611420850730996427 != sym__0__2611420850730996427 || (otherRec.sym__0__8580827633646556737 != sym__0__8580827633646556737 || (otherRec.sym__0__3902406656410734878 != sym__0__3902406656410734878 || (otherRec.sym__0___45_5891800234269918308 != sym__0___45_5891800234269918308 || (otherRec.sym__0__1538625698420293134 != sym__0__1538625698420293134 || (otherRec.sym__0___45_7770737979173508973 != sym__0___45_7770737979173508973 || (otherRec.sym__0___45_8493416926131562688 != sym__0___45_8493416926131562688 || (otherRec.sym__0___45_8523615618537444877 != sym__0___45_8523615618537444877 || (otherRec.sym__0__673904973748734491 != sym__0__673904973748734491 || (otherRec.sym__0___45_3380685964368961911 != sym__0___45_3380685964368961911 || (otherRec.sym__0___45_5904043406584142850 != sym__0___45_5904043406584142850 || (otherRec.sym__0__7179957875831373607 != sym__0__7179957875831373607 || (otherRec.sym__0___45_4166143365315415745 != sym__0___45_4166143365315415745 || (otherRec.sym__0__3207630749989215602 != sym__0__3207630749989215602 || (otherRec.sym__0__5395374455822132186 != sym__0__5395374455822132186 || (otherRec.sym__0___45_7225830269819405580 != sym__0___45_7225830269819405580 || (otherRec.sym__0__8991430536808361215 != sym__0__8991430536808361215 || (otherRec.sym__0__4583131517034717385 != sym__0__4583131517034717385 || (otherRec.sym__0__1284725072524796001 != sym__0__1284725072524796001 || (otherRec.sym__0__3933934698775098051 != sym__0__3933934698775098051 || (otherRec.sym__0__3693867617571270668 != sym__0__3693867617571270668 || (otherRec.sym__0__3068847290209443605 != sym__0__3068847290209443605 || (otherRec.sym__0___45_7777800476538033268 != sym__0___45_7777800476538033268 || (otherRec.sym__0___45_1578705594223344318 != sym__0___45_1578705594223344318 || (otherRec.sym__0__4948472385509363425 != sym__0__4948472385509363425 || (otherRec.sym__0__3673553332159180977 != sym__0__3673553332159180977 || (otherRec.sym__0__1218627844997812479 != sym__0__1218627844997812479 || (otherRec.sym__0___45_8294279676831449803 != sym__0___45_8294279676831449803 || (otherRec.sym__0___45_6984436199184448105 != sym__0___45_6984436199184448105 || (otherRec.sym__0___45_6848192209483325989 != sym__0___45_6848192209483325989 || (otherRec.sym__0___45_9182405812039241464 != sym__0___45_9182405812039241464 || (otherRec.sym__0___45_3072739000951748362 != sym__0___45_3072739000951748362 || otherRec.sym__0__1424431170346100142 != sym__0__1424431170346100142)))))))))))))))))))))))))))))))));
  }
  unsigned sym__0__2237436879928175675;
  fluidb_string<18> sym__0__2611420850730996427;
  fluidb_string<9> sym__0__8580827633646556737;
  fluidb_string<9> sym__0__3902406656410734878;
  unsigned sym__0___45_5891800234269918308;
  unsigned sym__0__1538625698420293134;
  fluidb_string<7> sym__0___45_7770737979173508973;
  unsigned sym__0___45_8493416926131562688;
  unsigned sym__0___45_8523615618537444877;
  unsigned sym__0__673904973748734491;
  unsigned sym__0___45_3380685964368961911;
  unsigned sym__0___45_5904043406584142850;
  fluidb_string<15> sym__0__7179957875831373607;
  fluidb_string<2> sym__0___45_4166143365315415745;
  fluidb_string<2> sym__0__3207630749989215602;
  fluidb_string<2> sym__0__5395374455822132186;
  fluidb_string<2> sym__0___45_7225830269819405580;
  unsigned sym__0__8991430536808361215;
  int sym__0__4583131517034717385;
  unsigned sym__0__1284725072524796001;
  unsigned sym__0__3933934698775098051;
  unsigned sym__0__3693867617571270668;
  unsigned sym__0__3068847290209443605;
  fluidb_string<21> sym__0___45_7777800476538033268;
  unsigned sym__0___45_1578705594223344318;
  fluidb_string<10> sym__0__4948472385509363425;
  unsigned sym__0__3673553332159180977;
  double sym__0__1218627844997812479;
  unsigned sym__0___45_8294279676831449803;
  double sym__0___45_6984436199184448105;
  unsigned sym__0___45_6848192209483325989;
  unsigned sym__0___45_9182405812039241464;
  double sym__0___45_3072739000951748362;
  fluidb_string<13> sym__0__1424431170346100142;
 private:
};


class Record2 {
 public:
  Record2(unsigned __sym__0___45_8202918452351256080, fluidb_string<18> __sym__0__3217182456213118816, fluidb_string<9> __sym__0___45_587373445859874706, fluidb_string<9> __sym__0___45_8346128157561074223, unsigned __sym__0__2979561800187053807, unsigned __sym__0___45_899573490466067231, fluidb_string<7> __sym__0___45_2706395517471750200, unsigned __sym__0___45_6067709637706619093, unsigned __sym__0__1141311422513456040, unsigned __sym__0___45_5223888065355534256, unsigned __sym__0__2672047382496516406, unsigned __sym__0__4932263286160334513, fluidb_string<15> __sym__0__4463721534751519028, fluidb_string<2> __sym__0___45_4864066414314726068, fluidb_string<2> __sym__0__937958105294580029, fluidb_string<2> __sym__0___45_1982623509189166171, fluidb_string<2> __sym__0__4762673478997720679, unsigned __sym__0__7588001997570016652, int __sym__0___45_4747443848713997322, unsigned __sym__0___45_3257188284918960498, unsigned __sym__0__1617172947989036440, unsigned __sym__0___45_810220525799073153, unsigned __sym__0__8132341549271366762, fluidb_string<21> __sym__0__1394287910975083263, unsigned __sym__0__5644261439804640685, fluidb_string<10> __sym__0__9057335116627787790, unsigned __sym__0__2339428003903657470, double __sym__0__3371773490934440332, unsigned __sym__0___45_1286955585961260406, double __sym__0___45_1657469713282332988, unsigned __sym__0__816781160548213904, unsigned __sym__0__8401801716519894867, double __sym__0__5709933202258624457, fluidb_string<13> __sym__0__7900257115361061889) : sym__0___45_8202918452351256080(__sym__0___45_8202918452351256080), sym__0__3217182456213118816(__sym__0__3217182456213118816), sym__0___45_587373445859874706(__sym__0___45_587373445859874706), sym__0___45_8346128157561074223(__sym__0___45_8346128157561074223), sym__0__2979561800187053807(__sym__0__2979561800187053807), sym__0___45_899573490466067231(__sym__0___45_899573490466067231), sym__0___45_2706395517471750200(__sym__0___45_2706395517471750200), sym__0___45_6067709637706619093(__sym__0___45_6067709637706619093), sym__0__1141311422513456040(__sym__0__1141311422513456040), sym__0___45_5223888065355534256(__sym__0___45_5223888065355534256), sym__0__2672047382496516406(__sym__0__2672047382496516406), sym__0__4932263286160334513(__sym__0__4932263286160334513), sym__0__4463721534751519028(__sym__0__4463721534751519028), sym__0___45_4864066414314726068(__sym__0___45_4864066414314726068), sym__0__937958105294580029(__sym__0__937958105294580029), sym__0___45_1982623509189166171(__sym__0___45_1982623509189166171), sym__0__4762673478997720679(__sym__0__4762673478997720679), sym__0__7588001997570016652(__sym__0__7588001997570016652), sym__0___45_4747443848713997322(__sym__0___45_4747443848713997322), sym__0___45_3257188284918960498(__sym__0___45_3257188284918960498), sym__0__1617172947989036440(__sym__0__1617172947989036440), sym__0___45_810220525799073153(__sym__0___45_810220525799073153), sym__0__8132341549271366762(__sym__0__8132341549271366762), sym__0__1394287910975083263(__sym__0__1394287910975083263), sym__0__5644261439804640685(__sym__0__5644261439804640685), sym__0__9057335116627787790(__sym__0__9057335116627787790), sym__0__2339428003903657470(__sym__0__2339428003903657470), sym__0__3371773490934440332(__sym__0__3371773490934440332), sym__0___45_1286955585961260406(__sym__0___45_1286955585961260406), sym__0___45_1657469713282332988(__sym__0___45_1657469713282332988), sym__0__816781160548213904(__sym__0__816781160548213904), sym__0__8401801716519894867(__sym__0__8401801716519894867), sym__0__5709933202258624457(__sym__0__5709933202258624457), sym__0__7900257115361061889(__sym__0__7900257115361061889)
  {
  }
  Record2() 
  {
  }
  std::string show() const{
    std::stringstream o;
    o << sym__0___45_8202918452351256080 << " | " << arrToString(sym__0__3217182456213118816) << " | " << arrToString(sym__0___45_587373445859874706) << " | " << arrToString(sym__0___45_8346128157561074223) << " | " << sym__0__2979561800187053807 << " | " << sym__0___45_899573490466067231 << " | " << arrToString(sym__0___45_2706395517471750200) << " | " << sym__0___45_6067709637706619093 << " | " << sym__0__1141311422513456040 << " | " << sym__0___45_5223888065355534256 << " | " << sym__0__2672047382496516406 << " | " << sym__0__4932263286160334513 << " | " << arrToString(sym__0__4463721534751519028) << " | " << arrToString(sym__0___45_4864066414314726068) << " | " << arrToString(sym__0__937958105294580029) << " | " << arrToString(sym__0___45_1982623509189166171) << " | " << arrToString(sym__0__4762673478997720679) << " | " << sym__0__7588001997570016652 << " | " << sym__0___45_4747443848713997322 << " | " << sym__0___45_3257188284918960498 << " | " << sym__0__1617172947989036440 << " | " << sym__0___45_810220525799073153 << " | " << sym__0__8132341549271366762 << " | " << arrToString(sym__0__1394287910975083263) << " | " << sym__0__5644261439804640685 << " | " << arrToString(sym__0__9057335116627787790) << " | " << sym__0__2339428003903657470 << " | " << sym__0__3371773490934440332 << " | " << sym__0___45_1286955585961260406 << " | " << sym__0___45_1657469713282332988 << " | " << sym__0__816781160548213904 << " | " << sym__0__8401801716519894867 << " | " << sym__0__5709933202258624457 << " | " << arrToString(sym__0__7900257115361061889);
    return o.str();
  }
  bool operator <(const Record2& otherRec) const{
    return (otherRec.sym__0___45_8202918452351256080 < sym__0___45_8202918452351256080 && (otherRec.sym__0__3217182456213118816 < sym__0__3217182456213118816 && (otherRec.sym__0___45_587373445859874706 < sym__0___45_587373445859874706 && (otherRec.sym__0___45_8346128157561074223 < sym__0___45_8346128157561074223 && (otherRec.sym__0__2979561800187053807 < sym__0__2979561800187053807 && (otherRec.sym__0___45_899573490466067231 < sym__0___45_899573490466067231 && (otherRec.sym__0___45_2706395517471750200 < sym__0___45_2706395517471750200 && (otherRec.sym__0___45_6067709637706619093 < sym__0___45_6067709637706619093 && (otherRec.sym__0__1141311422513456040 < sym__0__1141311422513456040 && (otherRec.sym__0___45_5223888065355534256 < sym__0___45_5223888065355534256 && (otherRec.sym__0__2672047382496516406 < sym__0__2672047382496516406 && (otherRec.sym__0__4932263286160334513 < sym__0__4932263286160334513 && (otherRec.sym__0__4463721534751519028 < sym__0__4463721534751519028 && (otherRec.sym__0___45_4864066414314726068 < sym__0___45_4864066414314726068 && (otherRec.sym__0__937958105294580029 < sym__0__937958105294580029 && (otherRec.sym__0___45_1982623509189166171 < sym__0___45_1982623509189166171 && (otherRec.sym__0__4762673478997720679 < sym__0__4762673478997720679 && (otherRec.sym__0__7588001997570016652 < sym__0__7588001997570016652 && (otherRec.sym__0___45_4747443848713997322 < sym__0___45_4747443848713997322 && (otherRec.sym__0___45_3257188284918960498 < sym__0___45_3257188284918960498 && (otherRec.sym__0__1617172947989036440 < sym__0__1617172947989036440 && (otherRec.sym__0___45_810220525799073153 < sym__0___45_810220525799073153 && (otherRec.sym__0__8132341549271366762 < sym__0__8132341549271366762 && (otherRec.sym__0__1394287910975083263 < sym__0__1394287910975083263 && (otherRec.sym__0__5644261439804640685 < sym__0__5644261439804640685 && (otherRec.sym__0__9057335116627787790 < sym__0__9057335116627787790 && (otherRec.sym__0__2339428003903657470 < sym__0__2339428003903657470 && (otherRec.sym__0__3371773490934440332 < sym__0__3371773490934440332 && (otherRec.sym__0___45_1286955585961260406 < sym__0___45_1286955585961260406 && (otherRec.sym__0___45_1657469713282332988 < sym__0___45_1657469713282332988 && (otherRec.sym__0__816781160548213904 < sym__0__816781160548213904 && (otherRec.sym__0__8401801716519894867 < sym__0__8401801716519894867 && (otherRec.sym__0__5709933202258624457 < sym__0__5709933202258624457 && otherRec.sym__0__7900257115361061889 < sym__0__7900257115361061889)))))))))))))))))))))))))))))))));
  }
  bool operator ==(const Record2& otherRec) const{
    return (otherRec.sym__0___45_8202918452351256080 == sym__0___45_8202918452351256080 && (otherRec.sym__0__3217182456213118816 == sym__0__3217182456213118816 && (otherRec.sym__0___45_587373445859874706 == sym__0___45_587373445859874706 && (otherRec.sym__0___45_8346128157561074223 == sym__0___45_8346128157561074223 && (otherRec.sym__0__2979561800187053807 == sym__0__2979561800187053807 && (otherRec.sym__0___45_899573490466067231 == sym__0___45_899573490466067231 && (otherRec.sym__0___45_2706395517471750200 == sym__0___45_2706395517471750200 && (otherRec.sym__0___45_6067709637706619093 == sym__0___45_6067709637706619093 && (otherRec.sym__0__1141311422513456040 == sym__0__1141311422513456040 && (otherRec.sym__0___45_5223888065355534256 == sym__0___45_5223888065355534256 && (otherRec.sym__0__2672047382496516406 == sym__0__2672047382496516406 && (otherRec.sym__0__4932263286160334513 == sym__0__4932263286160334513 && (otherRec.sym__0__4463721534751519028 == sym__0__4463721534751519028 && (otherRec.sym__0___45_4864066414314726068 == sym__0___45_4864066414314726068 && (otherRec.sym__0__937958105294580029 == sym__0__937958105294580029 && (otherRec.sym__0___45_1982623509189166171 == sym__0___45_1982623509189166171 && (otherRec.sym__0__4762673478997720679 == sym__0__4762673478997720679 && (otherRec.sym__0__7588001997570016652 == sym__0__7588001997570016652 && (otherRec.sym__0___45_4747443848713997322 == sym__0___45_4747443848713997322 && (otherRec.sym__0___45_3257188284918960498 == sym__0___45_3257188284918960498 && (otherRec.sym__0__1617172947989036440 == sym__0__1617172947989036440 && (otherRec.sym__0___45_810220525799073153 == sym__0___45_810220525799073153 && (otherRec.sym__0__8132341549271366762 == sym__0__8132341549271366762 && (otherRec.sym__0__1394287910975083263 == sym__0__1394287910975083263 && (otherRec.sym__0__5644261439804640685 == sym__0__5644261439804640685 && (otherRec.sym__0__9057335116627787790 == sym__0__9057335116627787790 && (otherRec.sym__0__2339428003903657470 == sym__0__2339428003903657470 && (otherRec.sym__0__3371773490934440332 == sym__0__3371773490934440332 && (otherRec.sym__0___45_1286955585961260406 == sym__0___45_1286955585961260406 && (otherRec.sym__0___45_1657469713282332988 == sym__0___45_1657469713282332988 && (otherRec.sym__0__816781160548213904 == sym__0__816781160548213904 && (otherRec.sym__0__8401801716519894867 == sym__0__8401801716519894867 && (otherRec.sym__0__5709933202258624457 == sym__0__5709933202258624457 && otherRec.sym__0__7900257115361061889 == sym__0__7900257115361061889)))))))))))))))))))))))))))))))));
  }
  bool operator !=(const Record2& otherRec) const{
    return (otherRec.sym__0___45_8202918452351256080 != sym__0___45_8202918452351256080 || (otherRec.sym__0__3217182456213118816 != sym__0__3217182456213118816 || (otherRec.sym__0___45_587373445859874706 != sym__0___45_587373445859874706 || (otherRec.sym__0___45_8346128157561074223 != sym__0___45_8346128157561074223 || (otherRec.sym__0__2979561800187053807 != sym__0__2979561800187053807 || (otherRec.sym__0___45_899573490466067231 != sym__0___45_899573490466067231 || (otherRec.sym__0___45_2706395517471750200 != sym__0___45_2706395517471750200 || (otherRec.sym__0___45_6067709637706619093 != sym__0___45_6067709637706619093 || (otherRec.sym__0__1141311422513456040 != sym__0__1141311422513456040 || (otherRec.sym__0___45_5223888065355534256 != sym__0___45_5223888065355534256 || (otherRec.sym__0__2672047382496516406 != sym__0__2672047382496516406 || (otherRec.sym__0__4932263286160334513 != sym__0__4932263286160334513 || (otherRec.sym__0__4463721534751519028 != sym__0__4463721534751519028 || (otherRec.sym__0___45_4864066414314726068 != sym__0___45_4864066414314726068 || (otherRec.sym__0__937958105294580029 != sym__0__937958105294580029 || (otherRec.sym__0___45_1982623509189166171 != sym__0___45_1982623509189166171 || (otherRec.sym__0__4762673478997720679 != sym__0__4762673478997720679 || (otherRec.sym__0__7588001997570016652 != sym__0__7588001997570016652 || (otherRec.sym__0___45_4747443848713997322 != sym__0___45_4747443848713997322 || (otherRec.sym__0___45_3257188284918960498 != sym__0___45_3257188284918960498 || (otherRec.sym__0__1617172947989036440 != sym__0__1617172947989036440 || (otherRec.sym__0___45_810220525799073153 != sym__0___45_810220525799073153 || (otherRec.sym__0__8132341549271366762 != sym__0__8132341549271366762 || (otherRec.sym__0__1394287910975083263 != sym__0__1394287910975083263 || (otherRec.sym__0__5644261439804640685 != sym__0__5644261439804640685 || (otherRec.sym__0__9057335116627787790 != sym__0__9057335116627787790 || (otherRec.sym__0__2339428003903657470 != sym__0__2339428003903657470 || (otherRec.sym__0__3371773490934440332 != sym__0__3371773490934440332 || (otherRec.sym__0___45_1286955585961260406 != sym__0___45_1286955585961260406 || (otherRec.sym__0___45_1657469713282332988 != sym__0___45_1657469713282332988 || (otherRec.sym__0__816781160548213904 != sym__0__816781160548213904 || (otherRec.sym__0__8401801716519894867 != sym__0__8401801716519894867 || (otherRec.sym__0__5709933202258624457 != sym__0__5709933202258624457 || otherRec.sym__0__7900257115361061889 != sym__0__7900257115361061889)))))))))))))))))))))))))))))))));
  }
  unsigned sym__0___45_8202918452351256080;
  fluidb_string<18> sym__0__3217182456213118816;
  fluidb_string<9> sym__0___45_587373445859874706;
  fluidb_string<9> sym__0___45_8346128157561074223;
  unsigned sym__0__2979561800187053807;
  unsigned sym__0___45_899573490466067231;
  fluidb_string<7> sym__0___45_2706395517471750200;
  unsigned sym__0___45_6067709637706619093;
  unsigned sym__0__1141311422513456040;
  unsigned sym__0___45_5223888065355534256;
  unsigned sym__0__2672047382496516406;
  unsigned sym__0__4932263286160334513;
  fluidb_string<15> sym__0__4463721534751519028;
  fluidb_string<2> sym__0___45_4864066414314726068;
  fluidb_string<2> sym__0__937958105294580029;
  fluidb_string<2> sym__0___45_1982623509189166171;
  fluidb_string<2> sym__0__4762673478997720679;
  unsigned sym__0__7588001997570016652;
  int sym__0___45_4747443848713997322;
  unsigned sym__0___45_3257188284918960498;
  unsigned sym__0__1617172947989036440;
  unsigned sym__0___45_810220525799073153;
  unsigned sym__0__8132341549271366762;
  fluidb_string<21> sym__0__1394287910975083263;
  unsigned sym__0__5644261439804640685;
  fluidb_string<10> sym__0__9057335116627787790;
  unsigned sym__0__2339428003903657470;
  double sym__0__3371773490934440332;
  unsigned sym__0___45_1286955585961260406;
  double sym__0___45_1657469713282332988;
  unsigned sym__0__816781160548213904;
  unsigned sym__0__8401801716519894867;
  double sym__0__5709933202258624457;
  fluidb_string<13> sym__0__7900257115361061889;
 private:
};


class Record8 {
 public:
  Record8(unsigned __sym__0__2102316481828394123, fluidb_string<25> __sym__0__1780257040091145452, fluidb_string<40> __sym__0__3109939911660640430, fluidb_string<16> __sym__0___45_2175199227983174320, fluidb_string<16> __sym__0__2274992661292194562, fluidb_string<13> __sym__0___45_52536403880094569, fluidb_string<15> __sym__0__8474116574285927276, unsigned __sym__0__1835503384076924528, int __sym__0__586412267723269786, unsigned __sym__0__1353367320182642978, unsigned __sym__0___45_6351222752813626636, unsigned __sym__0___45_805067702695824989, unsigned __sym__0__914509637812701046, fluidb_string<21> __sym__0__7895450651221174051, unsigned __sym__0__5942285589324576545, fluidb_string<10> __sym__0__3979382234526804898, unsigned __sym__0___45_6103522369909819246, double __sym__0__1873148039180761712, unsigned __sym__0__1430551526674366102, double __sym__0__1048818672001592248, unsigned __sym__0__5723353836447658492, unsigned __sym__0___45_2233273278156881105, double __sym__0___45_1120880788595637835, fluidb_string<13> __sym__0___45_6361490230660137987, unsigned __sym__0___45_7131249874638266788, fluidb_string<18> __sym__0__7265729621635359692, fluidb_string<9> __sym__0___45_2986035740159621374, fluidb_string<9> __sym__0__5081664509798388941, unsigned __sym__0___45_8518596434939314413, unsigned __sym__0__1988221653138390749, fluidb_string<7> __sym__0___45_8801377200944175068, unsigned __sym__0___45_4634183629139578121, unsigned __sym__0__806472603637564420, unsigned __sym__0__1725829484083430844, unsigned __sym__0___45_5279274827282678566, unsigned __sym__0___45_9129247388617675603, fluidb_string<15> __sym__0__1232225844204183080, fluidb_string<2> __sym__0__9184663680502119984, fluidb_string<2> __sym__0___45_9023997483659527503, fluidb_string<2> __sym__0___45_1026604631201554135, fluidb_string<2> __sym__0___45_7189754320372197989) : sym__0__2102316481828394123(__sym__0__2102316481828394123), sym__0__1780257040091145452(__sym__0__1780257040091145452), sym__0__3109939911660640430(__sym__0__3109939911660640430), sym__0___45_2175199227983174320(__sym__0___45_2175199227983174320), sym__0__2274992661292194562(__sym__0__2274992661292194562), sym__0___45_52536403880094569(__sym__0___45_52536403880094569), sym__0__8474116574285927276(__sym__0__8474116574285927276), sym__0__1835503384076924528(__sym__0__1835503384076924528), sym__0__586412267723269786(__sym__0__586412267723269786), sym__0__1353367320182642978(__sym__0__1353367320182642978), sym__0___45_6351222752813626636(__sym__0___45_6351222752813626636), sym__0___45_805067702695824989(__sym__0___45_805067702695824989), sym__0__914509637812701046(__sym__0__914509637812701046), sym__0__7895450651221174051(__sym__0__7895450651221174051), sym__0__5942285589324576545(__sym__0__5942285589324576545), sym__0__3979382234526804898(__sym__0__3979382234526804898), sym__0___45_6103522369909819246(__sym__0___45_6103522369909819246), sym__0__1873148039180761712(__sym__0__1873148039180761712), sym__0__1430551526674366102(__sym__0__1430551526674366102), sym__0__1048818672001592248(__sym__0__1048818672001592248), sym__0__5723353836447658492(__sym__0__5723353836447658492), sym__0___45_2233273278156881105(__sym__0___45_2233273278156881105), sym__0___45_1120880788595637835(__sym__0___45_1120880788595637835), sym__0___45_6361490230660137987(__sym__0___45_6361490230660137987), sym__0___45_7131249874638266788(__sym__0___45_7131249874638266788), sym__0__7265729621635359692(__sym__0__7265729621635359692), sym__0___45_2986035740159621374(__sym__0___45_2986035740159621374), sym__0__5081664509798388941(__sym__0__5081664509798388941), sym__0___45_8518596434939314413(__sym__0___45_8518596434939314413), sym__0__1988221653138390749(__sym__0__1988221653138390749), sym__0___45_8801377200944175068(__sym__0___45_8801377200944175068), sym__0___45_4634183629139578121(__sym__0___45_4634183629139578121), sym__0__806472603637564420(__sym__0__806472603637564420), sym__0__1725829484083430844(__sym__0__1725829484083430844), sym__0___45_5279274827282678566(__sym__0___45_5279274827282678566), sym__0___45_9129247388617675603(__sym__0___45_9129247388617675603), sym__0__1232225844204183080(__sym__0__1232225844204183080), sym__0__9184663680502119984(__sym__0__9184663680502119984), sym__0___45_9023997483659527503(__sym__0___45_9023997483659527503), sym__0___45_1026604631201554135(__sym__0___45_1026604631201554135), sym__0___45_7189754320372197989(__sym__0___45_7189754320372197989)
  {
  }
  Record8() 
  {
  }
  std::string show() const{
    std::stringstream o;
    o << sym__0__2102316481828394123 << " | " << arrToString(sym__0__1780257040091145452) << " | " << arrToString(sym__0__3109939911660640430) << " | " << arrToString(sym__0___45_2175199227983174320) << " | " << arrToString(sym__0__2274992661292194562) << " | " << arrToString(sym__0___45_52536403880094569) << " | " << arrToString(sym__0__8474116574285927276) << " | " << sym__0__1835503384076924528 << " | " << sym__0__586412267723269786 << " | " << sym__0__1353367320182642978 << " | " << sym__0___45_6351222752813626636 << " | " << sym__0___45_805067702695824989 << " | " << sym__0__914509637812701046 << " | " << arrToString(sym__0__7895450651221174051) << " | " << sym__0__5942285589324576545 << " | " << arrToString(sym__0__3979382234526804898) << " | " << sym__0___45_6103522369909819246 << " | " << sym__0__1873148039180761712 << " | " << sym__0__1430551526674366102 << " | " << sym__0__1048818672001592248 << " | " << sym__0__5723353836447658492 << " | " << sym__0___45_2233273278156881105 << " | " << sym__0___45_1120880788595637835 << " | " << arrToString(sym__0___45_6361490230660137987) << " | " << sym__0___45_7131249874638266788 << " | " << arrToString(sym__0__7265729621635359692) << " | " << arrToString(sym__0___45_2986035740159621374) << " | " << arrToString(sym__0__5081664509798388941) << " | " << sym__0___45_8518596434939314413 << " | " << sym__0__1988221653138390749 << " | " << arrToString(sym__0___45_8801377200944175068) << " | " << sym__0___45_4634183629139578121 << " | " << sym__0__806472603637564420 << " | " << sym__0__1725829484083430844 << " | " << sym__0___45_5279274827282678566 << " | " << sym__0___45_9129247388617675603 << " | " << arrToString(sym__0__1232225844204183080) << " | " << arrToString(sym__0__9184663680502119984) << " | " << arrToString(sym__0___45_9023997483659527503) << " | " << arrToString(sym__0___45_1026604631201554135) << " | " << arrToString(sym__0___45_7189754320372197989);
    return o.str();
  }
  bool operator <(const Record8& otherRec) const{
    return (otherRec.sym__0__2102316481828394123 < sym__0__2102316481828394123 && (otherRec.sym__0__1780257040091145452 < sym__0__1780257040091145452 && (otherRec.sym__0__3109939911660640430 < sym__0__3109939911660640430 && (otherRec.sym__0___45_2175199227983174320 < sym__0___45_2175199227983174320 && (otherRec.sym__0__2274992661292194562 < sym__0__2274992661292194562 && (otherRec.sym__0___45_52536403880094569 < sym__0___45_52536403880094569 && (otherRec.sym__0__8474116574285927276 < sym__0__8474116574285927276 && (otherRec.sym__0__1835503384076924528 < sym__0__1835503384076924528 && (otherRec.sym__0__586412267723269786 < sym__0__586412267723269786 && (otherRec.sym__0__1353367320182642978 < sym__0__1353367320182642978 && (otherRec.sym__0___45_6351222752813626636 < sym__0___45_6351222752813626636 && (otherRec.sym__0___45_805067702695824989 < sym__0___45_805067702695824989 && (otherRec.sym__0__914509637812701046 < sym__0__914509637812701046 && (otherRec.sym__0__7895450651221174051 < sym__0__7895450651221174051 && (otherRec.sym__0__5942285589324576545 < sym__0__5942285589324576545 && (otherRec.sym__0__3979382234526804898 < sym__0__3979382234526804898 && (otherRec.sym__0___45_6103522369909819246 < sym__0___45_6103522369909819246 && (otherRec.sym__0__1873148039180761712 < sym__0__1873148039180761712 && (otherRec.sym__0__1430551526674366102 < sym__0__1430551526674366102 && (otherRec.sym__0__1048818672001592248 < sym__0__1048818672001592248 && (otherRec.sym__0__5723353836447658492 < sym__0__5723353836447658492 && (otherRec.sym__0___45_2233273278156881105 < sym__0___45_2233273278156881105 && (otherRec.sym__0___45_1120880788595637835 < sym__0___45_1120880788595637835 && (otherRec.sym__0___45_6361490230660137987 < sym__0___45_6361490230660137987 && (otherRec.sym__0___45_7131249874638266788 < sym__0___45_7131249874638266788 && (otherRec.sym__0__7265729621635359692 < sym__0__7265729621635359692 && (otherRec.sym__0___45_2986035740159621374 < sym__0___45_2986035740159621374 && (otherRec.sym__0__5081664509798388941 < sym__0__5081664509798388941 && (otherRec.sym__0___45_8518596434939314413 < sym__0___45_8518596434939314413 && (otherRec.sym__0__1988221653138390749 < sym__0__1988221653138390749 && (otherRec.sym__0___45_8801377200944175068 < sym__0___45_8801377200944175068 && (otherRec.sym__0___45_4634183629139578121 < sym__0___45_4634183629139578121 && (otherRec.sym__0__806472603637564420 < sym__0__806472603637564420 && (otherRec.sym__0__1725829484083430844 < sym__0__1725829484083430844 && (otherRec.sym__0___45_5279274827282678566 < sym__0___45_5279274827282678566 && (otherRec.sym__0___45_9129247388617675603 < sym__0___45_9129247388617675603 && (otherRec.sym__0__1232225844204183080 < sym__0__1232225844204183080 && (otherRec.sym__0__9184663680502119984 < sym__0__9184663680502119984 && (otherRec.sym__0___45_9023997483659527503 < sym__0___45_9023997483659527503 && (otherRec.sym__0___45_1026604631201554135 < sym__0___45_1026604631201554135 && otherRec.sym__0___45_7189754320372197989 < sym__0___45_7189754320372197989))))))))))))))))))))))))))))))))))))))));
  }
  bool operator ==(const Record8& otherRec) const{
    return (otherRec.sym__0__2102316481828394123 == sym__0__2102316481828394123 && (otherRec.sym__0__1780257040091145452 == sym__0__1780257040091145452 && (otherRec.sym__0__3109939911660640430 == sym__0__3109939911660640430 && (otherRec.sym__0___45_2175199227983174320 == sym__0___45_2175199227983174320 && (otherRec.sym__0__2274992661292194562 == sym__0__2274992661292194562 && (otherRec.sym__0___45_52536403880094569 == sym__0___45_52536403880094569 && (otherRec.sym__0__8474116574285927276 == sym__0__8474116574285927276 && (otherRec.sym__0__1835503384076924528 == sym__0__1835503384076924528 && (otherRec.sym__0__586412267723269786 == sym__0__586412267723269786 && (otherRec.sym__0__1353367320182642978 == sym__0__1353367320182642978 && (otherRec.sym__0___45_6351222752813626636 == sym__0___45_6351222752813626636 && (otherRec.sym__0___45_805067702695824989 == sym__0___45_805067702695824989 && (otherRec.sym__0__914509637812701046 == sym__0__914509637812701046 && (otherRec.sym__0__7895450651221174051 == sym__0__7895450651221174051 && (otherRec.sym__0__5942285589324576545 == sym__0__5942285589324576545 && (otherRec.sym__0__3979382234526804898 == sym__0__3979382234526804898 && (otherRec.sym__0___45_6103522369909819246 == sym__0___45_6103522369909819246 && (otherRec.sym__0__1873148039180761712 == sym__0__1873148039180761712 && (otherRec.sym__0__1430551526674366102 == sym__0__1430551526674366102 && (otherRec.sym__0__1048818672001592248 == sym__0__1048818672001592248 && (otherRec.sym__0__5723353836447658492 == sym__0__5723353836447658492 && (otherRec.sym__0___45_2233273278156881105 == sym__0___45_2233273278156881105 && (otherRec.sym__0___45_1120880788595637835 == sym__0___45_1120880788595637835 && (otherRec.sym__0___45_6361490230660137987 == sym__0___45_6361490230660137987 && (otherRec.sym__0___45_7131249874638266788 == sym__0___45_7131249874638266788 && (otherRec.sym__0__7265729621635359692 == sym__0__7265729621635359692 && (otherRec.sym__0___45_2986035740159621374 == sym__0___45_2986035740159621374 && (otherRec.sym__0__5081664509798388941 == sym__0__5081664509798388941 && (otherRec.sym__0___45_8518596434939314413 == sym__0___45_8518596434939314413 && (otherRec.sym__0__1988221653138390749 == sym__0__1988221653138390749 && (otherRec.sym__0___45_8801377200944175068 == sym__0___45_8801377200944175068 && (otherRec.sym__0___45_4634183629139578121 == sym__0___45_4634183629139578121 && (otherRec.sym__0__806472603637564420 == sym__0__806472603637564420 && (otherRec.sym__0__1725829484083430844 == sym__0__1725829484083430844 && (otherRec.sym__0___45_5279274827282678566 == sym__0___45_5279274827282678566 && (otherRec.sym__0___45_9129247388617675603 == sym__0___45_9129247388617675603 && (otherRec.sym__0__1232225844204183080 == sym__0__1232225844204183080 && (otherRec.sym__0__9184663680502119984 == sym__0__9184663680502119984 && (otherRec.sym__0___45_9023997483659527503 == sym__0___45_9023997483659527503 && (otherRec.sym__0___45_1026604631201554135 == sym__0___45_1026604631201554135 && otherRec.sym__0___45_7189754320372197989 == sym__0___45_7189754320372197989))))))))))))))))))))))))))))))))))))))));
  }
  bool operator !=(const Record8& otherRec) const{
    return (otherRec.sym__0__2102316481828394123 != sym__0__2102316481828394123 || (otherRec.sym__0__1780257040091145452 != sym__0__1780257040091145452 || (otherRec.sym__0__3109939911660640430 != sym__0__3109939911660640430 || (otherRec.sym__0___45_2175199227983174320 != sym__0___45_2175199227983174320 || (otherRec.sym__0__2274992661292194562 != sym__0__2274992661292194562 || (otherRec.sym__0___45_52536403880094569 != sym__0___45_52536403880094569 || (otherRec.sym__0__8474116574285927276 != sym__0__8474116574285927276 || (otherRec.sym__0__1835503384076924528 != sym__0__1835503384076924528 || (otherRec.sym__0__586412267723269786 != sym__0__586412267723269786 || (otherRec.sym__0__1353367320182642978 != sym__0__1353367320182642978 || (otherRec.sym__0___45_6351222752813626636 != sym__0___45_6351222752813626636 || (otherRec.sym__0___45_805067702695824989 != sym__0___45_805067702695824989 || (otherRec.sym__0__914509637812701046 != sym__0__914509637812701046 || (otherRec.sym__0__7895450651221174051 != sym__0__7895450651221174051 || (otherRec.sym__0__5942285589324576545 != sym__0__5942285589324576545 || (otherRec.sym__0__3979382234526804898 != sym__0__3979382234526804898 || (otherRec.sym__0___45_6103522369909819246 != sym__0___45_6103522369909819246 || (otherRec.sym__0__1873148039180761712 != sym__0__1873148039180761712 || (otherRec.sym__0__1430551526674366102 != sym__0__1430551526674366102 || (otherRec.sym__0__1048818672001592248 != sym__0__1048818672001592248 || (otherRec.sym__0__5723353836447658492 != sym__0__5723353836447658492 || (otherRec.sym__0___45_2233273278156881105 != sym__0___45_2233273278156881105 || (otherRec.sym__0___45_1120880788595637835 != sym__0___45_1120880788595637835 || (otherRec.sym__0___45_6361490230660137987 != sym__0___45_6361490230660137987 || (otherRec.sym__0___45_7131249874638266788 != sym__0___45_7131249874638266788 || (otherRec.sym__0__7265729621635359692 != sym__0__7265729621635359692 || (otherRec.sym__0___45_2986035740159621374 != sym__0___45_2986035740159621374 || (otherRec.sym__0__5081664509798388941 != sym__0__5081664509798388941 || (otherRec.sym__0___45_8518596434939314413 != sym__0___45_8518596434939314413 || (otherRec.sym__0__1988221653138390749 != sym__0__1988221653138390749 || (otherRec.sym__0___45_8801377200944175068 != sym__0___45_8801377200944175068 || (otherRec.sym__0___45_4634183629139578121 != sym__0___45_4634183629139578121 || (otherRec.sym__0__806472603637564420 != sym__0__806472603637564420 || (otherRec.sym__0__1725829484083430844 != sym__0__1725829484083430844 || (otherRec.sym__0___45_5279274827282678566 != sym__0___45_5279274827282678566 || (otherRec.sym__0___45_9129247388617675603 != sym__0___45_9129247388617675603 || (otherRec.sym__0__1232225844204183080 != sym__0__1232225844204183080 || (otherRec.sym__0__9184663680502119984 != sym__0__9184663680502119984 || (otherRec.sym__0___45_9023997483659527503 != sym__0___45_9023997483659527503 || (otherRec.sym__0___45_1026604631201554135 != sym__0___45_1026604631201554135 || otherRec.sym__0___45_7189754320372197989 != sym__0___45_7189754320372197989))))))))))))))))))))))))))))))))))))))));
  }
  unsigned sym__0__2102316481828394123;
  fluidb_string<25> sym__0__1780257040091145452;
  fluidb_string<40> sym__0__3109939911660640430;
  fluidb_string<16> sym__0___45_2175199227983174320;
  fluidb_string<16> sym__0__2274992661292194562;
  fluidb_string<13> sym__0___45_52536403880094569;
  fluidb_string<15> sym__0__8474116574285927276;
  unsigned sym__0__1835503384076924528;
  int sym__0__586412267723269786;
  unsigned sym__0__1353367320182642978;
  unsigned sym__0___45_6351222752813626636;
  unsigned sym__0___45_805067702695824989;
  unsigned sym__0__914509637812701046;
  fluidb_string<21> sym__0__7895450651221174051;
  unsigned sym__0__5942285589324576545;
  fluidb_string<10> sym__0__3979382234526804898;
  unsigned sym__0___45_6103522369909819246;
  double sym__0__1873148039180761712;
  unsigned sym__0__1430551526674366102;
  double sym__0__1048818672001592248;
  unsigned sym__0__5723353836447658492;
  unsigned sym__0___45_2233273278156881105;
  double sym__0___45_1120880788595637835;
  fluidb_string<13> sym__0___45_6361490230660137987;
  unsigned sym__0___45_7131249874638266788;
  fluidb_string<18> sym__0__7265729621635359692;
  fluidb_string<9> sym__0___45_2986035740159621374;
  fluidb_string<9> sym__0__5081664509798388941;
  unsigned sym__0___45_8518596434939314413;
  unsigned sym__0__1988221653138390749;
  fluidb_string<7> sym__0___45_8801377200944175068;
  unsigned sym__0___45_4634183629139578121;
  unsigned sym__0__806472603637564420;
  unsigned sym__0__1725829484083430844;
  unsigned sym__0___45_5279274827282678566;
  unsigned sym__0___45_9129247388617675603;
  fluidb_string<15> sym__0__1232225844204183080;
  fluidb_string<2> sym__0__9184663680502119984;
  fluidb_string<2> sym__0___45_9023997483659527503;
  fluidb_string<2> sym__0___45_1026604631201554135;
  fluidb_string<2> sym__0___45_7189754320372197989;
 private:
};


class Record27 {
 public:
  Record27(double __sym__0__6444796841181455837) : sym__0__6444796841181455837(__sym__0__6444796841181455837)
  {
  }
  Record27() 
  {
  }
  std::string show() const{
    std::stringstream o;
    o << sym__0__6444796841181455837;
    return o.str();
  }
  bool operator <(const Record27& otherRec) const{
    return otherRec.sym__0__6444796841181455837 < sym__0__6444796841181455837;
  }
  bool operator ==(const Record27& otherRec) const{
    return otherRec.sym__0__6444796841181455837 == sym__0__6444796841181455837;
  }
  bool operator !=(const Record27& otherRec) const{
    return otherRec.sym__0__6444796841181455837 != sym__0__6444796841181455837;
  }
  double sym__0__6444796841181455837;
 private:
};


class Record1 {
 public:
  Record1(unsigned __sym__0___45_1505533852465759107, fluidb_string<18> __sym__0__6596285179217051757, fluidb_string<9> __sym__0___45_4159561985402469085, fluidb_string<9> __sym__0__7369008339620944044, unsigned __sym__0__2684789842789018866, unsigned __sym__0___45_2509908666378225604, fluidb_string<7> __sym__0___45_7706572397611196859, unsigned __sym__0___45_5449241799411250602, unsigned __sym__0__27672868270209637, unsigned __sym__0___45_3731501451663570531, unsigned __sym__0___45_2333751162205814597, unsigned __sym__0___45_7519647944296708276, fluidb_string<15> __sym__0__5104078070134070473, fluidb_string<2> __sym__0___45_5093659501373279983, fluidb_string<2> __sym__0___45_5797253358119071280, fluidb_string<2> __sym__0___45_6360426925132620088, fluidb_string<2> __sym__0__583718615200697274) : sym__0___45_1505533852465759107(__sym__0___45_1505533852465759107), sym__0__6596285179217051757(__sym__0__6596285179217051757), sym__0___45_4159561985402469085(__sym__0___45_4159561985402469085), sym__0__7369008339620944044(__sym__0__7369008339620944044), sym__0__2684789842789018866(__sym__0__2684789842789018866), sym__0___45_2509908666378225604(__sym__0___45_2509908666378225604), sym__0___45_7706572397611196859(__sym__0___45_7706572397611196859), sym__0___45_5449241799411250602(__sym__0___45_5449241799411250602), sym__0__27672868270209637(__sym__0__27672868270209637), sym__0___45_3731501451663570531(__sym__0___45_3731501451663570531), sym__0___45_2333751162205814597(__sym__0___45_2333751162205814597), sym__0___45_7519647944296708276(__sym__0___45_7519647944296708276), sym__0__5104078070134070473(__sym__0__5104078070134070473), sym__0___45_5093659501373279983(__sym__0___45_5093659501373279983), sym__0___45_5797253358119071280(__sym__0___45_5797253358119071280), sym__0___45_6360426925132620088(__sym__0___45_6360426925132620088), sym__0__583718615200697274(__sym__0__583718615200697274)
  {
  }
  Record1() 
  {
  }
  std::string show() const{
    std::stringstream o;
    o << sym__0___45_1505533852465759107 << " | " << arrToString(sym__0__6596285179217051757) << " | " << arrToString(sym__0___45_4159561985402469085) << " | " << arrToString(sym__0__7369008339620944044) << " | " << sym__0__2684789842789018866 << " | " << sym__0___45_2509908666378225604 << " | " << arrToString(sym__0___45_7706572397611196859) << " | " << sym__0___45_5449241799411250602 << " | " << sym__0__27672868270209637 << " | " << sym__0___45_3731501451663570531 << " | " << sym__0___45_2333751162205814597 << " | " << sym__0___45_7519647944296708276 << " | " << arrToString(sym__0__5104078070134070473) << " | " << arrToString(sym__0___45_5093659501373279983) << " | " << arrToString(sym__0___45_5797253358119071280) << " | " << arrToString(sym__0___45_6360426925132620088) << " | " << arrToString(sym__0__583718615200697274);
    return o.str();
  }
  bool operator <(const Record1& otherRec) const{
    return (otherRec.sym__0___45_1505533852465759107 < sym__0___45_1505533852465759107 && (otherRec.sym__0__6596285179217051757 < sym__0__6596285179217051757 && (otherRec.sym__0___45_4159561985402469085 < sym__0___45_4159561985402469085 && (otherRec.sym__0__7369008339620944044 < sym__0__7369008339620944044 && (otherRec.sym__0__2684789842789018866 < sym__0__2684789842789018866 && (otherRec.sym__0___45_2509908666378225604 < sym__0___45_2509908666378225604 && (otherRec.sym__0___45_7706572397611196859 < sym__0___45_7706572397611196859 && (otherRec.sym__0___45_5449241799411250602 < sym__0___45_5449241799411250602 && (otherRec.sym__0__27672868270209637 < sym__0__27672868270209637 && (otherRec.sym__0___45_3731501451663570531 < sym__0___45_3731501451663570531 && (otherRec.sym__0___45_2333751162205814597 < sym__0___45_2333751162205814597 && (otherRec.sym__0___45_7519647944296708276 < sym__0___45_7519647944296708276 && (otherRec.sym__0__5104078070134070473 < sym__0__5104078070134070473 && (otherRec.sym__0___45_5093659501373279983 < sym__0___45_5093659501373279983 && (otherRec.sym__0___45_5797253358119071280 < sym__0___45_5797253358119071280 && (otherRec.sym__0___45_6360426925132620088 < sym__0___45_6360426925132620088 && otherRec.sym__0__583718615200697274 < sym__0__583718615200697274))))))))))))))));
  }
  bool operator ==(const Record1& otherRec) const{
    return (otherRec.sym__0___45_1505533852465759107 == sym__0___45_1505533852465759107 && (otherRec.sym__0__6596285179217051757 == sym__0__6596285179217051757 && (otherRec.sym__0___45_4159561985402469085 == sym__0___45_4159561985402469085 && (otherRec.sym__0__7369008339620944044 == sym__0__7369008339620944044 && (otherRec.sym__0__2684789842789018866 == sym__0__2684789842789018866 && (otherRec.sym__0___45_2509908666378225604 == sym__0___45_2509908666378225604 && (otherRec.sym__0___45_7706572397611196859 == sym__0___45_7706572397611196859 && (otherRec.sym__0___45_5449241799411250602 == sym__0___45_5449241799411250602 && (otherRec.sym__0__27672868270209637 == sym__0__27672868270209637 && (otherRec.sym__0___45_3731501451663570531 == sym__0___45_3731501451663570531 && (otherRec.sym__0___45_2333751162205814597 == sym__0___45_2333751162205814597 && (otherRec.sym__0___45_7519647944296708276 == sym__0___45_7519647944296708276 && (otherRec.sym__0__5104078070134070473 == sym__0__5104078070134070473 && (otherRec.sym__0___45_5093659501373279983 == sym__0___45_5093659501373279983 && (otherRec.sym__0___45_5797253358119071280 == sym__0___45_5797253358119071280 && (otherRec.sym__0___45_6360426925132620088 == sym__0___45_6360426925132620088 && otherRec.sym__0__583718615200697274 == sym__0__583718615200697274))))))))))))))));
  }
  bool operator !=(const Record1& otherRec) const{
    return (otherRec.sym__0___45_1505533852465759107 != sym__0___45_1505533852465759107 || (otherRec.sym__0__6596285179217051757 != sym__0__6596285179217051757 || (otherRec.sym__0___45_4159561985402469085 != sym__0___45_4159561985402469085 || (otherRec.sym__0__7369008339620944044 != sym__0__7369008339620944044 || (otherRec.sym__0__2684789842789018866 != sym__0__2684789842789018866 || (otherRec.sym__0___45_2509908666378225604 != sym__0___45_2509908666378225604 || (otherRec.sym__0___45_7706572397611196859 != sym__0___45_7706572397611196859 || (otherRec.sym__0___45_5449241799411250602 != sym__0___45_5449241799411250602 || (otherRec.sym__0__27672868270209637 != sym__0__27672868270209637 || (otherRec.sym__0___45_3731501451663570531 != sym__0___45_3731501451663570531 || (otherRec.sym__0___45_2333751162205814597 != sym__0___45_2333751162205814597 || (otherRec.sym__0___45_7519647944296708276 != sym__0___45_7519647944296708276 || (otherRec.sym__0__5104078070134070473 != sym__0__5104078070134070473 || (otherRec.sym__0___45_5093659501373279983 != sym__0___45_5093659501373279983 || (otherRec.sym__0___45_5797253358119071280 != sym__0___45_5797253358119071280 || (otherRec.sym__0___45_6360426925132620088 != sym__0___45_6360426925132620088 || otherRec.sym__0__583718615200697274 != sym__0__583718615200697274))))))))))))))));
  }
  unsigned sym__0___45_1505533852465759107;
  fluidb_string<18> sym__0__6596285179217051757;
  fluidb_string<9> sym__0___45_4159561985402469085;
  fluidb_string<9> sym__0__7369008339620944044;
  unsigned sym__0__2684789842789018866;
  unsigned sym__0___45_2509908666378225604;
  fluidb_string<7> sym__0___45_7706572397611196859;
  unsigned sym__0___45_5449241799411250602;
  unsigned sym__0__27672868270209637;
  unsigned sym__0___45_3731501451663570531;
  unsigned sym__0___45_2333751162205814597;
  unsigned sym__0___45_7519647944296708276;
  fluidb_string<15> sym__0__5104078070134070473;
  fluidb_string<2> sym__0___45_5093659501373279983;
  fluidb_string<2> sym__0___45_5797253358119071280;
  fluidb_string<2> sym__0___45_6360426925132620088;
  fluidb_string<2> sym__0__583718615200697274;
 private:
};


class Record7 {
 public:
  Record7(unsigned __sym__0___45_1112751135758893405, fluidb_string<25> __sym__0__6997242941354916148, fluidb_string<40> __sym__0__6495365355479598118, fluidb_string<16> __sym__0___45_6139591915656180264, fluidb_string<16> __sym__0___45_8641447736520667302, fluidb_string<13> __sym__0__378421449666099519, fluidb_string<15> __sym__0___45_6980633630965760588, unsigned __sym__0___45_5559897171635877192, int __sym__0___45_7375639863193491710, unsigned __sym__0___45_7081695127069413062, unsigned __sym__0___45_5260862414976149524, unsigned __sym__0___45_2676996903767191541, unsigned __sym__0__1853718612864846686, fluidb_string<21> __sym__0___45_4869714215904773749, unsigned __sym__0__174238853246591705, fluidb_string<10> __sym__0___45_267092227244907590, unsigned __sym__0__6529479520036920906, double __sym__0___45_7002459804545921352, unsigned __sym__0___45_2712513080101817026, double __sym__0__6088085020057818928, unsigned __sym__0___45_5864351416697838172, unsigned __sym__0__5380039869368676519, double __sym__0__1781013011151980157, fluidb_string<13> __sym__0___45_50019751602092811) : sym__0___45_1112751135758893405(__sym__0___45_1112751135758893405), sym__0__6997242941354916148(__sym__0__6997242941354916148), sym__0__6495365355479598118(__sym__0__6495365355479598118), sym__0___45_6139591915656180264(__sym__0___45_6139591915656180264), sym__0___45_8641447736520667302(__sym__0___45_8641447736520667302), sym__0__378421449666099519(__sym__0__378421449666099519), sym__0___45_6980633630965760588(__sym__0___45_6980633630965760588), sym__0___45_5559897171635877192(__sym__0___45_5559897171635877192), sym__0___45_7375639863193491710(__sym__0___45_7375639863193491710), sym__0___45_7081695127069413062(__sym__0___45_7081695127069413062), sym__0___45_5260862414976149524(__sym__0___45_5260862414976149524), sym__0___45_2676996903767191541(__sym__0___45_2676996903767191541), sym__0__1853718612864846686(__sym__0__1853718612864846686), sym__0___45_4869714215904773749(__sym__0___45_4869714215904773749), sym__0__174238853246591705(__sym__0__174238853246591705), sym__0___45_267092227244907590(__sym__0___45_267092227244907590), sym__0__6529479520036920906(__sym__0__6529479520036920906), sym__0___45_7002459804545921352(__sym__0___45_7002459804545921352), sym__0___45_2712513080101817026(__sym__0___45_2712513080101817026), sym__0__6088085020057818928(__sym__0__6088085020057818928), sym__0___45_5864351416697838172(__sym__0___45_5864351416697838172), sym__0__5380039869368676519(__sym__0__5380039869368676519), sym__0__1781013011151980157(__sym__0__1781013011151980157), sym__0___45_50019751602092811(__sym__0___45_50019751602092811)
  {
  }
  Record7() 
  {
  }
  std::string show() const{
    std::stringstream o;
    o << sym__0___45_1112751135758893405 << " | " << arrToString(sym__0__6997242941354916148) << " | " << arrToString(sym__0__6495365355479598118) << " | " << arrToString(sym__0___45_6139591915656180264) << " | " << arrToString(sym__0___45_8641447736520667302) << " | " << arrToString(sym__0__378421449666099519) << " | " << arrToString(sym__0___45_6980633630965760588) << " | " << sym__0___45_5559897171635877192 << " | " << sym__0___45_7375639863193491710 << " | " << sym__0___45_7081695127069413062 << " | " << sym__0___45_5260862414976149524 << " | " << sym__0___45_2676996903767191541 << " | " << sym__0__1853718612864846686 << " | " << arrToString(sym__0___45_4869714215904773749) << " | " << sym__0__174238853246591705 << " | " << arrToString(sym__0___45_267092227244907590) << " | " << sym__0__6529479520036920906 << " | " << sym__0___45_7002459804545921352 << " | " << sym__0___45_2712513080101817026 << " | " << sym__0__6088085020057818928 << " | " << sym__0___45_5864351416697838172 << " | " << sym__0__5380039869368676519 << " | " << sym__0__1781013011151980157 << " | " << arrToString(sym__0___45_50019751602092811);
    return o.str();
  }
  bool operator <(const Record7& otherRec) const{
    return (otherRec.sym__0___45_1112751135758893405 < sym__0___45_1112751135758893405 && (otherRec.sym__0__6997242941354916148 < sym__0__6997242941354916148 && (otherRec.sym__0__6495365355479598118 < sym__0__6495365355479598118 && (otherRec.sym__0___45_6139591915656180264 < sym__0___45_6139591915656180264 && (otherRec.sym__0___45_8641447736520667302 < sym__0___45_8641447736520667302 && (otherRec.sym__0__378421449666099519 < sym__0__378421449666099519 && (otherRec.sym__0___45_6980633630965760588 < sym__0___45_6980633630965760588 && (otherRec.sym__0___45_5559897171635877192 < sym__0___45_5559897171635877192 && (otherRec.sym__0___45_7375639863193491710 < sym__0___45_7375639863193491710 && (otherRec.sym__0___45_7081695127069413062 < sym__0___45_7081695127069413062 && (otherRec.sym__0___45_5260862414976149524 < sym__0___45_5260862414976149524 && (otherRec.sym__0___45_2676996903767191541 < sym__0___45_2676996903767191541 && (otherRec.sym__0__1853718612864846686 < sym__0__1853718612864846686 && (otherRec.sym__0___45_4869714215904773749 < sym__0___45_4869714215904773749 && (otherRec.sym__0__174238853246591705 < sym__0__174238853246591705 && (otherRec.sym__0___45_267092227244907590 < sym__0___45_267092227244907590 && (otherRec.sym__0__6529479520036920906 < sym__0__6529479520036920906 && (otherRec.sym__0___45_7002459804545921352 < sym__0___45_7002459804545921352 && (otherRec.sym__0___45_2712513080101817026 < sym__0___45_2712513080101817026 && (otherRec.sym__0__6088085020057818928 < sym__0__6088085020057818928 && (otherRec.sym__0___45_5864351416697838172 < sym__0___45_5864351416697838172 && (otherRec.sym__0__5380039869368676519 < sym__0__5380039869368676519 && (otherRec.sym__0__1781013011151980157 < sym__0__1781013011151980157 && otherRec.sym__0___45_50019751602092811 < sym__0___45_50019751602092811)))))))))))))))))))))));
  }
  bool operator ==(const Record7& otherRec) const{
    return (otherRec.sym__0___45_1112751135758893405 == sym__0___45_1112751135758893405 && (otherRec.sym__0__6997242941354916148 == sym__0__6997242941354916148 && (otherRec.sym__0__6495365355479598118 == sym__0__6495365355479598118 && (otherRec.sym__0___45_6139591915656180264 == sym__0___45_6139591915656180264 && (otherRec.sym__0___45_8641447736520667302 == sym__0___45_8641447736520667302 && (otherRec.sym__0__378421449666099519 == sym__0__378421449666099519 && (otherRec.sym__0___45_6980633630965760588 == sym__0___45_6980633630965760588 && (otherRec.sym__0___45_5559897171635877192 == sym__0___45_5559897171635877192 && (otherRec.sym__0___45_7375639863193491710 == sym__0___45_7375639863193491710 && (otherRec.sym__0___45_7081695127069413062 == sym__0___45_7081695127069413062 && (otherRec.sym__0___45_5260862414976149524 == sym__0___45_5260862414976149524 && (otherRec.sym__0___45_2676996903767191541 == sym__0___45_2676996903767191541 && (otherRec.sym__0__1853718612864846686 == sym__0__1853718612864846686 && (otherRec.sym__0___45_4869714215904773749 == sym__0___45_4869714215904773749 && (otherRec.sym__0__174238853246591705 == sym__0__174238853246591705 && (otherRec.sym__0___45_267092227244907590 == sym__0___45_267092227244907590 && (otherRec.sym__0__6529479520036920906 == sym__0__6529479520036920906 && (otherRec.sym__0___45_7002459804545921352 == sym__0___45_7002459804545921352 && (otherRec.sym__0___45_2712513080101817026 == sym__0___45_2712513080101817026 && (otherRec.sym__0__6088085020057818928 == sym__0__6088085020057818928 && (otherRec.sym__0___45_5864351416697838172 == sym__0___45_5864351416697838172 && (otherRec.sym__0__5380039869368676519 == sym__0__5380039869368676519 && (otherRec.sym__0__1781013011151980157 == sym__0__1781013011151980157 && otherRec.sym__0___45_50019751602092811 == sym__0___45_50019751602092811)))))))))))))))))))))));
  }
  bool operator !=(const Record7& otherRec) const{
    return (otherRec.sym__0___45_1112751135758893405 != sym__0___45_1112751135758893405 || (otherRec.sym__0__6997242941354916148 != sym__0__6997242941354916148 || (otherRec.sym__0__6495365355479598118 != sym__0__6495365355479598118 || (otherRec.sym__0___45_6139591915656180264 != sym__0___45_6139591915656180264 || (otherRec.sym__0___45_8641447736520667302 != sym__0___45_8641447736520667302 || (otherRec.sym__0__378421449666099519 != sym__0__378421449666099519 || (otherRec.sym__0___45_6980633630965760588 != sym__0___45_6980633630965760588 || (otherRec.sym__0___45_5559897171635877192 != sym__0___45_5559897171635877192 || (otherRec.sym__0___45_7375639863193491710 != sym__0___45_7375639863193491710 || (otherRec.sym__0___45_7081695127069413062 != sym__0___45_7081695127069413062 || (otherRec.sym__0___45_5260862414976149524 != sym__0___45_5260862414976149524 || (otherRec.sym__0___45_2676996903767191541 != sym__0___45_2676996903767191541 || (otherRec.sym__0__1853718612864846686 != sym__0__1853718612864846686 || (otherRec.sym__0___45_4869714215904773749 != sym__0___45_4869714215904773749 || (otherRec.sym__0__174238853246591705 != sym__0__174238853246591705 || (otherRec.sym__0___45_267092227244907590 != sym__0___45_267092227244907590 || (otherRec.sym__0__6529479520036920906 != sym__0__6529479520036920906 || (otherRec.sym__0___45_7002459804545921352 != sym__0___45_7002459804545921352 || (otherRec.sym__0___45_2712513080101817026 != sym__0___45_2712513080101817026 || (otherRec.sym__0__6088085020057818928 != sym__0__6088085020057818928 || (otherRec.sym__0___45_5864351416697838172 != sym__0___45_5864351416697838172 || (otherRec.sym__0__5380039869368676519 != sym__0__5380039869368676519 || (otherRec.sym__0__1781013011151980157 != sym__0__1781013011151980157 || otherRec.sym__0___45_50019751602092811 != sym__0___45_50019751602092811)))))))))))))))))))))));
  }
  unsigned sym__0___45_1112751135758893405;
  fluidb_string<25> sym__0__6997242941354916148;
  fluidb_string<40> sym__0__6495365355479598118;
  fluidb_string<16> sym__0___45_6139591915656180264;
  fluidb_string<16> sym__0___45_8641447736520667302;
  fluidb_string<13> sym__0__378421449666099519;
  fluidb_string<15> sym__0___45_6980633630965760588;
  unsigned sym__0___45_5559897171635877192;
  int sym__0___45_7375639863193491710;
  unsigned sym__0___45_7081695127069413062;
  unsigned sym__0___45_5260862414976149524;
  unsigned sym__0___45_2676996903767191541;
  unsigned sym__0__1853718612864846686;
  fluidb_string<21> sym__0___45_4869714215904773749;
  unsigned sym__0__174238853246591705;
  fluidb_string<10> sym__0___45_267092227244907590;
  unsigned sym__0__6529479520036920906;
  double sym__0___45_7002459804545921352;
  unsigned sym__0___45_2712513080101817026;
  double sym__0__6088085020057818928;
  unsigned sym__0___45_5864351416697838172;
  unsigned sym__0__5380039869368676519;
  double sym__0__1781013011151980157;
  fluidb_string<13> sym__0___45_50019751602092811;
 private:
};


class CallableClass30 {
 public:
  Record27 operator()(const Record29& record26) {
    return Record27(vAggrSum28(record26.sym__0__8532410199738998392 * record26.sym__0___45_2513573066306319392));
  }
  typedef Record27 Codomain;
  typedef Record29 Domain0;
 private:
  AggrSum<double> vAggrSum28;
};


class CallableClass11 {
 public:
  Record10 operator()(const Record8& record6) {
    return Record10(record6.sym__0___45_7131249874638266788, record6.sym__0__7265729621635359692, record6.sym__0___45_2986035740159621374, record6.sym__0__5081664509798388941, record6.sym__0___45_8518596434939314413, record6.sym__0__1988221653138390749, record6.sym__0___45_8801377200944175068, record6.sym__0___45_4634183629139578121, record6.sym__0__806472603637564420, record6.sym__0__1725829484083430844, record6.sym__0___45_5279274827282678566, record6.sym__0___45_9129247388617675603, record6.sym__0__1232225844204183080, record6.sym__0__9184663680502119984, record6.sym__0___45_9023997483659527503, record6.sym__0___45_1026604631201554135, record6.sym__0___45_7189754320372197989);
  }
  typedef Record10 Codomain;
  typedef Record8 Domain0;
 private:
};


class CallableClass9 {
 public:
  Record7 operator()(const Record8& record6) {
    return Record7(record6.sym__0__2102316481828394123, record6.sym__0__1780257040091145452, record6.sym__0__3109939911660640430, record6.sym__0___45_2175199227983174320, record6.sym__0__2274992661292194562, record6.sym__0___45_52536403880094569, record6.sym__0__8474116574285927276, record6.sym__0__1835503384076924528, record6.sym__0__586412267723269786, record6.sym__0__1353367320182642978, record6.sym__0___45_6351222752813626636, record6.sym__0___45_805067702695824989, record6.sym__0__914509637812701046, record6.sym__0__7895450651221174051, record6.sym__0__5942285589324576545, record6.sym__0__3979382234526804898, record6.sym__0___45_6103522369909819246, record6.sym__0__1873148039180761712, record6.sym__0__1430551526674366102, record6.sym__0__1048818672001592248, record6.sym__0__5723353836447658492, record6.sym__0___45_2233273278156881105, record6.sym__0___45_1120880788595637835, record6.sym__0___45_6361490230660137987);
  }
  typedef Record7 Codomain;
  typedef Record8 Domain0;
 private:
};


class CallableClass25 {
 public:
  bool operator()(const Record17& record24) {
    return ((((4 <= record24.sym__0___45_6984436199184448105) && (record24.sym__0___45_6984436199184448105 <= 6)) && (26 <= record24.sym__0__3673553332159180977)) && (record24.sym__0__3673553332159180977 <= 35));
  }
  typedef bool Codomain;
  typedef Record17 Domain0;
 private:
};


class CallableClass21 {
 public:
  Record19 operator()(const Record16& record20) {
    return Record19(record20.sym__0__6245703584620992382);
  }
  typedef Record19 Codomain;
  typedef Record16 Domain0;
 private:
};


class CallableClass5 {
 public:
  Record4 operator()(const Record2& record0) {
    return Record4(record0.sym__0__7588001997570016652, record0.sym__0___45_4747443848713997322, record0.sym__0___45_3257188284918960498, record0.sym__0__1617172947989036440, record0.sym__0___45_810220525799073153, record0.sym__0__8132341549271366762, record0.sym__0__1394287910975083263, record0.sym__0__5644261439804640685, record0.sym__0__9057335116627787790, record0.sym__0__2339428003903657470, record0.sym__0__3371773490934440332, record0.sym__0___45_1286955585961260406, record0.sym__0___45_1657469713282332988, record0.sym__0__816781160548213904, record0.sym__0__8401801716519894867, record0.sym__0__5709933202258624457, record0.sym__0__7900257115361061889);
  }
  typedef Record4 Codomain;
  typedef Record2 Domain0;
 private:
};


class CallableClass23 {
 public:
  Record19 operator()(const Record4& record22) {
    return Record19(record22.sym__0___45_7332894783442362324);
  }
  typedef Record19 Codomain;
  typedef Record4 Domain0;
 private:
};


class CallableClass13 {
 public:
  bool operator()(const Record10& record12) {
    return (record12.sym__0__6284345160241949046 == 199401);
  }
  typedef bool Codomain;
  typedef Record10 Domain0;
 private:
};


class CallableClass3 {
 public:
  Record1 operator()(const Record2& record0) {
    return Record1(record0.sym__0___45_8202918452351256080, record0.sym__0__3217182456213118816, record0.sym__0___45_587373445859874706, record0.sym__0___45_8346128157561074223, record0.sym__0__2979561800187053807, record0.sym__0___45_899573490466067231, record0.sym__0___45_2706395517471750200, record0.sym__0___45_6067709637706619093, record0.sym__0__1141311422513456040, record0.sym__0___45_5223888065355534256, record0.sym__0__2672047382496516406, record0.sym__0__4932263286160334513, record0.sym__0__4463721534751519028, record0.sym__0___45_4864066414314726068, record0.sym__0__937958105294580029, record0.sym__0___45_1982623509189166171, record0.sym__0__4762673478997720679);
  }
  typedef Record1 Codomain;
  typedef Record2 Domain0;
 private:
};


class CallableClass18 {
 public:
  Record17 operator()(const Record16& record14, const Record4& record15) {
    return Record17(record14.sym__0__6245703584620992382, record14.sym__0__8423503703594878606, record14.sym__0__6356725463286426884, record14.sym__0___45_3286136184259375045, record14.sym__0__4066203801312846649, record14.sym__0___45_8353576545653999317, record14.sym__0___45_4468618322478996170, record14.sym__0___45_8422568292558358555, record14.sym__0__3253898844582805974, record14.sym__0__8575488047535294878, record14.sym__0__3435466710294281260, record14.sym__0___45_8522673847417648165, record14.sym__0___45_7405363787420957662, record14.sym__0__7765678614353932314, record14.sym__0__10543855051499991, record14.sym__0__3423339159521108575, record14.sym__0___45_4718580705201763151, record15.sym__0___45_7574074018531922998, record15.sym__0__1125464382786937920, record15.sym__0___45_8257174981563598792, record15.sym__0__957746932829998382, record15.sym__0__934137931677987637, record15.sym__0___45_7332894783442362324, record15.sym__0__8974811218372806325, record15.sym__0___45_5217562530132451785, record15.sym__0__7851147553396318904, record15.sym__0___45_4975505511391694456, record15.sym__0___45_7249986409969561654, record15.sym__0__4671626969570181580, record15.sym__0___45_3666121704283105054, record15.sym__0__5495011930072844518, record15.sym__0___45_4423447118092167055, record15.sym__0___45_1608082021099887893, record15.sym__0__1584187396639360899);
  }
  typedef Record17 Codomain;
  typedef Record16 Domain0;
  typedef Record4 Domain1;
 private:
};






int main() {
  // Delete: (Q1 
  //   (QSort [E0 (ESym "d_year"),E0 (ESym "c_nation")]) 
  //   (Q1 
  //     (QGroup 
  //       [
  //        (ESym "d_year",E0 (NAggr AggrFirst (E0 (ESym "d_year")))),
  //        (ESym "c_nation",E0 (NAggr AggrFirst (E0 (ESym "c_nation")))),
  //        (
  //          ESym "profit",
  //          E0 
  //             (NAggr 
  //               AggrSum 
  //               (E2 ESub 
  //                   (E0 (ESym "lo_revenue")) 
  //                   (E0 (ESym "lo_supplycost"))))
  //         )
  //       ] 
  //       [E0 (ESym "d_year"),E0 (ESym "c_nation")]) 
  //     (S 
  //       (P2 
  //         PAnd 
  //         (P2 
  //           PAnd 
  //           (P0 
  //             (R2 RLike 
  //                 (R0 (E0 (ESym "c_region"))) 
  //                 (R0 (E0 (EString "AMERICA"))))) 
  //           (P0 
  //             (R2 RLike 
  //                 (R0 (E0 (ESym "s_region"))) 
  //                 (R0 (E0 (EString "AMERICA")))))) 
  //         (P2 
  //           POr 
  //           (P0 
  //             (R2 RLike 
  //                 (R0 (E0 (ESym "p_mfgr"))) 
  //                 (R0 (E0 (EString "MFGR#1"))))) 
  //           (P0 
  //             (R2 RLike 
  //                 (R0 (E0 (ESym "p_mfgr"))) 
  //                 (R0 (E0 (EString "MFGR#2"))))))) 
  //       (J 
  //         (P0 
  //           (R2 REq 
  //               (R0 (E0 (ESym "lo_partkey"))) 
  //               (R0 (E0 (ESym "p_partkey"))))) 
  //         (J 
  //           (P0 
  //             (R2 REq 
  //                 (R0 (E0 (ESym "lo_custkey"))) 
  //                 (R0 (E0 (ESym "c_custkey"))))) 
  //           (J 
  //             (P0 
  //               (R2 REq 
  //                   (R0 (E0 (ESym "lo_suppkey"))) 
  //                   (R0 (E0 (ESym "s_suppkey"))))) 
  //             (J 
  //               (P0 
  //                 (R2 REq 
  //                     (R0 (E0 (ESym "lo_orderdate"))) 
  //                     (R0 (E0 (ESym "d_datekey"))))) 
  //               (Q0 (TSymbol "date")) 
  //               (Q0 (TSymbol "lineorder"))) 
  //             (Q0 (TSymbol "supplier"))) 
  //           (Q0 (TSymbol "customer"))) 
  std::cout << "Delete: (Q1 \n  (QSort [E0 (ESym \"d_year\"),E0 (ESym \"c_nation\")]) \n  (Q1 \n    (QGroup \n      [\n       (ESym \"d_year\",E0 (NAggr AggrFirst (E0 (ESym \"d_year\")))),\n       (ESym \"c_nation\",E0 (NAggr AggrFirst (E0 (ESym \"c_nation\")))),\n       (\n         ESym \"profit\",\n         E0 \n            (NAggr \n              AggrSum \n              (E2 ESub \n                  (E0 (ESym \"lo_revenue\")) \n                  (E0 (ESym \"lo_supplycost\"))))\n        )\n      ] \n      [E0 (ESym \"d_year\"),E0 (ESym \"c_nation\")]) \n    (S \n      (P2 \n        PAnd \n        (P2 \n          PAnd \n          (P0 \n            (R2 RLike \n                (R0 (E0 (ESym \"c_region\"))) \n                (R0 (E0 (EString \"AMERICA\"))))) \n          (P0 \n            (R2 RLike \n                (R0 (E0 (ESym \"s_region\"))) \n                (R0 (E0 (EString \"AMERICA\")))))) \n        (P2 \n          POr \n          (P0 \n            (R2 RLike \n                (R0 (E0 (ESym \"p_mfgr\"))) \n                (R0 (E0 (EString \"MFGR#1\"))))) \n          (P0 \n            (R2 RLike \n                (R0 (E0 (ESym \"p_mfgr\"))) \n                (R0 (E0 (EString \"MFGR#2\"))))))) \n      (J \n        (P0 \n          (R2 REq \n              (R0 (E0 (ESym \"lo_partkey\"))) \n              (R0 (E0 (ESym \"p_partkey\"))))) \n        (J \n          (P0 \n            (R2 REq \n                (R0 (E0 (ESym \"lo_custkey\"))) \n                (R0 (E0 (ESym \"c_custkey\"))))) \n          (J \n            (P0 \n              (R2 REq \n                  (R0 (E0 (ESym \"lo_suppkey\"))) \n                  (R0 (E0 (ESym \"s_suppkey\"))))) \n            (J \n              (P0 \n                (R2 REq \n                    (R0 (E0 (ESym \"lo_orderdate\"))) \n                    (R0 (E0 (ESym \"d_datekey\"))))) \n              (Q0 (TSymbol \"date\")) \n              (Q0 (TSymbol \"lineorder\"))) \n            (Q0 (TSymbol \"supplier\"))) \n          (Q0 (TSymbol \"customer\"))) \n        (Q0 (TSymbol \"part\"))))))" << std::endl;
  deleteFile("/tmp/fluidb_store/data322.dat");
  // Delete: (Q1 
  //   (QGroup 
  //     [
  //      (ESym "d_year",E0 (NAggr AggrFirst (E0 (ESym "d_year")))),
  //      (ESym "c_nation",E0 (NAggr AggrFirst (E0 (ESym "c_nation")))),
  //      (
  //        ESym "profit",
  //        E0 
  //           (NAggr 
  //             AggrSum 
  //             (E2 ESub 
  //                 (E0 (ESym "lo_revenue")) 
  //                 (E0 (ESym "lo_supplycost"))))
  //       )
  //     ] 
  //     [E0 (ESym "d_year"),E0 (ESym "c_nation")]) 
  //   (S 
  //     (P2 
  //       PAnd 
  //       (P2 
  //         PAnd 
  //         (P0 
  //           (R2 RLike 
  //               (R0 (E0 (ESym "c_region"))) 
  //               (R0 (E0 (EString "AMERICA"))))) 
  //         (P0 
  //           (R2 RLike 
  //               (R0 (E0 (ESym "s_region"))) 
  //               (R0 (E0 (EString "AMERICA")))))) 
  //       (P2 
  //         POr 
  //         (P0 
  //           (R2 RLike 
  //               (R0 (E0 (ESym "p_mfgr"))) 
  //               (R0 (E0 (EString "MFGR#1"))))) 
  //         (P0 
  //           (R2 RLike 
  //               (R0 (E0 (ESym "p_mfgr"))) 
  //               (R0 (E0 (EString "MFGR#2"))))))) 
  //     (J 
  //       (P0 
  //         (R2 REq 
  //             (R0 (E0 (ESym "lo_partkey"))) 
  //             (R0 (E0 (ESym "p_partkey"))))) 
  //       (J 
  //         (P0 
  //           (R2 REq 
  //               (R0 (E0 (ESym "lo_custkey"))) 
  //               (R0 (E0 (ESym "c_custkey"))))) 
  //         (J 
  //           (P0 
  //             (R2 REq 
  //                 (R0 (E0 (ESym "lo_suppkey"))) 
  //                 (R0 (E0 (ESym "s_suppkey"))))) 
  //           (J 
  //             (P0 
  //               (R2 REq 
  //                   (R0 (E0 (ESym "lo_orderdate"))) 
  //                   (R0 (E0 (ESym "d_datekey"))))) 
  //             (Q0 (TSymbol "date")) 
  //             (Q0 (TSymbol "lineorder"))) 
  //           (Q0 (TSymbol "supplier"))) 
  //         (Q0 (TSymbol "customer"))) 
  std::cout << "Delete: (Q1 \n  (QGroup \n    [\n     (ESym \"d_year\",E0 (NAggr AggrFirst (E0 (ESym \"d_year\")))),\n     (ESym \"c_nation\",E0 (NAggr AggrFirst (E0 (ESym \"c_nation\")))),\n     (\n       ESym \"profit\",\n       E0 \n          (NAggr \n            AggrSum \n            (E2 ESub \n                (E0 (ESym \"lo_revenue\")) \n                (E0 (ESym \"lo_supplycost\"))))\n      )\n    ] \n    [E0 (ESym \"d_year\"),E0 (ESym \"c_nation\")]) \n  (S \n    (P2 \n      PAnd \n      (P2 \n        PAnd \n        (P0 \n          (R2 RLike \n              (R0 (E0 (ESym \"c_region\"))) \n              (R0 (E0 (EString \"AMERICA\"))))) \n        (P0 \n          (R2 RLike \n              (R0 (E0 (ESym \"s_region\"))) \n              (R0 (E0 (EString \"AMERICA\")))))) \n      (P2 \n        POr \n        (P0 \n          (R2 RLike \n              (R0 (E0 (ESym \"p_mfgr\"))) \n              (R0 (E0 (EString \"MFGR#1\"))))) \n        (P0 \n          (R2 RLike \n              (R0 (E0 (ESym \"p_mfgr\"))) \n              (R0 (E0 (EString \"MFGR#2\"))))))) \n    (J \n      (P0 \n        (R2 REq \n            (R0 (E0 (ESym \"lo_partkey\"))) \n            (R0 (E0 (ESym \"p_partkey\"))))) \n      (J \n        (P0 \n          (R2 REq \n              (R0 (E0 (ESym \"lo_custkey\"))) \n              (R0 (E0 (ESym \"c_custkey\"))))) \n        (J \n          (P0 \n            (R2 REq \n                (R0 (E0 (ESym \"lo_suppkey\"))) \n                (R0 (E0 (ESym \"s_suppkey\"))))) \n          (J \n            (P0 \n              (R2 REq \n                  (R0 (E0 (ESym \"lo_orderdate\"))) \n                  (R0 (E0 (ESym \"d_datekey\"))))) \n            (Q0 (TSymbol \"date\")) \n            (Q0 (TSymbol \"lineorder\"))) \n          (Q0 (TSymbol \"supplier\"))) \n        (Q0 (TSymbol \"customer\"))) \n      (Q0 (TSymbol \"part\")))))" << std::endl;
  deleteFile("/tmp/fluidb_store/data321.dat");
  // Delete: (S 
  //   (P2 
  //     PAnd 
  //     (P2 
  //       PAnd 
  //       (P0 
  //         (R2 RLike 
  //             (R0 (E0 (ESym "c_region"))) 
  //             (R0 (E0 (EString "AMERICA"))))) 
  //       (P0 
  //         (R2 RLike 
  //             (R0 (E0 (ESym "s_region"))) 
  //             (R0 (E0 (EString "AMERICA")))))) 
  //     (P2 
  //       POr 
  //       (P0 
  //         (R2 RLike 
  //             (R0 (E0 (ESym "p_mfgr"))) 
  //             (R0 (E0 (EString "MFGR#1"))))) 
  //       (P0 
  //         (R2 RLike 
  //             (R0 (E0 (ESym "p_mfgr"))) 
  //             (R0 (E0 (EString "MFGR#2"))))))) 
  //   (J 
  //     (P0 
  //       (R2 REq 
  //           (R0 (E0 (ESym "lo_partkey"))) 
  //           (R0 (E0 (ESym "p_partkey"))))) 
  //     (J 
  //       (P0 
  //         (R2 REq 
  //             (R0 (E0 (ESym "lo_custkey"))) 
  //             (R0 (E0 (ESym "c_custkey"))))) 
  //       (J 
  //         (P0 
  //           (R2 REq 
  //               (R0 (E0 (ESym "lo_suppkey"))) 
  //               (R0 (E0 (ESym "s_suppkey"))))) 
  //         (J 
  //           (P0 
  //             (R2 REq 
  //                 (R0 (E0 (ESym "lo_orderdate"))) 
  //                 (R0 (E0 (ESym "d_datekey"))))) 
  //           (Q0 (TSymbol "date")) 
  //           (Q0 (TSymbol "lineorder"))) 
  //         (Q0 (TSymbol "supplier"))) 
  //       (Q0 (TSymbol "customer"))) 
  std::cout << "Delete: (S \n  (P2 \n    PAnd \n    (P2 \n      PAnd \n      (P0 \n        (R2 RLike \n            (R0 (E0 (ESym \"c_region\"))) \n            (R0 (E0 (EString \"AMERICA\"))))) \n      (P0 \n        (R2 RLike \n            (R0 (E0 (ESym \"s_region\"))) \n            (R0 (E0 (EString \"AMERICA\")))))) \n    (P2 \n      POr \n      (P0 \n        (R2 RLike \n            (R0 (E0 (ESym \"p_mfgr\"))) \n            (R0 (E0 (EString \"MFGR#1\"))))) \n      (P0 \n        (R2 RLike \n            (R0 (E0 (ESym \"p_mfgr\"))) \n            (R0 (E0 (EString \"MFGR#2\"))))))) \n  (J \n    (P0 \n      (R2 REq \n          (R0 (E0 (ESym \"lo_partkey\"))) \n          (R0 (E0 (ESym \"p_partkey\"))))) \n    (J \n      (P0 \n        (R2 REq \n            (R0 (E0 (ESym \"lo_custkey\"))) \n            (R0 (E0 (ESym \"c_custkey\"))))) \n      (J \n        (P0 \n          (R2 REq \n              (R0 (E0 (ESym \"lo_suppkey\"))) \n              (R0 (E0 (ESym \"s_suppkey\"))))) \n        (J \n          (P0 \n            (R2 REq \n                (R0 (E0 (ESym \"lo_orderdate\"))) \n                (R0 (E0 (ESym \"d_datekey\"))))) \n          (Q0 (TSymbol \"date\")) \n          (Q0 (TSymbol \"lineorder\"))) \n        (Q0 (TSymbol \"supplier\"))) \n      (Q0 (TSymbol \"customer\"))) \n    (Q0 (TSymbol \"part\"))))" << std::endl;
  deleteFile("/tmp/fluidb_store/data290.dat");
  // Delete: (S 
  //   (P1 
  //     PNot 
  //     (P2 
  //       POr 
  //       (P0 
  //         (R2 RLike 
  //             (R0 (E0 (ESym "s_city"))) 
  //             (R0 (E0 (EString "UNITED KI1"))))) 
  //       (P0 
  //         (R2 RLike 
  //             (R0 (E0 (ESym "s_city"))) 
  //             (R0 (E0 (EString "UNITED KI5"))))))) 
  //   (J 
  //     (P0 
  //       (R2 REq 
  //           (R0 (E0 (ESym "lo_suppkey"))) 
  //           (R0 (E0 (ESym "s_suppkey"))))) 
  //     (S 
  //       (P2 
  //         PAnd 
  //         (P0 
  //           (R2 RLike 
  //               (R0 (E0 (ESym "d_yearmonth"))) 
  //               (R0 (E0 (EString "Dec1997"))))) 
  //         (P2 
  //           POr 
  //           (P0 
  //             (R2 RLike 
  //                 (R0 (E0 (ESym "c_city"))) 
  //                 (R0 (E0 (EString "UNITED KI1"))))) 
  //           (P0 
  //             (R2 RLike 
  //                 (R0 (E0 (ESym "c_city"))) 
  //                 (R0 (E0 (EString "UNITED KI5"))))))) 
  //       (J 
  //         (P0 
  //           (R2 REq 
  //               (R0 (E0 (ESym "lo_custkey"))) 
  //               (R0 (E0 (ESym "c_custkey"))))) 
  //         (Q0 (TSymbol "customer")) 
  //         (J 
  //           (P0 
  //             (R2 REq 
  //                 (R0 (E0 (ESym "lo_orderdate"))) 
  //                 (R0 (E0 (ESym "d_datekey"))))) 
  //           (Q0 (TSymbol "date")) 
  //           (Q0 (TSymbol "lineorder"))))) 
  std::cout << "Delete: (S \n  (P1 \n    PNot \n    (P2 \n      POr \n      (P0 \n        (R2 RLike \n            (R0 (E0 (ESym \"s_city\"))) \n            (R0 (E0 (EString \"UNITED KI1\"))))) \n      (P0 \n        (R2 RLike \n            (R0 (E0 (ESym \"s_city\"))) \n            (R0 (E0 (EString \"UNITED KI5\"))))))) \n  (J \n    (P0 \n      (R2 REq \n          (R0 (E0 (ESym \"lo_suppkey\"))) \n          (R0 (E0 (ESym \"s_suppkey\"))))) \n    (S \n      (P2 \n        PAnd \n        (P0 \n          (R2 RLike \n              (R0 (E0 (ESym \"d_yearmonth\"))) \n              (R0 (E0 (EString \"Dec1997\"))))) \n        (P2 \n          POr \n          (P0 \n            (R2 RLike \n                (R0 (E0 (ESym \"c_city\"))) \n                (R0 (E0 (EString \"UNITED KI1\"))))) \n          (P0 \n            (R2 RLike \n                (R0 (E0 (ESym \"c_city\"))) \n                (R0 (E0 (EString \"UNITED KI5\"))))))) \n      (J \n        (P0 \n          (R2 REq \n              (R0 (E0 (ESym \"lo_custkey\"))) \n              (R0 (E0 (ESym \"c_custkey\"))))) \n        (Q0 (TSymbol \"customer\")) \n        (J \n          (P0 \n            (R2 REq \n                (R0 (E0 (ESym \"lo_orderdate\"))) \n                (R0 (E0 (ESym \"d_datekey\"))))) \n          (Q0 (TSymbol \"date\")) \n          (Q0 (TSymbol \"lineorder\"))))) \n    (Q0 (TSymbol \"supplier\"))))" << std::endl;
  deleteFile("/tmp/fluidb_store/data258.dat");
  // ReverseTrigger: (Just 
  //   (Left 
  //     [
  //      QJoin 
  //         (P0 
  //           (R2 REq 
  //               (R0 (E0 (ESym "lo_orderdate"))) 
  //               (R0 (E0 (ESym "d_datekey")))))
  std::cout << "ReverseTrigger: (Just \n  (Left \n    [\n     QJoin \n        (P0 \n          (R2 REq \n              (R0 (E0 (ESym \"lo_orderdate\"))) \n              (R0 (E0 (ESym \"d_datekey\")))))\n    ]))" << std::endl;
  {
    auto operation = mkUnJoin<CallableClass3, CallableClass5>(Just("/tmp/fluidb_store/data28.dat"), Nothing(), Just("/tmp/fluidb_store/data29.dat"), Nothing(), Just("/tmp/fluidb_store/data0.dat"));
    operation.run();
    operation.print_output(10);
  }
  // ReverseTrigger: (Just 
  //   (Left 
  //     [
  //      QJoin 
  //         (P0 
  //           (R2 REq 
  //               (R0 (E0 (ESym "lo_orderdate"))) 
  //               (R0 (E0 (ESym "d_datekey")))))
  std::cout << "ReverseTrigger: (Just \n  (Left \n    [\n     QJoin \n        (P0 \n          (R2 REq \n              (R0 (E0 (ESym \"lo_orderdate\"))) \n              (R0 (E0 (ESym \"d_datekey\")))))\n    ]))" << std::endl;
  {
    auto operation = mkUnJoin<CallableClass9, CallableClass11>(Just("/tmp/fluidb_store/data41.dat"), Nothing(), Just("/tmp/fluidb_store/data42.dat"), Nothing(), Just("/tmp/fluidb_store/data1.dat"));
    operation.run();
    operation.print_output(10);
  }
  // ForwardTrigger: (Just 
  //   (Right 
  //     [
  //      QSel 
  //         (P0 
  //           (R2 REq 
  //               (R0 (E0 (ESym "d_yearmonthnum"))) 
  //               (R0 (E0 (EInt 199401)))))
  std::cout << "ForwardTrigger: (Just \n  (Right \n    [\n     QSel \n        (P0 \n          (R2 REq \n              (R0 (E0 (ESym \"d_yearmonthnum\"))) \n              (R0 (E0 (EInt 199401)))))\n    ]))" << std::endl;
  {
    auto operation = mkSelect<CallableClass13>(Just<const std::string>("/tmp/fluidb_store/data5.dat"), Just<const std::string>("/tmp/fluidb_store/data6.dat"), "/tmp/fluidb_store/data1.dat");
    operation.run();
    operation.print_output(10);
  }
  // Delete: (S 
  //   (P1 
  //     PNot 
  //     (P2 
  //       POr 
  //       (P0 
  //         (R2 RLike 
  //             (R0 (E0 (ESym "p_mfgr"))) 
  //             (R0 (E0 (EString "MFGR#1"))))) 
  //       (P0 
  //         (R2 RLike 
  //             (R0 (E0 (ESym "p_mfgr"))) 
  //             (R0 (E0 (EString "MFGR#2"))))))) 
  //   (J 
  //     (P0 
  //       (R2 REq 
  //           (R0 (E0 (ESym "lo_partkey"))) 
  //           (R0 (E0 (ESym "p_partkey"))))) 
  //     (S 
  //       (P2 
  //         PAnd 
  //         (P0 
  //           (R2 RLike 
  //               (R0 (E0 (ESym "s_region"))) 
  //               (R0 (E0 (EString "AMERICA"))))) 
  //         (P0 
  //           (R2 RLike 
  //               (R0 (E0 (ESym "c_region"))) 
  //               (R0 (E0 (EString "AMERICA")))))) 
  //       (J 
  //         (P0 
  //           (R2 REq 
  //               (R0 (E0 (ESym "lo_custkey"))) 
  //               (R0 (E0 (ESym "c_custkey"))))) 
  //         (J 
  //           (P0 
  //             (R2 REq 
  //                 (R0 (E0 (ESym "lo_suppkey"))) 
  //                 (R0 (E0 (ESym "s_suppkey"))))) 
  //           (J 
  //             (P0 
  //               (R2 REq 
  //                   (R0 (E0 (ESym "lo_orderdate"))) 
  //                   (R0 (E0 (ESym "d_datekey"))))) 
  //             (Q0 (TSymbol "date")) 
  //             (Q0 (TSymbol "lineorder"))) 
  //           (Q0 (TSymbol "supplier"))) 
  //         (Q0 (TSymbol "customer")))) 
  std::cout << "Delete: (S \n  (P1 \n    PNot \n    (P2 \n      POr \n      (P0 \n        (R2 RLike \n            (R0 (E0 (ESym \"p_mfgr\"))) \n            (R0 (E0 (EString \"MFGR#1\"))))) \n      (P0 \n        (R2 RLike \n            (R0 (E0 (ESym \"p_mfgr\"))) \n            (R0 (E0 (EString \"MFGR#2\"))))))) \n  (J \n    (P0 \n      (R2 REq \n          (R0 (E0 (ESym \"lo_partkey\"))) \n          (R0 (E0 (ESym \"p_partkey\"))))) \n    (S \n      (P2 \n        PAnd \n        (P0 \n          (R2 RLike \n              (R0 (E0 (ESym \"s_region\"))) \n              (R0 (E0 (EString \"AMERICA\"))))) \n        (P0 \n          (R2 RLike \n              (R0 (E0 (ESym \"c_region\"))) \n              (R0 (E0 (EString \"AMERICA\")))))) \n      (J \n        (P0 \n          (R2 REq \n              (R0 (E0 (ESym \"lo_custkey\"))) \n              (R0 (E0 (ESym \"c_custkey\"))))) \n        (J \n          (P0 \n            (R2 REq \n                (R0 (E0 (ESym \"lo_suppkey\"))) \n                (R0 (E0 (ESym \"s_suppkey\"))))) \n          (J \n            (P0 \n              (R2 REq \n                  (R0 (E0 (ESym \"lo_orderdate\"))) \n                  (R0 (E0 (ESym \"d_datekey\"))))) \n            (Q0 (TSymbol \"date\")) \n            (Q0 (TSymbol \"lineorder\"))) \n          (Q0 (TSymbol \"supplier\"))) \n        (Q0 (TSymbol \"customer\")))) \n    (Q0 (TSymbol \"part\"))))" << std::endl;
  deleteFile("/tmp/fluidb_store/data320.dat");
  // Delete: (S 
  //   (P1 
  //     PNot 
  //     (P2 
  //       PAnd 
  //       (P0 
  //         (R2 RLike 
  //             (R0 (E0 (ESym "d_yearmonth"))) 
  //             (R0 (E0 (EString "Dec1997"))))) 
  //       (P2 
  //         POr 
  //         (P0 
  //           (R2 RLike 
  //               (R0 (E0 (ESym "c_city"))) 
  //               (R0 (E0 (EString "UNITED KI1"))))) 
  //         (P0 
  //           (R2 RLike 
  //               (R0 (E0 (ESym "c_city"))) 
  //               (R0 (E0 (EString "UNITED KI5")))))))) 
  //   (J 
  //     (P0 
  //       (R2 REq 
  //           (R0 (E0 (ESym "lo_custkey"))) 
  //           (R0 (E0 (ESym "c_custkey"))))) 
  //     (Q0 (TSymbol "customer")) 
  //     (J 
  //       (P0 
  //         (R2 REq 
  //             (R0 (E0 (ESym "lo_orderdate"))) 
  //             (R0 (E0 (ESym "d_datekey"))))) 
  //       (Q0 (TSymbol "date")) 
  std::cout << "Delete: (S \n  (P1 \n    PNot \n    (P2 \n      PAnd \n      (P0 \n        (R2 RLike \n            (R0 (E0 (ESym \"d_yearmonth\"))) \n            (R0 (E0 (EString \"Dec1997\"))))) \n      (P2 \n        POr \n        (P0 \n          (R2 RLike \n              (R0 (E0 (ESym \"c_city\"))) \n              (R0 (E0 (EString \"UNITED KI1\"))))) \n        (P0 \n          (R2 RLike \n              (R0 (E0 (ESym \"c_city\"))) \n              (R0 (E0 (EString \"UNITED KI5\")))))))) \n  (J \n    (P0 \n      (R2 REq \n          (R0 (E0 (ESym \"lo_custkey\"))) \n          (R0 (E0 (ESym \"c_custkey\"))))) \n    (Q0 (TSymbol \"customer\")) \n    (J \n      (P0 \n        (R2 REq \n            (R0 (E0 (ESym \"lo_orderdate\"))) \n            (R0 (E0 (ESym \"d_datekey\"))))) \n      (Q0 (TSymbol \"date\")) \n      (Q0 (TSymbol \"lineorder\")))))" << std::endl;
  deleteFile("/tmp/fluidb_store/data238.dat");
  // ForwardTrigger: (Just 
  //   (Left 
  //     [
  //      QJoin 
  //         (P0 
  //           (R2 REq 
  //               (R0 (E0 (ESym "lo_orderdate"))) 
  //               (R0 (E0 (ESym "d_datekey")))))
  std::cout << "ForwardTrigger: (Just \n  (Left \n    [\n     QJoin \n        (P0 \n          (R2 REq \n              (R0 (E0 (ESym \"lo_orderdate\"))) \n              (R0 (E0 (ESym \"d_datekey\")))))\n    ]))" << std::endl;
  {
    auto operation = mkEquiJoin<CallableClass21, CallableClass23, CallableClass18>(Just<const std::string>("/tmp/fluidb_store/data8.dat"), Just<const std::string>("/tmp/fluidb_store/data7.dat"), Just<const std::string>("/tmp/fluidb_store/data9.dat"), "/tmp/fluidb_store/data5.dat", "/tmp/fluidb_store/data0.dat");
    operation.run();
    operation.print_output(10);
  }
  // Delete: (S 
  //   (P2 
  //     PAnd 
  //     (P2 
  //       PAnd 
  //       (P2 
  //         PAnd 
  //         (P0 
  //           (R2 RLike 
  //               (R0 (E0 (ESym "c_region"))) 
  //               (R0 (E0 (EString "ASIA"))))) 
  //         (P0 (R2 RGe (R0 (E0 (ESym "d_year"))) (R0 (E0 (EInt 1992)))))) 
  //       (P0 (R2 RLe (R0 (E0 (ESym "d_year"))) (R0 (E0 (EInt 1997)))))) 
  //     (P0 
  //       (R2 RLike (R0 (E0 (ESym "s_region"))) (R0 (E0 (EString "ASIA")))))) 
  //   (J 
  //     (P0 
  //       (R2 REq 
  //           (R0 (E0 (ESym "lo_suppkey"))) 
  //           (R0 (E0 (ESym "s_suppkey"))))) 
  //     (J 
  //       (P0 
  //         (R2 REq 
  //             (R0 (E0 (ESym "lo_custkey"))) 
  //             (R0 (E0 (ESym "c_custkey"))))) 
  //       (Q0 (TSymbol "customer")) 
  //       (J 
  //         (P0 
  //           (R2 REq 
  //               (R0 (E0 (ESym "lo_orderdate"))) 
  //               (R0 (E0 (ESym "d_datekey"))))) 
  //         (Q0 (TSymbol "date")) 
  //         (Q0 (TSymbol "lineorder")))) 
  std::cout << "Delete: (S \n  (P2 \n    PAnd \n    (P2 \n      PAnd \n      (P2 \n        PAnd \n        (P0 \n          (R2 RLike \n              (R0 (E0 (ESym \"c_region\"))) \n              (R0 (E0 (EString \"ASIA\"))))) \n        (P0 (R2 RGe (R0 (E0 (ESym \"d_year\"))) (R0 (E0 (EInt 1992)))))) \n      (P0 (R2 RLe (R0 (E0 (ESym \"d_year\"))) (R0 (E0 (EInt 1997)))))) \n    (P0 \n      (R2 RLike (R0 (E0 (ESym \"s_region\"))) (R0 (E0 (EString \"ASIA\")))))) \n  (J \n    (P0 \n      (R2 REq \n          (R0 (E0 (ESym \"lo_suppkey\"))) \n          (R0 (E0 (ESym \"s_suppkey\"))))) \n    (J \n      (P0 \n        (R2 REq \n            (R0 (E0 (ESym \"lo_custkey\"))) \n            (R0 (E0 (ESym \"c_custkey\"))))) \n      (Q0 (TSymbol \"customer\")) \n      (J \n        (P0 \n          (R2 REq \n              (R0 (E0 (ESym \"lo_orderdate\"))) \n              (R0 (E0 (ESym \"d_datekey\"))))) \n        (Q0 (TSymbol \"date\")) \n        (Q0 (TSymbol \"lineorder\")))) \n    (Q0 (TSymbol \"supplier\"))))" << std::endl;
  deleteFile("/tmp/fluidb_store/data163.dat");
  // ForwardTrigger: (Just 
  //   (Right 
  //     [
  //      QSel 
  //         (P2 
  //           PAnd 
  //           (P2 
  //             PAnd 
  //             (P2 
  //               PAnd 
  //               (P0 
  //                 (R2 RLe 
  //                     (R0 (E0 (EInt 4))) 
  //                     (R0 (E0 (ESym "lo_discount"))))) 
  //               (P0 
  //                 (R2 RLe 
  //                     (R0 (E0 (ESym "lo_discount"))) 
  //                     (R0 (E0 (EInt 6)))))) 
  //             (P0 
  //               (R2 RLe 
  //                   (R0 (E0 (EInt 26))) 
  //                   (R0 (E0 (ESym "lo_quantity")))))) 
  //           (P0 
  //             (R2 RLe (R0 (E0 (ESym "lo_quantity"))) (R0 (E0 (EInt 35))))))
  std::cout << "ForwardTrigger: (Just \n  (Right \n    [\n     QSel \n        (P2 \n          PAnd \n          (P2 \n            PAnd \n            (P2 \n              PAnd \n              (P0 \n                (R2 RLe \n                    (R0 (E0 (EInt 4))) \n                    (R0 (E0 (ESym \"lo_discount\"))))) \n              (P0 \n                (R2 RLe \n                    (R0 (E0 (ESym \"lo_discount\"))) \n                    (R0 (E0 (EInt 6)))))) \n            (P0 \n              (R2 RLe \n                  (R0 (E0 (EInt 26))) \n                  (R0 (E0 (ESym \"lo_quantity\")))))) \n          (P0 \n            (R2 RLe (R0 (E0 (ESym \"lo_quantity\"))) (R0 (E0 (EInt 35))))))\n    ]))" << std::endl;
  {
    auto operation = mkSelect<CallableClass25>(Just<const std::string>("/tmp/fluidb_store/data12.dat"), Just<const std::string>("/tmp/fluidb_store/data13.dat"), "/tmp/fluidb_store/data8.dat");
    operation.run();
    operation.print_output(10);
  }
  // ForwardTrigger: (Just 
  //   (Right 
  //     [
  //      QGroup 
  //         [
  //          (
  //            ESym "revenue",
  //            E0 
  //               (NAggr 
  //                 AggrSum 
  //                 (E2 EMul 
  //                     (E0 (ESym "lo_extendedprice")) 
  //                     (E0 (ESym "lo_discount"))))
  //           )
  //         ] 
  //         []
  std::cout << "ForwardTrigger: (Just \n  (Right \n    [\n     QGroup \n        [\n         (\n           ESym \"revenue\",\n           E0 \n              (NAggr \n                AggrSum \n                (E2 EMul \n                    (E0 (ESym \"lo_extendedprice\")) \n                    (E0 (ESym \"lo_discount\"))))\n          )\n        ] \n        []\n    ]))" << std::endl;
  {
    auto operation = mkTotalAggregation<CallableClass30>(Just<const std::string>("/tmp/fluidb_store/data14.dat"), Just<const std::string>("/tmp/fluidb_store/data12.dat"), "/tmp/fluidb_store/data12.dat");
    operation.run();
    operation.print_output(10);
  }
  report_counters();
  return 0;
}
