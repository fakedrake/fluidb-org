#include <array>

#include <string>

#include <codegen.hh>
class Record21 {
 public:
  Record21(unsigned __sym__0___45_4786665323434102080, fluidb_string<18> __sym__0___45_718414210926260528, fluidb_string<9> __sym__0__2991929535981333470, fluidb_string<9> __sym__0__5086274491004809217, unsigned __sym__0___45_258751970341366497, unsigned __sym__0___45_8840925934981943951, fluidb_string<7> __sym__0___45_2839343239801880776, unsigned __sym__0___45_2276458087174471749, unsigned __sym__0__1929863969014267608, unsigned __sym__0__2704316647558228192, unsigned __sym__0__8504417473139519942, unsigned __sym__0___45_9148357713503185375, fluidb_string<15> __sym__0__7939938566864457892, fluidb_string<2> __sym__0___45_5573640818221010820, fluidb_string<2> __sym__0___45_2506228860430673747, fluidb_string<2> __sym__0__1781975366054978933, fluidb_string<2> __sym__0___45_7105427993818199241, unsigned __sym__0__426127656922644668, int __sym__0__5332437039091356550, unsigned __sym__0___45_8251678017490063938, unsigned __sym__0__2217824587726925672, unsigned __sym__0__1703507990261152271, unsigned __sym__0__4350726819421344058, fluidb_string<21> __sym__0__8335814327113075343, unsigned __sym__0__7800632214280706621, fluidb_string<10> __sym__0___45_2770092001494825154, unsigned __sym__0___45_8612492126202554674, double __sym__0__8589812627042051260, unsigned __sym__0__5937479715281144602, double __sym__0__5917963320619527060, unsigned __sym__0__8594077638514175264, unsigned __sym__0__3972645446391195683, double __sym__0___45_1938194446503439623, fluidb_string<13> __sym__0__4609612711595807185) : sym__0___45_4786665323434102080(__sym__0___45_4786665323434102080), sym__0___45_718414210926260528(__sym__0___45_718414210926260528), sym__0__2991929535981333470(__sym__0__2991929535981333470), sym__0__5086274491004809217(__sym__0__5086274491004809217), sym__0___45_258751970341366497(__sym__0___45_258751970341366497), sym__0___45_8840925934981943951(__sym__0___45_8840925934981943951), sym__0___45_2839343239801880776(__sym__0___45_2839343239801880776), sym__0___45_2276458087174471749(__sym__0___45_2276458087174471749), sym__0__1929863969014267608(__sym__0__1929863969014267608), sym__0__2704316647558228192(__sym__0__2704316647558228192), sym__0__8504417473139519942(__sym__0__8504417473139519942), sym__0___45_9148357713503185375(__sym__0___45_9148357713503185375), sym__0__7939938566864457892(__sym__0__7939938566864457892), sym__0___45_5573640818221010820(__sym__0___45_5573640818221010820), sym__0___45_2506228860430673747(__sym__0___45_2506228860430673747), sym__0__1781975366054978933(__sym__0__1781975366054978933), sym__0___45_7105427993818199241(__sym__0___45_7105427993818199241), sym__0__426127656922644668(__sym__0__426127656922644668), sym__0__5332437039091356550(__sym__0__5332437039091356550), sym__0___45_8251678017490063938(__sym__0___45_8251678017490063938), sym__0__2217824587726925672(__sym__0__2217824587726925672), sym__0__1703507990261152271(__sym__0__1703507990261152271), sym__0__4350726819421344058(__sym__0__4350726819421344058), sym__0__8335814327113075343(__sym__0__8335814327113075343), sym__0__7800632214280706621(__sym__0__7800632214280706621), sym__0___45_2770092001494825154(__sym__0___45_2770092001494825154), sym__0___45_8612492126202554674(__sym__0___45_8612492126202554674), sym__0__8589812627042051260(__sym__0__8589812627042051260), sym__0__5937479715281144602(__sym__0__5937479715281144602), sym__0__5917963320619527060(__sym__0__5917963320619527060), sym__0__8594077638514175264(__sym__0__8594077638514175264), sym__0__3972645446391195683(__sym__0__3972645446391195683), sym__0___45_1938194446503439623(__sym__0___45_1938194446503439623), sym__0__4609612711595807185(__sym__0__4609612711595807185)
  {
  }
  Record21() 
  {
  }
  std::string show() const{
    std::stringstream o;
    o << sym__0___45_4786665323434102080 << " | " << arrToString(sym__0___45_718414210926260528) << " | " << arrToString(sym__0__2991929535981333470) << " | " << arrToString(sym__0__5086274491004809217) << " | " << sym__0___45_258751970341366497 << " | " << sym__0___45_8840925934981943951 << " | " << arrToString(sym__0___45_2839343239801880776) << " | " << sym__0___45_2276458087174471749 << " | " << sym__0__1929863969014267608 << " | " << sym__0__2704316647558228192 << " | " << sym__0__8504417473139519942 << " | " << sym__0___45_9148357713503185375 << " | " << arrToString(sym__0__7939938566864457892) << " | " << arrToString(sym__0___45_5573640818221010820) << " | " << arrToString(sym__0___45_2506228860430673747) << " | " << arrToString(sym__0__1781975366054978933) << " | " << arrToString(sym__0___45_7105427993818199241) << " | " << sym__0__426127656922644668 << " | " << sym__0__5332437039091356550 << " | " << sym__0___45_8251678017490063938 << " | " << sym__0__2217824587726925672 << " | " << sym__0__1703507990261152271 << " | " << sym__0__4350726819421344058 << " | " << arrToString(sym__0__8335814327113075343) << " | " << sym__0__7800632214280706621 << " | " << arrToString(sym__0___45_2770092001494825154) << " | " << sym__0___45_8612492126202554674 << " | " << sym__0__8589812627042051260 << " | " << sym__0__5937479715281144602 << " | " << sym__0__5917963320619527060 << " | " << sym__0__8594077638514175264 << " | " << sym__0__3972645446391195683 << " | " << sym__0___45_1938194446503439623 << " | " << arrToString(sym__0__4609612711595807185);
    return o.str();
  }
  bool operator <(const Record21& otherRec) const{
    return (otherRec.sym__0___45_4786665323434102080 < sym__0___45_4786665323434102080 && (otherRec.sym__0___45_718414210926260528 < sym__0___45_718414210926260528 && (otherRec.sym__0__2991929535981333470 < sym__0__2991929535981333470 && (otherRec.sym__0__5086274491004809217 < sym__0__5086274491004809217 && (otherRec.sym__0___45_258751970341366497 < sym__0___45_258751970341366497 && (otherRec.sym__0___45_8840925934981943951 < sym__0___45_8840925934981943951 && (otherRec.sym__0___45_2839343239801880776 < sym__0___45_2839343239801880776 && (otherRec.sym__0___45_2276458087174471749 < sym__0___45_2276458087174471749 && (otherRec.sym__0__1929863969014267608 < sym__0__1929863969014267608 && (otherRec.sym__0__2704316647558228192 < sym__0__2704316647558228192 && (otherRec.sym__0__8504417473139519942 < sym__0__8504417473139519942 && (otherRec.sym__0___45_9148357713503185375 < sym__0___45_9148357713503185375 && (otherRec.sym__0__7939938566864457892 < sym__0__7939938566864457892 && (otherRec.sym__0___45_5573640818221010820 < sym__0___45_5573640818221010820 && (otherRec.sym__0___45_2506228860430673747 < sym__0___45_2506228860430673747 && (otherRec.sym__0__1781975366054978933 < sym__0__1781975366054978933 && (otherRec.sym__0___45_7105427993818199241 < sym__0___45_7105427993818199241 && (otherRec.sym__0__426127656922644668 < sym__0__426127656922644668 && (otherRec.sym__0__5332437039091356550 < sym__0__5332437039091356550 && (otherRec.sym__0___45_8251678017490063938 < sym__0___45_8251678017490063938 && (otherRec.sym__0__2217824587726925672 < sym__0__2217824587726925672 && (otherRec.sym__0__1703507990261152271 < sym__0__1703507990261152271 && (otherRec.sym__0__4350726819421344058 < sym__0__4350726819421344058 && (otherRec.sym__0__8335814327113075343 < sym__0__8335814327113075343 && (otherRec.sym__0__7800632214280706621 < sym__0__7800632214280706621 && (otherRec.sym__0___45_2770092001494825154 < sym__0___45_2770092001494825154 && (otherRec.sym__0___45_8612492126202554674 < sym__0___45_8612492126202554674 && (otherRec.sym__0__8589812627042051260 < sym__0__8589812627042051260 && (otherRec.sym__0__5937479715281144602 < sym__0__5937479715281144602 && (otherRec.sym__0__5917963320619527060 < sym__0__5917963320619527060 && (otherRec.sym__0__8594077638514175264 < sym__0__8594077638514175264 && (otherRec.sym__0__3972645446391195683 < sym__0__3972645446391195683 && (otherRec.sym__0___45_1938194446503439623 < sym__0___45_1938194446503439623 && otherRec.sym__0__4609612711595807185 < sym__0__4609612711595807185)))))))))))))))))))))))))))))))));
  }
  bool operator ==(const Record21& otherRec) const{
    return (otherRec.sym__0___45_4786665323434102080 == sym__0___45_4786665323434102080 && (otherRec.sym__0___45_718414210926260528 == sym__0___45_718414210926260528 && (otherRec.sym__0__2991929535981333470 == sym__0__2991929535981333470 && (otherRec.sym__0__5086274491004809217 == sym__0__5086274491004809217 && (otherRec.sym__0___45_258751970341366497 == sym__0___45_258751970341366497 && (otherRec.sym__0___45_8840925934981943951 == sym__0___45_8840925934981943951 && (otherRec.sym__0___45_2839343239801880776 == sym__0___45_2839343239801880776 && (otherRec.sym__0___45_2276458087174471749 == sym__0___45_2276458087174471749 && (otherRec.sym__0__1929863969014267608 == sym__0__1929863969014267608 && (otherRec.sym__0__2704316647558228192 == sym__0__2704316647558228192 && (otherRec.sym__0__8504417473139519942 == sym__0__8504417473139519942 && (otherRec.sym__0___45_9148357713503185375 == sym__0___45_9148357713503185375 && (otherRec.sym__0__7939938566864457892 == sym__0__7939938566864457892 && (otherRec.sym__0___45_5573640818221010820 == sym__0___45_5573640818221010820 && (otherRec.sym__0___45_2506228860430673747 == sym__0___45_2506228860430673747 && (otherRec.sym__0__1781975366054978933 == sym__0__1781975366054978933 && (otherRec.sym__0___45_7105427993818199241 == sym__0___45_7105427993818199241 && (otherRec.sym__0__426127656922644668 == sym__0__426127656922644668 && (otherRec.sym__0__5332437039091356550 == sym__0__5332437039091356550 && (otherRec.sym__0___45_8251678017490063938 == sym__0___45_8251678017490063938 && (otherRec.sym__0__2217824587726925672 == sym__0__2217824587726925672 && (otherRec.sym__0__1703507990261152271 == sym__0__1703507990261152271 && (otherRec.sym__0__4350726819421344058 == sym__0__4350726819421344058 && (otherRec.sym__0__8335814327113075343 == sym__0__8335814327113075343 && (otherRec.sym__0__7800632214280706621 == sym__0__7800632214280706621 && (otherRec.sym__0___45_2770092001494825154 == sym__0___45_2770092001494825154 && (otherRec.sym__0___45_8612492126202554674 == sym__0___45_8612492126202554674 && (otherRec.sym__0__8589812627042051260 == sym__0__8589812627042051260 && (otherRec.sym__0__5937479715281144602 == sym__0__5937479715281144602 && (otherRec.sym__0__5917963320619527060 == sym__0__5917963320619527060 && (otherRec.sym__0__8594077638514175264 == sym__0__8594077638514175264 && (otherRec.sym__0__3972645446391195683 == sym__0__3972645446391195683 && (otherRec.sym__0___45_1938194446503439623 == sym__0___45_1938194446503439623 && otherRec.sym__0__4609612711595807185 == sym__0__4609612711595807185)))))))))))))))))))))))))))))))));
  }
  bool operator !=(const Record21& otherRec) const{
    return (otherRec.sym__0___45_4786665323434102080 != sym__0___45_4786665323434102080 || (otherRec.sym__0___45_718414210926260528 != sym__0___45_718414210926260528 || (otherRec.sym__0__2991929535981333470 != sym__0__2991929535981333470 || (otherRec.sym__0__5086274491004809217 != sym__0__5086274491004809217 || (otherRec.sym__0___45_258751970341366497 != sym__0___45_258751970341366497 || (otherRec.sym__0___45_8840925934981943951 != sym__0___45_8840925934981943951 || (otherRec.sym__0___45_2839343239801880776 != sym__0___45_2839343239801880776 || (otherRec.sym__0___45_2276458087174471749 != sym__0___45_2276458087174471749 || (otherRec.sym__0__1929863969014267608 != sym__0__1929863969014267608 || (otherRec.sym__0__2704316647558228192 != sym__0__2704316647558228192 || (otherRec.sym__0__8504417473139519942 != sym__0__8504417473139519942 || (otherRec.sym__0___45_9148357713503185375 != sym__0___45_9148357713503185375 || (otherRec.sym__0__7939938566864457892 != sym__0__7939938566864457892 || (otherRec.sym__0___45_5573640818221010820 != sym__0___45_5573640818221010820 || (otherRec.sym__0___45_2506228860430673747 != sym__0___45_2506228860430673747 || (otherRec.sym__0__1781975366054978933 != sym__0__1781975366054978933 || (otherRec.sym__0___45_7105427993818199241 != sym__0___45_7105427993818199241 || (otherRec.sym__0__426127656922644668 != sym__0__426127656922644668 || (otherRec.sym__0__5332437039091356550 != sym__0__5332437039091356550 || (otherRec.sym__0___45_8251678017490063938 != sym__0___45_8251678017490063938 || (otherRec.sym__0__2217824587726925672 != sym__0__2217824587726925672 || (otherRec.sym__0__1703507990261152271 != sym__0__1703507990261152271 || (otherRec.sym__0__4350726819421344058 != sym__0__4350726819421344058 || (otherRec.sym__0__8335814327113075343 != sym__0__8335814327113075343 || (otherRec.sym__0__7800632214280706621 != sym__0__7800632214280706621 || (otherRec.sym__0___45_2770092001494825154 != sym__0___45_2770092001494825154 || (otherRec.sym__0___45_8612492126202554674 != sym__0___45_8612492126202554674 || (otherRec.sym__0__8589812627042051260 != sym__0__8589812627042051260 || (otherRec.sym__0__5937479715281144602 != sym__0__5937479715281144602 || (otherRec.sym__0__5917963320619527060 != sym__0__5917963320619527060 || (otherRec.sym__0__8594077638514175264 != sym__0__8594077638514175264 || (otherRec.sym__0__3972645446391195683 != sym__0__3972645446391195683 || (otherRec.sym__0___45_1938194446503439623 != sym__0___45_1938194446503439623 || otherRec.sym__0__4609612711595807185 != sym__0__4609612711595807185)))))))))))))))))))))))))))))))));
  }
  unsigned sym__0___45_4786665323434102080;
  fluidb_string<18> sym__0___45_718414210926260528;
  fluidb_string<9> sym__0__2991929535981333470;
  fluidb_string<9> sym__0__5086274491004809217;
  unsigned sym__0___45_258751970341366497;
  unsigned sym__0___45_8840925934981943951;
  fluidb_string<7> sym__0___45_2839343239801880776;
  unsigned sym__0___45_2276458087174471749;
  unsigned sym__0__1929863969014267608;
  unsigned sym__0__2704316647558228192;
  unsigned sym__0__8504417473139519942;
  unsigned sym__0___45_9148357713503185375;
  fluidb_string<15> sym__0__7939938566864457892;
  fluidb_string<2> sym__0___45_5573640818221010820;
  fluidb_string<2> sym__0___45_2506228860430673747;
  fluidb_string<2> sym__0__1781975366054978933;
  fluidb_string<2> sym__0___45_7105427993818199241;
  unsigned sym__0__426127656922644668;
  int sym__0__5332437039091356550;
  unsigned sym__0___45_8251678017490063938;
  unsigned sym__0__2217824587726925672;
  unsigned sym__0__1703507990261152271;
  unsigned sym__0__4350726819421344058;
  fluidb_string<21> sym__0__8335814327113075343;
  unsigned sym__0__7800632214280706621;
  fluidb_string<10> sym__0___45_2770092001494825154;
  unsigned sym__0___45_8612492126202554674;
  double sym__0__8589812627042051260;
  unsigned sym__0__5937479715281144602;
  double sym__0__5917963320619527060;
  unsigned sym__0__8594077638514175264;
  unsigned sym__0__3972645446391195683;
  double sym__0___45_1938194446503439623;
  fluidb_string<13> sym__0__4609612711595807185;
 private:
};


class Record45 {
 public:
  Record45(unsigned __sym__0__7178003535380331304, fluidb_string<55> __sym__0___45_7020257275696364520, fluidb_string<25> __sym__0___45_6307179734719967033, fluidb_string<7> __sym__0__4568304886257136061, fluidb_string<10> __sym__0___45_6291097039630000265, fluidb_string<11> __sym__0__551327770031967739, fluidb_string<25> __sym__0__3827696365022297353, unsigned __sym__0___45_1779543743759935870, fluidb_string<10> __sym__0__3752090135924368535) : sym__0__7178003535380331304(__sym__0__7178003535380331304), sym__0___45_7020257275696364520(__sym__0___45_7020257275696364520), sym__0___45_6307179734719967033(__sym__0___45_6307179734719967033), sym__0__4568304886257136061(__sym__0__4568304886257136061), sym__0___45_6291097039630000265(__sym__0___45_6291097039630000265), sym__0__551327770031967739(__sym__0__551327770031967739), sym__0__3827696365022297353(__sym__0__3827696365022297353), sym__0___45_1779543743759935870(__sym__0___45_1779543743759935870), sym__0__3752090135924368535(__sym__0__3752090135924368535)
  {
  }
  Record45() 
  {
  }
  std::string show() const{
    std::stringstream o;
    o << sym__0__7178003535380331304 << " | " << arrToString(sym__0___45_7020257275696364520) << " | " << arrToString(sym__0___45_6307179734719967033) << " | " << arrToString(sym__0__4568304886257136061) << " | " << arrToString(sym__0___45_6291097039630000265) << " | " << arrToString(sym__0__551327770031967739) << " | " << arrToString(sym__0__3827696365022297353) << " | " << sym__0___45_1779543743759935870 << " | " << arrToString(sym__0__3752090135924368535);
    return o.str();
  }
  bool operator <(const Record45& otherRec) const{
    return (otherRec.sym__0__7178003535380331304 < sym__0__7178003535380331304 && (otherRec.sym__0___45_7020257275696364520 < sym__0___45_7020257275696364520 && (otherRec.sym__0___45_6307179734719967033 < sym__0___45_6307179734719967033 && (otherRec.sym__0__4568304886257136061 < sym__0__4568304886257136061 && (otherRec.sym__0___45_6291097039630000265 < sym__0___45_6291097039630000265 && (otherRec.sym__0__551327770031967739 < sym__0__551327770031967739 && (otherRec.sym__0__3827696365022297353 < sym__0__3827696365022297353 && (otherRec.sym__0___45_1779543743759935870 < sym__0___45_1779543743759935870 && otherRec.sym__0__3752090135924368535 < sym__0__3752090135924368535))))))));
  }
  bool operator ==(const Record45& otherRec) const{
    return (otherRec.sym__0__7178003535380331304 == sym__0__7178003535380331304 && (otherRec.sym__0___45_7020257275696364520 == sym__0___45_7020257275696364520 && (otherRec.sym__0___45_6307179734719967033 == sym__0___45_6307179734719967033 && (otherRec.sym__0__4568304886257136061 == sym__0__4568304886257136061 && (otherRec.sym__0___45_6291097039630000265 == sym__0___45_6291097039630000265 && (otherRec.sym__0__551327770031967739 == sym__0__551327770031967739 && (otherRec.sym__0__3827696365022297353 == sym__0__3827696365022297353 && (otherRec.sym__0___45_1779543743759935870 == sym__0___45_1779543743759935870 && otherRec.sym__0__3752090135924368535 == sym__0__3752090135924368535))))))));
  }
  bool operator !=(const Record45& otherRec) const{
    return (otherRec.sym__0__7178003535380331304 != sym__0__7178003535380331304 || (otherRec.sym__0___45_7020257275696364520 != sym__0___45_7020257275696364520 || (otherRec.sym__0___45_6307179734719967033 != sym__0___45_6307179734719967033 || (otherRec.sym__0__4568304886257136061 != sym__0__4568304886257136061 || (otherRec.sym__0___45_6291097039630000265 != sym__0___45_6291097039630000265 || (otherRec.sym__0__551327770031967739 != sym__0__551327770031967739 || (otherRec.sym__0__3827696365022297353 != sym__0__3827696365022297353 || (otherRec.sym__0___45_1779543743759935870 != sym__0___45_1779543743759935870 || otherRec.sym__0__3752090135924368535 != sym__0__3752090135924368535))))))));
  }
  unsigned sym__0__7178003535380331304;
  fluidb_string<55> sym__0___45_7020257275696364520;
  fluidb_string<25> sym__0___45_6307179734719967033;
  fluidb_string<7> sym__0__4568304886257136061;
  fluidb_string<10> sym__0___45_6291097039630000265;
  fluidb_string<11> sym__0__551327770031967739;
  fluidb_string<25> sym__0__3827696365022297353;
  unsigned sym__0___45_1779543743759935870;
  fluidb_string<10> sym__0__3752090135924368535;
 private:
};


class Record9 {
 public:
  Record9(unsigned __sym__0___45_7574074018531922998, int __sym__0__1125464382786937920, unsigned __sym__0___45_8257174981563598792, unsigned __sym__0__957746932829998382, unsigned __sym__0__934137931677987637, unsigned __sym__0___45_7332894783442362324, fluidb_string<21> __sym__0__8974811218372806325, unsigned __sym__0___45_5217562530132451785, fluidb_string<10> __sym__0__7851147553396318904, unsigned __sym__0___45_4975505511391694456, double __sym__0___45_7249986409969561654, unsigned __sym__0__4671626969570181580, double __sym__0___45_3666121704283105054, unsigned __sym__0__5495011930072844518, unsigned __sym__0___45_4423447118092167055, double __sym__0___45_1608082021099887893, fluidb_string<13> __sym__0__1584187396639360899) : sym__0___45_7574074018531922998(__sym__0___45_7574074018531922998), sym__0__1125464382786937920(__sym__0__1125464382786937920), sym__0___45_8257174981563598792(__sym__0___45_8257174981563598792), sym__0__957746932829998382(__sym__0__957746932829998382), sym__0__934137931677987637(__sym__0__934137931677987637), sym__0___45_7332894783442362324(__sym__0___45_7332894783442362324), sym__0__8974811218372806325(__sym__0__8974811218372806325), sym__0___45_5217562530132451785(__sym__0___45_5217562530132451785), sym__0__7851147553396318904(__sym__0__7851147553396318904), sym__0___45_4975505511391694456(__sym__0___45_4975505511391694456), sym__0___45_7249986409969561654(__sym__0___45_7249986409969561654), sym__0__4671626969570181580(__sym__0__4671626969570181580), sym__0___45_3666121704283105054(__sym__0___45_3666121704283105054), sym__0__5495011930072844518(__sym__0__5495011930072844518), sym__0___45_4423447118092167055(__sym__0___45_4423447118092167055), sym__0___45_1608082021099887893(__sym__0___45_1608082021099887893), sym__0__1584187396639360899(__sym__0__1584187396639360899)
  {
  }
  Record9() 
  {
  }
  std::string show() const{
    std::stringstream o;
    o << sym__0___45_7574074018531922998 << " | " << sym__0__1125464382786937920 << " | " << sym__0___45_8257174981563598792 << " | " << sym__0__957746932829998382 << " | " << sym__0__934137931677987637 << " | " << sym__0___45_7332894783442362324 << " | " << arrToString(sym__0__8974811218372806325) << " | " << sym__0___45_5217562530132451785 << " | " << arrToString(sym__0__7851147553396318904) << " | " << sym__0___45_4975505511391694456 << " | " << sym__0___45_7249986409969561654 << " | " << sym__0__4671626969570181580 << " | " << sym__0___45_3666121704283105054 << " | " << sym__0__5495011930072844518 << " | " << sym__0___45_4423447118092167055 << " | " << sym__0___45_1608082021099887893 << " | " << arrToString(sym__0__1584187396639360899);
    return o.str();
  }
  bool operator <(const Record9& otherRec) const{
    return (otherRec.sym__0___45_7574074018531922998 < sym__0___45_7574074018531922998 && (otherRec.sym__0__1125464382786937920 < sym__0__1125464382786937920 && (otherRec.sym__0___45_8257174981563598792 < sym__0___45_8257174981563598792 && (otherRec.sym__0__957746932829998382 < sym__0__957746932829998382 && (otherRec.sym__0__934137931677987637 < sym__0__934137931677987637 && (otherRec.sym__0___45_7332894783442362324 < sym__0___45_7332894783442362324 && (otherRec.sym__0__8974811218372806325 < sym__0__8974811218372806325 && (otherRec.sym__0___45_5217562530132451785 < sym__0___45_5217562530132451785 && (otherRec.sym__0__7851147553396318904 < sym__0__7851147553396318904 && (otherRec.sym__0___45_4975505511391694456 < sym__0___45_4975505511391694456 && (otherRec.sym__0___45_7249986409969561654 < sym__0___45_7249986409969561654 && (otherRec.sym__0__4671626969570181580 < sym__0__4671626969570181580 && (otherRec.sym__0___45_3666121704283105054 < sym__0___45_3666121704283105054 && (otherRec.sym__0__5495011930072844518 < sym__0__5495011930072844518 && (otherRec.sym__0___45_4423447118092167055 < sym__0___45_4423447118092167055 && (otherRec.sym__0___45_1608082021099887893 < sym__0___45_1608082021099887893 && otherRec.sym__0__1584187396639360899 < sym__0__1584187396639360899))))))))))))))));
  }
  bool operator ==(const Record9& otherRec) const{
    return (otherRec.sym__0___45_7574074018531922998 == sym__0___45_7574074018531922998 && (otherRec.sym__0__1125464382786937920 == sym__0__1125464382786937920 && (otherRec.sym__0___45_8257174981563598792 == sym__0___45_8257174981563598792 && (otherRec.sym__0__957746932829998382 == sym__0__957746932829998382 && (otherRec.sym__0__934137931677987637 == sym__0__934137931677987637 && (otherRec.sym__0___45_7332894783442362324 == sym__0___45_7332894783442362324 && (otherRec.sym__0__8974811218372806325 == sym__0__8974811218372806325 && (otherRec.sym__0___45_5217562530132451785 == sym__0___45_5217562530132451785 && (otherRec.sym__0__7851147553396318904 == sym__0__7851147553396318904 && (otherRec.sym__0___45_4975505511391694456 == sym__0___45_4975505511391694456 && (otherRec.sym__0___45_7249986409969561654 == sym__0___45_7249986409969561654 && (otherRec.sym__0__4671626969570181580 == sym__0__4671626969570181580 && (otherRec.sym__0___45_3666121704283105054 == sym__0___45_3666121704283105054 && (otherRec.sym__0__5495011930072844518 == sym__0__5495011930072844518 && (otherRec.sym__0___45_4423447118092167055 == sym__0___45_4423447118092167055 && (otherRec.sym__0___45_1608082021099887893 == sym__0___45_1608082021099887893 && otherRec.sym__0__1584187396639360899 == sym__0__1584187396639360899))))))))))))))));
  }
  bool operator !=(const Record9& otherRec) const{
    return (otherRec.sym__0___45_7574074018531922998 != sym__0___45_7574074018531922998 || (otherRec.sym__0__1125464382786937920 != sym__0__1125464382786937920 || (otherRec.sym__0___45_8257174981563598792 != sym__0___45_8257174981563598792 || (otherRec.sym__0__957746932829998382 != sym__0__957746932829998382 || (otherRec.sym__0__934137931677987637 != sym__0__934137931677987637 || (otherRec.sym__0___45_7332894783442362324 != sym__0___45_7332894783442362324 || (otherRec.sym__0__8974811218372806325 != sym__0__8974811218372806325 || (otherRec.sym__0___45_5217562530132451785 != sym__0___45_5217562530132451785 || (otherRec.sym__0__7851147553396318904 != sym__0__7851147553396318904 || (otherRec.sym__0___45_4975505511391694456 != sym__0___45_4975505511391694456 || (otherRec.sym__0___45_7249986409969561654 != sym__0___45_7249986409969561654 || (otherRec.sym__0__4671626969570181580 != sym__0__4671626969570181580 || (otherRec.sym__0___45_3666121704283105054 != sym__0___45_3666121704283105054 || (otherRec.sym__0__5495011930072844518 != sym__0__5495011930072844518 || (otherRec.sym__0___45_4423447118092167055 != sym__0___45_4423447118092167055 || (otherRec.sym__0___45_1608082021099887893 != sym__0___45_1608082021099887893 || otherRec.sym__0__1584187396639360899 != sym__0__1584187396639360899))))))))))))))));
  }
  unsigned sym__0___45_7574074018531922998;
  int sym__0__1125464382786937920;
  unsigned sym__0___45_8257174981563598792;
  unsigned sym__0__957746932829998382;
  unsigned sym__0__934137931677987637;
  unsigned sym__0___45_7332894783442362324;
  fluidb_string<21> sym__0__8974811218372806325;
  unsigned sym__0___45_5217562530132451785;
  fluidb_string<10> sym__0__7851147553396318904;
  unsigned sym__0___45_4975505511391694456;
  double sym__0___45_7249986409969561654;
  unsigned sym__0__4671626969570181580;
  double sym__0___45_3666121704283105054;
  unsigned sym__0__5495011930072844518;
  unsigned sym__0___45_4423447118092167055;
  double sym__0___45_1608082021099887893;
  fluidb_string<13> sym__0__1584187396639360899;
 private:
};


class Record46 {
 public:
  Record46(unsigned __sym__0__3621650489550753899, fluidb_string<18> __sym__0___45_2948215607211369349, fluidb_string<9> __sym__0___45_8856885663442357963, fluidb_string<9> __sym__0___45_8916023721409687458, unsigned __sym__0__8946000790400782120, unsigned __sym__0___45_2342846251621573170, fluidb_string<7> __sym__0__1032112610168018387, unsigned __sym__0__7011664169603445220, unsigned __sym__0__4324933040532830835, unsigned __sym__0___45_4021802192502517237, unsigned __sym__0___45_3995179909498575571, unsigned __sym__0__5024632712808532094, fluidb_string<15> __sym__0___45_2888940964904426273, fluidb_string<2> __sym__0__388284026989546791, fluidb_string<2> __sym__0__7857167294786104330, fluidb_string<2> __sym__0__4687998046624254050, fluidb_string<2> __sym__0__6006260245622319568, unsigned __sym__0___45_6094952503271846681, int __sym__0___45_4584467813004062355, unsigned __sym__0___45_626375228995803371, unsigned __sym__0___45_1921065565269642365, unsigned __sym__0__8159540803036597784, unsigned __sym__0___45_3799099060194420991, fluidb_string<21> __sym__0___45_46659435107143272, unsigned __sym__0__974718074128111770, fluidb_string<10> __sym__0___45_6853763430966553195, unsigned __sym__0___45_3390830821838262747, double __sym__0___45_3119614841511366425, unsigned __sym__0___45_2252607189598367, double __sym__0___45_8964179892079168049, unsigned __sym__0___45_2159923936634862133, unsigned __sym__0___45_8423263630379754148, double __sym__0__3945318628861617222, fluidb_string<13> __sym__0__884810496370279086, unsigned __sym__0___45_4626225858345901984, fluidb_string<25> __sym__0___45_9053558893173472421, fluidb_string<40> __sym__0__7782476241138750585, fluidb_string<16> __sym__0__2792235255099272583, fluidb_string<16> __sym__0___45_5693560869534272203, fluidb_string<13> __sym__0__2412297939095727556, fluidb_string<15> __sym__0__2007415003408133595, unsigned __sym__0___45_5951663584277409901, fluidb_string<18> __sym__0__1069716994239709627, fluidb_string<40> __sym__0__5325598899940282257, fluidb_string<11> __sym__0__6177928352879073975, fluidb_string<15> __sym__0___45_6830131149002033523, fluidb_string<13> __sym__0__4606794854636421868, fluidb_string<15> __sym__0__4310971986799422779, fluidb_string<21> __sym__0___45_329020162802994721, unsigned __sym__0__475106436053698917, fluidb_string<55> __sym__0__2091979395855916501, fluidb_string<25> __sym__0___45_8342080612972883318, fluidb_string<7> __sym__0___45_5674057173303846288, fluidb_string<10> __sym__0__3631223897369402426, fluidb_string<11> __sym__0___45_7986370385586055242, fluidb_string<25> __sym__0___45_385650784014629180, unsigned __sym__0__5959307721228335951, fluidb_string<10> __sym__0___45_5759464174332942374) : sym__0__3621650489550753899(__sym__0__3621650489550753899), sym__0___45_2948215607211369349(__sym__0___45_2948215607211369349), sym__0___45_8856885663442357963(__sym__0___45_8856885663442357963), sym__0___45_8916023721409687458(__sym__0___45_8916023721409687458), sym__0__8946000790400782120(__sym__0__8946000790400782120), sym__0___45_2342846251621573170(__sym__0___45_2342846251621573170), sym__0__1032112610168018387(__sym__0__1032112610168018387), sym__0__7011664169603445220(__sym__0__7011664169603445220), sym__0__4324933040532830835(__sym__0__4324933040532830835), sym__0___45_4021802192502517237(__sym__0___45_4021802192502517237), sym__0___45_3995179909498575571(__sym__0___45_3995179909498575571), sym__0__5024632712808532094(__sym__0__5024632712808532094), sym__0___45_2888940964904426273(__sym__0___45_2888940964904426273), sym__0__388284026989546791(__sym__0__388284026989546791), sym__0__7857167294786104330(__sym__0__7857167294786104330), sym__0__4687998046624254050(__sym__0__4687998046624254050), sym__0__6006260245622319568(__sym__0__6006260245622319568), sym__0___45_6094952503271846681(__sym__0___45_6094952503271846681), sym__0___45_4584467813004062355(__sym__0___45_4584467813004062355), sym__0___45_626375228995803371(__sym__0___45_626375228995803371), sym__0___45_1921065565269642365(__sym__0___45_1921065565269642365), sym__0__8159540803036597784(__sym__0__8159540803036597784), sym__0___45_3799099060194420991(__sym__0___45_3799099060194420991), sym__0___45_46659435107143272(__sym__0___45_46659435107143272), sym__0__974718074128111770(__sym__0__974718074128111770), sym__0___45_6853763430966553195(__sym__0___45_6853763430966553195), sym__0___45_3390830821838262747(__sym__0___45_3390830821838262747), sym__0___45_3119614841511366425(__sym__0___45_3119614841511366425), sym__0___45_2252607189598367(__sym__0___45_2252607189598367), sym__0___45_8964179892079168049(__sym__0___45_8964179892079168049), sym__0___45_2159923936634862133(__sym__0___45_2159923936634862133), sym__0___45_8423263630379754148(__sym__0___45_8423263630379754148), sym__0__3945318628861617222(__sym__0__3945318628861617222), sym__0__884810496370279086(__sym__0__884810496370279086), sym__0___45_4626225858345901984(__sym__0___45_4626225858345901984), sym__0___45_9053558893173472421(__sym__0___45_9053558893173472421), sym__0__7782476241138750585(__sym__0__7782476241138750585), sym__0__2792235255099272583(__sym__0__2792235255099272583), sym__0___45_5693560869534272203(__sym__0___45_5693560869534272203), sym__0__2412297939095727556(__sym__0__2412297939095727556), sym__0__2007415003408133595(__sym__0__2007415003408133595), sym__0___45_5951663584277409901(__sym__0___45_5951663584277409901), sym__0__1069716994239709627(__sym__0__1069716994239709627), sym__0__5325598899940282257(__sym__0__5325598899940282257), sym__0__6177928352879073975(__sym__0__6177928352879073975), sym__0___45_6830131149002033523(__sym__0___45_6830131149002033523), sym__0__4606794854636421868(__sym__0__4606794854636421868), sym__0__4310971986799422779(__sym__0__4310971986799422779), sym__0___45_329020162802994721(__sym__0___45_329020162802994721), sym__0__475106436053698917(__sym__0__475106436053698917), sym__0__2091979395855916501(__sym__0__2091979395855916501), sym__0___45_8342080612972883318(__sym__0___45_8342080612972883318), sym__0___45_5674057173303846288(__sym__0___45_5674057173303846288), sym__0__3631223897369402426(__sym__0__3631223897369402426), sym__0___45_7986370385586055242(__sym__0___45_7986370385586055242), sym__0___45_385650784014629180(__sym__0___45_385650784014629180), sym__0__5959307721228335951(__sym__0__5959307721228335951), sym__0___45_5759464174332942374(__sym__0___45_5759464174332942374)
  {
  }
  Record46() 
  {
  }
  std::string show() const{
    std::stringstream o;
    o << sym__0__3621650489550753899 << " | " << arrToString(sym__0___45_2948215607211369349) << " | " << arrToString(sym__0___45_8856885663442357963) << " | " << arrToString(sym__0___45_8916023721409687458) << " | " << sym__0__8946000790400782120 << " | " << sym__0___45_2342846251621573170 << " | " << arrToString(sym__0__1032112610168018387) << " | " << sym__0__7011664169603445220 << " | " << sym__0__4324933040532830835 << " | " << sym__0___45_4021802192502517237 << " | " << sym__0___45_3995179909498575571 << " | " << sym__0__5024632712808532094 << " | " << arrToString(sym__0___45_2888940964904426273) << " | " << arrToString(sym__0__388284026989546791) << " | " << arrToString(sym__0__7857167294786104330) << " | " << arrToString(sym__0__4687998046624254050) << " | " << arrToString(sym__0__6006260245622319568) << " | " << sym__0___45_6094952503271846681 << " | " << sym__0___45_4584467813004062355 << " | " << sym__0___45_626375228995803371 << " | " << sym__0___45_1921065565269642365 << " | " << sym__0__8159540803036597784 << " | " << sym__0___45_3799099060194420991 << " | " << arrToString(sym__0___45_46659435107143272) << " | " << sym__0__974718074128111770 << " | " << arrToString(sym__0___45_6853763430966553195) << " | " << sym__0___45_3390830821838262747 << " | " << sym__0___45_3119614841511366425 << " | " << sym__0___45_2252607189598367 << " | " << sym__0___45_8964179892079168049 << " | " << sym__0___45_2159923936634862133 << " | " << sym__0___45_8423263630379754148 << " | " << sym__0__3945318628861617222 << " | " << arrToString(sym__0__884810496370279086) << " | " << sym__0___45_4626225858345901984 << " | " << arrToString(sym__0___45_9053558893173472421) << " | " << arrToString(sym__0__7782476241138750585) << " | " << arrToString(sym__0__2792235255099272583) << " | " << arrToString(sym__0___45_5693560869534272203) << " | " << arrToString(sym__0__2412297939095727556) << " | " << arrToString(sym__0__2007415003408133595) << " | " << sym__0___45_5951663584277409901 << " | " << arrToString(sym__0__1069716994239709627) << " | " << arrToString(sym__0__5325598899940282257) << " | " << arrToString(sym__0__6177928352879073975) << " | " << arrToString(sym__0___45_6830131149002033523) << " | " << arrToString(sym__0__4606794854636421868) << " | " << arrToString(sym__0__4310971986799422779) << " | " << arrToString(sym__0___45_329020162802994721) << " | " << sym__0__475106436053698917 << " | " << arrToString(sym__0__2091979395855916501) << " | " << arrToString(sym__0___45_8342080612972883318) << " | " << arrToString(sym__0___45_5674057173303846288) << " | " << arrToString(sym__0__3631223897369402426) << " | " << arrToString(sym__0___45_7986370385586055242) << " | " << arrToString(sym__0___45_385650784014629180) << " | " << sym__0__5959307721228335951 << " | " << arrToString(sym__0___45_5759464174332942374);
    return o.str();
  }
  bool operator <(const Record46& otherRec) const{
    return (otherRec.sym__0__3621650489550753899 < sym__0__3621650489550753899 && (otherRec.sym__0___45_2948215607211369349 < sym__0___45_2948215607211369349 && (otherRec.sym__0___45_8856885663442357963 < sym__0___45_8856885663442357963 && (otherRec.sym__0___45_8916023721409687458 < sym__0___45_8916023721409687458 && (otherRec.sym__0__8946000790400782120 < sym__0__8946000790400782120 && (otherRec.sym__0___45_2342846251621573170 < sym__0___45_2342846251621573170 && (otherRec.sym__0__1032112610168018387 < sym__0__1032112610168018387 && (otherRec.sym__0__7011664169603445220 < sym__0__7011664169603445220 && (otherRec.sym__0__4324933040532830835 < sym__0__4324933040532830835 && (otherRec.sym__0___45_4021802192502517237 < sym__0___45_4021802192502517237 && (otherRec.sym__0___45_3995179909498575571 < sym__0___45_3995179909498575571 && (otherRec.sym__0__5024632712808532094 < sym__0__5024632712808532094 && (otherRec.sym__0___45_2888940964904426273 < sym__0___45_2888940964904426273 && (otherRec.sym__0__388284026989546791 < sym__0__388284026989546791 && (otherRec.sym__0__7857167294786104330 < sym__0__7857167294786104330 && (otherRec.sym__0__4687998046624254050 < sym__0__4687998046624254050 && (otherRec.sym__0__6006260245622319568 < sym__0__6006260245622319568 && (otherRec.sym__0___45_6094952503271846681 < sym__0___45_6094952503271846681 && (otherRec.sym__0___45_4584467813004062355 < sym__0___45_4584467813004062355 && (otherRec.sym__0___45_626375228995803371 < sym__0___45_626375228995803371 && (otherRec.sym__0___45_1921065565269642365 < sym__0___45_1921065565269642365 && (otherRec.sym__0__8159540803036597784 < sym__0__8159540803036597784 && (otherRec.sym__0___45_3799099060194420991 < sym__0___45_3799099060194420991 && (otherRec.sym__0___45_46659435107143272 < sym__0___45_46659435107143272 && (otherRec.sym__0__974718074128111770 < sym__0__974718074128111770 && (otherRec.sym__0___45_6853763430966553195 < sym__0___45_6853763430966553195 && (otherRec.sym__0___45_3390830821838262747 < sym__0___45_3390830821838262747 && (otherRec.sym__0___45_3119614841511366425 < sym__0___45_3119614841511366425 && (otherRec.sym__0___45_2252607189598367 < sym__0___45_2252607189598367 && (otherRec.sym__0___45_8964179892079168049 < sym__0___45_8964179892079168049 && (otherRec.sym__0___45_2159923936634862133 < sym__0___45_2159923936634862133 && (otherRec.sym__0___45_8423263630379754148 < sym__0___45_8423263630379754148 && (otherRec.sym__0__3945318628861617222 < sym__0__3945318628861617222 && (otherRec.sym__0__884810496370279086 < sym__0__884810496370279086 && (otherRec.sym__0___45_4626225858345901984 < sym__0___45_4626225858345901984 && (otherRec.sym__0___45_9053558893173472421 < sym__0___45_9053558893173472421 && (otherRec.sym__0__7782476241138750585 < sym__0__7782476241138750585 && (otherRec.sym__0__2792235255099272583 < sym__0__2792235255099272583 && (otherRec.sym__0___45_5693560869534272203 < sym__0___45_5693560869534272203 && (otherRec.sym__0__2412297939095727556 < sym__0__2412297939095727556 && (otherRec.sym__0__2007415003408133595 < sym__0__2007415003408133595 && (otherRec.sym__0___45_5951663584277409901 < sym__0___45_5951663584277409901 && (otherRec.sym__0__1069716994239709627 < sym__0__1069716994239709627 && (otherRec.sym__0__5325598899940282257 < sym__0__5325598899940282257 && (otherRec.sym__0__6177928352879073975 < sym__0__6177928352879073975 && (otherRec.sym__0___45_6830131149002033523 < sym__0___45_6830131149002033523 && (otherRec.sym__0__4606794854636421868 < sym__0__4606794854636421868 && (otherRec.sym__0__4310971986799422779 < sym__0__4310971986799422779 && (otherRec.sym__0___45_329020162802994721 < sym__0___45_329020162802994721 && (otherRec.sym__0__475106436053698917 < sym__0__475106436053698917 && (otherRec.sym__0__2091979395855916501 < sym__0__2091979395855916501 && (otherRec.sym__0___45_8342080612972883318 < sym__0___45_8342080612972883318 && (otherRec.sym__0___45_5674057173303846288 < sym__0___45_5674057173303846288 && (otherRec.sym__0__3631223897369402426 < sym__0__3631223897369402426 && (otherRec.sym__0___45_7986370385586055242 < sym__0___45_7986370385586055242 && (otherRec.sym__0___45_385650784014629180 < sym__0___45_385650784014629180 && (otherRec.sym__0__5959307721228335951 < sym__0__5959307721228335951 && otherRec.sym__0___45_5759464174332942374 < sym__0___45_5759464174332942374)))))))))))))))))))))))))))))))))))))))))))))))))))))))));
  }
  bool operator ==(const Record46& otherRec) const{
    return (otherRec.sym__0__3621650489550753899 == sym__0__3621650489550753899 && (otherRec.sym__0___45_2948215607211369349 == sym__0___45_2948215607211369349 && (otherRec.sym__0___45_8856885663442357963 == sym__0___45_8856885663442357963 && (otherRec.sym__0___45_8916023721409687458 == sym__0___45_8916023721409687458 && (otherRec.sym__0__8946000790400782120 == sym__0__8946000790400782120 && (otherRec.sym__0___45_2342846251621573170 == sym__0___45_2342846251621573170 && (otherRec.sym__0__1032112610168018387 == sym__0__1032112610168018387 && (otherRec.sym__0__7011664169603445220 == sym__0__7011664169603445220 && (otherRec.sym__0__4324933040532830835 == sym__0__4324933040532830835 && (otherRec.sym__0___45_4021802192502517237 == sym__0___45_4021802192502517237 && (otherRec.sym__0___45_3995179909498575571 == sym__0___45_3995179909498575571 && (otherRec.sym__0__5024632712808532094 == sym__0__5024632712808532094 && (otherRec.sym__0___45_2888940964904426273 == sym__0___45_2888940964904426273 && (otherRec.sym__0__388284026989546791 == sym__0__388284026989546791 && (otherRec.sym__0__7857167294786104330 == sym__0__7857167294786104330 && (otherRec.sym__0__4687998046624254050 == sym__0__4687998046624254050 && (otherRec.sym__0__6006260245622319568 == sym__0__6006260245622319568 && (otherRec.sym__0___45_6094952503271846681 == sym__0___45_6094952503271846681 && (otherRec.sym__0___45_4584467813004062355 == sym__0___45_4584467813004062355 && (otherRec.sym__0___45_626375228995803371 == sym__0___45_626375228995803371 && (otherRec.sym__0___45_1921065565269642365 == sym__0___45_1921065565269642365 && (otherRec.sym__0__8159540803036597784 == sym__0__8159540803036597784 && (otherRec.sym__0___45_3799099060194420991 == sym__0___45_3799099060194420991 && (otherRec.sym__0___45_46659435107143272 == sym__0___45_46659435107143272 && (otherRec.sym__0__974718074128111770 == sym__0__974718074128111770 && (otherRec.sym__0___45_6853763430966553195 == sym__0___45_6853763430966553195 && (otherRec.sym__0___45_3390830821838262747 == sym__0___45_3390830821838262747 && (otherRec.sym__0___45_3119614841511366425 == sym__0___45_3119614841511366425 && (otherRec.sym__0___45_2252607189598367 == sym__0___45_2252607189598367 && (otherRec.sym__0___45_8964179892079168049 == sym__0___45_8964179892079168049 && (otherRec.sym__0___45_2159923936634862133 == sym__0___45_2159923936634862133 && (otherRec.sym__0___45_8423263630379754148 == sym__0___45_8423263630379754148 && (otherRec.sym__0__3945318628861617222 == sym__0__3945318628861617222 && (otherRec.sym__0__884810496370279086 == sym__0__884810496370279086 && (otherRec.sym__0___45_4626225858345901984 == sym__0___45_4626225858345901984 && (otherRec.sym__0___45_9053558893173472421 == sym__0___45_9053558893173472421 && (otherRec.sym__0__7782476241138750585 == sym__0__7782476241138750585 && (otherRec.sym__0__2792235255099272583 == sym__0__2792235255099272583 && (otherRec.sym__0___45_5693560869534272203 == sym__0___45_5693560869534272203 && (otherRec.sym__0__2412297939095727556 == sym__0__2412297939095727556 && (otherRec.sym__0__2007415003408133595 == sym__0__2007415003408133595 && (otherRec.sym__0___45_5951663584277409901 == sym__0___45_5951663584277409901 && (otherRec.sym__0__1069716994239709627 == sym__0__1069716994239709627 && (otherRec.sym__0__5325598899940282257 == sym__0__5325598899940282257 && (otherRec.sym__0__6177928352879073975 == sym__0__6177928352879073975 && (otherRec.sym__0___45_6830131149002033523 == sym__0___45_6830131149002033523 && (otherRec.sym__0__4606794854636421868 == sym__0__4606794854636421868 && (otherRec.sym__0__4310971986799422779 == sym__0__4310971986799422779 && (otherRec.sym__0___45_329020162802994721 == sym__0___45_329020162802994721 && (otherRec.sym__0__475106436053698917 == sym__0__475106436053698917 && (otherRec.sym__0__2091979395855916501 == sym__0__2091979395855916501 && (otherRec.sym__0___45_8342080612972883318 == sym__0___45_8342080612972883318 && (otherRec.sym__0___45_5674057173303846288 == sym__0___45_5674057173303846288 && (otherRec.sym__0__3631223897369402426 == sym__0__3631223897369402426 && (otherRec.sym__0___45_7986370385586055242 == sym__0___45_7986370385586055242 && (otherRec.sym__0___45_385650784014629180 == sym__0___45_385650784014629180 && (otherRec.sym__0__5959307721228335951 == sym__0__5959307721228335951 && otherRec.sym__0___45_5759464174332942374 == sym__0___45_5759464174332942374)))))))))))))))))))))))))))))))))))))))))))))))))))))))));
  }
  bool operator !=(const Record46& otherRec) const{
    return (otherRec.sym__0__3621650489550753899 != sym__0__3621650489550753899 || (otherRec.sym__0___45_2948215607211369349 != sym__0___45_2948215607211369349 || (otherRec.sym__0___45_8856885663442357963 != sym__0___45_8856885663442357963 || (otherRec.sym__0___45_8916023721409687458 != sym__0___45_8916023721409687458 || (otherRec.sym__0__8946000790400782120 != sym__0__8946000790400782120 || (otherRec.sym__0___45_2342846251621573170 != sym__0___45_2342846251621573170 || (otherRec.sym__0__1032112610168018387 != sym__0__1032112610168018387 || (otherRec.sym__0__7011664169603445220 != sym__0__7011664169603445220 || (otherRec.sym__0__4324933040532830835 != sym__0__4324933040532830835 || (otherRec.sym__0___45_4021802192502517237 != sym__0___45_4021802192502517237 || (otherRec.sym__0___45_3995179909498575571 != sym__0___45_3995179909498575571 || (otherRec.sym__0__5024632712808532094 != sym__0__5024632712808532094 || (otherRec.sym__0___45_2888940964904426273 != sym__0___45_2888940964904426273 || (otherRec.sym__0__388284026989546791 != sym__0__388284026989546791 || (otherRec.sym__0__7857167294786104330 != sym__0__7857167294786104330 || (otherRec.sym__0__4687998046624254050 != sym__0__4687998046624254050 || (otherRec.sym__0__6006260245622319568 != sym__0__6006260245622319568 || (otherRec.sym__0___45_6094952503271846681 != sym__0___45_6094952503271846681 || (otherRec.sym__0___45_4584467813004062355 != sym__0___45_4584467813004062355 || (otherRec.sym__0___45_626375228995803371 != sym__0___45_626375228995803371 || (otherRec.sym__0___45_1921065565269642365 != sym__0___45_1921065565269642365 || (otherRec.sym__0__8159540803036597784 != sym__0__8159540803036597784 || (otherRec.sym__0___45_3799099060194420991 != sym__0___45_3799099060194420991 || (otherRec.sym__0___45_46659435107143272 != sym__0___45_46659435107143272 || (otherRec.sym__0__974718074128111770 != sym__0__974718074128111770 || (otherRec.sym__0___45_6853763430966553195 != sym__0___45_6853763430966553195 || (otherRec.sym__0___45_3390830821838262747 != sym__0___45_3390830821838262747 || (otherRec.sym__0___45_3119614841511366425 != sym__0___45_3119614841511366425 || (otherRec.sym__0___45_2252607189598367 != sym__0___45_2252607189598367 || (otherRec.sym__0___45_8964179892079168049 != sym__0___45_8964179892079168049 || (otherRec.sym__0___45_2159923936634862133 != sym__0___45_2159923936634862133 || (otherRec.sym__0___45_8423263630379754148 != sym__0___45_8423263630379754148 || (otherRec.sym__0__3945318628861617222 != sym__0__3945318628861617222 || (otherRec.sym__0__884810496370279086 != sym__0__884810496370279086 || (otherRec.sym__0___45_4626225858345901984 != sym__0___45_4626225858345901984 || (otherRec.sym__0___45_9053558893173472421 != sym__0___45_9053558893173472421 || (otherRec.sym__0__7782476241138750585 != sym__0__7782476241138750585 || (otherRec.sym__0__2792235255099272583 != sym__0__2792235255099272583 || (otherRec.sym__0___45_5693560869534272203 != sym__0___45_5693560869534272203 || (otherRec.sym__0__2412297939095727556 != sym__0__2412297939095727556 || (otherRec.sym__0__2007415003408133595 != sym__0__2007415003408133595 || (otherRec.sym__0___45_5951663584277409901 != sym__0___45_5951663584277409901 || (otherRec.sym__0__1069716994239709627 != sym__0__1069716994239709627 || (otherRec.sym__0__5325598899940282257 != sym__0__5325598899940282257 || (otherRec.sym__0__6177928352879073975 != sym__0__6177928352879073975 || (otherRec.sym__0___45_6830131149002033523 != sym__0___45_6830131149002033523 || (otherRec.sym__0__4606794854636421868 != sym__0__4606794854636421868 || (otherRec.sym__0__4310971986799422779 != sym__0__4310971986799422779 || (otherRec.sym__0___45_329020162802994721 != sym__0___45_329020162802994721 || (otherRec.sym__0__475106436053698917 != sym__0__475106436053698917 || (otherRec.sym__0__2091979395855916501 != sym__0__2091979395855916501 || (otherRec.sym__0___45_8342080612972883318 != sym__0___45_8342080612972883318 || (otherRec.sym__0___45_5674057173303846288 != sym__0___45_5674057173303846288 || (otherRec.sym__0__3631223897369402426 != sym__0__3631223897369402426 || (otherRec.sym__0___45_7986370385586055242 != sym__0___45_7986370385586055242 || (otherRec.sym__0___45_385650784014629180 != sym__0___45_385650784014629180 || (otherRec.sym__0__5959307721228335951 != sym__0__5959307721228335951 || otherRec.sym__0___45_5759464174332942374 != sym__0___45_5759464174332942374)))))))))))))))))))))))))))))))))))))))))))))))))))))))));
  }
  unsigned sym__0__3621650489550753899;
  fluidb_string<18> sym__0___45_2948215607211369349;
  fluidb_string<9> sym__0___45_8856885663442357963;
  fluidb_string<9> sym__0___45_8916023721409687458;
  unsigned sym__0__8946000790400782120;
  unsigned sym__0___45_2342846251621573170;
  fluidb_string<7> sym__0__1032112610168018387;
  unsigned sym__0__7011664169603445220;
  unsigned sym__0__4324933040532830835;
  unsigned sym__0___45_4021802192502517237;
  unsigned sym__0___45_3995179909498575571;
  unsigned sym__0__5024632712808532094;
  fluidb_string<15> sym__0___45_2888940964904426273;
  fluidb_string<2> sym__0__388284026989546791;
  fluidb_string<2> sym__0__7857167294786104330;
  fluidb_string<2> sym__0__4687998046624254050;
  fluidb_string<2> sym__0__6006260245622319568;
  unsigned sym__0___45_6094952503271846681;
  int sym__0___45_4584467813004062355;
  unsigned sym__0___45_626375228995803371;
  unsigned sym__0___45_1921065565269642365;
  unsigned sym__0__8159540803036597784;
  unsigned sym__0___45_3799099060194420991;
  fluidb_string<21> sym__0___45_46659435107143272;
  unsigned sym__0__974718074128111770;
  fluidb_string<10> sym__0___45_6853763430966553195;
  unsigned sym__0___45_3390830821838262747;
  double sym__0___45_3119614841511366425;
  unsigned sym__0___45_2252607189598367;
  double sym__0___45_8964179892079168049;
  unsigned sym__0___45_2159923936634862133;
  unsigned sym__0___45_8423263630379754148;
  double sym__0__3945318628861617222;
  fluidb_string<13> sym__0__884810496370279086;
  unsigned sym__0___45_4626225858345901984;
  fluidb_string<25> sym__0___45_9053558893173472421;
  fluidb_string<40> sym__0__7782476241138750585;
  fluidb_string<16> sym__0__2792235255099272583;
  fluidb_string<16> sym__0___45_5693560869534272203;
  fluidb_string<13> sym__0__2412297939095727556;
  fluidb_string<15> sym__0__2007415003408133595;
  unsigned sym__0___45_5951663584277409901;
  fluidb_string<18> sym__0__1069716994239709627;
  fluidb_string<40> sym__0__5325598899940282257;
  fluidb_string<11> sym__0__6177928352879073975;
  fluidb_string<15> sym__0___45_6830131149002033523;
  fluidb_string<13> sym__0__4606794854636421868;
  fluidb_string<15> sym__0__4310971986799422779;
  fluidb_string<21> sym__0___45_329020162802994721;
  unsigned sym__0__475106436053698917;
  fluidb_string<55> sym__0__2091979395855916501;
  fluidb_string<25> sym__0___45_8342080612972883318;
  fluidb_string<7> sym__0___45_5674057173303846288;
  fluidb_string<10> sym__0__3631223897369402426;
  fluidb_string<11> sym__0___45_7986370385586055242;
  fluidb_string<25> sym__0___45_385650784014629180;
  unsigned sym__0__5959307721228335951;
  fluidb_string<10> sym__0___45_5759464174332942374;
 private:
};


class Record57 {
 public:
  Record57(unsigned __sym__0__7006329499052305069, fluidb_string<18> __sym__0___45_7375008102809593795, fluidb_string<9> __sym__0__2242364852716712755, fluidb_string<9> __sym__0__6728315286780234668, unsigned __sym__0___45_8677392828688233166, unsigned __sym__0__18850878458266012, fluidb_string<7> __sym__0___45_1159840201402348011, unsigned __sym__0___45_5932405622557155626, unsigned __sym__0__3658619473869410293, unsigned __sym__0___45_2969077615773019251, unsigned __sym__0___45_7928450129262116629, unsigned __sym__0___45_5003085050689012084, fluidb_string<15> __sym__0___45_7233659590929121271, fluidb_string<2> __sym__0___45_8252988599155107311, fluidb_string<2> __sym__0___45_6694117543615583104, fluidb_string<2> __sym__0__1972896922281541208, fluidb_string<2> __sym__0__5700122004666508698, unsigned __sym__0__1994162191464814161, int __sym__0__1984067867163763371, unsigned __sym__0___45_7104475539713735981, unsigned __sym__0__655345745073949893, unsigned __sym__0___45_4852208023461630046, unsigned __sym__0___45_598227178364026473, fluidb_string<21> __sym__0__2417757603591057698, unsigned __sym__0___45_1241458878048723760, fluidb_string<10> __sym__0__9056114502195195731, unsigned __sym__0___45_364636368211538269, double __sym__0__5487193564431530577, unsigned __sym__0__1413667224251207351, double __sym__0__5863178220127954937, unsigned __sym__0__6560144715045217229, unsigned __sym__0__188275661929456398, double __sym__0___45_1513413182401850476, fluidb_string<13> __sym__0__326057931367946044, unsigned __sym__0__7186351916204705450, fluidb_string<25> __sym__0___45_1577817599228590883, fluidb_string<40> __sym__0___45_9214937451878055345, fluidb_string<16> __sym__0___45_34557952996518991, fluidb_string<16> __sym__0__1021755297466038067, fluidb_string<13> __sym__0___45_3581055782815722506, fluidb_string<15> __sym__0__1688219547246685533, unsigned __sym__0__2620353334396193365, fluidb_string<18> __sym__0___45_267780610899494147, fluidb_string<40> __sym__0__2680149802036874919, fluidb_string<11> __sym__0___45_7154879650325877919, fluidb_string<15> __sym__0___45_8331302550903876341, fluidb_string<13> __sym__0___45_1054571694106173922, fluidb_string<15> __sym__0___45_8919323026779499907, fluidb_string<21> __sym__0__8547044808085237001, unsigned __sym__0___45_3978399890453528733, fluidb_string<55> __sym__0___45_2093762769470357229, fluidb_string<25> __sym__0___45_62318847219994368, fluidb_string<7> __sym__0___45_4809984581900163974, fluidb_string<10> __sym__0__4388820372955556016, fluidb_string<11> __sym__0___45_6932155251265950204, fluidb_string<25> __sym__0___45_615799558530069258, unsigned __sym__0__2079736453969726841, fluidb_string<10> __sym__0__3389394596632584848) : sym__0__7006329499052305069(__sym__0__7006329499052305069), sym__0___45_7375008102809593795(__sym__0___45_7375008102809593795), sym__0__2242364852716712755(__sym__0__2242364852716712755), sym__0__6728315286780234668(__sym__0__6728315286780234668), sym__0___45_8677392828688233166(__sym__0___45_8677392828688233166), sym__0__18850878458266012(__sym__0__18850878458266012), sym__0___45_1159840201402348011(__sym__0___45_1159840201402348011), sym__0___45_5932405622557155626(__sym__0___45_5932405622557155626), sym__0__3658619473869410293(__sym__0__3658619473869410293), sym__0___45_2969077615773019251(__sym__0___45_2969077615773019251), sym__0___45_7928450129262116629(__sym__0___45_7928450129262116629), sym__0___45_5003085050689012084(__sym__0___45_5003085050689012084), sym__0___45_7233659590929121271(__sym__0___45_7233659590929121271), sym__0___45_8252988599155107311(__sym__0___45_8252988599155107311), sym__0___45_6694117543615583104(__sym__0___45_6694117543615583104), sym__0__1972896922281541208(__sym__0__1972896922281541208), sym__0__5700122004666508698(__sym__0__5700122004666508698), sym__0__1994162191464814161(__sym__0__1994162191464814161), sym__0__1984067867163763371(__sym__0__1984067867163763371), sym__0___45_7104475539713735981(__sym__0___45_7104475539713735981), sym__0__655345745073949893(__sym__0__655345745073949893), sym__0___45_4852208023461630046(__sym__0___45_4852208023461630046), sym__0___45_598227178364026473(__sym__0___45_598227178364026473), sym__0__2417757603591057698(__sym__0__2417757603591057698), sym__0___45_1241458878048723760(__sym__0___45_1241458878048723760), sym__0__9056114502195195731(__sym__0__9056114502195195731), sym__0___45_364636368211538269(__sym__0___45_364636368211538269), sym__0__5487193564431530577(__sym__0__5487193564431530577), sym__0__1413667224251207351(__sym__0__1413667224251207351), sym__0__5863178220127954937(__sym__0__5863178220127954937), sym__0__6560144715045217229(__sym__0__6560144715045217229), sym__0__188275661929456398(__sym__0__188275661929456398), sym__0___45_1513413182401850476(__sym__0___45_1513413182401850476), sym__0__326057931367946044(__sym__0__326057931367946044), sym__0__7186351916204705450(__sym__0__7186351916204705450), sym__0___45_1577817599228590883(__sym__0___45_1577817599228590883), sym__0___45_9214937451878055345(__sym__0___45_9214937451878055345), sym__0___45_34557952996518991(__sym__0___45_34557952996518991), sym__0__1021755297466038067(__sym__0__1021755297466038067), sym__0___45_3581055782815722506(__sym__0___45_3581055782815722506), sym__0__1688219547246685533(__sym__0__1688219547246685533), sym__0__2620353334396193365(__sym__0__2620353334396193365), sym__0___45_267780610899494147(__sym__0___45_267780610899494147), sym__0__2680149802036874919(__sym__0__2680149802036874919), sym__0___45_7154879650325877919(__sym__0___45_7154879650325877919), sym__0___45_8331302550903876341(__sym__0___45_8331302550903876341), sym__0___45_1054571694106173922(__sym__0___45_1054571694106173922), sym__0___45_8919323026779499907(__sym__0___45_8919323026779499907), sym__0__8547044808085237001(__sym__0__8547044808085237001), sym__0___45_3978399890453528733(__sym__0___45_3978399890453528733), sym__0___45_2093762769470357229(__sym__0___45_2093762769470357229), sym__0___45_62318847219994368(__sym__0___45_62318847219994368), sym__0___45_4809984581900163974(__sym__0___45_4809984581900163974), sym__0__4388820372955556016(__sym__0__4388820372955556016), sym__0___45_6932155251265950204(__sym__0___45_6932155251265950204), sym__0___45_615799558530069258(__sym__0___45_615799558530069258), sym__0__2079736453969726841(__sym__0__2079736453969726841), sym__0__3389394596632584848(__sym__0__3389394596632584848)
  {
  }
  Record57() 
  {
  }
  std::string show() const{
    std::stringstream o;
    o << sym__0__7006329499052305069 << " | " << arrToString(sym__0___45_7375008102809593795) << " | " << arrToString(sym__0__2242364852716712755) << " | " << arrToString(sym__0__6728315286780234668) << " | " << sym__0___45_8677392828688233166 << " | " << sym__0__18850878458266012 << " | " << arrToString(sym__0___45_1159840201402348011) << " | " << sym__0___45_5932405622557155626 << " | " << sym__0__3658619473869410293 << " | " << sym__0___45_2969077615773019251 << " | " << sym__0___45_7928450129262116629 << " | " << sym__0___45_5003085050689012084 << " | " << arrToString(sym__0___45_7233659590929121271) << " | " << arrToString(sym__0___45_8252988599155107311) << " | " << arrToString(sym__0___45_6694117543615583104) << " | " << arrToString(sym__0__1972896922281541208) << " | " << arrToString(sym__0__5700122004666508698) << " | " << sym__0__1994162191464814161 << " | " << sym__0__1984067867163763371 << " | " << sym__0___45_7104475539713735981 << " | " << sym__0__655345745073949893 << " | " << sym__0___45_4852208023461630046 << " | " << sym__0___45_598227178364026473 << " | " << arrToString(sym__0__2417757603591057698) << " | " << sym__0___45_1241458878048723760 << " | " << arrToString(sym__0__9056114502195195731) << " | " << sym__0___45_364636368211538269 << " | " << sym__0__5487193564431530577 << " | " << sym__0__1413667224251207351 << " | " << sym__0__5863178220127954937 << " | " << sym__0__6560144715045217229 << " | " << sym__0__188275661929456398 << " | " << sym__0___45_1513413182401850476 << " | " << arrToString(sym__0__326057931367946044) << " | " << sym__0__7186351916204705450 << " | " << arrToString(sym__0___45_1577817599228590883) << " | " << arrToString(sym__0___45_9214937451878055345) << " | " << arrToString(sym__0___45_34557952996518991) << " | " << arrToString(sym__0__1021755297466038067) << " | " << arrToString(sym__0___45_3581055782815722506) << " | " << arrToString(sym__0__1688219547246685533) << " | " << sym__0__2620353334396193365 << " | " << arrToString(sym__0___45_267780610899494147) << " | " << arrToString(sym__0__2680149802036874919) << " | " << arrToString(sym__0___45_7154879650325877919) << " | " << arrToString(sym__0___45_8331302550903876341) << " | " << arrToString(sym__0___45_1054571694106173922) << " | " << arrToString(sym__0___45_8919323026779499907) << " | " << arrToString(sym__0__8547044808085237001) << " | " << sym__0___45_3978399890453528733 << " | " << arrToString(sym__0___45_2093762769470357229) << " | " << arrToString(sym__0___45_62318847219994368) << " | " << arrToString(sym__0___45_4809984581900163974) << " | " << arrToString(sym__0__4388820372955556016) << " | " << arrToString(sym__0___45_6932155251265950204) << " | " << arrToString(sym__0___45_615799558530069258) << " | " << sym__0__2079736453969726841 << " | " << arrToString(sym__0__3389394596632584848);
    return o.str();
  }
  bool operator <(const Record57& otherRec) const{
    return (otherRec.sym__0__7006329499052305069 < sym__0__7006329499052305069 && (otherRec.sym__0___45_7375008102809593795 < sym__0___45_7375008102809593795 && (otherRec.sym__0__2242364852716712755 < sym__0__2242364852716712755 && (otherRec.sym__0__6728315286780234668 < sym__0__6728315286780234668 && (otherRec.sym__0___45_8677392828688233166 < sym__0___45_8677392828688233166 && (otherRec.sym__0__18850878458266012 < sym__0__18850878458266012 && (otherRec.sym__0___45_1159840201402348011 < sym__0___45_1159840201402348011 && (otherRec.sym__0___45_5932405622557155626 < sym__0___45_5932405622557155626 && (otherRec.sym__0__3658619473869410293 < sym__0__3658619473869410293 && (otherRec.sym__0___45_2969077615773019251 < sym__0___45_2969077615773019251 && (otherRec.sym__0___45_7928450129262116629 < sym__0___45_7928450129262116629 && (otherRec.sym__0___45_5003085050689012084 < sym__0___45_5003085050689012084 && (otherRec.sym__0___45_7233659590929121271 < sym__0___45_7233659590929121271 && (otherRec.sym__0___45_8252988599155107311 < sym__0___45_8252988599155107311 && (otherRec.sym__0___45_6694117543615583104 < sym__0___45_6694117543615583104 && (otherRec.sym__0__1972896922281541208 < sym__0__1972896922281541208 && (otherRec.sym__0__5700122004666508698 < sym__0__5700122004666508698 && (otherRec.sym__0__1994162191464814161 < sym__0__1994162191464814161 && (otherRec.sym__0__1984067867163763371 < sym__0__1984067867163763371 && (otherRec.sym__0___45_7104475539713735981 < sym__0___45_7104475539713735981 && (otherRec.sym__0__655345745073949893 < sym__0__655345745073949893 && (otherRec.sym__0___45_4852208023461630046 < sym__0___45_4852208023461630046 && (otherRec.sym__0___45_598227178364026473 < sym__0___45_598227178364026473 && (otherRec.sym__0__2417757603591057698 < sym__0__2417757603591057698 && (otherRec.sym__0___45_1241458878048723760 < sym__0___45_1241458878048723760 && (otherRec.sym__0__9056114502195195731 < sym__0__9056114502195195731 && (otherRec.sym__0___45_364636368211538269 < sym__0___45_364636368211538269 && (otherRec.sym__0__5487193564431530577 < sym__0__5487193564431530577 && (otherRec.sym__0__1413667224251207351 < sym__0__1413667224251207351 && (otherRec.sym__0__5863178220127954937 < sym__0__5863178220127954937 && (otherRec.sym__0__6560144715045217229 < sym__0__6560144715045217229 && (otherRec.sym__0__188275661929456398 < sym__0__188275661929456398 && (otherRec.sym__0___45_1513413182401850476 < sym__0___45_1513413182401850476 && (otherRec.sym__0__326057931367946044 < sym__0__326057931367946044 && (otherRec.sym__0__7186351916204705450 < sym__0__7186351916204705450 && (otherRec.sym__0___45_1577817599228590883 < sym__0___45_1577817599228590883 && (otherRec.sym__0___45_9214937451878055345 < sym__0___45_9214937451878055345 && (otherRec.sym__0___45_34557952996518991 < sym__0___45_34557952996518991 && (otherRec.sym__0__1021755297466038067 < sym__0__1021755297466038067 && (otherRec.sym__0___45_3581055782815722506 < sym__0___45_3581055782815722506 && (otherRec.sym__0__1688219547246685533 < sym__0__1688219547246685533 && (otherRec.sym__0__2620353334396193365 < sym__0__2620353334396193365 && (otherRec.sym__0___45_267780610899494147 < sym__0___45_267780610899494147 && (otherRec.sym__0__2680149802036874919 < sym__0__2680149802036874919 && (otherRec.sym__0___45_7154879650325877919 < sym__0___45_7154879650325877919 && (otherRec.sym__0___45_8331302550903876341 < sym__0___45_8331302550903876341 && (otherRec.sym__0___45_1054571694106173922 < sym__0___45_1054571694106173922 && (otherRec.sym__0___45_8919323026779499907 < sym__0___45_8919323026779499907 && (otherRec.sym__0__8547044808085237001 < sym__0__8547044808085237001 && (otherRec.sym__0___45_3978399890453528733 < sym__0___45_3978399890453528733 && (otherRec.sym__0___45_2093762769470357229 < sym__0___45_2093762769470357229 && (otherRec.sym__0___45_62318847219994368 < sym__0___45_62318847219994368 && (otherRec.sym__0___45_4809984581900163974 < sym__0___45_4809984581900163974 && (otherRec.sym__0__4388820372955556016 < sym__0__4388820372955556016 && (otherRec.sym__0___45_6932155251265950204 < sym__0___45_6932155251265950204 && (otherRec.sym__0___45_615799558530069258 < sym__0___45_615799558530069258 && (otherRec.sym__0__2079736453969726841 < sym__0__2079736453969726841 && otherRec.sym__0__3389394596632584848 < sym__0__3389394596632584848)))))))))))))))))))))))))))))))))))))))))))))))))))))))));
  }
  bool operator ==(const Record57& otherRec) const{
    return (otherRec.sym__0__7006329499052305069 == sym__0__7006329499052305069 && (otherRec.sym__0___45_7375008102809593795 == sym__0___45_7375008102809593795 && (otherRec.sym__0__2242364852716712755 == sym__0__2242364852716712755 && (otherRec.sym__0__6728315286780234668 == sym__0__6728315286780234668 && (otherRec.sym__0___45_8677392828688233166 == sym__0___45_8677392828688233166 && (otherRec.sym__0__18850878458266012 == sym__0__18850878458266012 && (otherRec.sym__0___45_1159840201402348011 == sym__0___45_1159840201402348011 && (otherRec.sym__0___45_5932405622557155626 == sym__0___45_5932405622557155626 && (otherRec.sym__0__3658619473869410293 == sym__0__3658619473869410293 && (otherRec.sym__0___45_2969077615773019251 == sym__0___45_2969077615773019251 && (otherRec.sym__0___45_7928450129262116629 == sym__0___45_7928450129262116629 && (otherRec.sym__0___45_5003085050689012084 == sym__0___45_5003085050689012084 && (otherRec.sym__0___45_7233659590929121271 == sym__0___45_7233659590929121271 && (otherRec.sym__0___45_8252988599155107311 == sym__0___45_8252988599155107311 && (otherRec.sym__0___45_6694117543615583104 == sym__0___45_6694117543615583104 && (otherRec.sym__0__1972896922281541208 == sym__0__1972896922281541208 && (otherRec.sym__0__5700122004666508698 == sym__0__5700122004666508698 && (otherRec.sym__0__1994162191464814161 == sym__0__1994162191464814161 && (otherRec.sym__0__1984067867163763371 == sym__0__1984067867163763371 && (otherRec.sym__0___45_7104475539713735981 == sym__0___45_7104475539713735981 && (otherRec.sym__0__655345745073949893 == sym__0__655345745073949893 && (otherRec.sym__0___45_4852208023461630046 == sym__0___45_4852208023461630046 && (otherRec.sym__0___45_598227178364026473 == sym__0___45_598227178364026473 && (otherRec.sym__0__2417757603591057698 == sym__0__2417757603591057698 && (otherRec.sym__0___45_1241458878048723760 == sym__0___45_1241458878048723760 && (otherRec.sym__0__9056114502195195731 == sym__0__9056114502195195731 && (otherRec.sym__0___45_364636368211538269 == sym__0___45_364636368211538269 && (otherRec.sym__0__5487193564431530577 == sym__0__5487193564431530577 && (otherRec.sym__0__1413667224251207351 == sym__0__1413667224251207351 && (otherRec.sym__0__5863178220127954937 == sym__0__5863178220127954937 && (otherRec.sym__0__6560144715045217229 == sym__0__6560144715045217229 && (otherRec.sym__0__188275661929456398 == sym__0__188275661929456398 && (otherRec.sym__0___45_1513413182401850476 == sym__0___45_1513413182401850476 && (otherRec.sym__0__326057931367946044 == sym__0__326057931367946044 && (otherRec.sym__0__7186351916204705450 == sym__0__7186351916204705450 && (otherRec.sym__0___45_1577817599228590883 == sym__0___45_1577817599228590883 && (otherRec.sym__0___45_9214937451878055345 == sym__0___45_9214937451878055345 && (otherRec.sym__0___45_34557952996518991 == sym__0___45_34557952996518991 && (otherRec.sym__0__1021755297466038067 == sym__0__1021755297466038067 && (otherRec.sym__0___45_3581055782815722506 == sym__0___45_3581055782815722506 && (otherRec.sym__0__1688219547246685533 == sym__0__1688219547246685533 && (otherRec.sym__0__2620353334396193365 == sym__0__2620353334396193365 && (otherRec.sym__0___45_267780610899494147 == sym__0___45_267780610899494147 && (otherRec.sym__0__2680149802036874919 == sym__0__2680149802036874919 && (otherRec.sym__0___45_7154879650325877919 == sym__0___45_7154879650325877919 && (otherRec.sym__0___45_8331302550903876341 == sym__0___45_8331302550903876341 && (otherRec.sym__0___45_1054571694106173922 == sym__0___45_1054571694106173922 && (otherRec.sym__0___45_8919323026779499907 == sym__0___45_8919323026779499907 && (otherRec.sym__0__8547044808085237001 == sym__0__8547044808085237001 && (otherRec.sym__0___45_3978399890453528733 == sym__0___45_3978399890453528733 && (otherRec.sym__0___45_2093762769470357229 == sym__0___45_2093762769470357229 && (otherRec.sym__0___45_62318847219994368 == sym__0___45_62318847219994368 && (otherRec.sym__0___45_4809984581900163974 == sym__0___45_4809984581900163974 && (otherRec.sym__0__4388820372955556016 == sym__0__4388820372955556016 && (otherRec.sym__0___45_6932155251265950204 == sym__0___45_6932155251265950204 && (otherRec.sym__0___45_615799558530069258 == sym__0___45_615799558530069258 && (otherRec.sym__0__2079736453969726841 == sym__0__2079736453969726841 && otherRec.sym__0__3389394596632584848 == sym__0__3389394596632584848)))))))))))))))))))))))))))))))))))))))))))))))))))))))));
  }
  bool operator !=(const Record57& otherRec) const{
    return (otherRec.sym__0__7006329499052305069 != sym__0__7006329499052305069 || (otherRec.sym__0___45_7375008102809593795 != sym__0___45_7375008102809593795 || (otherRec.sym__0__2242364852716712755 != sym__0__2242364852716712755 || (otherRec.sym__0__6728315286780234668 != sym__0__6728315286780234668 || (otherRec.sym__0___45_8677392828688233166 != sym__0___45_8677392828688233166 || (otherRec.sym__0__18850878458266012 != sym__0__18850878458266012 || (otherRec.sym__0___45_1159840201402348011 != sym__0___45_1159840201402348011 || (otherRec.sym__0___45_5932405622557155626 != sym__0___45_5932405622557155626 || (otherRec.sym__0__3658619473869410293 != sym__0__3658619473869410293 || (otherRec.sym__0___45_2969077615773019251 != sym__0___45_2969077615773019251 || (otherRec.sym__0___45_7928450129262116629 != sym__0___45_7928450129262116629 || (otherRec.sym__0___45_5003085050689012084 != sym__0___45_5003085050689012084 || (otherRec.sym__0___45_7233659590929121271 != sym__0___45_7233659590929121271 || (otherRec.sym__0___45_8252988599155107311 != sym__0___45_8252988599155107311 || (otherRec.sym__0___45_6694117543615583104 != sym__0___45_6694117543615583104 || (otherRec.sym__0__1972896922281541208 != sym__0__1972896922281541208 || (otherRec.sym__0__5700122004666508698 != sym__0__5700122004666508698 || (otherRec.sym__0__1994162191464814161 != sym__0__1994162191464814161 || (otherRec.sym__0__1984067867163763371 != sym__0__1984067867163763371 || (otherRec.sym__0___45_7104475539713735981 != sym__0___45_7104475539713735981 || (otherRec.sym__0__655345745073949893 != sym__0__655345745073949893 || (otherRec.sym__0___45_4852208023461630046 != sym__0___45_4852208023461630046 || (otherRec.sym__0___45_598227178364026473 != sym__0___45_598227178364026473 || (otherRec.sym__0__2417757603591057698 != sym__0__2417757603591057698 || (otherRec.sym__0___45_1241458878048723760 != sym__0___45_1241458878048723760 || (otherRec.sym__0__9056114502195195731 != sym__0__9056114502195195731 || (otherRec.sym__0___45_364636368211538269 != sym__0___45_364636368211538269 || (otherRec.sym__0__5487193564431530577 != sym__0__5487193564431530577 || (otherRec.sym__0__1413667224251207351 != sym__0__1413667224251207351 || (otherRec.sym__0__5863178220127954937 != sym__0__5863178220127954937 || (otherRec.sym__0__6560144715045217229 != sym__0__6560144715045217229 || (otherRec.sym__0__188275661929456398 != sym__0__188275661929456398 || (otherRec.sym__0___45_1513413182401850476 != sym__0___45_1513413182401850476 || (otherRec.sym__0__326057931367946044 != sym__0__326057931367946044 || (otherRec.sym__0__7186351916204705450 != sym__0__7186351916204705450 || (otherRec.sym__0___45_1577817599228590883 != sym__0___45_1577817599228590883 || (otherRec.sym__0___45_9214937451878055345 != sym__0___45_9214937451878055345 || (otherRec.sym__0___45_34557952996518991 != sym__0___45_34557952996518991 || (otherRec.sym__0__1021755297466038067 != sym__0__1021755297466038067 || (otherRec.sym__0___45_3581055782815722506 != sym__0___45_3581055782815722506 || (otherRec.sym__0__1688219547246685533 != sym__0__1688219547246685533 || (otherRec.sym__0__2620353334396193365 != sym__0__2620353334396193365 || (otherRec.sym__0___45_267780610899494147 != sym__0___45_267780610899494147 || (otherRec.sym__0__2680149802036874919 != sym__0__2680149802036874919 || (otherRec.sym__0___45_7154879650325877919 != sym__0___45_7154879650325877919 || (otherRec.sym__0___45_8331302550903876341 != sym__0___45_8331302550903876341 || (otherRec.sym__0___45_1054571694106173922 != sym__0___45_1054571694106173922 || (otherRec.sym__0___45_8919323026779499907 != sym__0___45_8919323026779499907 || (otherRec.sym__0__8547044808085237001 != sym__0__8547044808085237001 || (otherRec.sym__0___45_3978399890453528733 != sym__0___45_3978399890453528733 || (otherRec.sym__0___45_2093762769470357229 != sym__0___45_2093762769470357229 || (otherRec.sym__0___45_62318847219994368 != sym__0___45_62318847219994368 || (otherRec.sym__0___45_4809984581900163974 != sym__0___45_4809984581900163974 || (otherRec.sym__0__4388820372955556016 != sym__0__4388820372955556016 || (otherRec.sym__0___45_6932155251265950204 != sym__0___45_6932155251265950204 || (otherRec.sym__0___45_615799558530069258 != sym__0___45_615799558530069258 || (otherRec.sym__0__2079736453969726841 != sym__0__2079736453969726841 || otherRec.sym__0__3389394596632584848 != sym__0__3389394596632584848)))))))))))))))))))))))))))))))))))))))))))))))))))))))));
  }
  unsigned sym__0__7006329499052305069;
  fluidb_string<18> sym__0___45_7375008102809593795;
  fluidb_string<9> sym__0__2242364852716712755;
  fluidb_string<9> sym__0__6728315286780234668;
  unsigned sym__0___45_8677392828688233166;
  unsigned sym__0__18850878458266012;
  fluidb_string<7> sym__0___45_1159840201402348011;
  unsigned sym__0___45_5932405622557155626;
  unsigned sym__0__3658619473869410293;
  unsigned sym__0___45_2969077615773019251;
  unsigned sym__0___45_7928450129262116629;
  unsigned sym__0___45_5003085050689012084;
  fluidb_string<15> sym__0___45_7233659590929121271;
  fluidb_string<2> sym__0___45_8252988599155107311;
  fluidb_string<2> sym__0___45_6694117543615583104;
  fluidb_string<2> sym__0__1972896922281541208;
  fluidb_string<2> sym__0__5700122004666508698;
  unsigned sym__0__1994162191464814161;
  int sym__0__1984067867163763371;
  unsigned sym__0___45_7104475539713735981;
  unsigned sym__0__655345745073949893;
  unsigned sym__0___45_4852208023461630046;
  unsigned sym__0___45_598227178364026473;
  fluidb_string<21> sym__0__2417757603591057698;
  unsigned sym__0___45_1241458878048723760;
  fluidb_string<10> sym__0__9056114502195195731;
  unsigned sym__0___45_364636368211538269;
  double sym__0__5487193564431530577;
  unsigned sym__0__1413667224251207351;
  double sym__0__5863178220127954937;
  unsigned sym__0__6560144715045217229;
  unsigned sym__0__188275661929456398;
  double sym__0___45_1513413182401850476;
  fluidb_string<13> sym__0__326057931367946044;
  unsigned sym__0__7186351916204705450;
  fluidb_string<25> sym__0___45_1577817599228590883;
  fluidb_string<40> sym__0___45_9214937451878055345;
  fluidb_string<16> sym__0___45_34557952996518991;
  fluidb_string<16> sym__0__1021755297466038067;
  fluidb_string<13> sym__0___45_3581055782815722506;
  fluidb_string<15> sym__0__1688219547246685533;
  unsigned sym__0__2620353334396193365;
  fluidb_string<18> sym__0___45_267780610899494147;
  fluidb_string<40> sym__0__2680149802036874919;
  fluidb_string<11> sym__0___45_7154879650325877919;
  fluidb_string<15> sym__0___45_8331302550903876341;
  fluidb_string<13> sym__0___45_1054571694106173922;
  fluidb_string<15> sym__0___45_8919323026779499907;
  fluidb_string<21> sym__0__8547044808085237001;
  unsigned sym__0___45_3978399890453528733;
  fluidb_string<55> sym__0___45_2093762769470357229;
  fluidb_string<25> sym__0___45_62318847219994368;
  fluidb_string<7> sym__0___45_4809984581900163974;
  fluidb_string<10> sym__0__4388820372955556016;
  fluidb_string<11> sym__0___45_6932155251265950204;
  fluidb_string<25> sym__0___45_615799558530069258;
  unsigned sym__0__2079736453969726841;
  fluidb_string<10> sym__0__3389394596632584848;
 private:
};


class Record12 {
 public:
  Record12(unsigned __sortElem0) : sortElem0(__sortElem0)
  {
  }
  Record12() 
  {
  }
  std::string show() const{
    std::stringstream o;
    o << sortElem0;
    return o.str();
  }
  bool operator <(const Record12& otherRec) const{
    return otherRec.sortElem0 < sortElem0;
  }
  bool operator ==(const Record12& otherRec) const{
    return otherRec.sortElem0 == sortElem0;
  }
  bool operator !=(const Record12& otherRec) const{
    return otherRec.sortElem0 != sortElem0;
  }
  unsigned sortElem0;
 private:
};


class Record8 {
 public:
  Record8(unsigned __sym__0__2037864888707786451, fluidb_string<18> __sym__0__8533656712666151747, fluidb_string<9> __sym__0__646314041574508429, fluidb_string<9> __sym__0__6064137978327902054, unsigned __sym__0__3754157776500852496, unsigned __sym__0__6284345160241949046, fluidb_string<7> __sym__0___45_773692805971570325, unsigned __sym__0___45_8399474032083007524, unsigned __sym__0___45_2038947427357444789, unsigned __sym__0__6071994954612827827, unsigned __sym__0__7742515703067448213, unsigned __sym__0__5201219213304227654, fluidb_string<15> __sym__0___45_5896625796158057241, fluidb_string<2> __sym__0___45_1108504872221226081, fluidb_string<2> __sym__0__1055103969674359346, fluidb_string<2> __sym__0__9115626546918942554, fluidb_string<2> __sym__0___45_6850413444013389848) : sym__0__2037864888707786451(__sym__0__2037864888707786451), sym__0__8533656712666151747(__sym__0__8533656712666151747), sym__0__646314041574508429(__sym__0__646314041574508429), sym__0__6064137978327902054(__sym__0__6064137978327902054), sym__0__3754157776500852496(__sym__0__3754157776500852496), sym__0__6284345160241949046(__sym__0__6284345160241949046), sym__0___45_773692805971570325(__sym__0___45_773692805971570325), sym__0___45_8399474032083007524(__sym__0___45_8399474032083007524), sym__0___45_2038947427357444789(__sym__0___45_2038947427357444789), sym__0__6071994954612827827(__sym__0__6071994954612827827), sym__0__7742515703067448213(__sym__0__7742515703067448213), sym__0__5201219213304227654(__sym__0__5201219213304227654), sym__0___45_5896625796158057241(__sym__0___45_5896625796158057241), sym__0___45_1108504872221226081(__sym__0___45_1108504872221226081), sym__0__1055103969674359346(__sym__0__1055103969674359346), sym__0__9115626546918942554(__sym__0__9115626546918942554), sym__0___45_6850413444013389848(__sym__0___45_6850413444013389848)
  {
  }
  Record8() 
  {
  }
  std::string show() const{
    std::stringstream o;
    o << sym__0__2037864888707786451 << " | " << arrToString(sym__0__8533656712666151747) << " | " << arrToString(sym__0__646314041574508429) << " | " << arrToString(sym__0__6064137978327902054) << " | " << sym__0__3754157776500852496 << " | " << sym__0__6284345160241949046 << " | " << arrToString(sym__0___45_773692805971570325) << " | " << sym__0___45_8399474032083007524 << " | " << sym__0___45_2038947427357444789 << " | " << sym__0__6071994954612827827 << " | " << sym__0__7742515703067448213 << " | " << sym__0__5201219213304227654 << " | " << arrToString(sym__0___45_5896625796158057241) << " | " << arrToString(sym__0___45_1108504872221226081) << " | " << arrToString(sym__0__1055103969674359346) << " | " << arrToString(sym__0__9115626546918942554) << " | " << arrToString(sym__0___45_6850413444013389848);
    return o.str();
  }
  bool operator <(const Record8& otherRec) const{
    return (otherRec.sym__0__2037864888707786451 < sym__0__2037864888707786451 && (otherRec.sym__0__8533656712666151747 < sym__0__8533656712666151747 && (otherRec.sym__0__646314041574508429 < sym__0__646314041574508429 && (otherRec.sym__0__6064137978327902054 < sym__0__6064137978327902054 && (otherRec.sym__0__3754157776500852496 < sym__0__3754157776500852496 && (otherRec.sym__0__6284345160241949046 < sym__0__6284345160241949046 && (otherRec.sym__0___45_773692805971570325 < sym__0___45_773692805971570325 && (otherRec.sym__0___45_8399474032083007524 < sym__0___45_8399474032083007524 && (otherRec.sym__0___45_2038947427357444789 < sym__0___45_2038947427357444789 && (otherRec.sym__0__6071994954612827827 < sym__0__6071994954612827827 && (otherRec.sym__0__7742515703067448213 < sym__0__7742515703067448213 && (otherRec.sym__0__5201219213304227654 < sym__0__5201219213304227654 && (otherRec.sym__0___45_5896625796158057241 < sym__0___45_5896625796158057241 && (otherRec.sym__0___45_1108504872221226081 < sym__0___45_1108504872221226081 && (otherRec.sym__0__1055103969674359346 < sym__0__1055103969674359346 && (otherRec.sym__0__9115626546918942554 < sym__0__9115626546918942554 && otherRec.sym__0___45_6850413444013389848 < sym__0___45_6850413444013389848))))))))))))))));
  }
  bool operator ==(const Record8& otherRec) const{
    return (otherRec.sym__0__2037864888707786451 == sym__0__2037864888707786451 && (otherRec.sym__0__8533656712666151747 == sym__0__8533656712666151747 && (otherRec.sym__0__646314041574508429 == sym__0__646314041574508429 && (otherRec.sym__0__6064137978327902054 == sym__0__6064137978327902054 && (otherRec.sym__0__3754157776500852496 == sym__0__3754157776500852496 && (otherRec.sym__0__6284345160241949046 == sym__0__6284345160241949046 && (otherRec.sym__0___45_773692805971570325 == sym__0___45_773692805971570325 && (otherRec.sym__0___45_8399474032083007524 == sym__0___45_8399474032083007524 && (otherRec.sym__0___45_2038947427357444789 == sym__0___45_2038947427357444789 && (otherRec.sym__0__6071994954612827827 == sym__0__6071994954612827827 && (otherRec.sym__0__7742515703067448213 == sym__0__7742515703067448213 && (otherRec.sym__0__5201219213304227654 == sym__0__5201219213304227654 && (otherRec.sym__0___45_5896625796158057241 == sym__0___45_5896625796158057241 && (otherRec.sym__0___45_1108504872221226081 == sym__0___45_1108504872221226081 && (otherRec.sym__0__1055103969674359346 == sym__0__1055103969674359346 && (otherRec.sym__0__9115626546918942554 == sym__0__9115626546918942554 && otherRec.sym__0___45_6850413444013389848 == sym__0___45_6850413444013389848))))))))))))))));
  }
  bool operator !=(const Record8& otherRec) const{
    return (otherRec.sym__0__2037864888707786451 != sym__0__2037864888707786451 || (otherRec.sym__0__8533656712666151747 != sym__0__8533656712666151747 || (otherRec.sym__0__646314041574508429 != sym__0__646314041574508429 || (otherRec.sym__0__6064137978327902054 != sym__0__6064137978327902054 || (otherRec.sym__0__3754157776500852496 != sym__0__3754157776500852496 || (otherRec.sym__0__6284345160241949046 != sym__0__6284345160241949046 || (otherRec.sym__0___45_773692805971570325 != sym__0___45_773692805971570325 || (otherRec.sym__0___45_8399474032083007524 != sym__0___45_8399474032083007524 || (otherRec.sym__0___45_2038947427357444789 != sym__0___45_2038947427357444789 || (otherRec.sym__0__6071994954612827827 != sym__0__6071994954612827827 || (otherRec.sym__0__7742515703067448213 != sym__0__7742515703067448213 || (otherRec.sym__0__5201219213304227654 != sym__0__5201219213304227654 || (otherRec.sym__0___45_5896625796158057241 != sym__0___45_5896625796158057241 || (otherRec.sym__0___45_1108504872221226081 != sym__0___45_1108504872221226081 || (otherRec.sym__0__1055103969674359346 != sym__0__1055103969674359346 || (otherRec.sym__0__9115626546918942554 != sym__0__9115626546918942554 || otherRec.sym__0___45_6850413444013389848 != sym__0___45_6850413444013389848))))))))))))))));
  }
  unsigned sym__0__2037864888707786451;
  fluidb_string<18> sym__0__8533656712666151747;
  fluidb_string<9> sym__0__646314041574508429;
  fluidb_string<9> sym__0__6064137978327902054;
  unsigned sym__0__3754157776500852496;
  unsigned sym__0__6284345160241949046;
  fluidb_string<7> sym__0___45_773692805971570325;
  unsigned sym__0___45_8399474032083007524;
  unsigned sym__0___45_2038947427357444789;
  unsigned sym__0__6071994954612827827;
  unsigned sym__0__7742515703067448213;
  unsigned sym__0__5201219213304227654;
  fluidb_string<15> sym__0___45_5896625796158057241;
  fluidb_string<2> sym__0___45_1108504872221226081;
  fluidb_string<2> sym__0__1055103969674359346;
  fluidb_string<2> sym__0__9115626546918942554;
  fluidb_string<2> sym__0___45_6850413444013389848;
 private:
};


class Record2 {
 public:
  Record2(unsigned __sym__0__2833764152503888409, fluidb_string<18> __sym__0__6938021140779677761, fluidb_string<40> __sym__0___45_4700201805806600089, fluidb_string<11> __sym__0__3362667619044778557, fluidb_string<15> __sym__0__2679827580767046755, fluidb_string<13> __sym__0___45_4186304031693649930, fluidb_string<15> __sym__0__8596564865999609793, fluidb_string<21> __sym__0___45_1671053890158572571, unsigned __sym__0__2256924431415148013, int __sym__0__347872876320563651, unsigned __sym__0___45_7666447219434903317, unsigned __sym__0__1272718151591622153, unsigned __sym__0__4584633926271658914, unsigned __sym__0___45_4610773208091240233, fluidb_string<21> __sym__0___45_5766638191766435038, unsigned __sym__0___45_5211223358204127380, fluidb_string<10> __sym__0__8435431464460332395, unsigned __sym__0___45_6450191115912157957, double __sym__0__7921907673157171693, unsigned __sym__0___45_1699747741436218441, double __sym__0___45_2985562469054236715, unsigned __sym__0__3746029949899912401, unsigned __sym__0___45_989155948099215770, double __sym__0___45_1667761180508152936, fluidb_string<13> __sym__0__5854462121170882944, unsigned __sym__0___45_1023382914117654422, fluidb_string<25> __sym__0__6224010339127806049, fluidb_string<40> __sym__0___45_8804639047977952305, fluidb_string<16> __sym__0__8926375957639307021, fluidb_string<16> __sym__0__5153200798583684363, fluidb_string<13> __sym__0___45_794494697990656050, fluidb_string<15> __sym__0__7308161412148661473) : sym__0__2833764152503888409(__sym__0__2833764152503888409), sym__0__6938021140779677761(__sym__0__6938021140779677761), sym__0___45_4700201805806600089(__sym__0___45_4700201805806600089), sym__0__3362667619044778557(__sym__0__3362667619044778557), sym__0__2679827580767046755(__sym__0__2679827580767046755), sym__0___45_4186304031693649930(__sym__0___45_4186304031693649930), sym__0__8596564865999609793(__sym__0__8596564865999609793), sym__0___45_1671053890158572571(__sym__0___45_1671053890158572571), sym__0__2256924431415148013(__sym__0__2256924431415148013), sym__0__347872876320563651(__sym__0__347872876320563651), sym__0___45_7666447219434903317(__sym__0___45_7666447219434903317), sym__0__1272718151591622153(__sym__0__1272718151591622153), sym__0__4584633926271658914(__sym__0__4584633926271658914), sym__0___45_4610773208091240233(__sym__0___45_4610773208091240233), sym__0___45_5766638191766435038(__sym__0___45_5766638191766435038), sym__0___45_5211223358204127380(__sym__0___45_5211223358204127380), sym__0__8435431464460332395(__sym__0__8435431464460332395), sym__0___45_6450191115912157957(__sym__0___45_6450191115912157957), sym__0__7921907673157171693(__sym__0__7921907673157171693), sym__0___45_1699747741436218441(__sym__0___45_1699747741436218441), sym__0___45_2985562469054236715(__sym__0___45_2985562469054236715), sym__0__3746029949899912401(__sym__0__3746029949899912401), sym__0___45_989155948099215770(__sym__0___45_989155948099215770), sym__0___45_1667761180508152936(__sym__0___45_1667761180508152936), sym__0__5854462121170882944(__sym__0__5854462121170882944), sym__0___45_1023382914117654422(__sym__0___45_1023382914117654422), sym__0__6224010339127806049(__sym__0__6224010339127806049), sym__0___45_8804639047977952305(__sym__0___45_8804639047977952305), sym__0__8926375957639307021(__sym__0__8926375957639307021), sym__0__5153200798583684363(__sym__0__5153200798583684363), sym__0___45_794494697990656050(__sym__0___45_794494697990656050), sym__0__7308161412148661473(__sym__0__7308161412148661473)
  {
  }
  Record2() 
  {
  }
  std::string show() const{
    std::stringstream o;
    o << sym__0__2833764152503888409 << " | " << arrToString(sym__0__6938021140779677761) << " | " << arrToString(sym__0___45_4700201805806600089) << " | " << arrToString(sym__0__3362667619044778557) << " | " << arrToString(sym__0__2679827580767046755) << " | " << arrToString(sym__0___45_4186304031693649930) << " | " << arrToString(sym__0__8596564865999609793) << " | " << arrToString(sym__0___45_1671053890158572571) << " | " << sym__0__2256924431415148013 << " | " << sym__0__347872876320563651 << " | " << sym__0___45_7666447219434903317 << " | " << sym__0__1272718151591622153 << " | " << sym__0__4584633926271658914 << " | " << sym__0___45_4610773208091240233 << " | " << arrToString(sym__0___45_5766638191766435038) << " | " << sym__0___45_5211223358204127380 << " | " << arrToString(sym__0__8435431464460332395) << " | " << sym__0___45_6450191115912157957 << " | " << sym__0__7921907673157171693 << " | " << sym__0___45_1699747741436218441 << " | " << sym__0___45_2985562469054236715 << " | " << sym__0__3746029949899912401 << " | " << sym__0___45_989155948099215770 << " | " << sym__0___45_1667761180508152936 << " | " << arrToString(sym__0__5854462121170882944) << " | " << sym__0___45_1023382914117654422 << " | " << arrToString(sym__0__6224010339127806049) << " | " << arrToString(sym__0___45_8804639047977952305) << " | " << arrToString(sym__0__8926375957639307021) << " | " << arrToString(sym__0__5153200798583684363) << " | " << arrToString(sym__0___45_794494697990656050) << " | " << arrToString(sym__0__7308161412148661473);
    return o.str();
  }
  bool operator <(const Record2& otherRec) const{
    return (otherRec.sym__0__2833764152503888409 < sym__0__2833764152503888409 && (otherRec.sym__0__6938021140779677761 < sym__0__6938021140779677761 && (otherRec.sym__0___45_4700201805806600089 < sym__0___45_4700201805806600089 && (otherRec.sym__0__3362667619044778557 < sym__0__3362667619044778557 && (otherRec.sym__0__2679827580767046755 < sym__0__2679827580767046755 && (otherRec.sym__0___45_4186304031693649930 < sym__0___45_4186304031693649930 && (otherRec.sym__0__8596564865999609793 < sym__0__8596564865999609793 && (otherRec.sym__0___45_1671053890158572571 < sym__0___45_1671053890158572571 && (otherRec.sym__0__2256924431415148013 < sym__0__2256924431415148013 && (otherRec.sym__0__347872876320563651 < sym__0__347872876320563651 && (otherRec.sym__0___45_7666447219434903317 < sym__0___45_7666447219434903317 && (otherRec.sym__0__1272718151591622153 < sym__0__1272718151591622153 && (otherRec.sym__0__4584633926271658914 < sym__0__4584633926271658914 && (otherRec.sym__0___45_4610773208091240233 < sym__0___45_4610773208091240233 && (otherRec.sym__0___45_5766638191766435038 < sym__0___45_5766638191766435038 && (otherRec.sym__0___45_5211223358204127380 < sym__0___45_5211223358204127380 && (otherRec.sym__0__8435431464460332395 < sym__0__8435431464460332395 && (otherRec.sym__0___45_6450191115912157957 < sym__0___45_6450191115912157957 && (otherRec.sym__0__7921907673157171693 < sym__0__7921907673157171693 && (otherRec.sym__0___45_1699747741436218441 < sym__0___45_1699747741436218441 && (otherRec.sym__0___45_2985562469054236715 < sym__0___45_2985562469054236715 && (otherRec.sym__0__3746029949899912401 < sym__0__3746029949899912401 && (otherRec.sym__0___45_989155948099215770 < sym__0___45_989155948099215770 && (otherRec.sym__0___45_1667761180508152936 < sym__0___45_1667761180508152936 && (otherRec.sym__0__5854462121170882944 < sym__0__5854462121170882944 && (otherRec.sym__0___45_1023382914117654422 < sym__0___45_1023382914117654422 && (otherRec.sym__0__6224010339127806049 < sym__0__6224010339127806049 && (otherRec.sym__0___45_8804639047977952305 < sym__0___45_8804639047977952305 && (otherRec.sym__0__8926375957639307021 < sym__0__8926375957639307021 && (otherRec.sym__0__5153200798583684363 < sym__0__5153200798583684363 && (otherRec.sym__0___45_794494697990656050 < sym__0___45_794494697990656050 && otherRec.sym__0__7308161412148661473 < sym__0__7308161412148661473)))))))))))))))))))))))))))))));
  }
  bool operator ==(const Record2& otherRec) const{
    return (otherRec.sym__0__2833764152503888409 == sym__0__2833764152503888409 && (otherRec.sym__0__6938021140779677761 == sym__0__6938021140779677761 && (otherRec.sym__0___45_4700201805806600089 == sym__0___45_4700201805806600089 && (otherRec.sym__0__3362667619044778557 == sym__0__3362667619044778557 && (otherRec.sym__0__2679827580767046755 == sym__0__2679827580767046755 && (otherRec.sym__0___45_4186304031693649930 == sym__0___45_4186304031693649930 && (otherRec.sym__0__8596564865999609793 == sym__0__8596564865999609793 && (otherRec.sym__0___45_1671053890158572571 == sym__0___45_1671053890158572571 && (otherRec.sym__0__2256924431415148013 == sym__0__2256924431415148013 && (otherRec.sym__0__347872876320563651 == sym__0__347872876320563651 && (otherRec.sym__0___45_7666447219434903317 == sym__0___45_7666447219434903317 && (otherRec.sym__0__1272718151591622153 == sym__0__1272718151591622153 && (otherRec.sym__0__4584633926271658914 == sym__0__4584633926271658914 && (otherRec.sym__0___45_4610773208091240233 == sym__0___45_4610773208091240233 && (otherRec.sym__0___45_5766638191766435038 == sym__0___45_5766638191766435038 && (otherRec.sym__0___45_5211223358204127380 == sym__0___45_5211223358204127380 && (otherRec.sym__0__8435431464460332395 == sym__0__8435431464460332395 && (otherRec.sym__0___45_6450191115912157957 == sym__0___45_6450191115912157957 && (otherRec.sym__0__7921907673157171693 == sym__0__7921907673157171693 && (otherRec.sym__0___45_1699747741436218441 == sym__0___45_1699747741436218441 && (otherRec.sym__0___45_2985562469054236715 == sym__0___45_2985562469054236715 && (otherRec.sym__0__3746029949899912401 == sym__0__3746029949899912401 && (otherRec.sym__0___45_989155948099215770 == sym__0___45_989155948099215770 && (otherRec.sym__0___45_1667761180508152936 == sym__0___45_1667761180508152936 && (otherRec.sym__0__5854462121170882944 == sym__0__5854462121170882944 && (otherRec.sym__0___45_1023382914117654422 == sym__0___45_1023382914117654422 && (otherRec.sym__0__6224010339127806049 == sym__0__6224010339127806049 && (otherRec.sym__0___45_8804639047977952305 == sym__0___45_8804639047977952305 && (otherRec.sym__0__8926375957639307021 == sym__0__8926375957639307021 && (otherRec.sym__0__5153200798583684363 == sym__0__5153200798583684363 && (otherRec.sym__0___45_794494697990656050 == sym__0___45_794494697990656050 && otherRec.sym__0__7308161412148661473 == sym__0__7308161412148661473)))))))))))))))))))))))))))))));
  }
  bool operator !=(const Record2& otherRec) const{
    return (otherRec.sym__0__2833764152503888409 != sym__0__2833764152503888409 || (otherRec.sym__0__6938021140779677761 != sym__0__6938021140779677761 || (otherRec.sym__0___45_4700201805806600089 != sym__0___45_4700201805806600089 || (otherRec.sym__0__3362667619044778557 != sym__0__3362667619044778557 || (otherRec.sym__0__2679827580767046755 != sym__0__2679827580767046755 || (otherRec.sym__0___45_4186304031693649930 != sym__0___45_4186304031693649930 || (otherRec.sym__0__8596564865999609793 != sym__0__8596564865999609793 || (otherRec.sym__0___45_1671053890158572571 != sym__0___45_1671053890158572571 || (otherRec.sym__0__2256924431415148013 != sym__0__2256924431415148013 || (otherRec.sym__0__347872876320563651 != sym__0__347872876320563651 || (otherRec.sym__0___45_7666447219434903317 != sym__0___45_7666447219434903317 || (otherRec.sym__0__1272718151591622153 != sym__0__1272718151591622153 || (otherRec.sym__0__4584633926271658914 != sym__0__4584633926271658914 || (otherRec.sym__0___45_4610773208091240233 != sym__0___45_4610773208091240233 || (otherRec.sym__0___45_5766638191766435038 != sym__0___45_5766638191766435038 || (otherRec.sym__0___45_5211223358204127380 != sym__0___45_5211223358204127380 || (otherRec.sym__0__8435431464460332395 != sym__0__8435431464460332395 || (otherRec.sym__0___45_6450191115912157957 != sym__0___45_6450191115912157957 || (otherRec.sym__0__7921907673157171693 != sym__0__7921907673157171693 || (otherRec.sym__0___45_1699747741436218441 != sym__0___45_1699747741436218441 || (otherRec.sym__0___45_2985562469054236715 != sym__0___45_2985562469054236715 || (otherRec.sym__0__3746029949899912401 != sym__0__3746029949899912401 || (otherRec.sym__0___45_989155948099215770 != sym__0___45_989155948099215770 || (otherRec.sym__0___45_1667761180508152936 != sym__0___45_1667761180508152936 || (otherRec.sym__0__5854462121170882944 != sym__0__5854462121170882944 || (otherRec.sym__0___45_1023382914117654422 != sym__0___45_1023382914117654422 || (otherRec.sym__0__6224010339127806049 != sym__0__6224010339127806049 || (otherRec.sym__0___45_8804639047977952305 != sym__0___45_8804639047977952305 || (otherRec.sym__0__8926375957639307021 != sym__0__8926375957639307021 || (otherRec.sym__0__5153200798583684363 != sym__0__5153200798583684363 || (otherRec.sym__0___45_794494697990656050 != sym__0___45_794494697990656050 || otherRec.sym__0__7308161412148661473 != sym__0__7308161412148661473)))))))))))))))))))))))))))))));
  }
  unsigned sym__0__2833764152503888409;
  fluidb_string<18> sym__0__6938021140779677761;
  fluidb_string<40> sym__0___45_4700201805806600089;
  fluidb_string<11> sym__0__3362667619044778557;
  fluidb_string<15> sym__0__2679827580767046755;
  fluidb_string<13> sym__0___45_4186304031693649930;
  fluidb_string<15> sym__0__8596564865999609793;
  fluidb_string<21> sym__0___45_1671053890158572571;
  unsigned sym__0__2256924431415148013;
  int sym__0__347872876320563651;
  unsigned sym__0___45_7666447219434903317;
  unsigned sym__0__1272718151591622153;
  unsigned sym__0__4584633926271658914;
  unsigned sym__0___45_4610773208091240233;
  fluidb_string<21> sym__0___45_5766638191766435038;
  unsigned sym__0___45_5211223358204127380;
  fluidb_string<10> sym__0__8435431464460332395;
  unsigned sym__0___45_6450191115912157957;
  double sym__0__7921907673157171693;
  unsigned sym__0___45_1699747741436218441;
  double sym__0___45_2985562469054236715;
  unsigned sym__0__3746029949899912401;
  unsigned sym__0___45_989155948099215770;
  double sym__0___45_1667761180508152936;
  fluidb_string<13> sym__0__5854462121170882944;
  unsigned sym__0___45_1023382914117654422;
  fluidb_string<25> sym__0__6224010339127806049;
  fluidb_string<40> sym__0___45_8804639047977952305;
  fluidb_string<16> sym__0__8926375957639307021;
  fluidb_string<16> sym__0__5153200798583684363;
  fluidb_string<13> sym__0___45_794494697990656050;
  fluidb_string<15> sym__0__7308161412148661473;
 private:
};


class Record55 {
 public:
  Record55(unsigned __sym__0__2350038716092382120, fluidb_string<16> __sym__0__8611344027404304067, fluidb_string<7> __sym__0__8346724432435993936, unsigned __sym__0___45_2862115392470135952) : sym__0__2350038716092382120(__sym__0__2350038716092382120), sym__0__8611344027404304067(__sym__0__8611344027404304067), sym__0__8346724432435993936(__sym__0__8346724432435993936), sym__0___45_2862115392470135952(__sym__0___45_2862115392470135952)
  {
  }
  Record55() 
  {
  }
  std::string show() const{
    std::stringstream o;
    o << sym__0__2350038716092382120 << " | " << arrToString(sym__0__8611344027404304067) << " | " << arrToString(sym__0__8346724432435993936) << " | " << sym__0___45_2862115392470135952;
    return o.str();
  }
  bool operator <(const Record55& otherRec) const{
    return (otherRec.sym__0__2350038716092382120 < sym__0__2350038716092382120 && (otherRec.sym__0__8611344027404304067 < sym__0__8611344027404304067 && (otherRec.sym__0__8346724432435993936 < sym__0__8346724432435993936 && otherRec.sym__0___45_2862115392470135952 < sym__0___45_2862115392470135952)));
  }
  bool operator ==(const Record55& otherRec) const{
    return (otherRec.sym__0__2350038716092382120 == sym__0__2350038716092382120 && (otherRec.sym__0__8611344027404304067 == sym__0__8611344027404304067 && (otherRec.sym__0__8346724432435993936 == sym__0__8346724432435993936 && otherRec.sym__0___45_2862115392470135952 == sym__0___45_2862115392470135952)));
  }
  bool operator !=(const Record55& otherRec) const{
    return (otherRec.sym__0__2350038716092382120 != sym__0__2350038716092382120 || (otherRec.sym__0__8611344027404304067 != sym__0__8611344027404304067 || (otherRec.sym__0__8346724432435993936 != sym__0__8346724432435993936 || otherRec.sym__0___45_2862115392470135952 != sym__0___45_2862115392470135952)));
  }
  unsigned sym__0__2350038716092382120;
  fluidb_string<16> sym__0__8611344027404304067;
  fluidb_string<7> sym__0__8346724432435993936;
  unsigned sym__0___45_2862115392470135952;
 private:
};


class Record22 {
 public:
  Record22(unsigned __sym__0__3340776791388040562, fluidb_string<18> __sym__0__5509706901951140194, fluidb_string<9> __sym__0___45_4952065461520372436, fluidb_string<9> __sym__0__2116328823817345863, unsigned __sym__0___45_8607322316923667215, unsigned __sym__0___45_9082249416675245097, fluidb_string<7> __sym__0___45_320758332609146870, unsigned __sym__0___45_1482663064778731587, unsigned __sym__0__5256467678199231530, unsigned __sym__0__3817289554798786834, unsigned __sym__0___45_3580136957897224460, unsigned __sym__0___45_3004534649602489497, fluidb_string<15> __sym__0__2588391617158963718, fluidb_string<2> __sym__0___45_6809062359066249474, fluidb_string<2> __sym__0___45_9168687422734761645, fluidb_string<2> __sym__0__5378957153998890363, fluidb_string<2> __sym__0___45_3384080988064750583, unsigned __sym__0__6589375295550343870, int __sym__0___45_2033518544785975244, unsigned __sym__0___45_4427450031798671604, unsigned __sym__0__7765736586552672474, unsigned __sym__0___45_4610362206854674431, unsigned __sym__0___45_3634122799109307304, fluidb_string<21> __sym__0___45_5600686305686791551, unsigned __sym__0__229809741191386755, fluidb_string<10> __sym__0___45_7926348361466899316, unsigned __sym__0___45_5498487047320841668, double __sym__0___45_4630265588054079810, unsigned __sym__0___45_7452106773122069448, double __sym__0__3412542153268714262, unsigned __sym__0___45_1104070637012428334, unsigned __sym__0__924501750664268421, double __sym__0__3690407731596524127, fluidb_string<13> __sym__0___45_1044707901991582025, unsigned __sym__0__5113110584587131769, fluidb_string<25> __sym__0___45_3088523481574913982, fluidb_string<40> __sym__0__3346836918626726432, fluidb_string<16> __sym__0___45_3259220759668810786, fluidb_string<16> __sym__0__8108647548297517356, fluidb_string<13> __sym__0___45_2815638459411730147, fluidb_string<15> __sym__0___45_3349534373780151870) : sym__0__3340776791388040562(__sym__0__3340776791388040562), sym__0__5509706901951140194(__sym__0__5509706901951140194), sym__0___45_4952065461520372436(__sym__0___45_4952065461520372436), sym__0__2116328823817345863(__sym__0__2116328823817345863), sym__0___45_8607322316923667215(__sym__0___45_8607322316923667215), sym__0___45_9082249416675245097(__sym__0___45_9082249416675245097), sym__0___45_320758332609146870(__sym__0___45_320758332609146870), sym__0___45_1482663064778731587(__sym__0___45_1482663064778731587), sym__0__5256467678199231530(__sym__0__5256467678199231530), sym__0__3817289554798786834(__sym__0__3817289554798786834), sym__0___45_3580136957897224460(__sym__0___45_3580136957897224460), sym__0___45_3004534649602489497(__sym__0___45_3004534649602489497), sym__0__2588391617158963718(__sym__0__2588391617158963718), sym__0___45_6809062359066249474(__sym__0___45_6809062359066249474), sym__0___45_9168687422734761645(__sym__0___45_9168687422734761645), sym__0__5378957153998890363(__sym__0__5378957153998890363), sym__0___45_3384080988064750583(__sym__0___45_3384080988064750583), sym__0__6589375295550343870(__sym__0__6589375295550343870), sym__0___45_2033518544785975244(__sym__0___45_2033518544785975244), sym__0___45_4427450031798671604(__sym__0___45_4427450031798671604), sym__0__7765736586552672474(__sym__0__7765736586552672474), sym__0___45_4610362206854674431(__sym__0___45_4610362206854674431), sym__0___45_3634122799109307304(__sym__0___45_3634122799109307304), sym__0___45_5600686305686791551(__sym__0___45_5600686305686791551), sym__0__229809741191386755(__sym__0__229809741191386755), sym__0___45_7926348361466899316(__sym__0___45_7926348361466899316), sym__0___45_5498487047320841668(__sym__0___45_5498487047320841668), sym__0___45_4630265588054079810(__sym__0___45_4630265588054079810), sym__0___45_7452106773122069448(__sym__0___45_7452106773122069448), sym__0__3412542153268714262(__sym__0__3412542153268714262), sym__0___45_1104070637012428334(__sym__0___45_1104070637012428334), sym__0__924501750664268421(__sym__0__924501750664268421), sym__0__3690407731596524127(__sym__0__3690407731596524127), sym__0___45_1044707901991582025(__sym__0___45_1044707901991582025), sym__0__5113110584587131769(__sym__0__5113110584587131769), sym__0___45_3088523481574913982(__sym__0___45_3088523481574913982), sym__0__3346836918626726432(__sym__0__3346836918626726432), sym__0___45_3259220759668810786(__sym__0___45_3259220759668810786), sym__0__8108647548297517356(__sym__0__8108647548297517356), sym__0___45_2815638459411730147(__sym__0___45_2815638459411730147), sym__0___45_3349534373780151870(__sym__0___45_3349534373780151870)
  {
  }
  Record22() 
  {
  }
  std::string show() const{
    std::stringstream o;
    o << sym__0__3340776791388040562 << " | " << arrToString(sym__0__5509706901951140194) << " | " << arrToString(sym__0___45_4952065461520372436) << " | " << arrToString(sym__0__2116328823817345863) << " | " << sym__0___45_8607322316923667215 << " | " << sym__0___45_9082249416675245097 << " | " << arrToString(sym__0___45_320758332609146870) << " | " << sym__0___45_1482663064778731587 << " | " << sym__0__5256467678199231530 << " | " << sym__0__3817289554798786834 << " | " << sym__0___45_3580136957897224460 << " | " << sym__0___45_3004534649602489497 << " | " << arrToString(sym__0__2588391617158963718) << " | " << arrToString(sym__0___45_6809062359066249474) << " | " << arrToString(sym__0___45_9168687422734761645) << " | " << arrToString(sym__0__5378957153998890363) << " | " << arrToString(sym__0___45_3384080988064750583) << " | " << sym__0__6589375295550343870 << " | " << sym__0___45_2033518544785975244 << " | " << sym__0___45_4427450031798671604 << " | " << sym__0__7765736586552672474 << " | " << sym__0___45_4610362206854674431 << " | " << sym__0___45_3634122799109307304 << " | " << arrToString(sym__0___45_5600686305686791551) << " | " << sym__0__229809741191386755 << " | " << arrToString(sym__0___45_7926348361466899316) << " | " << sym__0___45_5498487047320841668 << " | " << sym__0___45_4630265588054079810 << " | " << sym__0___45_7452106773122069448 << " | " << sym__0__3412542153268714262 << " | " << sym__0___45_1104070637012428334 << " | " << sym__0__924501750664268421 << " | " << sym__0__3690407731596524127 << " | " << arrToString(sym__0___45_1044707901991582025) << " | " << sym__0__5113110584587131769 << " | " << arrToString(sym__0___45_3088523481574913982) << " | " << arrToString(sym__0__3346836918626726432) << " | " << arrToString(sym__0___45_3259220759668810786) << " | " << arrToString(sym__0__8108647548297517356) << " | " << arrToString(sym__0___45_2815638459411730147) << " | " << arrToString(sym__0___45_3349534373780151870);
    return o.str();
  }
  bool operator <(const Record22& otherRec) const{
    return (otherRec.sym__0__3340776791388040562 < sym__0__3340776791388040562 && (otherRec.sym__0__5509706901951140194 < sym__0__5509706901951140194 && (otherRec.sym__0___45_4952065461520372436 < sym__0___45_4952065461520372436 && (otherRec.sym__0__2116328823817345863 < sym__0__2116328823817345863 && (otherRec.sym__0___45_8607322316923667215 < sym__0___45_8607322316923667215 && (otherRec.sym__0___45_9082249416675245097 < sym__0___45_9082249416675245097 && (otherRec.sym__0___45_320758332609146870 < sym__0___45_320758332609146870 && (otherRec.sym__0___45_1482663064778731587 < sym__0___45_1482663064778731587 && (otherRec.sym__0__5256467678199231530 < sym__0__5256467678199231530 && (otherRec.sym__0__3817289554798786834 < sym__0__3817289554798786834 && (otherRec.sym__0___45_3580136957897224460 < sym__0___45_3580136957897224460 && (otherRec.sym__0___45_3004534649602489497 < sym__0___45_3004534649602489497 && (otherRec.sym__0__2588391617158963718 < sym__0__2588391617158963718 && (otherRec.sym__0___45_6809062359066249474 < sym__0___45_6809062359066249474 && (otherRec.sym__0___45_9168687422734761645 < sym__0___45_9168687422734761645 && (otherRec.sym__0__5378957153998890363 < sym__0__5378957153998890363 && (otherRec.sym__0___45_3384080988064750583 < sym__0___45_3384080988064750583 && (otherRec.sym__0__6589375295550343870 < sym__0__6589375295550343870 && (otherRec.sym__0___45_2033518544785975244 < sym__0___45_2033518544785975244 && (otherRec.sym__0___45_4427450031798671604 < sym__0___45_4427450031798671604 && (otherRec.sym__0__7765736586552672474 < sym__0__7765736586552672474 && (otherRec.sym__0___45_4610362206854674431 < sym__0___45_4610362206854674431 && (otherRec.sym__0___45_3634122799109307304 < sym__0___45_3634122799109307304 && (otherRec.sym__0___45_5600686305686791551 < sym__0___45_5600686305686791551 && (otherRec.sym__0__229809741191386755 < sym__0__229809741191386755 && (otherRec.sym__0___45_7926348361466899316 < sym__0___45_7926348361466899316 && (otherRec.sym__0___45_5498487047320841668 < sym__0___45_5498487047320841668 && (otherRec.sym__0___45_4630265588054079810 < sym__0___45_4630265588054079810 && (otherRec.sym__0___45_7452106773122069448 < sym__0___45_7452106773122069448 && (otherRec.sym__0__3412542153268714262 < sym__0__3412542153268714262 && (otherRec.sym__0___45_1104070637012428334 < sym__0___45_1104070637012428334 && (otherRec.sym__0__924501750664268421 < sym__0__924501750664268421 && (otherRec.sym__0__3690407731596524127 < sym__0__3690407731596524127 && (otherRec.sym__0___45_1044707901991582025 < sym__0___45_1044707901991582025 && (otherRec.sym__0__5113110584587131769 < sym__0__5113110584587131769 && (otherRec.sym__0___45_3088523481574913982 < sym__0___45_3088523481574913982 && (otherRec.sym__0__3346836918626726432 < sym__0__3346836918626726432 && (otherRec.sym__0___45_3259220759668810786 < sym__0___45_3259220759668810786 && (otherRec.sym__0__8108647548297517356 < sym__0__8108647548297517356 && (otherRec.sym__0___45_2815638459411730147 < sym__0___45_2815638459411730147 && otherRec.sym__0___45_3349534373780151870 < sym__0___45_3349534373780151870))))))))))))))))))))))))))))))))))))))));
  }
  bool operator ==(const Record22& otherRec) const{
    return (otherRec.sym__0__3340776791388040562 == sym__0__3340776791388040562 && (otherRec.sym__0__5509706901951140194 == sym__0__5509706901951140194 && (otherRec.sym__0___45_4952065461520372436 == sym__0___45_4952065461520372436 && (otherRec.sym__0__2116328823817345863 == sym__0__2116328823817345863 && (otherRec.sym__0___45_8607322316923667215 == sym__0___45_8607322316923667215 && (otherRec.sym__0___45_9082249416675245097 == sym__0___45_9082249416675245097 && (otherRec.sym__0___45_320758332609146870 == sym__0___45_320758332609146870 && (otherRec.sym__0___45_1482663064778731587 == sym__0___45_1482663064778731587 && (otherRec.sym__0__5256467678199231530 == sym__0__5256467678199231530 && (otherRec.sym__0__3817289554798786834 == sym__0__3817289554798786834 && (otherRec.sym__0___45_3580136957897224460 == sym__0___45_3580136957897224460 && (otherRec.sym__0___45_3004534649602489497 == sym__0___45_3004534649602489497 && (otherRec.sym__0__2588391617158963718 == sym__0__2588391617158963718 && (otherRec.sym__0___45_6809062359066249474 == sym__0___45_6809062359066249474 && (otherRec.sym__0___45_9168687422734761645 == sym__0___45_9168687422734761645 && (otherRec.sym__0__5378957153998890363 == sym__0__5378957153998890363 && (otherRec.sym__0___45_3384080988064750583 == sym__0___45_3384080988064750583 && (otherRec.sym__0__6589375295550343870 == sym__0__6589375295550343870 && (otherRec.sym__0___45_2033518544785975244 == sym__0___45_2033518544785975244 && (otherRec.sym__0___45_4427450031798671604 == sym__0___45_4427450031798671604 && (otherRec.sym__0__7765736586552672474 == sym__0__7765736586552672474 && (otherRec.sym__0___45_4610362206854674431 == sym__0___45_4610362206854674431 && (otherRec.sym__0___45_3634122799109307304 == sym__0___45_3634122799109307304 && (otherRec.sym__0___45_5600686305686791551 == sym__0___45_5600686305686791551 && (otherRec.sym__0__229809741191386755 == sym__0__229809741191386755 && (otherRec.sym__0___45_7926348361466899316 == sym__0___45_7926348361466899316 && (otherRec.sym__0___45_5498487047320841668 == sym__0___45_5498487047320841668 && (otherRec.sym__0___45_4630265588054079810 == sym__0___45_4630265588054079810 && (otherRec.sym__0___45_7452106773122069448 == sym__0___45_7452106773122069448 && (otherRec.sym__0__3412542153268714262 == sym__0__3412542153268714262 && (otherRec.sym__0___45_1104070637012428334 == sym__0___45_1104070637012428334 && (otherRec.sym__0__924501750664268421 == sym__0__924501750664268421 && (otherRec.sym__0__3690407731596524127 == sym__0__3690407731596524127 && (otherRec.sym__0___45_1044707901991582025 == sym__0___45_1044707901991582025 && (otherRec.sym__0__5113110584587131769 == sym__0__5113110584587131769 && (otherRec.sym__0___45_3088523481574913982 == sym__0___45_3088523481574913982 && (otherRec.sym__0__3346836918626726432 == sym__0__3346836918626726432 && (otherRec.sym__0___45_3259220759668810786 == sym__0___45_3259220759668810786 && (otherRec.sym__0__8108647548297517356 == sym__0__8108647548297517356 && (otherRec.sym__0___45_2815638459411730147 == sym__0___45_2815638459411730147 && otherRec.sym__0___45_3349534373780151870 == sym__0___45_3349534373780151870))))))))))))))))))))))))))))))))))))))));
  }
  bool operator !=(const Record22& otherRec) const{
    return (otherRec.sym__0__3340776791388040562 != sym__0__3340776791388040562 || (otherRec.sym__0__5509706901951140194 != sym__0__5509706901951140194 || (otherRec.sym__0___45_4952065461520372436 != sym__0___45_4952065461520372436 || (otherRec.sym__0__2116328823817345863 != sym__0__2116328823817345863 || (otherRec.sym__0___45_8607322316923667215 != sym__0___45_8607322316923667215 || (otherRec.sym__0___45_9082249416675245097 != sym__0___45_9082249416675245097 || (otherRec.sym__0___45_320758332609146870 != sym__0___45_320758332609146870 || (otherRec.sym__0___45_1482663064778731587 != sym__0___45_1482663064778731587 || (otherRec.sym__0__5256467678199231530 != sym__0__5256467678199231530 || (otherRec.sym__0__3817289554798786834 != sym__0__3817289554798786834 || (otherRec.sym__0___45_3580136957897224460 != sym__0___45_3580136957897224460 || (otherRec.sym__0___45_3004534649602489497 != sym__0___45_3004534649602489497 || (otherRec.sym__0__2588391617158963718 != sym__0__2588391617158963718 || (otherRec.sym__0___45_6809062359066249474 != sym__0___45_6809062359066249474 || (otherRec.sym__0___45_9168687422734761645 != sym__0___45_9168687422734761645 || (otherRec.sym__0__5378957153998890363 != sym__0__5378957153998890363 || (otherRec.sym__0___45_3384080988064750583 != sym__0___45_3384080988064750583 || (otherRec.sym__0__6589375295550343870 != sym__0__6589375295550343870 || (otherRec.sym__0___45_2033518544785975244 != sym__0___45_2033518544785975244 || (otherRec.sym__0___45_4427450031798671604 != sym__0___45_4427450031798671604 || (otherRec.sym__0__7765736586552672474 != sym__0__7765736586552672474 || (otherRec.sym__0___45_4610362206854674431 != sym__0___45_4610362206854674431 || (otherRec.sym__0___45_3634122799109307304 != sym__0___45_3634122799109307304 || (otherRec.sym__0___45_5600686305686791551 != sym__0___45_5600686305686791551 || (otherRec.sym__0__229809741191386755 != sym__0__229809741191386755 || (otherRec.sym__0___45_7926348361466899316 != sym__0___45_7926348361466899316 || (otherRec.sym__0___45_5498487047320841668 != sym__0___45_5498487047320841668 || (otherRec.sym__0___45_4630265588054079810 != sym__0___45_4630265588054079810 || (otherRec.sym__0___45_7452106773122069448 != sym__0___45_7452106773122069448 || (otherRec.sym__0__3412542153268714262 != sym__0__3412542153268714262 || (otherRec.sym__0___45_1104070637012428334 != sym__0___45_1104070637012428334 || (otherRec.sym__0__924501750664268421 != sym__0__924501750664268421 || (otherRec.sym__0__3690407731596524127 != sym__0__3690407731596524127 || (otherRec.sym__0___45_1044707901991582025 != sym__0___45_1044707901991582025 || (otherRec.sym__0__5113110584587131769 != sym__0__5113110584587131769 || (otherRec.sym__0___45_3088523481574913982 != sym__0___45_3088523481574913982 || (otherRec.sym__0__3346836918626726432 != sym__0__3346836918626726432 || (otherRec.sym__0___45_3259220759668810786 != sym__0___45_3259220759668810786 || (otherRec.sym__0__8108647548297517356 != sym__0__8108647548297517356 || (otherRec.sym__0___45_2815638459411730147 != sym__0___45_2815638459411730147 || otherRec.sym__0___45_3349534373780151870 != sym__0___45_3349534373780151870))))))))))))))))))))))))))))))))))))))));
  }
  unsigned sym__0__3340776791388040562;
  fluidb_string<18> sym__0__5509706901951140194;
  fluidb_string<9> sym__0___45_4952065461520372436;
  fluidb_string<9> sym__0__2116328823817345863;
  unsigned sym__0___45_8607322316923667215;
  unsigned sym__0___45_9082249416675245097;
  fluidb_string<7> sym__0___45_320758332609146870;
  unsigned sym__0___45_1482663064778731587;
  unsigned sym__0__5256467678199231530;
  unsigned sym__0__3817289554798786834;
  unsigned sym__0___45_3580136957897224460;
  unsigned sym__0___45_3004534649602489497;
  fluidb_string<15> sym__0__2588391617158963718;
  fluidb_string<2> sym__0___45_6809062359066249474;
  fluidb_string<2> sym__0___45_9168687422734761645;
  fluidb_string<2> sym__0__5378957153998890363;
  fluidb_string<2> sym__0___45_3384080988064750583;
  unsigned sym__0__6589375295550343870;
  int sym__0___45_2033518544785975244;
  unsigned sym__0___45_4427450031798671604;
  unsigned sym__0__7765736586552672474;
  unsigned sym__0___45_4610362206854674431;
  unsigned sym__0___45_3634122799109307304;
  fluidb_string<21> sym__0___45_5600686305686791551;
  unsigned sym__0__229809741191386755;
  fluidb_string<10> sym__0___45_7926348361466899316;
  unsigned sym__0___45_5498487047320841668;
  double sym__0___45_4630265588054079810;
  unsigned sym__0___45_7452106773122069448;
  double sym__0__3412542153268714262;
  unsigned sym__0___45_1104070637012428334;
  unsigned sym__0__924501750664268421;
  double sym__0__3690407731596524127;
  fluidb_string<13> sym__0___45_1044707901991582025;
  unsigned sym__0__5113110584587131769;
  fluidb_string<25> sym__0___45_3088523481574913982;
  fluidb_string<40> sym__0__3346836918626726432;
  fluidb_string<16> sym__0___45_3259220759668810786;
  fluidb_string<16> sym__0__8108647548297517356;
  fluidb_string<13> sym__0___45_2815638459411730147;
  fluidb_string<15> sym__0___45_3349534373780151870;
 private:
};


class Record34 {
 public:
  Record34(unsigned __sym__0___45_3862182167894734233, fluidb_string<18> __sym__0___45_5049546618211835241, fluidb_string<9> __sym__0___45_2996783662751493035, fluidb_string<9> __sym__0___45_8620453348494972806, unsigned __sym__0__1925891775692302472, unsigned __sym__0___45_4666290150124134966, fluidb_string<7> __sym__0__2396615500282490031, unsigned __sym__0___45_3413279326547145180, unsigned __sym__0__7931789082922299215, unsigned __sym__0__4128851951395191943, unsigned __sym__0__1414614919079575917, unsigned __sym__0___45_4769868403273652582, fluidb_string<15> __sym__0___45_423989522690221765, fluidb_string<2> __sym__0__670880538897647363, fluidb_string<2> __sym__0___45_6595340929265439258, fluidb_string<2> __sym__0___45_4807245048316597474, fluidb_string<2> __sym__0___45_2845474408872645744, unsigned __sym__0___45_3923001362387400637, int __sym__0___45_4068285250723832019, unsigned __sym__0__5927661182141962805, unsigned __sym__0__2192637400238122239, unsigned __sym__0___45_4592297025100810856, unsigned __sym__0__5820861992669913537, fluidb_string<21> __sym__0__2988599564076309784, unsigned __sym__0___45_8469125589459601770, fluidb_string<10> __sym__0___45_2479075576716686155, unsigned __sym__0__5905974904445628197, double __sym__0__8482341455033398339, unsigned __sym__0___45_6780802777767537759, double __sym__0___45_4873871374223645685, unsigned __sym__0___45_776774550833357369, unsigned __sym__0___45_135773926070893412, double __sym__0___45_4302867605132693150, fluidb_string<13> __sym__0__1118838070725597482, unsigned __sym__0___45_1590115651450644480, fluidb_string<25> __sym__0__3192438338873126263, fluidb_string<40> __sym__0___45_2134007651753731143, fluidb_string<16> __sym__0___45_6288836903209208989, fluidb_string<16> __sym__0___45_7991989887002259371, fluidb_string<13> __sym__0___45_355683640189594620, fluidb_string<15> __sym__0__4955587123024849399, unsigned __sym__0__7822702969493777647, fluidb_string<18> __sym__0___45_7097577767643705257, fluidb_string<40> __sym__0___45_4128354664746428815, fluidb_string<11> __sym__0___45_181005402936645453, fluidb_string<15> __sym__0___45_4114345702155733811, fluidb_string<13> __sym__0__2126085240536350732, fluidb_string<15> __sym__0__2978611118299427799, fluidb_string<21> __sym__0___45_924665267353701317) : sym__0___45_3862182167894734233(__sym__0___45_3862182167894734233), sym__0___45_5049546618211835241(__sym__0___45_5049546618211835241), sym__0___45_2996783662751493035(__sym__0___45_2996783662751493035), sym__0___45_8620453348494972806(__sym__0___45_8620453348494972806), sym__0__1925891775692302472(__sym__0__1925891775692302472), sym__0___45_4666290150124134966(__sym__0___45_4666290150124134966), sym__0__2396615500282490031(__sym__0__2396615500282490031), sym__0___45_3413279326547145180(__sym__0___45_3413279326547145180), sym__0__7931789082922299215(__sym__0__7931789082922299215), sym__0__4128851951395191943(__sym__0__4128851951395191943), sym__0__1414614919079575917(__sym__0__1414614919079575917), sym__0___45_4769868403273652582(__sym__0___45_4769868403273652582), sym__0___45_423989522690221765(__sym__0___45_423989522690221765), sym__0__670880538897647363(__sym__0__670880538897647363), sym__0___45_6595340929265439258(__sym__0___45_6595340929265439258), sym__0___45_4807245048316597474(__sym__0___45_4807245048316597474), sym__0___45_2845474408872645744(__sym__0___45_2845474408872645744), sym__0___45_3923001362387400637(__sym__0___45_3923001362387400637), sym__0___45_4068285250723832019(__sym__0___45_4068285250723832019), sym__0__5927661182141962805(__sym__0__5927661182141962805), sym__0__2192637400238122239(__sym__0__2192637400238122239), sym__0___45_4592297025100810856(__sym__0___45_4592297025100810856), sym__0__5820861992669913537(__sym__0__5820861992669913537), sym__0__2988599564076309784(__sym__0__2988599564076309784), sym__0___45_8469125589459601770(__sym__0___45_8469125589459601770), sym__0___45_2479075576716686155(__sym__0___45_2479075576716686155), sym__0__5905974904445628197(__sym__0__5905974904445628197), sym__0__8482341455033398339(__sym__0__8482341455033398339), sym__0___45_6780802777767537759(__sym__0___45_6780802777767537759), sym__0___45_4873871374223645685(__sym__0___45_4873871374223645685), sym__0___45_776774550833357369(__sym__0___45_776774550833357369), sym__0___45_135773926070893412(__sym__0___45_135773926070893412), sym__0___45_4302867605132693150(__sym__0___45_4302867605132693150), sym__0__1118838070725597482(__sym__0__1118838070725597482), sym__0___45_1590115651450644480(__sym__0___45_1590115651450644480), sym__0__3192438338873126263(__sym__0__3192438338873126263), sym__0___45_2134007651753731143(__sym__0___45_2134007651753731143), sym__0___45_6288836903209208989(__sym__0___45_6288836903209208989), sym__0___45_7991989887002259371(__sym__0___45_7991989887002259371), sym__0___45_355683640189594620(__sym__0___45_355683640189594620), sym__0__4955587123024849399(__sym__0__4955587123024849399), sym__0__7822702969493777647(__sym__0__7822702969493777647), sym__0___45_7097577767643705257(__sym__0___45_7097577767643705257), sym__0___45_4128354664746428815(__sym__0___45_4128354664746428815), sym__0___45_181005402936645453(__sym__0___45_181005402936645453), sym__0___45_4114345702155733811(__sym__0___45_4114345702155733811), sym__0__2126085240536350732(__sym__0__2126085240536350732), sym__0__2978611118299427799(__sym__0__2978611118299427799), sym__0___45_924665267353701317(__sym__0___45_924665267353701317)
  {
  }
  Record34() 
  {
  }
  std::string show() const{
    std::stringstream o;
    o << sym__0___45_3862182167894734233 << " | " << arrToString(sym__0___45_5049546618211835241) << " | " << arrToString(sym__0___45_2996783662751493035) << " | " << arrToString(sym__0___45_8620453348494972806) << " | " << sym__0__1925891775692302472 << " | " << sym__0___45_4666290150124134966 << " | " << arrToString(sym__0__2396615500282490031) << " | " << sym__0___45_3413279326547145180 << " | " << sym__0__7931789082922299215 << " | " << sym__0__4128851951395191943 << " | " << sym__0__1414614919079575917 << " | " << sym__0___45_4769868403273652582 << " | " << arrToString(sym__0___45_423989522690221765) << " | " << arrToString(sym__0__670880538897647363) << " | " << arrToString(sym__0___45_6595340929265439258) << " | " << arrToString(sym__0___45_4807245048316597474) << " | " << arrToString(sym__0___45_2845474408872645744) << " | " << sym__0___45_3923001362387400637 << " | " << sym__0___45_4068285250723832019 << " | " << sym__0__5927661182141962805 << " | " << sym__0__2192637400238122239 << " | " << sym__0___45_4592297025100810856 << " | " << sym__0__5820861992669913537 << " | " << arrToString(sym__0__2988599564076309784) << " | " << sym__0___45_8469125589459601770 << " | " << arrToString(sym__0___45_2479075576716686155) << " | " << sym__0__5905974904445628197 << " | " << sym__0__8482341455033398339 << " | " << sym__0___45_6780802777767537759 << " | " << sym__0___45_4873871374223645685 << " | " << sym__0___45_776774550833357369 << " | " << sym__0___45_135773926070893412 << " | " << sym__0___45_4302867605132693150 << " | " << arrToString(sym__0__1118838070725597482) << " | " << sym__0___45_1590115651450644480 << " | " << arrToString(sym__0__3192438338873126263) << " | " << arrToString(sym__0___45_2134007651753731143) << " | " << arrToString(sym__0___45_6288836903209208989) << " | " << arrToString(sym__0___45_7991989887002259371) << " | " << arrToString(sym__0___45_355683640189594620) << " | " << arrToString(sym__0__4955587123024849399) << " | " << sym__0__7822702969493777647 << " | " << arrToString(sym__0___45_7097577767643705257) << " | " << arrToString(sym__0___45_4128354664746428815) << " | " << arrToString(sym__0___45_181005402936645453) << " | " << arrToString(sym__0___45_4114345702155733811) << " | " << arrToString(sym__0__2126085240536350732) << " | " << arrToString(sym__0__2978611118299427799) << " | " << arrToString(sym__0___45_924665267353701317);
    return o.str();
  }
  bool operator <(const Record34& otherRec) const{
    return (otherRec.sym__0___45_3862182167894734233 < sym__0___45_3862182167894734233 && (otherRec.sym__0___45_5049546618211835241 < sym__0___45_5049546618211835241 && (otherRec.sym__0___45_2996783662751493035 < sym__0___45_2996783662751493035 && (otherRec.sym__0___45_8620453348494972806 < sym__0___45_8620453348494972806 && (otherRec.sym__0__1925891775692302472 < sym__0__1925891775692302472 && (otherRec.sym__0___45_4666290150124134966 < sym__0___45_4666290150124134966 && (otherRec.sym__0__2396615500282490031 < sym__0__2396615500282490031 && (otherRec.sym__0___45_3413279326547145180 < sym__0___45_3413279326547145180 && (otherRec.sym__0__7931789082922299215 < sym__0__7931789082922299215 && (otherRec.sym__0__4128851951395191943 < sym__0__4128851951395191943 && (otherRec.sym__0__1414614919079575917 < sym__0__1414614919079575917 && (otherRec.sym__0___45_4769868403273652582 < sym__0___45_4769868403273652582 && (otherRec.sym__0___45_423989522690221765 < sym__0___45_423989522690221765 && (otherRec.sym__0__670880538897647363 < sym__0__670880538897647363 && (otherRec.sym__0___45_6595340929265439258 < sym__0___45_6595340929265439258 && (otherRec.sym__0___45_4807245048316597474 < sym__0___45_4807245048316597474 && (otherRec.sym__0___45_2845474408872645744 < sym__0___45_2845474408872645744 && (otherRec.sym__0___45_3923001362387400637 < sym__0___45_3923001362387400637 && (otherRec.sym__0___45_4068285250723832019 < sym__0___45_4068285250723832019 && (otherRec.sym__0__5927661182141962805 < sym__0__5927661182141962805 && (otherRec.sym__0__2192637400238122239 < sym__0__2192637400238122239 && (otherRec.sym__0___45_4592297025100810856 < sym__0___45_4592297025100810856 && (otherRec.sym__0__5820861992669913537 < sym__0__5820861992669913537 && (otherRec.sym__0__2988599564076309784 < sym__0__2988599564076309784 && (otherRec.sym__0___45_8469125589459601770 < sym__0___45_8469125589459601770 && (otherRec.sym__0___45_2479075576716686155 < sym__0___45_2479075576716686155 && (otherRec.sym__0__5905974904445628197 < sym__0__5905974904445628197 && (otherRec.sym__0__8482341455033398339 < sym__0__8482341455033398339 && (otherRec.sym__0___45_6780802777767537759 < sym__0___45_6780802777767537759 && (otherRec.sym__0___45_4873871374223645685 < sym__0___45_4873871374223645685 && (otherRec.sym__0___45_776774550833357369 < sym__0___45_776774550833357369 && (otherRec.sym__0___45_135773926070893412 < sym__0___45_135773926070893412 && (otherRec.sym__0___45_4302867605132693150 < sym__0___45_4302867605132693150 && (otherRec.sym__0__1118838070725597482 < sym__0__1118838070725597482 && (otherRec.sym__0___45_1590115651450644480 < sym__0___45_1590115651450644480 && (otherRec.sym__0__3192438338873126263 < sym__0__3192438338873126263 && (otherRec.sym__0___45_2134007651753731143 < sym__0___45_2134007651753731143 && (otherRec.sym__0___45_6288836903209208989 < sym__0___45_6288836903209208989 && (otherRec.sym__0___45_7991989887002259371 < sym__0___45_7991989887002259371 && (otherRec.sym__0___45_355683640189594620 < sym__0___45_355683640189594620 && (otherRec.sym__0__4955587123024849399 < sym__0__4955587123024849399 && (otherRec.sym__0__7822702969493777647 < sym__0__7822702969493777647 && (otherRec.sym__0___45_7097577767643705257 < sym__0___45_7097577767643705257 && (otherRec.sym__0___45_4128354664746428815 < sym__0___45_4128354664746428815 && (otherRec.sym__0___45_181005402936645453 < sym__0___45_181005402936645453 && (otherRec.sym__0___45_4114345702155733811 < sym__0___45_4114345702155733811 && (otherRec.sym__0__2126085240536350732 < sym__0__2126085240536350732 && (otherRec.sym__0__2978611118299427799 < sym__0__2978611118299427799 && otherRec.sym__0___45_924665267353701317 < sym__0___45_924665267353701317))))))))))))))))))))))))))))))))))))))))))))))));
  }
  bool operator ==(const Record34& otherRec) const{
    return (otherRec.sym__0___45_3862182167894734233 == sym__0___45_3862182167894734233 && (otherRec.sym__0___45_5049546618211835241 == sym__0___45_5049546618211835241 && (otherRec.sym__0___45_2996783662751493035 == sym__0___45_2996783662751493035 && (otherRec.sym__0___45_8620453348494972806 == sym__0___45_8620453348494972806 && (otherRec.sym__0__1925891775692302472 == sym__0__1925891775692302472 && (otherRec.sym__0___45_4666290150124134966 == sym__0___45_4666290150124134966 && (otherRec.sym__0__2396615500282490031 == sym__0__2396615500282490031 && (otherRec.sym__0___45_3413279326547145180 == sym__0___45_3413279326547145180 && (otherRec.sym__0__7931789082922299215 == sym__0__7931789082922299215 && (otherRec.sym__0__4128851951395191943 == sym__0__4128851951395191943 && (otherRec.sym__0__1414614919079575917 == sym__0__1414614919079575917 && (otherRec.sym__0___45_4769868403273652582 == sym__0___45_4769868403273652582 && (otherRec.sym__0___45_423989522690221765 == sym__0___45_423989522690221765 && (otherRec.sym__0__670880538897647363 == sym__0__670880538897647363 && (otherRec.sym__0___45_6595340929265439258 == sym__0___45_6595340929265439258 && (otherRec.sym__0___45_4807245048316597474 == sym__0___45_4807245048316597474 && (otherRec.sym__0___45_2845474408872645744 == sym__0___45_2845474408872645744 && (otherRec.sym__0___45_3923001362387400637 == sym__0___45_3923001362387400637 && (otherRec.sym__0___45_4068285250723832019 == sym__0___45_4068285250723832019 && (otherRec.sym__0__5927661182141962805 == sym__0__5927661182141962805 && (otherRec.sym__0__2192637400238122239 == sym__0__2192637400238122239 && (otherRec.sym__0___45_4592297025100810856 == sym__0___45_4592297025100810856 && (otherRec.sym__0__5820861992669913537 == sym__0__5820861992669913537 && (otherRec.sym__0__2988599564076309784 == sym__0__2988599564076309784 && (otherRec.sym__0___45_8469125589459601770 == sym__0___45_8469125589459601770 && (otherRec.sym__0___45_2479075576716686155 == sym__0___45_2479075576716686155 && (otherRec.sym__0__5905974904445628197 == sym__0__5905974904445628197 && (otherRec.sym__0__8482341455033398339 == sym__0__8482341455033398339 && (otherRec.sym__0___45_6780802777767537759 == sym__0___45_6780802777767537759 && (otherRec.sym__0___45_4873871374223645685 == sym__0___45_4873871374223645685 && (otherRec.sym__0___45_776774550833357369 == sym__0___45_776774550833357369 && (otherRec.sym__0___45_135773926070893412 == sym__0___45_135773926070893412 && (otherRec.sym__0___45_4302867605132693150 == sym__0___45_4302867605132693150 && (otherRec.sym__0__1118838070725597482 == sym__0__1118838070725597482 && (otherRec.sym__0___45_1590115651450644480 == sym__0___45_1590115651450644480 && (otherRec.sym__0__3192438338873126263 == sym__0__3192438338873126263 && (otherRec.sym__0___45_2134007651753731143 == sym__0___45_2134007651753731143 && (otherRec.sym__0___45_6288836903209208989 == sym__0___45_6288836903209208989 && (otherRec.sym__0___45_7991989887002259371 == sym__0___45_7991989887002259371 && (otherRec.sym__0___45_355683640189594620 == sym__0___45_355683640189594620 && (otherRec.sym__0__4955587123024849399 == sym__0__4955587123024849399 && (otherRec.sym__0__7822702969493777647 == sym__0__7822702969493777647 && (otherRec.sym__0___45_7097577767643705257 == sym__0___45_7097577767643705257 && (otherRec.sym__0___45_4128354664746428815 == sym__0___45_4128354664746428815 && (otherRec.sym__0___45_181005402936645453 == sym__0___45_181005402936645453 && (otherRec.sym__0___45_4114345702155733811 == sym__0___45_4114345702155733811 && (otherRec.sym__0__2126085240536350732 == sym__0__2126085240536350732 && (otherRec.sym__0__2978611118299427799 == sym__0__2978611118299427799 && otherRec.sym__0___45_924665267353701317 == sym__0___45_924665267353701317))))))))))))))))))))))))))))))))))))))))))))))));
  }
  bool operator !=(const Record34& otherRec) const{
    return (otherRec.sym__0___45_3862182167894734233 != sym__0___45_3862182167894734233 || (otherRec.sym__0___45_5049546618211835241 != sym__0___45_5049546618211835241 || (otherRec.sym__0___45_2996783662751493035 != sym__0___45_2996783662751493035 || (otherRec.sym__0___45_8620453348494972806 != sym__0___45_8620453348494972806 || (otherRec.sym__0__1925891775692302472 != sym__0__1925891775692302472 || (otherRec.sym__0___45_4666290150124134966 != sym__0___45_4666290150124134966 || (otherRec.sym__0__2396615500282490031 != sym__0__2396615500282490031 || (otherRec.sym__0___45_3413279326547145180 != sym__0___45_3413279326547145180 || (otherRec.sym__0__7931789082922299215 != sym__0__7931789082922299215 || (otherRec.sym__0__4128851951395191943 != sym__0__4128851951395191943 || (otherRec.sym__0__1414614919079575917 != sym__0__1414614919079575917 || (otherRec.sym__0___45_4769868403273652582 != sym__0___45_4769868403273652582 || (otherRec.sym__0___45_423989522690221765 != sym__0___45_423989522690221765 || (otherRec.sym__0__670880538897647363 != sym__0__670880538897647363 || (otherRec.sym__0___45_6595340929265439258 != sym__0___45_6595340929265439258 || (otherRec.sym__0___45_4807245048316597474 != sym__0___45_4807245048316597474 || (otherRec.sym__0___45_2845474408872645744 != sym__0___45_2845474408872645744 || (otherRec.sym__0___45_3923001362387400637 != sym__0___45_3923001362387400637 || (otherRec.sym__0___45_4068285250723832019 != sym__0___45_4068285250723832019 || (otherRec.sym__0__5927661182141962805 != sym__0__5927661182141962805 || (otherRec.sym__0__2192637400238122239 != sym__0__2192637400238122239 || (otherRec.sym__0___45_4592297025100810856 != sym__0___45_4592297025100810856 || (otherRec.sym__0__5820861992669913537 != sym__0__5820861992669913537 || (otherRec.sym__0__2988599564076309784 != sym__0__2988599564076309784 || (otherRec.sym__0___45_8469125589459601770 != sym__0___45_8469125589459601770 || (otherRec.sym__0___45_2479075576716686155 != sym__0___45_2479075576716686155 || (otherRec.sym__0__5905974904445628197 != sym__0__5905974904445628197 || (otherRec.sym__0__8482341455033398339 != sym__0__8482341455033398339 || (otherRec.sym__0___45_6780802777767537759 != sym__0___45_6780802777767537759 || (otherRec.sym__0___45_4873871374223645685 != sym__0___45_4873871374223645685 || (otherRec.sym__0___45_776774550833357369 != sym__0___45_776774550833357369 || (otherRec.sym__0___45_135773926070893412 != sym__0___45_135773926070893412 || (otherRec.sym__0___45_4302867605132693150 != sym__0___45_4302867605132693150 || (otherRec.sym__0__1118838070725597482 != sym__0__1118838070725597482 || (otherRec.sym__0___45_1590115651450644480 != sym__0___45_1590115651450644480 || (otherRec.sym__0__3192438338873126263 != sym__0__3192438338873126263 || (otherRec.sym__0___45_2134007651753731143 != sym__0___45_2134007651753731143 || (otherRec.sym__0___45_6288836903209208989 != sym__0___45_6288836903209208989 || (otherRec.sym__0___45_7991989887002259371 != sym__0___45_7991989887002259371 || (otherRec.sym__0___45_355683640189594620 != sym__0___45_355683640189594620 || (otherRec.sym__0__4955587123024849399 != sym__0__4955587123024849399 || (otherRec.sym__0__7822702969493777647 != sym__0__7822702969493777647 || (otherRec.sym__0___45_7097577767643705257 != sym__0___45_7097577767643705257 || (otherRec.sym__0___45_4128354664746428815 != sym__0___45_4128354664746428815 || (otherRec.sym__0___45_181005402936645453 != sym__0___45_181005402936645453 || (otherRec.sym__0___45_4114345702155733811 != sym__0___45_4114345702155733811 || (otherRec.sym__0__2126085240536350732 != sym__0__2126085240536350732 || (otherRec.sym__0__2978611118299427799 != sym__0__2978611118299427799 || otherRec.sym__0___45_924665267353701317 != sym__0___45_924665267353701317))))))))))))))))))))))))))))))))))))))))))))))));
  }
  unsigned sym__0___45_3862182167894734233;
  fluidb_string<18> sym__0___45_5049546618211835241;
  fluidb_string<9> sym__0___45_2996783662751493035;
  fluidb_string<9> sym__0___45_8620453348494972806;
  unsigned sym__0__1925891775692302472;
  unsigned sym__0___45_4666290150124134966;
  fluidb_string<7> sym__0__2396615500282490031;
  unsigned sym__0___45_3413279326547145180;
  unsigned sym__0__7931789082922299215;
  unsigned sym__0__4128851951395191943;
  unsigned sym__0__1414614919079575917;
  unsigned sym__0___45_4769868403273652582;
  fluidb_string<15> sym__0___45_423989522690221765;
  fluidb_string<2> sym__0__670880538897647363;
  fluidb_string<2> sym__0___45_6595340929265439258;
  fluidb_string<2> sym__0___45_4807245048316597474;
  fluidb_string<2> sym__0___45_2845474408872645744;
  unsigned sym__0___45_3923001362387400637;
  int sym__0___45_4068285250723832019;
  unsigned sym__0__5927661182141962805;
  unsigned sym__0__2192637400238122239;
  unsigned sym__0___45_4592297025100810856;
  unsigned sym__0__5820861992669913537;
  fluidb_string<21> sym__0__2988599564076309784;
  unsigned sym__0___45_8469125589459601770;
  fluidb_string<10> sym__0___45_2479075576716686155;
  unsigned sym__0__5905974904445628197;
  double sym__0__8482341455033398339;
  unsigned sym__0___45_6780802777767537759;
  double sym__0___45_4873871374223645685;
  unsigned sym__0___45_776774550833357369;
  unsigned sym__0___45_135773926070893412;
  double sym__0___45_4302867605132693150;
  fluidb_string<13> sym__0__1118838070725597482;
  unsigned sym__0___45_1590115651450644480;
  fluidb_string<25> sym__0__3192438338873126263;
  fluidb_string<40> sym__0___45_2134007651753731143;
  fluidb_string<16> sym__0___45_6288836903209208989;
  fluidb_string<16> sym__0___45_7991989887002259371;
  fluidb_string<13> sym__0___45_355683640189594620;
  fluidb_string<15> sym__0__4955587123024849399;
  unsigned sym__0__7822702969493777647;
  fluidb_string<18> sym__0___45_7097577767643705257;
  fluidb_string<40> sym__0___45_4128354664746428815;
  fluidb_string<11> sym__0___45_181005402936645453;
  fluidb_string<15> sym__0___45_4114345702155733811;
  fluidb_string<13> sym__0__2126085240536350732;
  fluidb_string<15> sym__0__2978611118299427799;
  fluidb_string<21> sym__0___45_924665267353701317;
 private:
};


class Record44 {
 public:
  Record44(unsigned __sym__0___45_5022535542243704710, fluidb_string<18> __sym__0___45_1787376491092531126, fluidb_string<9> __sym__0__1794599500078494180, fluidb_string<9> __sym__0__3504526357581681255, unsigned __sym__0___45_3538247220115815847, unsigned __sym__0___45_8490563090509246185, fluidb_string<7> __sym__0__7912812290691120690, unsigned __sym__0___45_8737637263679152107, unsigned __sym__0__8047491221284574610, unsigned __sym__0___45_6269766180242592166, unsigned __sym__0___45_7640802177453871412, unsigned __sym__0___45_5373284368264652217, fluidb_string<15> __sym__0__8444953784357023550, fluidb_string<2> __sym__0__4417297774308162358, fluidb_string<2> __sym__0___45_4637626103078907309, fluidb_string<2> __sym__0___45_8485149193020004517, fluidb_string<2> __sym__0___45_2377257467813948591, unsigned __sym__0___45_36447550095630858, int __sym__0___45_4571237191815489268, unsigned __sym__0__5859261980497791492, unsigned __sym__0__6356302675304611298, unsigned __sym__0___45_7802949452745359543, unsigned __sym__0__7521688076231004384, fluidb_string<21> __sym__0___45_2513776183032217143, unsigned __sym__0___45_2396884490376822877, fluidb_string<10> __sym__0___45_5999640426069083772, unsigned __sym__0__2832464336988697364, double __sym__0__7758886340050530806, unsigned __sym__0___45_2986568091977901312, double __sym__0___45_5093030022830106066, unsigned __sym__0___45_6949801323594541286, unsigned __sym__0__6879353985735461853, double __sym__0___45_4693548478308764801, fluidb_string<13> __sym__0___45_5899864176262810185, unsigned __sym__0___45_4745906627054176095, fluidb_string<25> __sym__0___45_8104684152988778134, fluidb_string<40> __sym__0__5679940805842000168, fluidb_string<16> __sym__0__1998069300503629014, fluidb_string<16> __sym__0__5053648343318218212, fluidb_string<13> __sym__0___45_6937215324756479947, fluidb_string<15> __sym__0__7346985942697523434, unsigned __sym__0___45_3899760551975893518, fluidb_string<18> __sym__0__4769700736509849738, fluidb_string<40> __sym__0__5718739266127451248, fluidb_string<11> __sym__0__623483990156027782, fluidb_string<15> __sym__0___45_587879708325432980, fluidb_string<13> __sym__0___45_1723468156536033747, fluidb_string<15> __sym__0__4933073327123913482, fluidb_string<21> __sym__0___45_893026833634796994) : sym__0___45_5022535542243704710(__sym__0___45_5022535542243704710), sym__0___45_1787376491092531126(__sym__0___45_1787376491092531126), sym__0__1794599500078494180(__sym__0__1794599500078494180), sym__0__3504526357581681255(__sym__0__3504526357581681255), sym__0___45_3538247220115815847(__sym__0___45_3538247220115815847), sym__0___45_8490563090509246185(__sym__0___45_8490563090509246185), sym__0__7912812290691120690(__sym__0__7912812290691120690), sym__0___45_8737637263679152107(__sym__0___45_8737637263679152107), sym__0__8047491221284574610(__sym__0__8047491221284574610), sym__0___45_6269766180242592166(__sym__0___45_6269766180242592166), sym__0___45_7640802177453871412(__sym__0___45_7640802177453871412), sym__0___45_5373284368264652217(__sym__0___45_5373284368264652217), sym__0__8444953784357023550(__sym__0__8444953784357023550), sym__0__4417297774308162358(__sym__0__4417297774308162358), sym__0___45_4637626103078907309(__sym__0___45_4637626103078907309), sym__0___45_8485149193020004517(__sym__0___45_8485149193020004517), sym__0___45_2377257467813948591(__sym__0___45_2377257467813948591), sym__0___45_36447550095630858(__sym__0___45_36447550095630858), sym__0___45_4571237191815489268(__sym__0___45_4571237191815489268), sym__0__5859261980497791492(__sym__0__5859261980497791492), sym__0__6356302675304611298(__sym__0__6356302675304611298), sym__0___45_7802949452745359543(__sym__0___45_7802949452745359543), sym__0__7521688076231004384(__sym__0__7521688076231004384), sym__0___45_2513776183032217143(__sym__0___45_2513776183032217143), sym__0___45_2396884490376822877(__sym__0___45_2396884490376822877), sym__0___45_5999640426069083772(__sym__0___45_5999640426069083772), sym__0__2832464336988697364(__sym__0__2832464336988697364), sym__0__7758886340050530806(__sym__0__7758886340050530806), sym__0___45_2986568091977901312(__sym__0___45_2986568091977901312), sym__0___45_5093030022830106066(__sym__0___45_5093030022830106066), sym__0___45_6949801323594541286(__sym__0___45_6949801323594541286), sym__0__6879353985735461853(__sym__0__6879353985735461853), sym__0___45_4693548478308764801(__sym__0___45_4693548478308764801), sym__0___45_5899864176262810185(__sym__0___45_5899864176262810185), sym__0___45_4745906627054176095(__sym__0___45_4745906627054176095), sym__0___45_8104684152988778134(__sym__0___45_8104684152988778134), sym__0__5679940805842000168(__sym__0__5679940805842000168), sym__0__1998069300503629014(__sym__0__1998069300503629014), sym__0__5053648343318218212(__sym__0__5053648343318218212), sym__0___45_6937215324756479947(__sym__0___45_6937215324756479947), sym__0__7346985942697523434(__sym__0__7346985942697523434), sym__0___45_3899760551975893518(__sym__0___45_3899760551975893518), sym__0__4769700736509849738(__sym__0__4769700736509849738), sym__0__5718739266127451248(__sym__0__5718739266127451248), sym__0__623483990156027782(__sym__0__623483990156027782), sym__0___45_587879708325432980(__sym__0___45_587879708325432980), sym__0___45_1723468156536033747(__sym__0___45_1723468156536033747), sym__0__4933073327123913482(__sym__0__4933073327123913482), sym__0___45_893026833634796994(__sym__0___45_893026833634796994)
  {
  }
  Record44() 
  {
  }
  std::string show() const{
    std::stringstream o;
    o << sym__0___45_5022535542243704710 << " | " << arrToString(sym__0___45_1787376491092531126) << " | " << arrToString(sym__0__1794599500078494180) << " | " << arrToString(sym__0__3504526357581681255) << " | " << sym__0___45_3538247220115815847 << " | " << sym__0___45_8490563090509246185 << " | " << arrToString(sym__0__7912812290691120690) << " | " << sym__0___45_8737637263679152107 << " | " << sym__0__8047491221284574610 << " | " << sym__0___45_6269766180242592166 << " | " << sym__0___45_7640802177453871412 << " | " << sym__0___45_5373284368264652217 << " | " << arrToString(sym__0__8444953784357023550) << " | " << arrToString(sym__0__4417297774308162358) << " | " << arrToString(sym__0___45_4637626103078907309) << " | " << arrToString(sym__0___45_8485149193020004517) << " | " << arrToString(sym__0___45_2377257467813948591) << " | " << sym__0___45_36447550095630858 << " | " << sym__0___45_4571237191815489268 << " | " << sym__0__5859261980497791492 << " | " << sym__0__6356302675304611298 << " | " << sym__0___45_7802949452745359543 << " | " << sym__0__7521688076231004384 << " | " << arrToString(sym__0___45_2513776183032217143) << " | " << sym__0___45_2396884490376822877 << " | " << arrToString(sym__0___45_5999640426069083772) << " | " << sym__0__2832464336988697364 << " | " << sym__0__7758886340050530806 << " | " << sym__0___45_2986568091977901312 << " | " << sym__0___45_5093030022830106066 << " | " << sym__0___45_6949801323594541286 << " | " << sym__0__6879353985735461853 << " | " << sym__0___45_4693548478308764801 << " | " << arrToString(sym__0___45_5899864176262810185) << " | " << sym__0___45_4745906627054176095 << " | " << arrToString(sym__0___45_8104684152988778134) << " | " << arrToString(sym__0__5679940805842000168) << " | " << arrToString(sym__0__1998069300503629014) << " | " << arrToString(sym__0__5053648343318218212) << " | " << arrToString(sym__0___45_6937215324756479947) << " | " << arrToString(sym__0__7346985942697523434) << " | " << sym__0___45_3899760551975893518 << " | " << arrToString(sym__0__4769700736509849738) << " | " << arrToString(sym__0__5718739266127451248) << " | " << arrToString(sym__0__623483990156027782) << " | " << arrToString(sym__0___45_587879708325432980) << " | " << arrToString(sym__0___45_1723468156536033747) << " | " << arrToString(sym__0__4933073327123913482) << " | " << arrToString(sym__0___45_893026833634796994);
    return o.str();
  }
  bool operator <(const Record44& otherRec) const{
    return (otherRec.sym__0___45_5022535542243704710 < sym__0___45_5022535542243704710 && (otherRec.sym__0___45_1787376491092531126 < sym__0___45_1787376491092531126 && (otherRec.sym__0__1794599500078494180 < sym__0__1794599500078494180 && (otherRec.sym__0__3504526357581681255 < sym__0__3504526357581681255 && (otherRec.sym__0___45_3538247220115815847 < sym__0___45_3538247220115815847 && (otherRec.sym__0___45_8490563090509246185 < sym__0___45_8490563090509246185 && (otherRec.sym__0__7912812290691120690 < sym__0__7912812290691120690 && (otherRec.sym__0___45_8737637263679152107 < sym__0___45_8737637263679152107 && (otherRec.sym__0__8047491221284574610 < sym__0__8047491221284574610 && (otherRec.sym__0___45_6269766180242592166 < sym__0___45_6269766180242592166 && (otherRec.sym__0___45_7640802177453871412 < sym__0___45_7640802177453871412 && (otherRec.sym__0___45_5373284368264652217 < sym__0___45_5373284368264652217 && (otherRec.sym__0__8444953784357023550 < sym__0__8444953784357023550 && (otherRec.sym__0__4417297774308162358 < sym__0__4417297774308162358 && (otherRec.sym__0___45_4637626103078907309 < sym__0___45_4637626103078907309 && (otherRec.sym__0___45_8485149193020004517 < sym__0___45_8485149193020004517 && (otherRec.sym__0___45_2377257467813948591 < sym__0___45_2377257467813948591 && (otherRec.sym__0___45_36447550095630858 < sym__0___45_36447550095630858 && (otherRec.sym__0___45_4571237191815489268 < sym__0___45_4571237191815489268 && (otherRec.sym__0__5859261980497791492 < sym__0__5859261980497791492 && (otherRec.sym__0__6356302675304611298 < sym__0__6356302675304611298 && (otherRec.sym__0___45_7802949452745359543 < sym__0___45_7802949452745359543 && (otherRec.sym__0__7521688076231004384 < sym__0__7521688076231004384 && (otherRec.sym__0___45_2513776183032217143 < sym__0___45_2513776183032217143 && (otherRec.sym__0___45_2396884490376822877 < sym__0___45_2396884490376822877 && (otherRec.sym__0___45_5999640426069083772 < sym__0___45_5999640426069083772 && (otherRec.sym__0__2832464336988697364 < sym__0__2832464336988697364 && (otherRec.sym__0__7758886340050530806 < sym__0__7758886340050530806 && (otherRec.sym__0___45_2986568091977901312 < sym__0___45_2986568091977901312 && (otherRec.sym__0___45_5093030022830106066 < sym__0___45_5093030022830106066 && (otherRec.sym__0___45_6949801323594541286 < sym__0___45_6949801323594541286 && (otherRec.sym__0__6879353985735461853 < sym__0__6879353985735461853 && (otherRec.sym__0___45_4693548478308764801 < sym__0___45_4693548478308764801 && (otherRec.sym__0___45_5899864176262810185 < sym__0___45_5899864176262810185 && (otherRec.sym__0___45_4745906627054176095 < sym__0___45_4745906627054176095 && (otherRec.sym__0___45_8104684152988778134 < sym__0___45_8104684152988778134 && (otherRec.sym__0__5679940805842000168 < sym__0__5679940805842000168 && (otherRec.sym__0__1998069300503629014 < sym__0__1998069300503629014 && (otherRec.sym__0__5053648343318218212 < sym__0__5053648343318218212 && (otherRec.sym__0___45_6937215324756479947 < sym__0___45_6937215324756479947 && (otherRec.sym__0__7346985942697523434 < sym__0__7346985942697523434 && (otherRec.sym__0___45_3899760551975893518 < sym__0___45_3899760551975893518 && (otherRec.sym__0__4769700736509849738 < sym__0__4769700736509849738 && (otherRec.sym__0__5718739266127451248 < sym__0__5718739266127451248 && (otherRec.sym__0__623483990156027782 < sym__0__623483990156027782 && (otherRec.sym__0___45_587879708325432980 < sym__0___45_587879708325432980 && (otherRec.sym__0___45_1723468156536033747 < sym__0___45_1723468156536033747 && (otherRec.sym__0__4933073327123913482 < sym__0__4933073327123913482 && otherRec.sym__0___45_893026833634796994 < sym__0___45_893026833634796994))))))))))))))))))))))))))))))))))))))))))))))));
  }
  bool operator ==(const Record44& otherRec) const{
    return (otherRec.sym__0___45_5022535542243704710 == sym__0___45_5022535542243704710 && (otherRec.sym__0___45_1787376491092531126 == sym__0___45_1787376491092531126 && (otherRec.sym__0__1794599500078494180 == sym__0__1794599500078494180 && (otherRec.sym__0__3504526357581681255 == sym__0__3504526357581681255 && (otherRec.sym__0___45_3538247220115815847 == sym__0___45_3538247220115815847 && (otherRec.sym__0___45_8490563090509246185 == sym__0___45_8490563090509246185 && (otherRec.sym__0__7912812290691120690 == sym__0__7912812290691120690 && (otherRec.sym__0___45_8737637263679152107 == sym__0___45_8737637263679152107 && (otherRec.sym__0__8047491221284574610 == sym__0__8047491221284574610 && (otherRec.sym__0___45_6269766180242592166 == sym__0___45_6269766180242592166 && (otherRec.sym__0___45_7640802177453871412 == sym__0___45_7640802177453871412 && (otherRec.sym__0___45_5373284368264652217 == sym__0___45_5373284368264652217 && (otherRec.sym__0__8444953784357023550 == sym__0__8444953784357023550 && (otherRec.sym__0__4417297774308162358 == sym__0__4417297774308162358 && (otherRec.sym__0___45_4637626103078907309 == sym__0___45_4637626103078907309 && (otherRec.sym__0___45_8485149193020004517 == sym__0___45_8485149193020004517 && (otherRec.sym__0___45_2377257467813948591 == sym__0___45_2377257467813948591 && (otherRec.sym__0___45_36447550095630858 == sym__0___45_36447550095630858 && (otherRec.sym__0___45_4571237191815489268 == sym__0___45_4571237191815489268 && (otherRec.sym__0__5859261980497791492 == sym__0__5859261980497791492 && (otherRec.sym__0__6356302675304611298 == sym__0__6356302675304611298 && (otherRec.sym__0___45_7802949452745359543 == sym__0___45_7802949452745359543 && (otherRec.sym__0__7521688076231004384 == sym__0__7521688076231004384 && (otherRec.sym__0___45_2513776183032217143 == sym__0___45_2513776183032217143 && (otherRec.sym__0___45_2396884490376822877 == sym__0___45_2396884490376822877 && (otherRec.sym__0___45_5999640426069083772 == sym__0___45_5999640426069083772 && (otherRec.sym__0__2832464336988697364 == sym__0__2832464336988697364 && (otherRec.sym__0__7758886340050530806 == sym__0__7758886340050530806 && (otherRec.sym__0___45_2986568091977901312 == sym__0___45_2986568091977901312 && (otherRec.sym__0___45_5093030022830106066 == sym__0___45_5093030022830106066 && (otherRec.sym__0___45_6949801323594541286 == sym__0___45_6949801323594541286 && (otherRec.sym__0__6879353985735461853 == sym__0__6879353985735461853 && (otherRec.sym__0___45_4693548478308764801 == sym__0___45_4693548478308764801 && (otherRec.sym__0___45_5899864176262810185 == sym__0___45_5899864176262810185 && (otherRec.sym__0___45_4745906627054176095 == sym__0___45_4745906627054176095 && (otherRec.sym__0___45_8104684152988778134 == sym__0___45_8104684152988778134 && (otherRec.sym__0__5679940805842000168 == sym__0__5679940805842000168 && (otherRec.sym__0__1998069300503629014 == sym__0__1998069300503629014 && (otherRec.sym__0__5053648343318218212 == sym__0__5053648343318218212 && (otherRec.sym__0___45_6937215324756479947 == sym__0___45_6937215324756479947 && (otherRec.sym__0__7346985942697523434 == sym__0__7346985942697523434 && (otherRec.sym__0___45_3899760551975893518 == sym__0___45_3899760551975893518 && (otherRec.sym__0__4769700736509849738 == sym__0__4769700736509849738 && (otherRec.sym__0__5718739266127451248 == sym__0__5718739266127451248 && (otherRec.sym__0__623483990156027782 == sym__0__623483990156027782 && (otherRec.sym__0___45_587879708325432980 == sym__0___45_587879708325432980 && (otherRec.sym__0___45_1723468156536033747 == sym__0___45_1723468156536033747 && (otherRec.sym__0__4933073327123913482 == sym__0__4933073327123913482 && otherRec.sym__0___45_893026833634796994 == sym__0___45_893026833634796994))))))))))))))))))))))))))))))))))))))))))))))));
  }
  bool operator !=(const Record44& otherRec) const{
    return (otherRec.sym__0___45_5022535542243704710 != sym__0___45_5022535542243704710 || (otherRec.sym__0___45_1787376491092531126 != sym__0___45_1787376491092531126 || (otherRec.sym__0__1794599500078494180 != sym__0__1794599500078494180 || (otherRec.sym__0__3504526357581681255 != sym__0__3504526357581681255 || (otherRec.sym__0___45_3538247220115815847 != sym__0___45_3538247220115815847 || (otherRec.sym__0___45_8490563090509246185 != sym__0___45_8490563090509246185 || (otherRec.sym__0__7912812290691120690 != sym__0__7912812290691120690 || (otherRec.sym__0___45_8737637263679152107 != sym__0___45_8737637263679152107 || (otherRec.sym__0__8047491221284574610 != sym__0__8047491221284574610 || (otherRec.sym__0___45_6269766180242592166 != sym__0___45_6269766180242592166 || (otherRec.sym__0___45_7640802177453871412 != sym__0___45_7640802177453871412 || (otherRec.sym__0___45_5373284368264652217 != sym__0___45_5373284368264652217 || (otherRec.sym__0__8444953784357023550 != sym__0__8444953784357023550 || (otherRec.sym__0__4417297774308162358 != sym__0__4417297774308162358 || (otherRec.sym__0___45_4637626103078907309 != sym__0___45_4637626103078907309 || (otherRec.sym__0___45_8485149193020004517 != sym__0___45_8485149193020004517 || (otherRec.sym__0___45_2377257467813948591 != sym__0___45_2377257467813948591 || (otherRec.sym__0___45_36447550095630858 != sym__0___45_36447550095630858 || (otherRec.sym__0___45_4571237191815489268 != sym__0___45_4571237191815489268 || (otherRec.sym__0__5859261980497791492 != sym__0__5859261980497791492 || (otherRec.sym__0__6356302675304611298 != sym__0__6356302675304611298 || (otherRec.sym__0___45_7802949452745359543 != sym__0___45_7802949452745359543 || (otherRec.sym__0__7521688076231004384 != sym__0__7521688076231004384 || (otherRec.sym__0___45_2513776183032217143 != sym__0___45_2513776183032217143 || (otherRec.sym__0___45_2396884490376822877 != sym__0___45_2396884490376822877 || (otherRec.sym__0___45_5999640426069083772 != sym__0___45_5999640426069083772 || (otherRec.sym__0__2832464336988697364 != sym__0__2832464336988697364 || (otherRec.sym__0__7758886340050530806 != sym__0__7758886340050530806 || (otherRec.sym__0___45_2986568091977901312 != sym__0___45_2986568091977901312 || (otherRec.sym__0___45_5093030022830106066 != sym__0___45_5093030022830106066 || (otherRec.sym__0___45_6949801323594541286 != sym__0___45_6949801323594541286 || (otherRec.sym__0__6879353985735461853 != sym__0__6879353985735461853 || (otherRec.sym__0___45_4693548478308764801 != sym__0___45_4693548478308764801 || (otherRec.sym__0___45_5899864176262810185 != sym__0___45_5899864176262810185 || (otherRec.sym__0___45_4745906627054176095 != sym__0___45_4745906627054176095 || (otherRec.sym__0___45_8104684152988778134 != sym__0___45_8104684152988778134 || (otherRec.sym__0__5679940805842000168 != sym__0__5679940805842000168 || (otherRec.sym__0__1998069300503629014 != sym__0__1998069300503629014 || (otherRec.sym__0__5053648343318218212 != sym__0__5053648343318218212 || (otherRec.sym__0___45_6937215324756479947 != sym__0___45_6937215324756479947 || (otherRec.sym__0__7346985942697523434 != sym__0__7346985942697523434 || (otherRec.sym__0___45_3899760551975893518 != sym__0___45_3899760551975893518 || (otherRec.sym__0__4769700736509849738 != sym__0__4769700736509849738 || (otherRec.sym__0__5718739266127451248 != sym__0__5718739266127451248 || (otherRec.sym__0__623483990156027782 != sym__0__623483990156027782 || (otherRec.sym__0___45_587879708325432980 != sym__0___45_587879708325432980 || (otherRec.sym__0___45_1723468156536033747 != sym__0___45_1723468156536033747 || (otherRec.sym__0__4933073327123913482 != sym__0__4933073327123913482 || otherRec.sym__0___45_893026833634796994 != sym__0___45_893026833634796994))))))))))))))))))))))))))))))))))))))))))))))));
  }
  unsigned sym__0___45_5022535542243704710;
  fluidb_string<18> sym__0___45_1787376491092531126;
  fluidb_string<9> sym__0__1794599500078494180;
  fluidb_string<9> sym__0__3504526357581681255;
  unsigned sym__0___45_3538247220115815847;
  unsigned sym__0___45_8490563090509246185;
  fluidb_string<7> sym__0__7912812290691120690;
  unsigned sym__0___45_8737637263679152107;
  unsigned sym__0__8047491221284574610;
  unsigned sym__0___45_6269766180242592166;
  unsigned sym__0___45_7640802177453871412;
  unsigned sym__0___45_5373284368264652217;
  fluidb_string<15> sym__0__8444953784357023550;
  fluidb_string<2> sym__0__4417297774308162358;
  fluidb_string<2> sym__0___45_4637626103078907309;
  fluidb_string<2> sym__0___45_8485149193020004517;
  fluidb_string<2> sym__0___45_2377257467813948591;
  unsigned sym__0___45_36447550095630858;
  int sym__0___45_4571237191815489268;
  unsigned sym__0__5859261980497791492;
  unsigned sym__0__6356302675304611298;
  unsigned sym__0___45_7802949452745359543;
  unsigned sym__0__7521688076231004384;
  fluidb_string<21> sym__0___45_2513776183032217143;
  unsigned sym__0___45_2396884490376822877;
  fluidb_string<10> sym__0___45_5999640426069083772;
  unsigned sym__0__2832464336988697364;
  double sym__0__7758886340050530806;
  unsigned sym__0___45_2986568091977901312;
  double sym__0___45_5093030022830106066;
  unsigned sym__0___45_6949801323594541286;
  unsigned sym__0__6879353985735461853;
  double sym__0___45_4693548478308764801;
  fluidb_string<13> sym__0___45_5899864176262810185;
  unsigned sym__0___45_4745906627054176095;
  fluidb_string<25> sym__0___45_8104684152988778134;
  fluidb_string<40> sym__0__5679940805842000168;
  fluidb_string<16> sym__0__1998069300503629014;
  fluidb_string<16> sym__0__5053648343318218212;
  fluidb_string<13> sym__0___45_6937215324756479947;
  fluidb_string<15> sym__0__7346985942697523434;
  unsigned sym__0___45_3899760551975893518;
  fluidb_string<18> sym__0__4769700736509849738;
  fluidb_string<40> sym__0__5718739266127451248;
  fluidb_string<11> sym__0__623483990156027782;
  fluidb_string<15> sym__0___45_587879708325432980;
  fluidb_string<13> sym__0___45_1723468156536033747;
  fluidb_string<15> sym__0__4933073327123913482;
  fluidb_string<21> sym__0___45_893026833634796994;
 private:
};


class Record32 {
 public:
  Record32(unsigned __sym__0__4519803852684427543, fluidb_string<18> __sym__0___45_4343360485772802425, fluidb_string<9> __sym__0___45_4964707487098413267, fluidb_string<9> __sym__0___45_4968176427635671902, unsigned __sym__0___45_6976515134520023056, unsigned __sym__0___45_6407986363906595150, fluidb_string<7> __sym__0__7276429137656386527, unsigned __sym__0__4221568001408061244, unsigned __sym__0__5318835693872869311, unsigned __sym__0___45_5662655200901224073, unsigned __sym__0___45_3865525655503432699, unsigned __sym__0__6565687540723274882, fluidb_string<15> __sym__0__8756313061100779083, fluidb_string<2> __sym__0__406217822861760083, fluidb_string<2> __sym__0__6583192417747851262, fluidb_string<2> __sym__0__6482281155504029302, fluidb_string<2> __sym__0__7679621352908603000, unsigned __sym__0___45_5057802021856473709, int __sym__0___45_6839534157954023739, unsigned __sym__0__3554709552784421197, unsigned __sym__0___45_4889171900302414417, unsigned __sym__0___45_4161758501735212672, unsigned __sym__0___45_7938631388649493975, fluidb_string<21> __sym__0___45_699785309432656128, unsigned __sym__0___45_2045490810393326482, fluidb_string<10> __sym__0__3215571782344721357, unsigned __sym__0__7405671162454692029, double __sym__0__2221693701692461459, unsigned __sym__0___45_7916622968205270455, double __sym__0___45_187379753214360613, unsigned __sym__0__3625366936415753399, unsigned __sym__0__8944804994507528308, double __sym__0___45_5827336879747782262, fluidb_string<13> __sym__0__1350428008193598418, unsigned __sym__0__3585920367783378280, fluidb_string<25> __sym__0___45_1379309617935839321, fluidb_string<40> __sym__0___45_4244869060837491615, fluidb_string<16> __sym__0___45_6246622897322295949, fluidb_string<16> __sym__0___45_7650291061553794259, fluidb_string<13> __sym__0___45_1236860414731734564, fluidb_string<15> __sym__0___45_3875846966030338521) : sym__0__4519803852684427543(__sym__0__4519803852684427543), sym__0___45_4343360485772802425(__sym__0___45_4343360485772802425), sym__0___45_4964707487098413267(__sym__0___45_4964707487098413267), sym__0___45_4968176427635671902(__sym__0___45_4968176427635671902), sym__0___45_6976515134520023056(__sym__0___45_6976515134520023056), sym__0___45_6407986363906595150(__sym__0___45_6407986363906595150), sym__0__7276429137656386527(__sym__0__7276429137656386527), sym__0__4221568001408061244(__sym__0__4221568001408061244), sym__0__5318835693872869311(__sym__0__5318835693872869311), sym__0___45_5662655200901224073(__sym__0___45_5662655200901224073), sym__0___45_3865525655503432699(__sym__0___45_3865525655503432699), sym__0__6565687540723274882(__sym__0__6565687540723274882), sym__0__8756313061100779083(__sym__0__8756313061100779083), sym__0__406217822861760083(__sym__0__406217822861760083), sym__0__6583192417747851262(__sym__0__6583192417747851262), sym__0__6482281155504029302(__sym__0__6482281155504029302), sym__0__7679621352908603000(__sym__0__7679621352908603000), sym__0___45_5057802021856473709(__sym__0___45_5057802021856473709), sym__0___45_6839534157954023739(__sym__0___45_6839534157954023739), sym__0__3554709552784421197(__sym__0__3554709552784421197), sym__0___45_4889171900302414417(__sym__0___45_4889171900302414417), sym__0___45_4161758501735212672(__sym__0___45_4161758501735212672), sym__0___45_7938631388649493975(__sym__0___45_7938631388649493975), sym__0___45_699785309432656128(__sym__0___45_699785309432656128), sym__0___45_2045490810393326482(__sym__0___45_2045490810393326482), sym__0__3215571782344721357(__sym__0__3215571782344721357), sym__0__7405671162454692029(__sym__0__7405671162454692029), sym__0__2221693701692461459(__sym__0__2221693701692461459), sym__0___45_7916622968205270455(__sym__0___45_7916622968205270455), sym__0___45_187379753214360613(__sym__0___45_187379753214360613), sym__0__3625366936415753399(__sym__0__3625366936415753399), sym__0__8944804994507528308(__sym__0__8944804994507528308), sym__0___45_5827336879747782262(__sym__0___45_5827336879747782262), sym__0__1350428008193598418(__sym__0__1350428008193598418), sym__0__3585920367783378280(__sym__0__3585920367783378280), sym__0___45_1379309617935839321(__sym__0___45_1379309617935839321), sym__0___45_4244869060837491615(__sym__0___45_4244869060837491615), sym__0___45_6246622897322295949(__sym__0___45_6246622897322295949), sym__0___45_7650291061553794259(__sym__0___45_7650291061553794259), sym__0___45_1236860414731734564(__sym__0___45_1236860414731734564), sym__0___45_3875846966030338521(__sym__0___45_3875846966030338521)
  {
  }
  Record32() 
  {
  }
  std::string show() const{
    std::stringstream o;
    o << sym__0__4519803852684427543 << " | " << arrToString(sym__0___45_4343360485772802425) << " | " << arrToString(sym__0___45_4964707487098413267) << " | " << arrToString(sym__0___45_4968176427635671902) << " | " << sym__0___45_6976515134520023056 << " | " << sym__0___45_6407986363906595150 << " | " << arrToString(sym__0__7276429137656386527) << " | " << sym__0__4221568001408061244 << " | " << sym__0__5318835693872869311 << " | " << sym__0___45_5662655200901224073 << " | " << sym__0___45_3865525655503432699 << " | " << sym__0__6565687540723274882 << " | " << arrToString(sym__0__8756313061100779083) << " | " << arrToString(sym__0__406217822861760083) << " | " << arrToString(sym__0__6583192417747851262) << " | " << arrToString(sym__0__6482281155504029302) << " | " << arrToString(sym__0__7679621352908603000) << " | " << sym__0___45_5057802021856473709 << " | " << sym__0___45_6839534157954023739 << " | " << sym__0__3554709552784421197 << " | " << sym__0___45_4889171900302414417 << " | " << sym__0___45_4161758501735212672 << " | " << sym__0___45_7938631388649493975 << " | " << arrToString(sym__0___45_699785309432656128) << " | " << sym__0___45_2045490810393326482 << " | " << arrToString(sym__0__3215571782344721357) << " | " << sym__0__7405671162454692029 << " | " << sym__0__2221693701692461459 << " | " << sym__0___45_7916622968205270455 << " | " << sym__0___45_187379753214360613 << " | " << sym__0__3625366936415753399 << " | " << sym__0__8944804994507528308 << " | " << sym__0___45_5827336879747782262 << " | " << arrToString(sym__0__1350428008193598418) << " | " << sym__0__3585920367783378280 << " | " << arrToString(sym__0___45_1379309617935839321) << " | " << arrToString(sym__0___45_4244869060837491615) << " | " << arrToString(sym__0___45_6246622897322295949) << " | " << arrToString(sym__0___45_7650291061553794259) << " | " << arrToString(sym__0___45_1236860414731734564) << " | " << arrToString(sym__0___45_3875846966030338521);
    return o.str();
  }
  bool operator <(const Record32& otherRec) const{
    return (otherRec.sym__0__4519803852684427543 < sym__0__4519803852684427543 && (otherRec.sym__0___45_4343360485772802425 < sym__0___45_4343360485772802425 && (otherRec.sym__0___45_4964707487098413267 < sym__0___45_4964707487098413267 && (otherRec.sym__0___45_4968176427635671902 < sym__0___45_4968176427635671902 && (otherRec.sym__0___45_6976515134520023056 < sym__0___45_6976515134520023056 && (otherRec.sym__0___45_6407986363906595150 < sym__0___45_6407986363906595150 && (otherRec.sym__0__7276429137656386527 < sym__0__7276429137656386527 && (otherRec.sym__0__4221568001408061244 < sym__0__4221568001408061244 && (otherRec.sym__0__5318835693872869311 < sym__0__5318835693872869311 && (otherRec.sym__0___45_5662655200901224073 < sym__0___45_5662655200901224073 && (otherRec.sym__0___45_3865525655503432699 < sym__0___45_3865525655503432699 && (otherRec.sym__0__6565687540723274882 < sym__0__6565687540723274882 && (otherRec.sym__0__8756313061100779083 < sym__0__8756313061100779083 && (otherRec.sym__0__406217822861760083 < sym__0__406217822861760083 && (otherRec.sym__0__6583192417747851262 < sym__0__6583192417747851262 && (otherRec.sym__0__6482281155504029302 < sym__0__6482281155504029302 && (otherRec.sym__0__7679621352908603000 < sym__0__7679621352908603000 && (otherRec.sym__0___45_5057802021856473709 < sym__0___45_5057802021856473709 && (otherRec.sym__0___45_6839534157954023739 < sym__0___45_6839534157954023739 && (otherRec.sym__0__3554709552784421197 < sym__0__3554709552784421197 && (otherRec.sym__0___45_4889171900302414417 < sym__0___45_4889171900302414417 && (otherRec.sym__0___45_4161758501735212672 < sym__0___45_4161758501735212672 && (otherRec.sym__0___45_7938631388649493975 < sym__0___45_7938631388649493975 && (otherRec.sym__0___45_699785309432656128 < sym__0___45_699785309432656128 && (otherRec.sym__0___45_2045490810393326482 < sym__0___45_2045490810393326482 && (otherRec.sym__0__3215571782344721357 < sym__0__3215571782344721357 && (otherRec.sym__0__7405671162454692029 < sym__0__7405671162454692029 && (otherRec.sym__0__2221693701692461459 < sym__0__2221693701692461459 && (otherRec.sym__0___45_7916622968205270455 < sym__0___45_7916622968205270455 && (otherRec.sym__0___45_187379753214360613 < sym__0___45_187379753214360613 && (otherRec.sym__0__3625366936415753399 < sym__0__3625366936415753399 && (otherRec.sym__0__8944804994507528308 < sym__0__8944804994507528308 && (otherRec.sym__0___45_5827336879747782262 < sym__0___45_5827336879747782262 && (otherRec.sym__0__1350428008193598418 < sym__0__1350428008193598418 && (otherRec.sym__0__3585920367783378280 < sym__0__3585920367783378280 && (otherRec.sym__0___45_1379309617935839321 < sym__0___45_1379309617935839321 && (otherRec.sym__0___45_4244869060837491615 < sym__0___45_4244869060837491615 && (otherRec.sym__0___45_6246622897322295949 < sym__0___45_6246622897322295949 && (otherRec.sym__0___45_7650291061553794259 < sym__0___45_7650291061553794259 && (otherRec.sym__0___45_1236860414731734564 < sym__0___45_1236860414731734564 && otherRec.sym__0___45_3875846966030338521 < sym__0___45_3875846966030338521))))))))))))))))))))))))))))))))))))))));
  }
  bool operator ==(const Record32& otherRec) const{
    return (otherRec.sym__0__4519803852684427543 == sym__0__4519803852684427543 && (otherRec.sym__0___45_4343360485772802425 == sym__0___45_4343360485772802425 && (otherRec.sym__0___45_4964707487098413267 == sym__0___45_4964707487098413267 && (otherRec.sym__0___45_4968176427635671902 == sym__0___45_4968176427635671902 && (otherRec.sym__0___45_6976515134520023056 == sym__0___45_6976515134520023056 && (otherRec.sym__0___45_6407986363906595150 == sym__0___45_6407986363906595150 && (otherRec.sym__0__7276429137656386527 == sym__0__7276429137656386527 && (otherRec.sym__0__4221568001408061244 == sym__0__4221568001408061244 && (otherRec.sym__0__5318835693872869311 == sym__0__5318835693872869311 && (otherRec.sym__0___45_5662655200901224073 == sym__0___45_5662655200901224073 && (otherRec.sym__0___45_3865525655503432699 == sym__0___45_3865525655503432699 && (otherRec.sym__0__6565687540723274882 == sym__0__6565687540723274882 && (otherRec.sym__0__8756313061100779083 == sym__0__8756313061100779083 && (otherRec.sym__0__406217822861760083 == sym__0__406217822861760083 && (otherRec.sym__0__6583192417747851262 == sym__0__6583192417747851262 && (otherRec.sym__0__6482281155504029302 == sym__0__6482281155504029302 && (otherRec.sym__0__7679621352908603000 == sym__0__7679621352908603000 && (otherRec.sym__0___45_5057802021856473709 == sym__0___45_5057802021856473709 && (otherRec.sym__0___45_6839534157954023739 == sym__0___45_6839534157954023739 && (otherRec.sym__0__3554709552784421197 == sym__0__3554709552784421197 && (otherRec.sym__0___45_4889171900302414417 == sym__0___45_4889171900302414417 && (otherRec.sym__0___45_4161758501735212672 == sym__0___45_4161758501735212672 && (otherRec.sym__0___45_7938631388649493975 == sym__0___45_7938631388649493975 && (otherRec.sym__0___45_699785309432656128 == sym__0___45_699785309432656128 && (otherRec.sym__0___45_2045490810393326482 == sym__0___45_2045490810393326482 && (otherRec.sym__0__3215571782344721357 == sym__0__3215571782344721357 && (otherRec.sym__0__7405671162454692029 == sym__0__7405671162454692029 && (otherRec.sym__0__2221693701692461459 == sym__0__2221693701692461459 && (otherRec.sym__0___45_7916622968205270455 == sym__0___45_7916622968205270455 && (otherRec.sym__0___45_187379753214360613 == sym__0___45_187379753214360613 && (otherRec.sym__0__3625366936415753399 == sym__0__3625366936415753399 && (otherRec.sym__0__8944804994507528308 == sym__0__8944804994507528308 && (otherRec.sym__0___45_5827336879747782262 == sym__0___45_5827336879747782262 && (otherRec.sym__0__1350428008193598418 == sym__0__1350428008193598418 && (otherRec.sym__0__3585920367783378280 == sym__0__3585920367783378280 && (otherRec.sym__0___45_1379309617935839321 == sym__0___45_1379309617935839321 && (otherRec.sym__0___45_4244869060837491615 == sym__0___45_4244869060837491615 && (otherRec.sym__0___45_6246622897322295949 == sym__0___45_6246622897322295949 && (otherRec.sym__0___45_7650291061553794259 == sym__0___45_7650291061553794259 && (otherRec.sym__0___45_1236860414731734564 == sym__0___45_1236860414731734564 && otherRec.sym__0___45_3875846966030338521 == sym__0___45_3875846966030338521))))))))))))))))))))))))))))))))))))))));
  }
  bool operator !=(const Record32& otherRec) const{
    return (otherRec.sym__0__4519803852684427543 != sym__0__4519803852684427543 || (otherRec.sym__0___45_4343360485772802425 != sym__0___45_4343360485772802425 || (otherRec.sym__0___45_4964707487098413267 != sym__0___45_4964707487098413267 || (otherRec.sym__0___45_4968176427635671902 != sym__0___45_4968176427635671902 || (otherRec.sym__0___45_6976515134520023056 != sym__0___45_6976515134520023056 || (otherRec.sym__0___45_6407986363906595150 != sym__0___45_6407986363906595150 || (otherRec.sym__0__7276429137656386527 != sym__0__7276429137656386527 || (otherRec.sym__0__4221568001408061244 != sym__0__4221568001408061244 || (otherRec.sym__0__5318835693872869311 != sym__0__5318835693872869311 || (otherRec.sym__0___45_5662655200901224073 != sym__0___45_5662655200901224073 || (otherRec.sym__0___45_3865525655503432699 != sym__0___45_3865525655503432699 || (otherRec.sym__0__6565687540723274882 != sym__0__6565687540723274882 || (otherRec.sym__0__8756313061100779083 != sym__0__8756313061100779083 || (otherRec.sym__0__406217822861760083 != sym__0__406217822861760083 || (otherRec.sym__0__6583192417747851262 != sym__0__6583192417747851262 || (otherRec.sym__0__6482281155504029302 != sym__0__6482281155504029302 || (otherRec.sym__0__7679621352908603000 != sym__0__7679621352908603000 || (otherRec.sym__0___45_5057802021856473709 != sym__0___45_5057802021856473709 || (otherRec.sym__0___45_6839534157954023739 != sym__0___45_6839534157954023739 || (otherRec.sym__0__3554709552784421197 != sym__0__3554709552784421197 || (otherRec.sym__0___45_4889171900302414417 != sym__0___45_4889171900302414417 || (otherRec.sym__0___45_4161758501735212672 != sym__0___45_4161758501735212672 || (otherRec.sym__0___45_7938631388649493975 != sym__0___45_7938631388649493975 || (otherRec.sym__0___45_699785309432656128 != sym__0___45_699785309432656128 || (otherRec.sym__0___45_2045490810393326482 != sym__0___45_2045490810393326482 || (otherRec.sym__0__3215571782344721357 != sym__0__3215571782344721357 || (otherRec.sym__0__7405671162454692029 != sym__0__7405671162454692029 || (otherRec.sym__0__2221693701692461459 != sym__0__2221693701692461459 || (otherRec.sym__0___45_7916622968205270455 != sym__0___45_7916622968205270455 || (otherRec.sym__0___45_187379753214360613 != sym__0___45_187379753214360613 || (otherRec.sym__0__3625366936415753399 != sym__0__3625366936415753399 || (otherRec.sym__0__8944804994507528308 != sym__0__8944804994507528308 || (otherRec.sym__0___45_5827336879747782262 != sym__0___45_5827336879747782262 || (otherRec.sym__0__1350428008193598418 != sym__0__1350428008193598418 || (otherRec.sym__0__3585920367783378280 != sym__0__3585920367783378280 || (otherRec.sym__0___45_1379309617935839321 != sym__0___45_1379309617935839321 || (otherRec.sym__0___45_4244869060837491615 != sym__0___45_4244869060837491615 || (otherRec.sym__0___45_6246622897322295949 != sym__0___45_6246622897322295949 || (otherRec.sym__0___45_7650291061553794259 != sym__0___45_7650291061553794259 || (otherRec.sym__0___45_1236860414731734564 != sym__0___45_1236860414731734564 || otherRec.sym__0___45_3875846966030338521 != sym__0___45_3875846966030338521))))))))))))))))))))))))))))))))))))))));
  }
  unsigned sym__0__4519803852684427543;
  fluidb_string<18> sym__0___45_4343360485772802425;
  fluidb_string<9> sym__0___45_4964707487098413267;
  fluidb_string<9> sym__0___45_4968176427635671902;
  unsigned sym__0___45_6976515134520023056;
  unsigned sym__0___45_6407986363906595150;
  fluidb_string<7> sym__0__7276429137656386527;
  unsigned sym__0__4221568001408061244;
  unsigned sym__0__5318835693872869311;
  unsigned sym__0___45_5662655200901224073;
  unsigned sym__0___45_3865525655503432699;
  unsigned sym__0__6565687540723274882;
  fluidb_string<15> sym__0__8756313061100779083;
  fluidb_string<2> sym__0__406217822861760083;
  fluidb_string<2> sym__0__6583192417747851262;
  fluidb_string<2> sym__0__6482281155504029302;
  fluidb_string<2> sym__0__7679621352908603000;
  unsigned sym__0___45_5057802021856473709;
  int sym__0___45_6839534157954023739;
  unsigned sym__0__3554709552784421197;
  unsigned sym__0___45_4889171900302414417;
  unsigned sym__0___45_4161758501735212672;
  unsigned sym__0___45_7938631388649493975;
  fluidb_string<21> sym__0___45_699785309432656128;
  unsigned sym__0___45_2045490810393326482;
  fluidb_string<10> sym__0__3215571782344721357;
  unsigned sym__0__7405671162454692029;
  double sym__0__2221693701692461459;
  unsigned sym__0___45_7916622968205270455;
  double sym__0___45_187379753214360613;
  unsigned sym__0__3625366936415753399;
  unsigned sym__0__8944804994507528308;
  double sym__0___45_5827336879747782262;
  fluidb_string<13> sym__0__1350428008193598418;
  unsigned sym__0__3585920367783378280;
  fluidb_string<25> sym__0___45_1379309617935839321;
  fluidb_string<40> sym__0___45_4244869060837491615;
  fluidb_string<16> sym__0___45_6246622897322295949;
  fluidb_string<16> sym__0___45_7650291061553794259;
  fluidb_string<13> sym__0___45_1236860414731734564;
  fluidb_string<15> sym__0___45_3875846966030338521;
 private:
};


class Record10 {
 public:
  Record10(unsigned __sym__0___45_3961143035674407474, fluidb_string<18> __sym__0___45_6251899802584687138, fluidb_string<9> __sym__0__7895704682370371792, fluidb_string<9> __sym__0___45_4486276699369081973, unsigned __sym__0__1119005997298974989, unsigned __sym__0__3623076037790620667, fluidb_string<7> __sym__0___45_369211045765545994, unsigned __sym__0___45_2252349090140989903, unsigned __sym__0___45_6519715028980934506, unsigned __sym__0__6988144115678218478, unsigned __sym__0__1168585672581702408, unsigned __sym__0___45_1566345155802505557, fluidb_string<15> __sym__0___45_3812637469976556790, fluidb_string<2> __sym__0___45_2398128448016703502, fluidb_string<2> __sym__0__5574729781191990975, fluidb_string<2> __sym__0___45_5962954882039921225, fluidb_string<2> __sym__0___45_7276734914968453131, unsigned __sym__0__5341165382232817970, int __sym__0__5806605655987033032, unsigned __sym__0___45_6623407408063066704, unsigned __sym__0___45_1670026162273154778, unsigned __sym__0__2289386367904588797, unsigned __sym__0__8025829587274267860, fluidb_string<21> __sym__0__454237065112775549, unsigned __sym__0__608217599158647375, fluidb_string<10> __sym__0__4347069016709593136, unsigned __sym__0__4553650632168714688, double __sym__0__586349573025064242, unsigned __sym__0__144523031940788660, double __sym__0__2942207309637238010, unsigned __sym__0__1782085603058736686, unsigned __sym__0__3001704397998344329, double __sym__0___45_2662583778072919661, fluidb_string<13> __sym__0__8853539013824041307) : sym__0___45_3961143035674407474(__sym__0___45_3961143035674407474), sym__0___45_6251899802584687138(__sym__0___45_6251899802584687138), sym__0__7895704682370371792(__sym__0__7895704682370371792), sym__0___45_4486276699369081973(__sym__0___45_4486276699369081973), sym__0__1119005997298974989(__sym__0__1119005997298974989), sym__0__3623076037790620667(__sym__0__3623076037790620667), sym__0___45_369211045765545994(__sym__0___45_369211045765545994), sym__0___45_2252349090140989903(__sym__0___45_2252349090140989903), sym__0___45_6519715028980934506(__sym__0___45_6519715028980934506), sym__0__6988144115678218478(__sym__0__6988144115678218478), sym__0__1168585672581702408(__sym__0__1168585672581702408), sym__0___45_1566345155802505557(__sym__0___45_1566345155802505557), sym__0___45_3812637469976556790(__sym__0___45_3812637469976556790), sym__0___45_2398128448016703502(__sym__0___45_2398128448016703502), sym__0__5574729781191990975(__sym__0__5574729781191990975), sym__0___45_5962954882039921225(__sym__0___45_5962954882039921225), sym__0___45_7276734914968453131(__sym__0___45_7276734914968453131), sym__0__5341165382232817970(__sym__0__5341165382232817970), sym__0__5806605655987033032(__sym__0__5806605655987033032), sym__0___45_6623407408063066704(__sym__0___45_6623407408063066704), sym__0___45_1670026162273154778(__sym__0___45_1670026162273154778), sym__0__2289386367904588797(__sym__0__2289386367904588797), sym__0__8025829587274267860(__sym__0__8025829587274267860), sym__0__454237065112775549(__sym__0__454237065112775549), sym__0__608217599158647375(__sym__0__608217599158647375), sym__0__4347069016709593136(__sym__0__4347069016709593136), sym__0__4553650632168714688(__sym__0__4553650632168714688), sym__0__586349573025064242(__sym__0__586349573025064242), sym__0__144523031940788660(__sym__0__144523031940788660), sym__0__2942207309637238010(__sym__0__2942207309637238010), sym__0__1782085603058736686(__sym__0__1782085603058736686), sym__0__3001704397998344329(__sym__0__3001704397998344329), sym__0___45_2662583778072919661(__sym__0___45_2662583778072919661), sym__0__8853539013824041307(__sym__0__8853539013824041307)
  {
  }
  Record10() 
  {
  }
  std::string show() const{
    std::stringstream o;
    o << sym__0___45_3961143035674407474 << " | " << arrToString(sym__0___45_6251899802584687138) << " | " << arrToString(sym__0__7895704682370371792) << " | " << arrToString(sym__0___45_4486276699369081973) << " | " << sym__0__1119005997298974989 << " | " << sym__0__3623076037790620667 << " | " << arrToString(sym__0___45_369211045765545994) << " | " << sym__0___45_2252349090140989903 << " | " << sym__0___45_6519715028980934506 << " | " << sym__0__6988144115678218478 << " | " << sym__0__1168585672581702408 << " | " << sym__0___45_1566345155802505557 << " | " << arrToString(sym__0___45_3812637469976556790) << " | " << arrToString(sym__0___45_2398128448016703502) << " | " << arrToString(sym__0__5574729781191990975) << " | " << arrToString(sym__0___45_5962954882039921225) << " | " << arrToString(sym__0___45_7276734914968453131) << " | " << sym__0__5341165382232817970 << " | " << sym__0__5806605655987033032 << " | " << sym__0___45_6623407408063066704 << " | " << sym__0___45_1670026162273154778 << " | " << sym__0__2289386367904588797 << " | " << sym__0__8025829587274267860 << " | " << arrToString(sym__0__454237065112775549) << " | " << sym__0__608217599158647375 << " | " << arrToString(sym__0__4347069016709593136) << " | " << sym__0__4553650632168714688 << " | " << sym__0__586349573025064242 << " | " << sym__0__144523031940788660 << " | " << sym__0__2942207309637238010 << " | " << sym__0__1782085603058736686 << " | " << sym__0__3001704397998344329 << " | " << sym__0___45_2662583778072919661 << " | " << arrToString(sym__0__8853539013824041307);
    return o.str();
  }
  bool operator <(const Record10& otherRec) const{
    return (otherRec.sym__0___45_3961143035674407474 < sym__0___45_3961143035674407474 && (otherRec.sym__0___45_6251899802584687138 < sym__0___45_6251899802584687138 && (otherRec.sym__0__7895704682370371792 < sym__0__7895704682370371792 && (otherRec.sym__0___45_4486276699369081973 < sym__0___45_4486276699369081973 && (otherRec.sym__0__1119005997298974989 < sym__0__1119005997298974989 && (otherRec.sym__0__3623076037790620667 < sym__0__3623076037790620667 && (otherRec.sym__0___45_369211045765545994 < sym__0___45_369211045765545994 && (otherRec.sym__0___45_2252349090140989903 < sym__0___45_2252349090140989903 && (otherRec.sym__0___45_6519715028980934506 < sym__0___45_6519715028980934506 && (otherRec.sym__0__6988144115678218478 < sym__0__6988144115678218478 && (otherRec.sym__0__1168585672581702408 < sym__0__1168585672581702408 && (otherRec.sym__0___45_1566345155802505557 < sym__0___45_1566345155802505557 && (otherRec.sym__0___45_3812637469976556790 < sym__0___45_3812637469976556790 && (otherRec.sym__0___45_2398128448016703502 < sym__0___45_2398128448016703502 && (otherRec.sym__0__5574729781191990975 < sym__0__5574729781191990975 && (otherRec.sym__0___45_5962954882039921225 < sym__0___45_5962954882039921225 && (otherRec.sym__0___45_7276734914968453131 < sym__0___45_7276734914968453131 && (otherRec.sym__0__5341165382232817970 < sym__0__5341165382232817970 && (otherRec.sym__0__5806605655987033032 < sym__0__5806605655987033032 && (otherRec.sym__0___45_6623407408063066704 < sym__0___45_6623407408063066704 && (otherRec.sym__0___45_1670026162273154778 < sym__0___45_1670026162273154778 && (otherRec.sym__0__2289386367904588797 < sym__0__2289386367904588797 && (otherRec.sym__0__8025829587274267860 < sym__0__8025829587274267860 && (otherRec.sym__0__454237065112775549 < sym__0__454237065112775549 && (otherRec.sym__0__608217599158647375 < sym__0__608217599158647375 && (otherRec.sym__0__4347069016709593136 < sym__0__4347069016709593136 && (otherRec.sym__0__4553650632168714688 < sym__0__4553650632168714688 && (otherRec.sym__0__586349573025064242 < sym__0__586349573025064242 && (otherRec.sym__0__144523031940788660 < sym__0__144523031940788660 && (otherRec.sym__0__2942207309637238010 < sym__0__2942207309637238010 && (otherRec.sym__0__1782085603058736686 < sym__0__1782085603058736686 && (otherRec.sym__0__3001704397998344329 < sym__0__3001704397998344329 && (otherRec.sym__0___45_2662583778072919661 < sym__0___45_2662583778072919661 && otherRec.sym__0__8853539013824041307 < sym__0__8853539013824041307)))))))))))))))))))))))))))))))));
  }
  bool operator ==(const Record10& otherRec) const{
    return (otherRec.sym__0___45_3961143035674407474 == sym__0___45_3961143035674407474 && (otherRec.sym__0___45_6251899802584687138 == sym__0___45_6251899802584687138 && (otherRec.sym__0__7895704682370371792 == sym__0__7895704682370371792 && (otherRec.sym__0___45_4486276699369081973 == sym__0___45_4486276699369081973 && (otherRec.sym__0__1119005997298974989 == sym__0__1119005997298974989 && (otherRec.sym__0__3623076037790620667 == sym__0__3623076037790620667 && (otherRec.sym__0___45_369211045765545994 == sym__0___45_369211045765545994 && (otherRec.sym__0___45_2252349090140989903 == sym__0___45_2252349090140989903 && (otherRec.sym__0___45_6519715028980934506 == sym__0___45_6519715028980934506 && (otherRec.sym__0__6988144115678218478 == sym__0__6988144115678218478 && (otherRec.sym__0__1168585672581702408 == sym__0__1168585672581702408 && (otherRec.sym__0___45_1566345155802505557 == sym__0___45_1566345155802505557 && (otherRec.sym__0___45_3812637469976556790 == sym__0___45_3812637469976556790 && (otherRec.sym__0___45_2398128448016703502 == sym__0___45_2398128448016703502 && (otherRec.sym__0__5574729781191990975 == sym__0__5574729781191990975 && (otherRec.sym__0___45_5962954882039921225 == sym__0___45_5962954882039921225 && (otherRec.sym__0___45_7276734914968453131 == sym__0___45_7276734914968453131 && (otherRec.sym__0__5341165382232817970 == sym__0__5341165382232817970 && (otherRec.sym__0__5806605655987033032 == sym__0__5806605655987033032 && (otherRec.sym__0___45_6623407408063066704 == sym__0___45_6623407408063066704 && (otherRec.sym__0___45_1670026162273154778 == sym__0___45_1670026162273154778 && (otherRec.sym__0__2289386367904588797 == sym__0__2289386367904588797 && (otherRec.sym__0__8025829587274267860 == sym__0__8025829587274267860 && (otherRec.sym__0__454237065112775549 == sym__0__454237065112775549 && (otherRec.sym__0__608217599158647375 == sym__0__608217599158647375 && (otherRec.sym__0__4347069016709593136 == sym__0__4347069016709593136 && (otherRec.sym__0__4553650632168714688 == sym__0__4553650632168714688 && (otherRec.sym__0__586349573025064242 == sym__0__586349573025064242 && (otherRec.sym__0__144523031940788660 == sym__0__144523031940788660 && (otherRec.sym__0__2942207309637238010 == sym__0__2942207309637238010 && (otherRec.sym__0__1782085603058736686 == sym__0__1782085603058736686 && (otherRec.sym__0__3001704397998344329 == sym__0__3001704397998344329 && (otherRec.sym__0___45_2662583778072919661 == sym__0___45_2662583778072919661 && otherRec.sym__0__8853539013824041307 == sym__0__8853539013824041307)))))))))))))))))))))))))))))))));
  }
  bool operator !=(const Record10& otherRec) const{
    return (otherRec.sym__0___45_3961143035674407474 != sym__0___45_3961143035674407474 || (otherRec.sym__0___45_6251899802584687138 != sym__0___45_6251899802584687138 || (otherRec.sym__0__7895704682370371792 != sym__0__7895704682370371792 || (otherRec.sym__0___45_4486276699369081973 != sym__0___45_4486276699369081973 || (otherRec.sym__0__1119005997298974989 != sym__0__1119005997298974989 || (otherRec.sym__0__3623076037790620667 != sym__0__3623076037790620667 || (otherRec.sym__0___45_369211045765545994 != sym__0___45_369211045765545994 || (otherRec.sym__0___45_2252349090140989903 != sym__0___45_2252349090140989903 || (otherRec.sym__0___45_6519715028980934506 != sym__0___45_6519715028980934506 || (otherRec.sym__0__6988144115678218478 != sym__0__6988144115678218478 || (otherRec.sym__0__1168585672581702408 != sym__0__1168585672581702408 || (otherRec.sym__0___45_1566345155802505557 != sym__0___45_1566345155802505557 || (otherRec.sym__0___45_3812637469976556790 != sym__0___45_3812637469976556790 || (otherRec.sym__0___45_2398128448016703502 != sym__0___45_2398128448016703502 || (otherRec.sym__0__5574729781191990975 != sym__0__5574729781191990975 || (otherRec.sym__0___45_5962954882039921225 != sym__0___45_5962954882039921225 || (otherRec.sym__0___45_7276734914968453131 != sym__0___45_7276734914968453131 || (otherRec.sym__0__5341165382232817970 != sym__0__5341165382232817970 || (otherRec.sym__0__5806605655987033032 != sym__0__5806605655987033032 || (otherRec.sym__0___45_6623407408063066704 != sym__0___45_6623407408063066704 || (otherRec.sym__0___45_1670026162273154778 != sym__0___45_1670026162273154778 || (otherRec.sym__0__2289386367904588797 != sym__0__2289386367904588797 || (otherRec.sym__0__8025829587274267860 != sym__0__8025829587274267860 || (otherRec.sym__0__454237065112775549 != sym__0__454237065112775549 || (otherRec.sym__0__608217599158647375 != sym__0__608217599158647375 || (otherRec.sym__0__4347069016709593136 != sym__0__4347069016709593136 || (otherRec.sym__0__4553650632168714688 != sym__0__4553650632168714688 || (otherRec.sym__0__586349573025064242 != sym__0__586349573025064242 || (otherRec.sym__0__144523031940788660 != sym__0__144523031940788660 || (otherRec.sym__0__2942207309637238010 != sym__0__2942207309637238010 || (otherRec.sym__0__1782085603058736686 != sym__0__1782085603058736686 || (otherRec.sym__0__3001704397998344329 != sym__0__3001704397998344329 || (otherRec.sym__0___45_2662583778072919661 != sym__0___45_2662583778072919661 || otherRec.sym__0__8853539013824041307 != sym__0__8853539013824041307)))))))))))))))))))))))))))))))));
  }
  unsigned sym__0___45_3961143035674407474;
  fluidb_string<18> sym__0___45_6251899802584687138;
  fluidb_string<9> sym__0__7895704682370371792;
  fluidb_string<9> sym__0___45_4486276699369081973;
  unsigned sym__0__1119005997298974989;
  unsigned sym__0__3623076037790620667;
  fluidb_string<7> sym__0___45_369211045765545994;
  unsigned sym__0___45_2252349090140989903;
  unsigned sym__0___45_6519715028980934506;
  unsigned sym__0__6988144115678218478;
  unsigned sym__0__1168585672581702408;
  unsigned sym__0___45_1566345155802505557;
  fluidb_string<15> sym__0___45_3812637469976556790;
  fluidb_string<2> sym__0___45_2398128448016703502;
  fluidb_string<2> sym__0__5574729781191990975;
  fluidb_string<2> sym__0___45_5962954882039921225;
  fluidb_string<2> sym__0___45_7276734914968453131;
  unsigned sym__0__5341165382232817970;
  int sym__0__5806605655987033032;
  unsigned sym__0___45_6623407408063066704;
  unsigned sym__0___45_1670026162273154778;
  unsigned sym__0__2289386367904588797;
  unsigned sym__0__8025829587274267860;
  fluidb_string<21> sym__0__454237065112775549;
  unsigned sym__0__608217599158647375;
  fluidb_string<10> sym__0__4347069016709593136;
  unsigned sym__0__4553650632168714688;
  double sym__0__586349573025064242;
  unsigned sym__0__144523031940788660;
  double sym__0__2942207309637238010;
  unsigned sym__0__1782085603058736686;
  unsigned sym__0__3001704397998344329;
  double sym__0___45_2662583778072919661;
  fluidb_string<13> sym__0__8853539013824041307;
 private:
};


class Record33 {
 public:
  Record33(unsigned __sym__0__59163526776084807, fluidb_string<18> __sym__0___45_1313357857405786385, fluidb_string<40> __sym__0__1337312907475566789, fluidb_string<11> __sym__0__8014013609240026595, fluidb_string<15> __sym__0___45_4888925151068446247, fluidb_string<13> __sym__0__661408193145534136, fluidb_string<15> __sym__0___45_7159405632382799505, fluidb_string<21> __sym__0___45_7793359246716293237) : sym__0__59163526776084807(__sym__0__59163526776084807), sym__0___45_1313357857405786385(__sym__0___45_1313357857405786385), sym__0__1337312907475566789(__sym__0__1337312907475566789), sym__0__8014013609240026595(__sym__0__8014013609240026595), sym__0___45_4888925151068446247(__sym__0___45_4888925151068446247), sym__0__661408193145534136(__sym__0__661408193145534136), sym__0___45_7159405632382799505(__sym__0___45_7159405632382799505), sym__0___45_7793359246716293237(__sym__0___45_7793359246716293237)
  {
  }
  Record33() 
  {
  }
  std::string show() const{
    std::stringstream o;
    o << sym__0__59163526776084807 << " | " << arrToString(sym__0___45_1313357857405786385) << " | " << arrToString(sym__0__1337312907475566789) << " | " << arrToString(sym__0__8014013609240026595) << " | " << arrToString(sym__0___45_4888925151068446247) << " | " << arrToString(sym__0__661408193145534136) << " | " << arrToString(sym__0___45_7159405632382799505) << " | " << arrToString(sym__0___45_7793359246716293237);
    return o.str();
  }
  bool operator <(const Record33& otherRec) const{
    return (otherRec.sym__0__59163526776084807 < sym__0__59163526776084807 && (otherRec.sym__0___45_1313357857405786385 < sym__0___45_1313357857405786385 && (otherRec.sym__0__1337312907475566789 < sym__0__1337312907475566789 && (otherRec.sym__0__8014013609240026595 < sym__0__8014013609240026595 && (otherRec.sym__0___45_4888925151068446247 < sym__0___45_4888925151068446247 && (otherRec.sym__0__661408193145534136 < sym__0__661408193145534136 && (otherRec.sym__0___45_7159405632382799505 < sym__0___45_7159405632382799505 && otherRec.sym__0___45_7793359246716293237 < sym__0___45_7793359246716293237)))))));
  }
  bool operator ==(const Record33& otherRec) const{
    return (otherRec.sym__0__59163526776084807 == sym__0__59163526776084807 && (otherRec.sym__0___45_1313357857405786385 == sym__0___45_1313357857405786385 && (otherRec.sym__0__1337312907475566789 == sym__0__1337312907475566789 && (otherRec.sym__0__8014013609240026595 == sym__0__8014013609240026595 && (otherRec.sym__0___45_4888925151068446247 == sym__0___45_4888925151068446247 && (otherRec.sym__0__661408193145534136 == sym__0__661408193145534136 && (otherRec.sym__0___45_7159405632382799505 == sym__0___45_7159405632382799505 && otherRec.sym__0___45_7793359246716293237 == sym__0___45_7793359246716293237)))))));
  }
  bool operator !=(const Record33& otherRec) const{
    return (otherRec.sym__0__59163526776084807 != sym__0__59163526776084807 || (otherRec.sym__0___45_1313357857405786385 != sym__0___45_1313357857405786385 || (otherRec.sym__0__1337312907475566789 != sym__0__1337312907475566789 || (otherRec.sym__0__8014013609240026595 != sym__0__8014013609240026595 || (otherRec.sym__0___45_4888925151068446247 != sym__0___45_4888925151068446247 || (otherRec.sym__0__661408193145534136 != sym__0__661408193145534136 || (otherRec.sym__0___45_7159405632382799505 != sym__0___45_7159405632382799505 || otherRec.sym__0___45_7793359246716293237 != sym__0___45_7793359246716293237)))))));
  }
  unsigned sym__0__59163526776084807;
  fluidb_string<18> sym__0___45_1313357857405786385;
  fluidb_string<40> sym__0__1337312907475566789;
  fluidb_string<11> sym__0__8014013609240026595;
  fluidb_string<15> sym__0___45_4888925151068446247;
  fluidb_string<13> sym__0__661408193145534136;
  fluidb_string<15> sym__0___45_7159405632382799505;
  fluidb_string<21> sym__0___45_7793359246716293237;
 private:
};


class Record62 {
 public:
  Record62(unsigned __sortElem0, fluidb_string<16> __sortElem1, fluidb_string<7> __sortElem2) : sortElem0(__sortElem0), sortElem1(__sortElem1), sortElem2(__sortElem2)
  {
  }
  Record62() 
  {
  }
  std::string show() const{
    std::stringstream o;
    o << sortElem0 << " | " << arrToString(sortElem1) << " | " << arrToString(sortElem2);
    return o.str();
  }
  bool operator <(const Record62& otherRec) const{
    return (otherRec.sortElem0 < sortElem0 && (otherRec.sortElem1 < sortElem1 && otherRec.sortElem2 < sortElem2));
  }
  bool operator ==(const Record62& otherRec) const{
    return (otherRec.sortElem0 == sortElem0 && (otherRec.sortElem1 == sortElem1 && otherRec.sortElem2 == sortElem2));
  }
  bool operator !=(const Record62& otherRec) const{
    return (otherRec.sortElem0 != sortElem0 || (otherRec.sortElem1 != sortElem1 || otherRec.sortElem2 != sortElem2));
  }
  unsigned sortElem0;
  fluidb_string<16> sortElem1;
  fluidb_string<7> sortElem2;
 private:
};


class Record4 {
 public:
  Record4(unsigned __sym__0___45_9117911789383871612, fluidb_string<25> __sym__0___45_1547112764757372609, fluidb_string<40> __sym__0___45_8663957751614366179, fluidb_string<16> __sym__0__1466641425010216931, fluidb_string<16> __sym__0__3672857626658041553, fluidb_string<13> __sym__0___45_3362440237381592032, fluidb_string<15> __sym__0___45_6631364176934158657) : sym__0___45_9117911789383871612(__sym__0___45_9117911789383871612), sym__0___45_1547112764757372609(__sym__0___45_1547112764757372609), sym__0___45_8663957751614366179(__sym__0___45_8663957751614366179), sym__0__1466641425010216931(__sym__0__1466641425010216931), sym__0__3672857626658041553(__sym__0__3672857626658041553), sym__0___45_3362440237381592032(__sym__0___45_3362440237381592032), sym__0___45_6631364176934158657(__sym__0___45_6631364176934158657)
  {
  }
  Record4() 
  {
  }
  std::string show() const{
    std::stringstream o;
    o << sym__0___45_9117911789383871612 << " | " << arrToString(sym__0___45_1547112764757372609) << " | " << arrToString(sym__0___45_8663957751614366179) << " | " << arrToString(sym__0__1466641425010216931) << " | " << arrToString(sym__0__3672857626658041553) << " | " << arrToString(sym__0___45_3362440237381592032) << " | " << arrToString(sym__0___45_6631364176934158657);
    return o.str();
  }
  bool operator <(const Record4& otherRec) const{
    return (otherRec.sym__0___45_9117911789383871612 < sym__0___45_9117911789383871612 && (otherRec.sym__0___45_1547112764757372609 < sym__0___45_1547112764757372609 && (otherRec.sym__0___45_8663957751614366179 < sym__0___45_8663957751614366179 && (otherRec.sym__0__1466641425010216931 < sym__0__1466641425010216931 && (otherRec.sym__0__3672857626658041553 < sym__0__3672857626658041553 && (otherRec.sym__0___45_3362440237381592032 < sym__0___45_3362440237381592032 && otherRec.sym__0___45_6631364176934158657 < sym__0___45_6631364176934158657))))));
  }
  bool operator ==(const Record4& otherRec) const{
    return (otherRec.sym__0___45_9117911789383871612 == sym__0___45_9117911789383871612 && (otherRec.sym__0___45_1547112764757372609 == sym__0___45_1547112764757372609 && (otherRec.sym__0___45_8663957751614366179 == sym__0___45_8663957751614366179 && (otherRec.sym__0__1466641425010216931 == sym__0__1466641425010216931 && (otherRec.sym__0__3672857626658041553 == sym__0__3672857626658041553 && (otherRec.sym__0___45_3362440237381592032 == sym__0___45_3362440237381592032 && otherRec.sym__0___45_6631364176934158657 == sym__0___45_6631364176934158657))))));
  }
  bool operator !=(const Record4& otherRec) const{
    return (otherRec.sym__0___45_9117911789383871612 != sym__0___45_9117911789383871612 || (otherRec.sym__0___45_1547112764757372609 != sym__0___45_1547112764757372609 || (otherRec.sym__0___45_8663957751614366179 != sym__0___45_8663957751614366179 || (otherRec.sym__0__1466641425010216931 != sym__0__1466641425010216931 || (otherRec.sym__0__3672857626658041553 != sym__0__3672857626658041553 || (otherRec.sym__0___45_3362440237381592032 != sym__0___45_3362440237381592032 || otherRec.sym__0___45_6631364176934158657 != sym__0___45_6631364176934158657))))));
  }
  unsigned sym__0___45_9117911789383871612;
  fluidb_string<25> sym__0___45_1547112764757372609;
  fluidb_string<40> sym__0___45_8663957751614366179;
  fluidb_string<16> sym__0__1466641425010216931;
  fluidb_string<16> sym__0__3672857626658041553;
  fluidb_string<13> sym__0___45_3362440237381592032;
  fluidb_string<15> sym__0___45_6631364176934158657;
 private:
};


class Record1 {
 public:
  Record1(unsigned __sym__0__9004647469590526899, fluidb_string<18> __sym__0___45_1621348641261898005, fluidb_string<40> __sym__0__614427126981106829, fluidb_string<11> __sym__0___45_2454293820925122065, fluidb_string<15> __sym__0__6553227872838818177, fluidb_string<13> __sym__0___45_4248174812301520048, fluidb_string<15> __sym__0___45_3914904628387332757, fluidb_string<21> __sym__0___45_5446426298209956761, unsigned __sym__0___45_2558673723420522753, int __sym__0___45_3519351712545876895, unsigned __sym__0___45_1754306014800131719, unsigned __sym__0__6212025267607306819, unsigned __sym__0__2772749593389396148, unsigned __sym__0___45_4019035565219397859, fluidb_string<21> __sym__0___45_6819607202635958988, unsigned __sym__0__4920008974061631994, fluidb_string<10> __sym__0___45_8128105244823042823, unsigned __sym__0___45_2374853137558343895, double __sym__0__930686933803596543, unsigned __sym__0__5145129428883827325, double __sym__0__1860202553700236407, unsigned __sym__0___45_20127004494246501, unsigned __sym__0___45_3013783536855820064, double __sym__0___45_288503368240108258, fluidb_string<13> __sym__0___45_2265690738963363690) : sym__0__9004647469590526899(__sym__0__9004647469590526899), sym__0___45_1621348641261898005(__sym__0___45_1621348641261898005), sym__0__614427126981106829(__sym__0__614427126981106829), sym__0___45_2454293820925122065(__sym__0___45_2454293820925122065), sym__0__6553227872838818177(__sym__0__6553227872838818177), sym__0___45_4248174812301520048(__sym__0___45_4248174812301520048), sym__0___45_3914904628387332757(__sym__0___45_3914904628387332757), sym__0___45_5446426298209956761(__sym__0___45_5446426298209956761), sym__0___45_2558673723420522753(__sym__0___45_2558673723420522753), sym__0___45_3519351712545876895(__sym__0___45_3519351712545876895), sym__0___45_1754306014800131719(__sym__0___45_1754306014800131719), sym__0__6212025267607306819(__sym__0__6212025267607306819), sym__0__2772749593389396148(__sym__0__2772749593389396148), sym__0___45_4019035565219397859(__sym__0___45_4019035565219397859), sym__0___45_6819607202635958988(__sym__0___45_6819607202635958988), sym__0__4920008974061631994(__sym__0__4920008974061631994), sym__0___45_8128105244823042823(__sym__0___45_8128105244823042823), sym__0___45_2374853137558343895(__sym__0___45_2374853137558343895), sym__0__930686933803596543(__sym__0__930686933803596543), sym__0__5145129428883827325(__sym__0__5145129428883827325), sym__0__1860202553700236407(__sym__0__1860202553700236407), sym__0___45_20127004494246501(__sym__0___45_20127004494246501), sym__0___45_3013783536855820064(__sym__0___45_3013783536855820064), sym__0___45_288503368240108258(__sym__0___45_288503368240108258), sym__0___45_2265690738963363690(__sym__0___45_2265690738963363690)
  {
  }
  Record1() 
  {
  }
  std::string show() const{
    std::stringstream o;
    o << sym__0__9004647469590526899 << " | " << arrToString(sym__0___45_1621348641261898005) << " | " << arrToString(sym__0__614427126981106829) << " | " << arrToString(sym__0___45_2454293820925122065) << " | " << arrToString(sym__0__6553227872838818177) << " | " << arrToString(sym__0___45_4248174812301520048) << " | " << arrToString(sym__0___45_3914904628387332757) << " | " << arrToString(sym__0___45_5446426298209956761) << " | " << sym__0___45_2558673723420522753 << " | " << sym__0___45_3519351712545876895 << " | " << sym__0___45_1754306014800131719 << " | " << sym__0__6212025267607306819 << " | " << sym__0__2772749593389396148 << " | " << sym__0___45_4019035565219397859 << " | " << arrToString(sym__0___45_6819607202635958988) << " | " << sym__0__4920008974061631994 << " | " << arrToString(sym__0___45_8128105244823042823) << " | " << sym__0___45_2374853137558343895 << " | " << sym__0__930686933803596543 << " | " << sym__0__5145129428883827325 << " | " << sym__0__1860202553700236407 << " | " << sym__0___45_20127004494246501 << " | " << sym__0___45_3013783536855820064 << " | " << sym__0___45_288503368240108258 << " | " << arrToString(sym__0___45_2265690738963363690);
    return o.str();
  }
  bool operator <(const Record1& otherRec) const{
    return (otherRec.sym__0__9004647469590526899 < sym__0__9004647469590526899 && (otherRec.sym__0___45_1621348641261898005 < sym__0___45_1621348641261898005 && (otherRec.sym__0__614427126981106829 < sym__0__614427126981106829 && (otherRec.sym__0___45_2454293820925122065 < sym__0___45_2454293820925122065 && (otherRec.sym__0__6553227872838818177 < sym__0__6553227872838818177 && (otherRec.sym__0___45_4248174812301520048 < sym__0___45_4248174812301520048 && (otherRec.sym__0___45_3914904628387332757 < sym__0___45_3914904628387332757 && (otherRec.sym__0___45_5446426298209956761 < sym__0___45_5446426298209956761 && (otherRec.sym__0___45_2558673723420522753 < sym__0___45_2558673723420522753 && (otherRec.sym__0___45_3519351712545876895 < sym__0___45_3519351712545876895 && (otherRec.sym__0___45_1754306014800131719 < sym__0___45_1754306014800131719 && (otherRec.sym__0__6212025267607306819 < sym__0__6212025267607306819 && (otherRec.sym__0__2772749593389396148 < sym__0__2772749593389396148 && (otherRec.sym__0___45_4019035565219397859 < sym__0___45_4019035565219397859 && (otherRec.sym__0___45_6819607202635958988 < sym__0___45_6819607202635958988 && (otherRec.sym__0__4920008974061631994 < sym__0__4920008974061631994 && (otherRec.sym__0___45_8128105244823042823 < sym__0___45_8128105244823042823 && (otherRec.sym__0___45_2374853137558343895 < sym__0___45_2374853137558343895 && (otherRec.sym__0__930686933803596543 < sym__0__930686933803596543 && (otherRec.sym__0__5145129428883827325 < sym__0__5145129428883827325 && (otherRec.sym__0__1860202553700236407 < sym__0__1860202553700236407 && (otherRec.sym__0___45_20127004494246501 < sym__0___45_20127004494246501 && (otherRec.sym__0___45_3013783536855820064 < sym__0___45_3013783536855820064 && (otherRec.sym__0___45_288503368240108258 < sym__0___45_288503368240108258 && otherRec.sym__0___45_2265690738963363690 < sym__0___45_2265690738963363690))))))))))))))))))))))));
  }
  bool operator ==(const Record1& otherRec) const{
    return (otherRec.sym__0__9004647469590526899 == sym__0__9004647469590526899 && (otherRec.sym__0___45_1621348641261898005 == sym__0___45_1621348641261898005 && (otherRec.sym__0__614427126981106829 == sym__0__614427126981106829 && (otherRec.sym__0___45_2454293820925122065 == sym__0___45_2454293820925122065 && (otherRec.sym__0__6553227872838818177 == sym__0__6553227872838818177 && (otherRec.sym__0___45_4248174812301520048 == sym__0___45_4248174812301520048 && (otherRec.sym__0___45_3914904628387332757 == sym__0___45_3914904628387332757 && (otherRec.sym__0___45_5446426298209956761 == sym__0___45_5446426298209956761 && (otherRec.sym__0___45_2558673723420522753 == sym__0___45_2558673723420522753 && (otherRec.sym__0___45_3519351712545876895 == sym__0___45_3519351712545876895 && (otherRec.sym__0___45_1754306014800131719 == sym__0___45_1754306014800131719 && (otherRec.sym__0__6212025267607306819 == sym__0__6212025267607306819 && (otherRec.sym__0__2772749593389396148 == sym__0__2772749593389396148 && (otherRec.sym__0___45_4019035565219397859 == sym__0___45_4019035565219397859 && (otherRec.sym__0___45_6819607202635958988 == sym__0___45_6819607202635958988 && (otherRec.sym__0__4920008974061631994 == sym__0__4920008974061631994 && (otherRec.sym__0___45_8128105244823042823 == sym__0___45_8128105244823042823 && (otherRec.sym__0___45_2374853137558343895 == sym__0___45_2374853137558343895 && (otherRec.sym__0__930686933803596543 == sym__0__930686933803596543 && (otherRec.sym__0__5145129428883827325 == sym__0__5145129428883827325 && (otherRec.sym__0__1860202553700236407 == sym__0__1860202553700236407 && (otherRec.sym__0___45_20127004494246501 == sym__0___45_20127004494246501 && (otherRec.sym__0___45_3013783536855820064 == sym__0___45_3013783536855820064 && (otherRec.sym__0___45_288503368240108258 == sym__0___45_288503368240108258 && otherRec.sym__0___45_2265690738963363690 == sym__0___45_2265690738963363690))))))))))))))))))))))));
  }
  bool operator !=(const Record1& otherRec) const{
    return (otherRec.sym__0__9004647469590526899 != sym__0__9004647469590526899 || (otherRec.sym__0___45_1621348641261898005 != sym__0___45_1621348641261898005 || (otherRec.sym__0__614427126981106829 != sym__0__614427126981106829 || (otherRec.sym__0___45_2454293820925122065 != sym__0___45_2454293820925122065 || (otherRec.sym__0__6553227872838818177 != sym__0__6553227872838818177 || (otherRec.sym__0___45_4248174812301520048 != sym__0___45_4248174812301520048 || (otherRec.sym__0___45_3914904628387332757 != sym__0___45_3914904628387332757 || (otherRec.sym__0___45_5446426298209956761 != sym__0___45_5446426298209956761 || (otherRec.sym__0___45_2558673723420522753 != sym__0___45_2558673723420522753 || (otherRec.sym__0___45_3519351712545876895 != sym__0___45_3519351712545876895 || (otherRec.sym__0___45_1754306014800131719 != sym__0___45_1754306014800131719 || (otherRec.sym__0__6212025267607306819 != sym__0__6212025267607306819 || (otherRec.sym__0__2772749593389396148 != sym__0__2772749593389396148 || (otherRec.sym__0___45_4019035565219397859 != sym__0___45_4019035565219397859 || (otherRec.sym__0___45_6819607202635958988 != sym__0___45_6819607202635958988 || (otherRec.sym__0__4920008974061631994 != sym__0__4920008974061631994 || (otherRec.sym__0___45_8128105244823042823 != sym__0___45_8128105244823042823 || (otherRec.sym__0___45_2374853137558343895 != sym__0___45_2374853137558343895 || (otherRec.sym__0__930686933803596543 != sym__0__930686933803596543 || (otherRec.sym__0__5145129428883827325 != sym__0__5145129428883827325 || (otherRec.sym__0__1860202553700236407 != sym__0__1860202553700236407 || (otherRec.sym__0___45_20127004494246501 != sym__0___45_20127004494246501 || (otherRec.sym__0___45_3013783536855820064 != sym__0___45_3013783536855820064 || (otherRec.sym__0___45_288503368240108258 != sym__0___45_288503368240108258 || otherRec.sym__0___45_2265690738963363690 != sym__0___45_2265690738963363690))))))))))))))))))))))));
  }
  unsigned sym__0__9004647469590526899;
  fluidb_string<18> sym__0___45_1621348641261898005;
  fluidb_string<40> sym__0__614427126981106829;
  fluidb_string<11> sym__0___45_2454293820925122065;
  fluidb_string<15> sym__0__6553227872838818177;
  fluidb_string<13> sym__0___45_4248174812301520048;
  fluidb_string<15> sym__0___45_3914904628387332757;
  fluidb_string<21> sym__0___45_5446426298209956761;
  unsigned sym__0___45_2558673723420522753;
  int sym__0___45_3519351712545876895;
  unsigned sym__0___45_1754306014800131719;
  unsigned sym__0__6212025267607306819;
  unsigned sym__0__2772749593389396148;
  unsigned sym__0___45_4019035565219397859;
  fluidb_string<21> sym__0___45_6819607202635958988;
  unsigned sym__0__4920008974061631994;
  fluidb_string<10> sym__0___45_8128105244823042823;
  unsigned sym__0___45_2374853137558343895;
  double sym__0__930686933803596543;
  unsigned sym__0__5145129428883827325;
  double sym__0__1860202553700236407;
  unsigned sym__0___45_20127004494246501;
  unsigned sym__0___45_3013783536855820064;
  double sym__0___45_288503368240108258;
  fluidb_string<13> sym__0___45_2265690738963363690;
 private:
};


class CallableClass5 {
 public:
  Record4 operator()(const Record2& record0) {
    return Record4(record0.sym__0___45_1023382914117654422, record0.sym__0__6224010339127806049, record0.sym__0___45_8804639047977952305, record0.sym__0__8926375957639307021, record0.sym__0__5153200798583684363, record0.sym__0___45_794494697990656050, record0.sym__0__7308161412148661473);
  }
  typedef Record4 Codomain;
  typedef Record2 Domain0;
 private:
};


class CallableClass18 {
 public:
  bool operator()(const Record10& record17) {
    return ((record17.sym__0__1119005997298974989 == 1997) || (record17.sym__0__1119005997298974989 == 1998));
  }
  typedef bool Codomain;
  typedef Record10 Domain0;
 private:
};


class CallableClass25 {
 public:
  Record12 operator()(const Record21& record24) {
    return Record12(record24.sym__0__1703507990261152271);
  }
  typedef Record12 Codomain;
  typedef Record21 Domain0;
 private:
};


class CallableClass51 {
 public:
  Record12 operator()(const Record45& record50) {
    return Record12(record50.sym__0__7178003535380331304);
  }
  typedef Record12 Codomain;
  typedef Record45 Domain0;
 private:
};


class CallableClass41 {
 public:
  bool operator()(const Record34& record40) {
    return like(record40.sym__0__2126085240536350732, "AMERICA");
  }
  typedef bool Codomain;
  typedef Record34 Domain0;
 private:
};


class CallableClass23 {
 public:
  Record22 operator()(const Record21& record19, const Record4& record20) {
    return Record22(record19.sym__0___45_4786665323434102080, record19.sym__0___45_718414210926260528, record19.sym__0__2991929535981333470, record19.sym__0__5086274491004809217, record19.sym__0___45_258751970341366497, record19.sym__0___45_8840925934981943951, record19.sym__0___45_2839343239801880776, record19.sym__0___45_2276458087174471749, record19.sym__0__1929863969014267608, record19.sym__0__2704316647558228192, record19.sym__0__8504417473139519942, record19.sym__0___45_9148357713503185375, record19.sym__0__7939938566864457892, record19.sym__0___45_5573640818221010820, record19.sym__0___45_2506228860430673747, record19.sym__0__1781975366054978933, record19.sym__0___45_7105427993818199241, record19.sym__0__426127656922644668, record19.sym__0__5332437039091356550, record19.sym__0___45_8251678017490063938, record19.sym__0__2217824587726925672, record19.sym__0__1703507990261152271, record19.sym__0__4350726819421344058, record19.sym__0__8335814327113075343, record19.sym__0__7800632214280706621, record19.sym__0___45_2770092001494825154, record19.sym__0___45_8612492126202554674, record19.sym__0__8589812627042051260, record19.sym__0__5937479715281144602, record19.sym__0__5917963320619527060, record19.sym__0__8594077638514175264, record19.sym__0__3972645446391195683, record19.sym__0___45_1938194446503439623, record19.sym__0__4609612711595807185, record20.sym__0___45_9117911789383871612, record20.sym__0___45_1547112764757372609, record20.sym__0___45_8663957751614366179, record20.sym__0__1466641425010216931, record20.sym__0__3672857626658041553, record20.sym__0___45_3362440237381592032, record20.sym__0___45_6631364176934158657);
  }
  typedef Record22 Codomain;
  typedef Record21 Domain0;
  typedef Record4 Domain1;
 private:
};


class CallableClass37 {
 public:
  Record12 operator()(const Record32& record36) {
    return Record12(record36.sym__0__3554709552784421197);
  }
  typedef Record12 Codomain;
  typedef Record32 Domain0;
 private:
};


class CallableClass47 {
 public:
  Record46 operator()(const Record44& record42, const Record45& record43) {
    return Record46(record42.sym__0___45_5022535542243704710, record42.sym__0___45_1787376491092531126, record42.sym__0__1794599500078494180, record42.sym__0__3504526357581681255, record42.sym__0___45_3538247220115815847, record42.sym__0___45_8490563090509246185, record42.sym__0__7912812290691120690, record42.sym__0___45_8737637263679152107, record42.sym__0__8047491221284574610, record42.sym__0___45_6269766180242592166, record42.sym__0___45_7640802177453871412, record42.sym__0___45_5373284368264652217, record42.sym__0__8444953784357023550, record42.sym__0__4417297774308162358, record42.sym__0___45_4637626103078907309, record42.sym__0___45_8485149193020004517, record42.sym__0___45_2377257467813948591, record42.sym__0___45_36447550095630858, record42.sym__0___45_4571237191815489268, record42.sym__0__5859261980497791492, record42.sym__0__6356302675304611298, record42.sym__0___45_7802949452745359543, record42.sym__0__7521688076231004384, record42.sym__0___45_2513776183032217143, record42.sym__0___45_2396884490376822877, record42.sym__0___45_5999640426069083772, record42.sym__0__2832464336988697364, record42.sym__0__7758886340050530806, record42.sym__0___45_2986568091977901312, record42.sym__0___45_5093030022830106066, record42.sym__0___45_6949801323594541286, record42.sym__0__6879353985735461853, record42.sym__0___45_4693548478308764801, record42.sym__0___45_5899864176262810185, record42.sym__0___45_4745906627054176095, record42.sym__0___45_8104684152988778134, record42.sym__0__5679940805842000168, record42.sym__0__1998069300503629014, record42.sym__0__5053648343318218212, record42.sym__0___45_6937215324756479947, record42.sym__0__7346985942697523434, record42.sym__0___45_3899760551975893518, record42.sym__0__4769700736509849738, record42.sym__0__5718739266127451248, record42.sym__0__623483990156027782, record42.sym__0___45_587879708325432980, record42.sym__0___45_1723468156536033747, record42.sym__0__4933073327123913482, record42.sym__0___45_893026833634796994, record43.sym__0__7178003535380331304, record43.sym__0___45_7020257275696364520, record43.sym__0___45_6307179734719967033, record43.sym__0__4568304886257136061, record43.sym__0___45_6291097039630000265, record43.sym__0__551327770031967739, record43.sym__0__3827696365022297353, record43.sym__0___45_1779543743759935870, record43.sym__0__3752090135924368535);
  }
  typedef Record46 Codomain;
  typedef Record44 Domain0;
  typedef Record45 Domain1;
 private:
};


class CallableClass39 {
 public:
  Record12 operator()(const Record33& record38) {
    return Record12(record38.sym__0__59163526776084807);
  }
  typedef Record12 Codomain;
  typedef Record33 Domain0;
 private:
};


class CallableClass29 {
 public:
  bool operator()(const Record22& record28) {
    return like(record28.sym__0___45_2815638459411730147, "AMERICA");
  }
  typedef bool Codomain;
  typedef Record22 Domain0;
 private:
};


class CallableClass35 {
 public:
  Record34 operator()(const Record32& record30, const Record33& record31) {
    return Record34(record30.sym__0__4519803852684427543, record30.sym__0___45_4343360485772802425, record30.sym__0___45_4964707487098413267, record30.sym__0___45_4968176427635671902, record30.sym__0___45_6976515134520023056, record30.sym__0___45_6407986363906595150, record30.sym__0__7276429137656386527, record30.sym__0__4221568001408061244, record30.sym__0__5318835693872869311, record30.sym__0___45_5662655200901224073, record30.sym__0___45_3865525655503432699, record30.sym__0__6565687540723274882, record30.sym__0__8756313061100779083, record30.sym__0__406217822861760083, record30.sym__0__6583192417747851262, record30.sym__0__6482281155504029302, record30.sym__0__7679621352908603000, record30.sym__0___45_5057802021856473709, record30.sym__0___45_6839534157954023739, record30.sym__0__3554709552784421197, record30.sym__0___45_4889171900302414417, record30.sym__0___45_4161758501735212672, record30.sym__0___45_7938631388649493975, record30.sym__0___45_699785309432656128, record30.sym__0___45_2045490810393326482, record30.sym__0__3215571782344721357, record30.sym__0__7405671162454692029, record30.sym__0__2221693701692461459, record30.sym__0___45_7916622968205270455, record30.sym__0___45_187379753214360613, record30.sym__0__3625366936415753399, record30.sym__0__8944804994507528308, record30.sym__0___45_5827336879747782262, record30.sym__0__1350428008193598418, record30.sym__0__3585920367783378280, record30.sym__0___45_1379309617935839321, record30.sym__0___45_4244869060837491615, record30.sym__0___45_6246622897322295949, record30.sym__0___45_7650291061553794259, record30.sym__0___45_1236860414731734564, record30.sym__0___45_3875846966030338521, record31.sym__0__59163526776084807, record31.sym__0___45_1313357857405786385, record31.sym__0__1337312907475566789, record31.sym__0__8014013609240026595, record31.sym__0___45_4888925151068446247, record31.sym__0__661408193145534136, record31.sym__0___45_7159405632382799505, record31.sym__0___45_7793359246716293237);
  }
  typedef Record34 Codomain;
  typedef Record32 Domain0;
  typedef Record33 Domain1;
 private:
};


class CallableClass63 {
 public:
  Record62 operator()(const Record57& record54) {
    return Record62(record54.sym__0___45_8677392828688233166, record54.sym__0__1021755297466038067, record54.sym__0___45_4809984581900163974);
  }
  typedef Record62 Codomain;
  typedef Record57 Domain0;
 private:
};


class CallableClass16 {
 public:
  Record12 operator()(const Record9& record15) {
    return Record12(record15.sym__0___45_7332894783442362324);
  }
  typedef Record12 Codomain;
  typedef Record9 Domain0;
 private:
};


class CallableClass53 {
 public:
  bool operator()(const Record46& record52) {
    return (like(record52.sym__0___45_8342080612972883318, "MFGR#1") || like(record52.sym__0___45_8342080612972883318, "MFGR#2"));
  }
  typedef bool Codomain;
  typedef Record46 Domain0;
 private:
};


class CallableClass49 {
 public:
  Record12 operator()(const Record44& record48) {
    return Record12(record48.sym__0__6356302675304611298);
  }
  typedef Record12 Codomain;
  typedef Record44 Domain0;
 private:
};


class CallableClass14 {
 public:
  Record12 operator()(const Record8& record13) {
    return Record12(record13.sym__0__2037864888707786451);
  }
  typedef Record12 Codomain;
  typedef Record8 Domain0;
 private:
};


class CallableClass65 {
 public:
  Record62 operator()(const Record55& record64) {
    return Record62(record64.sym__0__2350038716092382120, record64.sym__0__8611344027404304067, record64.sym__0__8346724432435993936);
  }
  typedef Record62 Codomain;
  typedef Record55 Domain0;
 private:
};


class CallableClass27 {
 public:
  Record12 operator()(const Record4& record26) {
    return Record12(record26.sym__0___45_9117911789383871612);
  }
  typedef Record12 Codomain;
  typedef Record4 Domain0;
 private:
};


class CallableClass61 {
 public:
  Record55 operator()(const Record57& record54) {
    return Record55(vAggrFirst56(record54.sym__0___45_8677392828688233166), vAggrFirst58(record54.sym__0__1021755297466038067), vAggrFirst59(record54.sym__0___45_4809984581900163974), vAggrSum60((record54.sym__0__6560144715045217229 - record54.sym__0__188275661929456398)));
  }
  typedef Record55 Codomain;
  typedef Record57 Domain0;
 private:
  AggrFirst<unsigned> vAggrFirst56;
  AggrFirst<fluidb_string<16>> vAggrFirst58;
  AggrFirst<fluidb_string<7>> vAggrFirst59;
  AggrSum<unsigned> vAggrSum60;
};


class CallableClass11 {
 public:
  Record10 operator()(const Record8& record6, const Record9& record7) {
    return Record10(record6.sym__0__2037864888707786451, record6.sym__0__8533656712666151747, record6.sym__0__646314041574508429, record6.sym__0__6064137978327902054, record6.sym__0__3754157776500852496, record6.sym__0__6284345160241949046, record6.sym__0___45_773692805971570325, record6.sym__0___45_8399474032083007524, record6.sym__0___45_2038947427357444789, record6.sym__0__6071994954612827827, record6.sym__0__7742515703067448213, record6.sym__0__5201219213304227654, record6.sym__0___45_5896625796158057241, record6.sym__0___45_1108504872221226081, record6.sym__0__1055103969674359346, record6.sym__0__9115626546918942554, record6.sym__0___45_6850413444013389848, record7.sym__0___45_7574074018531922998, record7.sym__0__1125464382786937920, record7.sym__0___45_8257174981563598792, record7.sym__0__957746932829998382, record7.sym__0__934137931677987637, record7.sym__0___45_7332894783442362324, record7.sym__0__8974811218372806325, record7.sym__0___45_5217562530132451785, record7.sym__0__7851147553396318904, record7.sym__0___45_4975505511391694456, record7.sym__0___45_7249986409969561654, record7.sym__0__4671626969570181580, record7.sym__0___45_3666121704283105054, record7.sym__0__5495011930072844518, record7.sym__0___45_4423447118092167055, record7.sym__0___45_1608082021099887893, record7.sym__0__1584187396639360899);
  }
  typedef Record10 Codomain;
  typedef Record8 Domain0;
  typedef Record9 Domain1;
 private:
};


class CallableClass3 {
 public:
  Record1 operator()(const Record2& record0) {
    return Record1(record0.sym__0__2833764152503888409, record0.sym__0__6938021140779677761, record0.sym__0___45_4700201805806600089, record0.sym__0__3362667619044778557, record0.sym__0__2679827580767046755, record0.sym__0___45_4186304031693649930, record0.sym__0__8596564865999609793, record0.sym__0___45_1671053890158572571, record0.sym__0__2256924431415148013, record0.sym__0__347872876320563651, record0.sym__0___45_7666447219434903317, record0.sym__0__1272718151591622153, record0.sym__0__4584633926271658914, record0.sym__0___45_4610773208091240233, record0.sym__0___45_5766638191766435038, record0.sym__0___45_5211223358204127380, record0.sym__0__8435431464460332395, record0.sym__0___45_6450191115912157957, record0.sym__0__7921907673157171693, record0.sym__0___45_1699747741436218441, record0.sym__0___45_2985562469054236715, record0.sym__0__3746029949899912401, record0.sym__0___45_989155948099215770, record0.sym__0___45_1667761180508152936, record0.sym__0__5854462121170882944);
  }
  typedef Record1 Codomain;
  typedef Record2 Domain0;
 private:
};






int main() {
  // ReverseTrigger: (Just 
  //   (Left 
  //     [
  //      QJoin 
  //         (P0 
  //           (R2 REq 
  //               (R0 (E0 (ESym "lo_suppkey"))) 
  //               (R0 (E0 (ESym "s_suppkey")))))
  std::cout << "ReverseTrigger: (Just \n  (Left \n    [\n     QJoin \n        (P0 \n          (R2 REq \n              (R0 (E0 (ESym \"lo_suppkey\"))) \n              (R0 (E0 (ESym \"s_suppkey\")))))\n    ]))" << std::endl;
  {
    auto operation = mkUnJoin<CallableClass3, CallableClass5>(Just("/tmp/fluidb_store/data296.dat"), Nothing(), Just("/tmp/fluidb_store/data297.dat"), Nothing(), Just("/tmp/fluidb_store/data3.dat"));
    operation.run();
    operation.print_output(10);
  }
  // Delete: (Q1 
  //   (QSort [E0 (ESym "d_year"),E0 (ESym "c_nation")]) 
  //   (Q1 
  //     (QGroup 
  //       [
  //        (ESym "d_year",E0 (NAggr AggrFirst (E0 (ESym "d_year")))),
  //        (ESym "c_nation",E0 (NAggr AggrFirst (E0 (ESym "c_nation")))),
  //        (
  //          ESym "profit",
  //          E0 
  //             (NAggr 
  //               AggrSum 
  //               (E2 ESub 
  //                   (E0 (ESym "lo_revenue")) 
  //                   (E0 (ESym "lo_supplycost"))))
  //         )
  //       ] 
  //       [E0 (ESym "d_year"),E0 (ESym "c_nation")]) 
  //     (S 
  //       (P2 
  //         PAnd 
  //         (P2 
  //           PAnd 
  //           (P0 
  //             (R2 RLike 
  //                 (R0 (E0 (ESym "c_region"))) 
  //                 (R0 (E0 (EString "AMERICA"))))) 
  //           (P0 
  //             (R2 RLike 
  //                 (R0 (E0 (ESym "s_region"))) 
  //                 (R0 (E0 (EString "AMERICA")))))) 
  //         (P2 
  //           POr 
  //           (P0 
  //             (R2 RLike 
  //                 (R0 (E0 (ESym "p_mfgr"))) 
  //                 (R0 (E0 (EString "MFGR#1"))))) 
  //           (P0 
  //             (R2 RLike 
  //                 (R0 (E0 (ESym "p_mfgr"))) 
  //                 (R0 (E0 (EString "MFGR#2"))))))) 
  //       (J 
  //         (P0 
  //           (R2 REq 
  //               (R0 (E0 (ESym "lo_partkey"))) 
  //               (R0 (E0 (ESym "p_partkey"))))) 
  //         (J 
  //           (P0 
  //             (R2 REq 
  //                 (R0 (E0 (ESym "lo_custkey"))) 
  //                 (R0 (E0 (ESym "c_custkey"))))) 
  //           (J 
  //             (P0 
  //               (R2 REq 
  //                   (R0 (E0 (ESym "lo_suppkey"))) 
  //                   (R0 (E0 (ESym "s_suppkey"))))) 
  //             (J 
  //               (P0 
  //                 (R2 REq 
  //                     (R0 (E0 (ESym "lo_orderdate"))) 
  //                     (R0 (E0 (ESym "d_datekey"))))) 
  //               (Q0 (TSymbol "date")) 
  //               (Q0 (TSymbol "lineorder"))) 
  //             (Q0 (TSymbol "supplier"))) 
  //           (Q0 (TSymbol "customer"))) 
  std::cout << "Delete: N312" << std::endl;
  deleteFile("/tmp/fluidb_store/data312.dat");
  // Delete: (Q1 
  //   (QGroup 
  //     [
  //      (ESym "d_year",E0 (NAggr AggrFirst (E0 (ESym "d_year")))),
  //      (ESym "c_nation",E0 (NAggr AggrFirst (E0 (ESym "c_nation")))),
  //      (
  //        ESym "profit",
  //        E0 
  //           (NAggr 
  //             AggrSum 
  //             (E2 ESub 
  //                 (E0 (ESym "lo_revenue")) 
  //                 (E0 (ESym "lo_supplycost"))))
  //       )
  //     ] 
  //     [E0 (ESym "d_year"),E0 (ESym "c_nation")]) 
  //   (S 
  //     (P2 
  //       PAnd 
  //       (P2 
  //         PAnd 
  //         (P0 
  //           (R2 RLike 
  //               (R0 (E0 (ESym "c_region"))) 
  //               (R0 (E0 (EString "AMERICA"))))) 
  //         (P0 
  //           (R2 RLike 
  //               (R0 (E0 (ESym "s_region"))) 
  //               (R0 (E0 (EString "AMERICA")))))) 
  //       (P2 
  //         POr 
  //         (P0 
  //           (R2 RLike 
  //               (R0 (E0 (ESym "p_mfgr"))) 
  //               (R0 (E0 (EString "MFGR#1"))))) 
  //         (P0 
  //           (R2 RLike 
  //               (R0 (E0 (ESym "p_mfgr"))) 
  //               (R0 (E0 (EString "MFGR#2"))))))) 
  //     (J 
  //       (P0 
  //         (R2 REq 
  //             (R0 (E0 (ESym "lo_partkey"))) 
  //             (R0 (E0 (ESym "p_partkey"))))) 
  //       (J 
  //         (P0 
  //           (R2 REq 
  //               (R0 (E0 (ESym "lo_custkey"))) 
  //               (R0 (E0 (ESym "c_custkey"))))) 
  //         (J 
  //           (P0 
  //             (R2 REq 
  //                 (R0 (E0 (ESym "lo_suppkey"))) 
  //                 (R0 (E0 (ESym "s_suppkey"))))) 
  //           (J 
  //             (P0 
  //               (R2 REq 
  //                   (R0 (E0 (ESym "lo_orderdate"))) 
  //                   (R0 (E0 (ESym "d_datekey"))))) 
  //             (Q0 (TSymbol "date")) 
  //             (Q0 (TSymbol "lineorder"))) 
  //           (Q0 (TSymbol "supplier"))) 
  //         (Q0 (TSymbol "customer"))) 
  std::cout << "Delete: N311" << std::endl;
  deleteFile("/tmp/fluidb_store/data311.dat");
  // Delete: (S 
  //   (P2 
  //     PAnd 
  //     (P2 
  //       PAnd 
  //       (P0 
  //         (R2 RLike 
  //             (R0 (E0 (ESym "c_region"))) 
  //             (R0 (E0 (EString "AMERICA"))))) 
  //       (P0 
  //         (R2 RLike 
  //             (R0 (E0 (ESym "s_region"))) 
  //             (R0 (E0 (EString "AMERICA")))))) 
  //     (P2 
  //       POr 
  //       (P0 
  //         (R2 RLike 
  //             (R0 (E0 (ESym "p_mfgr"))) 
  //             (R0 (E0 (EString "MFGR#1"))))) 
  //       (P0 
  //         (R2 RLike 
  //             (R0 (E0 (ESym "p_mfgr"))) 
  //             (R0 (E0 (EString "MFGR#2"))))))) 
  //   (J 
  //     (P0 
  //       (R2 REq 
  //           (R0 (E0 (ESym "lo_partkey"))) 
  //           (R0 (E0 (ESym "p_partkey"))))) 
  //     (J 
  //       (P0 
  //         (R2 REq 
  //             (R0 (E0 (ESym "lo_custkey"))) 
  //             (R0 (E0 (ESym "c_custkey"))))) 
  //       (J 
  //         (P0 
  //           (R2 REq 
  //               (R0 (E0 (ESym "lo_suppkey"))) 
  //               (R0 (E0 (ESym "s_suppkey"))))) 
  //         (J 
  //           (P0 
  //             (R2 REq 
  //                 (R0 (E0 (ESym "lo_orderdate"))) 
  //                 (R0 (E0 (ESym "d_datekey"))))) 
  //           (Q0 (TSymbol "date")) 
  //           (Q0 (TSymbol "lineorder"))) 
  //         (Q0 (TSymbol "supplier"))) 
  //       (Q0 (TSymbol "customer"))) 
  std::cout << "Delete: N280" << std::endl;
  deleteFile("/tmp/fluidb_store/data280.dat");
  // Delete: (S 
  //   (P1 
  //     PNot 
  //     (P0 
  //       (R2 RLike 
  //           (R0 (E0 (ESym "s_region"))) 
  //           (R0 (E0 (EString "AMERICA")))))) 
  //   (J 
  //     (P0 
  //       (R2 REq 
  //           (R0 (E0 (ESym "lo_suppkey"))) 
  //           (R0 (E0 (ESym "s_suppkey"))))) 
  //     (S 
  //       (P0 
  //         (R2 RLike 
  //             (R0 (E0 (ESym "c_region"))) 
  //             (R0 (E0 (EString "AMERICA"))))) 
  //       (J 
  //         (P0 
  //           (R2 REq 
  //               (R0 (E0 (ESym "lo_custkey"))) 
  //               (R0 (E0 (ESym "c_custkey"))))) 
  //         (Q0 (TSymbol "customer")) 
  //         (Q0 (TSymbol "lineorder")))) 
  std::cout << "Delete: N300" << std::endl;
  deleteFile("/tmp/fluidb_store/data300.dat");
  // Delete: (Q2 
  //   (QLeftAntijoin 
  //     (P0 
  //       (R2 REq 
  //           (R0 (E0 (ESym "lo_orderdate"))) 
  //           (R0 (E0 (ESym "d_datekey")))))) 
  //   (Q0 (TSymbol "date")) 
  //   (S 
  //     (P0 
  //       (R2 RLike 
  //           (R0 (E0 (ESym "s_region"))) 
  //           (R0 (E0 (EString "AMERICA"))))) 
  //     (J 
  //       (P0 
  //         (R2 REq 
  //             (R0 (E0 (ESym "lo_suppkey"))) 
  //             (R0 (E0 (ESym "s_suppkey"))))) 
  //       (S 
  //         (P0 
  //           (R2 RLike 
  //               (R0 (E0 (ESym "c_region"))) 
  //               (R0 (E0 (EString "AMERICA"))))) 
  //         (J 
  //           (P0 
  //             (R2 REq 
  //                 (R0 (E0 (ESym "lo_custkey"))) 
  //                 (R0 (E0 (ESym "c_custkey"))))) 
  //           (Q0 (TSymbol "customer")) 
  //           (Q0 (TSymbol "lineorder")))) 
  std::cout << "Delete: N301" << std::endl;
  deleteFile("/tmp/fluidb_store/data301.dat");
  // Delete: (Q2 
  //   (QRightAntijoin 
  //     (P0 
  //       (R2 REq 
  //           (R0 (E0 (ESym "lo_orderdate"))) 
  //           (R0 (E0 (ESym "d_datekey")))))) 
  //   (Q0 (TSymbol "date")) 
  //   (S 
  //     (P0 
  //       (R2 RLike 
  //           (R0 (E0 (ESym "s_region"))) 
  //           (R0 (E0 (EString "AMERICA"))))) 
  //     (J 
  //       (P0 
  //         (R2 REq 
  //             (R0 (E0 (ESym "lo_suppkey"))) 
  //             (R0 (E0 (ESym "s_suppkey"))))) 
  //       (S 
  //         (P0 
  //           (R2 RLike 
  //               (R0 (E0 (ESym "c_region"))) 
  //               (R0 (E0 (EString "AMERICA"))))) 
  //         (J 
  //           (P0 
  //             (R2 REq 
  //                 (R0 (E0 (ESym "lo_custkey"))) 
  //                 (R0 (E0 (ESym "c_custkey"))))) 
  //           (Q0 (TSymbol "customer")) 
  //           (Q0 (TSymbol "lineorder")))) 
  std::cout << "Delete: N302" << std::endl;
  deleteFile("/tmp/fluidb_store/data302.dat");
  // Delete: (Q2 
  //   (QLeftAntijoin 
  //     (P0 
  //       (R2 REq 
  //           (R0 (E0 (ESym "lo_partkey"))) 
  //           (R0 (E0 (ESym "p_partkey")))))) 
  //   (S 
  //     (P0 
  //       (R2 RLike 
  //           (R0 (E0 (ESym "c_region"))) 
  //           (R0 (E0 (EString "AMERICA"))))) 
  //     (J 
  //       (P0 
  //         (R2 REq 
  //             (R0 (E0 (ESym "lo_custkey"))) 
  //             (R0 (E0 (ESym "c_custkey"))))) 
  //       (S 
  //         (P0 
  //           (R2 RLike 
  //               (R0 (E0 (ESym "s_region"))) 
  //               (R0 (E0 (EString "AMERICA"))))) 
  //         (J 
  //           (P0 
  //             (R2 REq 
  //                 (R0 (E0 (ESym "lo_suppkey"))) 
  //                 (R0 (E0 (ESym "s_suppkey"))))) 
  //           (J 
  //             (P0 
  //               (R2 REq 
  //                   (R0 (E0 (ESym "lo_orderdate"))) 
  //                   (R0 (E0 (ESym "d_datekey"))))) 
  //             (Q0 (TSymbol "date")) 
  //             (Q0 (TSymbol "lineorder"))) 
  //           (Q0 (TSymbol "supplier")))) 
  //       (Q0 (TSymbol "customer")))) 
  std::cout << "Delete: N305" << std::endl;
  deleteFile("/tmp/fluidb_store/data305.dat");
  // Delete: (Q2 
  //   (QRightAntijoin 
  //     (P0 
  //       (R2 REq 
  //           (R0 (E0 (ESym "lo_partkey"))) 
  //           (R0 (E0 (ESym "p_partkey")))))) 
  //   (S 
  //     (P0 
  //       (R2 RLike 
  //           (R0 (E0 (ESym "c_region"))) 
  //           (R0 (E0 (EString "AMERICA"))))) 
  //     (J 
  //       (P0 
  //         (R2 REq 
  //             (R0 (E0 (ESym "lo_custkey"))) 
  //             (R0 (E0 (ESym "c_custkey"))))) 
  //       (S 
  //         (P0 
  //           (R2 RLike 
  //               (R0 (E0 (ESym "s_region"))) 
  //               (R0 (E0 (EString "AMERICA"))))) 
  //         (J 
  //           (P0 
  //             (R2 REq 
  //                 (R0 (E0 (ESym "lo_suppkey"))) 
  //                 (R0 (E0 (ESym "s_suppkey"))))) 
  //           (J 
  //             (P0 
  //               (R2 REq 
  //                   (R0 (E0 (ESym "lo_orderdate"))) 
  //                   (R0 (E0 (ESym "d_datekey"))))) 
  //             (Q0 (TSymbol "date")) 
  //             (Q0 (TSymbol "lineorder"))) 
  //           (Q0 (TSymbol "supplier")))) 
  //       (Q0 (TSymbol "customer")))) 
  std::cout << "Delete: N307" << std::endl;
  deleteFile("/tmp/fluidb_store/data307.dat");
  // Delete: (J 
  //   (P0 
  //     (R2 REq (R0 (E0 (ESym "lo_partkey"))) (R0 (E0 (ESym "p_partkey"))))) 
  //   (S 
  //     (P0 
  //       (R2 RLike 
  //           (R0 (E0 (ESym "c_region"))) 
  //           (R0 (E0 (EString "AMERICA"))))) 
  //     (J 
  //       (P0 
  //         (R2 REq 
  //             (R0 (E0 (ESym "lo_custkey"))) 
  //             (R0 (E0 (ESym "c_custkey"))))) 
  //       (S 
  //         (P0 
  //           (R2 RLike 
  //               (R0 (E0 (ESym "s_region"))) 
  //               (R0 (E0 (EString "AMERICA"))))) 
  //         (J 
  //           (P0 
  //             (R2 REq 
  //                 (R0 (E0 (ESym "lo_suppkey"))) 
  //                 (R0 (E0 (ESym "s_suppkey"))))) 
  //           (J 
  //             (P0 
  //               (R2 REq 
  //                   (R0 (E0 (ESym "lo_orderdate"))) 
  //                   (R0 (E0 (ESym "d_datekey"))))) 
  //             (Q0 (TSymbol "date")) 
  //             (Q0 (TSymbol "lineorder"))) 
  //           (Q0 (TSymbol "supplier")))) 
  //       (Q0 (TSymbol "customer")))) 
  std::cout << "Delete: N306" << std::endl;
  deleteFile("/tmp/fluidb_store/data306.dat");
  // ForwardTrigger: (Just 
  //   (Left 
  //     [
  //      QJoin 
  //         (P0 
  //           (R2 REq 
  //               (R0 (E0 (ESym "lo_orderdate"))) 
  //               (R0 (E0 (ESym "d_datekey")))))
  std::cout << "ForwardTrigger: (Just \n  (Left \n    [\n     QJoin \n        (P0 \n          (R2 REq \n              (R0 (E0 (ESym \"lo_orderdate\"))) \n              (R0 (E0 (ESym \"d_datekey\")))))\n    ]))" << std::endl;
  {
    auto operation = mkEquiJoin<CallableClass14, CallableClass16, CallableClass11>(Just<const std::string>("/tmp/fluidb_store/data139.dat"), Just<const std::string>("/tmp/fluidb_store/data138.dat"), Just<const std::string>("/tmp/fluidb_store/data140.dat"), "/tmp/fluidb_store/data1.dat", "/tmp/fluidb_store/data0.dat");
    operation.run();
    operation.print_output(10);
  }
  // ForwardTrigger: (Just 
  //   (Right 
  //     [
  //      QSel 
  //         (P2 POr 
  //             (P0 (R2 REq (R0 (E0 (ESym "d_year"))) (R0 (E0 (EInt 1997))))) 
  //             (P0 (R2 REq (R0 (E0 (ESym "d_year"))) (R0 (E0 (EInt 1998))))))
  std::cout << "ForwardTrigger: (Just \n  (Right \n    [\n     QSel \n        (P2 POr \n            (P0 (R2 REq (R0 (E0 (ESym \"d_year\"))) (R0 (E0 (EInt 1997))))) \n            (P0 (R2 REq (R0 (E0 (ESym \"d_year\"))) (R0 (E0 (EInt 1998))))))\n    ]))" << std::endl;
  {
    auto operation = mkSelect<CallableClass18>(Just<const std::string>("/tmp/fluidb_store/data319.dat"), Just<const std::string>("/tmp/fluidb_store/data320.dat"), "/tmp/fluidb_store/data139.dat");
    operation.run();
    operation.print_output(10);
  }
  // ForwardTrigger: (Just 
  //   (Left 
  //     [
  //      QJoin 
  //         (P0 
  //           (R2 REq 
  //               (R0 (E0 (ESym "lo_suppkey"))) 
  //               (R0 (E0 (ESym "s_suppkey")))))
  std::cout << "ForwardTrigger: (Just \n  (Left \n    [\n     QJoin \n        (P0 \n          (R2 REq \n              (R0 (E0 (ESym \"lo_suppkey\"))) \n              (R0 (E0 (ESym \"s_suppkey\")))))\n    ]))" << std::endl;
  {
    auto operation = mkEquiJoin<CallableClass25, CallableClass27, CallableClass23>(Just<const std::string>("/tmp/fluidb_store/data322.dat"), Just<const std::string>("/tmp/fluidb_store/data321.dat"), Just<const std::string>("/tmp/fluidb_store/data323.dat"), "/tmp/fluidb_store/data319.dat", "/tmp/fluidb_store/data3.dat");
    operation.run();
    operation.print_output(10);
  }
  // Delete: (S 
  //   (P1 
  //     PNot 
  //     (P2 
  //       POr 
  //       (P0 
  //         (R2 RLike 
  //             (R0 (E0 (ESym "p_mfgr"))) 
  //             (R0 (E0 (EString "MFGR#1"))))) 
  //       (P0 
  //         (R2 RLike 
  //             (R0 (E0 (ESym "p_mfgr"))) 
  //             (R0 (E0 (EString "MFGR#2"))))))) 
  //   (J 
  //     (P0 
  //       (R2 REq 
  //           (R0 (E0 (ESym "lo_partkey"))) 
  //           (R0 (E0 (ESym "p_partkey"))))) 
  //     (S 
  //       (P2 
  //         PAnd 
  //         (P0 
  //           (R2 RLike 
  //               (R0 (E0 (ESym "s_region"))) 
  //               (R0 (E0 (EString "AMERICA"))))) 
  //         (P0 
  //           (R2 RLike 
  //               (R0 (E0 (ESym "c_region"))) 
  //               (R0 (E0 (EString "AMERICA")))))) 
  //       (J 
  //         (P0 
  //           (R2 REq 
  //               (R0 (E0 (ESym "lo_custkey"))) 
  //               (R0 (E0 (ESym "c_custkey"))))) 
  //         (J 
  //           (P0 
  //             (R2 REq 
  //                 (R0 (E0 (ESym "lo_suppkey"))) 
  //                 (R0 (E0 (ESym "s_suppkey"))))) 
  //           (J 
  //             (P0 
  //               (R2 REq 
  //                   (R0 (E0 (ESym "lo_orderdate"))) 
  //                   (R0 (E0 (ESym "d_datekey"))))) 
  //             (Q0 (TSymbol "date")) 
  //             (Q0 (TSymbol "lineorder"))) 
  //           (Q0 (TSymbol "supplier"))) 
  //         (Q0 (TSymbol "customer")))) 
  std::cout << "Delete: N310" << std::endl;
  deleteFile("/tmp/fluidb_store/data310.dat");
  // Delete: (S 
  //   (P2 
  //     PAnd 
  //     (P0 
  //       (R2 RLike 
  //           (R0 (E0 (ESym "c_region"))) 
  //           (R0 (E0 (EString "AMERICA"))))) 
  //     (P0 
  //       (R2 RLike 
  //           (R0 (E0 (ESym "s_region"))) 
  //           (R0 (E0 (EString "AMERICA")))))) 
  //   (J 
  //     (P0 
  //       (R2 REq 
  //           (R0 (E0 (ESym "lo_suppkey"))) 
  //           (R0 (E0 (ESym "s_suppkey"))))) 
  //     (J 
  //       (P0 
  //         (R2 REq 
  //             (R0 (E0 (ESym "lo_custkey"))) 
  //             (R0 (E0 (ESym "c_custkey"))))) 
  //       (Q0 (TSymbol "customer")) 
  //       (Q0 (TSymbol "lineorder"))) 
  std::cout << "Delete: N291" << std::endl;
  deleteFile("/tmp/fluidb_store/data291.dat");
  // ForwardTrigger: (Just 
  //   (Right 
  //     [
  //      QSel 
  //         (P0 
  //           (R2 RLike 
  //               (R0 (E0 (ESym "s_region"))) 
  //               (R0 (E0 (EString "AMERICA")))))
  std::cout << "ForwardTrigger: (Just \n  (Right \n    [\n     QSel \n        (P0 \n          (R2 RLike \n              (R0 (E0 (ESym \"s_region\"))) \n              (R0 (E0 (EString \"AMERICA\")))))\n    ]))" << std::endl;
  {
    auto operation = mkSelect<CallableClass29>(Just<const std::string>("/tmp/fluidb_store/data317.dat"), Just<const std::string>("/tmp/fluidb_store/data326.dat"), "/tmp/fluidb_store/data322.dat");
    operation.run();
    operation.print_output(10);
  }
  // Delete: (S 
  //   (P2 
  //     PAnd 
  //     (P0 
  //       (R2 RLike 
  //           (R0 (E0 (ESym "s_region"))) 
  //           (R0 (E0 (EString "AMERICA"))))) 
  //     (P0 
  //       (R2 RLike 
  //           (R0 (E0 (ESym "c_region"))) 
  //           (R0 (E0 (EString "AMERICA")))))) 
  //   (J 
  //     (P0 
  //       (R2 REq 
  //           (R0 (E0 (ESym "lo_custkey"))) 
  //           (R0 (E0 (ESym "c_custkey"))))) 
  //     (J 
  //       (P0 
  //         (R2 REq 
  //             (R0 (E0 (ESym "lo_suppkey"))) 
  //             (R0 (E0 (ESym "s_suppkey"))))) 
  //       (J 
  //         (P0 
  //           (R2 REq 
  //               (R0 (E0 (ESym "lo_orderdate"))) 
  //               (R0 (E0 (ESym "d_datekey"))))) 
  //         (Q0 (TSymbol "date")) 
  //         (Q0 (TSymbol "lineorder"))) 
  //       (Q0 (TSymbol "supplier"))) 
  std::cout << "Delete: N282" << std::endl;
  deleteFile("/tmp/fluidb_store/data282.dat");
  // ForwardTrigger: (Just 
  //   (Left 
  //     [
  //      QJoin 
  //         (P0 
  //           (R2 REq 
  //               (R0 (E0 (ESym "lo_custkey"))) 
  //               (R0 (E0 (ESym "c_custkey")))))
  std::cout << "ForwardTrigger: (Just \n  (Left \n    [\n     QJoin \n        (P0 \n          (R2 REq \n              (R0 (E0 (ESym \"lo_custkey\"))) \n              (R0 (E0 (ESym \"c_custkey\")))))\n    ]))" << std::endl;
  {
    auto operation = mkEquiJoin<CallableClass37, CallableClass39, CallableClass35>(Just<const std::string>("/tmp/fluidb_store/data328.dat"), Just<const std::string>("/tmp/fluidb_store/data327.dat"), Just<const std::string>("/tmp/fluidb_store/data329.dat"), "/tmp/fluidb_store/data317.dat", "/run/user/1000/fluidb-data/customer.dat");
    operation.run();
    operation.print_output(10);
  }
  // Delete: (Q2 
  //   (QLeftAntijoin 
  //     (P0 
  //       (R2 REq 
  //           (R0 (E0 (ESym "lo_suppkey"))) 
  //           (R0 (E0 (ESym "s_suppkey")))))) 
  //   (S 
  //     (P2 POr 
  //         (P0 (R2 REq (R0 (E0 (ESym "d_year"))) (R0 (E0 (EInt 1997))))) 
  //         (P0 (R2 REq (R0 (E0 (ESym "d_year"))) (R0 (E0 (EInt 1998)))))) 
  //     (J 
  //       (P0 
  //         (R2 REq 
  //             (R0 (E0 (ESym "lo_orderdate"))) 
  //             (R0 (E0 (ESym "d_datekey"))))) 
  //       (Q0 (TSymbol "date")) 
  //       (Q0 (TSymbol "lineorder")))) 
  std::cout << "Delete: N321" << std::endl;
  deleteFile("/tmp/fluidb_store/data321.dat");
  std::cout << "Delete: N3" << std::endl;
  deleteFile("/tmp/fluidb_store/data3.dat");
  // Delete: (S 
  //   (P2 POr 
  //       (P0 (R2 REq (R0 (E0 (ESym "d_year"))) (R0 (E0 (EInt 1997))))) 
  //       (P0 (R2 REq (R0 (E0 (ESym "d_year"))) (R0 (E0 (EInt 1998)))))) 
  //   (J 
  //     (P0 
  //       (R2 REq 
  //           (R0 (E0 (ESym "lo_orderdate"))) 
  //           (R0 (E0 (ESym "d_datekey"))))) 
  //     (Q0 (TSymbol "date")) 
  std::cout << "Delete: N319" << std::endl;
  deleteFile("/tmp/fluidb_store/data319.dat");
  // Delete: (Q2 
  //   (QRightAntijoin 
  //     (P0 
  //       (R2 REq 
  //           (R0 (E0 (ESym "lo_suppkey"))) 
  //           (R0 (E0 (ESym "s_suppkey")))))) 
  //   (S 
  //     (P2 POr 
  //         (P0 (R2 REq (R0 (E0 (ESym "d_year"))) (R0 (E0 (EInt 1997))))) 
  //         (P0 (R2 REq (R0 (E0 (ESym "d_year"))) (R0 (E0 (EInt 1998)))))) 
  //     (J 
  //       (P0 
  //         (R2 REq 
  //             (R0 (E0 (ESym "lo_orderdate"))) 
  //             (R0 (E0 (ESym "d_datekey"))))) 
  //       (Q0 (TSymbol "date")) 
  //       (Q0 (TSymbol "lineorder")))) 
  std::cout << "Delete: N323" << std::endl;
  deleteFile("/tmp/fluidb_store/data323.dat");
  // Delete: (Q2 
  //   (QLeftAntijoin 
  //     (P0 
  //       (R2 REq 
  //           (R0 (E0 (ESym "lo_orderdate"))) 
  //           (R0 (E0 (ESym "d_datekey")))))) 
  //   (Q0 (TSymbol "date")) 
  std::cout << "Delete: N138" << std::endl;
  deleteFile("/tmp/fluidb_store/data138.dat");
  // Delete: (Q2 
  //   (QRightAntijoin 
  //     (P0 
  //       (R2 REq 
  //           (R0 (E0 (ESym "lo_orderdate"))) 
  //           (R0 (E0 (ESym "d_datekey")))))) 
  //   (Q0 (TSymbol "date")) 
  std::cout << "Delete: N140" << std::endl;
  deleteFile("/tmp/fluidb_store/data140.dat");
  // Delete: (S 
  //   (P1 
  //     PNot 
  //     (P0 
  //       (R2 RLike 
  //           (R0 (E0 (ESym "s_region"))) 
  //           (R0 (E0 (EString "AMERICA")))))) 
  //   (J 
  //     (P0 
  //       (R2 REq 
  //           (R0 (E0 (ESym "lo_suppkey"))) 
  //           (R0 (E0 (ESym "s_suppkey"))))) 
  //     (S 
  //       (P2 POr 
  //           (P0 (R2 REq (R0 (E0 (ESym "d_year"))) (R0 (E0 (EInt 1997))))) 
  //           (P0 (R2 REq (R0 (E0 (ESym "d_year"))) (R0 (E0 (EInt 1998)))))) 
  //       (J 
  //         (P0 
  //           (R2 REq 
  //               (R0 (E0 (ESym "lo_orderdate"))) 
  //               (R0 (E0 (ESym "d_datekey"))))) 
  //         (Q0 (TSymbol "date")) 
  //         (Q0 (TSymbol "lineorder")))) 
  std::cout << "Delete: N326" << std::endl;
  deleteFile("/tmp/fluidb_store/data326.dat");
  // Delete: (J 
  //   (P0 
  //     (R2 REq (R0 (E0 (ESym "lo_suppkey"))) (R0 (E0 (ESym "s_suppkey"))))) 
  //   (S 
  //     (P2 POr 
  //         (P0 (R2 REq (R0 (E0 (ESym "d_year"))) (R0 (E0 (EInt 1997))))) 
  //         (P0 (R2 REq (R0 (E0 (ESym "d_year"))) (R0 (E0 (EInt 1998)))))) 
  //     (J 
  //       (P0 
  //         (R2 REq 
  //             (R0 (E0 (ESym "lo_orderdate"))) 
  //             (R0 (E0 (ESym "d_datekey"))))) 
  //       (Q0 (TSymbol "date")) 
  //       (Q0 (TSymbol "lineorder")))) 
  std::cout << "Delete: N322" << std::endl;
  deleteFile("/tmp/fluidb_store/data322.dat");
  // ForwardTrigger: (Just 
  //   (Right 
  //     [
  //      QSel 
  //         (P0 
  //           (R2 RLike 
  //               (R0 (E0 (ESym "c_region"))) 
  //               (R0 (E0 (EString "AMERICA")))))
  std::cout << "ForwardTrigger: (Just \n  (Right \n    [\n     QSel \n        (P0 \n          (R2 RLike \n              (R0 (E0 (ESym \"c_region\"))) \n              (R0 (E0 (EString \"AMERICA\")))))\n    ]))" << std::endl;
  {
    auto operation = mkSelect<CallableClass41>(Just<const std::string>("/tmp/fluidb_store/data315.dat"), Just<const std::string>("/tmp/fluidb_store/data332.dat"), "/tmp/fluidb_store/data328.dat");
    operation.run();
    operation.print_output(10);
  }
  // Delete: (Q2 
  //   (QLeftAntijoin 
  //     (P0 
  //       (R2 REq 
  //           (R0 (E0 (ESym "lo_custkey"))) 
  //           (R0 (E0 (ESym "c_custkey")))))) 
  //   (S 
  //     (P0 
  //       (R2 RLike 
  //           (R0 (E0 (ESym "s_region"))) 
  //           (R0 (E0 (EString "AMERICA"))))) 
  //     (J 
  //       (P0 
  //         (R2 REq 
  //             (R0 (E0 (ESym "lo_suppkey"))) 
  //             (R0 (E0 (ESym "s_suppkey"))))) 
  //       (S 
  //         (P2 POr 
  //             (P0 (R2 REq (R0 (E0 (ESym "d_year"))) (R0 (E0 (EInt 1997))))) 
  //             (P0 (R2 REq (R0 (E0 (ESym "d_year"))) (R0 (E0 (EInt 1998)))))) 
  //         (J 
  //           (P0 
  //             (R2 REq 
  //                 (R0 (E0 (ESym "lo_orderdate"))) 
  //                 (R0 (E0 (ESym "d_datekey"))))) 
  //           (Q0 (TSymbol "date")) 
  //           (Q0 (TSymbol "lineorder")))) 
  //       (Q0 (TSymbol "supplier")))) 
  std::cout << "Delete: N327" << std::endl;
  deleteFile("/tmp/fluidb_store/data327.dat");
  std::cout << "Delete: N4" << std::endl;
  deleteFile("/run/user/1000/fluidb-data/customer.dat");
  // Delete: (S 
  //   (P2 
  //     PAnd 
  //     (P2 POr 
  //         (P0 (R2 REq (R0 (E0 (ESym "d_year"))) (R0 (E0 (EInt 1997))))) 
  //         (P0 (R2 REq (R0 (E0 (ESym "d_year"))) (R0 (E0 (EInt 1998)))))) 
  //     (P0 
  //       (R2 RLike 
  //           (R0 (E0 (ESym "s_region"))) 
  //           (R0 (E0 (EString "AMERICA")))))) 
  //   (J 
  //     (P0 
  //       (R2 REq 
  //           (R0 (E0 (ESym "lo_suppkey"))) 
  //           (R0 (E0 (ESym "s_suppkey"))))) 
  //     (J 
  //       (P0 
  //         (R2 REq 
  //             (R0 (E0 (ESym "lo_orderdate"))) 
  //             (R0 (E0 (ESym "d_datekey"))))) 
  //       (Q0 (TSymbol "date")) 
  //       (Q0 (TSymbol "lineorder"))) 
  std::cout << "Delete: N317" << std::endl;
  deleteFile("/tmp/fluidb_store/data317.dat");
  // Delete: (S 
  //   (P1 
  //     PNot 
  //     (P2 POr 
  //         (P0 (R2 REq (R0 (E0 (ESym "d_year"))) (R0 (E0 (EInt 1997))))) 
  //         (P0 (R2 REq (R0 (E0 (ESym "d_year"))) (R0 (E0 (EInt 1998))))))) 
  //   (J 
  //     (P0 
  //       (R2 REq 
  //           (R0 (E0 (ESym "lo_orderdate"))) 
  //           (R0 (E0 (ESym "d_datekey"))))) 
  //     (Q0 (TSymbol "date")) 
  std::cout << "Delete: N320" << std::endl;
  deleteFile("/tmp/fluidb_store/data320.dat");
  // Delete: (J 
  //   (P0 
  //     (R2 REq 
  //         (R0 (E0 (ESym "lo_orderdate"))) 
  //         (R0 (E0 (ESym "d_datekey"))))) 
  //   (Q0 (TSymbol "date")) 
  std::cout << "Delete: N139" << std::endl;
  deleteFile("/tmp/fluidb_store/data139.dat");
  // ForwardTrigger: (Just 
  //   (Left 
  //     [
  //      QJoin 
  //         (P0 
  //           (R2 REq 
  //               (R0 (E0 (ESym "lo_partkey"))) 
  //               (R0 (E0 (ESym "p_partkey")))))
  std::cout << "ForwardTrigger: (Just \n  (Left \n    [\n     QJoin \n        (P0 \n          (R2 REq \n              (R0 (E0 (ESym \"lo_partkey\"))) \n              (R0 (E0 (ESym \"p_partkey\")))))\n    ]))" << std::endl;
  {
    auto operation = mkEquiJoin<CallableClass49, CallableClass51, CallableClass47>(Just<const std::string>("/tmp/fluidb_store/data336.dat"), Just<const std::string>("/tmp/fluidb_store/data335.dat"), Just<const std::string>("/tmp/fluidb_store/data337.dat"), "/tmp/fluidb_store/data315.dat", "/run/user/1000/fluidb-data/part.dat");
    operation.run();
    operation.print_output(10);
  }
  // ForwardTrigger: (Just 
  //   (Right 
  //     [
  //      QSel 
  //         (P2 
  //           POr 
  //           (P0 
  //             (R2 RLike 
  //                 (R0 (E0 (ESym "p_mfgr"))) 
  //                 (R0 (E0 (EString "MFGR#1"))))) 
  //           (P0 
  //             (R2 RLike 
  //                 (R0 (E0 (ESym "p_mfgr"))) 
  //                 (R0 (E0 (EString "MFGR#2"))))))
  std::cout << "ForwardTrigger: (Just \n  (Right \n    [\n     QSel \n        (P2 \n          POr \n          (P0 \n            (R2 RLike \n                (R0 (E0 (ESym \"p_mfgr\"))) \n                (R0 (E0 (EString \"MFGR#1\"))))) \n          (P0 \n            (R2 RLike \n                (R0 (E0 (ESym \"p_mfgr\"))) \n                (R0 (E0 (EString \"MFGR#2\"))))))\n    ]))" << std::endl;
  {
    auto operation = mkSelect<CallableClass53>(Just<const std::string>("/tmp/fluidb_store/data313.dat"), Just<const std::string>("/tmp/fluidb_store/data340.dat"), "/tmp/fluidb_store/data336.dat");
    operation.run();
    operation.print_output(10);
  }
  // ForwardTrigger: (Just 
  //   (Right 
  //     [
  //      QGroup 
  //         [
  //          (ESym "d_year",E0 (NAggr AggrFirst (E0 (ESym "d_year")))),
  //          (ESym "s_nation",E0 (NAggr AggrFirst (E0 (ESym "s_nation")))),
  //          (ESym "p_category",
  //           E0 (NAggr AggrFirst (E0 (ESym "p_category")))),
  //          (
  //            ESym "profit",
  //            E0 
  //               (NAggr 
  //                 AggrSum 
  //                 (E2 ESub 
  //                     (E0 (ESym "lo_revenue")) 
  //                     (E0 (ESym "lo_supplycost"))))
  //           )
  //         ] 
  //         [E0 (ESym "d_year"),E0 (ESym "s_nation"),E0 (ESym "p_category")]
  std::cout << "ForwardTrigger: (Just \n  (Right \n    [\n     QGroup \n        [\n         (ESym \"d_year\",E0 (NAggr AggrFirst (E0 (ESym \"d_year\")))),\n         (ESym \"s_nation\",E0 (NAggr AggrFirst (E0 (ESym \"s_nation\")))),\n         (ESym \"p_category\",\n          E0 (NAggr AggrFirst (E0 (ESym \"p_category\")))),\n         (\n           ESym \"profit\",\n           E0 \n              (NAggr \n                AggrSum \n                (E2 ESub \n                    (E0 (ESym \"lo_revenue\")) \n                    (E0 (ESym \"lo_supplycost\"))))\n          )\n        ] \n        [E0 (ESym \"d_year\"),E0 (ESym \"s_nation\"),E0 (ESym \"p_category\")]\n    ]))" << std::endl;
  {
    auto operation = mkAggregation<CallableClass61, CallableClass63>(Just<const std::string>("/tmp/fluidb_store/data341.dat"), Just<const std::string>("/tmp/fluidb_store/data313.dat"), "/tmp/fluidb_store/data313.dat");
    operation.run();
    operation.print_output(10);
  }
  // ForwardTrigger: (Just 
  //   (Right 
  //     [
  //      QSort 
  //         [E0 (ESym "d_year"),E0 (ESym "s_nation"),E0 (ESym "p_category")]
  std::cout << "ForwardTrigger: (Just \n  (Right \n    [\n     QSort \n        [E0 (ESym \"d_year\"),E0 (ESym \"s_nation\"),E0 (ESym \"p_category\")]\n    ]))" << std::endl;
  {
    auto operation = mkSort<CallableClass65>(Just<const std::string>("/tmp/fluidb_store/data342.dat"), Just<const std::string>("/tmp/fluidb_store/data341.dat"), "/tmp/fluidb_store/data341.dat");
    operation.run();
    operation.print_output(10);
  }
  report_counters();
  return 0;
}
