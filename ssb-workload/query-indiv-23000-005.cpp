#include <array>

#include <string>

#include <codegen.hh>
class Record41 {
 public:
  Record41(unsigned __sortElem0, fluidb_string<10> __sortElem1) : sortElem0(__sortElem0), sortElem1(__sortElem1)
  {
  }
  Record41() 
  {
  }
  std::string show() const{
    std::stringstream o;
    o << sortElem0 << " | " << arrToString(sortElem1);
    return o.str();
  }
  bool operator <(const Record41& otherRec) const{
    return (otherRec.sortElem0 < sortElem0 && otherRec.sortElem1 < sortElem1);
  }
  bool operator ==(const Record41& otherRec) const{
    return (otherRec.sortElem0 == sortElem0 && otherRec.sortElem1 == sortElem1);
  }
  bool operator !=(const Record41& otherRec) const{
    return (otherRec.sortElem0 != sortElem0 || otherRec.sortElem1 != sortElem1);
  }
  unsigned sortElem0;
  fluidb_string<10> sortElem1;
 private:
};


class Record25 {
 public:
  Record25(unsigned __sym__0__7178003535380331304, fluidb_string<55> __sym__0___45_7020257275696364520, fluidb_string<25> __sym__0___45_6307179734719967033, fluidb_string<7> __sym__0__4568304886257136061, fluidb_string<10> __sym__0___45_6291097039630000265, fluidb_string<11> __sym__0__551327770031967739, fluidb_string<25> __sym__0__3827696365022297353, unsigned __sym__0___45_1779543743759935870, fluidb_string<10> __sym__0__3752090135924368535) : sym__0__7178003535380331304(__sym__0__7178003535380331304), sym__0___45_7020257275696364520(__sym__0___45_7020257275696364520), sym__0___45_6307179734719967033(__sym__0___45_6307179734719967033), sym__0__4568304886257136061(__sym__0__4568304886257136061), sym__0___45_6291097039630000265(__sym__0___45_6291097039630000265), sym__0__551327770031967739(__sym__0__551327770031967739), sym__0__3827696365022297353(__sym__0__3827696365022297353), sym__0___45_1779543743759935870(__sym__0___45_1779543743759935870), sym__0__3752090135924368535(__sym__0__3752090135924368535)
  {
  }
  Record25() 
  {
  }
  std::string show() const{
    std::stringstream o;
    o << sym__0__7178003535380331304 << " | " << arrToString(sym__0___45_7020257275696364520) << " | " << arrToString(sym__0___45_6307179734719967033) << " | " << arrToString(sym__0__4568304886257136061) << " | " << arrToString(sym__0___45_6291097039630000265) << " | " << arrToString(sym__0__551327770031967739) << " | " << arrToString(sym__0__3827696365022297353) << " | " << sym__0___45_1779543743759935870 << " | " << arrToString(sym__0__3752090135924368535);
    return o.str();
  }
  bool operator <(const Record25& otherRec) const{
    return (otherRec.sym__0__7178003535380331304 < sym__0__7178003535380331304 && (otherRec.sym__0___45_7020257275696364520 < sym__0___45_7020257275696364520 && (otherRec.sym__0___45_6307179734719967033 < sym__0___45_6307179734719967033 && (otherRec.sym__0__4568304886257136061 < sym__0__4568304886257136061 && (otherRec.sym__0___45_6291097039630000265 < sym__0___45_6291097039630000265 && (otherRec.sym__0__551327770031967739 < sym__0__551327770031967739 && (otherRec.sym__0__3827696365022297353 < sym__0__3827696365022297353 && (otherRec.sym__0___45_1779543743759935870 < sym__0___45_1779543743759935870 && otherRec.sym__0__3752090135924368535 < sym__0__3752090135924368535))))))));
  }
  bool operator ==(const Record25& otherRec) const{
    return (otherRec.sym__0__7178003535380331304 == sym__0__7178003535380331304 && (otherRec.sym__0___45_7020257275696364520 == sym__0___45_7020257275696364520 && (otherRec.sym__0___45_6307179734719967033 == sym__0___45_6307179734719967033 && (otherRec.sym__0__4568304886257136061 == sym__0__4568304886257136061 && (otherRec.sym__0___45_6291097039630000265 == sym__0___45_6291097039630000265 && (otherRec.sym__0__551327770031967739 == sym__0__551327770031967739 && (otherRec.sym__0__3827696365022297353 == sym__0__3827696365022297353 && (otherRec.sym__0___45_1779543743759935870 == sym__0___45_1779543743759935870 && otherRec.sym__0__3752090135924368535 == sym__0__3752090135924368535))))))));
  }
  bool operator !=(const Record25& otherRec) const{
    return (otherRec.sym__0__7178003535380331304 != sym__0__7178003535380331304 || (otherRec.sym__0___45_7020257275696364520 != sym__0___45_7020257275696364520 || (otherRec.sym__0___45_6307179734719967033 != sym__0___45_6307179734719967033 || (otherRec.sym__0__4568304886257136061 != sym__0__4568304886257136061 || (otherRec.sym__0___45_6291097039630000265 != sym__0___45_6291097039630000265 || (otherRec.sym__0__551327770031967739 != sym__0__551327770031967739 || (otherRec.sym__0__3827696365022297353 != sym__0__3827696365022297353 || (otherRec.sym__0___45_1779543743759935870 != sym__0___45_1779543743759935870 || otherRec.sym__0__3752090135924368535 != sym__0__3752090135924368535))))))));
  }
  unsigned sym__0__7178003535380331304;
  fluidb_string<55> sym__0___45_7020257275696364520;
  fluidb_string<25> sym__0___45_6307179734719967033;
  fluidb_string<7> sym__0__4568304886257136061;
  fluidb_string<10> sym__0___45_6291097039630000265;
  fluidb_string<11> sym__0__551327770031967739;
  fluidb_string<25> sym__0__3827696365022297353;
  unsigned sym__0___45_1779543743759935870;
  fluidb_string<10> sym__0__3752090135924368535;
 private:
};


class Record26 {
 public:
  Record26(unsigned __sym__0__7069852625741277438, fluidb_string<25> __sym__0___45_2139184416220787303, fluidb_string<40> __sym__0__6834910062454089307, fluidb_string<16> __sym__0___45_673637979750308955, fluidb_string<16> __sym__0__7353040165187485943, fluidb_string<13> __sym__0___45_3600959643487303198, fluidb_string<15> __sym__0__1586920362281366553, unsigned __sym__0___45_565293263947163771, int __sym__0___45_843396218047479825, unsigned __sym__0___45_6341950231013217833, unsigned __sym__0__1045058483100812033, unsigned __sym__0__3789297121224398166, unsigned __sym__0__7633871876750507011, fluidb_string<21> __sym__0___45_1913197190575800618, unsigned __sym__0__5022607639284586068, fluidb_string<10> __sym__0___45_4537203481097655209, unsigned __sym__0___45_4177776814409117721, double __sym__0___45_1641792039791357051, unsigned __sym__0__9155042948135519075, double __sym__0___45_1524873931413302067, unsigned __sym__0__5123726051002722313, unsigned __sym__0___45_3964194374284396198, double __sym__0___45_3323287974231174848, fluidb_string<13> __sym__0___45_7635081431606838648, unsigned __sym__0__3374832300737452457, fluidb_string<18> __sym__0___45_2738400311900405319, fluidb_string<9> __sym__0__922566035134170359, fluidb_string<9> __sym__0___45_4970177704815948360, unsigned __sym__0__1953889797750115686, unsigned __sym__0__7036968840507665704, fluidb_string<7> __sym__0__2424422746197752657, unsigned __sym__0___45_899504608738992510, unsigned __sym__0__2199101055335955185, unsigned __sym__0__8162945309743176777, unsigned __sym__0__5658677538842948015, unsigned __sym__0___45_1804682623039322536, fluidb_string<15> __sym__0___45_4150473036734596643, fluidb_string<2> __sym__0___45_1494825655055665211, fluidb_string<2> __sym__0__7243345290037361860, fluidb_string<2> __sym__0___45_5621333005798540324, fluidb_string<2> __sym__0___45_6906996774260360338, unsigned __sym__0___45_6223982643952099801, fluidb_string<55> __sym__0___45_4582877986939568489, fluidb_string<25> __sym__0__8952063493441915716, fluidb_string<7> __sym__0___45_1824395327270788210, fluidb_string<10> __sym__0___45_4574956228592531724, fluidb_string<11> __sym__0___45_3583563823835889744, fluidb_string<25> __sym__0__1035932931239708898, unsigned __sym__0__2873925968864442957, fluidb_string<10> __sym__0___45_6275854556107336556) : sym__0__7069852625741277438(__sym__0__7069852625741277438), sym__0___45_2139184416220787303(__sym__0___45_2139184416220787303), sym__0__6834910062454089307(__sym__0__6834910062454089307), sym__0___45_673637979750308955(__sym__0___45_673637979750308955), sym__0__7353040165187485943(__sym__0__7353040165187485943), sym__0___45_3600959643487303198(__sym__0___45_3600959643487303198), sym__0__1586920362281366553(__sym__0__1586920362281366553), sym__0___45_565293263947163771(__sym__0___45_565293263947163771), sym__0___45_843396218047479825(__sym__0___45_843396218047479825), sym__0___45_6341950231013217833(__sym__0___45_6341950231013217833), sym__0__1045058483100812033(__sym__0__1045058483100812033), sym__0__3789297121224398166(__sym__0__3789297121224398166), sym__0__7633871876750507011(__sym__0__7633871876750507011), sym__0___45_1913197190575800618(__sym__0___45_1913197190575800618), sym__0__5022607639284586068(__sym__0__5022607639284586068), sym__0___45_4537203481097655209(__sym__0___45_4537203481097655209), sym__0___45_4177776814409117721(__sym__0___45_4177776814409117721), sym__0___45_1641792039791357051(__sym__0___45_1641792039791357051), sym__0__9155042948135519075(__sym__0__9155042948135519075), sym__0___45_1524873931413302067(__sym__0___45_1524873931413302067), sym__0__5123726051002722313(__sym__0__5123726051002722313), sym__0___45_3964194374284396198(__sym__0___45_3964194374284396198), sym__0___45_3323287974231174848(__sym__0___45_3323287974231174848), sym__0___45_7635081431606838648(__sym__0___45_7635081431606838648), sym__0__3374832300737452457(__sym__0__3374832300737452457), sym__0___45_2738400311900405319(__sym__0___45_2738400311900405319), sym__0__922566035134170359(__sym__0__922566035134170359), sym__0___45_4970177704815948360(__sym__0___45_4970177704815948360), sym__0__1953889797750115686(__sym__0__1953889797750115686), sym__0__7036968840507665704(__sym__0__7036968840507665704), sym__0__2424422746197752657(__sym__0__2424422746197752657), sym__0___45_899504608738992510(__sym__0___45_899504608738992510), sym__0__2199101055335955185(__sym__0__2199101055335955185), sym__0__8162945309743176777(__sym__0__8162945309743176777), sym__0__5658677538842948015(__sym__0__5658677538842948015), sym__0___45_1804682623039322536(__sym__0___45_1804682623039322536), sym__0___45_4150473036734596643(__sym__0___45_4150473036734596643), sym__0___45_1494825655055665211(__sym__0___45_1494825655055665211), sym__0__7243345290037361860(__sym__0__7243345290037361860), sym__0___45_5621333005798540324(__sym__0___45_5621333005798540324), sym__0___45_6906996774260360338(__sym__0___45_6906996774260360338), sym__0___45_6223982643952099801(__sym__0___45_6223982643952099801), sym__0___45_4582877986939568489(__sym__0___45_4582877986939568489), sym__0__8952063493441915716(__sym__0__8952063493441915716), sym__0___45_1824395327270788210(__sym__0___45_1824395327270788210), sym__0___45_4574956228592531724(__sym__0___45_4574956228592531724), sym__0___45_3583563823835889744(__sym__0___45_3583563823835889744), sym__0__1035932931239708898(__sym__0__1035932931239708898), sym__0__2873925968864442957(__sym__0__2873925968864442957), sym__0___45_6275854556107336556(__sym__0___45_6275854556107336556)
  {
  }
  Record26() 
  {
  }
  std::string show() const{
    std::stringstream o;
    o << sym__0__7069852625741277438 << " | " << arrToString(sym__0___45_2139184416220787303) << " | " << arrToString(sym__0__6834910062454089307) << " | " << arrToString(sym__0___45_673637979750308955) << " | " << arrToString(sym__0__7353040165187485943) << " | " << arrToString(sym__0___45_3600959643487303198) << " | " << arrToString(sym__0__1586920362281366553) << " | " << sym__0___45_565293263947163771 << " | " << sym__0___45_843396218047479825 << " | " << sym__0___45_6341950231013217833 << " | " << sym__0__1045058483100812033 << " | " << sym__0__3789297121224398166 << " | " << sym__0__7633871876750507011 << " | " << arrToString(sym__0___45_1913197190575800618) << " | " << sym__0__5022607639284586068 << " | " << arrToString(sym__0___45_4537203481097655209) << " | " << sym__0___45_4177776814409117721 << " | " << sym__0___45_1641792039791357051 << " | " << sym__0__9155042948135519075 << " | " << sym__0___45_1524873931413302067 << " | " << sym__0__5123726051002722313 << " | " << sym__0___45_3964194374284396198 << " | " << sym__0___45_3323287974231174848 << " | " << arrToString(sym__0___45_7635081431606838648) << " | " << sym__0__3374832300737452457 << " | " << arrToString(sym__0___45_2738400311900405319) << " | " << arrToString(sym__0__922566035134170359) << " | " << arrToString(sym__0___45_4970177704815948360) << " | " << sym__0__1953889797750115686 << " | " << sym__0__7036968840507665704 << " | " << arrToString(sym__0__2424422746197752657) << " | " << sym__0___45_899504608738992510 << " | " << sym__0__2199101055335955185 << " | " << sym__0__8162945309743176777 << " | " << sym__0__5658677538842948015 << " | " << sym__0___45_1804682623039322536 << " | " << arrToString(sym__0___45_4150473036734596643) << " | " << arrToString(sym__0___45_1494825655055665211) << " | " << arrToString(sym__0__7243345290037361860) << " | " << arrToString(sym__0___45_5621333005798540324) << " | " << arrToString(sym__0___45_6906996774260360338) << " | " << sym__0___45_6223982643952099801 << " | " << arrToString(sym__0___45_4582877986939568489) << " | " << arrToString(sym__0__8952063493441915716) << " | " << arrToString(sym__0___45_1824395327270788210) << " | " << arrToString(sym__0___45_4574956228592531724) << " | " << arrToString(sym__0___45_3583563823835889744) << " | " << arrToString(sym__0__1035932931239708898) << " | " << sym__0__2873925968864442957 << " | " << arrToString(sym__0___45_6275854556107336556);
    return o.str();
  }
  bool operator <(const Record26& otherRec) const{
    return (otherRec.sym__0__7069852625741277438 < sym__0__7069852625741277438 && (otherRec.sym__0___45_2139184416220787303 < sym__0___45_2139184416220787303 && (otherRec.sym__0__6834910062454089307 < sym__0__6834910062454089307 && (otherRec.sym__0___45_673637979750308955 < sym__0___45_673637979750308955 && (otherRec.sym__0__7353040165187485943 < sym__0__7353040165187485943 && (otherRec.sym__0___45_3600959643487303198 < sym__0___45_3600959643487303198 && (otherRec.sym__0__1586920362281366553 < sym__0__1586920362281366553 && (otherRec.sym__0___45_565293263947163771 < sym__0___45_565293263947163771 && (otherRec.sym__0___45_843396218047479825 < sym__0___45_843396218047479825 && (otherRec.sym__0___45_6341950231013217833 < sym__0___45_6341950231013217833 && (otherRec.sym__0__1045058483100812033 < sym__0__1045058483100812033 && (otherRec.sym__0__3789297121224398166 < sym__0__3789297121224398166 && (otherRec.sym__0__7633871876750507011 < sym__0__7633871876750507011 && (otherRec.sym__0___45_1913197190575800618 < sym__0___45_1913197190575800618 && (otherRec.sym__0__5022607639284586068 < sym__0__5022607639284586068 && (otherRec.sym__0___45_4537203481097655209 < sym__0___45_4537203481097655209 && (otherRec.sym__0___45_4177776814409117721 < sym__0___45_4177776814409117721 && (otherRec.sym__0___45_1641792039791357051 < sym__0___45_1641792039791357051 && (otherRec.sym__0__9155042948135519075 < sym__0__9155042948135519075 && (otherRec.sym__0___45_1524873931413302067 < sym__0___45_1524873931413302067 && (otherRec.sym__0__5123726051002722313 < sym__0__5123726051002722313 && (otherRec.sym__0___45_3964194374284396198 < sym__0___45_3964194374284396198 && (otherRec.sym__0___45_3323287974231174848 < sym__0___45_3323287974231174848 && (otherRec.sym__0___45_7635081431606838648 < sym__0___45_7635081431606838648 && (otherRec.sym__0__3374832300737452457 < sym__0__3374832300737452457 && (otherRec.sym__0___45_2738400311900405319 < sym__0___45_2738400311900405319 && (otherRec.sym__0__922566035134170359 < sym__0__922566035134170359 && (otherRec.sym__0___45_4970177704815948360 < sym__0___45_4970177704815948360 && (otherRec.sym__0__1953889797750115686 < sym__0__1953889797750115686 && (otherRec.sym__0__7036968840507665704 < sym__0__7036968840507665704 && (otherRec.sym__0__2424422746197752657 < sym__0__2424422746197752657 && (otherRec.sym__0___45_899504608738992510 < sym__0___45_899504608738992510 && (otherRec.sym__0__2199101055335955185 < sym__0__2199101055335955185 && (otherRec.sym__0__8162945309743176777 < sym__0__8162945309743176777 && (otherRec.sym__0__5658677538842948015 < sym__0__5658677538842948015 && (otherRec.sym__0___45_1804682623039322536 < sym__0___45_1804682623039322536 && (otherRec.sym__0___45_4150473036734596643 < sym__0___45_4150473036734596643 && (otherRec.sym__0___45_1494825655055665211 < sym__0___45_1494825655055665211 && (otherRec.sym__0__7243345290037361860 < sym__0__7243345290037361860 && (otherRec.sym__0___45_5621333005798540324 < sym__0___45_5621333005798540324 && (otherRec.sym__0___45_6906996774260360338 < sym__0___45_6906996774260360338 && (otherRec.sym__0___45_6223982643952099801 < sym__0___45_6223982643952099801 && (otherRec.sym__0___45_4582877986939568489 < sym__0___45_4582877986939568489 && (otherRec.sym__0__8952063493441915716 < sym__0__8952063493441915716 && (otherRec.sym__0___45_1824395327270788210 < sym__0___45_1824395327270788210 && (otherRec.sym__0___45_4574956228592531724 < sym__0___45_4574956228592531724 && (otherRec.sym__0___45_3583563823835889744 < sym__0___45_3583563823835889744 && (otherRec.sym__0__1035932931239708898 < sym__0__1035932931239708898 && (otherRec.sym__0__2873925968864442957 < sym__0__2873925968864442957 && otherRec.sym__0___45_6275854556107336556 < sym__0___45_6275854556107336556)))))))))))))))))))))))))))))))))))))))))))))))));
  }
  bool operator ==(const Record26& otherRec) const{
    return (otherRec.sym__0__7069852625741277438 == sym__0__7069852625741277438 && (otherRec.sym__0___45_2139184416220787303 == sym__0___45_2139184416220787303 && (otherRec.sym__0__6834910062454089307 == sym__0__6834910062454089307 && (otherRec.sym__0___45_673637979750308955 == sym__0___45_673637979750308955 && (otherRec.sym__0__7353040165187485943 == sym__0__7353040165187485943 && (otherRec.sym__0___45_3600959643487303198 == sym__0___45_3600959643487303198 && (otherRec.sym__0__1586920362281366553 == sym__0__1586920362281366553 && (otherRec.sym__0___45_565293263947163771 == sym__0___45_565293263947163771 && (otherRec.sym__0___45_843396218047479825 == sym__0___45_843396218047479825 && (otherRec.sym__0___45_6341950231013217833 == sym__0___45_6341950231013217833 && (otherRec.sym__0__1045058483100812033 == sym__0__1045058483100812033 && (otherRec.sym__0__3789297121224398166 == sym__0__3789297121224398166 && (otherRec.sym__0__7633871876750507011 == sym__0__7633871876750507011 && (otherRec.sym__0___45_1913197190575800618 == sym__0___45_1913197190575800618 && (otherRec.sym__0__5022607639284586068 == sym__0__5022607639284586068 && (otherRec.sym__0___45_4537203481097655209 == sym__0___45_4537203481097655209 && (otherRec.sym__0___45_4177776814409117721 == sym__0___45_4177776814409117721 && (otherRec.sym__0___45_1641792039791357051 == sym__0___45_1641792039791357051 && (otherRec.sym__0__9155042948135519075 == sym__0__9155042948135519075 && (otherRec.sym__0___45_1524873931413302067 == sym__0___45_1524873931413302067 && (otherRec.sym__0__5123726051002722313 == sym__0__5123726051002722313 && (otherRec.sym__0___45_3964194374284396198 == sym__0___45_3964194374284396198 && (otherRec.sym__0___45_3323287974231174848 == sym__0___45_3323287974231174848 && (otherRec.sym__0___45_7635081431606838648 == sym__0___45_7635081431606838648 && (otherRec.sym__0__3374832300737452457 == sym__0__3374832300737452457 && (otherRec.sym__0___45_2738400311900405319 == sym__0___45_2738400311900405319 && (otherRec.sym__0__922566035134170359 == sym__0__922566035134170359 && (otherRec.sym__0___45_4970177704815948360 == sym__0___45_4970177704815948360 && (otherRec.sym__0__1953889797750115686 == sym__0__1953889797750115686 && (otherRec.sym__0__7036968840507665704 == sym__0__7036968840507665704 && (otherRec.sym__0__2424422746197752657 == sym__0__2424422746197752657 && (otherRec.sym__0___45_899504608738992510 == sym__0___45_899504608738992510 && (otherRec.sym__0__2199101055335955185 == sym__0__2199101055335955185 && (otherRec.sym__0__8162945309743176777 == sym__0__8162945309743176777 && (otherRec.sym__0__5658677538842948015 == sym__0__5658677538842948015 && (otherRec.sym__0___45_1804682623039322536 == sym__0___45_1804682623039322536 && (otherRec.sym__0___45_4150473036734596643 == sym__0___45_4150473036734596643 && (otherRec.sym__0___45_1494825655055665211 == sym__0___45_1494825655055665211 && (otherRec.sym__0__7243345290037361860 == sym__0__7243345290037361860 && (otherRec.sym__0___45_5621333005798540324 == sym__0___45_5621333005798540324 && (otherRec.sym__0___45_6906996774260360338 == sym__0___45_6906996774260360338 && (otherRec.sym__0___45_6223982643952099801 == sym__0___45_6223982643952099801 && (otherRec.sym__0___45_4582877986939568489 == sym__0___45_4582877986939568489 && (otherRec.sym__0__8952063493441915716 == sym__0__8952063493441915716 && (otherRec.sym__0___45_1824395327270788210 == sym__0___45_1824395327270788210 && (otherRec.sym__0___45_4574956228592531724 == sym__0___45_4574956228592531724 && (otherRec.sym__0___45_3583563823835889744 == sym__0___45_3583563823835889744 && (otherRec.sym__0__1035932931239708898 == sym__0__1035932931239708898 && (otherRec.sym__0__2873925968864442957 == sym__0__2873925968864442957 && otherRec.sym__0___45_6275854556107336556 == sym__0___45_6275854556107336556)))))))))))))))))))))))))))))))))))))))))))))))));
  }
  bool operator !=(const Record26& otherRec) const{
    return (otherRec.sym__0__7069852625741277438 != sym__0__7069852625741277438 || (otherRec.sym__0___45_2139184416220787303 != sym__0___45_2139184416220787303 || (otherRec.sym__0__6834910062454089307 != sym__0__6834910062454089307 || (otherRec.sym__0___45_673637979750308955 != sym__0___45_673637979750308955 || (otherRec.sym__0__7353040165187485943 != sym__0__7353040165187485943 || (otherRec.sym__0___45_3600959643487303198 != sym__0___45_3600959643487303198 || (otherRec.sym__0__1586920362281366553 != sym__0__1586920362281366553 || (otherRec.sym__0___45_565293263947163771 != sym__0___45_565293263947163771 || (otherRec.sym__0___45_843396218047479825 != sym__0___45_843396218047479825 || (otherRec.sym__0___45_6341950231013217833 != sym__0___45_6341950231013217833 || (otherRec.sym__0__1045058483100812033 != sym__0__1045058483100812033 || (otherRec.sym__0__3789297121224398166 != sym__0__3789297121224398166 || (otherRec.sym__0__7633871876750507011 != sym__0__7633871876750507011 || (otherRec.sym__0___45_1913197190575800618 != sym__0___45_1913197190575800618 || (otherRec.sym__0__5022607639284586068 != sym__0__5022607639284586068 || (otherRec.sym__0___45_4537203481097655209 != sym__0___45_4537203481097655209 || (otherRec.sym__0___45_4177776814409117721 != sym__0___45_4177776814409117721 || (otherRec.sym__0___45_1641792039791357051 != sym__0___45_1641792039791357051 || (otherRec.sym__0__9155042948135519075 != sym__0__9155042948135519075 || (otherRec.sym__0___45_1524873931413302067 != sym__0___45_1524873931413302067 || (otherRec.sym__0__5123726051002722313 != sym__0__5123726051002722313 || (otherRec.sym__0___45_3964194374284396198 != sym__0___45_3964194374284396198 || (otherRec.sym__0___45_3323287974231174848 != sym__0___45_3323287974231174848 || (otherRec.sym__0___45_7635081431606838648 != sym__0___45_7635081431606838648 || (otherRec.sym__0__3374832300737452457 != sym__0__3374832300737452457 || (otherRec.sym__0___45_2738400311900405319 != sym__0___45_2738400311900405319 || (otherRec.sym__0__922566035134170359 != sym__0__922566035134170359 || (otherRec.sym__0___45_4970177704815948360 != sym__0___45_4970177704815948360 || (otherRec.sym__0__1953889797750115686 != sym__0__1953889797750115686 || (otherRec.sym__0__7036968840507665704 != sym__0__7036968840507665704 || (otherRec.sym__0__2424422746197752657 != sym__0__2424422746197752657 || (otherRec.sym__0___45_899504608738992510 != sym__0___45_899504608738992510 || (otherRec.sym__0__2199101055335955185 != sym__0__2199101055335955185 || (otherRec.sym__0__8162945309743176777 != sym__0__8162945309743176777 || (otherRec.sym__0__5658677538842948015 != sym__0__5658677538842948015 || (otherRec.sym__0___45_1804682623039322536 != sym__0___45_1804682623039322536 || (otherRec.sym__0___45_4150473036734596643 != sym__0___45_4150473036734596643 || (otherRec.sym__0___45_1494825655055665211 != sym__0___45_1494825655055665211 || (otherRec.sym__0__7243345290037361860 != sym__0__7243345290037361860 || (otherRec.sym__0___45_5621333005798540324 != sym__0___45_5621333005798540324 || (otherRec.sym__0___45_6906996774260360338 != sym__0___45_6906996774260360338 || (otherRec.sym__0___45_6223982643952099801 != sym__0___45_6223982643952099801 || (otherRec.sym__0___45_4582877986939568489 != sym__0___45_4582877986939568489 || (otherRec.sym__0__8952063493441915716 != sym__0__8952063493441915716 || (otherRec.sym__0___45_1824395327270788210 != sym__0___45_1824395327270788210 || (otherRec.sym__0___45_4574956228592531724 != sym__0___45_4574956228592531724 || (otherRec.sym__0___45_3583563823835889744 != sym__0___45_3583563823835889744 || (otherRec.sym__0__1035932931239708898 != sym__0__1035932931239708898 || (otherRec.sym__0__2873925968864442957 != sym__0__2873925968864442957 || otherRec.sym__0___45_6275854556107336556 != sym__0___45_6275854556107336556)))))))))))))))))))))))))))))))))))))))))))))))));
  }
  unsigned sym__0__7069852625741277438;
  fluidb_string<25> sym__0___45_2139184416220787303;
  fluidb_string<40> sym__0__6834910062454089307;
  fluidb_string<16> sym__0___45_673637979750308955;
  fluidb_string<16> sym__0__7353040165187485943;
  fluidb_string<13> sym__0___45_3600959643487303198;
  fluidb_string<15> sym__0__1586920362281366553;
  unsigned sym__0___45_565293263947163771;
  int sym__0___45_843396218047479825;
  unsigned sym__0___45_6341950231013217833;
  unsigned sym__0__1045058483100812033;
  unsigned sym__0__3789297121224398166;
  unsigned sym__0__7633871876750507011;
  fluidb_string<21> sym__0___45_1913197190575800618;
  unsigned sym__0__5022607639284586068;
  fluidb_string<10> sym__0___45_4537203481097655209;
  unsigned sym__0___45_4177776814409117721;
  double sym__0___45_1641792039791357051;
  unsigned sym__0__9155042948135519075;
  double sym__0___45_1524873931413302067;
  unsigned sym__0__5123726051002722313;
  unsigned sym__0___45_3964194374284396198;
  double sym__0___45_3323287974231174848;
  fluidb_string<13> sym__0___45_7635081431606838648;
  unsigned sym__0__3374832300737452457;
  fluidb_string<18> sym__0___45_2738400311900405319;
  fluidb_string<9> sym__0__922566035134170359;
  fluidb_string<9> sym__0___45_4970177704815948360;
  unsigned sym__0__1953889797750115686;
  unsigned sym__0__7036968840507665704;
  fluidb_string<7> sym__0__2424422746197752657;
  unsigned sym__0___45_899504608738992510;
  unsigned sym__0__2199101055335955185;
  unsigned sym__0__8162945309743176777;
  unsigned sym__0__5658677538842948015;
  unsigned sym__0___45_1804682623039322536;
  fluidb_string<15> sym__0___45_4150473036734596643;
  fluidb_string<2> sym__0___45_1494825655055665211;
  fluidb_string<2> sym__0__7243345290037361860;
  fluidb_string<2> sym__0___45_5621333005798540324;
  fluidb_string<2> sym__0___45_6906996774260360338;
  unsigned sym__0___45_6223982643952099801;
  fluidb_string<55> sym__0___45_4582877986939568489;
  fluidb_string<25> sym__0__8952063493441915716;
  fluidb_string<7> sym__0___45_1824395327270788210;
  fluidb_string<10> sym__0___45_4574956228592531724;
  fluidb_string<11> sym__0___45_3583563823835889744;
  fluidb_string<25> sym__0__1035932931239708898;
  unsigned sym__0__2873925968864442957;
  fluidb_string<10> sym__0___45_6275854556107336556;
 private:
};


class Record6 {
 public:
  Record6(unsigned __sym__0___45_7574074018531922998, int __sym__0__1125464382786937920, unsigned __sym__0___45_8257174981563598792, unsigned __sym__0__957746932829998382, unsigned __sym__0__934137931677987637, unsigned __sym__0___45_7332894783442362324, fluidb_string<21> __sym__0__8974811218372806325, unsigned __sym__0___45_5217562530132451785, fluidb_string<10> __sym__0__7851147553396318904, unsigned __sym__0___45_4975505511391694456, double __sym__0___45_7249986409969561654, unsigned __sym__0__4671626969570181580, double __sym__0___45_3666121704283105054, unsigned __sym__0__5495011930072844518, unsigned __sym__0___45_4423447118092167055, double __sym__0___45_1608082021099887893, fluidb_string<13> __sym__0__1584187396639360899) : sym__0___45_7574074018531922998(__sym__0___45_7574074018531922998), sym__0__1125464382786937920(__sym__0__1125464382786937920), sym__0___45_8257174981563598792(__sym__0___45_8257174981563598792), sym__0__957746932829998382(__sym__0__957746932829998382), sym__0__934137931677987637(__sym__0__934137931677987637), sym__0___45_7332894783442362324(__sym__0___45_7332894783442362324), sym__0__8974811218372806325(__sym__0__8974811218372806325), sym__0___45_5217562530132451785(__sym__0___45_5217562530132451785), sym__0__7851147553396318904(__sym__0__7851147553396318904), sym__0___45_4975505511391694456(__sym__0___45_4975505511391694456), sym__0___45_7249986409969561654(__sym__0___45_7249986409969561654), sym__0__4671626969570181580(__sym__0__4671626969570181580), sym__0___45_3666121704283105054(__sym__0___45_3666121704283105054), sym__0__5495011930072844518(__sym__0__5495011930072844518), sym__0___45_4423447118092167055(__sym__0___45_4423447118092167055), sym__0___45_1608082021099887893(__sym__0___45_1608082021099887893), sym__0__1584187396639360899(__sym__0__1584187396639360899)
  {
  }
  Record6() 
  {
  }
  std::string show() const{
    std::stringstream o;
    o << sym__0___45_7574074018531922998 << " | " << sym__0__1125464382786937920 << " | " << sym__0___45_8257174981563598792 << " | " << sym__0__957746932829998382 << " | " << sym__0__934137931677987637 << " | " << sym__0___45_7332894783442362324 << " | " << arrToString(sym__0__8974811218372806325) << " | " << sym__0___45_5217562530132451785 << " | " << arrToString(sym__0__7851147553396318904) << " | " << sym__0___45_4975505511391694456 << " | " << sym__0___45_7249986409969561654 << " | " << sym__0__4671626969570181580 << " | " << sym__0___45_3666121704283105054 << " | " << sym__0__5495011930072844518 << " | " << sym__0___45_4423447118092167055 << " | " << sym__0___45_1608082021099887893 << " | " << arrToString(sym__0__1584187396639360899);
    return o.str();
  }
  bool operator <(const Record6& otherRec) const{
    return (otherRec.sym__0___45_7574074018531922998 < sym__0___45_7574074018531922998 && (otherRec.sym__0__1125464382786937920 < sym__0__1125464382786937920 && (otherRec.sym__0___45_8257174981563598792 < sym__0___45_8257174981563598792 && (otherRec.sym__0__957746932829998382 < sym__0__957746932829998382 && (otherRec.sym__0__934137931677987637 < sym__0__934137931677987637 && (otherRec.sym__0___45_7332894783442362324 < sym__0___45_7332894783442362324 && (otherRec.sym__0__8974811218372806325 < sym__0__8974811218372806325 && (otherRec.sym__0___45_5217562530132451785 < sym__0___45_5217562530132451785 && (otherRec.sym__0__7851147553396318904 < sym__0__7851147553396318904 && (otherRec.sym__0___45_4975505511391694456 < sym__0___45_4975505511391694456 && (otherRec.sym__0___45_7249986409969561654 < sym__0___45_7249986409969561654 && (otherRec.sym__0__4671626969570181580 < sym__0__4671626969570181580 && (otherRec.sym__0___45_3666121704283105054 < sym__0___45_3666121704283105054 && (otherRec.sym__0__5495011930072844518 < sym__0__5495011930072844518 && (otherRec.sym__0___45_4423447118092167055 < sym__0___45_4423447118092167055 && (otherRec.sym__0___45_1608082021099887893 < sym__0___45_1608082021099887893 && otherRec.sym__0__1584187396639360899 < sym__0__1584187396639360899))))))))))))))));
  }
  bool operator ==(const Record6& otherRec) const{
    return (otherRec.sym__0___45_7574074018531922998 == sym__0___45_7574074018531922998 && (otherRec.sym__0__1125464382786937920 == sym__0__1125464382786937920 && (otherRec.sym__0___45_8257174981563598792 == sym__0___45_8257174981563598792 && (otherRec.sym__0__957746932829998382 == sym__0__957746932829998382 && (otherRec.sym__0__934137931677987637 == sym__0__934137931677987637 && (otherRec.sym__0___45_7332894783442362324 == sym__0___45_7332894783442362324 && (otherRec.sym__0__8974811218372806325 == sym__0__8974811218372806325 && (otherRec.sym__0___45_5217562530132451785 == sym__0___45_5217562530132451785 && (otherRec.sym__0__7851147553396318904 == sym__0__7851147553396318904 && (otherRec.sym__0___45_4975505511391694456 == sym__0___45_4975505511391694456 && (otherRec.sym__0___45_7249986409969561654 == sym__0___45_7249986409969561654 && (otherRec.sym__0__4671626969570181580 == sym__0__4671626969570181580 && (otherRec.sym__0___45_3666121704283105054 == sym__0___45_3666121704283105054 && (otherRec.sym__0__5495011930072844518 == sym__0__5495011930072844518 && (otherRec.sym__0___45_4423447118092167055 == sym__0___45_4423447118092167055 && (otherRec.sym__0___45_1608082021099887893 == sym__0___45_1608082021099887893 && otherRec.sym__0__1584187396639360899 == sym__0__1584187396639360899))))))))))))))));
  }
  bool operator !=(const Record6& otherRec) const{
    return (otherRec.sym__0___45_7574074018531922998 != sym__0___45_7574074018531922998 || (otherRec.sym__0__1125464382786937920 != sym__0__1125464382786937920 || (otherRec.sym__0___45_8257174981563598792 != sym__0___45_8257174981563598792 || (otherRec.sym__0__957746932829998382 != sym__0__957746932829998382 || (otherRec.sym__0__934137931677987637 != sym__0__934137931677987637 || (otherRec.sym__0___45_7332894783442362324 != sym__0___45_7332894783442362324 || (otherRec.sym__0__8974811218372806325 != sym__0__8974811218372806325 || (otherRec.sym__0___45_5217562530132451785 != sym__0___45_5217562530132451785 || (otherRec.sym__0__7851147553396318904 != sym__0__7851147553396318904 || (otherRec.sym__0___45_4975505511391694456 != sym__0___45_4975505511391694456 || (otherRec.sym__0___45_7249986409969561654 != sym__0___45_7249986409969561654 || (otherRec.sym__0__4671626969570181580 != sym__0__4671626969570181580 || (otherRec.sym__0___45_3666121704283105054 != sym__0___45_3666121704283105054 || (otherRec.sym__0__5495011930072844518 != sym__0__5495011930072844518 || (otherRec.sym__0___45_4423447118092167055 != sym__0___45_4423447118092167055 || (otherRec.sym__0___45_1608082021099887893 != sym__0___45_1608082021099887893 || otherRec.sym__0__1584187396639360899 != sym__0__1584187396639360899))))))))))))))));
  }
  unsigned sym__0___45_7574074018531922998;
  int sym__0__1125464382786937920;
  unsigned sym__0___45_8257174981563598792;
  unsigned sym__0__957746932829998382;
  unsigned sym__0__934137931677987637;
  unsigned sym__0___45_7332894783442362324;
  fluidb_string<21> sym__0__8974811218372806325;
  unsigned sym__0___45_5217562530132451785;
  fluidb_string<10> sym__0__7851147553396318904;
  unsigned sym__0___45_4975505511391694456;
  double sym__0___45_7249986409969561654;
  unsigned sym__0__4671626969570181580;
  double sym__0___45_3666121704283105054;
  unsigned sym__0__5495011930072844518;
  unsigned sym__0___45_4423447118092167055;
  double sym__0___45_1608082021099887893;
  fluidb_string<13> sym__0__1584187396639360899;
 private:
};


class Record7 {
 public:
  Record7(unsigned __sym__0___45_7367870026852124681, fluidb_string<25> __sym__0___45_7301250353451073160, fluidb_string<40> __sym__0__6333202735368284522, fluidb_string<16> __sym__0___45_5978492853817893740, fluidb_string<16> __sym__0___45_3430714039653452778, fluidb_string<13> __sym__0___45_2191735582705769493, fluidb_string<15> __sym__0___45_1866236838643760392, unsigned __sym__0___45_7453670619638963596, int __sym__0___45_108209078565278210, unsigned __sym__0__3871475115574718198, unsigned __sym__0___45_4573831101953076432, unsigned __sym__0__3432655185311562079, unsigned __sym__0___45_5372342932688804766, fluidb_string<21> __sym__0___45_4331139221161405985, unsigned __sym__0__4961402864413145749, fluidb_string<10> __sym__0___45_7611369938204918666, unsigned __sym__0__2252083309274964230, double __sym__0___45_1365217996402033036, unsigned __sym__0___45_2939512557126364862, double __sym__0___45_9115604381054430228, unsigned __sym__0__2094672257850693352, unsigned __sym__0__3109377025976382355, double __sym__0___45_2361816708944612479, fluidb_string<13> __sym__0__1562977940077399865) : sym__0___45_7367870026852124681(__sym__0___45_7367870026852124681), sym__0___45_7301250353451073160(__sym__0___45_7301250353451073160), sym__0__6333202735368284522(__sym__0__6333202735368284522), sym__0___45_5978492853817893740(__sym__0___45_5978492853817893740), sym__0___45_3430714039653452778(__sym__0___45_3430714039653452778), sym__0___45_2191735582705769493(__sym__0___45_2191735582705769493), sym__0___45_1866236838643760392(__sym__0___45_1866236838643760392), sym__0___45_7453670619638963596(__sym__0___45_7453670619638963596), sym__0___45_108209078565278210(__sym__0___45_108209078565278210), sym__0__3871475115574718198(__sym__0__3871475115574718198), sym__0___45_4573831101953076432(__sym__0___45_4573831101953076432), sym__0__3432655185311562079(__sym__0__3432655185311562079), sym__0___45_5372342932688804766(__sym__0___45_5372342932688804766), sym__0___45_4331139221161405985(__sym__0___45_4331139221161405985), sym__0__4961402864413145749(__sym__0__4961402864413145749), sym__0___45_7611369938204918666(__sym__0___45_7611369938204918666), sym__0__2252083309274964230(__sym__0__2252083309274964230), sym__0___45_1365217996402033036(__sym__0___45_1365217996402033036), sym__0___45_2939512557126364862(__sym__0___45_2939512557126364862), sym__0___45_9115604381054430228(__sym__0___45_9115604381054430228), sym__0__2094672257850693352(__sym__0__2094672257850693352), sym__0__3109377025976382355(__sym__0__3109377025976382355), sym__0___45_2361816708944612479(__sym__0___45_2361816708944612479), sym__0__1562977940077399865(__sym__0__1562977940077399865)
  {
  }
  Record7() 
  {
  }
  std::string show() const{
    std::stringstream o;
    o << sym__0___45_7367870026852124681 << " | " << arrToString(sym__0___45_7301250353451073160) << " | " << arrToString(sym__0__6333202735368284522) << " | " << arrToString(sym__0___45_5978492853817893740) << " | " << arrToString(sym__0___45_3430714039653452778) << " | " << arrToString(sym__0___45_2191735582705769493) << " | " << arrToString(sym__0___45_1866236838643760392) << " | " << sym__0___45_7453670619638963596 << " | " << sym__0___45_108209078565278210 << " | " << sym__0__3871475115574718198 << " | " << sym__0___45_4573831101953076432 << " | " << sym__0__3432655185311562079 << " | " << sym__0___45_5372342932688804766 << " | " << arrToString(sym__0___45_4331139221161405985) << " | " << sym__0__4961402864413145749 << " | " << arrToString(sym__0___45_7611369938204918666) << " | " << sym__0__2252083309274964230 << " | " << sym__0___45_1365217996402033036 << " | " << sym__0___45_2939512557126364862 << " | " << sym__0___45_9115604381054430228 << " | " << sym__0__2094672257850693352 << " | " << sym__0__3109377025976382355 << " | " << sym__0___45_2361816708944612479 << " | " << arrToString(sym__0__1562977940077399865);
    return o.str();
  }
  bool operator <(const Record7& otherRec) const{
    return (otherRec.sym__0___45_7367870026852124681 < sym__0___45_7367870026852124681 && (otherRec.sym__0___45_7301250353451073160 < sym__0___45_7301250353451073160 && (otherRec.sym__0__6333202735368284522 < sym__0__6333202735368284522 && (otherRec.sym__0___45_5978492853817893740 < sym__0___45_5978492853817893740 && (otherRec.sym__0___45_3430714039653452778 < sym__0___45_3430714039653452778 && (otherRec.sym__0___45_2191735582705769493 < sym__0___45_2191735582705769493 && (otherRec.sym__0___45_1866236838643760392 < sym__0___45_1866236838643760392 && (otherRec.sym__0___45_7453670619638963596 < sym__0___45_7453670619638963596 && (otherRec.sym__0___45_108209078565278210 < sym__0___45_108209078565278210 && (otherRec.sym__0__3871475115574718198 < sym__0__3871475115574718198 && (otherRec.sym__0___45_4573831101953076432 < sym__0___45_4573831101953076432 && (otherRec.sym__0__3432655185311562079 < sym__0__3432655185311562079 && (otherRec.sym__0___45_5372342932688804766 < sym__0___45_5372342932688804766 && (otherRec.sym__0___45_4331139221161405985 < sym__0___45_4331139221161405985 && (otherRec.sym__0__4961402864413145749 < sym__0__4961402864413145749 && (otherRec.sym__0___45_7611369938204918666 < sym__0___45_7611369938204918666 && (otherRec.sym__0__2252083309274964230 < sym__0__2252083309274964230 && (otherRec.sym__0___45_1365217996402033036 < sym__0___45_1365217996402033036 && (otherRec.sym__0___45_2939512557126364862 < sym__0___45_2939512557126364862 && (otherRec.sym__0___45_9115604381054430228 < sym__0___45_9115604381054430228 && (otherRec.sym__0__2094672257850693352 < sym__0__2094672257850693352 && (otherRec.sym__0__3109377025976382355 < sym__0__3109377025976382355 && (otherRec.sym__0___45_2361816708944612479 < sym__0___45_2361816708944612479 && otherRec.sym__0__1562977940077399865 < sym__0__1562977940077399865)))))))))))))))))))))));
  }
  bool operator ==(const Record7& otherRec) const{
    return (otherRec.sym__0___45_7367870026852124681 == sym__0___45_7367870026852124681 && (otherRec.sym__0___45_7301250353451073160 == sym__0___45_7301250353451073160 && (otherRec.sym__0__6333202735368284522 == sym__0__6333202735368284522 && (otherRec.sym__0___45_5978492853817893740 == sym__0___45_5978492853817893740 && (otherRec.sym__0___45_3430714039653452778 == sym__0___45_3430714039653452778 && (otherRec.sym__0___45_2191735582705769493 == sym__0___45_2191735582705769493 && (otherRec.sym__0___45_1866236838643760392 == sym__0___45_1866236838643760392 && (otherRec.sym__0___45_7453670619638963596 == sym__0___45_7453670619638963596 && (otherRec.sym__0___45_108209078565278210 == sym__0___45_108209078565278210 && (otherRec.sym__0__3871475115574718198 == sym__0__3871475115574718198 && (otherRec.sym__0___45_4573831101953076432 == sym__0___45_4573831101953076432 && (otherRec.sym__0__3432655185311562079 == sym__0__3432655185311562079 && (otherRec.sym__0___45_5372342932688804766 == sym__0___45_5372342932688804766 && (otherRec.sym__0___45_4331139221161405985 == sym__0___45_4331139221161405985 && (otherRec.sym__0__4961402864413145749 == sym__0__4961402864413145749 && (otherRec.sym__0___45_7611369938204918666 == sym__0___45_7611369938204918666 && (otherRec.sym__0__2252083309274964230 == sym__0__2252083309274964230 && (otherRec.sym__0___45_1365217996402033036 == sym__0___45_1365217996402033036 && (otherRec.sym__0___45_2939512557126364862 == sym__0___45_2939512557126364862 && (otherRec.sym__0___45_9115604381054430228 == sym__0___45_9115604381054430228 && (otherRec.sym__0__2094672257850693352 == sym__0__2094672257850693352 && (otherRec.sym__0__3109377025976382355 == sym__0__3109377025976382355 && (otherRec.sym__0___45_2361816708944612479 == sym__0___45_2361816708944612479 && otherRec.sym__0__1562977940077399865 == sym__0__1562977940077399865)))))))))))))))))))))));
  }
  bool operator !=(const Record7& otherRec) const{
    return (otherRec.sym__0___45_7367870026852124681 != sym__0___45_7367870026852124681 || (otherRec.sym__0___45_7301250353451073160 != sym__0___45_7301250353451073160 || (otherRec.sym__0__6333202735368284522 != sym__0__6333202735368284522 || (otherRec.sym__0___45_5978492853817893740 != sym__0___45_5978492853817893740 || (otherRec.sym__0___45_3430714039653452778 != sym__0___45_3430714039653452778 || (otherRec.sym__0___45_2191735582705769493 != sym__0___45_2191735582705769493 || (otherRec.sym__0___45_1866236838643760392 != sym__0___45_1866236838643760392 || (otherRec.sym__0___45_7453670619638963596 != sym__0___45_7453670619638963596 || (otherRec.sym__0___45_108209078565278210 != sym__0___45_108209078565278210 || (otherRec.sym__0__3871475115574718198 != sym__0__3871475115574718198 || (otherRec.sym__0___45_4573831101953076432 != sym__0___45_4573831101953076432 || (otherRec.sym__0__3432655185311562079 != sym__0__3432655185311562079 || (otherRec.sym__0___45_5372342932688804766 != sym__0___45_5372342932688804766 || (otherRec.sym__0___45_4331139221161405985 != sym__0___45_4331139221161405985 || (otherRec.sym__0__4961402864413145749 != sym__0__4961402864413145749 || (otherRec.sym__0___45_7611369938204918666 != sym__0___45_7611369938204918666 || (otherRec.sym__0__2252083309274964230 != sym__0__2252083309274964230 || (otherRec.sym__0___45_1365217996402033036 != sym__0___45_1365217996402033036 || (otherRec.sym__0___45_2939512557126364862 != sym__0___45_2939512557126364862 || (otherRec.sym__0___45_9115604381054430228 != sym__0___45_9115604381054430228 || (otherRec.sym__0__2094672257850693352 != sym__0__2094672257850693352 || (otherRec.sym__0__3109377025976382355 != sym__0__3109377025976382355 || (otherRec.sym__0___45_2361816708944612479 != sym__0___45_2361816708944612479 || otherRec.sym__0__1562977940077399865 != sym__0__1562977940077399865)))))))))))))))))))))));
  }
  unsigned sym__0___45_7367870026852124681;
  fluidb_string<25> sym__0___45_7301250353451073160;
  fluidb_string<40> sym__0__6333202735368284522;
  fluidb_string<16> sym__0___45_5978492853817893740;
  fluidb_string<16> sym__0___45_3430714039653452778;
  fluidb_string<13> sym__0___45_2191735582705769493;
  fluidb_string<15> sym__0___45_1866236838643760392;
  unsigned sym__0___45_7453670619638963596;
  int sym__0___45_108209078565278210;
  unsigned sym__0__3871475115574718198;
  unsigned sym__0___45_4573831101953076432;
  unsigned sym__0__3432655185311562079;
  unsigned sym__0___45_5372342932688804766;
  fluidb_string<21> sym__0___45_4331139221161405985;
  unsigned sym__0__4961402864413145749;
  fluidb_string<10> sym__0___45_7611369938204918666;
  unsigned sym__0__2252083309274964230;
  double sym__0___45_1365217996402033036;
  unsigned sym__0___45_2939512557126364862;
  double sym__0___45_9115604381054430228;
  unsigned sym__0__2094672257850693352;
  unsigned sym__0__3109377025976382355;
  double sym__0___45_2361816708944612479;
  fluidb_string<13> sym__0__1562977940077399865;
 private:
};


class Record9 {
 public:
  Record9(unsigned __sortElem0) : sortElem0(__sortElem0)
  {
  }
  Record9() 
  {
  }
  std::string show() const{
    std::stringstream o;
    o << sortElem0;
    return o.str();
  }
  bool operator <(const Record9& otherRec) const{
    return otherRec.sortElem0 < sortElem0;
  }
  bool operator ==(const Record9& otherRec) const{
    return otherRec.sortElem0 == sortElem0;
  }
  bool operator !=(const Record9& otherRec) const{
    return otherRec.sortElem0 != sortElem0;
  }
  unsigned sortElem0;
 private:
};


class Record16 {
 public:
  Record16(unsigned __sym__0__2037864888707786451, fluidb_string<18> __sym__0__8533656712666151747, fluidb_string<9> __sym__0__646314041574508429, fluidb_string<9> __sym__0__6064137978327902054, unsigned __sym__0__3754157776500852496, unsigned __sym__0__6284345160241949046, fluidb_string<7> __sym__0___45_773692805971570325, unsigned __sym__0___45_8399474032083007524, unsigned __sym__0___45_2038947427357444789, unsigned __sym__0__6071994954612827827, unsigned __sym__0__7742515703067448213, unsigned __sym__0__5201219213304227654, fluidb_string<15> __sym__0___45_5896625796158057241, fluidb_string<2> __sym__0___45_1108504872221226081, fluidb_string<2> __sym__0__1055103969674359346, fluidb_string<2> __sym__0__9115626546918942554, fluidb_string<2> __sym__0___45_6850413444013389848) : sym__0__2037864888707786451(__sym__0__2037864888707786451), sym__0__8533656712666151747(__sym__0__8533656712666151747), sym__0__646314041574508429(__sym__0__646314041574508429), sym__0__6064137978327902054(__sym__0__6064137978327902054), sym__0__3754157776500852496(__sym__0__3754157776500852496), sym__0__6284345160241949046(__sym__0__6284345160241949046), sym__0___45_773692805971570325(__sym__0___45_773692805971570325), sym__0___45_8399474032083007524(__sym__0___45_8399474032083007524), sym__0___45_2038947427357444789(__sym__0___45_2038947427357444789), sym__0__6071994954612827827(__sym__0__6071994954612827827), sym__0__7742515703067448213(__sym__0__7742515703067448213), sym__0__5201219213304227654(__sym__0__5201219213304227654), sym__0___45_5896625796158057241(__sym__0___45_5896625796158057241), sym__0___45_1108504872221226081(__sym__0___45_1108504872221226081), sym__0__1055103969674359346(__sym__0__1055103969674359346), sym__0__9115626546918942554(__sym__0__9115626546918942554), sym__0___45_6850413444013389848(__sym__0___45_6850413444013389848)
  {
  }
  Record16() 
  {
  }
  std::string show() const{
    std::stringstream o;
    o << sym__0__2037864888707786451 << " | " << arrToString(sym__0__8533656712666151747) << " | " << arrToString(sym__0__646314041574508429) << " | " << arrToString(sym__0__6064137978327902054) << " | " << sym__0__3754157776500852496 << " | " << sym__0__6284345160241949046 << " | " << arrToString(sym__0___45_773692805971570325) << " | " << sym__0___45_8399474032083007524 << " | " << sym__0___45_2038947427357444789 << " | " << sym__0__6071994954612827827 << " | " << sym__0__7742515703067448213 << " | " << sym__0__5201219213304227654 << " | " << arrToString(sym__0___45_5896625796158057241) << " | " << arrToString(sym__0___45_1108504872221226081) << " | " << arrToString(sym__0__1055103969674359346) << " | " << arrToString(sym__0__9115626546918942554) << " | " << arrToString(sym__0___45_6850413444013389848);
    return o.str();
  }
  bool operator <(const Record16& otherRec) const{
    return (otherRec.sym__0__2037864888707786451 < sym__0__2037864888707786451 && (otherRec.sym__0__8533656712666151747 < sym__0__8533656712666151747 && (otherRec.sym__0__646314041574508429 < sym__0__646314041574508429 && (otherRec.sym__0__6064137978327902054 < sym__0__6064137978327902054 && (otherRec.sym__0__3754157776500852496 < sym__0__3754157776500852496 && (otherRec.sym__0__6284345160241949046 < sym__0__6284345160241949046 && (otherRec.sym__0___45_773692805971570325 < sym__0___45_773692805971570325 && (otherRec.sym__0___45_8399474032083007524 < sym__0___45_8399474032083007524 && (otherRec.sym__0___45_2038947427357444789 < sym__0___45_2038947427357444789 && (otherRec.sym__0__6071994954612827827 < sym__0__6071994954612827827 && (otherRec.sym__0__7742515703067448213 < sym__0__7742515703067448213 && (otherRec.sym__0__5201219213304227654 < sym__0__5201219213304227654 && (otherRec.sym__0___45_5896625796158057241 < sym__0___45_5896625796158057241 && (otherRec.sym__0___45_1108504872221226081 < sym__0___45_1108504872221226081 && (otherRec.sym__0__1055103969674359346 < sym__0__1055103969674359346 && (otherRec.sym__0__9115626546918942554 < sym__0__9115626546918942554 && otherRec.sym__0___45_6850413444013389848 < sym__0___45_6850413444013389848))))))))))))))));
  }
  bool operator ==(const Record16& otherRec) const{
    return (otherRec.sym__0__2037864888707786451 == sym__0__2037864888707786451 && (otherRec.sym__0__8533656712666151747 == sym__0__8533656712666151747 && (otherRec.sym__0__646314041574508429 == sym__0__646314041574508429 && (otherRec.sym__0__6064137978327902054 == sym__0__6064137978327902054 && (otherRec.sym__0__3754157776500852496 == sym__0__3754157776500852496 && (otherRec.sym__0__6284345160241949046 == sym__0__6284345160241949046 && (otherRec.sym__0___45_773692805971570325 == sym__0___45_773692805971570325 && (otherRec.sym__0___45_8399474032083007524 == sym__0___45_8399474032083007524 && (otherRec.sym__0___45_2038947427357444789 == sym__0___45_2038947427357444789 && (otherRec.sym__0__6071994954612827827 == sym__0__6071994954612827827 && (otherRec.sym__0__7742515703067448213 == sym__0__7742515703067448213 && (otherRec.sym__0__5201219213304227654 == sym__0__5201219213304227654 && (otherRec.sym__0___45_5896625796158057241 == sym__0___45_5896625796158057241 && (otherRec.sym__0___45_1108504872221226081 == sym__0___45_1108504872221226081 && (otherRec.sym__0__1055103969674359346 == sym__0__1055103969674359346 && (otherRec.sym__0__9115626546918942554 == sym__0__9115626546918942554 && otherRec.sym__0___45_6850413444013389848 == sym__0___45_6850413444013389848))))))))))))))));
  }
  bool operator !=(const Record16& otherRec) const{
    return (otherRec.sym__0__2037864888707786451 != sym__0__2037864888707786451 || (otherRec.sym__0__8533656712666151747 != sym__0__8533656712666151747 || (otherRec.sym__0__646314041574508429 != sym__0__646314041574508429 || (otherRec.sym__0__6064137978327902054 != sym__0__6064137978327902054 || (otherRec.sym__0__3754157776500852496 != sym__0__3754157776500852496 || (otherRec.sym__0__6284345160241949046 != sym__0__6284345160241949046 || (otherRec.sym__0___45_773692805971570325 != sym__0___45_773692805971570325 || (otherRec.sym__0___45_8399474032083007524 != sym__0___45_8399474032083007524 || (otherRec.sym__0___45_2038947427357444789 != sym__0___45_2038947427357444789 || (otherRec.sym__0__6071994954612827827 != sym__0__6071994954612827827 || (otherRec.sym__0__7742515703067448213 != sym__0__7742515703067448213 || (otherRec.sym__0__5201219213304227654 != sym__0__5201219213304227654 || (otherRec.sym__0___45_5896625796158057241 != sym__0___45_5896625796158057241 || (otherRec.sym__0___45_1108504872221226081 != sym__0___45_1108504872221226081 || (otherRec.sym__0__1055103969674359346 != sym__0__1055103969674359346 || (otherRec.sym__0__9115626546918942554 != sym__0__9115626546918942554 || otherRec.sym__0___45_6850413444013389848 != sym__0___45_6850413444013389848))))))))))))))));
  }
  unsigned sym__0__2037864888707786451;
  fluidb_string<18> sym__0__8533656712666151747;
  fluidb_string<9> sym__0__646314041574508429;
  fluidb_string<9> sym__0__6064137978327902054;
  unsigned sym__0__3754157776500852496;
  unsigned sym__0__6284345160241949046;
  fluidb_string<7> sym__0___45_773692805971570325;
  unsigned sym__0___45_8399474032083007524;
  unsigned sym__0___45_2038947427357444789;
  unsigned sym__0__6071994954612827827;
  unsigned sym__0__7742515703067448213;
  unsigned sym__0__5201219213304227654;
  fluidb_string<15> sym__0___45_5896625796158057241;
  fluidb_string<2> sym__0___45_1108504872221226081;
  fluidb_string<2> sym__0__1055103969674359346;
  fluidb_string<2> sym__0__9115626546918942554;
  fluidb_string<2> sym__0___45_6850413444013389848;
 private:
};


class Record17 {
 public:
  Record17(unsigned __sym__0__1700144450823265023, fluidb_string<25> __sym__0__642977477037249040, fluidb_string<40> __sym__0___45_4128377972278795822, fluidb_string<16> __sym__0___45_5088627304821687252, fluidb_string<16> __sym__0___45_4948625537612330786, fluidb_string<13> __sym__0___45_9194700948435084701, fluidb_string<15> __sym__0___45_2335925802980201584, unsigned __sym__0__8952961796666569484, int __sym__0___45_764958528451264714, unsigned __sym__0___45_1817156327375219010, unsigned __sym__0___45_2837638767689209768, unsigned __sym__0___45_2981394887932269865, unsigned __sym__0___45_3207638480786881318, fluidb_string<21> __sym__0___45_2706668038305292969, unsigned __sym__0___45_5698288034649371459, fluidb_string<10> __sym__0___45_4860327901106131906, unsigned __sym__0__4990602831923261550, double __sym__0__1941197998689785612, unsigned __sym__0__8920978217467339962, double __sym__0__2290947992840979092, unsigned __sym__0__7968803792053807648, unsigned __sym__0___45_648214588708582661, double __sym__0__5240005983315163865, fluidb_string<13> __sym__0__8676547963641831009, unsigned __sym__0__7098358135655077312, fluidb_string<18> __sym__0___45_3236172823121798352, fluidb_string<9> __sym__0__209296758379513054, fluidb_string<9> __sym__0__990102210371531505, unsigned __sym__0__6731021262741660999, unsigned __sym__0__43383544609224961, fluidb_string<7> __sym__0___45_1451536826369255544, unsigned __sym__0___45_3626731045154418301, unsigned __sym__0__6266038698953764136, unsigned __sym__0___45_3178257250902948896, unsigned __sym__0___45_1707432467122892938, unsigned __sym__0__6803837608073687569, fluidb_string<15> __sym__0__3019318186977723140, fluidb_string<2> __sym__0___45_3182244727465674548, fluidb_string<2> __sym__0__6970778392668530317, fluidb_string<2> __sym__0__1291675427782851845, fluidb_string<2> __sym__0___45_7095393819436573425) : sym__0__1700144450823265023(__sym__0__1700144450823265023), sym__0__642977477037249040(__sym__0__642977477037249040), sym__0___45_4128377972278795822(__sym__0___45_4128377972278795822), sym__0___45_5088627304821687252(__sym__0___45_5088627304821687252), sym__0___45_4948625537612330786(__sym__0___45_4948625537612330786), sym__0___45_9194700948435084701(__sym__0___45_9194700948435084701), sym__0___45_2335925802980201584(__sym__0___45_2335925802980201584), sym__0__8952961796666569484(__sym__0__8952961796666569484), sym__0___45_764958528451264714(__sym__0___45_764958528451264714), sym__0___45_1817156327375219010(__sym__0___45_1817156327375219010), sym__0___45_2837638767689209768(__sym__0___45_2837638767689209768), sym__0___45_2981394887932269865(__sym__0___45_2981394887932269865), sym__0___45_3207638480786881318(__sym__0___45_3207638480786881318), sym__0___45_2706668038305292969(__sym__0___45_2706668038305292969), sym__0___45_5698288034649371459(__sym__0___45_5698288034649371459), sym__0___45_4860327901106131906(__sym__0___45_4860327901106131906), sym__0__4990602831923261550(__sym__0__4990602831923261550), sym__0__1941197998689785612(__sym__0__1941197998689785612), sym__0__8920978217467339962(__sym__0__8920978217467339962), sym__0__2290947992840979092(__sym__0__2290947992840979092), sym__0__7968803792053807648(__sym__0__7968803792053807648), sym__0___45_648214588708582661(__sym__0___45_648214588708582661), sym__0__5240005983315163865(__sym__0__5240005983315163865), sym__0__8676547963641831009(__sym__0__8676547963641831009), sym__0__7098358135655077312(__sym__0__7098358135655077312), sym__0___45_3236172823121798352(__sym__0___45_3236172823121798352), sym__0__209296758379513054(__sym__0__209296758379513054), sym__0__990102210371531505(__sym__0__990102210371531505), sym__0__6731021262741660999(__sym__0__6731021262741660999), sym__0__43383544609224961(__sym__0__43383544609224961), sym__0___45_1451536826369255544(__sym__0___45_1451536826369255544), sym__0___45_3626731045154418301(__sym__0___45_3626731045154418301), sym__0__6266038698953764136(__sym__0__6266038698953764136), sym__0___45_3178257250902948896(__sym__0___45_3178257250902948896), sym__0___45_1707432467122892938(__sym__0___45_1707432467122892938), sym__0__6803837608073687569(__sym__0__6803837608073687569), sym__0__3019318186977723140(__sym__0__3019318186977723140), sym__0___45_3182244727465674548(__sym__0___45_3182244727465674548), sym__0__6970778392668530317(__sym__0__6970778392668530317), sym__0__1291675427782851845(__sym__0__1291675427782851845), sym__0___45_7095393819436573425(__sym__0___45_7095393819436573425)
  {
  }
  Record17() 
  {
  }
  std::string show() const{
    std::stringstream o;
    o << sym__0__1700144450823265023 << " | " << arrToString(sym__0__642977477037249040) << " | " << arrToString(sym__0___45_4128377972278795822) << " | " << arrToString(sym__0___45_5088627304821687252) << " | " << arrToString(sym__0___45_4948625537612330786) << " | " << arrToString(sym__0___45_9194700948435084701) << " | " << arrToString(sym__0___45_2335925802980201584) << " | " << sym__0__8952961796666569484 << " | " << sym__0___45_764958528451264714 << " | " << sym__0___45_1817156327375219010 << " | " << sym__0___45_2837638767689209768 << " | " << sym__0___45_2981394887932269865 << " | " << sym__0___45_3207638480786881318 << " | " << arrToString(sym__0___45_2706668038305292969) << " | " << sym__0___45_5698288034649371459 << " | " << arrToString(sym__0___45_4860327901106131906) << " | " << sym__0__4990602831923261550 << " | " << sym__0__1941197998689785612 << " | " << sym__0__8920978217467339962 << " | " << sym__0__2290947992840979092 << " | " << sym__0__7968803792053807648 << " | " << sym__0___45_648214588708582661 << " | " << sym__0__5240005983315163865 << " | " << arrToString(sym__0__8676547963641831009) << " | " << sym__0__7098358135655077312 << " | " << arrToString(sym__0___45_3236172823121798352) << " | " << arrToString(sym__0__209296758379513054) << " | " << arrToString(sym__0__990102210371531505) << " | " << sym__0__6731021262741660999 << " | " << sym__0__43383544609224961 << " | " << arrToString(sym__0___45_1451536826369255544) << " | " << sym__0___45_3626731045154418301 << " | " << sym__0__6266038698953764136 << " | " << sym__0___45_3178257250902948896 << " | " << sym__0___45_1707432467122892938 << " | " << sym__0__6803837608073687569 << " | " << arrToString(sym__0__3019318186977723140) << " | " << arrToString(sym__0___45_3182244727465674548) << " | " << arrToString(sym__0__6970778392668530317) << " | " << arrToString(sym__0__1291675427782851845) << " | " << arrToString(sym__0___45_7095393819436573425);
    return o.str();
  }
  bool operator <(const Record17& otherRec) const{
    return (otherRec.sym__0__1700144450823265023 < sym__0__1700144450823265023 && (otherRec.sym__0__642977477037249040 < sym__0__642977477037249040 && (otherRec.sym__0___45_4128377972278795822 < sym__0___45_4128377972278795822 && (otherRec.sym__0___45_5088627304821687252 < sym__0___45_5088627304821687252 && (otherRec.sym__0___45_4948625537612330786 < sym__0___45_4948625537612330786 && (otherRec.sym__0___45_9194700948435084701 < sym__0___45_9194700948435084701 && (otherRec.sym__0___45_2335925802980201584 < sym__0___45_2335925802980201584 && (otherRec.sym__0__8952961796666569484 < sym__0__8952961796666569484 && (otherRec.sym__0___45_764958528451264714 < sym__0___45_764958528451264714 && (otherRec.sym__0___45_1817156327375219010 < sym__0___45_1817156327375219010 && (otherRec.sym__0___45_2837638767689209768 < sym__0___45_2837638767689209768 && (otherRec.sym__0___45_2981394887932269865 < sym__0___45_2981394887932269865 && (otherRec.sym__0___45_3207638480786881318 < sym__0___45_3207638480786881318 && (otherRec.sym__0___45_2706668038305292969 < sym__0___45_2706668038305292969 && (otherRec.sym__0___45_5698288034649371459 < sym__0___45_5698288034649371459 && (otherRec.sym__0___45_4860327901106131906 < sym__0___45_4860327901106131906 && (otherRec.sym__0__4990602831923261550 < sym__0__4990602831923261550 && (otherRec.sym__0__1941197998689785612 < sym__0__1941197998689785612 && (otherRec.sym__0__8920978217467339962 < sym__0__8920978217467339962 && (otherRec.sym__0__2290947992840979092 < sym__0__2290947992840979092 && (otherRec.sym__0__7968803792053807648 < sym__0__7968803792053807648 && (otherRec.sym__0___45_648214588708582661 < sym__0___45_648214588708582661 && (otherRec.sym__0__5240005983315163865 < sym__0__5240005983315163865 && (otherRec.sym__0__8676547963641831009 < sym__0__8676547963641831009 && (otherRec.sym__0__7098358135655077312 < sym__0__7098358135655077312 && (otherRec.sym__0___45_3236172823121798352 < sym__0___45_3236172823121798352 && (otherRec.sym__0__209296758379513054 < sym__0__209296758379513054 && (otherRec.sym__0__990102210371531505 < sym__0__990102210371531505 && (otherRec.sym__0__6731021262741660999 < sym__0__6731021262741660999 && (otherRec.sym__0__43383544609224961 < sym__0__43383544609224961 && (otherRec.sym__0___45_1451536826369255544 < sym__0___45_1451536826369255544 && (otherRec.sym__0___45_3626731045154418301 < sym__0___45_3626731045154418301 && (otherRec.sym__0__6266038698953764136 < sym__0__6266038698953764136 && (otherRec.sym__0___45_3178257250902948896 < sym__0___45_3178257250902948896 && (otherRec.sym__0___45_1707432467122892938 < sym__0___45_1707432467122892938 && (otherRec.sym__0__6803837608073687569 < sym__0__6803837608073687569 && (otherRec.sym__0__3019318186977723140 < sym__0__3019318186977723140 && (otherRec.sym__0___45_3182244727465674548 < sym__0___45_3182244727465674548 && (otherRec.sym__0__6970778392668530317 < sym__0__6970778392668530317 && (otherRec.sym__0__1291675427782851845 < sym__0__1291675427782851845 && otherRec.sym__0___45_7095393819436573425 < sym__0___45_7095393819436573425))))))))))))))))))))))))))))))))))))))));
  }
  bool operator ==(const Record17& otherRec) const{
    return (otherRec.sym__0__1700144450823265023 == sym__0__1700144450823265023 && (otherRec.sym__0__642977477037249040 == sym__0__642977477037249040 && (otherRec.sym__0___45_4128377972278795822 == sym__0___45_4128377972278795822 && (otherRec.sym__0___45_5088627304821687252 == sym__0___45_5088627304821687252 && (otherRec.sym__0___45_4948625537612330786 == sym__0___45_4948625537612330786 && (otherRec.sym__0___45_9194700948435084701 == sym__0___45_9194700948435084701 && (otherRec.sym__0___45_2335925802980201584 == sym__0___45_2335925802980201584 && (otherRec.sym__0__8952961796666569484 == sym__0__8952961796666569484 && (otherRec.sym__0___45_764958528451264714 == sym__0___45_764958528451264714 && (otherRec.sym__0___45_1817156327375219010 == sym__0___45_1817156327375219010 && (otherRec.sym__0___45_2837638767689209768 == sym__0___45_2837638767689209768 && (otherRec.sym__0___45_2981394887932269865 == sym__0___45_2981394887932269865 && (otherRec.sym__0___45_3207638480786881318 == sym__0___45_3207638480786881318 && (otherRec.sym__0___45_2706668038305292969 == sym__0___45_2706668038305292969 && (otherRec.sym__0___45_5698288034649371459 == sym__0___45_5698288034649371459 && (otherRec.sym__0___45_4860327901106131906 == sym__0___45_4860327901106131906 && (otherRec.sym__0__4990602831923261550 == sym__0__4990602831923261550 && (otherRec.sym__0__1941197998689785612 == sym__0__1941197998689785612 && (otherRec.sym__0__8920978217467339962 == sym__0__8920978217467339962 && (otherRec.sym__0__2290947992840979092 == sym__0__2290947992840979092 && (otherRec.sym__0__7968803792053807648 == sym__0__7968803792053807648 && (otherRec.sym__0___45_648214588708582661 == sym__0___45_648214588708582661 && (otherRec.sym__0__5240005983315163865 == sym__0__5240005983315163865 && (otherRec.sym__0__8676547963641831009 == sym__0__8676547963641831009 && (otherRec.sym__0__7098358135655077312 == sym__0__7098358135655077312 && (otherRec.sym__0___45_3236172823121798352 == sym__0___45_3236172823121798352 && (otherRec.sym__0__209296758379513054 == sym__0__209296758379513054 && (otherRec.sym__0__990102210371531505 == sym__0__990102210371531505 && (otherRec.sym__0__6731021262741660999 == sym__0__6731021262741660999 && (otherRec.sym__0__43383544609224961 == sym__0__43383544609224961 && (otherRec.sym__0___45_1451536826369255544 == sym__0___45_1451536826369255544 && (otherRec.sym__0___45_3626731045154418301 == sym__0___45_3626731045154418301 && (otherRec.sym__0__6266038698953764136 == sym__0__6266038698953764136 && (otherRec.sym__0___45_3178257250902948896 == sym__0___45_3178257250902948896 && (otherRec.sym__0___45_1707432467122892938 == sym__0___45_1707432467122892938 && (otherRec.sym__0__6803837608073687569 == sym__0__6803837608073687569 && (otherRec.sym__0__3019318186977723140 == sym__0__3019318186977723140 && (otherRec.sym__0___45_3182244727465674548 == sym__0___45_3182244727465674548 && (otherRec.sym__0__6970778392668530317 == sym__0__6970778392668530317 && (otherRec.sym__0__1291675427782851845 == sym__0__1291675427782851845 && otherRec.sym__0___45_7095393819436573425 == sym__0___45_7095393819436573425))))))))))))))))))))))))))))))))))))))));
  }
  bool operator !=(const Record17& otherRec) const{
    return (otherRec.sym__0__1700144450823265023 != sym__0__1700144450823265023 || (otherRec.sym__0__642977477037249040 != sym__0__642977477037249040 || (otherRec.sym__0___45_4128377972278795822 != sym__0___45_4128377972278795822 || (otherRec.sym__0___45_5088627304821687252 != sym__0___45_5088627304821687252 || (otherRec.sym__0___45_4948625537612330786 != sym__0___45_4948625537612330786 || (otherRec.sym__0___45_9194700948435084701 != sym__0___45_9194700948435084701 || (otherRec.sym__0___45_2335925802980201584 != sym__0___45_2335925802980201584 || (otherRec.sym__0__8952961796666569484 != sym__0__8952961796666569484 || (otherRec.sym__0___45_764958528451264714 != sym__0___45_764958528451264714 || (otherRec.sym__0___45_1817156327375219010 != sym__0___45_1817156327375219010 || (otherRec.sym__0___45_2837638767689209768 != sym__0___45_2837638767689209768 || (otherRec.sym__0___45_2981394887932269865 != sym__0___45_2981394887932269865 || (otherRec.sym__0___45_3207638480786881318 != sym__0___45_3207638480786881318 || (otherRec.sym__0___45_2706668038305292969 != sym__0___45_2706668038305292969 || (otherRec.sym__0___45_5698288034649371459 != sym__0___45_5698288034649371459 || (otherRec.sym__0___45_4860327901106131906 != sym__0___45_4860327901106131906 || (otherRec.sym__0__4990602831923261550 != sym__0__4990602831923261550 || (otherRec.sym__0__1941197998689785612 != sym__0__1941197998689785612 || (otherRec.sym__0__8920978217467339962 != sym__0__8920978217467339962 || (otherRec.sym__0__2290947992840979092 != sym__0__2290947992840979092 || (otherRec.sym__0__7968803792053807648 != sym__0__7968803792053807648 || (otherRec.sym__0___45_648214588708582661 != sym__0___45_648214588708582661 || (otherRec.sym__0__5240005983315163865 != sym__0__5240005983315163865 || (otherRec.sym__0__8676547963641831009 != sym__0__8676547963641831009 || (otherRec.sym__0__7098358135655077312 != sym__0__7098358135655077312 || (otherRec.sym__0___45_3236172823121798352 != sym__0___45_3236172823121798352 || (otherRec.sym__0__209296758379513054 != sym__0__209296758379513054 || (otherRec.sym__0__990102210371531505 != sym__0__990102210371531505 || (otherRec.sym__0__6731021262741660999 != sym__0__6731021262741660999 || (otherRec.sym__0__43383544609224961 != sym__0__43383544609224961 || (otherRec.sym__0___45_1451536826369255544 != sym__0___45_1451536826369255544 || (otherRec.sym__0___45_3626731045154418301 != sym__0___45_3626731045154418301 || (otherRec.sym__0__6266038698953764136 != sym__0__6266038698953764136 || (otherRec.sym__0___45_3178257250902948896 != sym__0___45_3178257250902948896 || (otherRec.sym__0___45_1707432467122892938 != sym__0___45_1707432467122892938 || (otherRec.sym__0__6803837608073687569 != sym__0__6803837608073687569 || (otherRec.sym__0__3019318186977723140 != sym__0__3019318186977723140 || (otherRec.sym__0___45_3182244727465674548 != sym__0___45_3182244727465674548 || (otherRec.sym__0__6970778392668530317 != sym__0__6970778392668530317 || (otherRec.sym__0__1291675427782851845 != sym__0__1291675427782851845 || otherRec.sym__0___45_7095393819436573425 != sym__0___45_7095393819436573425))))))))))))))))))))))))))))))))))))))));
  }
  unsigned sym__0__1700144450823265023;
  fluidb_string<25> sym__0__642977477037249040;
  fluidb_string<40> sym__0___45_4128377972278795822;
  fluidb_string<16> sym__0___45_5088627304821687252;
  fluidb_string<16> sym__0___45_4948625537612330786;
  fluidb_string<13> sym__0___45_9194700948435084701;
  fluidb_string<15> sym__0___45_2335925802980201584;
  unsigned sym__0__8952961796666569484;
  int sym__0___45_764958528451264714;
  unsigned sym__0___45_1817156327375219010;
  unsigned sym__0___45_2837638767689209768;
  unsigned sym__0___45_2981394887932269865;
  unsigned sym__0___45_3207638480786881318;
  fluidb_string<21> sym__0___45_2706668038305292969;
  unsigned sym__0___45_5698288034649371459;
  fluidb_string<10> sym__0___45_4860327901106131906;
  unsigned sym__0__4990602831923261550;
  double sym__0__1941197998689785612;
  unsigned sym__0__8920978217467339962;
  double sym__0__2290947992840979092;
  unsigned sym__0__7968803792053807648;
  unsigned sym__0___45_648214588708582661;
  double sym__0__5240005983315163865;
  fluidb_string<13> sym__0__8676547963641831009;
  unsigned sym__0__7098358135655077312;
  fluidb_string<18> sym__0___45_3236172823121798352;
  fluidb_string<9> sym__0__209296758379513054;
  fluidb_string<9> sym__0__990102210371531505;
  unsigned sym__0__6731021262741660999;
  unsigned sym__0__43383544609224961;
  fluidb_string<7> sym__0___45_1451536826369255544;
  unsigned sym__0___45_3626731045154418301;
  unsigned sym__0__6266038698953764136;
  unsigned sym__0___45_3178257250902948896;
  unsigned sym__0___45_1707432467122892938;
  unsigned sym__0__6803837608073687569;
  fluidb_string<15> sym__0__3019318186977723140;
  fluidb_string<2> sym__0___45_3182244727465674548;
  fluidb_string<2> sym__0__6970778392668530317;
  fluidb_string<2> sym__0__1291675427782851845;
  fluidb_string<2> sym__0___45_7095393819436573425;
 private:
};


class Record35 {
 public:
  Record35(unsigned __sym__0___45_5902979780714219327, unsigned __sym__0___45_2114395819171341319, fluidb_string<10> __sym__0__8560746496208341995) : sym__0___45_5902979780714219327(__sym__0___45_5902979780714219327), sym__0___45_2114395819171341319(__sym__0___45_2114395819171341319), sym__0__8560746496208341995(__sym__0__8560746496208341995)
  {
  }
  Record35() 
  {
  }
  std::string show() const{
    std::stringstream o;
    o << sym__0___45_5902979780714219327 << " | " << sym__0___45_2114395819171341319 << " | " << arrToString(sym__0__8560746496208341995);
    return o.str();
  }
  bool operator <(const Record35& otherRec) const{
    return (otherRec.sym__0___45_5902979780714219327 < sym__0___45_5902979780714219327 && (otherRec.sym__0___45_2114395819171341319 < sym__0___45_2114395819171341319 && otherRec.sym__0__8560746496208341995 < sym__0__8560746496208341995));
  }
  bool operator ==(const Record35& otherRec) const{
    return (otherRec.sym__0___45_5902979780714219327 == sym__0___45_5902979780714219327 && (otherRec.sym__0___45_2114395819171341319 == sym__0___45_2114395819171341319 && otherRec.sym__0__8560746496208341995 == sym__0__8560746496208341995));
  }
  bool operator !=(const Record35& otherRec) const{
    return (otherRec.sym__0___45_5902979780714219327 != sym__0___45_5902979780714219327 || (otherRec.sym__0___45_2114395819171341319 != sym__0___45_2114395819171341319 || otherRec.sym__0__8560746496208341995 != sym__0__8560746496208341995));
  }
  unsigned sym__0___45_5902979780714219327;
  unsigned sym__0___45_2114395819171341319;
  fluidb_string<10> sym__0__8560746496208341995;
 private:
};


class Record37 {
 public:
  Record37(unsigned __sym__0__4141812305157790681, fluidb_string<25> __sym__0___45_5159284013671774530, fluidb_string<40> __sym__0__5929335199040604944, fluidb_string<16> __sym__0__8980268860843798410, fluidb_string<16> __sym__0__7438201141129884556, fluidb_string<13> __sym__0__299964735226913069, fluidb_string<15> __sym__0___45_274153224962620866, unsigned __sym__0___45_1704737576651497046, int __sym__0___45_5364431335747194636, unsigned __sym__0___45_6670480666790360404, unsigned __sym__0__1035059097189397270, unsigned __sym__0___45_236567292019976639, unsigned __sym__0___45_4342072045869091480, fluidb_string<21> __sym__0___45_48356416147601727, unsigned __sym__0___45_3530069934999759345, fluidb_string<10> __sym__0___45_21272610088483796, unsigned __sym__0__8564866222464334588, double __sym__0___45_744165813648595542, unsigned __sym__0__482146207611652104, double __sym__0___45_2183093135728676926, unsigned __sym__0___45_1874278765651523026, unsigned __sym__0___45_7594691263183254603, double __sym__0__3632680852047490635, fluidb_string<13> __sym__0___45_7823346196563635997, unsigned __sym__0__5619860144531125902, fluidb_string<18> __sym__0__5610665202265100958, fluidb_string<9> __sym__0___45_9075663471338639476, fluidb_string<9> __sym__0__4691788782750567507, unsigned __sym__0__7928058280817873233, unsigned __sym__0__6668222264524417219, fluidb_string<7> __sym__0__2297426772070097766, unsigned __sym__0__3416485698032376717, unsigned __sym__0___45_1989902664282570938, unsigned __sym__0___45_8900398421048301202, unsigned __sym__0___45_3190388615181087052, unsigned __sym__0__617043931306359219, fluidb_string<15> __sym__0___45_6132208035988097838, fluidb_string<2> __sym__0___45_7131498866425802518, fluidb_string<2> __sym__0__3212189690086512703, fluidb_string<2> __sym__0___45_4551279862702652409, fluidb_string<2> __sym__0__6400252650127444553, unsigned __sym__0__8989200694518734396, fluidb_string<55> __sym__0__1879639780622030444, fluidb_string<25> __sym__0__4679788483318910399, fluidb_string<7> __sym__0___45_1519325191444557143, fluidb_string<10> __sym__0__8808022150768814575, fluidb_string<11> __sym__0__1615907806695898299, fluidb_string<25> __sym__0__7902426149900564525, unsigned __sym__0__7538375850658612802, fluidb_string<10> __sym__0__2838506290652474191) : sym__0__4141812305157790681(__sym__0__4141812305157790681), sym__0___45_5159284013671774530(__sym__0___45_5159284013671774530), sym__0__5929335199040604944(__sym__0__5929335199040604944), sym__0__8980268860843798410(__sym__0__8980268860843798410), sym__0__7438201141129884556(__sym__0__7438201141129884556), sym__0__299964735226913069(__sym__0__299964735226913069), sym__0___45_274153224962620866(__sym__0___45_274153224962620866), sym__0___45_1704737576651497046(__sym__0___45_1704737576651497046), sym__0___45_5364431335747194636(__sym__0___45_5364431335747194636), sym__0___45_6670480666790360404(__sym__0___45_6670480666790360404), sym__0__1035059097189397270(__sym__0__1035059097189397270), sym__0___45_236567292019976639(__sym__0___45_236567292019976639), sym__0___45_4342072045869091480(__sym__0___45_4342072045869091480), sym__0___45_48356416147601727(__sym__0___45_48356416147601727), sym__0___45_3530069934999759345(__sym__0___45_3530069934999759345), sym__0___45_21272610088483796(__sym__0___45_21272610088483796), sym__0__8564866222464334588(__sym__0__8564866222464334588), sym__0___45_744165813648595542(__sym__0___45_744165813648595542), sym__0__482146207611652104(__sym__0__482146207611652104), sym__0___45_2183093135728676926(__sym__0___45_2183093135728676926), sym__0___45_1874278765651523026(__sym__0___45_1874278765651523026), sym__0___45_7594691263183254603(__sym__0___45_7594691263183254603), sym__0__3632680852047490635(__sym__0__3632680852047490635), sym__0___45_7823346196563635997(__sym__0___45_7823346196563635997), sym__0__5619860144531125902(__sym__0__5619860144531125902), sym__0__5610665202265100958(__sym__0__5610665202265100958), sym__0___45_9075663471338639476(__sym__0___45_9075663471338639476), sym__0__4691788782750567507(__sym__0__4691788782750567507), sym__0__7928058280817873233(__sym__0__7928058280817873233), sym__0__6668222264524417219(__sym__0__6668222264524417219), sym__0__2297426772070097766(__sym__0__2297426772070097766), sym__0__3416485698032376717(__sym__0__3416485698032376717), sym__0___45_1989902664282570938(__sym__0___45_1989902664282570938), sym__0___45_8900398421048301202(__sym__0___45_8900398421048301202), sym__0___45_3190388615181087052(__sym__0___45_3190388615181087052), sym__0__617043931306359219(__sym__0__617043931306359219), sym__0___45_6132208035988097838(__sym__0___45_6132208035988097838), sym__0___45_7131498866425802518(__sym__0___45_7131498866425802518), sym__0__3212189690086512703(__sym__0__3212189690086512703), sym__0___45_4551279862702652409(__sym__0___45_4551279862702652409), sym__0__6400252650127444553(__sym__0__6400252650127444553), sym__0__8989200694518734396(__sym__0__8989200694518734396), sym__0__1879639780622030444(__sym__0__1879639780622030444), sym__0__4679788483318910399(__sym__0__4679788483318910399), sym__0___45_1519325191444557143(__sym__0___45_1519325191444557143), sym__0__8808022150768814575(__sym__0__8808022150768814575), sym__0__1615907806695898299(__sym__0__1615907806695898299), sym__0__7902426149900564525(__sym__0__7902426149900564525), sym__0__7538375850658612802(__sym__0__7538375850658612802), sym__0__2838506290652474191(__sym__0__2838506290652474191)
  {
  }
  Record37() 
  {
  }
  std::string show() const{
    std::stringstream o;
    o << sym__0__4141812305157790681 << " | " << arrToString(sym__0___45_5159284013671774530) << " | " << arrToString(sym__0__5929335199040604944) << " | " << arrToString(sym__0__8980268860843798410) << " | " << arrToString(sym__0__7438201141129884556) << " | " << arrToString(sym__0__299964735226913069) << " | " << arrToString(sym__0___45_274153224962620866) << " | " << sym__0___45_1704737576651497046 << " | " << sym__0___45_5364431335747194636 << " | " << sym__0___45_6670480666790360404 << " | " << sym__0__1035059097189397270 << " | " << sym__0___45_236567292019976639 << " | " << sym__0___45_4342072045869091480 << " | " << arrToString(sym__0___45_48356416147601727) << " | " << sym__0___45_3530069934999759345 << " | " << arrToString(sym__0___45_21272610088483796) << " | " << sym__0__8564866222464334588 << " | " << sym__0___45_744165813648595542 << " | " << sym__0__482146207611652104 << " | " << sym__0___45_2183093135728676926 << " | " << sym__0___45_1874278765651523026 << " | " << sym__0___45_7594691263183254603 << " | " << sym__0__3632680852047490635 << " | " << arrToString(sym__0___45_7823346196563635997) << " | " << sym__0__5619860144531125902 << " | " << arrToString(sym__0__5610665202265100958) << " | " << arrToString(sym__0___45_9075663471338639476) << " | " << arrToString(sym__0__4691788782750567507) << " | " << sym__0__7928058280817873233 << " | " << sym__0__6668222264524417219 << " | " << arrToString(sym__0__2297426772070097766) << " | " << sym__0__3416485698032376717 << " | " << sym__0___45_1989902664282570938 << " | " << sym__0___45_8900398421048301202 << " | " << sym__0___45_3190388615181087052 << " | " << sym__0__617043931306359219 << " | " << arrToString(sym__0___45_6132208035988097838) << " | " << arrToString(sym__0___45_7131498866425802518) << " | " << arrToString(sym__0__3212189690086512703) << " | " << arrToString(sym__0___45_4551279862702652409) << " | " << arrToString(sym__0__6400252650127444553) << " | " << sym__0__8989200694518734396 << " | " << arrToString(sym__0__1879639780622030444) << " | " << arrToString(sym__0__4679788483318910399) << " | " << arrToString(sym__0___45_1519325191444557143) << " | " << arrToString(sym__0__8808022150768814575) << " | " << arrToString(sym__0__1615907806695898299) << " | " << arrToString(sym__0__7902426149900564525) << " | " << sym__0__7538375850658612802 << " | " << arrToString(sym__0__2838506290652474191);
    return o.str();
  }
  bool operator <(const Record37& otherRec) const{
    return (otherRec.sym__0__4141812305157790681 < sym__0__4141812305157790681 && (otherRec.sym__0___45_5159284013671774530 < sym__0___45_5159284013671774530 && (otherRec.sym__0__5929335199040604944 < sym__0__5929335199040604944 && (otherRec.sym__0__8980268860843798410 < sym__0__8980268860843798410 && (otherRec.sym__0__7438201141129884556 < sym__0__7438201141129884556 && (otherRec.sym__0__299964735226913069 < sym__0__299964735226913069 && (otherRec.sym__0___45_274153224962620866 < sym__0___45_274153224962620866 && (otherRec.sym__0___45_1704737576651497046 < sym__0___45_1704737576651497046 && (otherRec.sym__0___45_5364431335747194636 < sym__0___45_5364431335747194636 && (otherRec.sym__0___45_6670480666790360404 < sym__0___45_6670480666790360404 && (otherRec.sym__0__1035059097189397270 < sym__0__1035059097189397270 && (otherRec.sym__0___45_236567292019976639 < sym__0___45_236567292019976639 && (otherRec.sym__0___45_4342072045869091480 < sym__0___45_4342072045869091480 && (otherRec.sym__0___45_48356416147601727 < sym__0___45_48356416147601727 && (otherRec.sym__0___45_3530069934999759345 < sym__0___45_3530069934999759345 && (otherRec.sym__0___45_21272610088483796 < sym__0___45_21272610088483796 && (otherRec.sym__0__8564866222464334588 < sym__0__8564866222464334588 && (otherRec.sym__0___45_744165813648595542 < sym__0___45_744165813648595542 && (otherRec.sym__0__482146207611652104 < sym__0__482146207611652104 && (otherRec.sym__0___45_2183093135728676926 < sym__0___45_2183093135728676926 && (otherRec.sym__0___45_1874278765651523026 < sym__0___45_1874278765651523026 && (otherRec.sym__0___45_7594691263183254603 < sym__0___45_7594691263183254603 && (otherRec.sym__0__3632680852047490635 < sym__0__3632680852047490635 && (otherRec.sym__0___45_7823346196563635997 < sym__0___45_7823346196563635997 && (otherRec.sym__0__5619860144531125902 < sym__0__5619860144531125902 && (otherRec.sym__0__5610665202265100958 < sym__0__5610665202265100958 && (otherRec.sym__0___45_9075663471338639476 < sym__0___45_9075663471338639476 && (otherRec.sym__0__4691788782750567507 < sym__0__4691788782750567507 && (otherRec.sym__0__7928058280817873233 < sym__0__7928058280817873233 && (otherRec.sym__0__6668222264524417219 < sym__0__6668222264524417219 && (otherRec.sym__0__2297426772070097766 < sym__0__2297426772070097766 && (otherRec.sym__0__3416485698032376717 < sym__0__3416485698032376717 && (otherRec.sym__0___45_1989902664282570938 < sym__0___45_1989902664282570938 && (otherRec.sym__0___45_8900398421048301202 < sym__0___45_8900398421048301202 && (otherRec.sym__0___45_3190388615181087052 < sym__0___45_3190388615181087052 && (otherRec.sym__0__617043931306359219 < sym__0__617043931306359219 && (otherRec.sym__0___45_6132208035988097838 < sym__0___45_6132208035988097838 && (otherRec.sym__0___45_7131498866425802518 < sym__0___45_7131498866425802518 && (otherRec.sym__0__3212189690086512703 < sym__0__3212189690086512703 && (otherRec.sym__0___45_4551279862702652409 < sym__0___45_4551279862702652409 && (otherRec.sym__0__6400252650127444553 < sym__0__6400252650127444553 && (otherRec.sym__0__8989200694518734396 < sym__0__8989200694518734396 && (otherRec.sym__0__1879639780622030444 < sym__0__1879639780622030444 && (otherRec.sym__0__4679788483318910399 < sym__0__4679788483318910399 && (otherRec.sym__0___45_1519325191444557143 < sym__0___45_1519325191444557143 && (otherRec.sym__0__8808022150768814575 < sym__0__8808022150768814575 && (otherRec.sym__0__1615907806695898299 < sym__0__1615907806695898299 && (otherRec.sym__0__7902426149900564525 < sym__0__7902426149900564525 && (otherRec.sym__0__7538375850658612802 < sym__0__7538375850658612802 && otherRec.sym__0__2838506290652474191 < sym__0__2838506290652474191)))))))))))))))))))))))))))))))))))))))))))))))));
  }
  bool operator ==(const Record37& otherRec) const{
    return (otherRec.sym__0__4141812305157790681 == sym__0__4141812305157790681 && (otherRec.sym__0___45_5159284013671774530 == sym__0___45_5159284013671774530 && (otherRec.sym__0__5929335199040604944 == sym__0__5929335199040604944 && (otherRec.sym__0__8980268860843798410 == sym__0__8980268860843798410 && (otherRec.sym__0__7438201141129884556 == sym__0__7438201141129884556 && (otherRec.sym__0__299964735226913069 == sym__0__299964735226913069 && (otherRec.sym__0___45_274153224962620866 == sym__0___45_274153224962620866 && (otherRec.sym__0___45_1704737576651497046 == sym__0___45_1704737576651497046 && (otherRec.sym__0___45_5364431335747194636 == sym__0___45_5364431335747194636 && (otherRec.sym__0___45_6670480666790360404 == sym__0___45_6670480666790360404 && (otherRec.sym__0__1035059097189397270 == sym__0__1035059097189397270 && (otherRec.sym__0___45_236567292019976639 == sym__0___45_236567292019976639 && (otherRec.sym__0___45_4342072045869091480 == sym__0___45_4342072045869091480 && (otherRec.sym__0___45_48356416147601727 == sym__0___45_48356416147601727 && (otherRec.sym__0___45_3530069934999759345 == sym__0___45_3530069934999759345 && (otherRec.sym__0___45_21272610088483796 == sym__0___45_21272610088483796 && (otherRec.sym__0__8564866222464334588 == sym__0__8564866222464334588 && (otherRec.sym__0___45_744165813648595542 == sym__0___45_744165813648595542 && (otherRec.sym__0__482146207611652104 == sym__0__482146207611652104 && (otherRec.sym__0___45_2183093135728676926 == sym__0___45_2183093135728676926 && (otherRec.sym__0___45_1874278765651523026 == sym__0___45_1874278765651523026 && (otherRec.sym__0___45_7594691263183254603 == sym__0___45_7594691263183254603 && (otherRec.sym__0__3632680852047490635 == sym__0__3632680852047490635 && (otherRec.sym__0___45_7823346196563635997 == sym__0___45_7823346196563635997 && (otherRec.sym__0__5619860144531125902 == sym__0__5619860144531125902 && (otherRec.sym__0__5610665202265100958 == sym__0__5610665202265100958 && (otherRec.sym__0___45_9075663471338639476 == sym__0___45_9075663471338639476 && (otherRec.sym__0__4691788782750567507 == sym__0__4691788782750567507 && (otherRec.sym__0__7928058280817873233 == sym__0__7928058280817873233 && (otherRec.sym__0__6668222264524417219 == sym__0__6668222264524417219 && (otherRec.sym__0__2297426772070097766 == sym__0__2297426772070097766 && (otherRec.sym__0__3416485698032376717 == sym__0__3416485698032376717 && (otherRec.sym__0___45_1989902664282570938 == sym__0___45_1989902664282570938 && (otherRec.sym__0___45_8900398421048301202 == sym__0___45_8900398421048301202 && (otherRec.sym__0___45_3190388615181087052 == sym__0___45_3190388615181087052 && (otherRec.sym__0__617043931306359219 == sym__0__617043931306359219 && (otherRec.sym__0___45_6132208035988097838 == sym__0___45_6132208035988097838 && (otherRec.sym__0___45_7131498866425802518 == sym__0___45_7131498866425802518 && (otherRec.sym__0__3212189690086512703 == sym__0__3212189690086512703 && (otherRec.sym__0___45_4551279862702652409 == sym__0___45_4551279862702652409 && (otherRec.sym__0__6400252650127444553 == sym__0__6400252650127444553 && (otherRec.sym__0__8989200694518734396 == sym__0__8989200694518734396 && (otherRec.sym__0__1879639780622030444 == sym__0__1879639780622030444 && (otherRec.sym__0__4679788483318910399 == sym__0__4679788483318910399 && (otherRec.sym__0___45_1519325191444557143 == sym__0___45_1519325191444557143 && (otherRec.sym__0__8808022150768814575 == sym__0__8808022150768814575 && (otherRec.sym__0__1615907806695898299 == sym__0__1615907806695898299 && (otherRec.sym__0__7902426149900564525 == sym__0__7902426149900564525 && (otherRec.sym__0__7538375850658612802 == sym__0__7538375850658612802 && otherRec.sym__0__2838506290652474191 == sym__0__2838506290652474191)))))))))))))))))))))))))))))))))))))))))))))))));
  }
  bool operator !=(const Record37& otherRec) const{
    return (otherRec.sym__0__4141812305157790681 != sym__0__4141812305157790681 || (otherRec.sym__0___45_5159284013671774530 != sym__0___45_5159284013671774530 || (otherRec.sym__0__5929335199040604944 != sym__0__5929335199040604944 || (otherRec.sym__0__8980268860843798410 != sym__0__8980268860843798410 || (otherRec.sym__0__7438201141129884556 != sym__0__7438201141129884556 || (otherRec.sym__0__299964735226913069 != sym__0__299964735226913069 || (otherRec.sym__0___45_274153224962620866 != sym__0___45_274153224962620866 || (otherRec.sym__0___45_1704737576651497046 != sym__0___45_1704737576651497046 || (otherRec.sym__0___45_5364431335747194636 != sym__0___45_5364431335747194636 || (otherRec.sym__0___45_6670480666790360404 != sym__0___45_6670480666790360404 || (otherRec.sym__0__1035059097189397270 != sym__0__1035059097189397270 || (otherRec.sym__0___45_236567292019976639 != sym__0___45_236567292019976639 || (otherRec.sym__0___45_4342072045869091480 != sym__0___45_4342072045869091480 || (otherRec.sym__0___45_48356416147601727 != sym__0___45_48356416147601727 || (otherRec.sym__0___45_3530069934999759345 != sym__0___45_3530069934999759345 || (otherRec.sym__0___45_21272610088483796 != sym__0___45_21272610088483796 || (otherRec.sym__0__8564866222464334588 != sym__0__8564866222464334588 || (otherRec.sym__0___45_744165813648595542 != sym__0___45_744165813648595542 || (otherRec.sym__0__482146207611652104 != sym__0__482146207611652104 || (otherRec.sym__0___45_2183093135728676926 != sym__0___45_2183093135728676926 || (otherRec.sym__0___45_1874278765651523026 != sym__0___45_1874278765651523026 || (otherRec.sym__0___45_7594691263183254603 != sym__0___45_7594691263183254603 || (otherRec.sym__0__3632680852047490635 != sym__0__3632680852047490635 || (otherRec.sym__0___45_7823346196563635997 != sym__0___45_7823346196563635997 || (otherRec.sym__0__5619860144531125902 != sym__0__5619860144531125902 || (otherRec.sym__0__5610665202265100958 != sym__0__5610665202265100958 || (otherRec.sym__0___45_9075663471338639476 != sym__0___45_9075663471338639476 || (otherRec.sym__0__4691788782750567507 != sym__0__4691788782750567507 || (otherRec.sym__0__7928058280817873233 != sym__0__7928058280817873233 || (otherRec.sym__0__6668222264524417219 != sym__0__6668222264524417219 || (otherRec.sym__0__2297426772070097766 != sym__0__2297426772070097766 || (otherRec.sym__0__3416485698032376717 != sym__0__3416485698032376717 || (otherRec.sym__0___45_1989902664282570938 != sym__0___45_1989902664282570938 || (otherRec.sym__0___45_8900398421048301202 != sym__0___45_8900398421048301202 || (otherRec.sym__0___45_3190388615181087052 != sym__0___45_3190388615181087052 || (otherRec.sym__0__617043931306359219 != sym__0__617043931306359219 || (otherRec.sym__0___45_6132208035988097838 != sym__0___45_6132208035988097838 || (otherRec.sym__0___45_7131498866425802518 != sym__0___45_7131498866425802518 || (otherRec.sym__0__3212189690086512703 != sym__0__3212189690086512703 || (otherRec.sym__0___45_4551279862702652409 != sym__0___45_4551279862702652409 || (otherRec.sym__0__6400252650127444553 != sym__0__6400252650127444553 || (otherRec.sym__0__8989200694518734396 != sym__0__8989200694518734396 || (otherRec.sym__0__1879639780622030444 != sym__0__1879639780622030444 || (otherRec.sym__0__4679788483318910399 != sym__0__4679788483318910399 || (otherRec.sym__0___45_1519325191444557143 != sym__0___45_1519325191444557143 || (otherRec.sym__0__8808022150768814575 != sym__0__8808022150768814575 || (otherRec.sym__0__1615907806695898299 != sym__0__1615907806695898299 || (otherRec.sym__0__7902426149900564525 != sym__0__7902426149900564525 || (otherRec.sym__0__7538375850658612802 != sym__0__7538375850658612802 || otherRec.sym__0__2838506290652474191 != sym__0__2838506290652474191)))))))))))))))))))))))))))))))))))))))))))))))));
  }
  unsigned sym__0__4141812305157790681;
  fluidb_string<25> sym__0___45_5159284013671774530;
  fluidb_string<40> sym__0__5929335199040604944;
  fluidb_string<16> sym__0__8980268860843798410;
  fluidb_string<16> sym__0__7438201141129884556;
  fluidb_string<13> sym__0__299964735226913069;
  fluidb_string<15> sym__0___45_274153224962620866;
  unsigned sym__0___45_1704737576651497046;
  int sym__0___45_5364431335747194636;
  unsigned sym__0___45_6670480666790360404;
  unsigned sym__0__1035059097189397270;
  unsigned sym__0___45_236567292019976639;
  unsigned sym__0___45_4342072045869091480;
  fluidb_string<21> sym__0___45_48356416147601727;
  unsigned sym__0___45_3530069934999759345;
  fluidb_string<10> sym__0___45_21272610088483796;
  unsigned sym__0__8564866222464334588;
  double sym__0___45_744165813648595542;
  unsigned sym__0__482146207611652104;
  double sym__0___45_2183093135728676926;
  unsigned sym__0___45_1874278765651523026;
  unsigned sym__0___45_7594691263183254603;
  double sym__0__3632680852047490635;
  fluidb_string<13> sym__0___45_7823346196563635997;
  unsigned sym__0__5619860144531125902;
  fluidb_string<18> sym__0__5610665202265100958;
  fluidb_string<9> sym__0___45_9075663471338639476;
  fluidb_string<9> sym__0__4691788782750567507;
  unsigned sym__0__7928058280817873233;
  unsigned sym__0__6668222264524417219;
  fluidb_string<7> sym__0__2297426772070097766;
  unsigned sym__0__3416485698032376717;
  unsigned sym__0___45_1989902664282570938;
  unsigned sym__0___45_8900398421048301202;
  unsigned sym__0___45_3190388615181087052;
  unsigned sym__0__617043931306359219;
  fluidb_string<15> sym__0___45_6132208035988097838;
  fluidb_string<2> sym__0___45_7131498866425802518;
  fluidb_string<2> sym__0__3212189690086512703;
  fluidb_string<2> sym__0___45_4551279862702652409;
  fluidb_string<2> sym__0__6400252650127444553;
  unsigned sym__0__8989200694518734396;
  fluidb_string<55> sym__0__1879639780622030444;
  fluidb_string<25> sym__0__4679788483318910399;
  fluidb_string<7> sym__0___45_1519325191444557143;
  fluidb_string<10> sym__0__8808022150768814575;
  fluidb_string<11> sym__0__1615907806695898299;
  fluidb_string<25> sym__0__7902426149900564525;
  unsigned sym__0__7538375850658612802;
  fluidb_string<10> sym__0__2838506290652474191;
 private:
};


class Record5 {
 public:
  Record5(unsigned __sym__0___45_363497743297214640, fluidb_string<25> __sym__0__631045785057377531, fluidb_string<40> __sym__0___45_6330205746161069079, fluidb_string<16> __sym__0__454031795908382231, fluidb_string<16> __sym__0___45_1352216126120980075, fluidb_string<13> __sym__0__8430936297466618964, fluidb_string<15> __sym__0___45_2353343762639317125) : sym__0___45_363497743297214640(__sym__0___45_363497743297214640), sym__0__631045785057377531(__sym__0__631045785057377531), sym__0___45_6330205746161069079(__sym__0___45_6330205746161069079), sym__0__454031795908382231(__sym__0__454031795908382231), sym__0___45_1352216126120980075(__sym__0___45_1352216126120980075), sym__0__8430936297466618964(__sym__0__8430936297466618964), sym__0___45_2353343762639317125(__sym__0___45_2353343762639317125)
  {
  }
  Record5() 
  {
  }
  std::string show() const{
    std::stringstream o;
    o << sym__0___45_363497743297214640 << " | " << arrToString(sym__0__631045785057377531) << " | " << arrToString(sym__0___45_6330205746161069079) << " | " << arrToString(sym__0__454031795908382231) << " | " << arrToString(sym__0___45_1352216126120980075) << " | " << arrToString(sym__0__8430936297466618964) << " | " << arrToString(sym__0___45_2353343762639317125);
    return o.str();
  }
  bool operator <(const Record5& otherRec) const{
    return (otherRec.sym__0___45_363497743297214640 < sym__0___45_363497743297214640 && (otherRec.sym__0__631045785057377531 < sym__0__631045785057377531 && (otherRec.sym__0___45_6330205746161069079 < sym__0___45_6330205746161069079 && (otherRec.sym__0__454031795908382231 < sym__0__454031795908382231 && (otherRec.sym__0___45_1352216126120980075 < sym__0___45_1352216126120980075 && (otherRec.sym__0__8430936297466618964 < sym__0__8430936297466618964 && otherRec.sym__0___45_2353343762639317125 < sym__0___45_2353343762639317125))))));
  }
  bool operator ==(const Record5& otherRec) const{
    return (otherRec.sym__0___45_363497743297214640 == sym__0___45_363497743297214640 && (otherRec.sym__0__631045785057377531 == sym__0__631045785057377531 && (otherRec.sym__0___45_6330205746161069079 == sym__0___45_6330205746161069079 && (otherRec.sym__0__454031795908382231 == sym__0__454031795908382231 && (otherRec.sym__0___45_1352216126120980075 == sym__0___45_1352216126120980075 && (otherRec.sym__0__8430936297466618964 == sym__0__8430936297466618964 && otherRec.sym__0___45_2353343762639317125 == sym__0___45_2353343762639317125))))));
  }
  bool operator !=(const Record5& otherRec) const{
    return (otherRec.sym__0___45_363497743297214640 != sym__0___45_363497743297214640 || (otherRec.sym__0__631045785057377531 != sym__0__631045785057377531 || (otherRec.sym__0___45_6330205746161069079 != sym__0___45_6330205746161069079 || (otherRec.sym__0__454031795908382231 != sym__0__454031795908382231 || (otherRec.sym__0___45_1352216126120980075 != sym__0___45_1352216126120980075 || (otherRec.sym__0__8430936297466618964 != sym__0__8430936297466618964 || otherRec.sym__0___45_2353343762639317125 != sym__0___45_2353343762639317125))))));
  }
  unsigned sym__0___45_363497743297214640;
  fluidb_string<25> sym__0__631045785057377531;
  fluidb_string<40> sym__0___45_6330205746161069079;
  fluidb_string<16> sym__0__454031795908382231;
  fluidb_string<16> sym__0___45_1352216126120980075;
  fluidb_string<13> sym__0__8430936297466618964;
  fluidb_string<15> sym__0___45_2353343762639317125;
 private:
};


class Record1 {
 public:
  Record1(unsigned __sym__0___45_9117911789383871612, fluidb_string<25> __sym__0___45_1547112764757372609, fluidb_string<40> __sym__0___45_8663957751614366179, fluidb_string<16> __sym__0__1466641425010216931, fluidb_string<16> __sym__0__3672857626658041553, fluidb_string<13> __sym__0___45_3362440237381592032, fluidb_string<15> __sym__0___45_6631364176934158657) : sym__0___45_9117911789383871612(__sym__0___45_9117911789383871612), sym__0___45_1547112764757372609(__sym__0___45_1547112764757372609), sym__0___45_8663957751614366179(__sym__0___45_8663957751614366179), sym__0__1466641425010216931(__sym__0__1466641425010216931), sym__0__3672857626658041553(__sym__0__3672857626658041553), sym__0___45_3362440237381592032(__sym__0___45_3362440237381592032), sym__0___45_6631364176934158657(__sym__0___45_6631364176934158657)
  {
  }
  Record1() 
  {
  }
  std::string show() const{
    std::stringstream o;
    o << sym__0___45_9117911789383871612 << " | " << arrToString(sym__0___45_1547112764757372609) << " | " << arrToString(sym__0___45_8663957751614366179) << " | " << arrToString(sym__0__1466641425010216931) << " | " << arrToString(sym__0__3672857626658041553) << " | " << arrToString(sym__0___45_3362440237381592032) << " | " << arrToString(sym__0___45_6631364176934158657);
    return o.str();
  }
  bool operator <(const Record1& otherRec) const{
    return (otherRec.sym__0___45_9117911789383871612 < sym__0___45_9117911789383871612 && (otherRec.sym__0___45_1547112764757372609 < sym__0___45_1547112764757372609 && (otherRec.sym__0___45_8663957751614366179 < sym__0___45_8663957751614366179 && (otherRec.sym__0__1466641425010216931 < sym__0__1466641425010216931 && (otherRec.sym__0__3672857626658041553 < sym__0__3672857626658041553 && (otherRec.sym__0___45_3362440237381592032 < sym__0___45_3362440237381592032 && otherRec.sym__0___45_6631364176934158657 < sym__0___45_6631364176934158657))))));
  }
  bool operator ==(const Record1& otherRec) const{
    return (otherRec.sym__0___45_9117911789383871612 == sym__0___45_9117911789383871612 && (otherRec.sym__0___45_1547112764757372609 == sym__0___45_1547112764757372609 && (otherRec.sym__0___45_8663957751614366179 == sym__0___45_8663957751614366179 && (otherRec.sym__0__1466641425010216931 == sym__0__1466641425010216931 && (otherRec.sym__0__3672857626658041553 == sym__0__3672857626658041553 && (otherRec.sym__0___45_3362440237381592032 == sym__0___45_3362440237381592032 && otherRec.sym__0___45_6631364176934158657 == sym__0___45_6631364176934158657))))));
  }
  bool operator !=(const Record1& otherRec) const{
    return (otherRec.sym__0___45_9117911789383871612 != sym__0___45_9117911789383871612 || (otherRec.sym__0___45_1547112764757372609 != sym__0___45_1547112764757372609 || (otherRec.sym__0___45_8663957751614366179 != sym__0___45_8663957751614366179 || (otherRec.sym__0__1466641425010216931 != sym__0__1466641425010216931 || (otherRec.sym__0__3672857626658041553 != sym__0__3672857626658041553 || (otherRec.sym__0___45_3362440237381592032 != sym__0___45_3362440237381592032 || otherRec.sym__0___45_6631364176934158657 != sym__0___45_6631364176934158657))))));
  }
  unsigned sym__0___45_9117911789383871612;
  fluidb_string<25> sym__0___45_1547112764757372609;
  fluidb_string<40> sym__0___45_8663957751614366179;
  fluidb_string<16> sym__0__1466641425010216931;
  fluidb_string<16> sym__0__3672857626658041553;
  fluidb_string<13> sym__0___45_3362440237381592032;
  fluidb_string<15> sym__0___45_6631364176934158657;
 private:
};


class CallableClass33 {
 public:
  bool operator()(const Record26& record32) {
    return (("MFGR#2221" <= record32.sym__0___45_4574956228592531724) && (record32.sym__0___45_4574956228592531724 <= "MFGR#2228"));
  }
  typedef bool Codomain;
  typedef Record26 Domain0;
 private:
};


class CallableClass22 {
 public:
  Record9 operator()(const Record16& record21) {
    return Record9(record21.sym__0__2037864888707786451);
  }
  typedef Record9 Codomain;
  typedef Record16 Domain0;
 private:
};


class CallableClass11 {
 public:
  Record9 operator()(const Record5& record10) {
    return Record9(record10.sym__0___45_363497743297214640);
  }
  typedef Record9 Codomain;
  typedef Record5 Domain0;
 private:
};


class CallableClass20 {
 public:
  Record9 operator()(const Record7& record19) {
    return Record9(record19.sym__0___45_5372342932688804766);
  }
  typedef Record9 Codomain;
  typedef Record7 Domain0;
 private:
};


class CallableClass2 {
 public:
  bool operator()(const Record1& record0) {
    return like(record0.sym__0___45_3362440237381592032, "ASIA");
  }
  typedef bool Codomain;
  typedef Record1 Domain0;
 private:
};


class CallableClass8 {
 public:
  Record7 operator()(const Record5& record3, const Record6& record4) {
    return Record7(record3.sym__0___45_363497743297214640, record3.sym__0__631045785057377531, record3.sym__0___45_6330205746161069079, record3.sym__0__454031795908382231, record3.sym__0___45_1352216126120980075, record3.sym__0__8430936297466618964, record3.sym__0___45_2353343762639317125, record4.sym__0___45_7574074018531922998, record4.sym__0__1125464382786937920, record4.sym__0___45_8257174981563598792, record4.sym__0__957746932829998382, record4.sym__0__934137931677987637, record4.sym__0___45_7332894783442362324, record4.sym__0__8974811218372806325, record4.sym__0___45_5217562530132451785, record4.sym__0__7851147553396318904, record4.sym__0___45_4975505511391694456, record4.sym__0___45_7249986409969561654, record4.sym__0__4671626969570181580, record4.sym__0___45_3666121704283105054, record4.sym__0__5495011930072844518, record4.sym__0___45_4423447118092167055, record4.sym__0___45_1608082021099887893, record4.sym__0__1584187396639360899);
  }
  typedef Record7 Codomain;
  typedef Record5 Domain0;
  typedef Record6 Domain1;
 private:
};


class CallableClass42 {
 public:
  Record41 operator()(const Record37& record34) {
    return Record41(record34.sym__0__7928058280817873233, record34.sym__0__8808022150768814575);
  }
  typedef Record41 Codomain;
  typedef Record37 Domain0;
 private:
};


class CallableClass44 {
 public:
  Record41 operator()(const Record35& record43) {
    return Record41(record43.sym__0___45_2114395819171341319, record43.sym__0__8560746496208341995);
  }
  typedef Record41 Codomain;
  typedef Record35 Domain0;
 private:
};


class CallableClass27 {
 public:
  Record26 operator()(const Record17& record23, const Record25& record24) {
    return Record26(record23.sym__0__1700144450823265023, record23.sym__0__642977477037249040, record23.sym__0___45_4128377972278795822, record23.sym__0___45_5088627304821687252, record23.sym__0___45_4948625537612330786, record23.sym__0___45_9194700948435084701, record23.sym__0___45_2335925802980201584, record23.sym__0__8952961796666569484, record23.sym__0___45_764958528451264714, record23.sym__0___45_1817156327375219010, record23.sym__0___45_2837638767689209768, record23.sym__0___45_2981394887932269865, record23.sym__0___45_3207638480786881318, record23.sym__0___45_2706668038305292969, record23.sym__0___45_5698288034649371459, record23.sym__0___45_4860327901106131906, record23.sym__0__4990602831923261550, record23.sym__0__1941197998689785612, record23.sym__0__8920978217467339962, record23.sym__0__2290947992840979092, record23.sym__0__7968803792053807648, record23.sym__0___45_648214588708582661, record23.sym__0__5240005983315163865, record23.sym__0__8676547963641831009, record23.sym__0__7098358135655077312, record23.sym__0___45_3236172823121798352, record23.sym__0__209296758379513054, record23.sym__0__990102210371531505, record23.sym__0__6731021262741660999, record23.sym__0__43383544609224961, record23.sym__0___45_1451536826369255544, record23.sym__0___45_3626731045154418301, record23.sym__0__6266038698953764136, record23.sym__0___45_3178257250902948896, record23.sym__0___45_1707432467122892938, record23.sym__0__6803837608073687569, record23.sym__0__3019318186977723140, record23.sym__0___45_3182244727465674548, record23.sym__0__6970778392668530317, record23.sym__0__1291675427782851845, record23.sym__0___45_7095393819436573425, record24.sym__0__7178003535380331304, record24.sym__0___45_7020257275696364520, record24.sym__0___45_6307179734719967033, record24.sym__0__4568304886257136061, record24.sym__0___45_6291097039630000265, record24.sym__0__551327770031967739, record24.sym__0__3827696365022297353, record24.sym__0___45_1779543743759935870, record24.sym__0__3752090135924368535);
  }
  typedef Record26 Codomain;
  typedef Record17 Domain0;
  typedef Record25 Domain1;
 private:
};


class CallableClass13 {
 public:
  Record9 operator()(const Record6& record12) {
    return Record9(record12.sym__0__934137931677987637);
  }
  typedef Record9 Codomain;
  typedef Record6 Domain0;
 private:
};


class CallableClass40 {
 public:
  Record35 operator()(const Record37& record34) {
    return Record35(vAggrSum36(record34.sym__0___45_1874278765651523026), vAggrFirst38(record34.sym__0__7928058280817873233), vAggrFirst39(record34.sym__0__8808022150768814575));
  }
  typedef Record35 Codomain;
  typedef Record37 Domain0;
 private:
  AggrSum<unsigned> vAggrSum36;
  AggrFirst<unsigned> vAggrFirst38;
  AggrFirst<fluidb_string<10>> vAggrFirst39;
};


class CallableClass31 {
 public:
  Record9 operator()(const Record25& record30) {
    return Record9(record30.sym__0__7178003535380331304);
  }
  typedef Record9 Codomain;
  typedef Record25 Domain0;
 private:
};


class CallableClass29 {
 public:
  Record9 operator()(const Record17& record28) {
    return Record9(record28.sym__0___45_2837638767689209768);
  }
  typedef Record9 Codomain;
  typedef Record17 Domain0;
 private:
};


class CallableClass18 {
 public:
  Record17 operator()(const Record7& record14, const Record16& record15) {
    return Record17(record14.sym__0___45_7367870026852124681, record14.sym__0___45_7301250353451073160, record14.sym__0__6333202735368284522, record14.sym__0___45_5978492853817893740, record14.sym__0___45_3430714039653452778, record14.sym__0___45_2191735582705769493, record14.sym__0___45_1866236838643760392, record14.sym__0___45_7453670619638963596, record14.sym__0___45_108209078565278210, record14.sym__0__3871475115574718198, record14.sym__0___45_4573831101953076432, record14.sym__0__3432655185311562079, record14.sym__0___45_5372342932688804766, record14.sym__0___45_4331139221161405985, record14.sym__0__4961402864413145749, record14.sym__0___45_7611369938204918666, record14.sym__0__2252083309274964230, record14.sym__0___45_1365217996402033036, record14.sym__0___45_2939512557126364862, record14.sym__0___45_9115604381054430228, record14.sym__0__2094672257850693352, record14.sym__0__3109377025976382355, record14.sym__0___45_2361816708944612479, record14.sym__0__1562977940077399865, record15.sym__0__2037864888707786451, record15.sym__0__8533656712666151747, record15.sym__0__646314041574508429, record15.sym__0__6064137978327902054, record15.sym__0__3754157776500852496, record15.sym__0__6284345160241949046, record15.sym__0___45_773692805971570325, record15.sym__0___45_8399474032083007524, record15.sym__0___45_2038947427357444789, record15.sym__0__6071994954612827827, record15.sym__0__7742515703067448213, record15.sym__0__5201219213304227654, record15.sym__0___45_5896625796158057241, record15.sym__0___45_1108504872221226081, record15.sym__0__1055103969674359346, record15.sym__0__9115626546918942554, record15.sym__0___45_6850413444013389848);
  }
  typedef Record17 Codomain;
  typedef Record7 Domain0;
  typedef Record16 Domain1;
 private:
};






int main() {
  // ForwardTrigger: (Just 
  //   (Right 
  //     [
  //      QSel 
  //         (P0 
  //           (R2 RLike 
  //               (R0 (E0 (ESym "s_region"))) 
  //               (R0 (E0 (EString "ASIA")))))
  std::cout << "ForwardTrigger: (Just \n  (Right \n    [\n     QSel \n        (P0 \n          (R2 RLike \n              (R0 (E0 (ESym \"s_region\"))) \n              (R0 (E0 (EString \"ASIA\")))))\n    ]))" << std::endl;
  {
    auto operation = mkSelect<CallableClass2>(Just<const std::string>("/tmp/fluidb_store/data26.dat"), Just<const std::string>("/tmp/fluidb_store/data27.dat"), "/run/user/1000/fluidb-data/supplier.dat");
    operation.run();
    operation.print_output(10);
  }
  // ForwardTrigger: (Just 
  //   (Left 
  //     [
  //      QJoin 
  //         (P0 
  //           (R2 REq 
  //               (R0 (E0 (ESym "lo_suppkey"))) 
  //               (R0 (E0 (ESym "s_suppkey")))))
  std::cout << "ForwardTrigger: (Just \n  (Left \n    [\n     QJoin \n        (P0 \n          (R2 REq \n              (R0 (E0 (ESym \"lo_suppkey\"))) \n              (R0 (E0 (ESym \"s_suppkey\")))))\n    ]))" << std::endl;
  {
    auto operation = mkEquiJoin<CallableClass11, CallableClass13, CallableClass8>(Just<const std::string>("/tmp/fluidb_store/data24.dat"), Just<const std::string>("/tmp/fluidb_store/data28.dat"), Just<const std::string>("/tmp/fluidb_store/data29.dat"), "/tmp/fluidb_store/data26.dat", "/run/user/1000/fluidb-data/lineorder.dat");
    operation.run();
    operation.print_output(10);
  }
  // ForwardTrigger: (Just 
  //   (Left 
  //     [
  //      QJoin 
  //         (P0 
  //           (R2 REq 
  //               (R0 (E0 (ESym "lo_orderdate"))) 
  //               (R0 (E0 (ESym "d_datekey")))))
  std::cout << "ForwardTrigger: (Just \n  (Left \n    [\n     QJoin \n        (P0 \n          (R2 REq \n              (R0 (E0 (ESym \"lo_orderdate\"))) \n              (R0 (E0 (ESym \"d_datekey\")))))\n    ]))" << std::endl;
  {
    auto operation = mkEquiJoin<CallableClass20, CallableClass22, CallableClass18>(Just<const std::string>("/tmp/fluidb_store/data22.dat"), Just<const std::string>("/tmp/fluidb_store/data32.dat"), Just<const std::string>("/tmp/fluidb_store/data33.dat"), "/tmp/fluidb_store/data24.dat", "/run/user/1000/fluidb-data/date.dat");
    operation.run();
    operation.print_output(10);
  }
  // ForwardTrigger: (Just 
  //   (Left 
  //     [
  //      QJoin 
  //         (P0 
  //           (R2 REq 
  //               (R0 (E0 (ESym "lo_partkey"))) 
  //               (R0 (E0 (ESym "p_partkey")))))
  std::cout << "ForwardTrigger: (Just \n  (Left \n    [\n     QJoin \n        (P0 \n          (R2 REq \n              (R0 (E0 (ESym \"lo_partkey\"))) \n              (R0 (E0 (ESym \"p_partkey\")))))\n    ]))" << std::endl;
  {
    auto operation = mkEquiJoin<CallableClass29, CallableClass31, CallableClass27>(Just<const std::string>("/tmp/fluidb_store/data37.dat"), Just<const std::string>("/tmp/fluidb_store/data36.dat"), Just<const std::string>("/tmp/fluidb_store/data38.dat"), "/tmp/fluidb_store/data22.dat", "/run/user/1000/fluidb-data/part.dat");
    operation.run();
    operation.print_output(10);
  }
  // Delete: (S 
  //   (P1 
  //     PNot 
  //     (P0 
  //       (R2 RLike (R0 (E0 (ESym "s_region"))) (R0 (E0 (EString "ASIA")))))) 
  std::cout << "Delete: N27" << std::endl;
  deleteFile("/tmp/fluidb_store/data27.dat");
  // Delete: (Q2 
  //   (QLeftAntijoin 
  //     (P0 
  //       (R2 REq 
  //           (R0 (E0 (ESym "lo_suppkey"))) 
  //           (R0 (E0 (ESym "s_suppkey")))))) 
  //   (S 
  //     (P0 
  //       (R2 RLike (R0 (E0 (ESym "s_region"))) (R0 (E0 (EString "ASIA"))))) 
  //     (Q0 (TSymbol "supplier"))) 
  std::cout << "Delete: N28" << std::endl;
  deleteFile("/tmp/fluidb_store/data28.dat");
  std::cout << "Delete: N0" << std::endl;
  deleteFile("/run/user/1000/fluidb-data/lineorder.dat");
  // Delete: (S (P0 (R2 RLike (R0 (E0 (ESym "s_region"))) (R0 (E0 (EString "ASIA"))))) 
  std::cout << "Delete: N26" << std::endl;
  deleteFile("/tmp/fluidb_store/data26.dat");
  // Delete: (Q2 
  //   (QLeftAntijoin 
  //     (P0 
  //       (R2 REq 
  //           (R0 (E0 (ESym "lo_orderdate"))) 
  //           (R0 (E0 (ESym "d_datekey")))))) 
  //   (J 
  //     (P0 
  //       (R2 REq 
  //           (R0 (E0 (ESym "lo_suppkey"))) 
  //           (R0 (E0 (ESym "s_suppkey"))))) 
  //     (S 
  //       (P0 
  //         (R2 RLike 
  //             (R0 (E0 (ESym "s_region"))) 
  //             (R0 (E0 (EString "ASIA"))))) 
  //       (Q0 (TSymbol "supplier"))) 
  //     (Q0 (TSymbol "lineorder"))) 
  std::cout << "Delete: N32" << std::endl;
  deleteFile("/tmp/fluidb_store/data32.dat");
  // Delete: (Q2 
  //   (QRightAntijoin 
  //     (P0 
  //       (R2 REq 
  //           (R0 (E0 (ESym "lo_orderdate"))) 
  //           (R0 (E0 (ESym "d_datekey")))))) 
  //   (J 
  //     (P0 
  //       (R2 REq 
  //           (R0 (E0 (ESym "lo_suppkey"))) 
  //           (R0 (E0 (ESym "s_suppkey"))))) 
  //     (S 
  //       (P0 
  //         (R2 RLike 
  //             (R0 (E0 (ESym "s_region"))) 
  //             (R0 (E0 (EString "ASIA"))))) 
  //       (Q0 (TSymbol "supplier"))) 
  //     (Q0 (TSymbol "lineorder"))) 
  std::cout << "Delete: N33" << std::endl;
  deleteFile("/tmp/fluidb_store/data33.dat");
  // Delete: (Q2 
  //   (QLeftAntijoin 
  //     (P0 
  //       (R2 REq 
  //           (R0 (E0 (ESym "lo_partkey"))) 
  //           (R0 (E0 (ESym "p_partkey")))))) 
  //   (J 
  //     (P0 
  //       (R2 REq 
  //           (R0 (E0 (ESym "lo_orderdate"))) 
  //           (R0 (E0 (ESym "d_datekey"))))) 
  //     (S 
  //       (P0 
  //         (R2 RLike 
  //             (R0 (E0 (ESym "s_region"))) 
  //             (R0 (E0 (EString "ASIA"))))) 
  //       (J 
  //         (P0 
  //           (R2 REq 
  //               (R0 (E0 (ESym "lo_suppkey"))) 
  //               (R0 (E0 (ESym "s_suppkey"))))) 
  //         (Q0 (TSymbol "supplier")) 
  //         (Q0 (TSymbol "lineorder")))) 
  //     (Q0 (TSymbol "date"))) 
  std::cout << "Delete: N36" << std::endl;
  deleteFile("/tmp/fluidb_store/data36.dat");
  std::cout << "Delete: N2" << std::endl;
  deleteFile("/run/user/1000/fluidb-data/part.dat");
  // Delete: (S 
  //   (P0 (R2 RLike (R0 (E0 (ESym "s_region"))) (R0 (E0 (EString "ASIA"))))) 
  //   (J 
  //     (P0 
  //       (R2 REq 
  //           (R0 (E0 (ESym "lo_orderdate"))) 
  //           (R0 (E0 (ESym "d_datekey"))))) 
  //     (J 
  //       (P0 
  //         (R2 REq 
  //             (R0 (E0 (ESym "lo_suppkey"))) 
  //             (R0 (E0 (ESym "s_suppkey"))))) 
  //       (Q0 (TSymbol "supplier")) 
  //       (Q0 (TSymbol "lineorder"))) 
  std::cout << "Delete: N22" << std::endl;
  deleteFile("/tmp/fluidb_store/data22.dat");
  // ForwardTrigger: (Just 
  //   (Right 
  //     [
  //      QSel 
  //         (P2 
  //           PAnd 
  //           (P0 
  //             (R2 RLe 
  //                 (R0 (E0 (EString "MFGR#2221"))) 
  //                 (R0 (E0 (ESym "p_brand1"))))) 
  //           (P0 
  //             (R2 RLe 
  //                 (R0 (E0 (ESym "p_brand1"))) 
  //                 (R0 (E0 (EString "MFGR#2228"))))))
  std::cout << "ForwardTrigger: (Just \n  (Right \n    [\n     QSel \n        (P2 \n          PAnd \n          (P0 \n            (R2 RLe \n                (R0 (E0 (EString \"MFGR#2221\"))) \n                (R0 (E0 (ESym \"p_brand1\"))))) \n          (P0 \n            (R2 RLe \n                (R0 (E0 (ESym \"p_brand1\"))) \n                (R0 (E0 (EString \"MFGR#2228\"))))))\n    ]))" << std::endl;
  {
    auto operation = mkSelect<CallableClass33>(Just<const std::string>("/tmp/fluidb_store/data20.dat"), Just<const std::string>("/tmp/fluidb_store/data41.dat"), "/tmp/fluidb_store/data37.dat");
    operation.run();
    operation.print_output(10);
  }
  // ForwardTrigger: (Just 
  //   (Right 
  //     [
  //      QGroup 
  //         [(ESym "tmpSym0",E0 (NAggr AggrSum (E0 (ESym "lo_revenue")))),
  //          (ESym "d_year",E0 (NAggr AggrFirst (E0 (ESym "d_year")))),
  //          (ESym "p_brand1",E0 (NAggr AggrFirst (E0 (ESym "p_brand1"))))] 
  //         [E0 (ESym "d_year"),E0 (ESym "p_brand1")]
  std::cout << "ForwardTrigger: (Just \n  (Right \n    [\n     QGroup \n        [(ESym \"tmpSym0\",E0 (NAggr AggrSum (E0 (ESym \"lo_revenue\")))),\n         (ESym \"d_year\",E0 (NAggr AggrFirst (E0 (ESym \"d_year\")))),\n         (ESym \"p_brand1\",E0 (NAggr AggrFirst (E0 (ESym \"p_brand1\"))))] \n        [E0 (ESym \"d_year\"),E0 (ESym \"p_brand1\")]\n    ]))" << std::endl;
  {
    auto operation = mkAggregation<CallableClass40, CallableClass42>(Just<const std::string>("/tmp/fluidb_store/data60.dat"), Just<const std::string>("/tmp/fluidb_store/data20.dat"), "/tmp/fluidb_store/data20.dat");
    operation.run();
    operation.print_output(10);
  }
  std::cout << "ForwardTrigger: (Just (Right [QSort [E0 (ESym \"d_year\"),E0 (ESym \"p_brand1\")]]))" << std::endl;
  {
    auto operation = mkSort<CallableClass44>(Just<const std::string>("/tmp/fluidb_store/data61.dat"), Just<const std::string>("/tmp/fluidb_store/data60.dat"), "/tmp/fluidb_store/data60.dat");
    operation.run();
    operation.print_output(10);
  }
  report_counters();
  return 0;
}
